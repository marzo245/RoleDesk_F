/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/agora-token";
exports.ids = ["vendor-chunks/agora-token"];
exports.modules = {

/***/ "(action-browser)/./node_modules/agora-token/index.js":
/*!*******************************************!*\
  !*** ./node_modules/agora-token/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = {\n  RtcTokenBuilder: (__webpack_require__(/*! ./src/RtcTokenBuilder2 */ \"(action-browser)/./node_modules/agora-token/src/RtcTokenBuilder2.js\").RtcTokenBuilder),\n  RtcRole: (__webpack_require__(/*! ./src/RtcTokenBuilder2 */ \"(action-browser)/./node_modules/agora-token/src/RtcTokenBuilder2.js\").Role),\n  RtmTokenBuilder: (__webpack_require__(/*! ./src/RtmTokenBuilder2 */ \"(action-browser)/./node_modules/agora-token/src/RtmTokenBuilder2.js\").RtmTokenBuilder),\n  EducationTokenBuilder: (__webpack_require__(/*! ./src/EducationTokenBuilder */ \"(action-browser)/./node_modules/agora-token/src/EducationTokenBuilder.js\").EducationTokenBuilder),\n  FpaTokenBuilder: (__webpack_require__(/*! ./src/FpaTokenBuilder */ \"(action-browser)/./node_modules/agora-token/src/FpaTokenBuilder.js\").FpaTokenBuilder),\n  ChatTokenBuilder: (__webpack_require__(/*! ./src/ChatTokenBuilder */ \"(action-browser)/./node_modules/agora-token/src/ChatTokenBuilder.js\").ChatTokenBuilder)\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hZ29yYS10b2tlbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLG1CQUFtQiwwSUFBaUQ7QUFDcEUsV0FBVywrSEFBc0M7QUFDakQsbUJBQW1CLDBJQUFpRDtBQUNwRSx5QkFBeUIsMEpBQTREO0FBQ3JGLG1CQUFtQix3SUFBZ0Q7QUFDbkUsb0JBQW9CLDJJQUFrRDtBQUN0RSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hZ29yYS10b2tlbi9pbmRleC5qcz9mODZlIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuICBSdGNUb2tlbkJ1aWxkZXI6IHJlcXVpcmUoJy4vc3JjL1J0Y1Rva2VuQnVpbGRlcjInKS5SdGNUb2tlbkJ1aWxkZXIsXG4gIFJ0Y1JvbGU6IHJlcXVpcmUoJy4vc3JjL1J0Y1Rva2VuQnVpbGRlcjInKS5Sb2xlLFxuICBSdG1Ub2tlbkJ1aWxkZXI6IHJlcXVpcmUoJy4vc3JjL1J0bVRva2VuQnVpbGRlcjInKS5SdG1Ub2tlbkJ1aWxkZXIsXG4gIEVkdWNhdGlvblRva2VuQnVpbGRlcjogcmVxdWlyZSgnLi9zcmMvRWR1Y2F0aW9uVG9rZW5CdWlsZGVyJykuRWR1Y2F0aW9uVG9rZW5CdWlsZGVyLFxuICBGcGFUb2tlbkJ1aWxkZXI6IHJlcXVpcmUoJy4vc3JjL0ZwYVRva2VuQnVpbGRlcicpLkZwYVRva2VuQnVpbGRlcixcbiAgQ2hhdFRva2VuQnVpbGRlcjogcmVxdWlyZSgnLi9zcmMvQ2hhdFRva2VuQnVpbGRlcicpLkNoYXRUb2tlbkJ1aWxkZXJcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/agora-token/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/agora-token/src/AccessToken2.js":
/*!******************************************************!*\
  !*** ./node_modules/agora-token/src/AccessToken2.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var crypto = __webpack_require__(/*! crypto */ \"crypto\")\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\")\nconst VERSION_LENGTH = 3\nconst APP_ID_LENGTH = 32\n\nconst getVersion = () => {\n    return \"007\"\n}\n\nclass Service {\n    constructor(service_type) {\n        this.__type = service_type\n        this.__privileges = {}\n    }\n\n    __pack_type() {\n        let buf = new ByteBuf()\n        buf.putUint16(this.__type)\n        return buf.pack()\n    }\n\n    __pack_privileges() {\n        let buf = new ByteBuf()\n        buf.putTreeMapUInt32(this.__privileges)\n        return buf.pack()\n    }\n\n    service_type() {\n        return this.__type\n    }\n\n    add_privilege(privilege, expire) {\n        this.__privileges[privilege] = expire\n    }\n\n    pack() {\n        return Buffer.concat([this.__pack_type(), this.__pack_privileges()])\n    }\n\n    unpack(buffer) {\n        let bufReader = new ReadByteBuf(buffer)\n        this.__privileges = bufReader.getTreeMapUInt32()\n        return bufReader\n    }\n}\n\nconst kRtcServiceType = 1\n\nclass ServiceRtc extends Service {\n    constructor(channel_name, uid) {\n        super(kRtcServiceType)\n        this.__channel_name = channel_name\n        this.__uid = uid === 0 ? '' : `${uid}`\n    }\n\n    pack() {\n        let buffer = new ByteBuf()\n        buffer.putString(this.__channel_name).putString(this.__uid)\n        return Buffer.concat([super.pack(), buffer.pack()])\n    }\n\n    unpack(buffer) {\n        let bufReader = super.unpack(buffer)\n        this.__channel_name = bufReader.getString()\n        this.__uid = bufReader.getString()\n        return bufReader\n    }\n}\n\nServiceRtc.kPrivilegeJoinChannel = 1\nServiceRtc.kPrivilegePublishAudioStream = 2\nServiceRtc.kPrivilegePublishVideoStream = 3\nServiceRtc.kPrivilegePublishDataStream = 4\n\nconst kRtmServiceType = 2\n\nclass ServiceRtm extends Service {\n    constructor(user_id) {\n        super(kRtmServiceType)\n        this.__user_id = user_id || \"\"\n    }\n\n    pack() {\n        let buffer = new ByteBuf()\n        buffer.putString(this.__user_id)\n        return Buffer.concat([super.pack(), buffer.pack()])\n    }\n\n    unpack(buffer) {\n        let bufReader = super.unpack(buffer)\n        this.__user_id = bufReader.getString()\n        return bufReader\n    }\n}\n\nServiceRtm.kPrivilegeLogin = 1\n\n\nconst kFpaServiceType = 4\n\nclass ServiceFpa extends Service {\n    constructor() {\n        super(kFpaServiceType)\n    }\n\n    pack() {\n        return super.pack()\n    }\n\n    unpack(buffer) {\n        let bufReader = super.unpack(buffer)\n        return bufReader\n    }\n}\n\nServiceFpa.kPrivilegeLogin = 1\n\n\nconst kChatServiceType = 5\n\nclass ServiceChat extends Service {\n    constructor(user_id) {\n        super(kChatServiceType)\n        this.__user_id = user_id || \"\"\n    }\n\n    pack() {\n        let buffer = new ByteBuf()\n        buffer.putString(this.__user_id)\n        return Buffer.concat([super.pack(), buffer.pack()])\n    }\n\n    unpack(buffer) {\n        let bufReader = super.unpack(buffer)\n        this.__user_id = bufReader.getString()\n        return bufReader\n    }\n}\n\nServiceChat.kPrivilegeUser = 1\nServiceChat.kPrivilegeApp = 2\n\nconst kEducationServiceType = 7\n\nclass ServiceEducation extends Service {\n    constructor(roomUuid, userUuid, role) {\n        super(kEducationServiceType)\n        this.__room_uuid = roomUuid || \"\"\n        this.__user_uuid = userUuid || \"\"\n        this.__role = role || -1\n    }\n\n    pack() {\n        let buffer = new ByteBuf()\n        buffer.putString(this.__room_uuid)\n        buffer.putString(this.__user_uuid)\n        buffer.putInt16(this.__role)\n        return Buffer.concat([super.pack(), buffer.pack()])\n    }\n\n    unpack(buffer) {\n        let bufReader = super.unpack(buffer)\n        this.__room_uuid = bufReader.getString()\n        this.__user_uuid = bufReader.getString()\n        this.__role = bufReader.getInt16()\n        return bufReader\n    }\n}\n\nServiceEducation.PRIVILEGE_ROOM_USER = 1\nServiceEducation.PRIVILEGE_USER = 2\nServiceEducation.PRIVILEGE_APP = 3\n\n\nclass AccessToken2 {\n    constructor(appId, appCertificate, issueTs, expire) {\n        this.appId = appId\n        this.appCertificate = appCertificate\n        this.issueTs = issueTs || new Date().getTime() / 1000\n        this.expire = expire\n        // salt ranges in (1, 99999999)\n        this.salt = Math.floor(Math.random() * (99999999)) + 1\n        this.services = {}\n    }\n\n    __signing() {\n        let signing = encodeHMac(new ByteBuf().putUint32(this.issueTs).pack(), this.appCertificate)\n        signing = encodeHMac(new ByteBuf().putUint32(this.salt).pack(), signing)\n        return signing\n    }\n\n    __build_check() {\n        let is_uuid = (data) => {\n            if (data.length !== APP_ID_LENGTH) {\n                return false\n            }\n            let buf = Buffer.from(data, 'hex')\n            return !!buf\n        }\n\n        const {appId, appCertificate, services} = this\n        if (!is_uuid(appId) || !is_uuid(appCertificate)) {\n            return false\n        }\n\n        if (Object.keys(services).length === 0) {\n            return false\n        }\n        return true\n    }\n\n    add_service(service) {\n        this.services[service.service_type()] = service\n    }\n\n    build() {\n        if (!this.__build_check()) {\n            return \"\"\n        }\n\n        let signing = this.__signing()\n        let signing_info = new ByteBuf().putString(this.appId)\n            .putUint32(this.issueTs)\n            .putUint32(this.expire)\n            .putUint32(this.salt)\n            .putUint16(Object.keys(this.services).length).pack()\n        Object.values(this.services).forEach(service => {\n            signing_info = Buffer.concat([signing_info, service.pack()])\n        })\n\n        let signature = encodeHMac(signing, signing_info)\n        let content = Buffer.concat([new ByteBuf().putString(signature).pack(), signing_info])\n        let compressed = zlib.deflateSync(content)\n        return `${getVersion()}${Buffer.from(compressed).toString('base64')}`\n    }\n\n    from_string(origin_token) {\n        let origin_version = origin_token.substring(0, VERSION_LENGTH)\n        if (origin_version !== getVersion()) {\n            return false\n        }\n\n        let origin_content = origin_token.substring(VERSION_LENGTH, origin_token.length)\n        let buffer = zlib.inflateSync(new Buffer(origin_content, 'base64'))\n        let bufferReader = new ReadByteBuf(buffer)\n\n        let signature = bufferReader.getString()\n        this.appId = bufferReader.getString()\n        this.issueTs = bufferReader.getUint32()\n        this.expire = bufferReader.getUint32()\n        this.salt = bufferReader.getUint32()\n        let service_count = bufferReader.getUint16()\n\n        let remainBuf = bufferReader.pack()\n        for (let i = 0; i < service_count; i++) {\n            let bufferReaderService = new ReadByteBuf(remainBuf)\n            let service_type = bufferReaderService.getUint16()\n            let service = new AccessToken2.kServices[service_type]()\n            remainBuf = service.unpack(bufferReaderService.pack()).pack()\n            this.services[service_type] = service\n        }\n    }\n}\n\nvar encodeHMac = function (key, message) {\n    return crypto.createHmac('sha256', key).update(message).digest()\n}\n\nvar ByteBuf = function () {\n    var that = {\n        buffer: Buffer.alloc(1024)\n        , position: 0\n    }\n\n    that.buffer.fill(0)\n\n    that.pack = function () {\n        var out = Buffer.alloc(that.position)\n        that.buffer.copy(out, 0, 0, out.length)\n        return out\n    }\n\n    that.putUint16 = function (v) {\n        that.buffer.writeUInt16LE(v, that.position)\n        that.position += 2\n        return that\n    }\n\n    that.putUint32 = function (v) {\n        that.buffer.writeUInt32LE(v, that.position)\n        that.position += 4\n        return that\n    }\n    that.putInt32 = function (v) {\n        that.buffer.writeInt32LE(v, that.position)\n        that.position += 4\n        return that\n    }\n\n    that.putInt16 = function (v) {\n        that.buffer.writeInt16LE(v, that.position)\n        that.position += 2\n        return that\n    }\n\n    that.putBytes = function (bytes) {\n        that.putUint16(bytes.length)\n        bytes.copy(that.buffer, that.position)\n        that.position += bytes.length\n        return that\n    }\n\n    that.putString = function (str) {\n        return that.putBytes(Buffer.from(str))\n    }\n\n    that.putTreeMap = function (map) {\n        if (!map) {\n            that.putUint16(0)\n            return that\n        }\n\n        that.putUint16(Object.keys(map).length)\n        for (var key in map) {\n            that.putUint16(key)\n            that.putString(map[key])\n        }\n\n        return that\n    }\n\n    that.putTreeMapUInt32 = function (map) {\n        if (!map) {\n            that.putUint16(0)\n            return that\n        }\n\n        that.putUint16(Object.keys(map).length)\n        for (var key in map) {\n            that.putUint16(key)\n            that.putUint32(map[key])\n        }\n\n        return that\n    }\n\n    return that\n}\n\nvar ReadByteBuf = function (bytes) {\n    var that = {\n        buffer: bytes\n        , position: 0\n    }\n\n    that.getUint16 = function () {\n        var ret = that.buffer.readUInt16LE(that.position)\n        that.position += 2\n        return ret\n    }\n\n    that.getUint32 = function () {\n        var ret = that.buffer.readUInt32LE(that.position)\n        that.position += 4\n        return ret\n    }\n\n    that.getInt16 = function () {\n        var ret = that.buffer.readUInt16LE(that.position)\n        that.position += 2\n        return ret\n    }\n\n    that.getString = function () {\n        var len = that.getUint16()\n\n        var out = Buffer.alloc(len)\n        that.buffer.copy(out, 0, that.position, (that.position + len))\n        that.position += len\n        return out\n    }\n\n    that.getTreeMapUInt32 = function () {\n        var map = {}\n        var len = that.getUint16()\n        for (var i = 0; i < len; i++) {\n            var key = that.getUint16()\n            var value = that.getUint32()\n            map[key] = value\n        }\n        return map\n    }\n\n    that.pack = function () {\n        let length = that.buffer.length\n        var out = Buffer.alloc(length)\n        that.buffer.copy(out, 0, that.position, length)\n        return out\n    }\n\n    return that\n}\n\nAccessToken2.kServices = {}\nAccessToken2.kServices[kRtcServiceType] = ServiceRtc\nAccessToken2.kServices[kRtmServiceType] = ServiceRtm\nAccessToken2.kServices[kFpaServiceType] = ServiceFpa\nAccessToken2.kServices[kChatServiceType] = ServiceChat\nAccessToken2.kServices[kEducationServiceType] = ServiceEducation\n\nmodule.exports = {\n    AccessToken2, ServiceRtc, ServiceRtm, ServiceFpa, ServiceChat, ServiceEducation,\n    kRtcServiceType, kRtmServiceType, kFpaServiceType, kChatServiceType, kEducationServiceType,\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/agora-token/src/AccessToken2.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/agora-token/src/ChatTokenBuilder.js":
/*!**********************************************************!*\
  !*** ./node_modules/agora-token/src/ChatTokenBuilder.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const AccessToken = (__webpack_require__(/*! ../src/AccessToken2 */ \"(action-browser)/./node_modules/agora-token/src/AccessToken2.js\").AccessToken2);\nconst ServiceChat = (__webpack_require__(/*! ../src/AccessToken2 */ \"(action-browser)/./node_modules/agora-token/src/AccessToken2.js\").ServiceChat);\n\nclass ChatTokenBuilder {\n    /**\n     * Build the Chat user token.\n     *\n     * @param appId The App ID issued to you by Agora. Apply for a new App ID from\n     * Agora Dashboard if it is missing from your kit. See Get an App ID.\n     * @param appCertificate Certificate of the application that you registered in\n     * the Agora Dashboard. See Get an App Certificate.\n     * @param userUuid The user's id, must be unique.\n     * @param expire represented by the number of seconds elapsed since now. If, for example, you want to access the\n     * Agora Service within 10 minutes after the token is generated, set expireTimestamp as 600(seconds).\n     * @return The chat user token.\n     */\n    static buildUserToken(appId, appCertificate, userUuid, expire) {\n        const token = new AccessToken(appId, appCertificate, null, expire);\n        const serviceChat = new ServiceChat(userUuid);\n        serviceChat.add_privilege(ServiceChat.kPrivilegeUser, expire);\n        token.add_service(serviceChat);\n        return token.build();\n    }\n\n    /**\n     * Build the Chat App token.\n     *\n     * @param appId The App ID issued to you by Agora. Apply for a new App ID from\n     * Agora Dashboard if it is missing from your kit. See Get an App ID.\n     * @param appCertificate Certificate of the application that you registered in\n     * the Agora Dashboard. See Get an App Certificate.\n     * @param expire represented by the number of seconds elapsed since now. If, for example, you want to access the\n     * Agora Service within 10 minutes after the token is generated, set expireTimestamp as 600(seconds).\n     * @return The chat App token.\n     */\n    static buildAppToken(appId, appCertificate, expire) {\n    \tconst token = new AccessToken(appId, appCertificate, null, expire);\n    \tconst serviceChat = new ServiceChat();\n    \tserviceChat.add_privilege(ServiceChat.kPrivilegeApp, expire);\n    \ttoken.add_service(serviceChat);\n    \treturn token.build();\n    }\n}\n\nexports.ChatTokenBuilder = ChatTokenBuilder;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hZ29yYS10b2tlbi9zcmMvQ2hhdFRva2VuQnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0IsZ0lBQTJDO0FBQy9ELG9CQUFvQiwrSEFBMEM7O0FBRTlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Fnb3JhLXRva2VuL3NyYy9DaGF0VG9rZW5CdWlsZGVyLmpzPzA4YjAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQWNjZXNzVG9rZW4gPSByZXF1aXJlKFwiLi4vc3JjL0FjY2Vzc1Rva2VuMlwiKS5BY2Nlc3NUb2tlbjI7XG5jb25zdCBTZXJ2aWNlQ2hhdCA9IHJlcXVpcmUoXCIuLi9zcmMvQWNjZXNzVG9rZW4yXCIpLlNlcnZpY2VDaGF0O1xuXG5jbGFzcyBDaGF0VG9rZW5CdWlsZGVyIHtcbiAgICAvKipcbiAgICAgKiBCdWlsZCB0aGUgQ2hhdCB1c2VyIHRva2VuLlxuICAgICAqXG4gICAgICogQHBhcmFtIGFwcElkIFRoZSBBcHAgSUQgaXNzdWVkIHRvIHlvdSBieSBBZ29yYS4gQXBwbHkgZm9yIGEgbmV3IEFwcCBJRCBmcm9tXG4gICAgICogQWdvcmEgRGFzaGJvYXJkIGlmIGl0IGlzIG1pc3NpbmcgZnJvbSB5b3VyIGtpdC4gU2VlIEdldCBhbiBBcHAgSUQuXG4gICAgICogQHBhcmFtIGFwcENlcnRpZmljYXRlIENlcnRpZmljYXRlIG9mIHRoZSBhcHBsaWNhdGlvbiB0aGF0IHlvdSByZWdpc3RlcmVkIGluXG4gICAgICogdGhlIEFnb3JhIERhc2hib2FyZC4gU2VlIEdldCBhbiBBcHAgQ2VydGlmaWNhdGUuXG4gICAgICogQHBhcmFtIHVzZXJVdWlkIFRoZSB1c2VyJ3MgaWQsIG11c3QgYmUgdW5pcXVlLlxuICAgICAqIEBwYXJhbSBleHBpcmUgcmVwcmVzZW50ZWQgYnkgdGhlIG51bWJlciBvZiBzZWNvbmRzIGVsYXBzZWQgc2luY2Ugbm93LiBJZiwgZm9yIGV4YW1wbGUsIHlvdSB3YW50IHRvIGFjY2VzcyB0aGVcbiAgICAgKiBBZ29yYSBTZXJ2aWNlIHdpdGhpbiAxMCBtaW51dGVzIGFmdGVyIHRoZSB0b2tlbiBpcyBnZW5lcmF0ZWQsIHNldCBleHBpcmVUaW1lc3RhbXAgYXMgNjAwKHNlY29uZHMpLlxuICAgICAqIEByZXR1cm4gVGhlIGNoYXQgdXNlciB0b2tlbi5cbiAgICAgKi9cbiAgICBzdGF0aWMgYnVpbGRVc2VyVG9rZW4oYXBwSWQsIGFwcENlcnRpZmljYXRlLCB1c2VyVXVpZCwgZXhwaXJlKSB7XG4gICAgICAgIGNvbnN0IHRva2VuID0gbmV3IEFjY2Vzc1Rva2VuKGFwcElkLCBhcHBDZXJ0aWZpY2F0ZSwgbnVsbCwgZXhwaXJlKTtcbiAgICAgICAgY29uc3Qgc2VydmljZUNoYXQgPSBuZXcgU2VydmljZUNoYXQodXNlclV1aWQpO1xuICAgICAgICBzZXJ2aWNlQ2hhdC5hZGRfcHJpdmlsZWdlKFNlcnZpY2VDaGF0LmtQcml2aWxlZ2VVc2VyLCBleHBpcmUpO1xuICAgICAgICB0b2tlbi5hZGRfc2VydmljZShzZXJ2aWNlQ2hhdCk7XG4gICAgICAgIHJldHVybiB0b2tlbi5idWlsZCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEJ1aWxkIHRoZSBDaGF0IEFwcCB0b2tlbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhcHBJZCBUaGUgQXBwIElEIGlzc3VlZCB0byB5b3UgYnkgQWdvcmEuIEFwcGx5IGZvciBhIG5ldyBBcHAgSUQgZnJvbVxuICAgICAqIEFnb3JhIERhc2hib2FyZCBpZiBpdCBpcyBtaXNzaW5nIGZyb20geW91ciBraXQuIFNlZSBHZXQgYW4gQXBwIElELlxuICAgICAqIEBwYXJhbSBhcHBDZXJ0aWZpY2F0ZSBDZXJ0aWZpY2F0ZSBvZiB0aGUgYXBwbGljYXRpb24gdGhhdCB5b3UgcmVnaXN0ZXJlZCBpblxuICAgICAqIHRoZSBBZ29yYSBEYXNoYm9hcmQuIFNlZSBHZXQgYW4gQXBwIENlcnRpZmljYXRlLlxuICAgICAqIEBwYXJhbSBleHBpcmUgcmVwcmVzZW50ZWQgYnkgdGhlIG51bWJlciBvZiBzZWNvbmRzIGVsYXBzZWQgc2luY2Ugbm93LiBJZiwgZm9yIGV4YW1wbGUsIHlvdSB3YW50IHRvIGFjY2VzcyB0aGVcbiAgICAgKiBBZ29yYSBTZXJ2aWNlIHdpdGhpbiAxMCBtaW51dGVzIGFmdGVyIHRoZSB0b2tlbiBpcyBnZW5lcmF0ZWQsIHNldCBleHBpcmVUaW1lc3RhbXAgYXMgNjAwKHNlY29uZHMpLlxuICAgICAqIEByZXR1cm4gVGhlIGNoYXQgQXBwIHRva2VuLlxuICAgICAqL1xuICAgIHN0YXRpYyBidWlsZEFwcFRva2VuKGFwcElkLCBhcHBDZXJ0aWZpY2F0ZSwgZXhwaXJlKSB7XG4gICAgXHRjb25zdCB0b2tlbiA9IG5ldyBBY2Nlc3NUb2tlbihhcHBJZCwgYXBwQ2VydGlmaWNhdGUsIG51bGwsIGV4cGlyZSk7XG4gICAgXHRjb25zdCBzZXJ2aWNlQ2hhdCA9IG5ldyBTZXJ2aWNlQ2hhdCgpO1xuICAgIFx0c2VydmljZUNoYXQuYWRkX3ByaXZpbGVnZShTZXJ2aWNlQ2hhdC5rUHJpdmlsZWdlQXBwLCBleHBpcmUpO1xuICAgIFx0dG9rZW4uYWRkX3NlcnZpY2Uoc2VydmljZUNoYXQpO1xuICAgIFx0cmV0dXJuIHRva2VuLmJ1aWxkKCk7XG4gICAgfVxufVxuXG5leHBvcnRzLkNoYXRUb2tlbkJ1aWxkZXIgPSBDaGF0VG9rZW5CdWlsZGVyO1xuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/agora-token/src/ChatTokenBuilder.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/agora-token/src/EducationTokenBuilder.js":
/*!***************************************************************!*\
  !*** ./node_modules/agora-token/src/EducationTokenBuilder.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const AccessToken = (__webpack_require__(/*! ../src/AccessToken2 */ \"(action-browser)/./node_modules/agora-token/src/AccessToken2.js\").AccessToken2)\nconst ServiceEducation = (__webpack_require__(/*! ../src/AccessToken2 */ \"(action-browser)/./node_modules/agora-token/src/AccessToken2.js\").ServiceEducation)\nconst ServiceRtm = (__webpack_require__(/*! ../src/AccessToken2 */ \"(action-browser)/./node_modules/agora-token/src/AccessToken2.js\").ServiceRtm)\nconst ServiceChat = (__webpack_require__(/*! ../src/AccessToken2 */ \"(action-browser)/./node_modules/agora-token/src/AccessToken2.js\").ServiceChat)\nconst md5 = __webpack_require__(/*! md5 */ \"(action-browser)/./node_modules/md5/md5.js\")\n\n\nclass EducationTokenBuilder {\n    /**\n     * build user room token\n     * @param appId             The App ID issued to you by Agora. Apply for a new App ID from\n     *                          Agora Dashboard if it is missing from your kit. See Get an App ID.\n     * @param appCertificate    Certificate of the application that you registered in\n     *                          the Agora Dashboard. See Get an App Certificate.\n     * @param roomUuid          The room's id, must be unique.\n     * @param userUuid          The user's id, must be unique.\n     * @param role              The user's role, such as 0(invisible), 1(teacher), 2(student), 3(assistant), 4(observer) etc.\n     * @param expire            represented by the number of seconds elapsed since now. If, for example, you want to access the\n     *                          Agora Service within 10 minutes after the token is generated, set expireTimestamp as 600(seconds).\n     * @return The education user room token.\n     */\n    static buildRoomUserToken(appId, appCertificate, roomUuid, userUuid, role, expire) {\n        let accessToken = new AccessToken(appId, appCertificate, 0, expire)\n\n        let chatUserId = md5(userUuid)\n        let eduService = new ServiceEducation(roomUuid, userUuid, role)\n        accessToken.add_service(eduService)\n\n        let rtmService = new ServiceRtm(userUuid)\n        rtmService.add_privilege(ServiceRtm.kPrivilegeLogin, expire)\n        accessToken.add_service(rtmService)\n\n        let chatService = new ServiceChat(chatUserId)\n        chatService.add_privilege(ServiceChat.kPrivilegeUser, expire)\n        accessToken.add_service(chatService)\n\n        return accessToken.build()\n    }\n\n    /**\n     * build user individual token\n     * @param appId             The App ID issued to you by Agora. Apply for a new App ID from\n     *                          Agora Dashboard if it is missing from your kit. See Get an App ID.\n     * @param appCertificate    Certificate of the application that you registered in\n     *                          the Agora Dashboard. See Get an App Certificate.\n     * @param userUuid          The user's id, must be unique.\n     * @param expire            represented by the number of seconds elapsed since now. If, for example, you want to access the\n     *                          Agora Service within 10 minutes after the token is generated, set expireTimestamp as 600(seconds).\n     * @return The education user token.\n     */\n    static buildUserToken(appId, appCertificate, userUuid, expire) {\n        let accessToken = new AccessToken(appId, appCertificate, 0, expire)\n        let eduService = new ServiceEducation(\"\", userUuid)\n        eduService.add_privilege(ServiceEducation.PRIVILEGE_USER, expire)\n        accessToken.add_service(eduService)\n\n        return accessToken.build()\n    }\n\n    /**\n     * build app global token\n     * @param appId          The App ID issued to you by Agora. Apply for a new App ID from\n     *                       Agora Dashboard if it is missing from your kit. See Get an App ID.\n     * @param appCertificate Certificate of the application that you registered in\n     *                       the Agora Dashboard. See Get an App Certificate.\n     * @param expire         represented by the number of seconds elapsed since now. If, for example, you want to access the\n     *                       Agora Service within 10 minutes after the token is generated, set expireTimestamp as 600(seconds).\n     * @return The education global token.\n     */\n    static buildAppToken(appId, appCertificate, expire) {\n        let accessToken = new AccessToken(appId, appCertificate, 0, expire)\n        let eduService = new ServiceEducation()\n        eduService.add_privilege(ServiceEducation.PRIVILEGE_APP, expire)\n        accessToken.add_service(eduService)\n\n        return accessToken.build()\n    }\n}\n\nmodule.exports.EducationTokenBuilder = EducationTokenBuilder\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hZ29yYS10b2tlbi9zcmMvRWR1Y2F0aW9uVG9rZW5CdWlsZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQixnSUFBMkM7QUFDL0QseUJBQXlCLG9JQUErQztBQUN4RSxtQkFBbUIsOEhBQXlDO0FBQzVELG9CQUFvQiwrSEFBMEM7QUFDOUQsWUFBWSxtQkFBTyxDQUFDLHVEQUFLOzs7QUFHekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Fnb3JhLXRva2VuL3NyYy9FZHVjYXRpb25Ub2tlbkJ1aWxkZXIuanM/NWU3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBY2Nlc3NUb2tlbiA9IHJlcXVpcmUoJy4uL3NyYy9BY2Nlc3NUb2tlbjInKS5BY2Nlc3NUb2tlbjJcbmNvbnN0IFNlcnZpY2VFZHVjYXRpb24gPSByZXF1aXJlKCcuLi9zcmMvQWNjZXNzVG9rZW4yJykuU2VydmljZUVkdWNhdGlvblxuY29uc3QgU2VydmljZVJ0bSA9IHJlcXVpcmUoJy4uL3NyYy9BY2Nlc3NUb2tlbjInKS5TZXJ2aWNlUnRtXG5jb25zdCBTZXJ2aWNlQ2hhdCA9IHJlcXVpcmUoJy4uL3NyYy9BY2Nlc3NUb2tlbjInKS5TZXJ2aWNlQ2hhdFxuY29uc3QgbWQ1ID0gcmVxdWlyZShcIm1kNVwiKVxuXG5cbmNsYXNzIEVkdWNhdGlvblRva2VuQnVpbGRlciB7XG4gICAgLyoqXG4gICAgICogYnVpbGQgdXNlciByb29tIHRva2VuXG4gICAgICogQHBhcmFtIGFwcElkICAgICAgICAgICAgIFRoZSBBcHAgSUQgaXNzdWVkIHRvIHlvdSBieSBBZ29yYS4gQXBwbHkgZm9yIGEgbmV3IEFwcCBJRCBmcm9tXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgIEFnb3JhIERhc2hib2FyZCBpZiBpdCBpcyBtaXNzaW5nIGZyb20geW91ciBraXQuIFNlZSBHZXQgYW4gQXBwIElELlxuICAgICAqIEBwYXJhbSBhcHBDZXJ0aWZpY2F0ZSAgICBDZXJ0aWZpY2F0ZSBvZiB0aGUgYXBwbGljYXRpb24gdGhhdCB5b3UgcmVnaXN0ZXJlZCBpblxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgQWdvcmEgRGFzaGJvYXJkLiBTZWUgR2V0IGFuIEFwcCBDZXJ0aWZpY2F0ZS5cbiAgICAgKiBAcGFyYW0gcm9vbVV1aWQgICAgICAgICAgVGhlIHJvb20ncyBpZCwgbXVzdCBiZSB1bmlxdWUuXG4gICAgICogQHBhcmFtIHVzZXJVdWlkICAgICAgICAgIFRoZSB1c2VyJ3MgaWQsIG11c3QgYmUgdW5pcXVlLlxuICAgICAqIEBwYXJhbSByb2xlICAgICAgICAgICAgICBUaGUgdXNlcidzIHJvbGUsIHN1Y2ggYXMgMChpbnZpc2libGUpLCAxKHRlYWNoZXIpLCAyKHN0dWRlbnQpLCAzKGFzc2lzdGFudCksIDQob2JzZXJ2ZXIpIGV0Yy5cbiAgICAgKiBAcGFyYW0gZXhwaXJlICAgICAgICAgICAgcmVwcmVzZW50ZWQgYnkgdGhlIG51bWJlciBvZiBzZWNvbmRzIGVsYXBzZWQgc2luY2Ugbm93LiBJZiwgZm9yIGV4YW1wbGUsIHlvdSB3YW50IHRvIGFjY2VzcyB0aGVcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQWdvcmEgU2VydmljZSB3aXRoaW4gMTAgbWludXRlcyBhZnRlciB0aGUgdG9rZW4gaXMgZ2VuZXJhdGVkLCBzZXQgZXhwaXJlVGltZXN0YW1wIGFzIDYwMChzZWNvbmRzKS5cbiAgICAgKiBAcmV0dXJuIFRoZSBlZHVjYXRpb24gdXNlciByb29tIHRva2VuLlxuICAgICAqL1xuICAgIHN0YXRpYyBidWlsZFJvb21Vc2VyVG9rZW4oYXBwSWQsIGFwcENlcnRpZmljYXRlLCByb29tVXVpZCwgdXNlclV1aWQsIHJvbGUsIGV4cGlyZSkge1xuICAgICAgICBsZXQgYWNjZXNzVG9rZW4gPSBuZXcgQWNjZXNzVG9rZW4oYXBwSWQsIGFwcENlcnRpZmljYXRlLCAwLCBleHBpcmUpXG5cbiAgICAgICAgbGV0IGNoYXRVc2VySWQgPSBtZDUodXNlclV1aWQpXG4gICAgICAgIGxldCBlZHVTZXJ2aWNlID0gbmV3IFNlcnZpY2VFZHVjYXRpb24ocm9vbVV1aWQsIHVzZXJVdWlkLCByb2xlKVxuICAgICAgICBhY2Nlc3NUb2tlbi5hZGRfc2VydmljZShlZHVTZXJ2aWNlKVxuXG4gICAgICAgIGxldCBydG1TZXJ2aWNlID0gbmV3IFNlcnZpY2VSdG0odXNlclV1aWQpXG4gICAgICAgIHJ0bVNlcnZpY2UuYWRkX3ByaXZpbGVnZShTZXJ2aWNlUnRtLmtQcml2aWxlZ2VMb2dpbiwgZXhwaXJlKVxuICAgICAgICBhY2Nlc3NUb2tlbi5hZGRfc2VydmljZShydG1TZXJ2aWNlKVxuXG4gICAgICAgIGxldCBjaGF0U2VydmljZSA9IG5ldyBTZXJ2aWNlQ2hhdChjaGF0VXNlcklkKVxuICAgICAgICBjaGF0U2VydmljZS5hZGRfcHJpdmlsZWdlKFNlcnZpY2VDaGF0LmtQcml2aWxlZ2VVc2VyLCBleHBpcmUpXG4gICAgICAgIGFjY2Vzc1Rva2VuLmFkZF9zZXJ2aWNlKGNoYXRTZXJ2aWNlKVxuXG4gICAgICAgIHJldHVybiBhY2Nlc3NUb2tlbi5idWlsZCgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogYnVpbGQgdXNlciBpbmRpdmlkdWFsIHRva2VuXG4gICAgICogQHBhcmFtIGFwcElkICAgICAgICAgICAgIFRoZSBBcHAgSUQgaXNzdWVkIHRvIHlvdSBieSBBZ29yYS4gQXBwbHkgZm9yIGEgbmV3IEFwcCBJRCBmcm9tXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgIEFnb3JhIERhc2hib2FyZCBpZiBpdCBpcyBtaXNzaW5nIGZyb20geW91ciBraXQuIFNlZSBHZXQgYW4gQXBwIElELlxuICAgICAqIEBwYXJhbSBhcHBDZXJ0aWZpY2F0ZSAgICBDZXJ0aWZpY2F0ZSBvZiB0aGUgYXBwbGljYXRpb24gdGhhdCB5b3UgcmVnaXN0ZXJlZCBpblxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgQWdvcmEgRGFzaGJvYXJkLiBTZWUgR2V0IGFuIEFwcCBDZXJ0aWZpY2F0ZS5cbiAgICAgKiBAcGFyYW0gdXNlclV1aWQgICAgICAgICAgVGhlIHVzZXIncyBpZCwgbXVzdCBiZSB1bmlxdWUuXG4gICAgICogQHBhcmFtIGV4cGlyZSAgICAgICAgICAgIHJlcHJlc2VudGVkIGJ5IHRoZSBudW1iZXIgb2Ygc2Vjb25kcyBlbGFwc2VkIHNpbmNlIG5vdy4gSWYsIGZvciBleGFtcGxlLCB5b3Ugd2FudCB0byBhY2Nlc3MgdGhlXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgIEFnb3JhIFNlcnZpY2Ugd2l0aGluIDEwIG1pbnV0ZXMgYWZ0ZXIgdGhlIHRva2VuIGlzIGdlbmVyYXRlZCwgc2V0IGV4cGlyZVRpbWVzdGFtcCBhcyA2MDAoc2Vjb25kcykuXG4gICAgICogQHJldHVybiBUaGUgZWR1Y2F0aW9uIHVzZXIgdG9rZW4uXG4gICAgICovXG4gICAgc3RhdGljIGJ1aWxkVXNlclRva2VuKGFwcElkLCBhcHBDZXJ0aWZpY2F0ZSwgdXNlclV1aWQsIGV4cGlyZSkge1xuICAgICAgICBsZXQgYWNjZXNzVG9rZW4gPSBuZXcgQWNjZXNzVG9rZW4oYXBwSWQsIGFwcENlcnRpZmljYXRlLCAwLCBleHBpcmUpXG4gICAgICAgIGxldCBlZHVTZXJ2aWNlID0gbmV3IFNlcnZpY2VFZHVjYXRpb24oXCJcIiwgdXNlclV1aWQpXG4gICAgICAgIGVkdVNlcnZpY2UuYWRkX3ByaXZpbGVnZShTZXJ2aWNlRWR1Y2F0aW9uLlBSSVZJTEVHRV9VU0VSLCBleHBpcmUpXG4gICAgICAgIGFjY2Vzc1Rva2VuLmFkZF9zZXJ2aWNlKGVkdVNlcnZpY2UpXG5cbiAgICAgICAgcmV0dXJuIGFjY2Vzc1Rva2VuLmJ1aWxkKClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBidWlsZCBhcHAgZ2xvYmFsIHRva2VuXG4gICAgICogQHBhcmFtIGFwcElkICAgICAgICAgIFRoZSBBcHAgSUQgaXNzdWVkIHRvIHlvdSBieSBBZ29yYS4gQXBwbHkgZm9yIGEgbmV3IEFwcCBJRCBmcm9tXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgIEFnb3JhIERhc2hib2FyZCBpZiBpdCBpcyBtaXNzaW5nIGZyb20geW91ciBraXQuIFNlZSBHZXQgYW4gQXBwIElELlxuICAgICAqIEBwYXJhbSBhcHBDZXJ0aWZpY2F0ZSBDZXJ0aWZpY2F0ZSBvZiB0aGUgYXBwbGljYXRpb24gdGhhdCB5b3UgcmVnaXN0ZXJlZCBpblxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICB0aGUgQWdvcmEgRGFzaGJvYXJkLiBTZWUgR2V0IGFuIEFwcCBDZXJ0aWZpY2F0ZS5cbiAgICAgKiBAcGFyYW0gZXhwaXJlICAgICAgICAgcmVwcmVzZW50ZWQgYnkgdGhlIG51bWJlciBvZiBzZWNvbmRzIGVsYXBzZWQgc2luY2Ugbm93LiBJZiwgZm9yIGV4YW1wbGUsIHlvdSB3YW50IHRvIGFjY2VzcyB0aGVcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgQWdvcmEgU2VydmljZSB3aXRoaW4gMTAgbWludXRlcyBhZnRlciB0aGUgdG9rZW4gaXMgZ2VuZXJhdGVkLCBzZXQgZXhwaXJlVGltZXN0YW1wIGFzIDYwMChzZWNvbmRzKS5cbiAgICAgKiBAcmV0dXJuIFRoZSBlZHVjYXRpb24gZ2xvYmFsIHRva2VuLlxuICAgICAqL1xuICAgIHN0YXRpYyBidWlsZEFwcFRva2VuKGFwcElkLCBhcHBDZXJ0aWZpY2F0ZSwgZXhwaXJlKSB7XG4gICAgICAgIGxldCBhY2Nlc3NUb2tlbiA9IG5ldyBBY2Nlc3NUb2tlbihhcHBJZCwgYXBwQ2VydGlmaWNhdGUsIDAsIGV4cGlyZSlcbiAgICAgICAgbGV0IGVkdVNlcnZpY2UgPSBuZXcgU2VydmljZUVkdWNhdGlvbigpXG4gICAgICAgIGVkdVNlcnZpY2UuYWRkX3ByaXZpbGVnZShTZXJ2aWNlRWR1Y2F0aW9uLlBSSVZJTEVHRV9BUFAsIGV4cGlyZSlcbiAgICAgICAgYWNjZXNzVG9rZW4uYWRkX3NlcnZpY2UoZWR1U2VydmljZSlcblxuICAgICAgICByZXR1cm4gYWNjZXNzVG9rZW4uYnVpbGQoKVxuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMuRWR1Y2F0aW9uVG9rZW5CdWlsZGVyID0gRWR1Y2F0aW9uVG9rZW5CdWlsZGVyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/agora-token/src/EducationTokenBuilder.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/agora-token/src/FpaTokenBuilder.js":
/*!*********************************************************!*\
  !*** ./node_modules/agora-token/src/FpaTokenBuilder.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const AccessToken = (__webpack_require__(/*! ../src/AccessToken2 */ \"(action-browser)/./node_modules/agora-token/src/AccessToken2.js\").AccessToken2)\nconst ServiceFpa = (__webpack_require__(/*! ../src/AccessToken2 */ \"(action-browser)/./node_modules/agora-token/src/AccessToken2.js\").ServiceFpa)\n\nclass FpaTokenBuilder {\n    /**\n     * Build the FPA token.\n     * @param appId The App ID issued to you by Agora. Apply for a new App ID from\n     * Agora Dashboard if it is missing from your kit. See Get an App ID.\n     * @param appCertificate Certificate of the application that you registered in\n     * the Agora Dashboard. See Get an App Certificate.\n     * @return The FPA token.\n     */\n    static buildToken(appId, appCertificate) {\n        let token = new AccessToken(appId, appCertificate, 0, 24 * 3600)\n\n        let serviceFpa = new ServiceFpa()\n        serviceFpa.add_privilege(ServiceFpa.kPrivilegeLogin, 0)\n        token.add_service(serviceFpa)\n\n        return token.build()\n    }\n}\n\nmodule.exports.FpaTokenBuilder = FpaTokenBuilder\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hZ29yYS10b2tlbi9zcmMvRnBhVG9rZW5CdWlsZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQixnSUFBMkM7QUFDL0QsbUJBQW1CLDhIQUF5Qzs7QUFFNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDhCQUE4QiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hZ29yYS10b2tlbi9zcmMvRnBhVG9rZW5CdWlsZGVyLmpzPzAyMDUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQWNjZXNzVG9rZW4gPSByZXF1aXJlKCcuLi9zcmMvQWNjZXNzVG9rZW4yJykuQWNjZXNzVG9rZW4yXG5jb25zdCBTZXJ2aWNlRnBhID0gcmVxdWlyZSgnLi4vc3JjL0FjY2Vzc1Rva2VuMicpLlNlcnZpY2VGcGFcblxuY2xhc3MgRnBhVG9rZW5CdWlsZGVyIHtcbiAgICAvKipcbiAgICAgKiBCdWlsZCB0aGUgRlBBIHRva2VuLlxuICAgICAqIEBwYXJhbSBhcHBJZCBUaGUgQXBwIElEIGlzc3VlZCB0byB5b3UgYnkgQWdvcmEuIEFwcGx5IGZvciBhIG5ldyBBcHAgSUQgZnJvbVxuICAgICAqIEFnb3JhIERhc2hib2FyZCBpZiBpdCBpcyBtaXNzaW5nIGZyb20geW91ciBraXQuIFNlZSBHZXQgYW4gQXBwIElELlxuICAgICAqIEBwYXJhbSBhcHBDZXJ0aWZpY2F0ZSBDZXJ0aWZpY2F0ZSBvZiB0aGUgYXBwbGljYXRpb24gdGhhdCB5b3UgcmVnaXN0ZXJlZCBpblxuICAgICAqIHRoZSBBZ29yYSBEYXNoYm9hcmQuIFNlZSBHZXQgYW4gQXBwIENlcnRpZmljYXRlLlxuICAgICAqIEByZXR1cm4gVGhlIEZQQSB0b2tlbi5cbiAgICAgKi9cbiAgICBzdGF0aWMgYnVpbGRUb2tlbihhcHBJZCwgYXBwQ2VydGlmaWNhdGUpIHtcbiAgICAgICAgbGV0IHRva2VuID0gbmV3IEFjY2Vzc1Rva2VuKGFwcElkLCBhcHBDZXJ0aWZpY2F0ZSwgMCwgMjQgKiAzNjAwKVxuXG4gICAgICAgIGxldCBzZXJ2aWNlRnBhID0gbmV3IFNlcnZpY2VGcGEoKVxuICAgICAgICBzZXJ2aWNlRnBhLmFkZF9wcml2aWxlZ2UoU2VydmljZUZwYS5rUHJpdmlsZWdlTG9naW4sIDApXG4gICAgICAgIHRva2VuLmFkZF9zZXJ2aWNlKHNlcnZpY2VGcGEpXG5cbiAgICAgICAgcmV0dXJuIHRva2VuLmJ1aWxkKClcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzLkZwYVRva2VuQnVpbGRlciA9IEZwYVRva2VuQnVpbGRlclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/agora-token/src/FpaTokenBuilder.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/agora-token/src/RtcTokenBuilder2.js":
/*!**********************************************************!*\
  !*** ./node_modules/agora-token/src/RtcTokenBuilder2.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const AccessToken = (__webpack_require__(/*! ../src/AccessToken2 */ \"(action-browser)/./node_modules/agora-token/src/AccessToken2.js\").AccessToken2)\nconst ServiceRtc = (__webpack_require__(/*! ../src/AccessToken2 */ \"(action-browser)/./node_modules/agora-token/src/AccessToken2.js\").ServiceRtc)\n\nconst Role = {\n    // for live broadcaster\n    PUBLISHER: 1,\n\n    // default, for live audience\n    SUBSCRIBER: 2,\n}\n\nclass RtcTokenBuilder {\n    /**\n     * Builds an RTC token using an Integer uid.\n     * @param {*} appId  The App ID issued to you by Agora.\n     * @param {*} appCertificate Certificate of the application that you registered in the Agora Dashboard.\n     * @param {*} channelName The unique channel name for the AgoraRTC session in the string format. The string length must be less than 64 bytes. Supported character scopes are:\n     * - The 26 lowercase English letters: a to z.\n     * - The 26 uppercase English letters: A to Z.\n     * - The 10 digits: 0 to 9.\n     * - The space.\n     * - \"!\", \"#\", \"$\", \"%\", \"&\", \"(\", \")\", \"+\", \"-\", \":\", \";\", \"<\", \"=\", \".\", \">\", \"?\", \"@\", \"[\", \"]\", \"^\", \"_\", \" {\", \"}\", \"|\", \"~\", \",\".\n     * @param {*} uid User ID. A 32-bit unsigned integer with a value ranging from 1 to (2^32-1).\n     * @param {*} role See #userRole.\n     * - Role.PUBLISHER; RECOMMENDED. Use this role for a voice/video call or a live broadcast.\n     * - Role.SUBSCRIBER: ONLY use this role if your live-broadcast scenario requires authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in). In order for this role to take effect, please contact our support team to enable authentication for Hosting-in for you. Otherwise, Role_Subscriber still has the same privileges as Role_Publisher.\n     * @param {*} token_expire epresented by the number of seconds elapsed since now. If, for example, you want to access the Agora Service within 10 minutes after the token is generated, set token_expire as 600(seconds)\n     * @param {*} privilege_expire represented by the number of seconds elapsed since now. If, for example, you want to enable your privilege for 10 minutes, set privilege_expire as 600(seconds).     * @return The new Token.\n     */\n    static buildTokenWithUid(appId, appCertificate, channelName, uid, role,  token_expire, privilege_expire = 0) {\n        return this.buildTokenWithUserAccount(appId, appCertificate, channelName, uid, role, token_expire, privilege_expire)\n    }\n\n    /**\n     * Builds an RTC token using an Integer uid.\n     * @param {*} appId  The App ID issued to you by Agora.\n     * @param {*} appCertificate Certificate of the application that you registered in the Agora Dashboard.\n     * @param {*} channelName The unique channel name for the AgoraRTC session in the string format. The string length must be less than 64 bytes. Supported character scopes are:\n     * - The 26 lowercase English letters: a to z.\n     * - The 26 uppercase English letters: A to Z.\n     * - The 10 digits: 0 to 9.\n     * - The space.\n     * - \"!\", \"#\", \"$\", \"%\", \"&\", \"(\", \")\", \"+\", \"-\", \":\", \";\", \"<\", \"=\", \".\", \">\", \"?\", \"@\", \"[\", \"]\", \"^\", \"_\", \" {\", \"}\", \"|\", \"~\", \",\".\n     * @param {*} account The user account.\n     * @param {*} role See #userRole.\n     * - Role.PUBLISHER; RECOMMENDED. Use this role for a voice/video call or a live broadcast.\n     * - Role.SUBSCRIBER: ONLY use this role if your live-broadcast scenario requires authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in). In order for this role to take effect, please contact our support team to enable authentication for Hosting-in for you. Otherwise, Role_Subscriber still has the same privileges as Role_Publisher.\n     * @param {*} token_expire epresented by the number of seconds elapsed since now. If, for example, you want to access the Agora Service within 10 minutes after the token is generated, set token_expire as 600(seconds)\n     * @param {*} privilege_expire represented by the number of seconds elapsed since now. If, for example, you want to enable your privilege for 10 minutes, set privilege_expire as 600(seconds).\n     * @return The new Token.\n     */\n    static buildTokenWithUserAccount(appId, appCertificate, channelName, account, role, token_expire, privilege_expire = 0) {\n        let token = new AccessToken(appId, appCertificate, 0, token_expire)\n\n        let serviceRtc = new ServiceRtc(channelName, account)\n        serviceRtc.add_privilege(ServiceRtc.kPrivilegeJoinChannel, privilege_expire)\n        if (role == Role.PUBLISHER) {\n            serviceRtc.add_privilege(ServiceRtc.kPrivilegePublishAudioStream, privilege_expire)\n            serviceRtc.add_privilege(ServiceRtc.kPrivilegePublishVideoStream, privilege_expire)\n            serviceRtc.add_privilege(ServiceRtc.kPrivilegePublishDataStream, privilege_expire)\n        }\n        token.add_service(serviceRtc)\n\n        return token.build()\n    }\n\n    /**\n     * Generates an RTC token with the specified privilege.\n     *\n     * This method supports generating a token with the following privileges:\n     * - Joining an RTC channel.\n     * - Publishing audio in an RTC channel.\n     * - Publishing video in an RTC channel.\n     * - Publishing data streams in an RTC channel.\n     *\n     * The privileges for publishing audio, video, and data streams in an RTC channel apply only if you have\n     * enabled co-host authentication.\n     *\n     * A user can have multiple privileges. Each privilege is valid for a maximum of 24 hours.\n     * The SDK triggers the onTokenPrivilegeWillExpire and onRequestToken callbacks when the token is about to expire\n     * or has expired. The callbacks do not report the specific privilege affected, and you need to maintain\n     * the respective timestamp for each privilege in your app logic. After receiving the callback, you need\n     * to generate a new token, and then call renewToken to pass the new token to the SDK, or call joinChannel to re-join\n     * the channel.\n     *\n     * @note\n     * Agora recommends setting a reasonable timestamp for each privilege according to your scenario.\n     * Suppose the expiration timestamp for joining the channel is set earlier than that for publishing audio.\n     * When the token for joining the channel expires, the user is immediately kicked off the RTC channel\n     * and cannot publish any audio stream, even though the timestamp for publishing audio has not expired.\n     *\n     * @param appId The App ID of your Agora project.\n     * @param appCertificate The App Certificate of your Agora project.\n     * @param channelName The unique channel name for the Agora RTC session in string format. The string length must be less than 64 bytes. The channel name may contain the following characters:\n     * - All lowercase English letters: a to z.\n     * - All uppercase English letters: A to Z.\n     * - All numeric characters: 0 to 9.\n     * - The space character.\n     * - \"!\", \"#\", \"$\", \"%\", \"&\", \"(\", \")\", \"+\", \"-\", \":\", \";\", \"<\", \"=\", \".\", \">\", \"?\", \"@\", \"[\", \"]\", \"^\", \"_\", \" {\", \"}\", \"|\", \"~\", \",\".\n     * @param uid The user ID. A 32-bit unsigned integer with a value range from 1 to (2^32 - 1). It must be unique. Set uid as 0, if you do not want to authenticate the user ID, that is, any uid from the app client can join the channel.\n     * @param tokenExpire represented by the number of seconds elapsed since now. If, for example, you want to access the\n     * Agora Service within 10 minutes after the token is generated, set token_expire as 600(seconds).\n     * @param joinChannelPrivilegeExpire The Unix timestamp when the privilege for joining the channel expires, represented\n     * by the sum of the current timestamp plus the valid time period of the token. For example, if you set joinChannelPrivilegeExpire as the\n     * current timestamp plus 600 seconds, the token expires in 10 minutes.\n     * @param pubAudioPrivilegeExpire The Unix timestamp when the privilege for publishing audio expires, represented\n     * by the sum of the current timestamp plus the valid time period of the token. For example, if you set pubAudioPrivilegeExpire as the\n     * current timestamp plus 600 seconds, the token expires in 10 minutes. If you do not want to enable this privilege,\n     * set pubAudioPrivilegeExpire as the current Unix timestamp.\n     * @param pubVideoPrivilegeExpire The Unix timestamp when the privilege for publishing video expires, represented\n     * by the sum of the current timestamp plus the valid time period of the token. For example, if you set pubVideoPrivilegeExpire as the\n     * current timestamp plus 600 seconds, the token expires in 10 minutes. If you do not want to enable this privilege,\n     * set pubVideoPrivilegeExpire as the current Unix timestamp.\n     * @param pubDataStreamPrivilegeExpire The Unix timestamp when the privilege for publishing data streams expires, represented\n     * by the sum of the current timestamp plus the valid time period of the token. For example, if you set pubDataStreamPrivilegeExpire as the\n     * current timestamp plus 600 seconds, the token expires in 10 minutes. If you do not want to enable this privilege,\n     * set pubDataStreamPrivilegeExpire as the current Unix timestamp.\n     * @return The new Token\n     */\n    static buildTokenWithUidAndPrivilege(appId, appCertificate, channelName, uid,\n                                         tokenExpire, joinChannelPrivilegeExpire, pubAudioPrivilegeExpire,\n                                         pubVideoPrivilegeExpire, pubDataStreamPrivilegeExpire) {\n        return this.BuildTokenWithUserAccountAndPrivilege(appId, appCertificate, channelName, uid,\n            tokenExpire, joinChannelPrivilegeExpire, pubAudioPrivilegeExpire, pubVideoPrivilegeExpire, pubDataStreamPrivilegeExpire)\n    }\n\n    /**\n     * Generates an RTC token with the specified privilege.\n     *\n     * This method supports generating a token with the following privileges:\n     * - Joining an RTC channel.\n     * - Publishing audio in an RTC channel.\n     * - Publishing video in an RTC channel.\n     * - Publishing data streams in an RTC channel.\n     *\n     * The privileges for publishing audio, video, and data streams in an RTC channel apply only if you have\n     * enabled co-host authentication.\n     *\n     * A user can have multiple privileges. Each privilege is valid for a maximum of 24 hours.\n     * The SDK triggers the onTokenPrivilegeWillExpire and onRequestToken callbacks when the token is about to expire\n     * or has expired. The callbacks do not report the specific privilege affected, and you need to maintain\n     * the respective timestamp for each privilege in your app logic. After receiving the callback, you need\n     * to generate a new token, and then call renewToken to pass the new token to the SDK, or call joinChannel to re-join\n     * the channel.\n     *\n     * @note\n     * Agora recommends setting a reasonable timestamp for each privilege according to your scenario.\n     * Suppose the expiration timestamp for joining the channel is set earlier than that for publishing audio.\n     * When the token for joining the channel expires, the user is immediately kicked off the RTC channel\n     * and cannot publish any audio stream, even though the timestamp for publishing audio has not expired.\n     *\n     * @param appId The App ID of your Agora project.\n     * @param appCertificate The App Certificate of your Agora project.\n     * @param channelName The unique channel name for the Agora RTC session in string format. The string length must be less than 64 bytes. The channel name may contain the following characters:\n     * - All lowercase English letters: a to z.\n     * - All uppercase English letters: A to Z.\n     * - All numeric characters: 0 to 9.\n     * - The space character.\n     * - \"!\", \"#\", \"$\", \"%\", \"&\", \"(\", \")\", \"+\", \"-\", \":\", \";\", \"<\", \"=\", \".\", \">\", \"?\", \"@\", \"[\", \"]\", \"^\", \"_\", \" {\", \"}\", \"|\", \"~\", \",\".\n     * @param userAccount The user account.\n     * @param tokenExpire represented by the number of seconds elapsed since now. If, for example, you want to access the\n     * Agora Service within 10 minutes after the token is generated, set token_expire as 600(seconds).\n     * @param joinChannelPrivilegeExpire The Unix timestamp when the privilege for joining the channel expires, represented\n     * by the sum of the current timestamp plus the valid time period of the token. For example, if you set joinChannelPrivilegeExpire as the\n     * current timestamp plus 600 seconds, the token expires in 10 minutes.\n     * @param pubAudioPrivilegeExpire The Unix timestamp when the privilege for publishing audio expires, represented\n     * by the sum of the current timestamp plus the valid time period of the token. For example, if you set pubAudioPrivilegeExpire as the\n     * current timestamp plus 600 seconds, the token expires in 10 minutes. If you do not want to enable this privilege,\n     * set pubAudioPrivilegeExpire as the current Unix timestamp.\n     * @param pubVideoPrivilegeExpire The Unix timestamp when the privilege for publishing video expires, represented\n     * by the sum of the current timestamp plus the valid time period of the token. For example, if you set pubVideoPrivilegeExpire as the\n     * current timestamp plus 600 seconds, the token expires in 10 minutes. If you do not want to enable this privilege,\n     * set pubVideoPrivilegeExpire as the current Unix timestamp.\n     * @param pubDataStreamPrivilegeExpire The Unix timestamp when the privilege for publishing data streams expires, represented\n     * by the sum of the current timestamp plus the valid time period of the token. For example, if you set pubDataStreamPrivilegeExpire as the\n     * current timestamp plus 600 seconds, the token expires in 10 minutes. If you do not want to enable this privilege,\n     * set pubDataStreamPrivilegeExpire as the current Unix timestamp.\n     * @return The new Token.\n     */\n    static BuildTokenWithUserAccountAndPrivilege(appId, appCertificate, channelName, account,\n                                                 tokenExpire, joinChannelPrivilegeExpire, pubAudioPrivilegeExpire,\n                                                 pubVideoPrivilegeExpire, pubDataStreamPrivilegeExpire) {\n        let token = new AccessToken(appId, appCertificate, 0, tokenExpire)\n\n        let serviceRtc = new ServiceRtc(channelName, account)\n        serviceRtc.add_privilege(ServiceRtc.kPrivilegeJoinChannel, joinChannelPrivilegeExpire)\n        serviceRtc.add_privilege(ServiceRtc.kPrivilegePublishAudioStream, pubAudioPrivilegeExpire)\n        serviceRtc.add_privilege(ServiceRtc.kPrivilegePublishVideoStream, pubVideoPrivilegeExpire)\n        serviceRtc.add_privilege(ServiceRtc.kPrivilegePublishDataStream, pubDataStreamPrivilegeExpire)\n        token.add_service(serviceRtc)\n\n        return token.build()\n    }\n}\n\nmodule.exports.RtcTokenBuilder = RtcTokenBuilder\nmodule.exports.Role = Role\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/agora-token/src/RtcTokenBuilder2.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/agora-token/src/RtmTokenBuilder2.js":
/*!**********************************************************!*\
  !*** ./node_modules/agora-token/src/RtmTokenBuilder2.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const AccessToken = (__webpack_require__(/*! ../src/AccessToken2 */ \"(action-browser)/./node_modules/agora-token/src/AccessToken2.js\").AccessToken2);\nconst ServiceRtm = (__webpack_require__(/*! ../src/AccessToken2 */ \"(action-browser)/./node_modules/agora-token/src/AccessToken2.js\").ServiceRtm);\n\nclass RtmTokenBuilder {\n    /**\n     * Build the RTM token.\n     *\n     * @param appId The App ID issued to you by Agora. Apply for a new App ID from\n     * Agora Dashboard if it is missing from your kit. See Get an App ID.\n     * @param appCertificate Certificate of the application that you registered in\n     * the Agora Dashboard. See Get an App Certificate.\n     * @param userId The user's account, max length is 64 Bytes.\n     * @param expire represented by the number of seconds elapsed since now. If, for example, you want to access the\n     * Agora Service within 10 minutes after the token is generated, set expireTimestamp as 600(seconds).\n     * @return The RTM token.\n     */\n    static buildToken(appId, appCertificate, userId, expire) {\n        let token = new AccessToken(appId, appCertificate, null, expire);\n\n        let serviceRtm = new ServiceRtm(userId);\n        serviceRtm.add_privilege(ServiceRtm.kPrivilegeLogin, expire);\n        token.add_service(serviceRtm);\n\n        return token.build();\n    }\n}\n\nmodule.exports.RtmTokenBuilder = RtmTokenBuilder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hZ29yYS10b2tlbi9zcmMvUnRtVG9rZW5CdWlsZGVyMi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0IsZ0lBQTJDO0FBQy9ELG1CQUFtQiw4SEFBeUM7O0FBRTVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDhCQUE4QiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hZ29yYS10b2tlbi9zcmMvUnRtVG9rZW5CdWlsZGVyMi5qcz9iOWUzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEFjY2Vzc1Rva2VuID0gcmVxdWlyZShcIi4uL3NyYy9BY2Nlc3NUb2tlbjJcIikuQWNjZXNzVG9rZW4yO1xuY29uc3QgU2VydmljZVJ0bSA9IHJlcXVpcmUoXCIuLi9zcmMvQWNjZXNzVG9rZW4yXCIpLlNlcnZpY2VSdG07XG5cbmNsYXNzIFJ0bVRva2VuQnVpbGRlciB7XG4gICAgLyoqXG4gICAgICogQnVpbGQgdGhlIFJUTSB0b2tlbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhcHBJZCBUaGUgQXBwIElEIGlzc3VlZCB0byB5b3UgYnkgQWdvcmEuIEFwcGx5IGZvciBhIG5ldyBBcHAgSUQgZnJvbVxuICAgICAqIEFnb3JhIERhc2hib2FyZCBpZiBpdCBpcyBtaXNzaW5nIGZyb20geW91ciBraXQuIFNlZSBHZXQgYW4gQXBwIElELlxuICAgICAqIEBwYXJhbSBhcHBDZXJ0aWZpY2F0ZSBDZXJ0aWZpY2F0ZSBvZiB0aGUgYXBwbGljYXRpb24gdGhhdCB5b3UgcmVnaXN0ZXJlZCBpblxuICAgICAqIHRoZSBBZ29yYSBEYXNoYm9hcmQuIFNlZSBHZXQgYW4gQXBwIENlcnRpZmljYXRlLlxuICAgICAqIEBwYXJhbSB1c2VySWQgVGhlIHVzZXIncyBhY2NvdW50LCBtYXggbGVuZ3RoIGlzIDY0IEJ5dGVzLlxuICAgICAqIEBwYXJhbSBleHBpcmUgcmVwcmVzZW50ZWQgYnkgdGhlIG51bWJlciBvZiBzZWNvbmRzIGVsYXBzZWQgc2luY2Ugbm93LiBJZiwgZm9yIGV4YW1wbGUsIHlvdSB3YW50IHRvIGFjY2VzcyB0aGVcbiAgICAgKiBBZ29yYSBTZXJ2aWNlIHdpdGhpbiAxMCBtaW51dGVzIGFmdGVyIHRoZSB0b2tlbiBpcyBnZW5lcmF0ZWQsIHNldCBleHBpcmVUaW1lc3RhbXAgYXMgNjAwKHNlY29uZHMpLlxuICAgICAqIEByZXR1cm4gVGhlIFJUTSB0b2tlbi5cbiAgICAgKi9cbiAgICBzdGF0aWMgYnVpbGRUb2tlbihhcHBJZCwgYXBwQ2VydGlmaWNhdGUsIHVzZXJJZCwgZXhwaXJlKSB7XG4gICAgICAgIGxldCB0b2tlbiA9IG5ldyBBY2Nlc3NUb2tlbihhcHBJZCwgYXBwQ2VydGlmaWNhdGUsIG51bGwsIGV4cGlyZSk7XG5cbiAgICAgICAgbGV0IHNlcnZpY2VSdG0gPSBuZXcgU2VydmljZVJ0bSh1c2VySWQpO1xuICAgICAgICBzZXJ2aWNlUnRtLmFkZF9wcml2aWxlZ2UoU2VydmljZVJ0bS5rUHJpdmlsZWdlTG9naW4sIGV4cGlyZSk7XG4gICAgICAgIHRva2VuLmFkZF9zZXJ2aWNlKHNlcnZpY2VSdG0pO1xuXG4gICAgICAgIHJldHVybiB0b2tlbi5idWlsZCgpO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMuUnRtVG9rZW5CdWlsZGVyID0gUnRtVG9rZW5CdWlsZGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/agora-token/src/RtmTokenBuilder2.js\n");

/***/ })

};
;