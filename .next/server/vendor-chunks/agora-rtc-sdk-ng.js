"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/agora-rtc-sdk-ng";
exports.ids = ["vendor-chunks/agora-rtc-sdk-ng"];
exports.modules = {

/***/ "(ssr)/./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.esm.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.esm.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nq)\n/* harmony export */ });\n/**\n * AgoraWebSDK_N-v4.22.1-0-g1c8e27e9 Copyright AgoraInc.\n */\n\nfunction e(e,t){return t.forEach((function(t){t&&\"string\"!=typeof t&&!Array.isArray(t)&&Object.keys(t).forEach((function(i){if(\"default\"!==i&&!(i in e)){var n=Object.getOwnPropertyDescriptor(t,i);Object.defineProperty(e,i,n.get?n:{enumerable:!0,get:function(){return t[i]}})}}))})),Object.freeze(e)}var t=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{};function i(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}var n=function(e){try{return!!e()}catch(e){return!0}},r=!n((function(){var e=function(){}.bind();return\"function\"!=typeof e||e.hasOwnProperty(\"prototype\")})),o=r,s=Function.prototype,a=s.call,c=o&&s.bind.bind(a,a),d=o?c:function(e){return function(){return a.apply(e,arguments)}},l=d({}.isPrototypeOf),u=function(e){return e&&e.Math==Math&&e},h=u(\"object\"==typeof globalThis&&globalThis)||u(\"object\"==typeof window&&window)||u(\"object\"==typeof self&&self)||u(\"object\"==typeof t&&t)||function(){return this}()||t||Function(\"return this\")(),p=r,_=Function.prototype,E=_.apply,f=_.call,m=\"object\"==typeof Reflect&&Reflect.apply||(p?f.bind(E):function(){return f.apply(E,arguments)}),T=d,S=T({}.toString),g=T(\"\".slice),R=function(e){return g(S(e),8,-1)},C=R,I=d,v=function(e){if(\"Function\"===C(e))return I(e)},y=\"object\"==typeof document&&document.all,A={all:y,IS_HTMLDDA:void 0===y&&void 0!==y},b=A.all,w=A.IS_HTMLDDA?function(e){return\"function\"==typeof e||e===b}:function(e){return\"function\"==typeof e},O={},N=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),D=r,P=Function.prototype.call,L=D?P.bind(P):function(){return P.apply(P,arguments)},k={},M={}.propertyIsEnumerable,U=Object.getOwnPropertyDescriptor,x=U&&!M.call({1:2},1);k.f=x?function(e){var t=U(this,e);return!!t&&t.enumerable}:M;var V,F,B=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},j=n,G=R,W=Object,H=d(\"\".split),K=j((function(){return!W(\"z\").propertyIsEnumerable(0)}))?function(e){return\"String\"==G(e)?H(e,\"\"):W(e)}:W,Y=function(e){return null==e},q=Y,z=TypeError,J=function(e){if(q(e))throw z(\"Can't call method on \"+e);return e},X=K,Q=J,Z=function(e){return X(Q(e))},$=w,ee=A.all,te=A.IS_HTMLDDA?function(e){return\"object\"==typeof e?null!==e:$(e)||e===ee}:function(e){return\"object\"==typeof e?null!==e:$(e)},ie={},ne=ie,re=h,oe=w,se=function(e){return oe(e)?e:void 0},ae=function(e,t){return arguments.length<2?se(ne[e])||se(re[e]):ne[e]&&ne[e][t]||re[e]&&re[e][t]},ce=\"undefined\"!=typeof navigator&&String(navigator.userAgent)||\"\",de=h,le=ce,ue=de.process,he=de.Deno,pe=ue&&ue.versions||he&&he.version,_e=pe&&pe.v8;_e&&(F=(V=_e.split(\".\"))[0]>0&&V[0]<4?1:+(V[0]+V[1])),!F&&le&&(!(V=le.match(/Edge\\/(\\d+)/))||V[1]>=74)&&(V=le.match(/Chrome\\/(\\d+)/))&&(F=+V[1]);var Ee=F,fe=Ee,me=n,Te=h.String,Se=!!Object.getOwnPropertySymbols&&!me((function(){var e=Symbol();return!Te(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&fe&&fe<41})),ge=Se&&!Symbol.sham&&\"symbol\"==typeof Symbol.iterator,Re=ae,Ce=w,Ie=l,ve=Object,ye=ge?function(e){return\"symbol\"==typeof e}:function(e){var t=Re(\"Symbol\");return Ce(t)&&Ie(t.prototype,ve(e))},Ae=String,be=function(e){try{return Ae(e)}catch(e){return\"Object\"}},we=w,Oe=be,Ne=TypeError,De=function(e){if(we(e))return e;throw Ne(Oe(e)+\" is not a function\")},Pe=De,Le=Y,ke=function(e,t){var i=e[t];return Le(i)?void 0:Pe(i)},Me=L,Ue=w,xe=te,Ve=TypeError,Fe={exports:{}},Be=h,je=Object.defineProperty,Ge=function(e,t){try{je(Be,e,{value:t,configurable:!0,writable:!0})}catch(i){Be[e]=t}return t},We=\"__core-js_shared__\",He=h[We]||Ge(We,{}),Ke=He;(Fe.exports=function(e,t){return Ke[e]||(Ke[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:\"3.31.1\",mode:\"pure\",copyright:\"Â© 2014-2023 Denis Pushkarev (zloirock.ru)\",license:\"https://github.com/zloirock/core-js/blob/v3.31.1/LICENSE\",source:\"https://github.com/zloirock/core-js\"});var Ye=Fe.exports,qe=J,ze=Object,Je=function(e){return ze(qe(e))},Xe=Je,Qe=d({}.hasOwnProperty),Ze=Object.hasOwn||function(e,t){return Qe(Xe(e),t)},$e=d,et=0,tt=Math.random(),it=$e(1..toString),nt=function(e){return\"Symbol(\"+(void 0===e?\"\":e)+\")_\"+it(++et+tt,36)},rt=Ye,ot=Ze,st=nt,at=Se,ct=ge,dt=h.Symbol,lt=rt(\"wks\"),ut=ct?dt.for||dt:dt&&dt.withoutSetter||st,ht=function(e){return ot(lt,e)||(lt[e]=at&&ot(dt,e)?dt[e]:ut(\"Symbol.\"+e)),lt[e]},pt=L,_t=te,Et=ye,ft=ke,mt=function(e,t){var i,n;if(\"string\"===t&&Ue(i=e.toString)&&!xe(n=Me(i,e)))return n;if(Ue(i=e.valueOf)&&!xe(n=Me(i,e)))return n;if(\"string\"!==t&&Ue(i=e.toString)&&!xe(n=Me(i,e)))return n;throw Ve(\"Can't convert object to primitive value\")},Tt=TypeError,St=ht(\"toPrimitive\"),gt=function(e,t){if(!_t(e)||Et(e))return e;var i,n=ft(e,St);if(n){if(void 0===t&&(t=\"default\"),i=pt(n,e,t),!_t(i)||Et(i))return i;throw Tt(\"Can't convert object to primitive value\")}return void 0===t&&(t=\"number\"),mt(e,t)},Rt=ye,Ct=function(e){var t=gt(e,\"string\");return Rt(t)?t:t+\"\"},It=te,vt=h.document,yt=It(vt)&&It(vt.createElement),At=function(e){return yt?vt.createElement(e):{}},bt=At,wt=!N&&!n((function(){return 7!=Object.defineProperty(bt(\"div\"),\"a\",{get:function(){return 7}}).a})),Ot=N,Nt=L,Dt=k,Pt=B,Lt=Z,kt=Ct,Mt=Ze,Ut=wt,xt=Object.getOwnPropertyDescriptor;O.f=Ot?xt:function(e,t){if(e=Lt(e),t=kt(t),Ut)try{return xt(e,t)}catch(e){}if(Mt(e,t))return Pt(!Nt(Dt.f,e,t),e[t])};var Vt=n,Ft=w,Bt=/#|\\.prototype\\./,jt=function(e,t){var i=Wt[Gt(e)];return i==Kt||i!=Ht&&(Ft(t)?Vt(t):!!t)},Gt=jt.normalize=function(e){return String(e).replace(Bt,\".\").toLowerCase()},Wt=jt.data={},Ht=jt.NATIVE=\"N\",Kt=jt.POLYFILL=\"P\",Yt=jt,qt=De,zt=r,Jt=v(v.bind),Xt=function(e,t){return qt(e),void 0===t?e:zt?Jt(e,t):function(){return e.apply(t,arguments)}},Qt={},Zt=N&&n((function(){return 42!=Object.defineProperty((function(){}),\"prototype\",{value:42,writable:!1}).prototype})),$t=te,ei=String,ti=TypeError,ii=function(e){if($t(e))return e;throw ti(ei(e)+\" is not an object\")},ni=N,ri=wt,oi=Zt,si=ii,ai=Ct,ci=TypeError,di=Object.defineProperty,li=Object.getOwnPropertyDescriptor,ui=\"enumerable\",hi=\"configurable\",pi=\"writable\";Qt.f=ni?oi?function(e,t,i){if(si(e),t=ai(t),si(i),\"function\"==typeof e&&\"prototype\"===t&&\"value\"in i&&pi in i&&!i[pi]){var n=li(e,t);n&&n[pi]&&(e[t]=i.value,i={configurable:hi in i?i[hi]:n[hi],enumerable:ui in i?i[ui]:n[ui],writable:!1})}return di(e,t,i)}:di:function(e,t,i){if(si(e),t=ai(t),si(i),ri)try{return di(e,t,i)}catch(e){}if(\"get\"in i||\"set\"in i)throw ci(\"Accessors not supported\");return\"value\"in i&&(e[t]=i.value),e};var _i=Qt,Ei=B,fi=N?function(e,t,i){return _i.f(e,t,Ei(1,i))}:function(e,t,i){return e[t]=i,e},mi=h,Ti=m,Si=v,gi=w,Ri=O.f,Ci=Yt,Ii=ie,vi=Xt,yi=fi,Ai=Ze,bi=function(e){var t=function(i,n,r){if(this instanceof t){switch(arguments.length){case 0:return new e;case 1:return new e(i);case 2:return new e(i,n)}return new e(i,n,r)}return Ti(e,this,arguments)};return t.prototype=e.prototype,t},wi=function(e,t){var i,n,r,o,s,a,c,d,l,u=e.target,h=e.global,p=e.stat,_=e.proto,E=h?mi:p?mi[u]:(mi[u]||{}).prototype,f=h?Ii:Ii[u]||yi(Ii,u,{})[u],m=f.prototype;for(o in t)n=!(i=Ci(h?o:u+(p?\".\":\"#\")+o,e.forced))&&E&&Ai(E,o),a=f[o],n&&(c=e.dontCallGetSet?(l=Ri(E,o))&&l.value:E[o]),s=n&&c?c:t[o],n&&typeof a==typeof s||(d=e.bind&&n?vi(s,mi):e.wrap&&n?bi(s):_&&gi(s)?Si(s):s,(e.sham||s&&s.sham||a&&a.sham)&&yi(d,\"sham\",!0),yi(f,o,d),_&&(Ai(Ii,r=u+\"Prototype\")||yi(Ii,r,{}),yi(Ii[r],o,s),e.real&&m&&(i||!m[o])&&yi(m,o,s)))},Oi=Math.ceil,Ni=Math.floor,Di=Math.trunc||function(e){var t=+e;return(t>0?Ni:Oi)(t)},Pi=Di,Li=function(e){var t=+e;return t!=t||0===t?0:Pi(t)},ki=Li,Mi=Math.max,Ui=Math.min,xi=function(e,t){var i=ki(e);return i<0?Mi(i+t,0):Ui(i,t)},Vi=Li,Fi=Math.min,Bi=function(e){return e>0?Fi(Vi(e),9007199254740991):0},ji=Bi,Gi=function(e){return ji(e.length)},Wi=Z,Hi=xi,Ki=Gi,Yi=function(e){return function(t,i,n){var r,o=Wi(t),s=Ki(o),a=Hi(n,s);if(e&&i!=i){for(;s>a;)if((r=o[a++])!=r)return!0}else for(;s>a;a++)if((e||a in o)&&o[a]===i)return e||a||0;return!e&&-1}},qi={includes:Yi(!0),indexOf:Yi(!1)},zi=qi.includes;wi({target:\"Array\",proto:!0,forced:n((function(){return!Array(1).includes()}))},{includes:function(e){return zi(this,e,arguments.length>1?arguments[1]:void 0)}});var Ji=ie,Xi=function(e){return Ji[e+\"Prototype\"]},Qi=Xi(\"Array\").includes,Zi=te,$i=R,en=ht(\"match\"),tn=function(e){var t;return Zi(e)&&(void 0!==(t=e[en])?!!t:\"RegExp\"==$i(e))},nn=tn,rn=TypeError,on={};on[ht(\"toStringTag\")]=\"z\";var sn=\"[object z]\"===String(on),an=sn,cn=w,dn=R,ln=ht(\"toStringTag\"),un=Object,hn=\"Arguments\"==dn(function(){return arguments}()),pn=an?dn:function(e){var t,i,n;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(i=function(e,t){try{return e[t]}catch(e){}}(t=un(e),ln))?i:hn?dn(t):\"Object\"==(n=dn(t))&&cn(t.callee)?\"Arguments\":n},_n=pn,En=String,fn=function(e){if(\"Symbol\"===_n(e))throw TypeError(\"Cannot convert a Symbol value to a string\");return En(e)},mn=ht(\"match\"),Tn=wi,Sn=function(e){if(nn(e))throw rn(\"The method doesn't accept regular expressions\");return e},gn=J,Rn=fn,Cn=function(e){var t=/./;try{\"/./\"[e](t)}catch(i){try{return t[mn]=!1,\"/./\"[e](t)}catch(e){}}return!1},In=d(\"\".indexOf);Tn({target:\"String\",proto:!0,forced:!Cn(\"includes\")},{includes:function(e){return!!~In(Rn(gn(this)),Rn(Sn(e)),arguments.length>1?arguments[1]:void 0)}});var vn=Xi(\"String\").includes,yn=l,An=Qi,bn=vn,wn=Array.prototype,On=String.prototype,Nn=function(e){var t=e.includes;return e===wn||yn(wn,e)&&t===wn.includes?An:\"string\"==typeof e||e===On||yn(On,e)&&t===On.includes?bn:t},Dn=i(Nn),Pn=De,Ln=Je,kn=K,Mn=Gi,Un=TypeError,xn=function(e){return function(t,i,n,r){Pn(i);var o=Ln(t),s=kn(o),a=Mn(o),c=e?a-1:0,d=e?-1:1;if(n<2)for(;;){if(c in s){r=s[c],c+=d;break}if(c+=d,e?c<0:a<=c)throw Un(\"Reduce of empty array with no initial value\")}for(;e?c>=0:a>c;c+=d)c in s&&(r=i(r,s[c],c,o));return r}},Vn={left:xn(!1),right:xn(!0)},Fn=n,Bn=function(e,t){var i=[][e];return!!i&&Fn((function(){i.call(null,t||function(){return 1},1)}))},jn=\"undefined\"!=typeof process&&\"process\"==R(process),Gn=Vn.left;wi({target:\"Array\",proto:!0,forced:!jn&&Ee>79&&Ee<83||!Bn(\"reduce\")},{reduce:function(e){var t=arguments.length;return Gn(this,e,t,t>1?arguments[1]:void 0)}});var Wn=Xi(\"Array\").reduce,Hn=l,Kn=Wn,Yn=Array.prototype,qn=function(e){var t=e.reduce;return e===Yn||Hn(Yn,e)&&t===Yn.reduce?Kn:t},zn=qn,Jn=i(zn);let Xn=!0,Qn=!0;function Zn(e,t,i){const n=e.match(t);return n&&n.length>=i&&parseInt(n[i],10)}function $n(e,t,i){if(!e.RTCPeerConnection)return;const n=e.RTCPeerConnection.prototype,r=n.addEventListener;n.addEventListener=function(e,n){if(e!==t)return r.apply(this,arguments);const o=e=>{const t=i(e);t&&(n.handleEvent?n.handleEvent(t):n(t))};return this._eventMap=this._eventMap||{},this._eventMap[t]||(this._eventMap[t]=new Map),this._eventMap[t].set(n,o),r.apply(this,[e,o])};const o=n.removeEventListener;n.removeEventListener=function(e,i){if(e!==t||!this._eventMap||!this._eventMap[t])return o.apply(this,arguments);if(!this._eventMap[t].has(i))return o.apply(this,arguments);const n=this._eventMap[t].get(i);return this._eventMap[t].delete(i),0===this._eventMap[t].size&&delete this._eventMap[t],0===Object.keys(this._eventMap).length&&delete this._eventMap,o.apply(this,[e,n])},Object.defineProperty(n,\"on\"+t,{get(){return this[\"_on\"+t]},set(e){this[\"_on\"+t]&&(this.removeEventListener(t,this[\"_on\"+t]),delete this[\"_on\"+t]),e&&this.addEventListener(t,this[\"_on\"+t]=e)},enumerable:!0,configurable:!0})}function er(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+typeof e+\". Please use a boolean.\"):(Xn=e,e?\"adapter.js logging disabled\":\"adapter.js logging enabled\")}function tr(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+typeof e+\". Please use a boolean.\"):(Qn=!e,\"adapter.js deprecation warnings \"+(e?\"disabled\":\"enabled\"))}function ir(){if(\"object\"==typeof window){if(Xn)return;\"undefined\"!=typeof console&&\"function\"==typeof console.log&&console.log.apply(console,arguments)}}function nr(e,t){Qn&&console.warn(e+\" is deprecated, please use \"+t+\" instead.\")}function rr(e){return\"[object Object]\"===Object.prototype.toString.call(e)}function or(e){var t;return rr(e)?Jn(t=Object.keys(e)).call(t,(function(t,i){const n=rr(e[i]),r=n?or(e[i]):e[i],o=n&&!Object.keys(r).length;return void 0===r||o?t:Object.assign(t,{[i]:r})}),{}):e}function sr(e,t,i){t&&!i.has(t.id)&&(i.set(t.id,t),Object.keys(t).forEach((n=>{n.endsWith(\"Id\")?sr(e,e.get(t[n]),i):n.endsWith(\"Ids\")&&t[n].forEach((t=>{sr(e,e.get(t),i)}))})))}function ar(e,t,i){const n=i?\"outbound-rtp\":\"inbound-rtp\",r=new Map;if(null===t)return r;const o=[];return e.forEach((e=>{\"track\"===e.type&&e.trackIdentifier===t.id&&o.push(e)})),o.forEach((t=>{e.forEach((i=>{i.type===n&&i.trackId===t.id&&sr(e,i,r)}))})),r}var cr=nt,dr=Ye(\"keys\"),lr=function(e){return dr[e]||(dr[e]=cr(e))},ur=!n((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),hr=Ze,pr=w,_r=Je,Er=ur,fr=lr(\"IE_PROTO\"),mr=Object,Tr=mr.prototype,Sr=Er?mr.getPrototypeOf:function(e){var t=_r(e);if(hr(t,fr))return t[fr];var i=t.constructor;return pr(i)&&t instanceof i?i.prototype:t instanceof mr?Tr:null},gr=d,Rr=De,Cr=w,Ir=String,vr=TypeError,yr=function(e,t,i){try{return gr(Rr(Object.getOwnPropertyDescriptor(e,t)[i]))}catch(e){}},Ar=ii,br=function(e){if(\"object\"==typeof e||Cr(e))return e;throw vr(\"Can't set \"+Ir(e)+\" as a prototype\")},wr=Object.setPrototypeOf||(\"__proto__\"in{}?function(){var e,t=!1,i={};try{(e=yr(Object.prototype,\"__proto__\",\"set\"))(i,[]),t=i instanceof Array}catch(e){}return function(i,n){return Ar(i),br(n),t?e(i,n):i.__proto__=n,i}}():void 0),Or={},Nr={},Dr=Ze,Pr=Z,Lr=qi.indexOf,kr=Nr,Mr=d([].push),Ur=function(e,t){var i,n=Pr(e),r=0,o=[];for(i in n)!Dr(kr,i)&&Dr(n,i)&&Mr(o,i);for(;t.length>r;)Dr(n,i=t[r++])&&(~Lr(o,i)||Mr(o,i));return o},xr=[\"constructor\",\"hasOwnProperty\",\"isPrototypeOf\",\"propertyIsEnumerable\",\"toLocaleString\",\"toString\",\"valueOf\"],Vr=Ur,Fr=xr.concat(\"length\",\"prototype\");Or.f=Object.getOwnPropertyNames||function(e){return Vr(e,Fr)};var Br={};Br.f=Object.getOwnPropertySymbols;var jr=ae,Gr=Or,Wr=Br,Hr=ii,Kr=d([].concat),Yr=jr(\"Reflect\",\"ownKeys\")||function(e){var t=Gr.f(Hr(e)),i=Wr.f;return i?Kr(t,i(e)):t},qr=Ze,zr=Yr,Jr=O,Xr=Qt,Qr={},Zr=Ur,$r=xr,eo=Object.keys||function(e){return Zr(e,$r)},to=N,io=Zt,no=Qt,ro=ii,oo=Z,so=eo;Qr.f=to&&!io?Object.defineProperties:function(e,t){ro(e);for(var i,n=oo(t),r=so(t),o=r.length,s=0;o>s;)no.f(e,i=r[s++],n[i]);return e};var ao,co=ae(\"document\",\"documentElement\"),lo=ii,uo=Qr,ho=xr,po=Nr,_o=co,Eo=At,fo=\"prototype\",mo=\"script\",To=lr(\"IE_PROTO\"),So=function(){},go=function(e){return\"<\"+mo+\">\"+e+\"</\"+mo+\">\"},Ro=function(e){e.write(go(\"\")),e.close();var t=e.parentWindow.Object;return e=null,t},Co=function(){try{ao=new ActiveXObject(\"htmlfile\")}catch(e){}var e,t,i;Co=\"undefined\"!=typeof document?document.domain&&ao?Ro(ao):(t=Eo(\"iframe\"),i=\"java\"+mo+\":\",t.style.display=\"none\",_o.appendChild(t),t.src=String(i),(e=t.contentWindow.document).open(),e.write(go(\"document.F=Object\")),e.close(),e.F):Ro(ao);for(var n=ho.length;n--;)delete Co[fo][ho[n]];return Co()};po[To]=!0;var Io=Object.create||function(e,t){var i;return null!==e?(So[fo]=lo(e),i=new So,So[fo]=null,i[To]=e):i=Co(),void 0===t?i:uo.f(i,t)},vo=te,yo=fi,Ao=Error,bo=d(\"\".replace),wo=String(Ao(\"zxcasd\").stack),Oo=/\\n\\s*at [^:]*:[^\\n]*/,No=Oo.test(wo),Do=B,Po=!n((function(){var e=Error(\"a\");return!(\"stack\"in e)||(Object.defineProperty(e,\"stack\",Do(1,7)),7!==e.stack)})),Lo=fi,ko=function(e,t){if(No&&\"string\"==typeof e&&!Ao.prepareStackTrace)for(;t--;)e=bo(e,Oo,\"\");return e},Mo=Po,Uo=Error.captureStackTrace,xo={},Vo=xo,Fo=ht(\"iterator\"),Bo=Array.prototype,jo=function(e){return void 0!==e&&(Vo.Array===e||Bo[Fo]===e)},Go=pn,Wo=ke,Ho=Y,Ko=xo,Yo=ht(\"iterator\"),qo=function(e){if(!Ho(e))return Wo(e,Yo)||Wo(e,\"@@iterator\")||Ko[Go(e)]},zo=L,Jo=De,Xo=ii,Qo=be,Zo=qo,$o=TypeError,es=function(e,t){var i=arguments.length<2?Zo(e):t;if(Jo(i))return Xo(zo(i,e));throw $o(Qo(e)+\" is not iterable\")},ts=L,is=ii,ns=ke,rs=function(e,t,i){var n,r;is(e);try{if(!(n=ns(e,\"return\"))){if(\"throw\"===t)throw i;return i}n=ts(n,e)}catch(e){r=!0,n=e}if(\"throw\"===t)throw i;if(r)throw n;return is(n),i},os=Xt,ss=L,as=ii,cs=be,ds=jo,ls=Gi,us=l,hs=es,ps=qo,_s=rs,Es=TypeError,fs=function(e,t){this.stopped=e,this.result=t},ms=fs.prototype,Ts=function(e,t,i){var n,r,o,s,a,c,d,l=i&&i.that,u=!(!i||!i.AS_ENTRIES),h=!(!i||!i.IS_RECORD),p=!(!i||!i.IS_ITERATOR),_=!(!i||!i.INTERRUPTED),E=os(t,l),f=function(e){return n&&_s(n,\"normal\",e),new fs(!0,e)},m=function(e){return u?(as(e),_?E(e[0],e[1],f):E(e[0],e[1])):_?E(e,f):E(e)};if(h)n=e.iterator;else if(p)n=e;else{if(!(r=ps(e)))throw Es(cs(e)+\" is not iterable\");if(ds(r)){for(o=0,s=ls(e);s>o;o++)if((a=m(e[o]))&&us(ms,a))return a;return new fs(!1)}n=hs(e,r)}for(c=h?e.next:n.next;!(d=ss(c,n)).done;){try{a=m(d.value)}catch(e){_s(n,\"throw\",e)}if(\"object\"==typeof a&&a&&us(ms,a))return a}return new fs(!1)},Ss=fn,gs=wi,Rs=l,Cs=Sr,Is=wr,vs=function(e,t,i){for(var n=zr(t),r=Xr.f,o=Jr.f,s=0;s<n.length;s++){var a=n[s];qr(e,a)||i&&qr(i,a)||r(e,a,o(t,a))}},ys=Io,As=fi,bs=B,ws=function(e,t){vo(t)&&\"cause\"in t&&yo(e,\"cause\",t.cause)},Os=function(e,t,i,n){Mo&&(Uo?Uo(e,t):Lo(e,\"stack\",ko(i,n)))},Ns=Ts,Ds=function(e,t){return void 0===e?arguments.length<2?\"\":t:Ss(e)},Ps=ht(\"toStringTag\"),Ls=Error,ks=[].push,Ms=function(e,t){var i,n=Rs(Us,this);Is?i=Is(Ls(),n?Cs(this):Us):(i=n?this:ys(Us),As(i,Ps,\"Error\")),void 0!==t&&As(i,\"message\",Ds(t)),Os(i,Ms,i.stack,1),arguments.length>2&&ws(i,arguments[2]);var r=[];return Ns(e,ks,{that:r}),As(i,\"errors\",r),i};Is?Is(Ms,Ls):vs(Ms,Ls,{name:!0});var Us=Ms.prototype=ys(Ls.prototype,{constructor:bs(1,Ms),message:bs(1,\"\"),name:bs(1,\"AggregateError\")});gs({global:!0,constructor:!0,arity:2},{AggregateError:Ms});var xs,Vs,Fs,Bs=w,js=h.WeakMap,Gs=Bs(js)&&/native code/.test(String(js)),Ws=h,Hs=te,Ks=fi,Ys=Ze,qs=He,zs=lr,Js=Nr,Xs=\"Object already initialized\",Qs=Ws.TypeError,Zs=Ws.WeakMap;if(Gs||qs.state){var $s=qs.state||(qs.state=new Zs);$s.get=$s.get,$s.has=$s.has,$s.set=$s.set,xs=function(e,t){if($s.has(e))throw Qs(Xs);return t.facade=e,$s.set(e,t),t},Vs=function(e){return $s.get(e)||{}},Fs=function(e){return $s.has(e)}}else{var ea=zs(\"state\");Js[ea]=!0,xs=function(e,t){if(Ys(e,ea))throw Qs(Xs);return t.facade=e,Ks(e,ea,t),t},Vs=function(e){return Ys(e,ea)?e[ea]:{}},Fs=function(e){return Ys(e,ea)}}var ta,ia,na,ra={set:xs,get:Vs,has:Fs,enforce:function(e){return Fs(e)?Vs(e):xs(e,{})},getterFor:function(e){return function(t){var i;if(!Hs(t)||(i=Vs(t)).type!==e)throw Qs(\"Incompatible receiver, \"+e+\" required\");return i}}},oa=N,sa=Ze,aa=Function.prototype,ca=oa&&Object.getOwnPropertyDescriptor,da=sa(aa,\"name\"),la={EXISTS:da,PROPER:da&&\"something\"===function(){}.name,CONFIGURABLE:da&&(!oa||oa&&ca(aa,\"name\").configurable)},ua=fi,ha=function(e,t,i,n){return n&&n.enumerable?e[t]=i:ua(e,t,i),e},pa=n,_a=w,Ea=te,fa=Io,ma=Sr,Ta=ha,Sa=ht(\"iterator\"),ga=!1;[].keys&&(\"next\"in(na=[].keys())?(ia=ma(ma(na)))!==Object.prototype&&(ta=ia):ga=!0);var Ra=!Ea(ta)||pa((function(){var e={};return ta[Sa].call(e)!==e}));_a((ta=Ra?{}:fa(ta))[Sa])||Ta(ta,Sa,(function(){return this}));var Ca={IteratorPrototype:ta,BUGGY_SAFARI_ITERATORS:ga},Ia=pn,va=sn?{}.toString:function(){return\"[object \"+Ia(this)+\"]\"},ya=sn,Aa=Qt.f,ba=fi,wa=Ze,Oa=va,Na=ht(\"toStringTag\"),Da=function(e,t,i,n){if(e){var r=i?e:e.prototype;wa(r,Na)||Aa(r,Na,{configurable:!0,value:t}),n&&!ya&&ba(r,\"toString\",Oa)}},Pa=Ca.IteratorPrototype,La=Io,ka=B,Ma=Da,Ua=xo,xa=function(){return this},Va=function(e,t,i,n){var r=t+\" Iterator\";return e.prototype=La(Pa,{next:ka(+!n,i)}),Ma(e,r,!1,!0),Ua[r]=xa,e},Fa=wi,Ba=L,ja=la,Ga=Va,Wa=Sr,Ha=Da,Ka=ha,Ya=xo,qa=Ca,za=ja.PROPER,Ja=qa.BUGGY_SAFARI_ITERATORS,Xa=ht(\"iterator\"),Qa=\"keys\",Za=\"values\",$a=\"entries\",ec=function(){return this},tc=function(e,t,i,n,r,o,s){Ga(i,t,n);var a,c,d,l=function(e){if(e===r&&E)return E;if(!Ja&&e in p)return p[e];switch(e){case Qa:case Za:case $a:return function(){return new i(this,e)}}return function(){return new i(this)}},u=t+\" Iterator\",h=!1,p=e.prototype,_=p[Xa]||p[\"@@iterator\"]||r&&p[r],E=!Ja&&_||l(r),f=\"Array\"==t&&p.entries||_;if(f&&(a=Wa(f.call(new e)))!==Object.prototype&&a.next&&(Ha(a,u,!0,!0),Ya[u]=ec),za&&r==Za&&_&&_.name!==Za&&(h=!0,E=function(){return Ba(_,this)}),r)if(c={values:l(Za),keys:o?E:l(Qa),entries:l($a)},s)for(d in c)(Ja||h||!(d in p))&&Ka(p,d,c[d]);else Fa({target:t,proto:!0,forced:Ja||h},c);return s&&p[Xa]!==E&&Ka(p,Xa,E,{name:r}),Ya[t]=E,c},ic=function(e,t){return{value:e,done:t}},nc=Z,rc=xo,oc=ra;Qt.f;var sc=tc,ac=ic,cc=\"Array Iterator\",dc=oc.set,lc=oc.getterFor(cc);sc(Array,\"Array\",(function(e,t){dc(this,{type:cc,target:nc(e),index:0,kind:t})}),(function(){var e=lc(this),t=e.target,i=e.kind,n=e.index++;return!t||n>=t.length?(e.target=void 0,ac(void 0,!0)):ac(\"keys\"==i?n:\"values\"==i?t[n]:[n,t[n]],!1)}),\"values\"),rc.Arguments=rc.Array;var uc=Qt,hc=function(e,t,i){return uc.f(e,t,i)},pc=ae,_c=hc,Ec=N,fc=ht(\"species\"),mc=l,Tc=TypeError,Sc=function(e,t){if(mc(t,e))return e;throw Tc(\"Incorrect invocation\")},gc=w,Rc=He,Cc=d(Function.toString);gc(Rc.inspectSource)||(Rc.inspectSource=function(e){return Cc(e)});var Ic=Rc.inspectSource,vc=d,yc=n,Ac=w,bc=pn,wc=Ic,Oc=function(){},Nc=[],Dc=ae(\"Reflect\",\"construct\"),Pc=/^\\s*(?:class|function)\\b/,Lc=vc(Pc.exec),kc=!Pc.exec(Oc),Mc=function(e){if(!Ac(e))return!1;try{return Dc(Oc,Nc,e),!0}catch(e){return!1}},Uc=function(e){if(!Ac(e))return!1;switch(bc(e)){case\"AsyncFunction\":case\"GeneratorFunction\":case\"AsyncGeneratorFunction\":return!1}try{return kc||!!Lc(Pc,wc(e))}catch(e){return!0}};Uc.sham=!0;var xc,Vc,Fc,Bc,jc=!Dc||yc((function(){var e;return Mc(Mc.call)||!Mc(Object)||!Mc((function(){e=!0}))||e}))?Uc:Mc,Gc=jc,Wc=be,Hc=TypeError,Kc=ii,Yc=function(e){if(Gc(e))return e;throw Hc(Wc(e)+\" is not a constructor\")},qc=Y,zc=ht(\"species\"),Jc=function(e,t){var i,n=Kc(e).constructor;return void 0===n||qc(i=Kc(n)[zc])?t:Yc(i)},Xc=d([].slice),Qc=TypeError,Zc=function(e,t){if(e<t)throw Qc(\"Not enough arguments\");return e},$c=/(?:ipad|iphone|ipod).*applewebkit/i.test(ce),ed=h,td=m,id=Xt,nd=w,rd=Ze,od=n,sd=co,ad=Xc,cd=At,dd=Zc,ld=$c,ud=jn,hd=ed.setImmediate,pd=ed.clearImmediate,_d=ed.process,Ed=ed.Dispatch,fd=ed.Function,md=ed.MessageChannel,Td=ed.String,Sd=0,gd={},Rd=\"onreadystatechange\";od((function(){xc=ed.location}));var Cd=function(e){if(rd(gd,e)){var t=gd[e];delete gd[e],t()}},Id=function(e){return function(){Cd(e)}},vd=function(e){Cd(e.data)},yd=function(e){ed.postMessage(Td(e),xc.protocol+\"//\"+xc.host)};hd&&pd||(hd=function(e){dd(arguments.length,1);var t=nd(e)?e:fd(e),i=ad(arguments,1);return gd[++Sd]=function(){td(t,void 0,i)},Vc(Sd),Sd},pd=function(e){delete gd[e]},ud?Vc=function(e){_d.nextTick(Id(e))}:Ed&&Ed.now?Vc=function(e){Ed.now(Id(e))}:md&&!ld?(Bc=(Fc=new md).port2,Fc.port1.onmessage=vd,Vc=id(Bc.postMessage,Bc)):ed.addEventListener&&nd(ed.postMessage)&&!ed.importScripts&&xc&&\"file:\"!==xc.protocol&&!od(yd)?(Vc=yd,ed.addEventListener(\"message\",vd,!1)):Vc=Rd in cd(\"script\")?function(e){sd.appendChild(cd(\"script\"))[Rd]=function(){sd.removeChild(this),Cd(e)}}:function(e){setTimeout(Id(e),0)});var Ad={set:hd,clear:pd},bd=function(){this.head=null,this.tail=null};bd.prototype={add:function(e){var t={item:e,next:null},i=this.tail;i?i.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return null===(this.head=e.next)&&(this.tail=null),e.item}};var wd,Od,Nd,Dd,Pd,Ld=bd,kd=/ipad|iphone|ipod/i.test(ce)&&\"undefined\"!=typeof Pebble,Md=/web0s(?!.*chrome)/i.test(ce),Ud=h,xd=Xt,Vd=O.f,Fd=Ad.set,Bd=Ld,jd=$c,Gd=kd,Wd=Md,Hd=jn,Kd=Ud.MutationObserver||Ud.WebKitMutationObserver,Yd=Ud.document,qd=Ud.process,zd=Ud.Promise,Jd=Vd(Ud,\"queueMicrotask\"),Xd=Jd&&Jd.value;if(!Xd){var Qd=new Bd,Zd=function(){var e,t;for(Hd&&(e=qd.domain)&&e.exit();t=Qd.get();)try{t()}catch(e){throw Qd.head&&wd(),e}e&&e.enter()};jd||Hd||Wd||!Kd||!Yd?!Gd&&zd&&zd.resolve?((Dd=zd.resolve(void 0)).constructor=zd,Pd=xd(Dd.then,Dd),wd=function(){Pd(Zd)}):Hd?wd=function(){qd.nextTick(Zd)}:(Fd=xd(Fd,Ud),wd=function(){Fd(Zd)}):(Od=!0,Nd=Yd.createTextNode(\"\"),new Kd(Zd).observe(Nd,{characterData:!0}),wd=function(){Nd.data=Od=!Od}),Xd=function(e){Qd.head||wd(),Qd.add(e)}}var $d=Xd,el=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}},tl=h.Promise,il=\"object\"==typeof Deno&&Deno&&\"object\"==typeof Deno.version,nl=!il&&!jn&&\"object\"==typeof window&&\"object\"==typeof document,rl=h,ol=tl,sl=w,al=Yt,cl=Ic,dl=ht,ll=nl,ul=il,hl=Ee,pl=ol&&ol.prototype,_l=dl(\"species\"),El=!1,fl=sl(rl.PromiseRejectionEvent),ml=al(\"Promise\",(function(){var e=cl(ol),t=e!==String(ol);if(!t&&66===hl)return!0;if(!pl.catch||!pl.finally)return!0;if(!hl||hl<51||!/native code/.test(e)){var i=new ol((function(e){e(1)})),n=function(e){e((function(){}),(function(){}))};if((i.constructor={})[_l]=n,!(El=i.then((function(){}))instanceof n))return!0}return!t&&(ll||ul)&&!fl})),Tl={CONSTRUCTOR:ml,REJECTION_EVENT:fl,SUBCLASSING:El},Sl={},gl=De,Rl=TypeError,Cl=function(e){var t,i;this.promise=new e((function(e,n){if(void 0!==t||void 0!==i)throw Rl(\"Bad Promise constructor\");t=e,i=n})),this.resolve=gl(t),this.reject=gl(i)};Sl.f=function(e){return new Cl(e)};var Il,vl,yl=wi,Al=jn,bl=h,wl=L,Ol=ha,Nl=Da,Dl=function(e){var t=pc(e);Ec&&t&&!t[fc]&&_c(t,fc,{configurable:!0,get:function(){return this}})},Pl=De,Ll=w,kl=te,Ml=Sc,Ul=Jc,xl=Ad.set,Vl=$d,Fl=function(e,t){try{1==arguments.length?console.error(e):console.error(e,t)}catch(e){}},Bl=el,jl=Ld,Gl=ra,Wl=tl,Hl=Tl,Kl=Sl,Yl=\"Promise\",ql=Hl.CONSTRUCTOR,zl=Hl.REJECTION_EVENT,Jl=Gl.getterFor(Yl),Xl=Gl.set,Ql=Wl&&Wl.prototype,Zl=Wl,$l=Ql,eu=bl.TypeError,tu=bl.document,iu=bl.process,nu=Kl.f,ru=nu,ou=!!(tu&&tu.createEvent&&bl.dispatchEvent),su=\"unhandledrejection\",au=function(e){var t;return!(!kl(e)||!Ll(t=e.then))&&t},cu=function(e,t){var i,n,r,o=t.value,s=1==t.state,a=s?e.ok:e.fail,c=e.resolve,d=e.reject,l=e.domain;try{a?(s||(2===t.rejection&&pu(t),t.rejection=1),!0===a?i=o:(l&&l.enter(),i=a(o),l&&(l.exit(),r=!0)),i===e.promise?d(eu(\"Promise-chain cycle\")):(n=au(i))?wl(n,i,c,d):c(i)):d(o)}catch(e){l&&!r&&l.exit(),d(e)}},du=function(e,t){e.notified||(e.notified=!0,Vl((function(){for(var i,n=e.reactions;i=n.get();)cu(i,e);e.notified=!1,t&&!e.rejection&&uu(e)})))},lu=function(e,t,i){var n,r;ou?((n=tu.createEvent(\"Event\")).promise=t,n.reason=i,n.initEvent(e,!1,!0),bl.dispatchEvent(n)):n={promise:t,reason:i},!zl&&(r=bl[\"on\"+e])?r(n):e===su&&Fl(\"Unhandled promise rejection\",i)},uu=function(e){wl(xl,bl,(function(){var t,i=e.facade,n=e.value;if(hu(e)&&(t=Bl((function(){Al?iu.emit(\"unhandledRejection\",n,i):lu(su,i,n)})),e.rejection=Al||hu(e)?2:1,t.error))throw t.value}))},hu=function(e){return 1!==e.rejection&&!e.parent},pu=function(e){wl(xl,bl,(function(){var t=e.facade;Al?iu.emit(\"rejectionHandled\",t):lu(\"rejectionhandled\",t,e.value)}))},_u=function(e,t,i){return function(n){e(t,n,i)}},Eu=function(e,t,i){e.done||(e.done=!0,i&&(e=i),e.value=t,e.state=2,du(e,!0))},fu=function(e,t,i){if(!e.done){e.done=!0,i&&(e=i);try{if(e.facade===t)throw eu(\"Promise can't be resolved itself\");var n=au(t);n?Vl((function(){var i={done:!1};try{wl(n,t,_u(fu,i,e),_u(Eu,i,e))}catch(t){Eu(i,t,e)}})):(e.value=t,e.state=1,du(e,!1))}catch(t){Eu({done:!1},t,e)}}};ql&&($l=(Zl=function(e){Ml(this,$l),Pl(e),wl(Il,this);var t=Jl(this);try{e(_u(fu,t),_u(Eu,t))}catch(e){Eu(t,e)}}).prototype,(Il=function(e){Xl(this,{type:Yl,done:!1,notified:!1,parent:!1,reactions:new jl,rejection:!1,state:0,value:void 0})}).prototype=Ol($l,\"then\",(function(e,t){var i=Jl(this),n=nu(Ul(this,Zl));return i.parent=!0,n.ok=!Ll(e)||e,n.fail=Ll(t)&&t,n.domain=Al?iu.domain:void 0,0==i.state?i.reactions.add(n):Vl((function(){cu(n,i)})),n.promise})),vl=function(){var e=new Il,t=Jl(e);this.promise=e,this.resolve=_u(fu,t),this.reject=_u(Eu,t)},Kl.f=nu=function(e){return e===Zl||undefined===e?new vl(e):ru(e)}),yl({global:!0,constructor:!0,wrap:!0,forced:ql},{Promise:Zl}),Nl(Zl,Yl,!1,!0),Dl(Yl);var mu=ht(\"iterator\"),Tu=!1;try{var Su=0,gu={next:function(){return{done:!!Su++}},return:function(){Tu=!0}};gu[mu]=function(){return this},Array.from(gu,(function(){throw 2}))}catch(e){}var Ru=tl,Cu=function(e,t){if(!t&&!Tu)return!1;var i=!1;try{var n={};n[mu]=function(){return{next:function(){return{done:i=!0}}}},e(n)}catch(e){}return i},Iu=Tl.CONSTRUCTOR||!Cu((function(e){Ru.all(e).then(void 0,(function(){}))})),vu=L,yu=De,Au=Sl,bu=el,wu=Ts;wi({target:\"Promise\",stat:!0,forced:Iu},{all:function(e){var t=this,i=Au.f(t),n=i.resolve,r=i.reject,o=bu((function(){var i=yu(t.resolve),o=[],s=0,a=1;wu(e,(function(e){var c=s++,d=!1;a++,vu(i,t,e).then((function(e){d||(d=!0,o[c]=e,--a||n(o))}),r)})),--a||n(o)}));return o.error&&r(o.value),i.promise}});var Ou=wi,Nu=Tl.CONSTRUCTOR;tl&&tl.prototype,Ou({target:\"Promise\",proto:!0,forced:Nu,real:!0},{catch:function(e){return this.then(void 0,e)}});var Du=L,Pu=De,Lu=Sl,ku=el,Mu=Ts;wi({target:\"Promise\",stat:!0,forced:Iu},{race:function(e){var t=this,i=Lu.f(t),n=i.reject,r=ku((function(){var r=Pu(t.resolve);Mu(e,(function(e){Du(r,t,e).then(i.resolve,n)}))}));return r.error&&n(r.value),i.promise}});var Uu=L,xu=Sl;wi({target:\"Promise\",stat:!0,forced:Tl.CONSTRUCTOR},{reject:function(e){var t=xu.f(this);return Uu(t.reject,void 0,e),t.promise}});var Vu=ii,Fu=te,Bu=Sl,ju=function(e,t){if(Vu(e),Fu(t)&&t.constructor===e)return t;var i=Bu.f(e);return(0,i.resolve)(t),i.promise},Gu=wi,Wu=tl,Hu=Tl.CONSTRUCTOR,Ku=ju,Yu=ae(\"Promise\"),qu=!Hu;Gu({target:\"Promise\",stat:!0,forced:true},{resolve:function(e){return Ku(qu&&this===Yu?Wu:this,e)}});var zu=L,Ju=De,Xu=Sl,Qu=el,Zu=Ts;wi({target:\"Promise\",stat:!0,forced:Iu},{allSettled:function(e){var t=this,i=Xu.f(t),n=i.resolve,r=i.reject,o=Qu((function(){var i=Ju(t.resolve),r=[],o=0,s=1;Zu(e,(function(e){var a=o++,c=!1;s++,zu(i,t,e).then((function(e){c||(c=!0,r[a]={status:\"fulfilled\",value:e},--s||n(r))}),(function(e){c||(c=!0,r[a]={status:\"rejected\",reason:e},--s||n(r))}))})),--s||n(r)}));return o.error&&r(o.value),i.promise}});var $u=L,eh=De,th=ae,ih=Sl,nh=el,rh=Ts,oh=\"No one promise resolved\";wi({target:\"Promise\",stat:!0,forced:Iu},{any:function(e){var t=this,i=th(\"AggregateError\"),n=ih.f(t),r=n.resolve,o=n.reject,s=nh((function(){var n=eh(t.resolve),s=[],a=0,c=1,d=!1;rh(e,(function(e){var l=a++,u=!1;c++,$u(n,t,e).then((function(e){u||d||(d=!0,r(e))}),(function(e){u||d||(u=!0,s[l]=e,--c||o(new i(s,oh)))}))})),--c||o(new i(s,oh))}));return s.error&&o(s.value),n.promise}});var sh=wi,ah=tl,ch=n,dh=ae,lh=w,uh=Jc,hh=ju,ph=ah&&ah.prototype;sh({target:\"Promise\",proto:!0,real:!0,forced:!!ah&&ch((function(){ph.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=uh(this,dh(\"Promise\")),i=lh(e);return this.then(i?function(i){return hh(t,e()).then((function(){return i}))}:e,i?function(i){return hh(t,e()).then((function(){throw i}))}:e)}});var _h=d,Eh=Li,fh=fn,mh=J,Th=_h(\"\".charAt),Sh=_h(\"\".charCodeAt),gh=_h(\"\".slice),Rh=function(e){return function(t,i){var n,r,o=fh(mh(t)),s=Eh(i),a=o.length;return s<0||s>=a?e?\"\":void 0:(n=Sh(o,s))<55296||n>56319||s+1===a||(r=Sh(o,s+1))<56320||r>57343?e?Th(o,s):n:e?gh(o,s,s+2):r-56320+(n-55296<<10)+65536}},Ch={codeAt:Rh(!1),charAt:Rh(!0)},Ih=Ch.charAt,vh=fn,yh=ra,Ah=tc,bh=ic,wh=\"String Iterator\",Oh=yh.set,Nh=yh.getterFor(wh);Ah(String,\"String\",(function(e){Oh(this,{type:wh,string:vh(e),index:0})}),(function(){var e,t=Nh(this),i=t.string,n=t.index;return n>=i.length?bh(void 0,!0):(e=Ih(i,n),t.index+=e.length,bh(e,!1))}));var Dh=ie.Promise,Ph={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},Lh=h,kh=pn,Mh=fi,Uh=xo,xh=ht(\"toStringTag\");for(var Vh in Ph){var Fh=Lh[Vh],Bh=Fh&&Fh.prototype;Bh&&kh(Bh)!==xh&&Mh(Bh,xh,Vh),Uh[Vh]=Uh.Array}var jh=Dh,Gh=i(jh);const Wh=ir;function Hh(e,t){const i=e&&e.navigator;if(!i.mediaDevices)return;const n=function(e){if(\"object\"!=typeof e||e.mandatory||e.optional)return e;const t={};return Object.keys(e).forEach((i=>{if(\"require\"===i||\"advanced\"===i||\"mediaSource\"===i)return;const n=\"object\"==typeof e[i]?e[i]:{ideal:e[i]};void 0!==n.exact&&\"number\"==typeof n.exact&&(n.min=n.max=n.exact);const r=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):\"deviceId\"===t?\"sourceId\":t};if(void 0!==n.ideal){t.optional=t.optional||[];let e={};\"number\"==typeof n.ideal?(e[r(\"min\",i)]=n.ideal,t.optional.push(e),e={},e[r(\"max\",i)]=n.ideal,t.optional.push(e)):(e[r(\"\",i)]=n.ideal,t.optional.push(e))}void 0!==n.exact&&\"number\"!=typeof n.exact?(t.mandatory=t.mandatory||{},t.mandatory[r(\"\",i)]=n.exact):[\"min\",\"max\"].forEach((e=>{void 0!==n[e]&&(t.mandatory=t.mandatory||{},t.mandatory[r(e,i)]=n[e])}))})),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t},r=function(e,r){if(t.version>=61)return r(e);if((e=JSON.parse(JSON.stringify(e)))&&\"object\"==typeof e.audio){const t=function(e,t,i){t in e&&!(i in e)&&(e[i]=e[t],delete e[t])};t((e=JSON.parse(JSON.stringify(e))).audio,\"autoGainControl\",\"googAutoGainControl\"),t(e.audio,\"noiseSuppression\",\"googNoiseSuppression\"),e.audio=n(e.audio)}if(e&&\"object\"==typeof e.video){let o=e.video.facingMode;o=o&&(\"object\"==typeof o?o:{ideal:o});const s=t.version<66;if(o&&(\"user\"===o.exact||\"environment\"===o.exact||\"user\"===o.ideal||\"environment\"===o.ideal)&&(!i.mediaDevices.getSupportedConstraints||!i.mediaDevices.getSupportedConstraints().facingMode||s)){let t;if(delete e.video.facingMode,\"environment\"===o.exact||\"environment\"===o.ideal?t=[\"back\",\"rear\"]:\"user\"!==o.exact&&\"user\"!==o.ideal||(t=[\"front\"]),t)return i.mediaDevices.enumerateDevices().then((i=>{let s=(i=i.filter((e=>\"videoinput\"===e.kind))).find((e=>t.some((t=>{var i;return Dn(i=e.label.toLowerCase()).call(i,t)}))));return!s&&i.length&&Dn(t).call(t,\"back\")&&(s=i[i.length-1]),s&&(e.video.deviceId=o.exact?{exact:s.deviceId}:{ideal:s.deviceId}),e.video=n(e.video),Wh(\"chrome: \"+JSON.stringify(e)),r(e)}))}e.video=n(e.video)}return Wh(\"chrome: \"+JSON.stringify(e)),r(e)},o=function(e){return t.version>=64?e:{name:{PermissionDeniedError:\"NotAllowedError\",PermissionDismissedError:\"NotAllowedError\",InvalidStateError:\"NotAllowedError\",DevicesNotFoundError:\"NotFoundError\",ConstraintNotSatisfiedError:\"OverconstrainedError\",TrackStartError:\"NotReadableError\",MediaDeviceFailedDueToShutdown:\"NotAllowedError\",MediaDeviceKillSwitchOn:\"NotAllowedError\",TabCaptureError:\"AbortError\",ScreenCaptureError:\"AbortError\",DeviceCaptureError:\"AbortError\"}[e.name]||e.name,message:e.message,constraint:e.constraint||e.constraintName,toString(){return this.name+(this.message&&\": \")+this.message}}};if(i.getUserMedia=function(e,t,n){r(e,(e=>{i.webkitGetUserMedia(e,t,(e=>{n&&n(o(e))}))}))}.bind(i),i.mediaDevices.getUserMedia){const e=i.mediaDevices.getUserMedia.bind(i.mediaDevices);i.mediaDevices.getUserMedia=function(t){return r(t,(t=>e(t).then((e=>{if(t.audio&&!e.getAudioTracks().length||t.video&&!e.getVideoTracks().length)throw e.getTracks().forEach((e=>{e.stop()})),new DOMException(\"\",\"NotFoundError\");return e}),(e=>Gh.reject(o(e))))))}}}function Kh(e){e.MediaStream=e.MediaStream||e.webkitMediaStream}function Yh(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&!(\"ontrack\"in e.RTCPeerConnection.prototype)){Object.defineProperty(e.RTCPeerConnection.prototype,\"ontrack\",{get(){return this._ontrack},set(e){this._ontrack&&this.removeEventListener(\"track\",this._ontrack),this.addEventListener(\"track\",this._ontrack=e)},enumerable:!0,configurable:!0});const t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){return this._ontrackpoly||(this._ontrackpoly=t=>{t.stream.addEventListener(\"addtrack\",(i=>{let n;n=e.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find((e=>e.track&&e.track.id===i.track.id)):{track:i.track};const r=new Event(\"track\");r.track=i.track,r.receiver=n,r.transceiver={receiver:n},r.streams=[t.stream],this.dispatchEvent(r)})),t.stream.getTracks().forEach((i=>{let n;n=e.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find((e=>e.track&&e.track.id===i.id)):{track:i};const r=new Event(\"track\");r.track=i,r.receiver=n,r.transceiver={receiver:n},r.streams=[t.stream],this.dispatchEvent(r)}))},this.addEventListener(\"addstream\",this._ontrackpoly)),t.apply(this,arguments)}}else $n(e,\"track\",(e=>(e.transceiver||Object.defineProperty(e,\"transceiver\",{value:{receiver:e.receiver}}),e)))}function qh(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&!(\"getSenders\"in e.RTCPeerConnection.prototype)&&\"createDTMFSender\"in e.RTCPeerConnection.prototype){const t=function(e,t){return{track:t,get dtmf(){return void 0===this._dtmf&&(\"audio\"===t.kind?this._dtmf=e.createDTMFSender(t):this._dtmf=null),this._dtmf},_pc:e}};if(!e.RTCPeerConnection.prototype.getSenders){e.RTCPeerConnection.prototype.getSenders=function(){return this._senders=this._senders||[],this._senders.slice()};const i=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,n){let r=i.apply(this,arguments);return r||(r=t(this,e),this._senders.push(r)),r};const n=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){n.apply(this,arguments);const t=this._senders.indexOf(e);-1!==t&&this._senders.splice(t,1)}}const i=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){this._senders=this._senders||[],i.apply(this,[e]),e.getTracks().forEach((e=>{this._senders.push(t(this,e))}))};const n=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){this._senders=this._senders||[],n.apply(this,[e]),e.getTracks().forEach((e=>{const t=this._senders.find((t=>t.track===e));t&&this._senders.splice(this._senders.indexOf(t),1)}))}}else if(\"object\"==typeof e&&e.RTCPeerConnection&&\"getSenders\"in e.RTCPeerConnection.prototype&&\"createDTMFSender\"in e.RTCPeerConnection.prototype&&e.RTCRtpSender&&!(\"dtmf\"in e.RTCRtpSender.prototype)){const t=e.RTCPeerConnection.prototype.getSenders;e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e},Object.defineProperty(e.RTCRtpSender.prototype,\"dtmf\",{get(){return void 0===this._dtmf&&(\"audio\"===this.track.kind?this._dtmf=this._pc.createDTMFSender(this.track):this._dtmf=null),this._dtmf}})}}function zh(e){if(!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){const[e,i,n]=arguments;if(arguments.length>0&&\"function\"==typeof e)return t.apply(this,arguments);if(0===t.length&&(0===arguments.length||\"function\"!=typeof e))return t.apply(this,[]);const r=function(e){const t={};return e.result().forEach((e=>{const i={id:e.id,timestamp:e.timestamp,type:{localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"}[e.type]||e.type};e.names().forEach((t=>{i[t]=e.stat(t)})),t[i.id]=i})),t},o=function(e){return new Map(Object.keys(e).map((t=>[t,e[t]])))};if(arguments.length>=2){const n=function(e){i(o(r(e)))};return t.apply(this,[n,e])}return new Gh(((e,i)=>{t.apply(this,[function(t){e(o(r(t)))},i])})).then(i,n)}}function Jh(e){if(!(\"object\"==typeof e&&e.RTCPeerConnection&&e.RTCRtpSender&&e.RTCRtpReceiver))return;if(!(\"getStats\"in e.RTCRtpSender.prototype)){const t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e});const i=e.RTCPeerConnection.prototype.addTrack;i&&(e.RTCPeerConnection.prototype.addTrack=function(){const e=i.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){const e=this;return this._pc.getStats().then((t=>ar(t,e.track,!0)))}}if(!(\"getStats\"in e.RTCRtpReceiver.prototype)){const t=e.RTCPeerConnection.prototype.getReceivers;t&&(e.RTCPeerConnection.prototype.getReceivers=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e}),$n(e,\"track\",(e=>(e.receiver._pc=e.srcElement,e))),e.RTCRtpReceiver.prototype.getStats=function(){const e=this;return this._pc.getStats().then((t=>ar(t,e.track,!1)))}}if(!(\"getStats\"in e.RTCRtpSender.prototype)||!(\"getStats\"in e.RTCRtpReceiver.prototype))return;const t=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){if(arguments.length>0&&arguments[0]instanceof e.MediaStreamTrack){const e=arguments[0];let t,i,n;return this.getSenders().forEach((i=>{i.track===e&&(t?n=!0:t=i)})),this.getReceivers().forEach((t=>(t.track===e&&(i?n=!0:i=t),t.track===e))),n||t&&i?Gh.reject(new DOMException(\"There are more than one sender or receiver for the track.\",\"InvalidAccessError\")):t?t.getStats():i?i.getStats():Gh.reject(new DOMException(\"There is no sender or receiver for the track.\",\"InvalidAccessError\"))}return t.apply(this,arguments)}}function Xh(e){e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},Object.keys(this._shimmedLocalStreams).map((e=>this._shimmedLocalStreams[e][0]))};const t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,i){if(!i)return t.apply(this,arguments);this._shimmedLocalStreams=this._shimmedLocalStreams||{};const n=t.apply(this,arguments);return this._shimmedLocalStreams[i.id]?-1===this._shimmedLocalStreams[i.id].indexOf(n)&&this._shimmedLocalStreams[i.id].push(n):this._shimmedLocalStreams[i.id]=[i,n],n};const i=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){this._shimmedLocalStreams=this._shimmedLocalStreams||{},e.getTracks().forEach((e=>{const t=this.getSenders().find((t=>t.track===e));if(t)throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")}));const t=this.getSenders();i.apply(this,arguments);const n=this.getSenders().filter((e=>-1===t.indexOf(e)));this._shimmedLocalStreams[e.id]=[e].concat(n)};const n=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},delete this._shimmedLocalStreams[e.id],n.apply(this,arguments)};const r=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},e&&Object.keys(this._shimmedLocalStreams).forEach((t=>{const i=this._shimmedLocalStreams[t].indexOf(e);-1!==i&&this._shimmedLocalStreams[t].splice(i,1),1===this._shimmedLocalStreams[t].length&&delete this._shimmedLocalStreams[t]})),r.apply(this,arguments)}}function Qh(e,t){if(!e.RTCPeerConnection)return;if(e.RTCPeerConnection.prototype.addTrack&&t.version>=65)return Xh(e);const i=e.RTCPeerConnection.prototype.getLocalStreams;e.RTCPeerConnection.prototype.getLocalStreams=function(){const e=i.apply(this);return this._reverseStreams=this._reverseStreams||{},e.map((e=>this._reverseStreams[e.id]))};const n=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(t){if(this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},t.getTracks().forEach((e=>{const t=this.getSenders().find((t=>t.track===e));if(t)throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")})),!this._reverseStreams[t.id]){const i=new e.MediaStream(t.getTracks());this._streams[t.id]=i,this._reverseStreams[i.id]=t,t=i}n.apply(this,[t])};const r=e.RTCPeerConnection.prototype.removeStream;function o(e,t){let i=t.sdp;return Object.keys(e._reverseStreams||[]).forEach((t=>{const n=e._reverseStreams[t],r=e._streams[n.id];i=i.replace(new RegExp(r.id,\"g\"),n.id)})),new RTCSessionDescription({type:t.type,sdp:i})}e.RTCPeerConnection.prototype.removeStream=function(e){this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},r.apply(this,[this._streams[e.id]||e]),delete this._reverseStreams[this._streams[e.id]?this._streams[e.id].id:e.id],delete this._streams[e.id]},e.RTCPeerConnection.prototype.addTrack=function(t,i){if(\"closed\"===this.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");const n=[].slice.call(arguments,1);if(1!==n.length||!n[0].getTracks().find((e=>e===t)))throw new DOMException(\"The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.\",\"NotSupportedError\");const r=this.getSenders().find((e=>e.track===t));if(r)throw new DOMException(\"Track already exists.\",\"InvalidAccessError\");this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{};const o=this._streams[i.id];if(o)o.addTrack(t),Gh.resolve().then((()=>{this.dispatchEvent(new Event(\"negotiationneeded\"))}));else{const n=new e.MediaStream([t]);this._streams[i.id]=n,this._reverseStreams[n.id]=i,this.addStream(n)}return this.getSenders().find((e=>e.track===t))},[\"createOffer\",\"createAnswer\"].forEach((function(t){const i=e.RTCPeerConnection.prototype[t],n={[t](){const e=arguments;return arguments.length&&\"function\"==typeof arguments[0]?i.apply(this,[t=>{const i=o(this,t);e[0].apply(null,[i])},t=>{e[1]&&e[1].apply(null,t)},arguments[2]]):i.apply(this,arguments).then((e=>o(this,e)))}};e.RTCPeerConnection.prototype[t]=n[t]}));const s=e.RTCPeerConnection.prototype.setLocalDescription;e.RTCPeerConnection.prototype.setLocalDescription=function(){return arguments.length&&arguments[0].type?(arguments[0]=function(e,t){let i=t.sdp;return Object.keys(e._reverseStreams||[]).forEach((t=>{const n=e._reverseStreams[t],r=e._streams[n.id];i=i.replace(new RegExp(n.id,\"g\"),r.id)})),new RTCSessionDescription({type:t.type,sdp:i})}(this,arguments[0]),s.apply(this,arguments)):s.apply(this,arguments)};const a=Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype,\"localDescription\");Object.defineProperty(e.RTCPeerConnection.prototype,\"localDescription\",{get(){const e=a.get.apply(this);return\"\"===e.type?e:o(this,e)}}),e.RTCPeerConnection.prototype.removeTrack=function(e){if(\"closed\"===this.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");if(!e._pc)throw new DOMException(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\",\"TypeError\");if(!(e._pc===this))throw new DOMException(\"Sender was not created by this connection.\",\"InvalidAccessError\");let t;this._streams=this._streams||{},Object.keys(this._streams).forEach((i=>{this._streams[i].getTracks().find((t=>e.track===t))&&(t=this._streams[i])})),t&&(1===t.getTracks().length?this.removeStream(this._reverseStreams[t.id]):t.removeTrack(e.track),this.dispatchEvent(new Event(\"negotiationneeded\")))}}function Zh(e,t){!e.RTCPeerConnection&&e.webkitRTCPeerConnection&&(e.RTCPeerConnection=e.webkitRTCPeerConnection),e.RTCPeerConnection&&t.version<53&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach((function(t){const i=e.RTCPeerConnection.prototype[t],n={[t](){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),i.apply(this,arguments)}};e.RTCPeerConnection.prototype[t]=n[t]}))}function $h(e,t){$n(e,\"negotiationneeded\",(e=>{const i=e.target;if(!(t.version<72||i.getConfiguration&&\"plan-b\"===i.getConfiguration().sdpSemantics)||\"stable\"===i.signalingState)return e}))}var ep=Object.freeze({__proto__:null,fixNegotiationNeeded:$h,shimAddTrackRemoveTrack:Qh,shimAddTrackRemoveTrackWithNative:Xh,shimGetDisplayMedia:function(e,t){e.navigator.mediaDevices&&\"getDisplayMedia\"in e.navigator.mediaDevices||e.navigator.mediaDevices&&(\"function\"==typeof t?e.navigator.mediaDevices.getDisplayMedia=function(i){return t(i).then((t=>{const n=i.video&&i.video.width,r=i.video&&i.video.height,o=i.video&&i.video.frameRate;return i.video={mandatory:{chromeMediaSource:\"desktop\",chromeMediaSourceId:t,maxFrameRate:o||3}},n&&(i.video.mandatory.maxWidth=n),r&&(i.video.mandatory.maxHeight=r),e.navigator.mediaDevices.getUserMedia(i)}))}:console.error(\"shimGetDisplayMedia: getSourceId argument is not a function\"))},shimGetSendersWithDtmf:qh,shimGetStats:zh,shimGetUserMedia:Hh,shimMediaStream:Kh,shimOnTrack:Yh,shimPeerConnection:Zh,shimSenderReceiverGetStats:Jh});function tp(e,t){const i=e&&e.navigator,n=e&&e.MediaStreamTrack;if(i.getUserMedia=function(e,t,n){nr(\"navigator.getUserMedia\",\"navigator.mediaDevices.getUserMedia\"),i.mediaDevices.getUserMedia(e).then(t,n)},!(t.version>55&&\"autoGainControl\"in i.mediaDevices.getSupportedConstraints())){const e=function(e,t,i){t in e&&!(i in e)&&(e[i]=e[t],delete e[t])},t=i.mediaDevices.getUserMedia.bind(i.mediaDevices);if(i.mediaDevices.getUserMedia=function(i){return\"object\"==typeof i&&\"object\"==typeof i.audio&&(i=JSON.parse(JSON.stringify(i)),e(i.audio,\"autoGainControl\",\"mozAutoGainControl\"),e(i.audio,\"noiseSuppression\",\"mozNoiseSuppression\")),t(i)},n&&n.prototype.getSettings){const t=n.prototype.getSettings;n.prototype.getSettings=function(){const i=t.apply(this,arguments);return e(i,\"mozAutoGainControl\",\"autoGainControl\"),e(i,\"mozNoiseSuppression\",\"noiseSuppression\"),i}}if(n&&n.prototype.applyConstraints){const t=n.prototype.applyConstraints;n.prototype.applyConstraints=function(i){return\"audio\"===this.kind&&\"object\"==typeof i&&(i=JSON.parse(JSON.stringify(i)),e(i,\"autoGainControl\",\"mozAutoGainControl\"),e(i,\"noiseSuppression\",\"mozNoiseSuppression\")),t.apply(this,[i])}}}}function ip(e){\"object\"==typeof e&&e.RTCTrackEvent&&\"receiver\"in e.RTCTrackEvent.prototype&&!(\"transceiver\"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get(){return{receiver:this.receiver}}})}function np(e,t){if(\"object\"!=typeof e||!e.RTCPeerConnection&&!e.mozRTCPeerConnection)return;!e.RTCPeerConnection&&e.mozRTCPeerConnection&&(e.RTCPeerConnection=e.mozRTCPeerConnection),t.version<53&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach((function(t){const i=e.RTCPeerConnection.prototype[t],n={[t](){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),i.apply(this,arguments)}};e.RTCPeerConnection.prototype[t]=n[t]}));const i={inboundrtp:\"inbound-rtp\",outboundrtp:\"outbound-rtp\",candidatepair:\"candidate-pair\",localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"},n=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){const[e,r,o]=arguments;return n.apply(this,[e||null]).then((e=>{if(t.version<53&&!r)try{e.forEach((e=>{e.type=i[e.type]||e.type}))}catch(t){if(\"TypeError\"!==t.name)throw t;e.forEach(((t,n)=>{e.set(n,Object.assign({},t,{type:i[t.type]||t.type}))}))}return e})).then(r,o)}}function rp(e){if(\"object\"!=typeof e||!e.RTCPeerConnection||!e.RTCRtpSender)return;if(e.RTCRtpSender&&\"getStats\"in e.RTCRtpSender.prototype)return;const t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e});const i=e.RTCPeerConnection.prototype.addTrack;i&&(e.RTCPeerConnection.prototype.addTrack=function(){const e=i.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){return this.track?this._pc.getStats(this.track):Gh.resolve(new Map)}}function op(e){if(\"object\"!=typeof e||!e.RTCPeerConnection||!e.RTCRtpSender)return;if(e.RTCRtpSender&&\"getStats\"in e.RTCRtpReceiver.prototype)return;const t=e.RTCPeerConnection.prototype.getReceivers;t&&(e.RTCPeerConnection.prototype.getReceivers=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e}),$n(e,\"track\",(e=>(e.receiver._pc=e.srcElement,e))),e.RTCRtpReceiver.prototype.getStats=function(){return this._pc.getStats(this.track)}}function sp(e){e.RTCPeerConnection&&!(\"removeStream\"in e.RTCPeerConnection.prototype)&&(e.RTCPeerConnection.prototype.removeStream=function(e){nr(\"removeStream\",\"removeTrack\"),this.getSenders().forEach((t=>{var i;t.track&&Dn(i=e.getTracks()).call(i,t.track)&&this.removeTrack(t)}))})}function ap(e){e.DataChannel&&!e.RTCDataChannel&&(e.RTCDataChannel=e.DataChannel)}function cp(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.addTransceiver;t&&(e.RTCPeerConnection.prototype.addTransceiver=function(){this.setParametersPromises=[];let e=arguments[1]&&arguments[1].sendEncodings;void 0===e&&(e=[]),e=[...e];const i=e.length>0;i&&e.forEach((e=>{if(\"rid\"in e){if(!/^[a-z0-9]{0,16}$/i.test(e.rid))throw new TypeError(\"Invalid RID value provided.\")}if(\"scaleResolutionDownBy\"in e&&!(parseFloat(e.scaleResolutionDownBy)>=1))throw new RangeError(\"scale_resolution_down_by must be >= 1.0\");if(\"maxFramerate\"in e&&!(parseFloat(e.maxFramerate)>=0))throw new RangeError(\"max_framerate must be >= 0.0\")}));const n=t.apply(this,arguments);if(i){const{sender:t}=n,i=t.getParameters();(!(\"encodings\"in i)||1===i.encodings.length&&0===Object.keys(i.encodings[0]).length)&&(i.encodings=e,t.sendEncodings=e,this.setParametersPromises.push(t.setParameters(i).then((()=>{delete t.sendEncodings})).catch((()=>{delete t.sendEncodings}))))}return n})}function dp(e){if(\"object\"!=typeof e||!e.RTCRtpSender)return;const t=e.RTCRtpSender.prototype.getParameters;t&&(e.RTCRtpSender.prototype.getParameters=function(){const e=t.apply(this,arguments);return\"encodings\"in e||(e.encodings=[].concat(this.sendEncodings||[{}])),e})}function lp(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(){return this.setParametersPromises&&this.setParametersPromises.length?Gh.all(this.setParametersPromises).then((()=>t.apply(this,arguments))).finally((()=>{this.setParametersPromises=[]})):t.apply(this,arguments)}}function up(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.createAnswer;e.RTCPeerConnection.prototype.createAnswer=function(){return this.setParametersPromises&&this.setParametersPromises.length?Gh.all(this.setParametersPromises).then((()=>t.apply(this,arguments))).finally((()=>{this.setParametersPromises=[]})):t.apply(this,arguments)}}var hp=Object.freeze({__proto__:null,shimAddTransceiver:cp,shimCreateAnswer:up,shimCreateOffer:lp,shimGetDisplayMedia:function(e,t){e.navigator.mediaDevices&&\"getDisplayMedia\"in e.navigator.mediaDevices||e.navigator.mediaDevices&&(e.navigator.mediaDevices.getDisplayMedia=function(i){if(!i||!i.video){const e=new DOMException(\"getDisplayMedia without video constraints is undefined\");return e.name=\"NotFoundError\",e.code=8,Gh.reject(e)}return!0===i.video?i.video={mediaSource:t}:i.video.mediaSource=t,e.navigator.mediaDevices.getUserMedia(i)})},shimGetParameters:dp,shimGetUserMedia:tp,shimOnTrack:ip,shimPeerConnection:np,shimRTCDataChannel:ap,shimReceiverGetStats:op,shimRemoveStream:sp,shimSenderGetStats:rp});function pp(e){if(\"object\"==typeof e&&e.RTCPeerConnection){if(\"getLocalStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._localStreams||(this._localStreams=[]),this._localStreams}),!(\"addStream\"in e.RTCPeerConnection.prototype)){const t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addStream=function(e){var i;this._localStreams||(this._localStreams=[]),Dn(i=this._localStreams).call(i,e)||this._localStreams.push(e),e.getAudioTracks().forEach((i=>t.call(this,i,e))),e.getVideoTracks().forEach((i=>t.call(this,i,e)))},e.RTCPeerConnection.prototype.addTrack=function(e){for(var i=arguments.length,n=new Array(i>1?i-1:0),r=1;r<i;r++)n[r-1]=arguments[r];return n&&n.forEach((e=>{var t;this._localStreams?Dn(t=this._localStreams).call(t,e)||this._localStreams.push(e):this._localStreams=[e]})),t.apply(this,arguments)}}\"removeStream\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.removeStream=function(e){this._localStreams||(this._localStreams=[]);const t=this._localStreams.indexOf(e);if(-1===t)return;this._localStreams.splice(t,1);const i=e.getTracks();this.getSenders().forEach((e=>{Dn(i).call(i,e.track)&&this.removeTrack(e)}))})}}function _p(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&(\"getRemoteStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getRemoteStreams=function(){return this._remoteStreams?this._remoteStreams:[]}),!(\"onaddstream\"in e.RTCPeerConnection.prototype))){Object.defineProperty(e.RTCPeerConnection.prototype,\"onaddstream\",{get(){return this._onaddstream},set(e){this._onaddstream&&(this.removeEventListener(\"addstream\",this._onaddstream),this.removeEventListener(\"track\",this._onaddstreampoly)),this.addEventListener(\"addstream\",this._onaddstream=e),this.addEventListener(\"track\",this._onaddstreampoly=e=>{e.streams.forEach((e=>{var t;if(this._remoteStreams||(this._remoteStreams=[]),Dn(t=this._remoteStreams).call(t,e))return;this._remoteStreams.push(e);const i=new Event(\"addstream\");i.stream=e,this.dispatchEvent(i)}))})}});const t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){const e=this;return this._onaddstreampoly||this.addEventListener(\"track\",this._onaddstreampoly=function(t){t.streams.forEach((t=>{if(e._remoteStreams||(e._remoteStreams=[]),e._remoteStreams.indexOf(t)>=0)return;e._remoteStreams.push(t);const i=new Event(\"addstream\");i.stream=t,e.dispatchEvent(i)}))}),t.apply(e,arguments)}}}function Ep(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype,i=t.createOffer,n=t.createAnswer,r=t.setLocalDescription,o=t.setRemoteDescription,s=t.addIceCandidate;t.createOffer=function(e,t){const n=arguments.length>=2?arguments[2]:arguments[0],r=i.apply(this,[n]);return t?(r.then(e,t),Gh.resolve()):r},t.createAnswer=function(e,t){const i=arguments.length>=2?arguments[2]:arguments[0],r=n.apply(this,[i]);return t?(r.then(e,t),Gh.resolve()):r};let a=function(e,t,i){const n=r.apply(this,[e]);return i?(n.then(t,i),Gh.resolve()):n};t.setLocalDescription=a,a=function(e,t,i){const n=o.apply(this,[e]);return i?(n.then(t,i),Gh.resolve()):n},t.setRemoteDescription=a,a=function(e,t,i){const n=s.apply(this,[e]);return i?(n.then(t,i),Gh.resolve()):n},t.addIceCandidate=a}function fp(e){const t=e&&e.navigator;if(t.mediaDevices&&t.mediaDevices.getUserMedia){const e=t.mediaDevices,i=e.getUserMedia.bind(e);t.mediaDevices.getUserMedia=e=>i(mp(e))}!t.getUserMedia&&t.mediaDevices&&t.mediaDevices.getUserMedia&&(t.getUserMedia=function(e,i,n){t.mediaDevices.getUserMedia(e).then(i,n)}.bind(t))}function mp(e){return e&&void 0!==e.video?Object.assign({},e,{video:or(e.video)}):e}function Tp(e){if(!e.RTCPeerConnection)return;const t=e.RTCPeerConnection;e.RTCPeerConnection=function(e,i){if(e&&e.iceServers){const t=[];for(let i=0;i<e.iceServers.length;i++){let n=e.iceServers[i];!n.hasOwnProperty(\"urls\")&&n.hasOwnProperty(\"url\")?(nr(\"RTCIceServer.url\",\"RTCIceServer.urls\"),n=JSON.parse(JSON.stringify(n)),n.urls=n.url,delete n.url,t.push(n)):t.push(e.iceServers[i])}e.iceServers=t}return new t(e,i)},e.RTCPeerConnection.prototype=t.prototype,\"generateCertificate\"in t&&Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:()=>t.generateCertificate})}function Sp(e){\"object\"==typeof e&&e.RTCTrackEvent&&\"receiver\"in e.RTCTrackEvent.prototype&&!(\"transceiver\"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get(){return{receiver:this.receiver}}})}function gp(e){const t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(e){if(e){void 0!==e.offerToReceiveAudio&&(e.offerToReceiveAudio=!!e.offerToReceiveAudio);const t=this.getTransceivers().find((e=>\"audio\"===e.receiver.track.kind));!1===e.offerToReceiveAudio&&t?\"sendrecv\"===t.direction?t.setDirection?t.setDirection(\"sendonly\"):t.direction=\"sendonly\":\"recvonly\"===t.direction&&(t.setDirection?t.setDirection(\"inactive\"):t.direction=\"inactive\"):!0!==e.offerToReceiveAudio||t||this.addTransceiver(\"audio\",{direction:\"recvonly\"}),void 0!==e.offerToReceiveVideo&&(e.offerToReceiveVideo=!!e.offerToReceiveVideo);const i=this.getTransceivers().find((e=>\"video\"===e.receiver.track.kind));!1===e.offerToReceiveVideo&&i?\"sendrecv\"===i.direction?i.setDirection?i.setDirection(\"sendonly\"):i.direction=\"sendonly\":\"recvonly\"===i.direction&&(i.setDirection?i.setDirection(\"inactive\"):i.direction=\"inactive\"):!0!==e.offerToReceiveVideo||i||this.addTransceiver(\"video\",{direction:\"recvonly\"})}return t.apply(this,arguments)}}function Rp(e){\"object\"!=typeof e||e.AudioContext||(e.AudioContext=e.webkitAudioContext)}var Cp=Object.freeze({__proto__:null,shimAudioContext:Rp,shimCallbacksAPI:Ep,shimConstraints:mp,shimCreateOfferLegacy:gp,shimGetUserMedia:fp,shimLocalStreamsAPI:pp,shimRTCIceServerUrls:Tp,shimRemoteStreamsAPI:_p,shimTrackEventTransceiver:Sp}),Ip=\"\\t\\n\\v\\f\\r Â áââââââââââââ¯âã\\u2028\\u2029\\ufeff\",vp=J,yp=fn,Ap=Ip,bp=d(\"\".replace),wp=RegExp(\"^[\"+Ap+\"]+\"),Op=RegExp(\"(^|[^\"+Ap+\"])[\"+Ap+\"]+$\"),Np=function(e){return function(t){var i=yp(vp(t));return 1&e&&(i=bp(i,wp,\"\")),2&e&&(i=bp(i,Op,\"$1\")),i}},Dp={start:Np(1),end:Np(2),trim:Np(3)},Pp=la.PROPER,Lp=n,kp=Ip,Mp=Dp.trim;wi({target:\"String\",proto:!0,forced:function(e){return Lp((function(){return!!kp[e]()||\"âÂá \"!==\"âÂá \"[e]()||Pp&&kp[e].name!==e}))}(\"trim\")},{trim:function(){return Mp(this)}});var Up=Xi(\"String\").trim,xp=l,Vp=Up,Fp=String.prototype,Bp=function(e){var t=e.trim;return\"string\"==typeof e||e===Fp||xp(Fp,e)&&t===Fp.trim?Vp:t},jp=i(Bp),Gp={exports:{}};!function(e){const t={generateIdentifier:function(){return Math.random().toString(36).substring(2,12)}};t.localCName=t.generateIdentifier(),t.splitLines=function(e){return e.trim().split(\"\\n\").map((e=>e.trim()))},t.splitSections=function(e){return e.split(\"\\nm=\").map(((e,t)=>(t>0?\"m=\"+e:e).trim()+\"\\r\\n\"))},t.getDescription=function(e){const i=t.splitSections(e);return i&&i[0]},t.getMediaSections=function(e){const i=t.splitSections(e);return i.shift(),i},t.matchPrefix=function(e,i){return t.splitLines(e).filter((e=>0===e.indexOf(i)))},t.parseCandidate=function(e){let t;t=0===e.indexOf(\"a=candidate:\")?e.substring(12).split(\" \"):e.substring(10).split(\" \");const i={foundation:t[0],component:{1:\"rtp\",2:\"rtcp\"}[t[1]]||t[1],protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],address:t[4],port:parseInt(t[5],10),type:t[7]};for(let e=8;e<t.length;e+=2)switch(t[e]){case\"raddr\":i.relatedAddress=t[e+1];break;case\"rport\":i.relatedPort=parseInt(t[e+1],10);break;case\"tcptype\":i.tcpType=t[e+1];break;case\"ufrag\":i.ufrag=t[e+1],i.usernameFragment=t[e+1];break;default:void 0===i[t[e]]&&(i[t[e]]=t[e+1])}return i},t.writeCandidate=function(e){const t=[];t.push(e.foundation);const i=e.component;\"rtp\"===i?t.push(1):\"rtcp\"===i?t.push(2):t.push(i),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.address||e.ip),t.push(e.port);const n=e.type;return t.push(\"typ\"),t.push(n),\"host\"!==n&&e.relatedAddress&&e.relatedPort&&(t.push(\"raddr\"),t.push(e.relatedAddress),t.push(\"rport\"),t.push(e.relatedPort)),e.tcpType&&\"tcp\"===e.protocol.toLowerCase()&&(t.push(\"tcptype\"),t.push(e.tcpType)),(e.usernameFragment||e.ufrag)&&(t.push(\"ufrag\"),t.push(e.usernameFragment||e.ufrag)),\"candidate:\"+t.join(\" \")},t.parseIceOptions=function(e){return e.substring(14).split(\" \")},t.parseRtpMap=function(e){let t=e.substring(9).split(\" \");const i={payloadType:parseInt(t.shift(),10)};return t=t[0].split(\"/\"),i.name=t[0],i.clockRate=parseInt(t[1],10),i.channels=3===t.length?parseInt(t[2],10):1,i.numChannels=i.channels,i},t.writeRtpMap=function(e){let t=e.payloadType;void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType);const i=e.channels||e.numChannels||1;return\"a=rtpmap:\"+t+\" \"+e.name+\"/\"+e.clockRate+(1!==i?\"/\"+i:\"\")+\"\\r\\n\"},t.parseExtmap=function(e){const t=e.substring(9).split(\" \");return{id:parseInt(t[0],10),direction:t[0].indexOf(\"/\")>0?t[0].split(\"/\")[1]:\"sendrecv\",uri:t[1],attributes:t.slice(2).join(\" \")}},t.writeExtmap=function(e){return\"a=extmap:\"+(e.id||e.preferredId)+(e.direction&&\"sendrecv\"!==e.direction?\"/\"+e.direction:\"\")+\" \"+e.uri+(e.attributes?\" \"+e.attributes:\"\")+\"\\r\\n\"},t.parseFmtp=function(e){const t={};let i;const n=e.substring(e.indexOf(\" \")+1).split(\";\");for(let e=0;e<n.length;e++)i=n[e].trim().split(\"=\"),t[i[0].trim()]=i[1];return t},t.writeFmtp=function(e){let t=\"\",i=e.payloadType;if(void 0!==e.preferredPayloadType&&(i=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){const n=[];Object.keys(e.parameters).forEach((t=>{void 0!==e.parameters[t]?n.push(t+\"=\"+e.parameters[t]):n.push(t)})),t+=\"a=fmtp:\"+i+\" \"+n.join(\";\")+\"\\r\\n\"}return t},t.parseRtcpFb=function(e){const t=e.substring(e.indexOf(\" \")+1).split(\" \");return{type:t.shift(),parameter:t.join(\" \")}},t.writeRtcpFb=function(e){let t=\"\",i=e.payloadType;return void 0!==e.preferredPayloadType&&(i=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach((e=>{t+=\"a=rtcp-fb:\"+i+\" \"+e.type+(e.parameter&&e.parameter.length?\" \"+e.parameter:\"\")+\"\\r\\n\"})),t},t.parseSsrcMedia=function(e){const t=e.indexOf(\" \"),i={ssrc:parseInt(e.substring(7,t),10)},n=e.indexOf(\":\",t);return n>-1?(i.attribute=e.substring(t+1,n),i.value=e.substring(n+1)):i.attribute=e.substring(t+1),i},t.parseSsrcGroup=function(e){const t=e.substring(13).split(\" \");return{semantics:t.shift(),ssrcs:t.map((e=>parseInt(e,10)))}},t.getMid=function(e){const i=t.matchPrefix(e,\"a=mid:\")[0];if(i)return i.substring(6)},t.parseFingerprint=function(e){const t=e.substring(14).split(\" \");return{algorithm:t[0].toLowerCase(),value:t[1].toUpperCase()}},t.getDtlsParameters=function(e,i){return{role:\"auto\",fingerprints:t.matchPrefix(e+i,\"a=fingerprint:\").map(t.parseFingerprint)}},t.writeDtlsParameters=function(e,t){let i=\"a=setup:\"+t+\"\\r\\n\";return e.fingerprints.forEach((e=>{i+=\"a=fingerprint:\"+e.algorithm+\" \"+e.value+\"\\r\\n\"})),i},t.parseCryptoLine=function(e){const t=e.substring(9).split(\" \");return{tag:parseInt(t[0],10),cryptoSuite:t[1],keyParams:t[2],sessionParams:t.slice(3)}},t.writeCryptoLine=function(e){return\"a=crypto:\"+e.tag+\" \"+e.cryptoSuite+\" \"+(\"object\"==typeof e.keyParams?t.writeCryptoKeyParams(e.keyParams):e.keyParams)+(e.sessionParams?\" \"+e.sessionParams.join(\" \"):\"\")+\"\\r\\n\"},t.parseCryptoKeyParams=function(e){if(0!==e.indexOf(\"inline:\"))return null;const t=e.substring(7).split(\"|\");return{keyMethod:\"inline\",keySalt:t[0],lifeTime:t[1],mkiValue:t[2]?t[2].split(\":\")[0]:void 0,mkiLength:t[2]?t[2].split(\":\")[1]:void 0}},t.writeCryptoKeyParams=function(e){return e.keyMethod+\":\"+e.keySalt+(e.lifeTime?\"|\"+e.lifeTime:\"\")+(e.mkiValue&&e.mkiLength?\"|\"+e.mkiValue+\":\"+e.mkiLength:\"\")},t.getCryptoParameters=function(e,i){return t.matchPrefix(e+i,\"a=crypto:\").map(t.parseCryptoLine)},t.getIceParameters=function(e,i){const n=t.matchPrefix(e+i,\"a=ice-ufrag:\")[0],r=t.matchPrefix(e+i,\"a=ice-pwd:\")[0];return n&&r?{usernameFragment:n.substring(12),password:r.substring(10)}:null},t.writeIceParameters=function(e){let t=\"a=ice-ufrag:\"+e.usernameFragment+\"\\r\\na=ice-pwd:\"+e.password+\"\\r\\n\";return e.iceLite&&(t+=\"a=ice-lite\\r\\n\"),t},t.parseRtpParameters=function(e){const i={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},n=t.splitLines(e)[0].split(\" \");i.profile=n[2];for(let r=3;r<n.length;r++){const o=n[r],s=t.matchPrefix(e,\"a=rtpmap:\"+o+\" \")[0];if(s){const n=t.parseRtpMap(s),r=t.matchPrefix(e,\"a=fmtp:\"+o+\" \");switch(n.parameters=r.length?t.parseFmtp(r[0]):{},n.rtcpFeedback=t.matchPrefix(e,\"a=rtcp-fb:\"+o+\" \").map(t.parseRtcpFb),i.codecs.push(n),n.name.toUpperCase()){case\"RED\":case\"ULPFEC\":i.fecMechanisms.push(n.name.toUpperCase())}}}t.matchPrefix(e,\"a=extmap:\").forEach((e=>{i.headerExtensions.push(t.parseExtmap(e))}));const r=t.matchPrefix(e,\"a=rtcp-fb:* \").map(t.parseRtcpFb);return i.codecs.forEach((e=>{r.forEach((t=>{e.rtcpFeedback.find((e=>e.type===t.type&&e.parameter===t.parameter))||e.rtcpFeedback.push(t)}))})),i},t.writeRtpDescription=function(e,i){let n=\"\";n+=\"m=\"+e+\" \",n+=i.codecs.length>0?\"9\":\"0\",n+=\" \"+(i.profile||\"UDP/TLS/RTP/SAVPF\")+\" \",n+=i.codecs.map((e=>void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType)).join(\" \")+\"\\r\\n\",n+=\"c=IN IP4 0.0.0.0\\r\\n\",n+=\"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\",i.codecs.forEach((e=>{n+=t.writeRtpMap(e),n+=t.writeFmtp(e),n+=t.writeRtcpFb(e)}));let r=0;return i.codecs.forEach((e=>{e.maxptime>r&&(r=e.maxptime)})),r>0&&(n+=\"a=maxptime:\"+r+\"\\r\\n\"),i.headerExtensions&&i.headerExtensions.forEach((e=>{n+=t.writeExtmap(e)})),n},t.parseRtpEncodingParameters=function(e){const i=[],n=t.parseRtpParameters(e),r=-1!==n.fecMechanisms.indexOf(\"RED\"),o=-1!==n.fecMechanisms.indexOf(\"ULPFEC\"),s=t.matchPrefix(e,\"a=ssrc:\").map((e=>t.parseSsrcMedia(e))).filter((e=>\"cname\"===e.attribute)),a=s.length>0&&s[0].ssrc;let c;const d=t.matchPrefix(e,\"a=ssrc-group:FID\").map((e=>e.substring(17).split(\" \").map((e=>parseInt(e,10)))));d.length>0&&d[0].length>1&&d[0][0]===a&&(c=d[0][1]),n.codecs.forEach((e=>{if(\"RTX\"===e.name.toUpperCase()&&e.parameters.apt){let t={ssrc:a,codecPayloadType:parseInt(e.parameters.apt,10)};a&&c&&(t.rtx={ssrc:c}),i.push(t),r&&(t=JSON.parse(JSON.stringify(t)),t.fec={ssrc:a,mechanism:o?\"red+ulpfec\":\"red\"},i.push(t))}})),0===i.length&&a&&i.push({ssrc:a});let l=t.matchPrefix(e,\"b=\");return l.length&&(l=0===l[0].indexOf(\"b=TIAS:\")?parseInt(l[0].substring(7),10):0===l[0].indexOf(\"b=AS:\")?1e3*parseInt(l[0].substring(5),10)*.95-16e3:void 0,i.forEach((e=>{e.maxBitrate=l}))),i},t.parseRtcpParameters=function(e){const i={},n=t.matchPrefix(e,\"a=ssrc:\").map((e=>t.parseSsrcMedia(e))).filter((e=>\"cname\"===e.attribute))[0];n&&(i.cname=n.value,i.ssrc=n.ssrc);const r=t.matchPrefix(e,\"a=rtcp-rsize\");i.reducedSize=r.length>0,i.compound=0===r.length;const o=t.matchPrefix(e,\"a=rtcp-mux\");return i.mux=o.length>0,i},t.writeRtcpParameters=function(e){let t=\"\";return e.reducedSize&&(t+=\"a=rtcp-rsize\\r\\n\"),e.mux&&(t+=\"a=rtcp-mux\\r\\n\"),void 0!==e.ssrc&&e.cname&&(t+=\"a=ssrc:\"+e.ssrc+\" cname:\"+e.cname+\"\\r\\n\"),t},t.parseMsid=function(e){let i;const n=t.matchPrefix(e,\"a=msid:\");if(1===n.length)return i=n[0].substring(7).split(\" \"),{stream:i[0],track:i[1]};const r=t.matchPrefix(e,\"a=ssrc:\").map((e=>t.parseSsrcMedia(e))).filter((e=>\"msid\"===e.attribute));return r.length>0?(i=r[0].value.split(\" \"),{stream:i[0],track:i[1]}):void 0},t.parseSctpDescription=function(e){const i=t.parseMLine(e),n=t.matchPrefix(e,\"a=max-message-size:\");let r;n.length>0&&(r=parseInt(n[0].substring(19),10)),isNaN(r)&&(r=65536);const o=t.matchPrefix(e,\"a=sctp-port:\");if(o.length>0)return{port:parseInt(o[0].substring(12),10),protocol:i.fmt,maxMessageSize:r};const s=t.matchPrefix(e,\"a=sctpmap:\");if(s.length>0){const e=s[0].substring(10).split(\" \");return{port:parseInt(e[0],10),protocol:e[1],maxMessageSize:r}}},t.writeSctpDescription=function(e,t){let i=[];return i=\"DTLS/SCTP\"!==e.protocol?[\"m=\"+e.kind+\" 9 \"+e.protocol+\" \"+t.protocol+\"\\r\\n\",\"c=IN IP4 0.0.0.0\\r\\n\",\"a=sctp-port:\"+t.port+\"\\r\\n\"]:[\"m=\"+e.kind+\" 9 \"+e.protocol+\" \"+t.port+\"\\r\\n\",\"c=IN IP4 0.0.0.0\\r\\n\",\"a=sctpmap:\"+t.port+\" \"+t.protocol+\" 65535\\r\\n\"],void 0!==t.maxMessageSize&&i.push(\"a=max-message-size:\"+t.maxMessageSize+\"\\r\\n\"),i.join(\"\")},t.generateSessionId=function(){return Math.random().toString().substr(2,22)},t.writeSessionBoilerplate=function(e,i,n){let r;const o=void 0!==i?i:2;r=e||t.generateSessionId();return\"v=0\\r\\no=\"+(n||\"thisisadapterortc\")+\" \"+r+\" \"+o+\" IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\"},t.getDirection=function(e,i){const n=t.splitLines(e);for(let e=0;e<n.length;e++)switch(n[e]){case\"a=sendrecv\":case\"a=sendonly\":case\"a=recvonly\":case\"a=inactive\":return n[e].substring(2)}return i?t.getDirection(i):\"sendrecv\"},t.getKind=function(e){return t.splitLines(e)[0].split(\" \")[0].substring(2)},t.isRejected=function(e){return\"0\"===e.split(\" \",2)[1]},t.parseMLine=function(e){const i=t.splitLines(e)[0].substring(2).split(\" \");return{kind:i[0],port:parseInt(i[1],10),protocol:i[2],fmt:i.slice(3).join(\" \")}},t.parseOLine=function(e){const i=t.matchPrefix(e,\"o=\")[0].substring(2).split(\" \");return{username:i[0],sessionId:i[1],sessionVersion:parseInt(i[2],10),netType:i[3],addressType:i[4],address:i[5]}},t.isValidSDP=function(e){if(\"string\"!=typeof e||0===e.length)return!1;const i=t.splitLines(e);for(let e=0;e<i.length;e++)if(i[e].length<2||\"=\"!==i[e].charAt(1))return!1;return!0},e.exports=t}(Gp);var Wp=Gp.exports,Hp=i(Wp),Kp=e({__proto__:null,default:Hp},[Wp]);function Yp(e){if(!e.RTCIceCandidate||e.RTCIceCandidate&&\"foundation\"in e.RTCIceCandidate.prototype)return;const t=e.RTCIceCandidate;e.RTCIceCandidate=function(e){if(\"object\"==typeof e&&e.candidate&&0===e.candidate.indexOf(\"a=\")&&((e=JSON.parse(JSON.stringify(e))).candidate=e.candidate.substr(2)),e.candidate&&e.candidate.length){const i=new t(e),n=Hp.parseCandidate(e.candidate),r=Object.assign(i,n);return r.toJSON=function(){return{candidate:r.candidate,sdpMid:r.sdpMid,sdpMLineIndex:r.sdpMLineIndex,usernameFragment:r.usernameFragment}},r}return new t(e)},e.RTCIceCandidate.prototype=t.prototype,$n(e,\"icecandidate\",(t=>(t.candidate&&Object.defineProperty(t,\"candidate\",{value:new e.RTCIceCandidate(t.candidate),writable:\"false\"}),t)))}function qp(e){!e.RTCIceCandidate||e.RTCIceCandidate&&\"relayProtocol\"in e.RTCIceCandidate.prototype||$n(e,\"icecandidate\",(e=>{if(e.candidate){const t=Hp.parseCandidate(e.candidate.candidate);\"relay\"===t.type&&(e.candidate.relayProtocol={0:\"tls\",1:\"tcp\",2:\"udp\"}[t.priority>>24])}return e}))}function zp(e,t){if(!e.RTCPeerConnection)return;\"sctp\"in e.RTCPeerConnection.prototype||Object.defineProperty(e.RTCPeerConnection.prototype,\"sctp\",{get(){return void 0===this._sctp?null:this._sctp}});const i=function(e){if(!e||!e.sdp)return!1;const t=Hp.splitSections(e.sdp);return t.shift(),t.some((e=>{const t=Hp.parseMLine(e);return t&&\"application\"===t.kind&&-1!==t.protocol.indexOf(\"SCTP\")}))},n=function(e){const t=e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);if(null===t||t.length<2)return-1;const i=parseInt(t[1],10);return i!=i?-1:i},r=function(e){let i=65536;return\"firefox\"===t.browser&&(i=t.version<57?-1===e?16384:2147483637:t.version<60?57===t.version?65535:65536:2147483637),i},o=function(e,i){let n=65536;\"firefox\"===t.browser&&57===t.version&&(n=65535);const r=Hp.matchPrefix(e.sdp,\"a=max-message-size:\");return r.length>0?n=parseInt(r[0].substr(19),10):\"firefox\"===t.browser&&-1!==i&&(n=2147483637),n},s=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){if(this._sctp=null,\"chrome\"===t.browser&&t.version>=76){const{sdpSemantics:e}=this.getConfiguration();\"plan-b\"===e&&Object.defineProperty(this,\"sctp\",{get(){return void 0===this._sctp?null:this._sctp},enumerable:!0,configurable:!0})}if(i(arguments[0])){const e=n(arguments[0]),t=r(e),i=o(arguments[0],e);let s;s=0===t&&0===i?Number.POSITIVE_INFINITY:0===t||0===i?Math.max(t,i):Math.min(t,i);const a={};Object.defineProperty(a,\"maxMessageSize\",{get:()=>s}),this._sctp=a}return s.apply(this,arguments)}}function Jp(e){if(!e.RTCPeerConnection||!(\"createDataChannel\"in e.RTCPeerConnection.prototype))return;function t(e,t){const i=e.send;e.send=function(){const n=arguments[0],r=n.length||n.size||n.byteLength;if(\"open\"===e.readyState&&t.sctp&&r>t.sctp.maxMessageSize)throw new TypeError(\"Message too large (can send a maximum of \"+t.sctp.maxMessageSize+\" bytes)\");return i.apply(e,arguments)}}const i=e.RTCPeerConnection.prototype.createDataChannel;e.RTCPeerConnection.prototype.createDataChannel=function(){const e=i.apply(this,arguments);return t(e,this),e},$n(e,\"datachannel\",(e=>(t(e.channel,e.target),e)))}function Xp(e){if(!e.RTCPeerConnection||\"connectionState\"in e.RTCPeerConnection.prototype)return;const t=e.RTCPeerConnection.prototype;Object.defineProperty(t,\"connectionState\",{get(){return{completed:\"connected\",checking:\"connecting\"}[this.iceConnectionState]||this.iceConnectionState},enumerable:!0,configurable:!0}),Object.defineProperty(t,\"onconnectionstatechange\",{get(){return this._onconnectionstatechange||null},set(e){this._onconnectionstatechange&&(this.removeEventListener(\"connectionstatechange\",this._onconnectionstatechange),delete this._onconnectionstatechange),e&&this.addEventListener(\"connectionstatechange\",this._onconnectionstatechange=e)},enumerable:!0,configurable:!0}),[\"setLocalDescription\",\"setRemoteDescription\"].forEach((e=>{const i=t[e];t[e]=function(){return this._connectionstatechangepoly||(this._connectionstatechangepoly=e=>{const t=e.target;if(t._lastConnectionState!==t.connectionState){t._lastConnectionState=t.connectionState;const i=new Event(\"connectionstatechange\",e);t.dispatchEvent(i)}return e},this.addEventListener(\"iceconnectionstatechange\",this._connectionstatechangepoly)),i.apply(this,arguments)}}))}function Qp(e,t){if(!e.RTCPeerConnection)return;if(\"chrome\"===t.browser&&t.version>=71)return;if(\"safari\"===t.browser&&t.version>=605)return;const i=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(t){if(t&&t.sdp&&-1!==t.sdp.indexOf(\"\\na=extmap-allow-mixed\")){const i=t.sdp.split(\"\\n\").filter((e=>\"a=extmap-allow-mixed\"!==jp(e).call(e))).join(\"\\n\");e.RTCSessionDescription&&t instanceof e.RTCSessionDescription?arguments[0]=new e.RTCSessionDescription({type:t.type,sdp:i}):t.sdp=i}return i.apply(this,arguments)}}function Zp(e,t){if(!e.RTCPeerConnection||!e.RTCPeerConnection.prototype)return;const i=e.RTCPeerConnection.prototype.addIceCandidate;i&&0!==i.length&&(e.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?(\"chrome\"===t.browser&&t.version<78||\"firefox\"===t.browser&&t.version<68||\"safari\"===t.browser)&&arguments[0]&&\"\"===arguments[0].candidate?Gh.resolve():i.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Gh.resolve())})}function $p(e,t){if(!e.RTCPeerConnection||!e.RTCPeerConnection.prototype)return;const i=e.RTCPeerConnection.prototype.setLocalDescription;i&&0!==i.length&&(e.RTCPeerConnection.prototype.setLocalDescription=function(){let e=arguments[0]||{};if(\"object\"!=typeof e||e.type&&e.sdp)return i.apply(this,arguments);if(e={type:e.type,sdp:e.sdp},!e.type)switch(this.signalingState){case\"stable\":case\"have-local-offer\":case\"have-remote-pranswer\":e.type=\"offer\";break;default:e.type=\"answer\"}if(e.sdp||\"offer\"!==e.type&&\"answer\"!==e.type)return i.apply(this,[e]);return(\"offer\"===e.type?this.createOffer:this.createAnswer).apply(this).then((e=>i.apply(this,[e])))})}var e_=Object.freeze({__proto__:null,removeExtmapAllowMixed:Qp,shimAddIceCandidateNullOrEmpty:Zp,shimConnectionState:Xp,shimMaxMessageSize:zp,shimParameterlessSetLocalDescription:$p,shimRTCIceCandidate:Yp,shimRTCIceCandidateRelayProtocol:qp,shimSendThrowTypeError:Jp});!function(){let{window:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{shimChrome:!0,shimFirefox:!0,shimSafari:!0};const i=ir,n=function(e){const t={browser:null,version:null};if(void 0===e||!e.navigator)return t.browser=\"Not a browser.\",t;const{navigator:i}=e;if(i.mozGetUserMedia)t.browser=\"firefox\",t.version=Zn(i.userAgent,/Firefox\\/(\\d+)\\./,1);else if(i.webkitGetUserMedia||!1===e.isSecureContext&&e.webkitRTCPeerConnection)t.browser=\"chrome\",t.version=Zn(i.userAgent,/Chrom(e|ium)\\/(\\d+)\\./,2);else{if(!e.RTCPeerConnection||!i.userAgent.match(/AppleWebKit\\/(\\d+)\\./))return t.browser=\"Not a supported browser.\",t;t.browser=\"safari\",t.version=Zn(i.userAgent,/AppleWebKit\\/(\\d+)\\./,1),t.supportsUnifiedPlan=e.RTCRtpTransceiver&&\"currentDirection\"in e.RTCRtpTransceiver.prototype}return t}(e),r={browserDetails:n,commonShim:e_,extractVersion:Zn,disableLog:er,disableWarnings:tr,sdp:Kp};switch(n.browser){case\"chrome\":if(!ep||!Zh||!t.shimChrome)return i(\"Chrome shim is not included in this adapter release.\"),r;if(null===n.version)return i(\"Chrome shim can not determine version, not shimming.\"),r;i(\"adapter.js shimming chrome.\"),r.browserShim=ep,Zp(e,n),$p(e),Hh(e,n),Kh(e),Zh(e,n),Yh(e),Qh(e,n),qh(e),zh(e),Jh(e),$h(e,n),Yp(e),qp(e),Xp(e),zp(e,n),Jp(e),Qp(e,n);break;case\"firefox\":if(!hp||!np||!t.shimFirefox)return i(\"Firefox shim is not included in this adapter release.\"),r;i(\"adapter.js shimming firefox.\"),r.browserShim=hp,Zp(e,n),$p(e),tp(e,n),np(e,n),ip(e),sp(e),rp(e),op(e),ap(e),cp(e),dp(e),lp(e),up(e),Yp(e),Xp(e),zp(e,n),Jp(e);break;case\"safari\":if(!Cp||!t.shimSafari)return i(\"Safari shim is not included in this adapter release.\"),r;i(\"adapter.js shimming safari.\"),r.browserShim=Cp,Zp(e,n),$p(e),Tp(e),gp(e),Ep(e),pp(e),_p(e),Sp(e),fp(e),Rp(e),Yp(e),qp(e),zp(e,n),Jp(e),Qp(e,n);break;default:i(\"Unsupported browser!\")}}({window:\"undefined\"==typeof window?void 0:window});var t_=Xi(\"Array\").keys,i_=pn,n_=Ze,r_=l,o_=t_,s_=Array.prototype,a_={DOMTokenList:!0,NodeList:!0},c_=function(e){var t=e.keys;return e===s_||r_(s_,e)&&t===s_.keys||n_(a_,i_(e))?o_:t},d_=i(c_),l_=be,u_=TypeError,h_=Ct,p_=Qt,__=B,E_=function(e,t,i){var n=h_(t);n in e?p_.f(e,n,__(0,i)):e[n]=i},f_=xi,m_=Gi,T_=E_,S_=Array,g_=Math.max,R_=function(e,t,i){for(var n=m_(e),r=f_(t,n),o=f_(void 0===i?n:i,n),s=S_(g_(o-r,0)),a=0;r<o;r++,a++)T_(s,a,e[r]);return s.length=a,s},C_=R_,I_=Math.floor,v_=function(e,t){var i=e.length,n=I_(i/2);return i<8?y_(e,t):A_(e,v_(C_(e,0,n),t),v_(C_(e,n),t),t)},y_=function(e,t){for(var i,n,r=e.length,o=1;o<r;){for(n=o,i=e[o];n&&t(e[n-1],i)>0;)e[n]=e[--n];n!==o++&&(e[n]=i)}return e},A_=function(e,t,i,n){for(var r=t.length,o=i.length,s=0,a=0;s<r||a<o;)e[s+a]=s<r&&a<o?n(t[s],i[a])<=0?t[s++]:i[a++]:s<r?t[s++]:i[a++];return e},b_=v_,w_=ce.match(/firefox\\/(\\d+)/i),O_=!!w_&&+w_[1],N_=/MSIE|Trident/.test(ce),D_=ce.match(/AppleWebKit\\/(\\d+)\\./),P_=!!D_&&+D_[1],L_=wi,k_=d,M_=De,U_=Je,x_=Gi,V_=function(e,t){if(!delete e[t])throw u_(\"Cannot delete property \"+l_(t)+\" of \"+l_(e))},F_=fn,B_=n,j_=b_,G_=Bn,W_=O_,H_=N_,K_=Ee,Y_=P_,q_=[],z_=k_(q_.sort),J_=k_(q_.push),X_=B_((function(){q_.sort(void 0)})),Q_=B_((function(){q_.sort(null)})),Z_=G_(\"sort\"),$_=!B_((function(){if(K_)return K_<70;if(!(W_&&W_>3)){if(H_)return!0;if(Y_)return Y_<603;var e,t,i,n,r=\"\";for(e=65;e<76;e++){switch(t=String.fromCharCode(e),e){case 66:case 69:case 70:case 72:i=3;break;case 68:case 71:i=4;break;default:i=2}for(n=0;n<47;n++)q_.push({k:t+n,v:i})}for(q_.sort((function(e,t){return t.v-e.v})),n=0;n<q_.length;n++)t=q_[n].k.charAt(0),r.charAt(r.length-1)!==t&&(r+=t);return\"DGBEFHACIJK\"!==r}}));L_({target:\"Array\",proto:!0,forced:X_||!Q_||!Z_||!$_},{sort:function(e){void 0!==e&&M_(e);var t=U_(this);if($_)return void 0===e?z_(t):z_(t,e);var i,n,r=[],o=x_(t);for(n=0;n<o;n++)n in t&&J_(r,t[n]);for(j_(r,function(e){return function(t,i){return void 0===i?-1:void 0===t?1:void 0!==e?+e(t,i)||0:F_(t)>F_(i)?1:-1}}(e)),i=x_(r),n=0;n<i;)t[n]=r[n++];for(;n<o;)V_(t,n++);return t}});var eE,tE,iE=Xi(\"Array\").sort,nE=l,rE=iE,oE=Array.prototype,sE=function(e){var t=e.sort;return e===oE||nE(oE,e)&&t===oE.sort?rE:t},aE=i(sE),cE={exports:{}};eE=cE,tE=cE.exports,function(e,t){var i=\"function\",n=\"undefined\",r=\"object\",o=\"string\",s=\"major\",a=\"model\",c=\"name\",d=\"type\",l=\"vendor\",u=\"version\",h=\"architecture\",p=\"console\",_=\"mobile\",E=\"tablet\",f=\"smarttv\",m=\"wearable\",T=\"embedded\",S=\"Amazon\",g=\"Apple\",R=\"ASUS\",C=\"BlackBerry\",I=\"Browser\",v=\"Chrome\",y=\"Firefox\",A=\"Google\",b=\"Huawei\",w=\"LG\",O=\"Microsoft\",N=\"Motorola\",D=\"Opera\",P=\"Samsung\",L=\"Sharp\",k=\"Sony\",M=\"Xiaomi\",U=\"Zebra\",x=\"Facebook\",V=\"Chromium OS\",F=\"Mac OS\",B=function(e){for(var t={},i=0;i<e.length;i++)t[e[i].toUpperCase()]=e[i];return t},j=function(e,t){return typeof e===o&&-1!==G(t).indexOf(G(e))},G=function(e){return e.toLowerCase()},W=function(e,t){if(typeof e===o)return e=e.replace(/^\\s\\s*/,\"\"),typeof t===n?e:e.substring(0,350)},H=function(e,n){for(var o,s,a,c,d,l,u=0;u<n.length&&!d;){var h=n[u],p=n[u+1];for(o=s=0;o<h.length&&!d&&h[o];)if(d=h[o++].exec(e))for(a=0;a<p.length;a++)l=d[++s],typeof(c=p[a])===r&&c.length>0?2===c.length?typeof c[1]==i?this[c[0]]=c[1].call(this,l):this[c[0]]=c[1]:3===c.length?typeof c[1]!==i||c[1].exec&&c[1].test?this[c[0]]=l?l.replace(c[1],c[2]):t:this[c[0]]=l?c[1].call(this,l,c[2]):t:4===c.length&&(this[c[0]]=l?c[3].call(this,l.replace(c[1],c[2])):t):this[c]=l||t;u+=2}},K=function(e,i){for(var n in i)if(typeof i[n]===r&&i[n].length>0){for(var o=0;o<i[n].length;o++)if(j(i[n][o],e))return\"?\"===n?t:n}else if(j(i[n],e))return\"?\"===n?t:n;return e},Y={ME:\"4.90\",\"NT 3.11\":\"NT3.51\",\"NT 4.0\":\"NT4.0\",2e3:\"NT 5.0\",XP:[\"NT 5.1\",\"NT 5.2\"],Vista:\"NT 6.0\",7:\"NT 6.1\",8:\"NT 6.2\",8.1:\"NT 6.3\",10:[\"NT 6.4\",\"NT 10.0\"],RT:\"ARM\"},q={browser:[[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i],[u,[c,\"Chrome\"]],[/edg(?:e|ios|a)?\\/([\\w\\.]+)/i],[u,[c,\"Edge\"]],[/(opera mini)\\/([-\\w\\.]+)/i,/(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,/(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i],[c,u],[/opios[\\/ ]+([\\w\\.]+)/i],[u,[c,D+\" Mini\"]],[/\\bopr\\/([\\w\\.]+)/i],[u,[c,D]],[/(kindle)\\/([\\w\\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,/(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,/(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,/(?:ms|\\()(ie) ([\\w\\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,/(weibo)__([\\d\\.]+)/i],[c,u],[/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i],[u,[c,\"UC\"+I]],[/microm.+\\bqbcore\\/([\\w\\.]+)/i,/\\bqbcore\\/([\\w\\.]+).+microm/i],[u,[c,\"WeChat(Win) Desktop\"]],[/micromessenger\\/([\\w\\.]+)/i],[u,[c,\"WeChat\"]],[/konqueror\\/([\\w\\.]+)/i],[u,[c,\"Konqueror\"]],[/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i],[u,[c,\"IE\"]],[/yabrowser\\/([\\w\\.]+)/i],[u,[c,\"Yandex\"]],[/(avast|avg)\\/([\\w\\.]+)/i],[[c,/(.+)/,\"$1 Secure \"+I],u],[/\\bfocus\\/([\\w\\.]+)/i],[u,[c,y+\" Focus\"]],[/\\bopt\\/([\\w\\.]+)/i],[u,[c,D+\" Touch\"]],[/coc_coc\\w+\\/([\\w\\.]+)/i],[u,[c,\"Coc Coc\"]],[/dolfin\\/([\\w\\.]+)/i],[u,[c,\"Dolphin\"]],[/coast\\/([\\w\\.]+)/i],[u,[c,D+\" Coast\"]],[/miuibrowser\\/([\\w\\.]+)/i],[u,[c,\"MIUI \"+I]],[/fxios\\/([-\\w\\.]+)/i],[u,[c,y]],[/\\bqihu|(qi?ho?o?|360)browser/i],[[c,\"360 \"+I]],[/(oculus|samsung|sailfish|huawei)browser\\/([\\w\\.]+)/i],[[c,/(.+)/,\"$1 \"+I],u],[/(comodo_dragon)\\/([\\w\\.]+)/i],[[c,/_/g,\" \"],u],[/(electron)\\/([\\w\\.]+) safari/i,/(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,/m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i],[c,u],[/(metasr)[\\/ ]?([\\w\\.]+)/i,/(lbbrowser)/i,/\\[(linkedin)app\\]/i],[c],[/((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i],[[c,x],u],[/(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,/(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,/safari (line)\\/([\\w\\.]+)/i,/\\b(line)\\/([\\w\\.]+)\\/iab/i,/(chromium|instagram)[\\/ ]([-\\w\\.]+)/i],[c,u],[/\\bgsa\\/([\\w\\.]+) .*safari\\//i],[u,[c,\"GSA\"]],[/headlesschrome(?:\\/([\\w\\.]+)| )/i],[u,[c,v+\" Headless\"]],[/ wv\\).+(chrome)\\/([\\w\\.]+)/i],[[c,v+\" WebView\"],u],[/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i],[u,[c,\"Android \"+I]],[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i],[c,u],[/version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i],[u,[c,\"Mobile Safari\"]],[/version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i],[u,c],[/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i],[c,[u,K,{\"1.0\":\"/8\",1.2:\"/1\",1.3:\"/3\",\"2.0\":\"/412\",\"2.0.2\":\"/416\",\"2.0.3\":\"/417\",\"2.0.4\":\"/419\",\"?\":\"/\"}]],[/(webkit|khtml)\\/([\\w\\.]+)/i],[c,u],[/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i],[[c,\"Netscape\"],u],[/mobile vr; rv:([\\w\\.]+)\\).+firefox/i],[u,[c,y+\" Reality\"]],[/ekiohf.+(flow)\\/([\\w\\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,/(firefox)\\/([\\w\\.]+)/i,/(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,/(links) \\(([\\w\\.]+)/i,/panasonic;(viera)/i],[c,u],[/(cobalt)\\/([\\w\\.]+)/i],[c,[u,/master.|lts./,\"\"]]],cpu:[[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i],[[h,\"amd64\"]],[/(ia32(?=;))/i],[[h,G]],[/((?:i[346]|x)86)[;\\)]/i],[[h,\"ia32\"]],[/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i],[[h,\"arm64\"]],[/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i],[[h,\"armhf\"]],[/windows (ce|mobile); ppc;/i],[[h,\"arm\"]],[/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i],[[h,/ower/,\"\",G]],[/(sun4\\w)[;\\)]/i],[[h,\"sparc\"]],[/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i],[[h,G]]],device:[[/\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i],[a,[l,P],[d,E]],[/\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,/samsung[- ]([-\\w]+)/i,/sec-(sgh\\w+)/i],[a,[l,P],[d,_]],[/\\((ip(?:hone|od)[\\w ]*);/i],[a,[l,g],[d,_]],[/\\((ipad);[-\\w\\),; ]+apple/i,/applecoremedia\\/[\\w\\.]+ \\((ipad)/i,/\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i],[a,[l,g],[d,E]],[/(macintosh);/i],[a,[l,g]],[/\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i],[a,[l,L],[d,_]],[/\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i],[a,[l,b],[d,E]],[/(?:huawei|honor)([-\\w ]+)[;\\)]/i,/\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i],[a,[l,b],[d,_]],[/\\b(poco[\\w ]+)(?: bui|\\))/i,/\\b; (\\w+) build\\/hm\\1/i,/\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,/\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,/\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i],[[a,/_/g,\" \"],[l,M],[d,_]],[/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i],[[a,/_/g,\" \"],[l,M],[d,E]],[/; (\\w+) bui.+ oppo/i,/\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i],[a,[l,\"OPPO\"],[d,_]],[/vivo (\\w+)(?: bui|\\))/i,/\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i],[a,[l,\"Vivo\"],[d,_]],[/\\b(rmx[12]\\d{3})(?: bui|;|\\))/i],[a,[l,\"Realme\"],[d,_]],[/\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,/\\bmot(?:orola)?[- ](\\w*)/i,/((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i],[a,[l,N],[d,_]],[/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i],[a,[l,N],[d,E]],[/((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i],[a,[l,w],[d,E]],[/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,/\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,/\\blg-?([\\d\\w]+) bui/i],[a,[l,w],[d,_]],[/(ideatab[-\\w ]+)/i,/lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i],[a,[l,\"Lenovo\"],[d,E]],[/(?:maemo|nokia).*(n900|lumia \\d+)/i,/nokia[-_ ]?([-\\w\\.]*)/i],[[a,/_/g,\" \"],[l,\"Nokia\"],[d,_]],[/(pixel c)\\b/i],[a,[l,A],[d,E]],[/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i],[a,[l,A],[d,_]],[/droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i],[a,[l,k],[d,_]],[/sony tablet [ps]/i,/\\b(?:sony)?sgp\\w+(?: bui|\\))/i],[[a,\"Xperia Tablet\"],[l,k],[d,E]],[/ (kb2005|in20[12]5|be20[12][59])\\b/i,/(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i],[a,[l,\"OnePlus\"],[d,_]],[/(alexa)webm/i,/(kf[a-z]{2}wi)( bui|\\))/i,/(kf[a-z]+)( bui|\\)).+silk\\//i],[a,[l,S],[d,E]],[/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i],[[a,/(.+)/g,\"Fire Phone $1\"],[l,S],[d,_]],[/(playbook);[-\\w\\),; ]+(rim)/i],[a,l,[d,E]],[/\\b((?:bb[a-f]|st[hv])100-\\d)/i,/\\(bb10; (\\w+)/i],[a,[l,C],[d,_]],[/(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i],[a,[l,R],[d,E]],[/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i],[a,[l,R],[d,_]],[/(nexus 9)/i],[a,[l,\"HTC\"],[d,E]],[/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,/(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i],[l,[a,/_/g,\" \"],[d,_]],[/droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i],[a,[l,\"Acer\"],[d,E]],[/droid.+; (m[1-5] note) bui/i,/\\bmz-([-\\w]{2,})/i],[a,[l,\"Meizu\"],[d,_]],[/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,/(hp) ([\\w ]+\\w)/i,/(asus)-?(\\w+)/i,/(microsoft); (lumia[\\w ]+)/i,/(lenovo)[-_ ]?([-\\w]+)/i,/(jolla)/i,/(oppo) ?([\\w ]+) bui/i],[l,a,[d,_]],[/(kobo)\\s(ereader|touch)/i,/(archos) (gamepad2?)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\\/([\\w\\.]+)/i,/(nook)[\\w ]+build\\/(\\w+)/i,/(dell) (strea[kpr\\d ]*[\\dko])/i,/(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,/(trinity)[- ]*(t\\d{3}) bui/i,/(gigaset)[- ]+(q\\w{1,9}) bui/i,/(vodafone) ([\\w ]+)(?:\\)| bui)/i],[l,a,[d,E]],[/(surface duo)/i],[a,[l,O],[d,E]],[/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i],[a,[l,\"Fairphone\"],[d,_]],[/(u304aa)/i],[a,[l,\"AT&T\"],[d,_]],[/\\bsie-(\\w*)/i],[a,[l,\"Siemens\"],[d,_]],[/\\b(rct\\w+) b/i],[a,[l,\"RCA\"],[d,E]],[/\\b(venue[\\d ]{2,7}) b/i],[a,[l,\"Dell\"],[d,E]],[/\\b(q(?:mv|ta)\\w+) b/i],[a,[l,\"Verizon\"],[d,E]],[/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i],[a,[l,\"Barnes & Noble\"],[d,E]],[/\\b(tm\\d{3}\\w+) b/i],[a,[l,\"NuVision\"],[d,E]],[/\\b(k88) b/i],[a,[l,\"ZTE\"],[d,E]],[/\\b(nx\\d{3}j) b/i],[a,[l,\"ZTE\"],[d,_]],[/\\b(gen\\d{3}) b.+49h/i],[a,[l,\"Swiss\"],[d,_]],[/\\b(zur\\d{3}) b/i],[a,[l,\"Swiss\"],[d,E]],[/\\b((zeki)?tb.*\\b) b/i],[a,[l,\"Zeki\"],[d,E]],[/\\b([yr]\\d{2}) b/i,/\\b(dragon[- ]+touch |dt)(\\w{5}) b/i],[[l,\"Dragon Touch\"],a,[d,E]],[/\\b(ns-?\\w{0,9}) b/i],[a,[l,\"Insignia\"],[d,E]],[/\\b((nxa|next)-?\\w{0,9}) b/i],[a,[l,\"NextBook\"],[d,E]],[/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],[[l,\"Voice\"],a,[d,_]],[/\\b(lvtel\\-)?(v1[12]) b/i],[[l,\"LvTel\"],a,[d,_]],[/\\b(ph-1) /i],[a,[l,\"Essential\"],[d,_]],[/\\b(v(100md|700na|7011|917g).*\\b) b/i],[a,[l,\"Envizen\"],[d,E]],[/\\b(trio[-\\w\\. ]+) b/i],[a,[l,\"MachSpeed\"],[d,E]],[/\\btu_(1491) b/i],[a,[l,\"Rotor\"],[d,E]],[/(shield[\\w ]+) b/i],[a,[l,\"Nvidia\"],[d,E]],[/(sprint) (\\w+)/i],[l,a,[d,_]],[/(kin\\.[onetw]{3})/i],[[a,/\\./g,\" \"],[l,O],[d,_]],[/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i],[a,[l,U],[d,E]],[/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i],[a,[l,U],[d,_]],[/smart-tv.+(samsung)/i],[l,[d,f]],[/hbbtv.+maple;(\\d+)/i],[[a,/^/,\"SmartTV\"],[l,P],[d,f]],[/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i],[[l,w],[d,f]],[/(apple) ?tv/i],[l,[a,g+\" TV\"],[d,f]],[/crkey/i],[[a,v+\"cast\"],[l,A],[d,f]],[/droid.+aft(\\w)( bui|\\))/i],[a,[l,S],[d,f]],[/\\(dtv[\\);].+(aquos)/i,/(aquos-tv[\\w ]+)\\)/i],[a,[l,L],[d,f]],[/(bravia[\\w ]+)( bui|\\))/i],[a,[l,k],[d,f]],[/(mitv-\\w{5}) bui/i],[a,[l,M],[d,f]],[/Hbbtv.*(technisat) (.*);/i],[l,a,[d,f]],[/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,/hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i],[[l,W],[a,W],[d,f]],[/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i],[[d,f]],[/(ouya)/i,/(nintendo) ([wids3utch]+)/i],[l,a,[d,p]],[/droid.+; (shield) bui/i],[a,[l,\"Nvidia\"],[d,p]],[/(playstation [345portablevi]+)/i],[a,[l,k],[d,p]],[/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i],[a,[l,O],[d,p]],[/((pebble))app/i],[l,a,[d,m]],[/(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i],[a,[l,g],[d,m]],[/droid.+; (glass) \\d/i],[a,[l,A],[d,m]],[/droid.+; (wt63?0{2,3})\\)/i],[a,[l,U],[d,m]],[/(quest( 2| pro)?)/i],[a,[l,x],[d,m]],[/(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i],[l,[d,T]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i],[a,[d,_]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i],[a,[d,E]],[/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i],[[d,E]],[/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i],[[d,_]],[/(android[-\\w\\. ]{0,9});.+buil/i],[a,[l,\"Generic\"]]],engine:[[/windows.+ edge\\/([\\w\\.]+)/i],[u,[c,\"EdgeHTML\"]],[/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i],[u,[c,\"Blink\"]],[/(presto)\\/([\\w\\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i,/ekioh(flow)\\/([\\w\\.]+)/i,/(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,/(icab)[\\/ ]([23]\\.[\\d\\.]+)/i],[c,u],[/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i],[u,c]],os:[[/microsoft (windows) (vista|xp)/i],[c,u],[/(windows) nt 6\\.2; (arm)/i,/(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,/(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i],[c,[u,K,Y]],[/(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i],[[c,\"Windows\"],[u,K,Y]],[/ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,/cfnetwork\\/.+darwin/i],[[u,/_/g,\".\"],[c,\"iOS\"]],[/(mac os x) ?([\\w\\. ]*)/i,/(macintosh|mac_powerpc\\b)(?!.+haiku)/i],[[c,F],[u,/_/g,\".\"]],[/droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i],[u,c],[/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,/(blackberry)\\w*\\/([\\w\\.]*)/i,/(tizen|kaios)[\\/ ]([\\w\\.]+)/i,/\\((series40);/i],[c,u],[/\\(bb(10);/i],[u,[c,C]],[/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i],[u,[c,\"Symbian\"]],[/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i],[u,[c,y+\" OS\"]],[/web0s;.+rt(tv)/i,/\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i],[u,[c,\"webOS\"]],[/watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i],[u,[c,\"watchOS\"]],[/crkey\\/([\\d\\.]+)/i],[u,[c,v+\"cast\"]],[/(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i],[[c,V],u],[/panasonic;(viera)/i,/(netrange)mmh/i,/(nettv)\\/(\\d+\\.[\\w\\.]+)/i,/(nintendo|playstation) ([wids345portablevuch]+)/i,/(xbox); +xbox ([^\\);]+)/i,/\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,/(mint)[\\/\\(\\) ]?(\\w*)/i,/(mageia|vectorlinux)[; ]/i,/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,/(hurd|linux) ?([\\w\\.]*)/i,/(gnu) ?([\\w\\.]*)/i,/\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,/(haiku) (\\w+)/i],[c,u],[/(sunos) ?([\\w\\.\\d]*)/i],[[c,\"Solaris\"],u],[/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,/(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,/\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i,/(unix) ?([\\w\\.]*)/i],[c,u]]},z=function(p,f){if(typeof p===r&&(f=p,p=t),!(this instanceof z))return new z(p,f).getResult();var m=typeof e!==n&&e.navigator?e.navigator:t,T=p||(m&&m.userAgent?m.userAgent:\"\"),S=m&&m.userAgentData?m.userAgentData:t,g=f?function(e,t){var i={};for(var n in e)t[n]&&t[n].length%2==0?i[n]=t[n].concat(e[n]):i[n]=e[n];return i}(q,f):q;return this.getBrowser=function(){var e={};return e[c]=t,e[u]=t,H.call(e,T,g.browser),e[s]=function(e){return typeof e===o?e.replace(/[^\\d\\.]/g,\"\").split(\".\")[0]:t}(e[u]),m&&m.brave&&typeof m.brave.isBrave==i&&(e[c]=\"Brave\"),e},this.getCPU=function(){var e={};return e[h]=t,H.call(e,T,g.cpu),e},this.getDevice=function(){var e={};return e[l]=t,e[a]=t,e[d]=t,H.call(e,T,g.device),!e[d]&&S&&S.mobile&&(e[d]=_),\"Macintosh\"==e[a]&&m&&typeof m.standalone!==n&&m.maxTouchPoints&&m.maxTouchPoints>2&&(e[a]=\"iPad\",e[d]=E),e},this.getEngine=function(){var e={};return e[c]=t,e[u]=t,H.call(e,T,g.engine),e},this.getOS=function(){var e={};return e[c]=t,e[u]=t,H.call(e,T,g.os),!e[c]&&S&&\"Unknown\"!=S.platform&&(e[c]=S.platform.replace(/chrome os/i,V).replace(/macos/i,F)),e},this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}},this.getUA=function(){return T},this.setUA=function(e){return T=typeof e===o&&e.length>350?W(e,350):e,this},this.setUA(T),this};z.VERSION=\"0.7.34\",z.BROWSER=B([c,u,s]),z.CPU=B([h]),z.DEVICE=B([a,l,d,p,_,f,E,m,T]),z.ENGINE=z.OS=B([c,u]),eE.exports&&(tE=eE.exports=z),tE.UAParser=z;var J=typeof e!==n&&(e.jQuery||e.Zepto);if(J&&!J.ua){var X=new z;J.ua=X.getResult(),J.ua.get=function(){return X.getUA()},J.ua.set=function(e){X.setUA(e);var t=X.getResult();for(var i in t)J.ua[i]=t[i]}}}(\"object\"==typeof window?window:t);var dE=i(cE.exports),lE=pn,uE=Ze,hE=Y,pE=xo,_E=ht(\"iterator\"),EE=Object,fE=function(e){if(hE(e))return!1;var t=EE(e);return void 0!==t[_E]||\"@@iterator\"in t||uE(pE,lE(t))},mE=i(fE),TE=h;wi({global:!0,forced:TE.globalThis!==TE},{globalThis:TE});var SE=i(h),gE=Ad.clear;wi({global:!0,bind:!0,enumerable:!0,forced:h.clearImmediate!==gE},{clearImmediate:gE});var RE=\"function\"==typeof Bun&&Bun&&\"string\"==typeof Bun.version,CE=h,IE=m,vE=w,yE=RE,AE=ce,bE=Xc,wE=Zc,OE=CE.Function,NE=/MSIE .\\./.test(AE)||yE&&function(){var e=CE.Bun.version.split(\".\");return e.length<3||0==e[0]&&(e[1]<3||3==e[1]&&0==e[2])}(),DE=wi,PE=h,LE=Ad.set,kE=function(e,t){var i=t?2:1;return NE?function(n,r){var o=wE(arguments.length,1)>i,s=vE(n)?n:OE(n),a=o?bE(arguments,i):[],c=o?function(){IE(s,this,a)}:s;return t?e(c,r):e(c)}:e},ME=PE.setImmediate?kE(LE,!1):LE;DE({global:!0,bind:!0,enumerable:!0,forced:PE.setImmediate!==ME},{setImmediate:ME});var UE=i(ie.setImmediate),xE=wi,VE=$d,FE=De,BE=Zc,jE=jn,GE=h.process;xE({global:!0,enumerable:!0,dontCallGetSet:!0},{queueMicrotask:function(e){BE(arguments.length,1),FE(e);var t=jE&&GE.domain;VE(t?t.bind(e):e)}});var WE=i(ie.queueMicrotask);function HE(e,t){return function(){return e.apply(t,arguments)}}const{toString:KE}=Object.prototype,{getPrototypeOf:YE}=Object,qE=(zE=Object.create(null),e=>{const t=KE.call(e);return zE[t]||(zE[t]=t.slice(8,-1).toLowerCase())});var zE;const JE=e=>(e=e.toLowerCase(),t=>qE(t)===e),XE=e=>t=>typeof t===e,{isArray:QE}=Array,ZE=XE(\"undefined\");const $E=JE(\"ArrayBuffer\");const ef=XE(\"string\"),tf=XE(\"function\"),nf=XE(\"number\"),rf=e=>null!==e&&\"object\"==typeof e,of=e=>{if(\"object\"!==qE(e))return!1;const t=YE(e);return!(null!==t&&t!==Object.prototype&&null!==Object.getPrototypeOf(t)||Symbol.toStringTag in e||mE(e))},sf=JE(\"Date\"),af=JE(\"File\"),cf=JE(\"Blob\"),df=JE(\"FileList\"),lf=JE(\"URLSearchParams\"),[uf,hf,pf,_f]=[\"ReadableStream\",\"Request\",\"Response\",\"Headers\"].map(JE);function Ef(e,t){let i,n,{allOwnKeys:r=!1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(null!=e)if(\"object\"!=typeof e&&(e=[e]),QE(e))for(i=0,n=e.length;i<n;i++)t.call(null,e[i],i,e);else{const n=r?Object.getOwnPropertyNames(e):Object.keys(e),o=n.length;let s;for(i=0;i<o;i++)s=n[i],t.call(null,e[s],s,e)}}function ff(e,t){t=t.toLowerCase();const i=Object.keys(e);let n,r=i.length;for(;r-- >0;)if(n=i[r],t===n.toLowerCase())return n;return null}const mf=void 0!==SE?SE:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:global,Tf=e=>!ZE(e)&&e!==mf;const Sf=(gf=\"undefined\"!=typeof Uint8Array&&YE(Uint8Array),e=>gf&&e instanceof gf);var gf;const Rf=JE(\"HTMLFormElement\"),Cf=(e=>{let{hasOwnProperty:t}=e;return(e,i)=>t.call(e,i)})(Object.prototype),If=JE(\"RegExp\"),vf=(e,t)=>{const i=Object.getOwnPropertyDescriptors(e),n={};Ef(i,((i,r)=>{let o;!1!==(o=t(i,r,e))&&(n[r]=o||i)})),Object.defineProperties(e,n)},yf=\"abcdefghijklmnopqrstuvwxyz\",Af=\"0123456789\",bf={DIGIT:Af,ALPHA:yf,ALPHA_DIGIT:yf+yf.toUpperCase()+Af};const wf=JE(\"AsyncFunction\"),Of=(Nf=\"function\"==typeof UE,Df=tf(mf.postMessage),Nf?UE:Df?(Pf=\"axios@\".concat(Math.random()),Lf=[],mf.addEventListener(\"message\",(e=>{let{source:t,data:i}=e;t===mf&&i===Pf&&Lf.length&&Lf.shift()()}),!1),e=>{Lf.push(e),mf.postMessage(Pf,\"*\")}):e=>setTimeout(e));var Nf,Df,Pf,Lf;const kf=void 0!==WE?WE.bind(mf):\"undefined\"!=typeof process&&process.nextTick||Of;var Mf={isArray:QE,isArrayBuffer:$E,isBuffer:function(e){return null!==e&&!ZE(e)&&null!==e.constructor&&!ZE(e.constructor)&&tf(e.constructor.isBuffer)&&e.constructor.isBuffer(e)},isFormData:e=>{let t;return e&&(\"function\"==typeof FormData&&e instanceof FormData||tf(e.append)&&(\"formdata\"===(t=qE(e))||\"object\"===t&&tf(e.toString)&&\"[object FormData]\"===e.toString()))},isArrayBufferView:function(e){let t;return t=\"undefined\"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&$E(e.buffer),t},isString:ef,isNumber:nf,isBoolean:e=>!0===e||!1===e,isObject:rf,isPlainObject:of,isReadableStream:uf,isRequest:hf,isResponse:pf,isHeaders:_f,isUndefined:ZE,isDate:sf,isFile:af,isBlob:cf,isRegExp:If,isFunction:tf,isStream:e=>rf(e)&&tf(e.pipe),isURLSearchParams:lf,isTypedArray:Sf,isFileList:df,forEach:Ef,merge:function e(){const{caseless:t}=Tf(this)&&this||{},i={},n=(n,r)=>{const o=t&&ff(i,r)||r;of(i[o])&&of(n)?i[o]=e(i[o],n):of(n)?i[o]=e({},n):QE(n)?i[o]=n.slice():i[o]=n};for(let e=0,t=arguments.length;e<t;e++)arguments[e]&&Ef(arguments[e],n);return i},extend:function(e,t,i){let{allOwnKeys:n}=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return Ef(t,((t,n)=>{i&&tf(t)?e[n]=HE(t,i):e[n]=t}),{allOwnKeys:n}),e},trim:e=>jp(e)?jp(e).call(e):e.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\"\"),stripBOM:e=>(65279===e.charCodeAt(0)&&(e=e.slice(1)),e),inherits:(e,t,i,n)=>{e.prototype=Object.create(t.prototype,n),e.prototype.constructor=e,Object.defineProperty(e,\"super\",{value:t.prototype}),i&&Object.assign(e.prototype,i)},toFlatObject:(e,t,i,n)=>{let r,o,s;const a={};if(t=t||{},null==e)return t;do{for(r=Object.getOwnPropertyNames(e),o=r.length;o-- >0;)s=r[o],n&&!n(s,e,t)||a[s]||(t[s]=e[s],a[s]=!0);e=!1!==i&&YE(e)}while(e&&(!i||i(e,t))&&e!==Object.prototype);return t},kindOf:qE,kindOfTest:JE,endsWith:(e,t,i)=>{e=String(e),(void 0===i||i>e.length)&&(i=e.length),i-=t.length;const n=e.indexOf(t,i);return-1!==n&&n===i},toArray:e=>{if(!e)return null;if(QE(e))return e;let t=e.length;if(!nf(t))return null;const i=new Array(t);for(;t-- >0;)i[t]=e[t];return i},forEachEntry:(e,t)=>{const i=(e&&e[Symbol.iterator]).call(e);let n;for(;(n=i.next())&&!n.done;){const i=n.value;t.call(e,i[0],i[1])}},matchAll:(e,t)=>{let i;const n=[];for(;null!==(i=e.exec(t));)n.push(i);return n},isHTMLForm:Rf,hasOwnProperty:Cf,hasOwnProp:Cf,reduceDescriptors:vf,freezeMethods:e=>{vf(e,((t,i)=>{if(tf(e)&&-1!==[\"arguments\",\"caller\",\"callee\"].indexOf(i))return!1;const n=e[i];tf(n)&&(t.enumerable=!1,\"writable\"in t?t.writable=!1:t.set||(t.set=()=>{throw Error(\"Can not rewrite read-only method '\"+i+\"'\")}))}))},toObjectSet:(e,t)=>{const i={},n=e=>{e.forEach((e=>{i[e]=!0}))};return QE(e)?n(e):n(String(e).split(t)),i},toCamelCase:e=>e.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,(function(e,t,i){return t.toUpperCase()+i})),noop:()=>{},toFiniteNumber:(e,t)=>null!=e&&Number.isFinite(e=+e)?e:t,findKey:ff,global:mf,isContextDefined:Tf,ALPHABET:bf,generateString:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:16,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:bf.ALPHA_DIGIT,i=\"\";const{length:n}=t;for(;e--;)i+=t[Math.random()*n|0];return i},isSpecCompliantForm:function(e){return!!(e&&tf(e.append)&&\"FormData\"===e[Symbol.toStringTag]&&e[Symbol.iterator])},toJSONObject:e=>{const t=new Array(10),i=(e,n)=>{if(rf(e)){if(t.indexOf(e)>=0)return;if(!(\"toJSON\"in e)){t[n]=e;const r=QE(e)?[]:{};return Ef(e,((e,t)=>{const o=i(e,n+1);!ZE(o)&&(r[t]=o)})),t[n]=void 0,r}}return e};return i(e,0)},isAsyncFn:wf,isThenable:e=>e&&(rf(e)||tf(e))&&tf(e.then)&&tf(e.catch),setImmediate:Of,asap:kf};function Uf(e,t,i,n,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=e,this.name=\"AxiosError\",t&&(this.code=t),i&&(this.config=i),n&&(this.request=n),r&&(this.response=r,this.status=r.status?r.status:null)}Mf.inherits(Uf,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:Mf.toJSONObject(this.config),code:this.code,status:this.status}}});const xf=Uf.prototype,Vf={};[\"ERR_BAD_OPTION_VALUE\",\"ERR_BAD_OPTION\",\"ECONNABORTED\",\"ETIMEDOUT\",\"ERR_NETWORK\",\"ERR_FR_TOO_MANY_REDIRECTS\",\"ERR_DEPRECATED\",\"ERR_BAD_RESPONSE\",\"ERR_BAD_REQUEST\",\"ERR_CANCELED\",\"ERR_NOT_SUPPORT\",\"ERR_INVALID_URL\"].forEach((e=>{Vf[e]={value:e}})),Object.defineProperties(Uf,Vf),Object.defineProperty(xf,\"isAxiosError\",{value:!0}),Uf.from=(e,t,i,n,r,o)=>{const s=Object.create(xf);return Mf.toFlatObject(e,s,(function(e){return e!==Error.prototype}),(e=>\"isAxiosError\"!==e)),Uf.call(s,e.message,t,i,n,r),s.cause=e,s.name=e.name,o&&Object.assign(s,o),s};function Ff(e){return Mf.isPlainObject(e)||Mf.isArray(e)}function Bf(e){return Mf.endsWith(e,\"[]\")?e.slice(0,-2):e}function jf(e,t,i){return e?e.concat(t).map((function(e,t){return e=Bf(e),!i&&t?\"[\"+e+\"]\":e})).join(i?\".\":\"\"):t}const Gf=Mf.toFlatObject(Mf,{},null,(function(e){return/^is[A-Z]/.test(e)}));function Wf(e,t,i){if(!Mf.isObject(e))throw new TypeError(\"target must be an object\");t=t||new FormData;const n=(i=Mf.toFlatObject(i,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(e,t){return!Mf.isUndefined(t[e])}))).metaTokens,r=i.visitor||d,o=i.dots,s=i.indexes,a=(i.Blob||\"undefined\"!=typeof Blob&&Blob)&&Mf.isSpecCompliantForm(t);if(!Mf.isFunction(r))throw new TypeError(\"visitor must be a function\");function c(e){if(null===e)return\"\";if(Mf.isDate(e))return e.toISOString();if(!a&&Mf.isBlob(e))throw new Uf(\"Blob is not supported. Use a Buffer instead.\");return Mf.isArrayBuffer(e)||Mf.isTypedArray(e)?a&&\"function\"==typeof Blob?new Blob([e]):Buffer.from(e):e}function d(e,i,r){let a=e;if(e&&!r&&\"object\"==typeof e)if(Mf.endsWith(i,\"{}\"))i=n?i:i.slice(0,-2),e=JSON.stringify(e);else if(Mf.isArray(e)&&function(e){return Mf.isArray(e)&&!e.some(Ff)}(e)||(Mf.isFileList(e)||Mf.endsWith(i,\"[]\"))&&(a=Mf.toArray(e)))return i=Bf(i),a.forEach((function(e,n){!Mf.isUndefined(e)&&null!==e&&t.append(!0===s?jf([i],n,o):null===s?i:i+\"[]\",c(e))})),!1;return!!Ff(e)||(t.append(jf(r,i,o),c(e)),!1)}const l=[],u=Object.assign(Gf,{defaultVisitor:d,convertValue:c,isVisitable:Ff});if(!Mf.isObject(e))throw new TypeError(\"data must be an object\");return function e(i,n){if(!Mf.isUndefined(i)){if(-1!==l.indexOf(i))throw Error(\"Circular reference detected in \"+n.join(\".\"));l.push(i),Mf.forEach(i,(function(i,o){!0===(!(Mf.isUndefined(i)||null===i)&&r.call(t,i,Mf.isString(o)?jp(o).call(o):o,n,u))&&e(i,n?n.concat(o):[o])})),l.pop()}}(e),t}function Hf(e){const t={\"!\":\"%21\",\"'\":\"%27\",\"(\":\"%28\",\")\":\"%29\",\"~\":\"%7E\",\"%20\":\"+\",\"%00\":\"\\0\"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,(function(e){return t[e]}))}function Kf(e,t){this._pairs=[],e&&Wf(e,this,t)}const Yf=Kf.prototype;function qf(e){return encodeURIComponent(e).replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%20/g,\"+\").replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\")}function zf(e,t,i){if(!t)return e;const n=i&&i.encode||qf,r=i&&i.serialize;let o;if(o=r?r(t,i):Mf.isURLSearchParams(t)?t.toString():new Kf(t,i).toString(n),o){const t=e.indexOf(\"#\");-1!==t&&(e=e.slice(0,t)),e+=(-1===e.indexOf(\"?\")?\"?\":\"&\")+o}return e}Yf.append=function(e,t){this._pairs.push([e,t])},Yf.toString=function(e){const t=e?function(t){return e.call(this,t,Hf)}:Hf;return this._pairs.map((function(e){return t(e[0])+\"=\"+t(e[1])}),\"\").join(\"&\")};var Jf=class{constructor(){this.handlers=[]}use(e,t,i){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!i&&i.synchronous,runWhen:i?i.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){Mf.forEach(this.handlers,(function(t){null!==t&&e(t)}))}},Xf={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},Qf={exports:{}},Zf=wi,$f=N,em=Qt.f;Zf({target:\"Object\",stat:!0,forced:Object.defineProperty!==em,sham:!$f},{defineProperty:em});var tm=ie.Object,im=Qf.exports=function(e,t,i){return tm.defineProperty(e,t,i)};tm.defineProperty.sham&&(im.sham=!0);var nm=i(Qf.exports),rm=R,om=Array.isArray||function(e){return\"Array\"==rm(e)},sm=TypeError,am=om,cm=jc,dm=te,lm=ht(\"species\"),um=Array,hm=function(e){var t;return am(e)&&(t=e.constructor,(cm(t)&&(t===um||am(t.prototype))||dm(t)&&null===(t=t[lm]))&&(t=void 0)),void 0===t?um:t},pm=function(e,t){return new(hm(e))(0===t?0:t)},_m=n,Em=Ee,fm=ht(\"species\"),mm=function(e){return Em>=51||!_m((function(){var t=[];return(t.constructor={})[fm]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},Tm=wi,Sm=n,gm=om,Rm=te,Cm=Je,Im=Gi,vm=function(e){if(e>9007199254740991)throw sm(\"Maximum allowed index exceeded\");return e},ym=E_,Am=pm,bm=mm,wm=Ee,Om=ht(\"isConcatSpreadable\"),Nm=wm>=51||!Sm((function(){var e=[];return e[Om]=!1,e.concat()[0]!==e})),Dm=function(e){if(!Rm(e))return!1;var t=e[Om];return void 0!==t?!!t:gm(e)};Tm({target:\"Array\",proto:!0,arity:1,forced:!Nm||!bm(\"concat\")},{concat:function(e){var t,i,n,r,o,s=Cm(this),a=Am(s,0),c=0;for(t=-1,n=arguments.length;t<n;t++)if(Dm(o=-1===t?s:arguments[t]))for(r=Im(o),vm(c+r),i=0;i<r;i++,c++)i in o&&ym(a,c,o[i]);else vm(c+1),ym(a,c++,o);return a.length=c,a}});var Pm={},Lm=R,km=Z,Mm=Or.f,Um=R_,xm=\"object\"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];Pm.f=function(e){return xm&&\"Window\"==Lm(e)?function(e){try{return Mm(e)}catch(e){return Um(xm)}}(e):Mm(km(e))};var Vm={},Fm=ht;Vm.f=Fm;var Bm=ie,jm=Ze,Gm=Vm,Wm=Qt.f,Hm=function(e){var t=Bm.Symbol||(Bm.Symbol={});jm(t,e)||Wm(t,e,{value:Gm.f(e)})},Km=L,Ym=ae,qm=ht,zm=ha,Jm=function(){var e=Ym(\"Symbol\"),t=e&&e.prototype,i=t&&t.valueOf,n=qm(\"toPrimitive\");t&&!t[n]&&zm(t,n,(function(e){return Km(i,this)}),{arity:1})},Xm=Xt,Qm=K,Zm=Je,$m=Gi,eT=pm,tT=d([].push),iT=function(e){var t=1==e,i=2==e,n=3==e,r=4==e,o=6==e,s=7==e,a=5==e||o;return function(c,d,l,u){for(var h,p,_=Zm(c),E=Qm(_),f=Xm(d,l),m=$m(E),T=0,S=u||eT,g=t?S(c,m):i||s?S(c,0):void 0;m>T;T++)if((a||T in E)&&(p=f(h=E[T],T,_),e))if(t)g[T]=p;else if(p)switch(e){case 3:return!0;case 5:return h;case 6:return T;case 2:tT(g,h)}else switch(e){case 4:return!1;case 7:tT(g,h)}return o?-1:n||r?r:g}},nT={forEach:iT(0),map:iT(1),filter:iT(2),some:iT(3),every:iT(4),find:iT(5),findIndex:iT(6),filterReject:iT(7)},rT=wi,oT=h,sT=L,aT=d,cT=N,dT=Se,lT=n,uT=Ze,hT=l,pT=ii,_T=Z,ET=Ct,fT=fn,mT=B,TT=Io,ST=eo,gT=Or,RT=Pm,CT=Br,IT=O,vT=Qt,yT=Qr,AT=k,bT=ha,wT=hc,OT=Ye,NT=Nr,DT=nt,PT=ht,LT=Vm,kT=Hm,MT=Jm,UT=Da,xT=ra,VT=nT.forEach,FT=lr(\"hidden\"),BT=\"Symbol\",jT=\"prototype\",GT=xT.set,WT=xT.getterFor(BT),HT=Object[jT],KT=oT.Symbol,YT=KT&&KT[jT],qT=oT.TypeError,zT=oT.QObject,JT=IT.f,XT=vT.f,QT=RT.f,ZT=AT.f,$T=aT([].push),eS=OT(\"symbols\"),tS=OT(\"op-symbols\"),iS=OT(\"wks\"),nS=!zT||!zT[jT]||!zT[jT].findChild,rS=cT&&lT((function(){return 7!=TT(XT({},\"a\",{get:function(){return XT(this,\"a\",{value:7}).a}})).a}))?function(e,t,i){var n=JT(HT,t);n&&delete HT[t],XT(e,t,i),n&&e!==HT&&XT(HT,t,n)}:XT,oS=function(e,t){var i=eS[e]=TT(YT);return GT(i,{type:BT,tag:e,description:t}),cT||(i.description=t),i},sS=function(e,t,i){e===HT&&sS(tS,t,i),pT(e);var n=ET(t);return pT(i),uT(eS,n)?(i.enumerable?(uT(e,FT)&&e[FT][n]&&(e[FT][n]=!1),i=TT(i,{enumerable:mT(0,!1)})):(uT(e,FT)||XT(e,FT,mT(1,{})),e[FT][n]=!0),rS(e,n,i)):XT(e,n,i)},aS=function(e,t){pT(e);var i=_T(t),n=ST(i).concat(uS(i));return VT(n,(function(t){cT&&!sT(cS,i,t)||sS(e,t,i[t])})),e},cS=function(e){var t=ET(e),i=sT(ZT,this,t);return!(this===HT&&uT(eS,t)&&!uT(tS,t))&&(!(i||!uT(this,t)||!uT(eS,t)||uT(this,FT)&&this[FT][t])||i)},dS=function(e,t){var i=_T(e),n=ET(t);if(i!==HT||!uT(eS,n)||uT(tS,n)){var r=JT(i,n);return!r||!uT(eS,n)||uT(i,FT)&&i[FT][n]||(r.enumerable=!0),r}},lS=function(e){var t=QT(_T(e)),i=[];return VT(t,(function(e){uT(eS,e)||uT(NT,e)||$T(i,e)})),i},uS=function(e){var t=e===HT,i=QT(t?tS:_T(e)),n=[];return VT(i,(function(e){!uT(eS,e)||t&&!uT(HT,e)||$T(n,eS[e])})),n};dT||(bT(YT=(KT=function(){if(hT(YT,this))throw qT(\"Symbol is not a constructor\");var e=arguments.length&&void 0!==arguments[0]?fT(arguments[0]):void 0,t=DT(e),i=function(e){this===HT&&sT(i,tS,e),uT(this,FT)&&uT(this[FT],t)&&(this[FT][t]=!1),rS(this,t,mT(1,e))};return cT&&nS&&rS(HT,t,{configurable:!0,set:i}),oS(t,e)})[jT],\"toString\",(function(){return WT(this).tag})),bT(KT,\"withoutSetter\",(function(e){return oS(DT(e),e)})),AT.f=cS,vT.f=sS,yT.f=aS,IT.f=dS,gT.f=RT.f=lS,CT.f=uS,LT.f=function(e){return oS(PT(e),e)},cT&&wT(YT,\"description\",{configurable:!0,get:function(){return WT(this).description}})),rT({global:!0,constructor:!0,wrap:!0,forced:!dT,sham:!dT},{Symbol:KT}),VT(ST(iS),(function(e){kT(e)})),rT({target:BT,stat:!0,forced:!dT},{useSetter:function(){nS=!0},useSimple:function(){nS=!1}}),rT({target:\"Object\",stat:!0,forced:!dT,sham:!cT},{create:function(e,t){return void 0===t?TT(e):aS(TT(e),t)},defineProperty:sS,defineProperties:aS,getOwnPropertyDescriptor:dS}),rT({target:\"Object\",stat:!0,forced:!dT},{getOwnPropertyNames:lS}),MT(),UT(KT,BT),NT[FT]=!0;var hS=Se&&!!Symbol.for&&!!Symbol.keyFor,pS=wi,_S=ae,ES=Ze,fS=fn,mS=Ye,TS=hS,SS=mS(\"string-to-symbol-registry\"),gS=mS(\"symbol-to-string-registry\");pS({target:\"Symbol\",stat:!0,forced:!TS},{for:function(e){var t=fS(e);if(ES(SS,t))return SS[t];var i=_S(\"Symbol\")(t);return SS[t]=i,gS[i]=t,i}});var RS=wi,CS=Ze,IS=ye,vS=be,yS=hS,AS=Ye(\"symbol-to-string-registry\");RS({target:\"Symbol\",stat:!0,forced:!yS},{keyFor:function(e){if(!IS(e))throw TypeError(vS(e)+\" is not a symbol\");if(CS(AS,e))return AS[e]}});var bS=om,wS=w,OS=R,NS=fn,DS=d([].push),PS=wi,LS=ae,kS=m,MS=L,US=d,xS=n,VS=w,FS=ye,BS=Xc,jS=function(e){if(wS(e))return e;if(bS(e)){for(var t=e.length,i=[],n=0;n<t;n++){var r=e[n];\"string\"==typeof r?DS(i,r):\"number\"!=typeof r&&\"Number\"!=OS(r)&&\"String\"!=OS(r)||DS(i,NS(r))}var o=i.length,s=!0;return function(e,t){if(s)return s=!1,t;if(bS(this))return t;for(var n=0;n<o;n++)if(i[n]===e)return t}}},GS=Se,WS=String,HS=LS(\"JSON\",\"stringify\"),KS=US(/./.exec),YS=US(\"\".charAt),qS=US(\"\".charCodeAt),zS=US(\"\".replace),JS=US(1..toString),XS=/[\\uD800-\\uDFFF]/g,QS=/^[\\uD800-\\uDBFF]$/,ZS=/^[\\uDC00-\\uDFFF]$/,$S=!GS||xS((function(){var e=LS(\"Symbol\")();return\"[null]\"!=HS([e])||\"{}\"!=HS({a:e})||\"{}\"!=HS(Object(e))})),eg=xS((function(){return'\"\\\\udf06\\\\ud834\"'!==HS(\"\\udf06\\ud834\")||'\"\\\\udead\"'!==HS(\"\\udead\")})),tg=function(e,t){var i=BS(arguments),n=jS(t);if(VS(n)||void 0!==e&&!FS(e))return i[1]=function(e,t){if(VS(n)&&(t=MS(n,this,WS(e),t)),!FS(t))return t},kS(HS,null,i)},ig=function(e,t,i){var n=YS(i,t-1),r=YS(i,t+1);return KS(QS,e)&&!KS(ZS,r)||KS(ZS,e)&&!KS(QS,n)?\"\\\\u\"+JS(qS(e,0),16):e};HS&&PS({target:\"JSON\",stat:!0,arity:3,forced:$S||eg},{stringify:function(e,t,i){var n=BS(arguments),r=kS($S?tg:HS,null,n);return eg&&\"string\"==typeof r?zS(r,XS,ig):r}});var ng=Br,rg=Je;wi({target:\"Object\",stat:!0,forced:!Se||n((function(){ng.f(1)}))},{getOwnPropertySymbols:function(e){var t=ng.f;return t?t(rg(e)):[]}}),Hm(\"asyncIterator\"),Hm(\"hasInstance\"),Hm(\"isConcatSpreadable\"),Hm(\"iterator\"),Hm(\"match\"),Hm(\"matchAll\"),Hm(\"replace\"),Hm(\"search\"),Hm(\"species\"),Hm(\"split\");var og=Jm;Hm(\"toPrimitive\"),og();var sg=ae,ag=Da;Hm(\"toStringTag\"),ag(sg(\"Symbol\"),\"Symbol\"),Hm(\"unscopables\"),Da(h.JSON,\"JSON\",!0);var cg=ie.Symbol,dg=ht,lg=Qt.f,ug=dg(\"metadata\"),hg=Function.prototype;void 0===hg[ug]&&lg(hg,ug,{value:null}),Hm(\"dispose\"),Hm(\"metadata\");var pg=cg;Hm(\"asyncDispose\");var _g=d,Eg=ae(\"Symbol\"),fg=Eg.keyFor,mg=_g(Eg.prototype.valueOf),Tg=Eg.isRegisteredSymbol||function(e){try{return void 0!==fg(mg(e))}catch(e){return!1}};wi({target:\"Symbol\",stat:!0},{isRegisteredSymbol:Tg});for(var Sg=Ye,gg=ae,Rg=d,Cg=ye,Ig=ht,vg=gg(\"Symbol\"),yg=vg.isWellKnownSymbol,Ag=gg(\"Object\",\"getOwnPropertyNames\"),bg=Rg(vg.prototype.valueOf),wg=Sg(\"wks\"),Og=0,Ng=Ag(vg),Dg=Ng.length;Og<Dg;Og++)try{var Pg=Ng[Og];Cg(vg[Pg])&&Ig(Pg)}catch(e){}var Lg=function(e){if(yg&&yg(e))return!0;try{for(var t=bg(e),i=0,n=Ag(wg),r=n.length;i<r;i++)if(wg[n[i]]==t)return!0}catch(e){}return!1};wi({target:\"Symbol\",stat:!0,forced:!0},{isWellKnownSymbol:Lg}),Hm(\"matcher\"),Hm(\"observable\"),wi({target:\"Symbol\",stat:!0,name:\"isRegisteredSymbol\"},{isRegistered:Tg}),wi({target:\"Symbol\",stat:!0,name:\"isWellKnownSymbol\",forced:!0},{isWellKnown:Lg}),Hm(\"metadataKey\"),Hm(\"patternMatch\"),Hm(\"replaceAll\");var kg=i(pg),Mg=i(Vm.f(\"iterator\"));function Ug(e){return Ug=\"function\"==typeof kg&&\"symbol\"==typeof Mg?function(e){return typeof e}:function(e){return e&&\"function\"==typeof kg&&e.constructor===kg&&e!==kg.prototype?\"symbol\":typeof e},Ug(e)}var xg=i(Vm.f(\"toPrimitive\"));function Vg(e){var t=function(e,t){if(\"object\"!==Ug(e)||null===e)return e;var i=e[xg];if(void 0!==i){var n=i.call(e,t||\"default\");if(\"object\"!==Ug(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===Ug(t)?t:String(t)}function Fg(e,t,i){return(t=Vg(t))in e?nm(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var Bg=n,jg=ht(\"iterator\"),Gg=!Bg((function(){var e=new URL(\"b?a=1&b=2&c=3\",\"http://a\"),t=e.searchParams,i=new URLSearchParams(\"a=1&a=2\"),n=\"\";return e.pathname=\"c%20d\",t.forEach((function(e,i){t.delete(\"b\"),n+=i+e})),i.delete(\"a\",2),!e.toJSON||!i.has(\"a\",1)||i.has(\"a\",2)||!t.size&&true||!t.sort||\"http://a/c%20d?a=1&c=3\"!==e.href||\"3\"!==t.get(\"c\")||\"a=1\"!==String(new URLSearchParams(\"?a=1\"))||!t[jg]||\"a\"!==new URL(\"https://a@b\").username||\"b\"!==new URLSearchParams(new URLSearchParams(\"a=b\")).get(\"a\")||\"xn--e1aybc\"!==new URL(\"http://ÑÐµÑÑ\").host||\"#%D0%B1\"!==new URL(\"http://a#Ð±\").hash||\"a1c3\"!==n||\"x\"!==new URL(\"http://x\",void 0).host})),Wg=ha,Hg=wi,Kg=h,Yg=L,qg=d,zg=N,Jg=Gg,Xg=ha,Qg=hc,Zg=function(e,t,i){for(var n in t)i&&i.unsafe&&e[n]?e[n]=t[n]:Wg(e,n,t[n],i);return e},$g=Da,eR=Va,tR=ra,iR=Sc,nR=w,rR=Ze,oR=Xt,sR=pn,aR=ii,cR=te,dR=fn,lR=Io,uR=B,hR=es,pR=qo,_R=Zc,ER=b_,fR=ht(\"iterator\"),mR=\"URLSearchParams\",TR=mR+\"Iterator\",SR=tR.set,gR=tR.getterFor(mR),RR=tR.getterFor(TR),CR=Object.getOwnPropertyDescriptor,IR=function(e){if(!zg)return Kg[e];var t=CR(Kg,e);return t&&t.value},vR=IR(\"fetch\"),yR=IR(\"Request\"),AR=IR(\"Headers\"),bR=yR&&yR.prototype,wR=AR&&AR.prototype,OR=Kg.RegExp,NR=Kg.TypeError,DR=Kg.decodeURIComponent,PR=Kg.encodeURIComponent,LR=qg(\"\".charAt),kR=qg([].join),MR=qg([].push),UR=qg(\"\".replace),xR=qg([].shift),VR=qg([].splice),FR=qg(\"\".split),BR=qg(\"\".slice),jR=/\\+/g,GR=Array(4),WR=function(e){return GR[e-1]||(GR[e-1]=OR(\"((?:%[\\\\da-f]{2}){\"+e+\"})\",\"gi\"))},HR=function(e){try{return DR(e)}catch(t){return e}},KR=function(e){var t=UR(e,jR,\" \"),i=4;try{return DR(t)}catch(e){for(;i;)t=UR(t,WR(i--),HR);return t}},YR=/[!'()~]|%20/g,qR={\"!\":\"%21\",\"'\":\"%27\",\"(\":\"%28\",\")\":\"%29\",\"~\":\"%7E\",\"%20\":\"+\"},zR=function(e){return qR[e]},JR=function(e){return UR(PR(e),YR,zR)},XR=eR((function(e,t){SR(this,{type:TR,iterator:hR(gR(e).entries),kind:t})}),\"Iterator\",(function(){var e=RR(this),t=e.kind,i=e.iterator.next(),n=i.value;return i.done||(i.value=\"keys\"===t?n.key:\"values\"===t?n.value:[n.key,n.value]),i}),!0),QR=function(e){this.entries=[],this.url=null,void 0!==e&&(cR(e)?this.parseObject(e):this.parseQuery(\"string\"==typeof e?\"?\"===LR(e,0)?BR(e,1):e:dR(e)))};QR.prototype={type:mR,bindURL:function(e){this.url=e,this.update()},parseObject:function(e){var t,i,n,r,o,s,a,c=pR(e);if(c)for(i=(t=hR(e,c)).next;!(n=Yg(i,t)).done;){if(o=(r=hR(aR(n.value))).next,(s=Yg(o,r)).done||(a=Yg(o,r)).done||!Yg(o,r).done)throw NR(\"Expected sequence with length 2\");MR(this.entries,{key:dR(s.value),value:dR(a.value)})}else for(var d in e)rR(e,d)&&MR(this.entries,{key:d,value:dR(e[d])})},parseQuery:function(e){if(e)for(var t,i,n=FR(e,\"&\"),r=0;r<n.length;)(t=n[r++]).length&&(i=FR(t,\"=\"),MR(this.entries,{key:KR(xR(i)),value:KR(kR(i,\"=\"))}))},serialize:function(){for(var e,t=this.entries,i=[],n=0;n<t.length;)e=t[n++],MR(i,JR(e.key)+\"=\"+JR(e.value));return kR(i,\"&\")},update:function(){this.entries.length=0,this.parseQuery(this.url.query)},updateURL:function(){this.url&&this.url.update()}};var ZR=function(){iR(this,$R);var e=SR(this,new QR(arguments.length>0?arguments[0]:void 0));zg||(this.size=e.entries.length)},$R=ZR.prototype;if(Zg($R,{append:function(e,t){var i=gR(this);_R(arguments.length,2),MR(i.entries,{key:dR(e),value:dR(t)}),zg||this.length++,i.updateURL()},delete:function(e){for(var t=gR(this),i=_R(arguments.length,1),n=t.entries,r=dR(e),o=i<2?void 0:arguments[1],s=void 0===o?o:dR(o),a=0;a<n.length;){var c=n[a];if(c.key!==r||void 0!==s&&c.value!==s)a++;else if(VR(n,a,1),void 0!==s)break}zg||(this.size=n.length),t.updateURL()},get:function(e){var t=gR(this).entries;_R(arguments.length,1);for(var i=dR(e),n=0;n<t.length;n++)if(t[n].key===i)return t[n].value;return null},getAll:function(e){var t=gR(this).entries;_R(arguments.length,1);for(var i=dR(e),n=[],r=0;r<t.length;r++)t[r].key===i&&MR(n,t[r].value);return n},has:function(e){for(var t=gR(this).entries,i=_R(arguments.length,1),n=dR(e),r=i<2?void 0:arguments[1],o=void 0===r?r:dR(r),s=0;s<t.length;){var a=t[s++];if(a.key===n&&(void 0===o||a.value===o))return!0}return!1},set:function(e,t){var i=gR(this);_R(arguments.length,1);for(var n,r=i.entries,o=!1,s=dR(e),a=dR(t),c=0;c<r.length;c++)(n=r[c]).key===s&&(o?VR(r,c--,1):(o=!0,n.value=a));o||MR(r,{key:s,value:a}),zg||(this.size=r.length),i.updateURL()},sort:function(){var e=gR(this);ER(e.entries,(function(e,t){return e.key>t.key?1:-1})),e.updateURL()},forEach:function(e){for(var t,i=gR(this).entries,n=oR(e,arguments.length>1?arguments[1]:void 0),r=0;r<i.length;)n((t=i[r++]).value,t.key,this)},keys:function(){return new XR(this,\"keys\")},values:function(){return new XR(this,\"values\")},entries:function(){return new XR(this,\"entries\")}},{enumerable:!0}),Xg($R,fR,$R.entries,{name:\"entries\"}),Xg($R,\"toString\",(function(){return gR(this).serialize()}),{enumerable:!0}),zg&&Qg($R,\"size\",{get:function(){return gR(this).entries.length},configurable:!0,enumerable:!0}),$g(ZR,mR),Hg({global:!0,constructor:!0,forced:!Jg},{URLSearchParams:ZR}),!Jg&&nR(AR)){var eC=qg(wR.has),tC=qg(wR.set),iC=function(e){if(cR(e)){var t,i=e.body;if(sR(i)===mR)return t=e.headers?new AR(e.headers):new AR,eC(t,\"content-type\")||tC(t,\"content-type\",\"application/x-www-form-urlencoded;charset=UTF-8\"),lR(e,{body:uR(0,dR(i)),headers:uR(0,t)})}return e};if(nR(vR)&&Hg({global:!0,enumerable:!0,dontCallGetSet:!0,forced:!0},{fetch:function(e){return vR(e,arguments.length>1?iC(arguments[1]):{})}}),nR(yR)){var nC=function(e){return iR(this,bR),new yR(e,arguments.length>1?iC(arguments[1]):{})};bR.constructor=nC,nC.prototype=bR,Hg({global:!0,constructor:!0,dontCallGetSet:!0,forced:!0},{Request:nC})}}var rC={URLSearchParams:ZR,getState:gR},oC=i(ie.URLSearchParams),sC={isBrowser:!0,classes:{URLSearchParams:void 0!==oC?oC:Kf,FormData:\"undefined\"!=typeof FormData?FormData:null,Blob:\"undefined\"!=typeof Blob?Blob:null},protocols:[\"http\",\"https\",\"file\",\"blob\",\"url\",\"data\"]};const aC=\"undefined\"!=typeof window&&\"undefined\"!=typeof document,cC=\"object\"==typeof navigator&&navigator||void 0,dC=aC&&(!cC||[\"ReactNative\",\"NativeScript\",\"NS\"].indexOf(cC.product)<0),lC=\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&\"function\"==typeof self.importScripts,uC=aC&&window.location.href||\"http://localhost\";function hC(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function pC(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?hC(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):hC(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}var _C=pC(pC({},Object.freeze({__proto__:null,hasBrowserEnv:aC,hasStandardBrowserEnv:dC,hasStandardBrowserWebWorkerEnv:lC,navigator:cC,origin:uC})),sC);var EC=ii,fC=L,mC=Ze,TC=l,SC=function(){var e=EC(this),t=\"\";return e.hasIndices&&(t+=\"d\"),e.global&&(t+=\"g\"),e.ignoreCase&&(t+=\"i\"),e.multiline&&(t+=\"m\"),e.dotAll&&(t+=\"s\"),e.unicode&&(t+=\"u\"),e.unicodeSets&&(t+=\"v\"),e.sticky&&(t+=\"y\"),t},gC=RegExp.prototype,RC=function(e){var t=e.flags;return void 0!==t||\"flags\"in gC||mC(e,\"flags\")||!TC(gC,e)?t:fC(SC,e)},CC=Ch.charAt,IC=L,vC=ii,yC=w,AC=R,bC=/./.exec,wC=TypeError,OC=wi,NC=L,DC=v,PC=Va,LC=ic,kC=J,MC=Bi,UC=fn,xC=ii,VC=Y,FC=R,BC=tn,jC=RC,GC=ke,WC=n,HC=Jc,KC=function(e,t,i){return t+(i?CC(e,t).length:1)},YC=function(e,t){var i=e.exec;if(yC(i)){var n=IC(i,e,t);return null!==n&&vC(n),n}if(\"RegExp\"===AC(e))return IC(bC,e,t);throw wC(\"RegExp#exec called on incompatible receiver\")},qC=ra,zC=ht(\"matchAll\"),JC=\"RegExp String\",XC=JC+\" Iterator\",QC=qC.set,ZC=qC.getterFor(XC),$C=TypeError,eI=DC(\"\".indexOf),tI=DC(\"\".matchAll),iI=!!tI&&!WC((function(){tI(\"a\",/./)})),nI=PC((function(e,t,i,n){QC(this,{type:XC,regexp:e,string:t,global:i,unicode:n,done:!1})}),JC,(function(){var e=ZC(this);if(e.done)return LC(void 0,!0);var t=e.regexp,i=e.string,n=YC(t,i);return null===n?(e.done=!0,LC(void 0,!0)):e.global?(\"\"===UC(n[0])&&(t.lastIndex=KC(i,MC(t.lastIndex),e.unicode)),LC(n,!1)):(e.done=!0,LC(n,!1))})),rI=function(e){var t,i,n,r=xC(this),o=UC(e),s=HC(r,RegExp),a=UC(jC(r));return t=new s(s===RegExp?r.source:r,a),i=!!~eI(a,\"g\"),n=!!~eI(a,\"u\"),t.lastIndex=MC(r.lastIndex),new nI(t,o,i,n)};OC({target:\"String\",proto:!0,forced:iI},{matchAll:function(e){var t,i,n,r,o=kC(this);if(VC(e)){if(iI)return tI(o,e)}else{if(BC(e)&&(t=UC(kC(jC(e))),!~eI(t,\"g\")))throw $C(\"`.matchAll` does not allow non-global regexes\");if(iI)return tI(o,e);if(void 0===(n=GC(e,zC))&&\"RegExp\"==FC(e)&&(n=rI),n)return NC(n,e,o)}return i=UC(o),r=new RegExp(e,\"g\"),NC(rI,r,i)}});var oI=Xi(\"String\").matchAll,sI=l,aI=oI,cI=String.prototype,dI=function(e){var t=e.matchAll;return\"string\"==typeof e||e===cI||sI(cI,e)&&t===cI.matchAll?aI:t},lI=i(dI);function uI(e){function t(e,i,n,r){let o=e[r++];if(\"__proto__\"===o)return!0;const s=Number.isFinite(+o),a=r>=e.length;if(o=!o&&Mf.isArray(n)?n.length:o,a)return Mf.hasOwnProp(n,o)?n[o]=[n[o],i]:n[o]=i,!s;n[o]&&Mf.isObject(n[o])||(n[o]=[]);return t(e,i,n[o],r)&&Mf.isArray(n[o])&&(n[o]=function(e){const t={},i=Object.keys(e);let n;const r=i.length;let o;for(n=0;n<r;n++)o=i[n],t[o]=e[o];return t}(n[o])),!s}if(Mf.isFormData(e)&&Mf.isFunction(e.entries)){const i={};return Mf.forEachEntry(e,((e,n)=>{t(function(e){return lI(Mf).call(Mf,/\\w+|\\[(\\w*)]/g,e).map((e=>\"[]\"===e[0]?\"\":e[1]||e[0]))}(e),n,i,0)})),i}return null}const hI={transitional:Xf,adapter:[\"xhr\",\"http\",\"fetch\"],transformRequest:[function(e,t){const i=t.getContentType()||\"\",n=i.indexOf(\"application/json\")>-1,r=Mf.isObject(e);r&&Mf.isHTMLForm(e)&&(e=new FormData(e));if(Mf.isFormData(e))return n?JSON.stringify(uI(e)):e;if(Mf.isArrayBuffer(e)||Mf.isBuffer(e)||Mf.isStream(e)||Mf.isFile(e)||Mf.isBlob(e)||Mf.isReadableStream(e))return e;if(Mf.isArrayBufferView(e))return e.buffer;if(Mf.isURLSearchParams(e))return t.setContentType(\"application/x-www-form-urlencoded;charset=utf-8\",!1),e.toString();let o;if(r){if(i.indexOf(\"application/x-www-form-urlencoded\")>-1)return function(e,t){return Wf(e,new _C.classes.URLSearchParams,Object.assign({visitor:function(e,t,i,n){return _C.isNode&&Mf.isBuffer(e)?(this.append(t,e.toString(\"base64\")),!1):n.defaultVisitor.apply(this,arguments)}},t))}(e,this.formSerializer).toString();if((o=Mf.isFileList(e))||i.indexOf(\"multipart/form-data\")>-1){const t=this.env&&this.env.FormData;return Wf(o?{\"files[]\":e}:e,t&&new t,this.formSerializer)}}return r||n?(t.setContentType(\"application/json\",!1),function(e,t,i){if(Mf.isString(e))try{return(t||JSON.parse)(e),jp(Mf).call(Mf,e)}catch(e){if(\"SyntaxError\"!==e.name)throw e}return(i||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){const t=this.transitional||hI.transitional,i=t&&t.forcedJSONParsing,n=\"json\"===this.responseType;if(Mf.isResponse(e)||Mf.isReadableStream(e))return e;if(e&&Mf.isString(e)&&(i&&!this.responseType||n)){const i=!(t&&t.silentJSONParsing)&&n;try{return JSON.parse(e)}catch(e){if(i){if(\"SyntaxError\"===e.name)throw Uf.from(e,Uf.ERR_BAD_RESPONSE,this,null,this.response);throw e}}}return e}],timeout:0,xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",maxContentLength:-1,maxBodyLength:-1,env:{FormData:_C.classes.FormData,Blob:_C.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":void 0}}};Mf.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\"],(e=>{hI.headers[e]={}}));var pI=hI;const _I=Mf.toObjectSet([\"age\",\"authorization\",\"content-length\",\"content-type\",\"etag\",\"expires\",\"from\",\"host\",\"if-modified-since\",\"if-unmodified-since\",\"last-modified\",\"location\",\"max-forwards\",\"proxy-authorization\",\"referer\",\"retry-after\",\"user-agent\"]);const EI=Symbol(\"internals\");function fI(e){var t;return e&&jp(t=String(e)).call(t).toLowerCase()}function mI(e){return!1===e||null==e?e:Mf.isArray(e)?e.map(mI):String(e)}function TI(e,t,i,n,r){return Mf.isFunction(n)?n.call(this,t,i):(r&&(t=i),Mf.isString(t)?Mf.isString(n)?-1!==t.indexOf(n):Mf.isRegExp(n)?n.test(t):void 0:void 0)}class SI{constructor(e){e&&this.set(e)}set(e,t,i){const n=this;function r(e,t,i){const r=fI(t);if(!r)throw new Error(\"header name must be a non-empty string\");const o=Mf.findKey(n,r);(!o||void 0===n[o]||!0===i||void 0===i&&!1!==n[o])&&(n[o||t]=mI(e))}const o=(e,t)=>Mf.forEach(e,((e,i)=>r(e,i,t)));if(Mf.isPlainObject(e)||e instanceof this.constructor)o(e,t);else if(Mf.isString(e)&&(e=jp(e).call(e))&&!/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(jp(s=e).call(s)))o((e=>{const t={};let i,n,r;return e&&e.split(\"\\n\").forEach((function(e){var o,s;r=e.indexOf(\":\"),i=jp(o=e.substring(0,r)).call(o).toLowerCase(),n=jp(s=e.substring(r+1)).call(s),!i||t[i]&&_I[i]||(\"set-cookie\"===i?t[i]?t[i].push(n):t[i]=[n]:t[i]=t[i]?t[i]+\", \"+n:n)})),t})(e),t);else if(Mf.isHeaders(e))for(const[t,n]of e.entries())r(n,t,i);else null!=e&&r(t,e,i);var s;return this}get(e,t){if(e=fI(e)){const i=Mf.findKey(this,e);if(i){const e=this[i];if(!t)return e;if(!0===t)return function(e){const t=Object.create(null),i=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;let n;for(;n=i.exec(e);)t[n[1]]=n[2];return t}(e);if(Mf.isFunction(t))return t.call(this,e,i);if(Mf.isRegExp(t))return t.exec(e);throw new TypeError(\"parser must be boolean|regexp|function\")}}}has(e,t){if(e=fI(e)){const i=Mf.findKey(this,e);return!(!i||void 0===this[i]||t&&!TI(0,this[i],i,t))}return!1}delete(e,t){const i=this;let n=!1;function r(e){if(e=fI(e)){const r=Mf.findKey(i,e);!r||t&&!TI(0,i[r],r,t)||(delete i[r],n=!0)}}return Mf.isArray(e)?e.forEach(r):r(e),n}clear(e){const t=Object.keys(this);let i=t.length,n=!1;for(;i--;){const r=t[i];e&&!TI(0,this[r],r,e,!0)||(delete this[r],n=!0)}return n}normalize(e){const t=this,i={};return Mf.forEach(this,((n,r)=>{var o;const s=Mf.findKey(i,r);if(s)return t[s]=mI(n),void delete t[r];const a=e?function(e){return jp(e).call(e).toLowerCase().replace(/([a-z\\d])(\\w*)/g,((e,t,i)=>t.toUpperCase()+i))}(r):jp(o=String(r)).call(o);a!==r&&delete t[r],t[a]=mI(n),i[a]=!0})),this}concat(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];return this.constructor.concat(this,...t)}toJSON(e){const t=Object.create(null);return Mf.forEach(this,((i,n)=>{null!=i&&!1!==i&&(t[n]=e&&Mf.isArray(i)?i.join(\", \"):i)})),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((e=>{let[t,i]=e;return t+\": \"+i})).join(\"\\n\")}get[Symbol.toStringTag](){return\"AxiosHeaders\"}static from(e){return e instanceof this?e:new this(e)}static concat(e){const t=new this(e);for(var i=arguments.length,n=new Array(i>1?i-1:0),r=1;r<i;r++)n[r-1]=arguments[r];return n.forEach((e=>t.set(e))),t}static accessor(e){const t=(this[EI]=this[EI]={accessors:{}}).accessors,i=this.prototype;function n(e){const n=fI(e);t[n]||(!function(e,t){const i=Mf.toCamelCase(\" \"+t);[\"get\",\"set\",\"has\"].forEach((n=>{Object.defineProperty(e,n+i,{value:function(e,i,r){return this[n].call(this,t,e,i,r)},configurable:!0})}))}(i,e),t[n]=!0)}return Mf.isArray(e)?e.forEach(n):n(e),this}}SI.accessor([\"Content-Type\",\"Content-Length\",\"Accept\",\"Accept-Encoding\",\"User-Agent\",\"Authorization\"]),Mf.reduceDescriptors(SI.prototype,((e,t)=>{let{value:i}=e,n=t[0].toUpperCase()+t.slice(1);return{get:()=>i,set(e){this[n]=e}}})),Mf.freezeMethods(SI);var gI=SI;function RI(e,t){const i=this||pI,n=t||i,r=gI.from(n.headers);let o=n.data;return Mf.forEach(e,(function(e){o=e.call(i,o,r.normalize(),t?t.status:void 0)})),r.normalize(),o}function CI(e){return!(!e||!e.__CANCEL__)}function II(e,t,i){Uf.call(this,null==e?\"canceled\":e,Uf.ERR_CANCELED,t,i),this.name=\"CanceledError\"}function vI(e,t,i){const n=i.config.validateStatus;i.status&&n&&!n(i.status)?t(new Uf(\"Request failed with status code \"+i.status,[Uf.ERR_BAD_REQUEST,Uf.ERR_BAD_RESPONSE][Math.floor(i.status/100)-4],i.config,i.request,i)):e(i)}Mf.inherits(II,Uf,{__CANCEL__:!0});const yI=function(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:3,n=0;const r=function(e,t){e=e||10;const i=new Array(e),n=new Array(e);let r,o=0,s=0;return t=void 0!==t?t:1e3,function(a){const c=Date.now(),d=n[s];r||(r=c),i[o]=a,n[o]=c;let l=s,u=0;for(;l!==o;)u+=i[l++],l%=e;if(o=(o+1)%e,o===s&&(s=(s+1)%e),c-r<t)return;const h=d&&c-d;return h?Math.round(1e3*u/h):void 0}}(50,250);return function(e,t){let i,n,r=0,o=1e3/t;const s=function(t){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Date.now();r=o,i=null,n&&(clearTimeout(n),n=null),e.apply(null,t)};return[function(){const e=Date.now(),t=e-r;for(var a=arguments.length,c=new Array(a),d=0;d<a;d++)c[d]=arguments[d];t>=o?s(c,e):(i=c,n||(n=setTimeout((()=>{n=null,s(i)}),o-t)))},()=>i&&s(i)]}((i=>{const o=i.loaded,s=i.lengthComputable?i.total:void 0,a=o-n,c=r(a);n=o;e({loaded:o,total:s,progress:s?o/s:void 0,bytes:a,rate:c||void 0,estimated:c&&s&&o<=s?(s-o)/c:void 0,event:i,lengthComputable:null!=s,[t?\"download\":\"upload\"]:!0})}),i)},AI=(e,t)=>{const i=null!=e;return[n=>t[0]({lengthComputable:i,total:e,loaded:n}),t[1]]},bI=e=>function(){for(var t=arguments.length,i=new Array(t),n=0;n<t;n++)i[n]=arguments[n];return Mf.asap((()=>e(...i)))};var wI=_C.hasStandardBrowserEnv?function(){const e=_C.navigator&&/(msie|trident)/i.test(_C.navigator.userAgent),t=document.createElement(\"a\");let i;function n(i){let n=i;return e&&(t.setAttribute(\"href\",n),n=t.href),t.setAttribute(\"href\",n),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,\"\"):\"\",host:t.host,search:t.search?t.search.replace(/^\\?/,\"\"):\"\",hash:t.hash?t.hash.replace(/^#/,\"\"):\"\",hostname:t.hostname,port:t.port,pathname:\"/\"===t.pathname.charAt(0)?t.pathname:\"/\"+t.pathname}}return i=n(window.location.href),function(e){const t=Mf.isString(e)?n(e):e;return t.protocol===i.protocol&&t.host===i.host}}():function(){return!0},OI=_C.hasStandardBrowserEnv?{write(e,t,i,n,r,o){const s=[e+\"=\"+encodeURIComponent(t)];Mf.isNumber(i)&&s.push(\"expires=\"+new Date(i).toGMTString()),Mf.isString(n)&&s.push(\"path=\"+n),Mf.isString(r)&&s.push(\"domain=\"+r),!0===o&&s.push(\"secure\"),document.cookie=s.join(\"; \")},read(e){const t=document.cookie.match(new RegExp(\"(^|;\\\\s*)(\"+e+\")=([^;]*)\"));return t?decodeURIComponent(t[3]):null},remove(e){this.write(e,\"\",Date.now()-864e5)}}:{write(){},read:()=>null,remove(){}};function NI(e,t){return e&&!function(e){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(e)}(t)?function(e,t){return t?e.replace(/\\/?\\/$/,\"\")+\"/\"+t.replace(/^\\/+/,\"\"):e}(e,t):t}function DI(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}const PI=e=>e instanceof gI?function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?DI(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):DI(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},e):e;function LI(e,t){t=t||{};const i={};function n(e,t,i){return Mf.isPlainObject(e)&&Mf.isPlainObject(t)?Mf.merge.call({caseless:i},e,t):Mf.isPlainObject(t)?Mf.merge({},t):Mf.isArray(t)?t.slice():t}function r(e,t,i){return Mf.isUndefined(t)?Mf.isUndefined(e)?void 0:n(void 0,e,i):n(e,t,i)}function o(e,t){if(!Mf.isUndefined(t))return n(void 0,t)}function s(e,t){return Mf.isUndefined(t)?Mf.isUndefined(e)?void 0:n(void 0,e):n(void 0,t)}function a(i,r,o){return o in t?n(i,r):o in e?n(void 0,i):void 0}const c={url:o,method:o,data:o,baseURL:s,transformRequest:s,transformResponse:s,paramsSerializer:s,timeout:s,timeoutMessage:s,withCredentials:s,withXSRFToken:s,adapter:s,responseType:s,xsrfCookieName:s,xsrfHeaderName:s,onUploadProgress:s,onDownloadProgress:s,decompress:s,maxContentLength:s,maxBodyLength:s,beforeRedirect:s,transport:s,httpAgent:s,httpsAgent:s,cancelToken:s,socketPath:s,responseEncoding:s,validateStatus:a,headers:(e,t)=>r(PI(e),PI(t),!0)};return Mf.forEach(Object.keys(Object.assign({},e,t)),(function(n){const o=c[n]||r,s=o(e[n],t[n],n);Mf.isUndefined(s)&&o!==a||(i[n]=s)})),i}var kI=e=>{const t=LI({},e);let i,{data:n,withXSRFToken:r,xsrfHeaderName:o,xsrfCookieName:s,headers:a,auth:c}=t;if(t.headers=a=gI.from(a),t.url=zf(NI(t.baseURL,t.url),e.params,e.paramsSerializer),c&&a.set(\"Authorization\",\"Basic \"+btoa((c.username||\"\")+\":\"+(c.password?unescape(encodeURIComponent(c.password)):\"\"))),Mf.isFormData(n))if(_C.hasStandardBrowserEnv||_C.hasStandardBrowserWebWorkerEnv)a.setContentType(void 0);else if(!1!==(i=a.getContentType())){const[e,...t]=i?i.split(\";\").map((e=>jp(e).call(e))).filter(Boolean):[];a.setContentType([e||\"multipart/form-data\",...t].join(\"; \"))}if(_C.hasStandardBrowserEnv&&(r&&Mf.isFunction(r)&&(r=r(t)),r||!1!==r&&wI(t.url))){const e=o&&s&&OI.read(s);e&&a.set(o,e)}return t};var MI=\"undefined\"!=typeof XMLHttpRequest&&function(e){return new Gh((function(t,i){const n=kI(e);let r=n.data;const o=gI.from(n.headers).normalize();let s,a,c,d,l,{responseType:u,onUploadProgress:h,onDownloadProgress:p}=n;function _(){d&&d(),l&&l(),n.cancelToken&&n.cancelToken.unsubscribe(s),n.signal&&n.signal.removeEventListener(\"abort\",s)}let E=new XMLHttpRequest;function f(){if(!E)return;const n=gI.from(\"getAllResponseHeaders\"in E&&E.getAllResponseHeaders());vI((function(e){t(e),_()}),(function(e){i(e),_()}),{data:u&&\"text\"!==u&&\"json\"!==u?E.response:E.responseText,status:E.status,statusText:E.statusText,headers:n,config:e,request:E}),E=null}E.open(n.method.toUpperCase(),n.url,!0),E.timeout=n.timeout,\"onloadend\"in E?E.onloadend=f:E.onreadystatechange=function(){E&&4===E.readyState&&(0!==E.status||E.responseURL&&0===E.responseURL.indexOf(\"file:\"))&&setTimeout(f)},E.onabort=function(){E&&(i(new Uf(\"Request aborted\",Uf.ECONNABORTED,e,E)),E=null)},E.onerror=function(){i(new Uf(\"Network Error\",Uf.ERR_NETWORK,e,E)),E=null},E.ontimeout=function(){let t=n.timeout?\"timeout of \"+n.timeout+\"ms exceeded\":\"timeout exceeded\";const r=n.transitional||Xf;n.timeoutErrorMessage&&(t=n.timeoutErrorMessage),i(new Uf(t,r.clarifyTimeoutError?Uf.ETIMEDOUT:Uf.ECONNABORTED,e,E)),E=null},void 0===r&&o.setContentType(null),\"setRequestHeader\"in E&&Mf.forEach(o.toJSON(),(function(e,t){E.setRequestHeader(t,e)})),Mf.isUndefined(n.withCredentials)||(E.withCredentials=!!n.withCredentials),u&&\"json\"!==u&&(E.responseType=n.responseType),p&&([c,l]=yI(p,!0),E.addEventListener(\"progress\",c)),h&&E.upload&&([a,d]=yI(h),E.upload.addEventListener(\"progress\",a),E.upload.addEventListener(\"loadend\",d)),(n.cancelToken||n.signal)&&(s=t=>{E&&(i(!t||t.type?new II(null,e,E):t),E.abort(),E=null)},n.cancelToken&&n.cancelToken.subscribe(s),n.signal&&(n.signal.aborted?s():n.signal.addEventListener(\"abort\",s)));const m=function(e){const t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(e);return t&&t[1]||\"\"}(n.url);m&&-1===_C.protocols.indexOf(m)?i(new Uf(\"Unsupported protocol \"+m+\":\",Uf.ERR_BAD_REQUEST,e)):E.send(r||null)}))};var UI=(e,t)=>{const{length:i}=e=e?e.filter(Boolean):[];if(t||i){let i,n=new AbortController;const r=function(e){if(!i){i=!0,s();const t=e instanceof Error?e:this.reason;n.abort(t instanceof Uf?t:new II(t instanceof Error?t.message:t))}};let o=t&&setTimeout((()=>{o=null,r(new Uf(\"timeout \".concat(t,\" of ms exceeded\"),Uf.ETIMEDOUT))}),t);const s=()=>{e&&(o&&clearTimeout(o),o=null,e.forEach((e=>{e.unsubscribe?e.unsubscribe(r):e.removeEventListener(\"abort\",r)})),e=null)};e.forEach((e=>e.addEventListener(\"abort\",r)));const{signal:a}=n;return a.unsubscribe=()=>Mf.asap(s),a}},xI=jh,VI=Sl;wi({target:\"Promise\",stat:!0,forced:!0},{withResolvers:function(){var e=VI.f(this);return{promise:e.promise,resolve:e.resolve,reject:e.reject}}});var FI=Sl,BI=el;wi({target:\"Promise\",stat:!0,forced:!0},{try:function(e){var t=FI.f(this),i=BI(e);return(i.error?t.reject:t.resolve)(i.value),t.promise}});var jI=i(xI),GI=Vm.f(\"asyncIterator\"),WI=i(GI);function HI(e,t){this.v=e,this.k=t}function KI(e){var t,i;function n(t,i){try{var o=e[t](i),s=o.value,a=s instanceof HI;jI.resolve(a?s.v:s).then((function(i){if(a){var c=\"return\"===t?\"return\":\"next\";if(!s.k||i.done)return n(c,i);i=e[c](i).value}r(o.done?\"return\":\"normal\",i)}),(function(e){n(\"throw\",e)}))}catch(e){r(\"throw\",e)}}function r(e,r){switch(e){case\"return\":t.resolve({value:r,done:!0});break;case\"throw\":t.reject(r);break;default:t.resolve({value:r,done:!1})}(t=t.next)?n(t.key,t.arg):i=null}this._invoke=function(e,r){return new jI((function(o,s){var a={key:e,arg:r,resolve:o,reject:s,next:null};i?i=i.next=a:(t=i=a,n(e,r))}))},\"function\"!=typeof e.return&&(this.return=void 0)}function YI(e){return function(){return new KI(e.apply(this,arguments))}}function qI(e){return new HI(e,0)}function zI(e){var t={},i=!1;function n(t,n){return i=!0,{done:!1,value:new HI(n=new jI((function(i){i(e[t](n))})),1)}}return t[void 0!==kg&&Mg||\"@@iterator\"]=function(){return this},t.next=function(e){return i?(i=!1,e):n(\"next\",e)},\"function\"==typeof e.throw&&(t.throw=function(e){if(i)throw i=!1,e;return n(\"throw\",e)}),\"function\"==typeof e.return&&(t.return=function(e){return i?(i=!1,e):n(\"return\",e)}),t}KI.prototype[\"function\"==typeof kg&&WI||\"@@asyncIterator\"]=function(){return this},KI.prototype.next=function(e){return this._invoke(\"next\",e)},KI.prototype.throw=function(e){return this._invoke(\"throw\",e)},KI.prototype.return=function(e){return this._invoke(\"return\",e)};var JI=i(GI);function XI(e){var t,i,n,r=2;for(\"undefined\"!=typeof Symbol&&(i=JI,n=Symbol.iterator);r--;){if(i&&null!=(t=e[i]))return t.call(e);if(n&&null!=(t=e[n]))return new QI(t.call(e));i=\"@@asyncIterator\",n=\"@@iterator\"}throw new TypeError(\"Object is not async iterable\")}function QI(e){function t(e){if(Object(e)!==e)return Gh.reject(new TypeError(e+\" is not an object.\"));var t=e.done;return Gh.resolve(e.value).then((function(e){return{value:e,done:t}}))}return QI=function(e){this.s=e,this.n=e.next},QI.prototype={s:null,n:null,next:function(){return t(this.n.apply(this.s,arguments))},return:function(e){var i=this.s.return;return void 0===i?Gh.resolve({value:e,done:!0}):t(i.apply(this.s,arguments))},throw:function(e){var i=this.s.return;return void 0===i?Gh.reject(e):t(i.apply(this.s,arguments))}},new QI(e)}const ZI=function*(e,t){let i=e.byteLength;if(!t||i<t)return void(yield e);let n,r=0;for(;r<i;)n=r+t,yield e.slice(r,n),r=n},$I=function(){var e=YI((function*(e,t){var i,n=!1,r=!1;try{for(var o,s=XI(ev(e));n=!(o=yield qI(s.next())).done;n=!1){const e=o.value;yield*zI(XI(ZI(e,t)))}}catch(e){r=!0,i=e}finally{try{n&&null!=s.return&&(yield qI(s.return()))}finally{if(r)throw i}}}));return function(t,i){return e.apply(this,arguments)}}(),ev=function(){var e=YI((function*(e){if(e[JI])return void(yield*zI(XI(e)));const t=e.getReader();try{for(;;){const{done:e,value:i}=yield qI(t.read());if(e)break;yield i}}finally{yield qI(t.cancel())}}));return function(t){return e.apply(this,arguments)}}(),tv=(e,t,i,n)=>{const r=$I(e,t);let o,s=0,a=e=>{o||(o=!0,n&&n(e))};return new ReadableStream({async pull(e){try{const{done:t,value:n}=await r.next();if(t)return a(),void e.close();let o=n.byteLength;if(i){let e=s+=o;i(e)}e.enqueue(new Uint8Array(n))}catch(e){throw a(e),e}},cancel:e=>(a(e),r.return())},{highWaterMark:2})};function iv(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function nv(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?iv(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):iv(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const rv=\"function\"==typeof fetch&&\"function\"==typeof Request&&\"function\"==typeof Response,ov=rv&&\"function\"==typeof ReadableStream,sv=rv&&(\"function\"==typeof TextEncoder?(av=new TextEncoder,e=>av.encode(e)):async e=>new Uint8Array(await new Response(e).arrayBuffer()));var av;const cv=function(e){try{for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];return!!e(...i)}catch(e){return!1}},dv=ov&&cv((()=>{let e=!1;const t=new Request(_C.origin,{body:new ReadableStream,method:\"POST\",get duplex(){return e=!0,\"half\"}}).headers.has(\"Content-Type\");return e&&!t})),lv=ov&&cv((()=>Mf.isReadableStream(new Response(\"\").body))),uv={stream:lv&&(e=>e.body)};var hv;rv&&(hv=new Response,[\"text\",\"arrayBuffer\",\"blob\",\"formData\",\"stream\"].forEach((e=>{!uv[e]&&(uv[e]=Mf.isFunction(hv[e])?t=>t[e]():(t,i)=>{throw new Uf(\"Response type '\".concat(e,\"' is not supported\"),Uf.ERR_NOT_SUPPORT,i)})})));const pv=async(e,t)=>{const i=Mf.toFiniteNumber(e.getContentLength());return null==i?(async e=>{if(null==e)return 0;if(Mf.isBlob(e))return e.size;if(Mf.isSpecCompliantForm(e)){const t=new Request(_C.origin,{method:\"POST\",body:e});return(await t.arrayBuffer()).byteLength}return Mf.isArrayBufferView(e)||Mf.isArrayBuffer(e)?e.byteLength:(Mf.isURLSearchParams(e)&&(e+=\"\"),Mf.isString(e)?(await sv(e)).byteLength:void 0)})(t):i};var _v=rv&&(async e=>{let{url:t,method:i,data:n,signal:r,cancelToken:o,timeout:s,onDownloadProgress:a,onUploadProgress:c,responseType:d,headers:l,withCredentials:u=\"same-origin\",fetchOptions:h}=kI(e);d=d?(d+\"\").toLowerCase():\"text\";let p,_=UI([r,o&&o.toAbortSignal()],s);const E=_&&_.unsubscribe&&(()=>{_.unsubscribe()});let f;try{if(c&&dv&&\"get\"!==i&&\"head\"!==i&&0!==(f=await pv(l,n))){let e,i=new Request(t,{method:\"POST\",body:n,duplex:\"half\"});if(Mf.isFormData(n)&&(e=i.headers.get(\"content-type\"))&&l.setContentType(e),i.body){const[e,t]=AI(f,yI(bI(c)));n=tv(i.body,65536,e,t)}}Mf.isString(u)||(u=u?\"include\":\"omit\");const r=\"credentials\"in Request.prototype;p=new Request(t,nv(nv({},h),{},{signal:_,method:i.toUpperCase(),headers:l.normalize().toJSON(),body:n,duplex:\"half\",credentials:r?u:void 0}));let o=await fetch(p);const s=lv&&(\"stream\"===d||\"response\"===d);if(lv&&(a||s&&E)){const e={};[\"status\",\"statusText\",\"headers\"].forEach((t=>{e[t]=o[t]}));const t=Mf.toFiniteNumber(o.headers.get(\"content-length\")),[i,n]=a&&AI(t,yI(bI(a),!0))||[];o=new Response(tv(o.body,65536,i,(()=>{n&&n(),E&&E()})),e)}d=d||\"text\";let m=await uv[Mf.findKey(uv,d)||\"text\"](o,e);return!s&&E&&E(),await new Gh(((t,i)=>{vI(t,i,{data:m,headers:gI.from(o.headers),status:o.status,statusText:o.statusText,config:e,request:p})}))}catch(t){if(E&&E(),t&&\"TypeError\"===t.name&&/fetch/i.test(t.message))throw Object.assign(new Uf(\"Network Error\",Uf.ERR_NETWORK,e,p),{cause:t.cause||t});throw Uf.from(t,t&&t.code,e,p)}});const Ev={http:null,xhr:MI,fetch:_v};Mf.forEach(Ev,((e,t)=>{if(e){try{Object.defineProperty(e,\"name\",{value:t})}catch(e){}Object.defineProperty(e,\"adapterName\",{value:t})}}));const fv=e=>\"- \".concat(e),mv=e=>Mf.isFunction(e)||null===e||!1===e;var Tv={getAdapter:e=>{e=Mf.isArray(e)?e:[e];const{length:t}=e;let i,n;const r={};for(let o=0;o<t;o++){let t;if(i=e[o],n=i,!mv(i)&&(n=Ev[(t=String(i)).toLowerCase()],void 0===n))throw new Uf(\"Unknown adapter '\".concat(t,\"'\"));if(n)break;r[t||\"#\"+o]=n}if(!n){const e=Object.entries(r).map((e=>{let[t,i]=e;return\"adapter \".concat(t,\" \")+(!1===i?\"is not supported by the environment\":\"is not available in the build\")}));throw new Uf(\"There is no suitable adapter to dispatch the request \"+(t?e.length>1?\"since :\\n\"+e.map(fv).join(\"\\n\"):\" \"+fv(e[0]):\"as no adapter specified\"),\"ERR_NOT_SUPPORT\")}return n},adapters:Ev};function Sv(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new II(null,e)}function gv(e){Sv(e),e.headers=gI.from(e.headers),e.data=RI.call(e,e.transformRequest),-1!==[\"post\",\"put\",\"patch\"].indexOf(e.method)&&e.headers.setContentType(\"application/x-www-form-urlencoded\",!1);return Tv.getAdapter(e.adapter||pI.adapter)(e).then((function(t){return Sv(e),t.data=RI.call(e,e.transformResponse,t),t.headers=gI.from(t.headers),t}),(function(t){return CI(t)||(Sv(e),t&&t.response&&(t.response.data=RI.call(e,e.transformResponse,t.response),t.response.headers=gI.from(t.response.headers))),Gh.reject(t)}))}const Rv=\"1.7.7\",Cv={};[\"object\",\"boolean\",\"number\",\"function\",\"string\",\"symbol\"].forEach(((e,t)=>{Cv[e]=function(i){return typeof i===e||\"a\"+(t<1?\"n \":\" \")+e}}));const Iv={};Cv.transitional=function(e,t,i){function n(e,t){return\"[Axios v\"+Rv+\"] Transitional option '\"+e+\"'\"+t+(i?\". \"+i:\"\")}return(i,r,o)=>{if(!1===e)throw new Uf(n(r,\" has been removed\"+(t?\" in \"+t:\"\")),Uf.ERR_DEPRECATED);return t&&!Iv[r]&&(Iv[r]=!0,console.warn(n(r,\" has been deprecated since v\"+t+\" and will be removed in the near future\"))),!e||e(i,r,o)}};var vv={assertOptions:function(e,t,i){if(\"object\"!=typeof e)throw new Uf(\"options must be an object\",Uf.ERR_BAD_OPTION_VALUE);const n=Object.keys(e);let r=n.length;for(;r-- >0;){const o=n[r],s=t[o];if(s){const t=e[o],i=void 0===t||s(t,o,e);if(!0!==i)throw new Uf(\"option \"+o+\" must be \"+i,Uf.ERR_BAD_OPTION_VALUE)}else if(!0!==i)throw new Uf(\"Unknown option \"+o,Uf.ERR_BAD_OPTION)}},validators:Cv};const yv=vv.validators;let Av=class{constructor(e){this.defaults=e,this.interceptors={request:new Jf,response:new Jf}}async request(e,t){try{return await this._request(e,t)}catch(e){if(e instanceof Error){let t;Error.captureStackTrace?Error.captureStackTrace(t={}):t=new Error;const i=t.stack?t.stack.replace(/^.+\\n/,\"\"):\"\";try{e.stack?i&&!String(e.stack).endsWith(i.replace(/^.+\\n.+\\n/,\"\"))&&(e.stack+=\"\\n\"+i):e.stack=i}catch(e){}}throw e}}_request(e,t){\"string\"==typeof e?(t=t||{}).url=e:t=e||{},t=LI(this.defaults,t);const{transitional:i,paramsSerializer:n,headers:r}=t;void 0!==i&&vv.assertOptions(i,{silentJSONParsing:yv.transitional(yv.boolean),forcedJSONParsing:yv.transitional(yv.boolean),clarifyTimeoutError:yv.transitional(yv.boolean)},!1),null!=n&&(Mf.isFunction(n)?t.paramsSerializer={serialize:n}:vv.assertOptions(n,{encode:yv.function,serialize:yv.function},!0)),t.method=(t.method||this.defaults.method||\"get\").toLowerCase();let o=r&&Mf.merge(r.common,r[t.method]);r&&Mf.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],(e=>{delete r[e]})),t.headers=gI.concat(o,r);const s=[];let a=!0;this.interceptors.request.forEach((function(e){\"function\"==typeof e.runWhen&&!1===e.runWhen(t)||(a=a&&e.synchronous,s.unshift(e.fulfilled,e.rejected))}));const c=[];let d;this.interceptors.response.forEach((function(e){c.push(e.fulfilled,e.rejected)}));let l,u=0;if(!a){const e=[gv.bind(this),void 0];for(e.unshift.apply(e,s),e.push.apply(e,c),l=e.length,d=Gh.resolve(t);u<l;)d=d.then(e[u++],e[u++]);return d}l=s.length;let h=t;for(u=0;u<l;){const e=s[u++],t=s[u++];try{h=e(h)}catch(e){t.call(this,e);break}}try{d=gv.call(this,h)}catch(e){return Gh.reject(e)}for(u=0,l=c.length;u<l;)d=d.then(c[u++],c[u++]);return d}getUri(e){return zf(NI((e=LI(this.defaults,e)).baseURL,e.url),e.params,e.paramsSerializer)}};Mf.forEach([\"delete\",\"get\",\"head\",\"options\"],(function(e){Av.prototype[e]=function(t,i){return this.request(LI(i||{},{method:e,url:t,data:(i||{}).data}))}})),Mf.forEach([\"post\",\"put\",\"patch\"],(function(e){function t(t){return function(i,n,r){return this.request(LI(r||{},{method:e,headers:t?{\"Content-Type\":\"multipart/form-data\"}:{},url:i,data:n}))}}Av.prototype[e]=t(),Av.prototype[e+\"Form\"]=t(!0)}));var bv=Av;class wv{constructor(e){if(\"function\"!=typeof e)throw new TypeError(\"executor must be a function.\");let t;this.promise=new Gh((function(e){t=e}));const i=this;this.promise.then((e=>{if(!i._listeners)return;let t=i._listeners.length;for(;t-- >0;)i._listeners[t](e);i._listeners=null})),this.promise.then=e=>{let t;const n=new Gh((e=>{i.subscribe(e),t=e})).then(e);return n.cancel=function(){i.unsubscribe(t)},n},e((function(e,n,r){i.reason||(i.reason=new II(e,n,r),t(i.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}toAbortSignal(){const e=new AbortController,t=t=>{e.abort(t)};return this.subscribe(t),e.signal.unsubscribe=()=>this.unsubscribe(t),e.signal}static source(){let e;return{token:new wv((function(t){e=t})),cancel:e}}}var Ov=wv;const Nv={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Nv).forEach((e=>{let[t,i]=e;Nv[i]=t}));var Dv=Nv;const Pv=function e(t){const i=new bv(t),n=HE(bv.prototype.request,i);return Mf.extend(n,bv.prototype,i,{allOwnKeys:!0}),Mf.extend(n,i,null,{allOwnKeys:!0}),n.create=function(i){return e(LI(t,i))},n}(pI);Pv.Axios=bv,Pv.CanceledError=II,Pv.CancelToken=Ov,Pv.isCancel=CI,Pv.VERSION=Rv,Pv.toFormData=Wf,Pv.AxiosError=Uf,Pv.Cancel=Pv.CanceledError,Pv.all=function(e){return Gh.all(e)},Pv.spread=function(e){return function(t){return e.apply(null,t)}},Pv.isAxiosError=function(e){return Mf.isObject(e)&&!0===e.isAxiosError},Pv.mergeConfig=LI,Pv.AxiosHeaders=gI,Pv.formToJSON=e=>uI(Mf.isHTMLForm(e)?new FormData(e):e),Pv.getAdapter=Tv.getAdapter,Pv.HttpStatusCode=Dv,Pv.default=Pv;var Lv=Pv;const kv=()=>{};function Mv(){const e={promise:void 0,isResolved:!1,isRejected:!1,isFinished:!1,resolve:void 0,reject:void 0,cancel:kv};return e.promise=new Gh(((t,i)=>{e.resolve=i=>{e.isFinished||(e.isResolved=!0,e.isFinished=!0,t(i),e.value=i)},e.reject=t=>{e.isFinished||(e.isRejected=!0,e.isFinished=!0,i(t))}})),e}const Uv=new Map,xv=new Map,Vv=new Map;let Fv=function(e){return e.WIN_10=\"Windows 10\",e.WIN_81=\"Windows 8.1\",e.WIN_8=\"Windows 8\",e.WIN_7=\"Windows 7\",e.WIN_VISTA=\"Windows Vista\",e.WIN_SERVER_2003=\"Windows Server 2003\",e.WIN_XP=\"Windows XP\",e.WIN_2000=\"Windows 2000\",e.ANDROID=\"Android\",e.HARMONY_OS=\"HarmonyOS\",e.OPEN_BSD=\"Open BSD\",e.SUN_OS=\"Sun OS\",e.LINUX=\"Linux\",e.IOS=\"iOS\",e.MAC_OS=\"Mac OS\",e.CHROMIUM_OS=\"Chromium OS\",e.QNX=\"QNX\",e.UNIX=\"UNIX\",e.BEOS=\"BeOS\",e.OS_2=\"OS/2\",e.SEARCH_BOT=\"Search Bot\",e}({}),Bv=function(e){return e.CHROME=\"Chrome\",e.SAFARI=\"Safari\",e.EDGE=\"Edge\",e.FIREFOX=\"Firefox\",e.OPERA=\"OPR\",e.QQ=\"QQBrowser\",e.WECHAT=\"MicroMessenger\",e}({});const jv=new dE;let Gv=jv.getResult(),Wv=null;function Hv(e){if(!Wv){e&&jv.setUA(e),Gv=jv.getResult();const t=function(e){if(\"Blink\"===e.engine.name&&\"WeChat\"!==e.browser.name)return Bv.CHROME;switch(e.browser.name){case\"Chrome Headless\":case\"Chrome\":case\"Chromium\":return Bv.CHROME;case\"Safari\":case\"Mobile Safari\":return Bv.SAFARI;case\"Edge\":return Bv.EDGE;case\"Firefox\":return Bv.FIREFOX;case\"QQ\":case\"QQBrowser\":return Bv.QQ;case\"Opera\":return Bv.OPERA;case\"WeChat\":return Bv.WECHAT;default:return e.browser.name||\"\"}}(Gv),i=Kv(Gv),n=function(e){return\"Windows\"===e.os.name?e.os.version?e.os.name+\" \"+e.os.version:e.os.name:e.os.name||\"\"}(Gv),r=Gv.os.version,o=Kv(Gv,!1),s=Gv.device.type;if(!(t&&i&&n&&r))return{name:t,version:i,os:n,osVersion:r,browserVersion:o,deviceType:s};Wv={name:t,version:i,os:n,osVersion:r,browserVersion:o,deviceType:s}}return Wv}function Kv(e){let t,i=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return t=\"Blink\"===e.engine.name?e.engine.version||\"\":e.browser.version||\"\",i?t.split(\".\")[0]:t}function Yv(){return Hv().os}function qv(){const e=Hv();return\"\".concat(e.os,\" \").concat(e.osVersion)}function zv(){const e=Hv();return!!(\"WebKit\"===Gv.engine.name&&e.os===Fv.MAC_OS&&navigator.maxTouchPoints&&navigator.maxTouchPoints>0&&e.name!==Bv.SAFARI||$v()&&e.name!==Bv.SAFARI)}function Jv(){return Hv().name===Bv.CHROME}function Xv(){return Hv().name===Bv.SAFARI}function Qv(){return Hv().name===Bv.EDGE}function Zv(){return Hv().name===Bv.FIREFOX}function $v(){return Hv().os===Fv.IOS}function ey(e){const t=Hv();return!(t.name!==Bv.CHROME||!t.osVersion)&&Number(t.version)>=e}function ty(e){const t=Hv();return!(t.name!==Bv.CHROME||!t.osVersion)&&Number(t.version)<e}function iy(e){const t=Hv();return!(t.name!==Bv.EDGE||!t.osVersion)&&Number(t.version)>=e}function ny(e){const t=Hv();return!(t.name!==Bv.SAFARI||!t.osVersion)&&Number(t.version)>=e}function ry(e,t,i){const n=Hv();if(n.os!==Fv.IOS||!n.osVersion)return!1;const r=n.osVersion.split(\".\");return i?t&&Number(r[0])===e&&Number(r[1])<t||Number(r[0])<e:t?Number(r[0])===e&&Number(r[1])<=t||Number(r[0])<e:Number(r[0])<=e}function oy(e,t,i){const n=Hv();if(n.name!==Bv.SAFARI||!n.osVersion||!n.browserVersion)return!1;const r=n.browserVersion.split(\".\");return i?t&&Number(r[0])===e&&Number(r[1])<t||Number(r[0])<e:t?Number(r[0])===e&&Number(r[1])<=t||Number(r[0])<e:Number(r[0])<=e}function sy(e){const t=Hv();return!(t.name!==Bv.OPERA||!t.osVersion)&&Number(t.version)>=e}function ay(){const e=Hv();if(e.os!==Fv.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return Number(t[0])<14||14===Number(t[0])&&Number(t[1])<=6}function cy(){const e=Hv();if(e.os!==Fv.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 15===Number(t[0])}function dy(){const e=Hv();if(e.os!==Fv.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 16===Number(t[0])}function ly(){const e=Hv();if(e.os!==Fv.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 15===Number(t[0])&&Number(t[1])>=1}function uy(){return Xv()&&navigator.maxTouchPoints>0}function hy(){return Hv().name===Bv.WECHAT}function py(){return window.navigator.appVersion&&null!==window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)&&window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)[1]<=35}function _y(){const e=Yv();return function(){const{deviceType:e}=Hv();return\"mobile\"===e||\"tablet\"===e}()||e===Fv.ANDROID||e===Fv.IOS||e===Fv.HARMONY_OS}function Ey(){const e=Hv();return e.name!==Bv.EDGE&&e.name!==Bv.SAFARI&&!!navigator.userAgent.toLocaleLowerCase().match(/chrome\\/[\\d]./i)}function fy(){return Yv()===Fv.ANDROID}function my(){const e=Hv();return fy()&&(e.name===Bv.CHROME||e.name===Bv.WECHAT||/chrome|chromium/i.test(navigator.userAgent))}function Ty(e,t,i){return(t=function(e){var t=function(e,t){if(\"object\"!=typeof e||!e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,\"string\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e);return\"symbol\"==typeof t?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function Sy(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function gy(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Sy(Object(i),!0).forEach((function(t){Ty(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Sy(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let Ry=function(e){return e.UNEXPECTED_ERROR=\"UNEXPECTED_ERROR\",e.UNEXPECTED_RESPONSE=\"UNEXPECTED_RESPONSE\",e.TIMEOUT=\"TIMEOUT\",e.INVALID_PARAMS=\"INVALID_PARAMS\",e.NOT_READABLE=\"NOT_READABLE\",e.NOT_SUPPORTED=\"NOT_SUPPORTED\",e.INVALID_OPERATION=\"INVALID_OPERATION\",e.OPERATION_ABORTED=\"OPERATION_ABORTED\",e.WEB_SECURITY_RESTRICT=\"WEB_SECURITY_RESTRICT\",e.EXCHANGE_SDP_FAILED=\"EXCHANGE_SDP_FAILED\",e.ADD_CANDIDATE_FAILED=\"ADD_CANDIDATE_FAILED\",e.DATACHANNEL_FAILED=\"DATACHANNEL_FAILED\",e.NETWORK_ERROR=\"NETWORK_ERROR\",e.NETWORK_TIMEOUT=\"NETWORK_TIMEOUT\",e.NETWORK_RESPONSE_ERROR=\"NETWORK_RESPONSE_ERROR\",e.API_INVOKE_TIMEOUT=\"API_INVOKE_TIMEOUT\",e.ENUMERATE_DEVICES_FAILED=\"ENUMERATE_DEVICES_FAILED\",e.DEVICE_NOT_FOUND=\"DEVICE_NOT_FOUND\",e.ELECTRON_IS_NULL=\"ELECTRON_IS_NULL\",e.ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR=\"ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR\",e.CHROME_PLUGIN_NO_RESPONSE=\"CHROME_PLUGIN_NO_RESPONSE\",e.CHROME_PLUGIN_NOT_INSTALL=\"CHROME_PLUGIN_NOT_INSTALL\",e.MEDIA_OPTION_INVALID=\"MEDIA_OPTION_INVALID\",e.PERMISSION_DENIED=\"PERMISSION_DENIED\",e.CONSTRAINT_NOT_SATISFIED=\"CONSTRAINT_NOT_SATISFIED\",e.TRACK_IS_DISABLED=\"TRACK_IS_DISABLED\",e.GET_VIDEO_ELEMENT_VISIBLE_ERROR=\"GET_VIDEO_ELEMENT_VISIBLE_ERROR\",e.SHARE_AUDIO_NOT_ALLOWED=\"SHARE_AUDIO_NOT_ALLOWED\",e.LOW_STREAM_ENCODING_ERROR=\"LOW_STREAM_ENCODING_ERROR\",e.SET_ENCODING_PARAMETER_ERROR=\"SET_ENCODING_PARAMETER_ERROR\",e.TRACK_STATE_UNREACHABLE=\"TRACK_STATE_UNREACHABLE\",e.INVALID_UINT_UID_FROM_STRING_UID=\"INVALID_UINT_UID_FROM_STRING_UID\",e.CAN_NOT_GET_PROXY_SERVER=\"CAN_NOT_GET_PROXY_SERVER\",e.CAN_NOT_GET_GATEWAY_SERVER=\"CAN_NOT_GET_GATEWAY_SERVER\",e.VOID_GATEWAY_ADDRESS=\"VOID_GATEWAY_ADDRESS\",e.UID_CONFLICT=\"UID_CONFLICT\",e.MULTI_UNILBS_RESPONSE_ERROR=\"MULTI_UNILBS_RESPONSE_ERROR\",e.UPDATE_TICKET_FAILED=\"UPDATE_TICKET_FAILED\",e.INVALID_LOCAL_TRACK=\"INVALID_LOCAL_TRACK\",e.INVALID_TRACK=\"INVALID_TRACK\",e.SENDER_NOT_FOUND=\"SENDER_NOT_FOUND\",e.CREATE_OFFER_FAILED=\"CREATE_OFFER_FAILED\",e.SET_ANSWER_FAILED=\"SET_ANSWER_FAILED\",e.ICE_FAILED=\"ICE_FAILED\",e.PC_CLOSED=\"PC_CLOSED\",e.SENDER_REPLACE_FAILED=\"SENDER_REPLACE_FAILED\",e.GET_LOCAL_CAPABILITIES_FAILED=\"GET_LOCAL_CAPABILITIES_FAILED\",e.GET_LOCAL_CONNECTION_PARAMS_FAILED=\"GET_LOCAL_CONNECTION_PARAMS_FAILED\",e.SUBSCRIBE_FAILED=\"SUBSCRIBE_FAILED\",e.UNSUBSCRIBE_FAILED=\"UNSUBSCRIBE_FAILED\",e.GATEWAY_P2P_LOST=\"GATEWAY_P2P_LOST\",e.NO_ICE_CANDIDATE=\"NO_ICE_CANDIDATE\",e.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS=\"CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS\",e.EXIST_DISABLED_VIDEO_TRACK=\"EXIST_DISABLED_VIDEO_TRACK\",e.INVALID_REMOTE_USER=\"INVALID_REMOTE_USER\",e.REMOTE_USER_IS_NOT_PUBLISHED=\"REMOTE_USER_IS_NOT_PUBLISHED\",e.CUSTOM_REPORT_SEND_FAILED=\"CUSTOM_REPORT_SEND_FAILED\",e.CUSTOM_REPORT_FREQUENCY_TOO_HIGH=\"CUSTOM_REPORT_FREQUENCY_TOO_HIGH\",e.FETCH_AUDIO_FILE_FAILED=\"FETCH_AUDIO_FILE_FAILED\",e.READ_LOCAL_AUDIO_FILE_ERROR=\"READ_LOCAL_AUDIO_FILE_ERROR\",e.DECODE_AUDIO_FILE_FAILED=\"DECODE_AUDIO_FILE_FAILED\",e.WS_ABORT=\"WS_ABORT\",e.WS_DISCONNECT=\"WS_DISCONNECT\",e.WS_ERR=\"WS_ERR\",e.EXTERNAL_SIGNAL_ABORT=\"EXTERNAL_SIGNAL_ABORT\",e.LIVE_STREAMING_TASK_CONFLICT=\"LIVE_STREAMING_TASK_CONFLICT\",e.LIVE_STREAMING_INVALID_ARGUMENT=\"LIVE_STREAMING_INVALID_ARGUMENT\",e.LIVE_STREAMING_INTERNAL_SERVER_ERROR=\"LIVE_STREAMING_INTERNAL_SERVER_ERROR\",e.LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED=\"LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED\",e.LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED=\"LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED\",e.LIVE_STREAMING_CDN_ERROR=\"LIVE_STREAMING_CDN_ERROR\",e.LIVE_STREAMING_INVALID_RAW_STREAM=\"LIVE_STREAMING_INVALID_RAW_STREAM\",e.LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT=\"LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT\",e.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE=\"LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE\",e.LIVE_STREAMING_WARN_FREQUENT_REQUEST=\"LIVE_STREAMING_WARN_FREQUENT_REQUEST\",e.WEBGL_INTERNAL_ERROR=\"WEBGL_INTERNAL_ERROR\",e.BEAUTY_PROCESSOR_INTERNAL_ERROR=\"BEAUTY_PROCESSOR_INTERNAL_ERROR\",e.CROSS_CHANNEL_WAIT_STATUS_ERROR=\"CROSS_CHANNEL_WAIT_STATUS_ERROR\",e.CROSS_CHANNEL_FAILED_JOIN_SRC=\"CROSS_CHANNEL_FAILED_JOIN_SEC\",e.CROSS_CHANNEL_FAILED_JOIN_DEST=\"CROSS_CHANNEL_FAILED_JOIN_DEST\",e.CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST=\"CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST\",e.CROSS_CHANNEL_SERVER_ERROR_RESPONSE=\"CROSS_CHANNEL_SERVER_ERROR_RESPONSE\",e.METADATA_OUT_OF_RANGE=\"METADATA_OUT_OF_RANGE\",e.LOCAL_AEC_ERROR=\"LOCAL_AEC_ERROR\",e.INVALID_PLUGIN=\"INVALID_PLUGIN\",e.DISCONNECT_P2P=\"DISCONNECT_P2P\",e.CONVERTING_IMAGEDATA_TO_BLOB_FAILED=\"CONVERTING_IMAGEDATA_TO_BLOB_FAILED\",e.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED=\"CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED\",e.INIT_DATACHANNEL_TIMEOUT=\"INIT_DATACHANNEL_TIMEOUT\",e.CREATE_DATACHANNEL_ERROR=\"CREATE_DATACHANNEL_ERROR\",e.DATACHANNEL_CONNECTION_TIMEOUT=\"DATACHANNEL_CONNECTION_TIMEOUT\",e.PROHIBITED_OPERATION=\"PROHIBITED_OPERATION\",e.IMAGE_MODERATION_UPLOAD_FAILED=\"IMAGE_MODERATION_UPLOAD_FAILED\",e.P2P_MESSAGE_FAILED=\"P2P_MESSAGE_FAILED\",e}({}),Cy=class extends Error{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",i=arguments.length>2?arguments[2]:void 0;super(t),Ty(this,\"code\",void 0),Ty(this,\"message\",void 0),Ty(this,\"data\",void 0),Ty(this,\"name\",\"AgoraRTCException\"),this.code=e,this.message=\"AgoraRTCError \".concat(this.code,\": \").concat(t),this.data=i}toString(){return this.data?\"data: \".concat(JSON.stringify(this.data),\"\\n\").concat(this.stack):\"\".concat(this.stack)}print(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"error\",t=arguments.length>1?arguments[1]:void 0;return\"error\"===e&&(t||console).error(this.toString()),\"warning\"===e&&(t||console).warn(this.toString()),this}throw(e){throw this.print(\"error\",e),this}};function Iy(e,t){if(\"boolean\"!=typeof e)throw new Cy(Ry.INVALID_PARAMS,\"Invalid \".concat(t,\": The value is of the boolean type.\"))}function vy(e,t,i){if(!Dn(i).call(i,e))throw new Cy(Ry.INVALID_PARAMS,\"\".concat(t,\" can only be set as \").concat(JSON.stringify(i)))}function yy(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e4;if(e<i||e>n||(!(arguments.length>4&&void 0!==arguments[4])||arguments[4])&&!function(e){return\"number\"==typeof e&&e%1==0}(e))throw new Cy(Ry.INVALID_PARAMS,\"invalid \".concat(t,\": the value range is [\").concat(i,\", \").concat(n,\"]. integer only\"))}function Ay(e,t){if(\"number\"!=typeof e){if(!(e.min||e.max||e.ideal||e.exact))throw new Cy(Ry.INVALID_PARAMS,\"\".concat(t,\" is not a valid ConstrainLong\"));void 0!==e.min&&yy(e.min,\"\".concat(t,\".min\"),0,1/0),void 0!==e.max&&yy(e.max,\"\".concat(t,\".max\"),1,1/0),void 0!==e.exact&&yy(e.exact,\"\".concat(t,\".exact\"),1,1/0),void 0!==e.ideal&&yy(e.ideal,\"\".concat(t,\".ideal\"),1,1/0)}else yy(e,t,1,1/0)}function by(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:255,r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];if(null==e)throw new Cy(Ry.INVALID_PARAMS,\"\".concat(t||\"param\",\" cannot be empty\"));if(!Ny(e,i,n,r))throw new Cy(Ry.INVALID_PARAMS,\"Invalid \".concat(t||\"string param\",\": Length of the string: [\").concat(i,\",\").concat(n,\"].\").concat(r?\" ASCII characters only.\":\"\"))}function wy(e,t){if(!Array.isArray(e))throw new Cy(Ry.INVALID_PARAMS,\"\".concat(t,\" should be an array\"))}function Oy(e){return null==e}function Ny(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:255,n=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return\"string\"==typeof e&&e.length<=i&&e.length>=t&&(!n||function(e){if(\"string\"!=typeof e)return!1;for(let t=0;t<e.length;t+=1){const i=e.charCodeAt(t);if(i<0||i>255)return!1}return!0}(e))}var Dy=function(e){return e.COVERED=\"COVERED\",e.POSITION=\"POSITION\",e.SIZE=\"SIZE\",e.STYLE=\"STYLE\",e}(Dy||{}),Py=function(e){return e.UNMOUNTED=\"UNMOUNTED\",e.INVALID_HTML_ELEMENT=\"INVALID_HTML_ELEMENT\",e}(Py||{});const Ly=new class{constructor(){Ty(this,\"_clientSize\",null),Ty(this,\"getClientWidth\",(()=>document.documentElement?document.documentElement.clientWidth:document.body.clientWidth)),Ty(this,\"getClientHeight\",(()=>document.documentElement?document.documentElement.clientHeight:document.body.clientHeight)),Ty(this,\"getStyle\",(e=>window.getComputedStyle(e,null))),Ty(this,\"checkCssVisibleProperty\",(e=>{var t;let i=!0;const n=this.getStyle(e),{display:r,visibility:o,opacity:s,filter:a}=n;return(\"none\"===r||Dn(t=[\"hidden\",\"collapse\"]).call(t,o)||Number(s)<.1)&&(i=!1),!!i&&(a&&a.split(\" \").filter((e=>{var t;const i=e.split(\"(\")[0];return Dn(t=[\"brightness\",\"blur\",\"opacity\"]).call(t,i)})).map((e=>{const[t,i]=e.split(/\\(|\\)/);return[t,Number(i.match(/^[0-9\\.]+/))]})).forEach((e=>{const[t,n]=e;switch(t){case\"brightness\":(n<.1||n>3)&&(i=!1);break;case\"blur\":n>3&&(i=!1);break;case\"opacity\":n<.1&&(i=!1)}})),i)})),Ty(this,\"checkPropertyUpToAllParentNodes\",((e,t)=>{let i=!0,n=!0;const r=e=>t(e);let o=e;for(;o&&n;)r(o)||(i=!1,n=!1),o=o.parentElement,o||(n=!1);return i})),Ty(this,\"checkActualCssVisibleIncludeInherit\",(e=>this.checkPropertyUpToAllParentNodes(e,this.checkCssVisibleProperty))),Ty(this,\"getSizeAboutClient\",(e=>{const{width:t,height:i,left:n,right:r,top:o,bottom:s}=e.getBoundingClientRect(),a=this.getClientWidth(),c=this.getClientHeight();return{width:t,height:i,left:n,right:r,top:o,bottom:s,clientWidth:a,clientHeight:c,clientMin:Math.min(a,c)}})),Ty(this,\"checkActualSize\",(()=>{const{width:e,height:t,clientMin:i}=this._clientSize;return this.checkSizeIsVisible(e,t,i)})),Ty(this,\"elementFromPoint\",((e,t)=>document.elementFromPoint?document.elementFromPoint(e,t):null)),Ty(this,\"checkCoverForAPoint\",((e,t,i)=>{const n=this.elementFromPoint(e,t);return null!==n&&n!==i})),Ty(this,\"getPointPositionList\",(()=>{const{width:e,height:t,left:i,top:n}=this._clientSize,r=e/6,o=t/6,s=[],a=10**6;for(let e=0;e<5;e++)for(let t=0;t<5;t++){const c=(i*a+(0===e?.1:4===e?(r*e*a-1e5)/a:r*e)*a)/a,d=(n*a+(0===t?.1:4===t?(o*t*a-1e5)/a:o*t)*a)/a;s.push({x:c,y:d})}return[...s]})),Ty(this,\"checkElementCover\",(e=>this.getPointPositionList().map((t=>this.checkCoverForAPoint(t.x,t.y,e))).filter((e=>!!e)).length>6)),Ty(this,\"checkSizeIsVisible\",((e,t,i)=>(e>50||i/e<=10)&&(t>50||i/t<=10))),Ty(this,\"checkSizeOfPartInClient\",(()=>{const{left:e,right:t,top:i,bottom:n,clientHeight:r,clientWidth:o,clientMin:s}=this._clientSize;let a,c,d,l;if(e<0)a=0;else{if(!(e<o))return!1;a=e}if(t<0)return!1;if(c=t<o?t:o,i<0)d=0;else{if(!(i<r))return!1;d=i}if(n<0)return!1;l=n<r?n:r;const u=c-a,h=l-d;return this.checkSizeIsVisible(u,h,s)})),Ty(this,\"returnHiddenResult\",(e=>(this._clientSize=null,{visible:!1,reason:e}))),Ty(this,\"checkOneElementVisible\",(e=>{if(e instanceof HTMLElement){if(this.checkElementIsMountedOnDom(e)){if(this.checkActualCssVisibleIncludeInherit(e)){if(this._clientSize=this.getSizeAboutClient(e),this.checkElementCover(e))return this.returnHiddenResult(Dy.COVERED);{const e=this.checkActualSize(),t=this.checkSizeOfPartInClient();return e&&!t?this.returnHiddenResult(Dy.POSITION):e?(this._clientSize=null,{visible:!0}):this.returnHiddenResult(Dy.SIZE)}}return this.returnHiddenResult(Dy.STYLE)}return this.returnHiddenResult(Py.UNMOUNTED)}return this.returnHiddenResult(Py.INVALID_HTML_ELEMENT)})),Ty(this,\"checkElementIsMountedOnDom\",(e=>this.checkPropertyUpToAllParentNodes(e,(e=>\"HTML\"!==e.nodeName.toUpperCase()?null!==e.parentElement:!!document.documentElement))))}};function ky(e){return(new TextEncoder).encode(e)}const My=function(e,t){const i=new Uint8Array(e.byteLength+t.byteLength);return i.set(new Uint8Array(e),0),i.set(new Uint8Array(t),e.byteLength),i};const Uy=async e=>function(e,t){let i=\"\";return new Uint8Array(e).forEach((e=>{i+=e.toString(t).padStart(2,\"0\")})),i}(await crypto.subtle.digest(\"SHA-256\",ky(e)),16);class xy{constructor(){Ty(this,\"_events\",{}),Ty(this,\"addListener\",this.on)}getListeners(e){return this._events[e]?this._events[e].map((e=>e.listener)):[]}on(e,t){this._events[e]||(this._events[e]=[]);const i=this._events[e];-1===this._indexOfListener(i,t)&&i.push({listener:t,once:!1})}once(e,t){this._events[e]||(this._events[e]=[]);const i=this._events[e];-1===this._indexOfListener(i,t)&&i.push({listener:t,once:!0})}off(e,t){if(!this._events[e])return;const i=this._events[e],n=this._indexOfListener(i,t);-1!==n&&i.splice(n,1),0===this._events[e].length&&delete this._events[e]}removeAllListeners(e){e?delete this._events[e]:this._events={}}emit(e){this._events[e]||(this._events[e]=[]);const t=this._events[e].map((e=>e));for(var i=arguments.length,n=new Array(i>1?i-1:0),r=1;r<i;r++)n[r-1]=arguments[r];for(let i=0;i<t.length;i+=1){const r=t[i];r.once&&this.off(e,r.listener),r.listener.apply(this,n||[])}}safeEmit(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];[...this._events[e]||[]].forEach((t=>{t.once&&this.off(e,t.listener);try{t.listener.apply(this,i)}catch(t){console.error(\"safeEmit event:\".concat(e,\" error \").concat(null==t?void 0:t.toString()))}}))}_indexOfListener(e,t){let i=e.length;for(;i--;)if(e[i].listener===t)return i;return-1}}let Vy=null;function Fy(){if(Vy)return Vy;if(window.electron)return Vy=window.electron;if(!window.require)return null;try{return Vy=window.require(\"electron\"),Vy}catch(e){return null}}let By=function(e){return e.CREATE_CLIENT=\"createClient\",e.CHECK_SYSTEM_REQUIREMENTS=\"checkSystemRequirements\",e.SET_AREA=\"setArea\",e.PRELOAD=\"PRELOAD\",e.CHECK_VIDEO_TRACK_IS_ACTIVE=\"checkVideoTrackIsActive\",e.CHECK_AUDIO_TRACK_IS_ACTIVE=\"checkAudioTrackIsActive\",e.CREATE_MIC_AUDIO_TRACK=\"createMicrophoneAudioTrack\",e.CREATE_CUSTOM_AUDIO_TRACK=\"createCustomAudioTrack\",e.CREATE_BUFFER_AUDIO_TRACK=\"createBufferSourceAudioTrack\",e.CREATE_CAM_VIDEO_TRACK=\"createCameraVideoTrack\",e.CREATE_CUSTOM_VIDEO_TRACK=\"createCustomVideoTrack\",e.CREATE_MIC_AND_CAM_TRACKS=\"createMicrophoneAndCameraTracks\",e.CREATE_SCREEN_VIDEO_TRACK=\"createScreenVideoTrack\",e.SET_ENCRYPTION_CONFIG=\"Client.setEncryptionConfig\",e.START_PROXY_SERVER=\"Client.startProxyServer\",e.STOP_PROXY_SERVER=\"Client.stopProxyServer\",e.SET_PROXY_SERVER=\"Client.setProxyServer\",e.SET_TURN_SERVER=\"Client.setTurnServer\",e.SET_CLIENT_ROLE=\"Client.setClientRole\",e.SET_LOW_STREAM_PARAMETER=\"Client.setLowStreamParameter\",e.ENABLE_DUAL_STREAM=\"Client.enableDualStream\",e.DISABLE_DUAL_STREAM=\"Client.disableDualStream\",e.JOIN=\"Client.join\",e.LEAVE=\"Client.leave\",e.PUBLISH=\"Client.publish\",e.UNPUBLISH=\"Client.unpublish\",e.SUBSCRIBE=\"Client.subscribe\",e.MASS_SUBSCRIBE=\"Client.massSubscribe\",e.MASS_UNSUBSCRIBE=\"Client.massUnsubscribe\",e.UNSUBSCRIBE=\"Client.unsubscribe\",e.RENEW_TOKEN=\"Client.renewToken\",e.SET_REMOTE_VIDEO_STREAM_TYPE=\"Client.setRemoteVideoStreamType\",e.SET_STREAM_FALLBACK_OPTION=\"Client.setStreamFallbackOption\",e.ENABLE_AUDIO_VOLUME_INDICATOR=\"Client.enableAudioVolumeIndicator\",e.SEND_CUSTOM_REPORT_MESSAGE=\"Client.sendCustomReportMessage\",e.INSPECT_VIDEO_CONTENT=\"Client.inspectVideoContent\",e.STOP_INSPECT_VIDEO_CONTENT=\"Client.stopInspectVideoContent\",e.JOIN_FALLBACK_TO_PROXY=\"Client._joinFallbackToProxy\",e.ON_LIVE_STREAM_WARNING=\"Client.onLiveStreamWarning\",e.ON_LIVE_STREAM_ERROR=\"Client.onLiveStreamingError\",e.START_LIVE_STREAMING=\"Client.startLiveStreaming\",e.SET_LIVE_TRANSCODING=\"Client.setLiveTranscoding\",e.STOP_LIVE_STREAMING=\"Client.stopLiveStreaming\",e.START_CHANNEL_MEDIA_RELAY=\"Client.startChannelMediaRelay\",e.UPDATE_CHANNEL_MEDIA_RELAY=\"Client.updateChannelMediaRelay\",e.STOP_CHANNEL_MEDIA_RELAY=\"Client.stopChannelMediaRelay\",e.REQUEST_CONFIG_DISTRIBUTE=\"_config-distribute-request\",e.SET_CONFIG_DISTRIBUTE=\"_configDistribute\",e.LOCAL_TRACK_SET_MUTED=\"LocalTrack.setMute\",e.LOCAL_AUDIO_TRACK_PLAY=\"LocalAudioTrack.play\",e.LOCAL_AUDIO_TRACK_PLAY_IN_ELEMENT=\"LocalAudioTrack.playInElement\",e.LOCAL_AUDIO_TRACK_STOP=\"LocalAudioTrack.stop\",e.LOCAL_AUDIO_TRACK_SET_VOLUME=\"LocalAudioTrack.setVolume\",e.MIC_AUDIO_TRACK_SET_DEVICE=\"MicrophoneAudioTrack.setDevice\",e.BUFFER_AUDIO_TRACK_START=\"BufferSourceAudioTrack.startProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_STOP=\"BufferSourceAudioTrack.stopProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_PAUSE=\"BufferSourceAudioTrack.pauseProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_RESUME=\"BufferSourceAudioTrack.resumeProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_SEEK=\"BufferSourceAudioTrack.seekAudioBuffer\",e.LOCAL_VIDEO_TRACK_PLAY=\"LocalVideoTrack.play\",e.LOCAL_VIDEO_TRACK_STOP=\"LocalVideoTrack.stop\",e.LOCAL_VIDEO_TRACK_GET_VIDEO_VISIBLE=\"LocalVideoTrack.getVideoElementVisibleStatus\",e.LOCAL_VIDEO_TRACK_BEAUTY=\"LocalVideoTrack.setBeautyEffect\",e.LOCAL_VIDEO_SEND_SEI_DATA=\"LocalVideoTrack.sendSeiData\",e.CAM_VIDEO_TRACK_SET_DEVICE=\"CameraVideoTrack.setDevice\",e.CAM_VIDEO_TRACK_SET_ENCODER_CONFIG=\"CameraVideoTrack.setEncoderConfiguration\",e.REMOTE_VIDEO_TRACK_PLAY=\"RemoteVideoTrack.play\",e.REMOTE_VIDEO_TRACK_STOP=\"RemoteVideoTrack.stop\",e.REMOTE_VIDEO_TRACK_GET_VIDEO_VISIBLE=\"RemoteVideoTrack.getVideoElementVisibleStatus\",e.REMOTE_AUDIO_TRACK_PLAY=\"RemoteAudioTrack.play\",e.REMOTE_AUDIO_TRACK_STOP=\"RemoteAudioTrack.stop\",e.REMOTE_AUDIO_SET_VOLUME=\"RemoteAudioTrack.setVolume\",e.REMOTE_AUDIO_SET_OUTPUT_DEVICE=\"RemoteAudioTrack.setOutputDevice\",e.GET_MEDIA_STREAM_TRACK=\"Track.getMediaStreamTrack\",e.STREAM_TYPE_CHANGE=\"streamTypeChange\",e.CONNECTION_STATE_CHANGE=\"connectionStateChange\",e.LOAD_CONFIG_FROM_LOCALSTORAGE=\"loadConfigFromLocalStorage\",e.IMAGE_MODERATION_UPLOAD=\"imageModerationUpload\",e}({}),jy=function(e){return e.TRACER=\"tracer\",e}({});function Gy(e){return yy(e.timeout,\"config.timeout\",0,1e5),yy(e.timeoutFactor,\"config.timeoutFactor\",0,100,!1),yy(e.maxRetryCount,\"config.maxRetryConfig\",0,1/0),yy(e.maxRetryTimeout,\"config.maxRetryTimeout\",0,1/0),!0}let Wy=function(e){return e[e.AUDIENCE_LEVEL_LOW_LATENCY=1]=\"AUDIENCE_LEVEL_LOW_LATENCY\",e[e.AUDIENCE_LEVEL_ULTRA_LOW_LATENCY=2]=\"AUDIENCE_LEVEL_ULTRA_LOW_LATENCY\",e[e.AUDIENCE_LEVEL_SYNC_LATENCY=3]=\"AUDIENCE_LEVEL_SYNC_LATENCY\",e}({}),Hy=function(e){return e.LEAVE=\"LEAVE\",e.NETWORK_ERROR=\"NETWORK_ERROR\",e.SERVER_ERROR=\"SERVER_ERROR\",e.UID_BANNED=\"UID_BANNED\",e.FALLBACK=\"FALLBACK\",e.IP_BANNED=\"IP_BANNED\",e.CHANNEL_BANNED=\"CHANNEL_BANNED\",e.LICENSE_MISSING=\"LICENSE_MISSING\",e.LICENSE_EXPIRED=\"LICENSE_EXPIRED\",e.LICENSE_MINUTES_EXCEEDED=\"LICENSE_MINUTES_EXCEEDED\",e.LICENSE_PERIOD_INVALID=\"LICENSE_PERIOD_INVALID\",e.LICENSE_MULTIPLE_SDK_SERVICE=\"LICENSE_MULTIPLE_SDK_SERVICE\",e.LICENSE_ILLEGAL=\"LICENSE_ILLEGAL\",e.TOKEN_EXPIRE=\"TOKEN_EXPIRE\",e}({});function Ky(e){if(!Array.isArray(e)||e.length<1)return!1;try{e.forEach((e=>{if(!e.urls)throw Error()}))}catch(e){return!1}return!0}function Yy(e){return by(e.turnServerURL,\"turnServerURL\"),by(e.username,\"username\"),by(e.password,\"password\"),e.udpport&&yy(e.udpport,\"udpport\",1,99999,!0),e.forceturn&&Iy(e.forceturn,\"forceturn\"),e.security&&Iy(e.security,\"security\"),e.tcpport&&yy(e.tcpport,\"tcpport\",1,99999,!0),!0}function qy(e){return void 0!==e.level&&vy(e.level,\"level\",[1,2,3]),void 0!==e.delay&&yy(e.delay,\"delay\",0,3e3,!0),!0}let zy=function(e){return e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.MEDIA_RECONNECT_START=\"media-reconnect-start\",e.MEDIA_RECONNECT_END=\"media-reconnect-end\",e.IS_USING_CLOUD_PROXY=\"is-using-cloud-proxy\",e.USER_JOINED=\"user-joined\",e.USER_LEAVED=\"user-left\",e.USER_PUBLISHED=\"user-published\",e.USER_UNPUBLISHED=\"user-unpublished\",e.USER_INFO_UPDATED=\"user-info-updated\",e.CLIENT_BANNED=\"client-banned\",e.CHANNEL_MEDIA_RELAY_STATE=\"channel-media-relay-state\",e.CHANNEL_MEDIA_RELAY_EVENT=\"channel-media-relay-event\",e.VOLUME_INDICATOR=\"volume-indicator\",e.CRYPT_ERROR=\"crypt-error\",e.ON_TOKEN_PRIVILEGE_WILL_EXPIRE=\"token-privilege-will-expire\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"token-privilege-did-expire\",e.NETWORK_QUALITY=\"network-quality\",e.STREAM_TYPE_CHANGED=\"stream-type-changed\",e.STREAM_FALLBACK=\"stream-fallback\",e.RECEIVE_METADATA=\"receive-metadata\",e.STREAM_MESSAGE=\"stream-message\",e.LIVE_STREAMING_ERROR=\"live-streaming-error\",e.LIVE_STREAMING_WARNING=\"live-streaming-warning\",e.EXCEPTION=\"exception\",e.ERROR=\"error\",e.P2P_LOST=\"p2p_lost\",e.JOIN_FALLBACK_TO_PROXY=\"join-fallback-to-proxy\",e.CHANNEL_FALLBACK_TO_WEBSOCKET=\"channel-fallback-to-websocket\",e.MEDIA_CONNECTION_TYPE_CHANGE=\"media-connection-type-change\",e.PUBLISHED_USER_LIST=\"published-user-list\",e.CONTENT_INSPECT_CONNECTION_STATE_CHANGE=\"content-inspect-connection-state-change\",e.CONTENT_INSPECT_ERROR=\"content-inspect-error\",e.CONTENT_INSPECT_RESULT=\"content-inspect-result\",e.IMAGE_MODERATION_CONNECTION_STATE_CHANGE=\"image-moderation-connection-state-change\",e}({}),Jy=function(e){return e.NETWORK_ERROR=\"NETWORK_ERROR\",e.SERVER_ERROR=\"SERVER_ERROR\",e.MULTI_IP=\"MULTI_IP\",e.TIMEOUT=\"TIMEOUT\",e.OFFLINE=\"OFFLINE\",e.LEAVE=\"LEAVE\",e.P2P_FAILED=\"P2P_FAILED\",e.FALLBACK=\"FALLBACK\",e}({}),Xy=function(e){return e.ONLINE=\"ONLINE\",e.OFFLINE=\"OFFLINE\",e}({}),Qy=function(e){return e.NETWORK_STATE_CHANGE=\"NETWORK_STATE_CHANGE\",e.ONLINE=\"ONLINE\",e.OFFLINE=\"OFFLINE\",e}({});function Zy(e,t){for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];return 0===e.getListeners(t).length?Gh.reject(new Cy(Ry.UNEXPECTED_ERROR,\"can not emit promise\")):new Gh(((i,r)=>{e.emit(t,...n,i,r)}))}function $y(e,t){if(0===e.getListeners(t).length)return Gh.resolve();for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];return Zy(e,t,...n)}function eA(e,t){if(0===e.getListeners(t).length)return null;for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];return tA(e,t,...n)}function tA(e,t){let i=null,n=null;for(var r=arguments.length,o=new Array(r>2?r-2:0),s=2;s<r;s++)o[s-2]=arguments[s];if(e.emit(t,...o,(e=>{i=e}),(e=>{n=e})),null!==n)throw n;if(null===i)throw new Cy(Ry.UNEXPECTED_ERROR,\"handler is not sync\");return i}const iA=new class extends xy{set networkState(e){this.emit(Qy.NETWORK_STATE_CHANGE,e,this._networkState),e===Xy.ONLINE?this.emit(Qy.ONLINE):e===Xy.OFFLINE&&(this.onlineWaiter=new Gh((e=>{this.once(Qy.ONLINE,(()=>{this.onlineWaiter=void 0,e(Xy.ONLINE)}))})),this.emit(Qy.OFFLINE)),this._networkState=e}get networkState(){return this._networkState}get isOnline(){return this._networkState===Xy.ONLINE}constructor(){super(),Ty(this,\"_moduleName\",\"network-indicator\"),Ty(this,\"_networkState\",Xy.ONLINE),Ty(this,\"onlineWaiter\",void 0),window.addEventListener(\"online\",(()=>{this.networkState=Xy.ONLINE})),window.addEventListener(\"offline\",(()=>{this.networkState=Xy.OFFLINE}))}};function nA(e,t){const i=e.indexOf(t);-1!==i&&e.splice(i,1)}function rA(e){const t=[];return e.forEach((e=>{-1===t.indexOf(e)&&t.push(e)})),t}function oA(e){void 0!==Gh?Gh.resolve().then(e):setTimeout(e,0)}function sA(e){return JSON.parse(JSON.stringify(e))}function aA(e){try{return sA(e)}catch(t){return e}}const cA={};function dA(e,t){cA[t]||(cA[t]=!0,e())}function lA(e){const t=window.atob(e),i=new Uint8Array(new ArrayBuffer(t.length));for(let e=0;e<t.length;e+=1)i[e]=t.charCodeAt(e);return i}function uA(e){let t=\"\";for(let i=0;i<e.length;i+=1)t+=String.fromCharCode(e[i]);return window.btoa(t)}function hA(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:16,i=(new TextEncoder).encode(e);if(i.length>t)i=i.slice(0,t);else if(i.length<t){const e=new Uint8Array(t);e.set(i),i=e}return i}function pA(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=Jn(t).call(t,((e,t)=>e+t.length),0),r=new Uint8Array(new ArrayBuffer(n));let o=0;return t.forEach((e=>{r.set(e,o),o+=e.length})),r}function _A(e){return window.TextEncoder?(new TextEncoder).encode(e).length:e.length}function EA(e){let t=0;return(/DingTalk/i.test(navigator.userAgent)||/AliApp/i.test(navigator.userAgent))&&e.realFormData&&(e=e.realFormData),e.forEach((e=>{t+=\"string\"==typeof e?_A(e):e.size})),t+138}function fA(e){const t=new Cy(Ry.TIMEOUT,\"timeout\");return new Gh(((i,n)=>{window.setTimeout((()=>n(t)),e)}))}function mA(e){return new Gh((t=>{window.setTimeout(t,e)}))}function TA(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:7,t=arguments.length>1?arguments[1]:void 0;const i=Math.random().toString(16).substr(2,e).toLowerCase();return i.length===e?\"\".concat(t).concat(i):\"\".concat(t).concat(i)+TA(e-i.length,\"\")}function SA(){return TA(32,\"\").toUpperCase()}const gA=()=>{},RA=new class{constructor(){Ty(this,\"fnMap\",new Map)}throttleByKey(e,t,i,n){for(var r=arguments.length,o=new Array(r>4?r-4:0),s=4;s<r;s++)o[s-4]=arguments[s];if(this.fnMap.has(t)){const r=this.fnMap.get(t);if(r.threshold!==i){r.fn(...r.args),clearTimeout(r.timer);const s=window.setTimeout((()=>{const e=this.fnMap.get(t);e&&e.fn(...e.args),this.fnMap.delete(t)}),i);this.fnMap.set(t,{fn:e,threshold:i,timer:s,args:o,skipFn:n})}else r.skipFn&&r.skipFn(...r.args),this.fnMap.set(t,gy(gy({},r),{},{fn:e,args:o,skipFn:n}))}else{const r=window.setTimeout((()=>{const e=this.fnMap.get(t);e&&e.fn(...e.args),this.fnMap.delete(t)}),i);this.fnMap.set(t,{fn:e,threshold:i,timer:r,args:o,skipFn:n})}}},CA=RA.throttleByKey.bind(RA);function IA(e){return\"object\"==typeof e&&null!==e&&!(e instanceof RegExp)}function vA(e,t){if(!IA(e)||!IA(t))return t;if(Array.isArray(e)&&!Array.isArray(t)||!Array.isArray(e)&&Array.isArray(t))return t;if(Array.isArray(t)&&Array.isArray(e)){const i=[...e];for(let n=0;n<t.length;n++)i[n]=vA(e[n],t[n]);return i}{const i=gy({},e);for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(Object.prototype.hasOwnProperty.call(e,n)?i[n]=vA(e[n],t[n]):i[n]=t[n]);return i}}function yA(e,t){let i=[0];if(t&&(i=new Array(t).fill(0)),0===e)return i;let n=0;for(;e>0&&(i[n]=255&e,e>>=8,n++,!t||n!==t););return i}function AA(e){return\"number\"==typeof e?e:e.exact||e.ideal||e.max||e.min||0}function bA(e){const t=\"0123456789abcdef\";function i(e){let i,n=\"\";for(i=0;i<=3;i++)n+=t.charAt(e>>8*i+4&15)+t.charAt(e>>8*i&15);return n}function n(e,t){const i=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(i>>16)<<16|65535&i}function r(e,t,i,r,o,s){return n(function(e,t){return e<<t|e>>>32-t}(n(n(t,e),n(r,s)),o),i)}function o(e,t,i,n,o,s,a){return r(t&i|~t&n,e,t,o,s,a)}function s(e,t,i,n,o,s,a){return r(t&n|i&~n,e,t,o,s,a)}function a(e,t,i,n,o,s,a){return r(t^i^n,e,t,o,s,a)}function c(e,t,i,n,o,s,a){return r(i^(t|~n),e,t,o,s,a)}const d=function(e){let t;const i=1+(e.length+8>>6),n=new Array(16*i);for(t=0;t<16*i;t++)n[t]=0;for(t=0;t<e.length;t++)n[t>>2]|=e.charCodeAt(t)<<t%4*8;return n[t>>2]|=128<<t%4*8,n[16*i-2]=8*e.length,n}(e);let l,u,h,p,_,E=1732584193,f=-271733879,m=-1732584194,T=271733878;for(l=0;l<d.length;l+=16)u=E,h=f,p=m,_=T,E=o(E,f,m,T,d[l+0],7,-680876936),T=o(T,E,f,m,d[l+1],12,-389564586),m=o(m,T,E,f,d[l+2],17,606105819),f=o(f,m,T,E,d[l+3],22,-1044525330),E=o(E,f,m,T,d[l+4],7,-176418897),T=o(T,E,f,m,d[l+5],12,1200080426),m=o(m,T,E,f,d[l+6],17,-1473231341),f=o(f,m,T,E,d[l+7],22,-45705983),E=o(E,f,m,T,d[l+8],7,1770035416),T=o(T,E,f,m,d[l+9],12,-1958414417),m=o(m,T,E,f,d[l+10],17,-42063),f=o(f,m,T,E,d[l+11],22,-1990404162),E=o(E,f,m,T,d[l+12],7,1804603682),T=o(T,E,f,m,d[l+13],12,-40341101),m=o(m,T,E,f,d[l+14],17,-1502002290),f=o(f,m,T,E,d[l+15],22,1236535329),E=s(E,f,m,T,d[l+1],5,-165796510),T=s(T,E,f,m,d[l+6],9,-1069501632),m=s(m,T,E,f,d[l+11],14,643717713),f=s(f,m,T,E,d[l+0],20,-373897302),E=s(E,f,m,T,d[l+5],5,-701558691),T=s(T,E,f,m,d[l+10],9,38016083),m=s(m,T,E,f,d[l+15],14,-660478335),f=s(f,m,T,E,d[l+4],20,-405537848),E=s(E,f,m,T,d[l+9],5,568446438),T=s(T,E,f,m,d[l+14],9,-1019803690),m=s(m,T,E,f,d[l+3],14,-187363961),f=s(f,m,T,E,d[l+8],20,1163531501),E=s(E,f,m,T,d[l+13],5,-1444681467),T=s(T,E,f,m,d[l+2],9,-51403784),m=s(m,T,E,f,d[l+7],14,1735328473),f=s(f,m,T,E,d[l+12],20,-1926607734),E=a(E,f,m,T,d[l+5],4,-378558),T=a(T,E,f,m,d[l+8],11,-2022574463),m=a(m,T,E,f,d[l+11],16,1839030562),f=a(f,m,T,E,d[l+14],23,-35309556),E=a(E,f,m,T,d[l+1],4,-1530992060),T=a(T,E,f,m,d[l+4],11,1272893353),m=a(m,T,E,f,d[l+7],16,-155497632),f=a(f,m,T,E,d[l+10],23,-1094730640),E=a(E,f,m,T,d[l+13],4,681279174),T=a(T,E,f,m,d[l+0],11,-358537222),m=a(m,T,E,f,d[l+3],16,-722521979),f=a(f,m,T,E,d[l+6],23,76029189),E=a(E,f,m,T,d[l+9],4,-640364487),T=a(T,E,f,m,d[l+12],11,-421815835),m=a(m,T,E,f,d[l+15],16,530742520),f=a(f,m,T,E,d[l+2],23,-995338651),E=c(E,f,m,T,d[l+0],6,-198630844),T=c(T,E,f,m,d[l+7],10,1126891415),m=c(m,T,E,f,d[l+14],15,-1416354905),f=c(f,m,T,E,d[l+5],21,-57434055),E=c(E,f,m,T,d[l+12],6,1700485571),T=c(T,E,f,m,d[l+3],10,-1894986606),m=c(m,T,E,f,d[l+10],15,-1051523),f=c(f,m,T,E,d[l+1],21,-2054922799),E=c(E,f,m,T,d[l+8],6,1873313359),T=c(T,E,f,m,d[l+15],10,-30611744),m=c(m,T,E,f,d[l+6],15,-1560198380),f=c(f,m,T,E,d[l+13],21,1309151649),E=c(E,f,m,T,d[l+4],6,-145523070),T=c(T,E,f,m,d[l+11],10,-1120210379),m=c(m,T,E,f,d[l+2],15,718787259),f=c(f,m,T,E,d[l+9],21,-343485551),E=n(E,u),f=n(f,h),m=n(m,p),T=n(T,_);return i(E)+i(f)+i(m)+i(T)}let wA=1,OA=console,NA=class{static setLogger(e){OA=e}constructor(e){Ty(this,\"lockingPromise\",Gh.resolve()),Ty(this,\"locks\",0),Ty(this,\"name\",\"\"),Ty(this,\"lockId\",void 0),this.lockId=wA++,e&&(this.name=e),OA.debug(\"[lock-\".concat(this.name,\"-\").concat(this.lockId,\"] is created.\"))}get isLocked(){return this.locks>0}lock(e){let t;this.locks+=1,OA.debug(\"[lock-\".concat(this.name,\"-\").concat(this.lockId,\"] is locked, current queue \").concat(this.locks,\". \").concat(\"string\"==typeof e?e:\"\"));const i=new Gh((i=>{t=()=>{this.locks-=1,OA.debug(\"[lock-\".concat(this.name,\"-\").concat(this.lockId,\"] is not locked, current queue \").concat(this.locks,\". \").concat(\"string\"==typeof e?e:\"\")),i()}})),n=this.lockingPromise.then((()=>t));return this.lockingPromise=this.lockingPromise.then((()=>i)),n}};function DA(e,t){return function(i,n,r){const o=r.value;if(\"function\"!=typeof o)throw new Error(\"Cannot use mutex on object property.\");return r.value=async function(){const i=this[t];if(!i)throw new Error(\"mutex property key \".concat(t,\" doesn't exist on \").concat(e));const r=await i.lock(\"From \".concat(e,\".\").concat(n));try{for(var s=arguments.length,a=new Array(s),c=0;c<s;c++)a[c]=arguments[c];return await o.apply(this,a)}finally{r()}},r}}const PA={timeout:500,timeoutFactor:1.5,maxRetryCount:1/0,maxRetryTimeout:1e4};function LA(e,t){const i=Math.floor(t.timeout*Math.pow(t.timeoutFactor,e));return Math.min(t.maxRetryTimeout,i)}function kA(e,t,i,n){const r=Object.assign({},PA,n);let o=r.timeout;const s=async()=>{await function(e){return new Gh((t=>{window.setTimeout(t,e)}))}(o),o*=r.timeoutFactor,o=Math.min(r.maxRetryTimeout,o)};let a=!1;const c=new Gh((async(n,o)=>{t=t||(()=>!1),i=i||(()=>!0);for(let c=0;c<r.maxRetryCount;c+=1){if(a)return o(new Cy(Ry.OPERATION_ABORTED));try{const i=await e();if(!t(i,c))return n(i);if(c+1===r.maxRetryCount)return n(i);await s()}catch(e){if(!i(e,c))return o(e);if(c+1===r.maxRetryCount)return o(e);await s()}}}));return c.cancel=()=>a=!0,c}class MA{constructor(e){Ty(this,\"input\",[]),Ty(this,\"size\",void 0),this.size=e}add(e){this.input.push(e),this.input.length>this.size&&this.input.splice(0,1)}mean(){var e;return 0===this.input.length?0:Jn(e=this.input).call(e,((e,t)=>e+t))/this.input.length}}let UA,xA=0,VA=0;function FA(e,t,i,n){return new Gh(((r,o)=>{t.responseType=t.responseType||\"json\",t.data&&!i?(t.data=JSON.stringify(t.data),xA+=_A(t.data)):i&&(t.data.size?xA+=t.data.size:t.data instanceof FormData?xA+=EA(t.data):xA+=_A(JSON.stringify(t.data))),t.headers=t.headers||{},t.headers[\"Content-Type\"]=t.headers[\"Content-Type\"]||\"application/json\",t.method=\"POST\",t.url=e,Lv.request(t).then((e=>{\"string\"==typeof e.data?VA+=_A(e.data):e.data instanceof ArrayBuffer||e.data instanceof Uint8Array?VA+=e.data.byteLength:VA+=_A(JSON.stringify(e.data)),n&&r({data:e.data,headers:e.headers}),r(e.data)})).catch((e=>{Lv.isCancel(e)?o(new Cy(Ry.OPERATION_ABORTED,\"cancel token canceled\")):\"ECONNABORTED\"===e.code?o(new Cy(Ry.NETWORK_TIMEOUT,e.message)):e.response?o(new Cy(Ry.NETWORK_RESPONSE_ERROR,e.response.status)):o(new Cy(Ry.NETWORK_ERROR,e.message))}))}))}async function BA(e,t){const i=new Blob([t.data],{type:\"buffer\"});return await FA(e,gy(gy({},t),{},{data:i,headers:{\"Content-Type\":\"application/octet-stream\"}}),!0)}const jA=()=>void 0!==window.isSecureContext;const GA=function(e){if(e.match(/[0-9]+\\.[0-9]+\\.[0-9]+$/))return e;const t=e.match(/([0-9]+\\.[0-9]+\\.[0-9]+)\\-([0-9]+)/);if(t&&t[1]&&t[2]){const e=t[1],i=t[2];return\"\".concat(e,\".\").concat(i)}return\"4.0.0.999\"}(\"4.22.1\"),WA=function(){try{return!0===JSON.parse(\"true\")}catch(e){return!0}}();let HA=function(e){return e.Default=\"default\",e.Auto=\"auto\",e.Relay=\"relay\",e.SdRtn=\"sd-rtn\",e}({});const KA=function(){const e=\"us\".concat(\"erna\",\"me\"),t=\"pa\".concat(\"sswo\",\"rd\"),i=[\"t\",\"s\",\"t\"];i.splice(1,0,\"e\");const n=i.join(\"\"),r=[];for(let e=0;e<6;e++)r.push(\"1\");const o=r.join(\"\"),s={};return s[e]=n,s[t]=o,Object.assign(s,{turnServerURL:\"\",tcpport:3433,udpport:3478,forceturn:!1})}();window.DEFAULT_TURN_CONFIG=KA;const YA={MIN_FRAME_RATE:1,MAX_FRAME_RATE:30,MAX_THRESHOLD_FRAMERATE:30,BITRATE_MIN_THRESHOLD:100,BITRATE_MAX_THRESHOLD:100,MAX_SCALE:5,BWE_SCALE_UP_THRESHOLD:.6,BWE_SCALE_DOWN_THRESHOLD:.6,PERF_SCALE_UP_THRESHOLD:.7,PERF_SCALE_DOWN_THRESHOLD:.6,MOTION_RESOLUTION_FACTOR:.8,MOTION_BITRATE_FACTOR:.6,DETAIL_FRAMERATE_FACTOR:.8,DETAIL_BITRATE_FACTOR:.6,BALANCE_RESOLUTION_FACTOR:.9,BALANCE_FRAMERATE_FACTOR:.9,BALANCE_BITRATE_FACTOR:.6,OVERUSE_TIMES_THRESHOLD:10,UNDERUSE_TIMES_THRESHOLD:40},qA=\"v4.22.1-0-g1c8e27e9(9/19/2024, 2:23:30 PM)\",zA=gy(gy({PROCESS_ID:\"\",ENCRYPT_AES:!0,AREAS:[\"CHINA\",\"GLOBAL\"],WEBCS_DOMAIN:[\"webrtc2-ap-web-1.agora.io\",\"webrtc2-2.ap.sd-rtn.com\"],WEBCS_DOMAIN_BACKUP_LIST:[\"webrtc2-ap-web-3.agora.io\",\"webrtc2-4.ap.sd-rtn.com\"],PROXY_CS:[\"ap-proxy-1.agora.io\",\"ap-proxy-2.agora.io\"],CDS_AP:[\"cds-ap-web-1.agora.io\",\"cds-web-2.ap.sd-rtn.com\",\"cds-ap-web-3.agora.io\",\"cds-web-4.ap.sd-rtn.com\"],ACCOUNT_REGISTER:[\"sua-ap-web-1.agora.io\",\"sua-web-2.ap.sd-rtn.com\",\"sua-ap-web-3.agora.io\",\"sua-web-4.ap.sd-rtn.com\"],UAP_AP:[\"uap-ap-web-1.agora.io\",\"uap-web-2.ap.sd-rtn.com\",\"uap-ap-web-3.agora.io\",\"uap-web-4.ap.sd-rtn.com\"],LOG_UPLOAD_SERVER:\"logservice.agora.io\",EVENT_REPORT_DOMAIN:\"statscollector-1.agora.io\",EVENT_REPORT_BACKUP_DOMAIN:\"web-2.statscollector.sd-rtn.com\",ENABLE_EVENT_REPORT:!0,GATEWAY_ADDRESS:[],GATEWAY_WSS_ADDRESS:\"\",LIVE_STREAMING_ADDRESS:\"\",HTTP_CONNECT_TIMEOUT:5e3,SIGNAL_REQUEST_TIMEOUT:1e4,REPORT_STATS:!0,UPLOAD_LOG:!1,NOT_REPORT_EVENT:[],PING_PONG_TIME_OUT:10,WEBSOCKET_TIMEOUT_MIN:1e4,EVENT_REPORT_SEND_INTERVAL:3e3,CONFIG_DISTRIBUTE_INTERVAL:3e5,ENABLE_CONFIG_DISTRIBUTE:!0,CANDIDATE_TIMEOUT:5e3,SHOW_REPORT_INVOKER_LOG:!1,JOIN_EXTEND:\"\",PUB_EXTEND:\"\",SUB_EXTEND:\"\",FORCE_TURN:!1,TURN_ENABLE_TCP:!0,TURN_ENABLE_UDP:!0,MAX_UPLOAD_CACHE:50,UPLOAD_CACHE_INTERVAL:2e3,AJAX_REQUEST_CONCURRENT:3,REPORT_APP_SCENARIO:void 0,GATEWAY_DOMAINS:[\"edge.agora.io\",\"edge.sd-rtn.com\"],CONNECT_GATEWAY_WITHOUT_DOMAIN:!1,WORKER_DOMAIN:\"edge.agora.io\",TURN_DOMAIN:\"edge.agora.io\",EVENT_REPORT_RETRY:!0,CHROME_FORCE_PLAN_B:!1,AUDIO_SOURCE_VOLUME_UPDATE_INTERVAL:400,AUDIO_SOURCE_AVG_VOLUME_DURATION:3e3,AUDIO_VOLUME_INDICATION_INTERVAL:2e3,VOLUME_VOICE_WEIGHT:10,GET_VOLUME_OF_MUTED_AUDIO_TRACK:!1,STATS_UPDATE_INTERVAL:250,NORMAL_EVENT_QUEUE_CAPACITY:100,CUSTOM_REPORT:!0,CUSTOM_REPORT_LIMIT:20,PROXY_SERVER_TYPE2:\"webnginx-proxy.agora.io\",PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy.sd-rtn.com\",\"webrtc-cloud-proxy.agora.io\"],CUSTOM_PUB_ANSWER_MODIFIER:null,CUSTOM_SUB_ANSWER_MODIFIER:null,CUSTOM_PUB_OFFER_MODIFIER:null,CUSTOM_SUB_OFFER_MODIFIER:null,DSCP_TYPE:\"high\",REMOVE_NEW_CODECS:!0,FRAGEMENT_LENGTH:3,WEBSOCKET_COMPRESS:!1,SIMULCAST:!1,PRELOAD_MEDIA_COUNT:0,CHECK_VIDEO_VISIBLE_INTERVAL:3e4,CHECK_LOCAL_STATS_INTERVAL:250,PROFILE_SWITCH_INTERVAL:2e3,UNSUPPORTED_VIDEO_CODEC:[],ENUMERATE_DEVICES_INTERVAL:!1,ENUMERATE_DEVICES_INTERVAL_TIME:1e4,USE_NEW_TOKEN:!1,CLOSE_AFB_FOR_LOCAL_AP:!0,JOIN_MAX_CONCURRENCY:6,JOIN_WITH_FALLBACK_SIGNAL_PROXY:!0,JOIN_WITH_FALLBACK_MEDIA_PROXY:!0,JOIN_WITH_FALLBACK_MEDIA_PROXY_FORCE:!1,JOIN_GATEWAY_TRY_443PORT_DURATION:2e3,JOIN_GATEWAY_USE_443PORT_ONLY:!1,JOIN_GATEWAY_USE_DUAL_DOMAIN:!0,JOIN_GATEWAY_FALLBACK_PORT:443,USE_TURN_SERVER_OF_GATEWAY:!1,H264_PROFILE_LEVEL_ID:\"\",USE_NEW_LOG:!1,LOG_VERSION:3,MEDIA_DEVICE_CONSTRAINTS:null,ENCRYPT_PROXY_USERNAME_AND_PSW:!0,SDP_LOGGING:!1,CSP_DETECTED_HOSTNAME_LIST:[\"agora.io\",\"sd-rtn.com\"],REMOTE_AUDIO_TRACK_USES_WEB_AUDIO:!1,LOCAL_AUDIO_TRACK_USES_WEB_AUDIO:!1,BITRATE_ADAPTER_TYPE:\"STANDARD_BITRATE\",AI_DENOISER_PARAMETERS:{excludedLinks:[]},ADJUST_3A_FROM_PLUGINS:!0,RAISE_H264_BASELINE_PRIORITY:!0,FILTER_SEND_H264_BASELINE:!1,X_GOOGLE_START_BITRATE:void 0,NEW_REPORT_SERVER:!1,NEW_REPORT_SERVER_DOMAINS:[\"data-reporting.agora.io\",\"data-reporting.agora.io\"],VIDEO_INSPECT_WORKER_MESSAGE_LENGTH_LIMIT:3e5,VIDEO_INSPECT_INTERVAL_MINIMUM:1e3,VIDEO_INSPECT_QUALITY_RATIO:.9,VIDEO_INSPECT_WORKER_MANAGER_HOST:\"edge.agora.io\",VIDEO_INSPECT_WORKER_MANAGER_PORT:\"\",VIDEO_INSPECT_WORKER_PORT:\"\",SHOW_VIDEO_INSPECT_WORKER_MESSAGE:!1,STATS_COLLECTOR_PORT:443,FORCE_TURN_TCP:!1,WEBAUDIO_INIT_OPTIONS:void 0,FILTER_VIDEO_FEC:!0,FILTER_AUDIO_FEC:!1,CHROME_DUAL_STREAM_USE_ENCODING:!0,DISABLE_DUAL_STREAM_USE_ENCODING:!1,EXTENSION_USAGE_UPLOAD_INTERVAL:1e4,ICE_RESTART:!0,ICE_RESTART_INTERVAL:1e4,NEW_ICE_RESTART:!1,TRANSMITTER_INITIAL_RTT:30,TRANSMITTER_INITIAL_RTO:30,TRANSMITTER_MAX_BATCH_ACK_COUNT:2,TRANSMITTER_MAX_RTO:500,DATACHANNEL_COMPRESS:!1,FINGERPRINT:null,DC_JOIN_WITH_FAILBACK:5e3,ENABLE_VIDEO_FRAME_CALLBACK:!0,VIDEO_FREEZE_DURATION:500,SPATIALIZER_PARAMETERS:{},UPLOAD_LOG_INTERVAL:3e3,UPLOAD_LOG_REQUEST_RETRY_INTERVAL:2e3,UPLOAD_LOG_REQUEST_MAX_RETRY_INTERVAL:2e4,UPLOAD_LOG_TRY_INTERVAL_WHILE_OFF:5e3,UPLOAD_LOG_RETRY_INTERVAL_V1:1e4,UPLOAD_LOG_TWICE_RETRY_INTERVAL_V1:200,UPLOAD_LOG_LENGTH_EACH_TIME:10,APP_TYPE:0,DISABLE_WEBAUDIO:!1,CHANNEL_MEDIA_RELAY_SERVERS:void 0,KEEP_LAST_FRAME:!0,FORWARD_P2P_CREATION:!0,SYNC_GROUP:!0,BLOCK_LOCAL_CLIENT:!1,AP_AREA:!0,ENABLE_ENCODED_TRANSFORM:!1,ENABLE_VIDEO_SEI:!1,IMAGE_MODERATION_WORKER_HOST:\"edge.agora.io\",IMAGE_MODERATION_WORKER_MESSAGE_LENGTH_LIMIT:3e5,IMAGE_MODERATION_INTERVAL_MINIMUM:1e3,SHOW_IMAGE_MODERATION_WORKER_MESSAGE:!1,IMAGE_MODERATION_QUALITY_RATIO:.9,IMAGE_MODERATION_UPLOAD_REPORT_INTERVAL:5e3,SHOW_GLOBAL_CLIENT_LIST:!1,DATASTREAM_MAX_RETRANSMITS:10,TCP_CANDIDATE_ONLY:!1,EXTERNAL_SIGNAL_REQUEST_TIMEOUT:3e3,SHOW_P2P_LOG:!1,MAX_P2P_TIMEOUT:3e4,P2P_TOKEN_INTERVAL:1e3,SHOW_DATASTREAM2_LOG:!1,RESTRICTION_SET_PLAYBACK_DEVICE:!0,USE_PURE_ENCRYPTION_MASTER_KEY:!1,ACCOUNT_REGISTER_RETRY_TIMEOUT:1,ACCOUNT_REGISTER_RETRY_RATIO:2,ACCOUNT_REGISTER_RETRY_TIMEOUT_MAX:6e4,ACCOUNT_REGISTER_RETRY_COUNT_MAX:1e5,AUDIO_CONTEXT:null,WEBCS_BACKUP_CONNECT_TIMEOUT:6e3,PLAYER_STATE_DEFER:2e3,SIGNAL_REQUEST_WATCH_INTERVAL:1e3,FILEPATH_LENMAX:255,DUALSTREAM_OPERATION_CHECK:!0,MEDIA_ELEMENT_EXISTS_DEPTH:3,SHIM_CANDIDATE:!1,LEAVE_MSG_TIMEOUT:2e3,STATS_FILTER:{transportId:!0,googTrackId:!0},FILTER_VIDEO_CODEC:[],USE_NEW_NETWORK_CONFIG:!1,AUTO_RESET_AUDIO_ROUTE:!1,PLUGIN_INFO:[],OVERUSE_DETECTOR_PARAMS:YA,ENABLE_AG_ADAPTATION:!0,FORCE_AG_HIGH_FRAMERATE:!1,FORCE_SUPPORT_AG_ADAPTATION:!1,CUSTOM_ADAPTATION_DEFAULT_MODE:\"\",ENCODER_CONFIG_LIMIT:{},CAMERA_CAPTURE_CONFIG:void 0,HIDE_NO_POSTER:!1,AP_CACHE_NUM:10,AP_UPDATE_INTERVAL:12e4,AP_CACHE_LIFETIME:12e4,MAX_PRELOAD_ASYNC_LENGTH:3,ENABLE_PRELOAD:!0,DISABLE_SCREEN_SHARE_REMB:!1},{ENABLE_PUBLISHED_USER_LIST:!0,MAX_SUBSCRIPTION:50,SUBSCRIBE_AUDIO_FILTER_TOPN:void 0,ENABLE_PUBLISH_AUDIO_FILTER:void 0,ENABLE_USER_LICENSE_CHECK:!0,USE_PUB_RTX:!0,USE_SUB_RTX:!0,DISABLE_FEC:void 0,ENABLE_NTP_REPORT:!1,ENABLE_INSTANT_VIDEO:!1,ENABLE_DATASTREAM_2:!1,ENABLE_USER_AUTO_REBALANCE_CHECK:!0,USE_XR:!0,ENABLE_LOSSBASED_BWE:!0,ENABLE_AUT_CC:!1,ENABLE_CC_FALLBACK:void 0,ENABLE_PREALLOC_PC:!1,SUBSCRIBE_TWCC:!0,PUBLISH_TWCC:!1,ENABLE_SVC:!1,ENABLE_SVC_DEFAULT_CODECS:[\"H264\",\"VP8\",\"VP9\",\"AV1\"],SVC:[],ENABLE_FULL_LINK_AV_SYNC:!1,SVC_MODE:null,PRE_SUB_NUM:2,ENABLE_PRE_SUB:!1,ENABLE_AUT_FEEDBACK:!1}),{},{USE_CANDIDATE_FROM_AP_DETAIL:!1,AP_REQUEST_DETAIL:void 0});function JA(e,t,i){var n,r,o;Dn(n=Object.keys(zA)).call(n,e)&&(!i&&Dn(r=Object.keys(QA)).call(r,e)||(zA[e]=t,\"ENABLE_VIDEO_SEI\"===e&&!0===t&&(zA.ENABLE_ENCODED_TRANSFORM=!0),\"USE_NEW_NETWORK_CONFIG\"===e&&t&&(o=!!t,zA.USE_NEW_NETWORK_CONFIG=o,o&&(zA.WEBCS_DOMAIN=[\"webrtc2-2.ap.sd-rtn.com\"],zA.WEBCS_DOMAIN_BACKUP_LIST=[\"webrtc2-4.ap.sd-rtn.com\"],zA.CDS_AP=[\"cds-web-2.ap.sd-rtn.com\",\"cds-web-4.ap.sd-rtn.com\"],zA.ACCOUNT_REGISTER=[\"sua-web-2.ap.sd-rtn.com\",\"sua-web-4.ap.sd-rtn.com\"],zA.EVENT_REPORT_DOMAIN=\"web-2.statscollector.sd-rtn.com\",zA.EVENT_REPORT_BACKUP_DOMAIN=\"statscollector-1.agora.io\",zA.GATEWAY_DOMAINS=[\"edge.sd-rtn.com\"])),\"ENABLE_PRE_SUB\"===e&&t&&(zA.ENABLE_INSTANT_VIDEO=!0,zA.ENABLE_PREALLOC_PC=!0),\"ENABLE_SVC\"===e&&t&&(zA.ENABLE_AUT_CC=!0)))}function XA(e){return zA[e]}WA||(zA.WEBCS_DOMAIN=[\"ap-web-1-oversea.agora.io\",\"ap-web-1-north-america.agora.io\"],zA.WEBCS_DOMAIN_BACKUP_LIST=[\"ap-web-2-oversea.agora.io\",\"ap-web-2-north-america.agora.io\"],zA.PROXY_CS=[\"proxy-ap-web-oversea.agora.io\",\"proxy-ap-web-america.agora.io\"],zA.CDS_AP=[\"cds-ap-web-oversea.agora.io\",\"cds-ap-web-america.agora.io\",\"cds-ap-web-america2.agora.io\"],zA.ACCOUNT_REGISTER=[\"sua-ap-web-oversea.agora.io\",\"sua-ap-web-america.agora.io\",\"sua-ap-web-america2.agora.io\"],zA.UAP_AP=[\"uap-ap-web-oversea.agora.io\",\"uap-ap-web-america.agora.io\",\"uap-ap-web-america2.agora.io\"],zA.LOG_UPLOAD_SERVER=\"logservice-oversea.agora.io\",zA.EVENT_REPORT_DOMAIN=\"statscollector-1-oversea.agora.io\",zA.EVENT_REPORT_BACKUP_DOMAIN=\"statscollector-2-oversea.agora.io\",zA.PROXY_SERVER_TYPE3=\"webrtc-cloud-proxy.agora.io\",zA.AREAS=[\"NORTH_AMERICA\",\"OVERSEA\"]);const QA={};var ZA=function(e){return e.SET_SESSION_ID=\"SET_SESSION_ID\",e.SET_P2P_ID=\"SET_P2P_id\",e.SET_DC_ID=\"SET_DC_id\",e.SET_UID=\"SET_UID\",e.SET_INT_UID=\"SET_INT_UID\",e.SET_PUB_ID=\"SET_PUB_ID\",e.SET_CLOUD_PROXY_SERVER_MODE=\"SET_CLOUD_PROXY_SERVER_MODE\",e.KEY_METRIC_CLIENT_CREATED=\"KEY_METRIC_CLIENT_CREATED\",e.KEY_METRIC_JOIN_START=\"KEY_METRIC_JOIN_START\",e.AVOID_JOIN_START=\"AVOID_JOIN_START\",e.KEY_METRIC_JOIN_END=\"KEY_METRIC_JOIN_END\",e.KEY_METRIC_REQUEST_AP_START=\"KEY_METRIC_REQUEST_AP_START\",e.KEY_METRIC_REQUEST_AP_END=\"KEY_METRIC_REQUEST_AP_END\",e.KEY_METRIC_JOIN_GATEWAY_START=\"KEY_METRIC_JOIN_GATEWAY_START\",e.KEY_METRIC_JOIN_GATEWAY_END=\"KEY_METRIC_JOIN_GATEWAY_END\",e.KEY_METRIC_PEER_CONNECTION_START=\"KEY_METRIC_PEER_CONNECTION_START\",e.KEY_METRIC_PEER_CONNECTION_END=\"KEY_METRIC_PEER_CONNECTION_END\",e.KEY_METRIC_DESCRIPTION_START=\"KEY_METRIC_DESCRIPTION_START\",e.KEY_METRIC_ICE_CONNECTION_END=\"KEY_METRIC_ICE_CONNECTION_END\",e.KEY_METRIC_SIGNAL_CHANNEL_OPEN=\"KEY_METRIC_SIGNAL_CHANNEL_OPEN\",e.KEY_METRIC_PUBLISH=\"KEY_METRIC_PUBLISH\",e.KEY_METRIC_SUBSCRIBE=\"KEY_METRIC_SUBSCRIBE\",e.RECORD_JOIN_CHANNEL_SERVICE=\"RECORD_JOIN_CHANNEL_SERVICE\",e.RESET_JOIN_CHANNEL_SERVICE_RECORDS=\"RESET_JOIN_CHANNEL_SERVICE_RECORDS\",e.RESET_KEY_METRICS=\"RESET_KEY_METRICS\",e.SET_USE_P2P=\"SET_USE_P2P\",e.SET_TRANSPORT_TYPE=\"SET_TRANSPORT_TYPE\",e}(ZA||{});class $A{constructor(e,t,i,n){Ty(this,\"state\",void 0),this.state={codec:e,audioCodec:t,mode:i,clientId:n,sessionId:null,p2pId:0,dcId:0,pubId:0,subId:0,avoidJoinStart:0,keyMetrics:{publish:[],subscribe:[]},joinChannelServiceRecords:[],cloudProxyServerMode:\"disabled\",useP2P:!1,p2pTransport:HA.Default}}dispatch(e){this.state=function(e,t){switch(t.type){case ZA.SET_SESSION_ID:return gy(gy({},e),{},{sessionId:t.sessionId});case ZA.SET_P2P_ID:return gy(gy({},e),{},{p2pId:t.p2pId});case ZA.SET_UID:return gy(gy({},e),{},{uid:t.uid});case ZA.SET_INT_UID:return gy(gy({},e),{},{intUid:t.intUid});case ZA.SET_PUB_ID:return gy(gy({},e),{},{pubId:t.pubId});case ZA.KEY_METRIC_CLIENT_CREATED:return gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{clientCreated:t.metric})});case ZA.KEY_METRIC_JOIN_START:return gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{joinStart:t.metric})});case ZA.AVOID_JOIN_START:return gy(gy({},e),{},{avoidJoinStart:t.avoidJoinStart});case ZA.KEY_METRIC_JOIN_END:return gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{joinEnd:t.metric})});case ZA.KEY_METRIC_REQUEST_AP_START:return gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{requestAPStart:t.metric})});case ZA.KEY_METRIC_REQUEST_AP_END:return gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{requestAPEnd:t.metric})});case ZA.KEY_METRIC_JOIN_GATEWAY_START:return gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{joinGatewayStart:t.metric})});case ZA.KEY_METRIC_JOIN_GATEWAY_END:return gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{joinGatewayEnd:t.metric})});case ZA.KEY_METRIC_PEER_CONNECTION_START:return gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{peerConnectionStart:t.metric})});case ZA.KEY_METRIC_PEER_CONNECTION_END:return gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{peerConnectionEnd:t.metric})});case ZA.KEY_METRIC_DESCRIPTION_START:return gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{descriptionStart:t.metric})});case ZA.KEY_METRIC_SIGNAL_CHANNEL_OPEN:return gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{signalChannelOpen:t.metric})});case ZA.KEY_METRIC_ICE_CONNECTION_END:return gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{iceConnectionEnd:t.metric})});case ZA.KEY_METRIC_PUBLISH:{const i=e.keyMetrics.publish,n=i.findIndex((e=>e.trackId===t.metric.trackId));return-1!==n?(i[n]=gy(gy({},i[n]),t.metric),gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{publish:[...i]})})):gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{publish:[...e.keyMetrics.publish,t.metric]})})}case ZA.KEY_METRIC_SUBSCRIBE:{const i=e.keyMetrics.subscribe,n=i.findIndex((e=>e.userId===t.metric.userId&&e.type===t.metric.type));return-1!==n?(i[n]=gy(gy({},i[n]),t.metric),gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{subscribe:[...i]})})):gy(gy({},e),{},{keyMetrics:gy(gy({},e.keyMetrics),{},{subscribe:[...e.keyMetrics.subscribe,t.metric]})})}case ZA.SET_CLOUD_PROXY_SERVER_MODE:return e.cloudProxyServerMode=t.mode,e;case ZA.RECORD_JOIN_CHANNEL_SERVICE:return\"number\"!=typeof t.index?e.joinChannelServiceRecords=[...e.joinChannelServiceRecords,t.record]:(e.joinChannelServiceRecords[t.index]=gy(gy({},e.joinChannelServiceRecords[t.index]),t.record),e.joinChannelServiceRecords=[...e.joinChannelServiceRecords]),e;case ZA.RESET_JOIN_CHANNEL_SERVICE_RECORDS:return e.joinChannelServiceRecords=[],e;case ZA.RESET_KEY_METRICS:return e.keyMetrics={publish:[],subscribe:[]},e;case ZA.SET_USE_P2P:return gy(gy({},e),{},{useP2P:t.val});case ZA.SET_TRANSPORT_TYPE:return gy(gy({},e),{},{p2pTransport:t.val});default:return e}}(this.state,e)}set sessionId(e){this.dispatch({type:ZA.SET_SESSION_ID,sessionId:e})}get sessionId(){return this.state.sessionId}set codec(e){this.state.codec=e}get codec(){return this.state.codec}get mode(){return this.state.mode}get audioCodec(){return this.state.audioCodec}get clientId(){return this.state.clientId}set p2pId(e){this.dispatch({type:ZA.SET_P2P_ID,p2pId:e})}get p2pId(){return this.state.p2pId}set dcId(e){this.dispatch({type:ZA.SET_DC_ID,dcId:e})}get dcId(){return this.state.dcId}set uid(e){this.dispatch({type:ZA.SET_UID,uid:e})}get uid(){return this.state.uid}set intUid(e){this.dispatch({type:ZA.SET_INT_UID,intUid:e})}get intUid(){return this.state.intUid}set pubId(e){this.dispatch({type:ZA.SET_PUB_ID,pubId:e})}get pubId(){return this.state.pubId}set cloudProxyServerMode(e){this.dispatch({type:ZA.SET_CLOUD_PROXY_SERVER_MODE,mode:e})}get cloudProxyServerMode(){return this.state.cloudProxyServerMode}set useP2P(e){this.dispatch({type:ZA.SET_USE_P2P,val:e})}get useP2P(){return this.state.useP2P}set p2pTransport(e){this.dispatch({type:ZA.SET_TRANSPORT_TYPE,val:e})}get p2pTransport(){return this.state.p2pTransport}clientCreated(){this.dispatch({type:ZA.KEY_METRIC_CLIENT_CREATED,metric:Date.now()})}joinStart(){this.dispatch({type:ZA.KEY_METRIC_JOIN_START,metric:Date.now()})}joinEnd(){this.dispatch({type:ZA.KEY_METRIC_JOIN_END,metric:Date.now()})}requestAPStart(){this.dispatch({type:ZA.KEY_METRIC_REQUEST_AP_START,metric:Date.now()})}requestAPEnd(){this.dispatch({type:ZA.KEY_METRIC_REQUEST_AP_END,metric:Date.now()})}joinGatewayStart(){this.dispatch({type:ZA.KEY_METRIC_JOIN_GATEWAY_START,metric:Date.now()})}joinGatewayEnd(){this.dispatch({type:ZA.KEY_METRIC_JOIN_GATEWAY_END,metric:Date.now()})}peerConnectionStart(){this.dispatch({type:ZA.KEY_METRIC_PEER_CONNECTION_START,metric:Date.now()})}peerConnectionEnd(){this.dispatch({type:ZA.KEY_METRIC_PEER_CONNECTION_END,metric:Date.now()})}descriptionStart(){this.dispatch({type:ZA.KEY_METRIC_DESCRIPTION_START,metric:Date.now()})}signalChannelOpen(){this.dispatch({type:ZA.KEY_METRIC_SIGNAL_CHANNEL_OPEN,metric:Date.now()})}iceConnectionEnd(){this.dispatch({type:ZA.KEY_METRIC_ICE_CONNECTION_END,metric:Date.now()})}publish(e,t,i,n){this.dispatch({type:ZA.KEY_METRIC_PUBLISH,metric:gy(gy({trackId:e,type:t},i&&{publishStart:i}),n&&{publishEnd:n})})}subscribe(e,t,i,n,r,o,s){this.dispatch({type:ZA.KEY_METRIC_SUBSCRIBE,metric:gy(gy(gy(gy(gy({userId:e,type:t},i&&{subscribeStart:i}),n&&{subscribeEnd:n}),r&&{firstFrame:r}),o&&{streamAdded:o}),s&&{firstDecoded:s})})}massSubscribe(e,t,i,n){e.forEach((e=>{this.dispatch({type:ZA.KEY_METRIC_SUBSCRIBE,metric:gy(gy(gy({userId:e.userId,type:e.type},t&&{subscribeStart:t}),i&&{subscribeEnd:i}),n&&{firstFrame:n})})}))}get keyMetrics(){return this.state.keyMetrics}recordJoinChannelService(e,t){\"gateway\"===e.service&&Array.isArray(e.urls)&&(e.urls=e.urls.map((e=>e.replace(/(\\d+)-\\d+-\\d+-(\\d+)/,\"$1-*-*-$2\"))));try{return\"number\"!=typeof t?(this.dispatch({type:ZA.RECORD_JOIN_CHANNEL_SERVICE,record:gy(gy({},e),{},{sessionId:this.sessionId,cloudProxyMode:this.cloudProxyServerMode,uid:this.uid})}),this.state.joinChannelServiceRecords.length-1):(t<0||t>=this.state.joinChannelServiceRecords.length||this.dispatch({type:ZA.RECORD_JOIN_CHANNEL_SERVICE,record:e,index:t}),t)}catch(e){return 0}}resetJoinChannelServiceRecords(){this.dispatch({type:ZA.RESET_JOIN_CHANNEL_SERVICE_RECORDS})}resetKeyMetrics(){this.dispatch({type:ZA.RESET_KEY_METRICS})}get joinChannelServiceRecords(){try{return this.state.joinChannelServiceRecords}catch(e){return[]}}get avoidJoinStart(){return this.state.avoidJoinStart}set avoidJoinStart(e){this.dispatch({type:ZA.AVOID_JOIN_START,avoidJoinStart:e})}}let eb=function(e){return e.h264=\"h264\",e.h265=\"h265\",e.vp8=\"vp8\",e.vp9=\"vp9\",e.av1=\"av1\",e}({});!function(e){e.opus=\"opus\",e.pcma=\"pcma\",e.pcmu=\"pcmu\",e.g722=\"g722\"}({});const tb=128,ib=96,nb=1e3,rb=10;let ob=0;function sb(e,t,i){return(t=function(e){var t=function(e,t){if(\"object\"!=typeof e||!e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,\"string\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e);return\"symbol\"==typeof t?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function ab(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function cb(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?ab(Object(i),!0).forEach((function(t){sb(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):ab(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const db=new class extends xy{constructor(){super(...arguments),sb(this,\"currentUploadLogID\",0)}reportLogUploadError(e){const{errorRange:t}=e;t[t.length-1]&&t[t.length-1]>this.currentUploadLogID&&(this.currentUploadLogID=t[t.length-1],this.emit(\"REPORT_LOG_UPLOAD\",e))}};class lb{constructor(e){sb(this,\"logger\",void 0),sb(this,\"prefixLists\",[]),this.logger=e}debug(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.debug(...this.prefixLists,...t)}info(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.info(...this.prefixLists,...t)}warning(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.warning(...this.prefixLists,...t)}error(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.error(...this.prefixLists,...t)}prefix(e){return this.prefixLists.push(e),this}popPrefix(){return this.prefixLists.pop(),this}}function ub(){const e=new Date;return e.toTimeString().split(\" \")[0]+\":\"+e.getMilliseconds()}function hb(){const e=new Date,t=/((\\d+:){2}\\d+)/.exec((new Date).toUTCString());return t?(null==t?void 0:t[0])+\":\"+e.getUTCMilliseconds():e.toTimeString().split(\" \")[0]+\":\"+e.getMilliseconds()}const pb={DEBUG:0,INFO:1,WARNING:2,ERROR:3,NONE:4},_b=Date.now(),Eb=e=>{for(const t in pb)if(Object.prototype.hasOwnProperty.call(pb,t)&&pb[t]===e)return t;return\"DEFAULT\"};const fb=new class{constructor(){sb(this,\"proxyServerURL\",void 0),sb(this,\"logLevel\",pb.DEBUG),sb(this,\"uploadState\",\"collecting\"),sb(this,\"uploadLogWaitingList\",[]),sb(this,\"uploadLogUploadingList\",[]),sb(this,\"uploadErrorCount\",0),sb(this,\"currentLogID\",0),sb(this,\"url\",void 0),sb(this,\"extLog\",((e,t)=>{this.appendLogToWaitingList(e,...t)}))}debug(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[pb.DEBUG].concat(t);this.log.apply(this,n)}info(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[pb.INFO].concat(t);this.log.apply(this,n)}warning(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[pb.WARNING].concat(t);this.log.apply(this,n)}warn(){this.warning(...arguments)}error(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[pb.ERROR].concat(t);this.log.apply(this,n)}upload(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[pb.DEBUG].concat(t);this.uploadLog.apply(this,n)}setLogLevel(e){e=Math.min(Math.max(0,e),4),this.logLevel=e}enableLogUpload(){JA(\"UPLOAD_LOG\",!0)}disableLogUpload(){JA(\"UPLOAD_LOG\",!1),this.uploadLogUploadingList=[],this.uploadLogWaitingList=[]}setProxyServer(e){this.proxyServerURL=e}prefix(e){return new lb(this).prefix(e)}log(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];if(Date.now()-_b<100)return void setTimeout((()=>{this.log(...t)}),Date.now()-_b);const n=Math.max(0,Math.min(4,t[0]));if(t[0]=ub()+\" Agora-SDK [\".concat(Eb(n),\"]:\"),this.appendLogToWaitingList(n,...t),n<this.logLevel)return;const r=ub()+\" %cAgora-SDK [\".concat(Eb(n),\"]:\");let o=[];if(!XA(\"USE_NEW_LOG\"))switch(n){case pb.DEBUG:o=[r,\"color: #64B5F6;\"].concat(t.slice(1)),console.log.apply(console,o);break;case pb.INFO:o=[r,\"color: #1E88E5; font-weight: bold;\"].concat(t.slice(1)),console.log.apply(console,o);break;case pb.WARNING:o=[r,\"color: #FB8C00; font-weight: bold;\"].concat(t.slice(1)),console.warn.apply(console,o);break;case pb.ERROR:o=[r,\"color: #B00020; font-weight: bold;\"].concat(t.slice(1)),console.error.apply(console,o)}}uploadLog(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];if(Date.now()-_b<100)return void setTimeout((()=>{this.uploadLog(...t)}),Date.now()-_b);const n=Math.max(0,Math.min(4,t[0]));t[0]=ub()+\" Agora-SDK [\".concat(Eb(n),\"]:\"),this.appendLogToWaitingList(n,...t)}appendLogToWaitingList(e){if(!XA(\"UPLOAD_LOG\"))return;for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];Array.isArray(i[0])?i[0][0]=hb()+\" Agora-SDK [\".concat(Eb(e),\"]:\"):i[0]=hb()+\" Agora-SDK [\".concat(Eb(e),\"]:\");let r=\"\";i.forEach((e=>{\"object\"==typeof e&&(e=JSON.stringify(e)),r+=\"\".concat(e,\" \")})),this.uploadLogWaitingList.push({payload_str:r,log_level:e,log_item_id:this.currentLogID++}),\"uploading\"===this.uploadState&&0===this.uploadLogUploadingList.length&&this.uploadLogInterval()}startUpload(){this.uploadState=\"uploading\",0===this.uploadLogUploadingList.length&&this.uploadLogInterval()}async uploadLogs(){const e=this.uploadLogUploadingList,t={sdk_version:GA,process_id:XA(\"PROCESS_ID\"),payload:JSON.stringify(e)};return kA((async()=>{const e=await Lv.post(this.url||(this.proxyServerURL?\"https://\".concat(this.proxyServerURL,\"/ls/?h=\").concat(XA(\"LOG_UPLOAD_SERVER\"),\"&p=443&d=upload/v1\"):\"https://\".concat(XA(\"LOG_UPLOAD_SERVER\"),\"/upload/v1\")),t,{responseType:\"text\"});if(\"OK\"!==e.data){const t=new Error(\"unexpected upload log response\");throw t.response=e,t}}),(()=>(this.uploadLogUploadingList=[],!1)),(t=>{const i={status:-1,message:t.message,errorRange:e.map((e=>e.log_item_id))};return t.response?(i.status=t.response.status,i.data=t.response.data,i.headers=t.response.headers):t.request&&(i.status=t.request.status),db.reportLogUploadError(i),!0}),{timeout:XA(\"UPLOAD_LOG_REQUEST_RETRY_INTERVAL\"),maxRetryTimeout:XA(\"UPLOAD_LOG_REQUEST_MAX_RETRY_INTERVAL\")})}uploadLogInterval(){0===this.uploadLogUploadingList.length&&0===this.uploadLogWaitingList.length||(0===this.uploadLogUploadingList.length&&(this.uploadLogUploadingList=this.uploadLogWaitingList.splice(0,XA(\"UPLOAD_LOG_LENGTH_EACH_TIME\"))),this.uploadLogs().then((()=>{this.uploadErrorCount=0,this.uploadLogWaitingList.length>0&&window.setTimeout((()=>this.uploadLogInterval()),XA(\"UPLOAD_LOG_INTERVAL\"))})).catch((e=>{this.uploadErrorCount+=1,this.uploadErrorCount<2?window.setTimeout((()=>this.uploadLogInterval()),XA(\"UPLOAD_LOG_TWICE_RETRY_INTERVAL_V1\")):window.setTimeout((()=>this.uploadLogInterval()),XA(\"UPLOAD_LOG_RETRY_INTERVAL_V1\"))})))}};var mb;function Tb(e){return by(e.reportId,\"params.reportId\",0,100,!1),by(e.category,\"params.category\",0,100,!1),by(e.event,\"params.event\",0,100,!1),by(e.label,\"params.label\",0,100,!1),yy(e.value,\"params.value\",Number.MIN_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,!1),!0}(mb={}).FREE=\"free\",mb.UPLOADING=\"uploading\",function(e){e[e.MISC=0]=\"MISC\",e[e.INTERNAL_EVENT=1]=\"INTERNAL_EVENT\",e[e.PUBLIC_EVENT=2]=\"PUBLIC_EVENT\",e[e.WEB_EVENT=3]=\"WEB_EVENT\",e[e.INTERNAL_API=4]=\"INTERNAL_API\",e[e.WEB_API=5]=\"WEB_API\",e[e.PUBLIC_API=6]=\"PUBLIC_API\"}({});const Sb={sid:\"\",lts:0,success:null,cname:null,uid:null,peer:null,cid:null,elapse:null,extend:null,vid:0};let gb=function(e){return e.PUBLISH=\"publish\",e.SUBSCRIBE=\"subscribe\",e.WS_COMPRESSOR_INIT=\"ws_compressor_init\",e.SESSION_INIT=\"session_init\",e.JOIN_CHOOSE_SERVER=\"join_choose_server\",e.REQ_USER_ACCOUNT=\"req_user_account\",e.JOIN_GATEWAY=\"join_gateway\",e.REJOIN_GATEWAY=\"rejoin_gateway\",e.STREAM_SWITCH=\"stream_switch\",e.REQUEST_PROXY_WORKER_MANAGER=\"request_proxy_worker_manager\",e.REQUEST_PROXY_APPCENTER=\"request_proxy_appcenter\",e.FIRST_VIDEO_RECEIVED=\"first_video_received\",e.FIRST_AUDIO_RECEIVED=\"first_audio_received\",e.FIRST_VIDEO_DECODE=\"first_video_decode\",e.FIRST_AUDIO_DECODE=\"first_audio_decode\",e.ON_ADD_AUDIO_STREAM=\"on_add_audio_stream\",e.ON_ADD_VIDEO_STREAM=\"on_add_video_stream\",e.ON_UPDATE_STREAM=\"on_update_stream\",e.ON_REMOVE_STREAM=\"on_remove_stream\",e.USER_ANALYTICS=\"req_user_analytics\",e.PC_STATS=\"pc_stats\",e.UPDATE_REMOTE_RTPCAPABILITIES=\"update_remote_rtpCapabilities\",e}({}),Rb=function(e){return e.SESSION=\"io.agora.pb.Wrtc.Session\",e.JOIN_CHOOSE_SERVER=\"io.agora.pb.Wrtc.JoinChooseServer\",e.REQ_USER_ACCOUNT=\"io.agora.pb.Wrtc.ReqUserAccount\",e.JOIN_GATEWAY=\"io.agora.pb.Wrtc.JoinGateway\",e.RE_JOIN_GATEWAY=\"io.agora.pb.Wrtc.ReJoinGateway\",e.PUBLISH=\"io.agora.pb.Wrtc.Publish\",e.SUBSCRIBE=\"io.agora.pb.Wrtc.Subscribe\",e.WS_COMPRESSOR_INIT=\"io.agora.pb.Wrtc.WsCompressorInit\",e.STREAM_SWITCH=\"io.agora.pb.Wrtc.StreamSwitch\",e.AUDIO_SENDING_STOPPED=\"io.agora.pb.Wrtc.AudioSendingStopped\",e.VIDEO_SENDING_STOPPED=\"io.agora.pb.Wrtc.VideoSendingStopped\",e.REQUEST_PROXY_APPCENTER=\"io.agora.pb.Wrtc.RequestProxyAppCenter\",e.REQUEST_PROXY_WORKER_MANAGER=\"io.agora.pb.Wrtc.RequestProxyWorkerManager\",e.API_INVOKE=\"io.agora.pb.Wrtc.ApiInvoke\",e.FIRST_VIDEO_RECEIVED=\"io.agora.pb.Wrtc.FirstVideoReceived\",e.FIRST_AUDIO_RECEIVED=\"io.agora.pb.Wrtc.FirstAudioReceived\",e.FIRST_VIDEO_DECODE=\"io.agora.pb.Wrtc.FirstVideoDecode\",e.FIRST_AUDIO_DECODE=\"io.agora.pb.Wrtc.FirstAudioDecode\",e.ON_ADD_AUDIO_STREAM=\"io.agora.pb.Wrtc.OnAddAudioStream\",e.ON_ADD_VIDEO_STREAM=\"io.agora.pb.Wrtc.OnAddVideoStream\",e.ON_UPDATE_STREAM=\"io.agora.pb.Wrtc.OnUpdateStream\",e.ON_REMOVE_STREAM=\"io.agora.pb.Wrtc.OnRemoveStream\",e.JOIN_CHANNEL_TIMEOUT=\"io.agora.pb.Wrtc.JoinChannelTimeout\",e.PEER_PUBLISH_STATUS=\"io.agora.pb.Wrtc.PeerPublishStatus\",e.WORKER_EVENT=\"io.agora.pb.Wrtc.WorkerEvent\",e.AP_WORKER_EVENT=\"io.agora.pb.Wrtc.APWorkerEvent\",e.JOIN_WEB_PROXY_AP=\"io.agora.pb.Wrtc.JoinWebProxyAP\",e.WEBSOCKET_QUIT=\"io.agora.pb.Wrtc.WebSocketQuit\",e.USER_ANALYTICS=\"io.agora.pb.Wrtc.UserAnalytics\",e.AUTOPLAY_FAILED=\"io.agora.pb.Wrtc.AutoplayFailed\",e.PC_STATS=\"io.agora.pb.Wrtc.PCStats\",e.UPDATE_REMOTE_RTPCAPABILITIES=\"io.agora.pb.Wrtc.UpdateRemoteRTPCapabilities\",e}({});!function(e){e[e.WORKER_EVENT=156]=\"WORKER_EVENT\",e[e.AP_WORKER_EVENT=160]=\"AP_WORKER_EVENT\"}({});let Cb=function(e){return e[e.SESSION=26]=\"SESSION\",e[e.JOIN_CHOOSE_SERVER=27]=\"JOIN_CHOOSE_SERVER\",e[e.REQ_USER_ACCOUNT=196]=\"REQ_USER_ACCOUNT\",e[e.JOIN_GATEWAY=28]=\"JOIN_GATEWAY\",e[e.PUBLISH=30]=\"PUBLISH\",e[e.SUBSCRIBE=29]=\"SUBSCRIBE\",e[e.WS_COMPRESSOR_INIT=9430]=\"WS_COMPRESSOR_INIT\",e[e.STREAM_SWITCH=32]=\"STREAM_SWITCH\",e[e.AUDIO_SENDING_STOPPED=33]=\"AUDIO_SENDING_STOPPED\",e[e.VIDEO_SENDING_STOPPED=34]=\"VIDEO_SENDING_STOPPED\",e[e.REQUEST_PROXY_APPCENTER=35]=\"REQUEST_PROXY_APPCENTER\",e[e.REQUEST_PROXY_WORKER_MANAGER=36]=\"REQUEST_PROXY_WORKER_MANAGER\",e[e.API_INVOKE=41]=\"API_INVOKE\",e[e.FIRST_VIDEO_RECEIVED=348]=\"FIRST_VIDEO_RECEIVED\",e[e.FIRST_AUDIO_RECEIVED=349]=\"FIRST_AUDIO_RECEIVED\",e[e.FIRST_VIDEO_DECODE=350]=\"FIRST_VIDEO_DECODE\",e[e.FIRST_AUDIO_DECODE=351]=\"FIRST_AUDIO_DECODE\",e[e.ON_ADD_AUDIO_STREAM=352]=\"ON_ADD_AUDIO_STREAM\",e[e.ON_ADD_VIDEO_STREAM=353]=\"ON_ADD_VIDEO_STREAM\",e[e.ON_UPDATE_STREAM=356]=\"ON_UPDATE_STREAM\",e[e.ON_REMOVE_STREAM=355]=\"ON_REMOVE_STREAM\",e[e.JOIN_CHANNEL_TIMEOUT=407]=\"JOIN_CHANNEL_TIMEOUT\",e[e.PEER_PUBLISH_STATUS=408]=\"PEER_PUBLISH_STATUS\",e[e.WORKER_EVENT=156]=\"WORKER_EVENT\",e[e.AP_WORKER_EVENT=160]=\"AP_WORKER_EVENT\",e[e.JOIN_WEB_PROXY_AP=700]=\"JOIN_WEB_PROXY_AP\",e[e.WEBSOCKET_QUIT=671]=\"WEBSOCKET_QUIT\",e[e.USER_ANALYTICS=1e4]=\"USER_ANALYTICS\",e[e.AUTOPLAY_FAILED=9178]=\"AUTOPLAY_FAILED\",e}({});function Ib(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return function(t,i,n){const r=n.value;if(\"function\"==typeof r){const o=e.className||t.__className__||(\"AgoraRTCClient\"===t.constructor.name?\"Client\":t.constructor.name);n.value=function(){for(var t=arguments.length,n=new Array(t),s=0;s<t;s++)n[s]=arguments[s];let a=n;if(e.argsMap)try{a=e.argsMap(this,...n)}catch(e){fb.warning(e),a=[]}try{JSON.stringify(a)}catch(e){fb.warning(\"arguments for method \".concat(o,\".\").concat(String(i),\" not serializable for apiInvoke.\")),a=[]}const c=(e.report||vb).reportApiInvoke(this._sessionId||null,{name:\"\".concat(o,\".\").concat(String(i)),options:a,tag:jy.TRACER,reportResult:e.reportResult},e.throttleTime);try{const t=r.apply(this,n);return t instanceof Gh?t.then((t=>(c.onSuccess(e.reportResult&&t),t))).catch((e=>{throw c.onError(e),e})):(c.onSuccess(e.reportResult&&t),t)}catch(e){throw c.onError(e),e}}}return n}}const vb=new class{constructor(){sb(this,\"baseInfoMap\",new Map),sb(this,\"proxyServer\",void 0),sb(this,\"eventUploadTimer\",void 0),sb(this,\"setSessionIdTimer\",void 0),sb(this,\"url\",void 0),sb(this,\"sids\",new Set),sb(this,\"backupUrl\",void 0),sb(this,\"_appId\",void 0),sb(this,\"keyEventUploadPendingItems\",[]),sb(this,\"normalEventUploadPendingItems\",[]),sb(this,\"apiInvokeUploadPendingItems\",[]),sb(this,\"apiInvokeCount\",0),sb(this,\"ltsList\",[]),sb(this,\"lastSendNormalEventTime\",Date.now()),sb(this,\"customReportCounterTimer\",void 0),sb(this,\"customReportCount\",0),sb(this,\"extApiInvoke\",(async e=>{for(const t of e){const e=cb(cb({},t),{},{sid:null,invokeId:++this.apiInvokeCount,tag:jy.TRACER});this.sendApiInvoke(e)}})),this.eventUploadTimer=window.setInterval(this.doSend.bind(this),XA(\"EVENT_REPORT_SEND_INTERVAL\")),this.setSessionIdTimer=window.setInterval(this.appendSessionId.bind(this),XA(\"EVENT_REPORT_SEND_INTERVAL\"))}getBaseInfoBySessionId(e){return this.baseInfoMap.get(e)}adjustSessionStartTime(e){if(!this.baseInfoMap.has(e)&&!this.baseInfoMap.get(e))return void fb.error(\"adjust session \".concat(e,\" start time, sid is not exist or info is undefined\"));const t=this.baseInfoMap.get(e),i=Date.now(),n=t.startTime;t.startTime=i,fb.debug(\"rewrite session \".concat(e,\" startTime: \").concat(i,\" , \").concat(i-n,\"ms\")),this.baseInfoMap.set(e,t)}setAppId(e){this._appId=e}reportApiInvoke(e,t,i){t.timeout=t.timeout||6e4,t.reportResult=void 0===t.reportResult||t.reportResult;const n=Date.now();this.apiInvokeCount+=1;const r=this.apiInvokeCount,o=()=>({tag:t.tag,invokeId:r,sid:e,name:t.name,apiInvokeTime:n,options:t.options,states:t.states||null}),s=!!XA(\"SHOW_REPORT_INVOKER_LOG\");s&&fb.info(\"\".concat(t.name,\" start\"),t.options);let a=!1;mA(t.timeout).then((()=>{a||(this.sendApiInvoke(cb(cb({},o()),{},{error:Ry.API_INVOKE_TIMEOUT,success:!1})),fb.debug(\"\".concat(t.name,\" timeout\")))}));const c=new Cy(Ry.UNEXPECTED_ERROR,\"\".concat(t.name,\": this api invoke is end\"));return{onSuccess:e=>{const n=()=>{if(a)throw c;return a=!0,this.sendApiInvoke(cb(cb({},o()),{},{success:!0},t.reportResult&&{result:e})),s&&fb.info(\"\".concat(t.name,\" onSuccess\")),e};return i?CA(n,t.name+\"Success\",i,(()=>a=!0)):n()},onError:e=>{const n=()=>{if(a)throw e;a=!0,this.sendApiInvoke(cb(cb({},o()),{},{success:!1,error:e})),s&&fb.info(\"\".concat(t.name,\" onFailure\"),e.toString())};return i?CA(n,t.name+\"Error\",i,(()=>a=!0)):n()}}}sessionInit(e,t){if(this.baseInfoMap.has(e))return;const i=Date.now(),n=this.createBaseInfo(e,i);n.cname=t.cname;const r=Object.assign({},{willUploadConsoleLog:XA(\"UPLOAD_LOG\"),maxTouchPoints:navigator.maxTouchPoints,areaVersion:WA?\"global\":\"oversea\",areas:XA(\"AREAS\")&&XA(\"AREAS\").join(\",\")},t.extend),{stringUid:o,channelProfile:s,channelMode:a,isABTestSuccess:c,lsid:d,clientRole:l}=t,u=Date.now(),h=cb(cb({},n),{},{eventType:gb.SESSION_INIT,appid:t.appid,browser:navigator.userAgent,buildFormat:t.buildFormat,build:qA,lts:u,elapse:u-i,extend:JSON.stringify(r),mode:t.mode,process:XA(\"PROCESS_ID\"),appType:XA(\"APP_TYPE\"),success:!0,version:GA,stringUid:o,channelProfile:s,channelMode:a,isABTestSuccess:c,lsid:d,clientType:Dn(p=window.navigator.userAgent).call(p,\"AgoraWebView\")?42:20,clientRole:l,serviceId:XA(\"PROCESS_ID\"),extensionID:XA(\"PLUGIN_INFO\").join(\",\")||\"\"});var p;this.send({type:Rb.SESSION,data:h},!0)}joinChooseServer(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=cb(cb({},n),{},{eventType:gb.JOIN_CHOOSE_SERVER,lts:r,eventElapse:t.elapse||r-t.lts,chooseServerAddr:t.csAddr,errorCode:t.ec,elapse:r-i.startTime,success:t.succ,chooseServerAddrList:JSON.stringify(t.serverList),uid:t.uid?parseInt(t.uid):null,cid:t.cid?parseInt(t.cid):null,chooseServerIp:t.csIp||\"\",opid:t.opid,unilbsServerIds:t.unilbsServerIds,extend:t.extend||void 0,isHttp3:t.isHttp3,corssRegionTagReq:t.corssRegionTagReq||void 0,corssRegionTagRes:t.corssRegionTagRes||void 0});this.send({type:Rb.JOIN_CHOOSE_SERVER,data:o},!0)}reqUserAccount(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=cb(cb({},n),{},{eventType:gb.REQ_USER_ACCOUNT,lts:r,success:t.success,serverAddress:t.serverAddr,stringUid:t.stringUid,uid:t.uid,errorCode:t.errorCode,elapse:t.elapse||r-i.startTime,eventElapse:r-t.lts,extend:JSON.stringify(t.extend)});this.send({type:Rb.REQ_USER_ACCOUNT,data:o},!0)}joinGateway(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info;t.vid&&(n.vid=t.vid),n.uid=t.uid,n.cid=t.cid;const r=Date.now(),{firstSuccess:o,avoidJoinStartTime:s}=t,a=r-(o&&s?s:i.startTime),c=cb(cb({},n),{},{eventType:gb.JOIN_GATEWAY,lts:r,gatewayAddr:t.addr,success:t.succ,errorCode:t.ec,errorMsg:t.errorMsg||\"\",elapse:a,eventElapse:r-t.lts,firstSuccess:o,signalChannel:t.signalChannel,preload:t.preload?1:0});t.succ&&(i.lastJoinSuccessTime=r),this.send({type:Rb.JOIN_GATEWAY,data:c},!0)}joinChannelTimeout(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=Date.now(),r=cb(cb({},i.info),{},{lts:n,timeout:t,elapse:n-i.startTime});this.send({type:Rb.JOIN_CHANNEL_TIMEOUT,data:r},!0)}publish(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=cb(cb({},n),{},{eventType:gb.PUBLISH,lts:r,eventElapse:t.eventElapse,elapse:r-i.startTime,success:t.succ,errorCode:t.ec,videoName:t.videoName,audioName:t.audioName,screenName:t.screenName,screenshare:t.screenshare,audio:t.audio,video:t.video,p2pid:t.p2pid,publishRequestid:t.publishRequestid});this.send({type:Rb.PUBLISH,data:o},!0)}subscribe(e,t,i){const n=this.baseInfoMap.get(e);if(!n)return;const r=n.info,o=Date.now(),s=cb(cb({},r),{},{eventType:gb.SUBSCRIBE,lts:o,eventElapse:t.eventElapse,elapse:o-n.startTime,success:t.succ,errorCode:t.ec,video:t.video,audio:t.audio,subscribeRequestid:t.subscribeRequestid,p2pid:t.p2pid,preSsrc:t.preSsrc?1:0},i&&{extend:JSON.stringify({isMassSubscribe:!0})});\"string\"==typeof t.peerid?s.peerSuid=t.peerid:s.peer=t.peerid,this.send({type:Rb.SUBSCRIBE,data:s},!0)}wsCompressorInit(e){var t;const i=[...d_(t=this.baseInfoMap).call(t)],n=i.length?i[0]:\"UnableToGetSid\",r=this.baseInfoMap.get(n);if(!r)return;const o=r.info,s=Date.now(),a=cb(cb({},o),{},{eventType:gb.WS_COMPRESSOR_INIT,lts:s,eventElapse:e.eventElapse,elapse:s-r.startTime,status:e.status?1:2});this.send({type:Rb.WS_COMPRESSOR_INIT,data:a},!0)}firstRemoteVideoDecode(e,t,i,n){const r=this.baseInfoMap.get(e);if(!r)return;const o=r.info,s=Date.now(),a=cb(cb(cb({},o),n),{},{elapse:s-r.startTime,eventType:t,lts:s,firstDecodeFrame:Math.max((n.firstFrame||s)-r.startTime,0),apEnd:Math.max(n.apEnd-r.startTime,0),apStart:Math.max(n.apStart-r.startTime,0),joinGwEnd:Math.max(n.joinGwEnd-r.startTime,0),joinGwStart:Math.max(n.joinGwStart-r.startTime,0),pcEnd:Math.max(n.pcEnd-r.startTime,0),pcStart:Math.max(n.pcStart-r.startTime,0),subscriberEnd:Math.max(n.subscriberEnd-r.startTime,0),subscriberStart:Math.max(n.subscriberStart-r.startTime,0),videoAddNotify:Math.max(n.videoAddNotify-r.startTime,0)});this.send({type:i,data:a},!0)}firstRemoteFrame(e,t,i,n){const r=this.baseInfoMap.get(e);if(!r)return;const o=r.info,s=Date.now(),a=cb(cb(cb({},o),n),{},{elapse:s-r.startTime,eventType:t,lts:s});this.send({type:i,data:a},!0)}pcStats(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=cb(cb(cb({},n),t),{},{vid:void 0===n.vid?0:Number(n.vid),elapse:r-i.startTime,eventType:gb.PC_STATS,lts:r,preallocation:t.preallocation?1:0});this.send({type:Rb.PC_STATS,data:o},!0)}updateRemoteRTPCapabilities(e,t){if(e){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=cb(cb(cb({},n),t),{},{vid:void 0===n.vid?0:Number(n.vid),eventType:gb.UPDATE_REMOTE_RTPCAPABILITIES,lts:r});this.send({type:Rb.UPDATE_REMOTE_RTPCAPABILITIES,data:o},!0)}}onGatewayStream(e,t,i,n){const r=this.baseInfoMap.get(e);if(!r)return;const o=r.info,s=Date.now(),a=cb(cb(cb({},o),n),{},{eventType:t,lts:s});this.send({type:i,data:a},!0)}streamSwitch(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=cb(cb({},n),{},{eventType:gb.STREAM_SWITCH,lts:r,isDual:t.isdual,elapse:r-i.startTime,success:t.succ});this.send({type:Rb.STREAM_SWITCH,data:o},!0)}requestProxyAppCenter(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=cb(cb({},n),{},{eventType:gb.REQUEST_PROXY_APPCENTER,lts:r,eventElapse:r-t.lts,elapse:r-i.startTime,APAddr:t.APAddr,workerManagerList:t.workerManagerList,response:t.response,errorCode:t.ec,success:t.succ});this.send({type:Rb.REQUEST_PROXY_APPCENTER,data:o},!0)}requestProxyWorkerManager(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=cb(cb({},n),{},{eventType:gb.REQUEST_PROXY_WORKER_MANAGER,lts:r,eventElapse:r-t.lts,elapse:r-i.startTime,workerManagerAddr:t.workerManagerAddr,response:t.response,errorCode:t.ec,success:t.succ});this.send({type:Rb.REQUEST_PROXY_WORKER_MANAGER,data:o},!0)}setProxyServer(e){this.proxyServer=e,e?fb.debug(\"reportProxyServerurl: \".concat(e)):fb.debug(\"disable reportProxyServerurl: \".concat(e))}peerPublishStatus(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=cb(cb({},n),{},{subscribeElapse:t.subscribeElapse,peer:t.peer,peerPublishDuration:Math.max(t.audioPublishDuration,t.videoPublishDuration),audiotag:t.audioPublishDuration>0?1:-1,videotag:t.videoPublishDuration>0?1:-1,lts:r,elapse:r-i.startTime,joinChannelSuccessElapse:r-(i.lastJoinSuccessTime||r),peerPublishDurationVideo:t.videoPublishDuration,peerPublishDurationAudio:t.audioPublishDuration});this.send({type:Rb.PEER_PUBLISH_STATUS,data:o},!0)}workerEvent(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now();(function(e,t,i){const n=e[t];if(!n||\"string\"!=typeof n)return[e];e[t]=\"\";const r=_A(JSON.stringify(e));let o=0;const s=[];let a=0;for(let c=0;c<n.length;c++)a+=n.charCodeAt(c)<=127?1:3,a<=i-r||(s[s.length]=gy(gy({},e),{},{[t]:n.substring(o,c)}),o=c,a=n.charCodeAt(c)<=127?1:3);return o!==n.length-1&&(s[s.length]=gy(gy({},e),{},{[t]:n.substring(o)})),s})(cb(cb(cb({},n),t),{},{elapse:r-i.startTime,lts:r,productType:\"WebRTC\"}),\"payload\",1300).forEach((e=>this.send({type:Rb.WORKER_EVENT,data:e},!0)))}apworkerEvent(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=cb(cb(cb({},n),t),{},{elapse:r-i.startTime,lts:r});this.send({type:Rb.AP_WORKER_EVENT,data:o},!0)}joinWebProxyAP(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=cb(cb(cb({},n),t),{},{elapse:r-i.startTime,lts:r,extend:t.extend||void 0});this.send({type:Rb.JOIN_WEB_PROXY_AP,data:o},!0)}WebSocketQuit(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=cb(cb(cb({},n),t),{},{elapse:r-i.startTime,lts:r});this.send({type:Rb.WEBSOCKET_QUIT,data:o},!0)}async sendCustomReportMessage(e,t){if(this.customReportCount+=t.length,this.customReportCount>XA(\"CUSTOM_REPORT_LIMIT\"))throw new Cy(Ry.CUSTOM_REPORT_FREQUENCY_TOO_HIGH);this.customReportCounterTimer||(this.customReportCounterTimer=window.setInterval((()=>{this.customReportCount=0}),5e3));const i=Date.now(),n=t.map((t=>({type:Rb.USER_ANALYTICS,data:cb(cb({sid:e},t),{},{lts:i})})));try{XA(\"NEW_REPORT_SERVER\")?await this.postDataToStatsCollector2(n):await this.postDataToStatsCollector(n)}catch(e){throw fb.error(\"send custom report message failed\",e.toString()),new Cy(Ry.CUSTOM_REPORT_SEND_FAILED,e.message)}}sendApiInvoke(e){const t=XA(\"NOT_REPORT_EVENT\");if(e.tag&&Dn(t)&&Dn(t).call(t,e.tag))return!1;if(null===e.sid)return this.apiInvokeUploadPendingItems.push(e),!1;const i=this.baseInfoMap.get(e.sid);if(!i)return this.apiInvokeUploadPendingItems.push(e),!1;const{cname:n,uid:r,cid:o}=i.info;let s;if(e.lts=e.lts||Date.now(),e.error)if(e.error instanceof Cy){const{code:t,message:i}=e.error;s=t||i||e.error.toString()}else s=e.error.toString();const a={invokeId:e.invokeId,sid:e.sid,cname:n,cid:o,uid:r,lts:e.lts,success:e.success,elapse:e.lts-i.startTime,execElapse:e.lts-e.apiInvokeTime,apiName:e.name,options:e.options?JSON.stringify(e.options):void 0,execStates:e.states?JSON.stringify(e.states):void 0,execResult:e.result?JSON.stringify(e.result):void 0,errorCode:e.error?s:void 0,errorMsg:e.error?JSON.stringify(e.error):void 0};return this.send({type:Rb.API_INVOKE,data:a},!1),!0}addSid(e){this.sids.add(e)}removeSid(e){this.sids.delete(e)}appendSessionId(){const e=this.apiInvokeUploadPendingItems;if(0===e.length)return;const t=Array.from(this.sids).find((e=>null!==e));t&&e.forEach((e=>{e&&(e.sid=t,this.sendApiInvoke(Object.assign({},e)))})),e.length=0}send(e,t){if(t)return this.keyEventUploadPendingItems.push(e),void this.sendItems(this.keyEventUploadPendingItems,!0);this.normalEventUploadPendingItems.push(e),this.normalEventUploadPendingItems.length>XA(\"NORMAL_EVENT_QUEUE_CAPACITY\")&&this.normalEventUploadPendingItems.splice(0,1),this.normalEventUploadPendingItems.length>=10&&this.sendItems(this.normalEventUploadPendingItems,!1)}doSend(){this.keyEventUploadPendingItems.length>0&&this.sendItems(this.keyEventUploadPendingItems,!0),this.normalEventUploadPendingItems.length>0&&Date.now()-this.lastSendNormalEventTime>=5e3&&this.sendItems(this.normalEventUploadPendingItems,!1)}sendItems(e,t){const i=[],n=[];for(;e.length;){const t=e.shift();i.length<20?i.push(t):n.push(t)}e.push(...n);for(const e of[...i]){var r;-1!==this.ltsList.indexOf(e.data.lts)?(e.data.lts=this.ltsList[this.ltsList.length-1]+1,this.ltsList.push(e.data.lts)):(this.ltsList.push(e.data.lts),aE(r=this.ltsList).call(r,((e,t)=>e-t)))}return t||(this.lastSendNormalEventTime=Date.now()),XA(\"ENABLE_EVENT_REPORT\")?(i.length&&(XA(\"NEW_REPORT_SERVER\")?this.postDataToStatsCollector2(i):this.postDataToStatsCollector(i)).catch((e=>i=>{XA(\"EVENT_REPORT_RETRY\")&&(t?this.keyEventUploadPendingItems=this.keyEventUploadPendingItems.concat(e):(this.normalEventUploadPendingItems=this.normalEventUploadPendingItems.concat(e),this.normalEventUploadPendingItems.length>XA(\"NORMAL_EVENT_QUEUE_CAPACITY\")&&(this.normalEventUploadPendingItems.splice(0,this.normalEventUploadPendingItems.length-XA(\"NORMAL_EVENT_QUEUE_CAPACITY\")),fb.warning(\"report: drop normal events\"))))})(i)),e):e}async postDataToStatsCollector2(e){iA.networkState===Xy.OFFLINE&&await Gh.race([iA.onlineWaiter,mA(2*PA.maxRetryTimeout)]);const t=e=>{let t=new Uint8Array;return e.forEach((e=>{const i=ky(JSON.stringify(e.data)),n=new ArrayBuffer(5),r=(e=>{let t=0;return Object.entries(Rb).forEach((i=>{let[n,r]=i;r===e.type&&(t=Cb[n])})),t})(e),o=new DataView(n);o.setUint16(0,i.byteLength,!0),o.setUint8(2,255&r),o.setUint8(3,r>>>8&255),o.setUint8(4,r>>>16&255),t=My(t,new Uint8Array(n)),t=My(t,i)})),t},i=\"event\";let n=this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(XA(\"NEW_REPORT_SERVER_DOMAINS\")[0],\"&p=443&d=\").concat(i):\"https://\".concat(XA(\"NEW_REPORT_SERVER_DOMAINS\")[0],\"/\").concat(i);for(let r=0;r<2;r+=1){1===r&&(n=this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(XA(\"NEW_REPORT_SERVER_DOMAINS\")[1],\"&p=443&d=\").concat(i):\"https://\".concat(XA(\"NEW_REPORT_SERVER_DOMAINS\")[1],\"/\").concat(i));try{await FA(n,{timeout:1e4,data:t(e),headers:cb(cb({biz:\"webrtc\",sendts:Math.round(Date.now()/1e3),debug:\"false\"},this._appId&&{appid:this._appId}),{},{\"Content-Type\":\"application/octet-stream\"})},!0)}catch(e){if(1===r)throw e;continue}return}}async postDataToStatsCollector(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i={msgType:\"EventMessages\",sentTs:Math.round(Date.now()/1e3),payloads:e.map((e=>JSON.stringify(e))),vid:(e=>{const t=e&&e.data.sid&&this.baseInfoMap.get(e.data.sid);return t&&t.info.vid&&+t.info.vid||0})(e[0])};iA.networkState===Xy.OFFLINE&&await Gh.race([iA.onlineWaiter,mA(2*PA.maxRetryTimeout)]);const n=t?\"/events/proto-raws\":\"/events/messages\";let r=this.url||(this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(XA(\"EVENT_REPORT_DOMAIN\"),\"&p=\").concat(XA(\"STATS_COLLECTOR_PORT\"),\"&d=\").concat(n):\"https://\".concat(XA(\"EVENT_REPORT_DOMAIN\"),\":\").concat(XA(\"STATS_COLLECTOR_PORT\")).concat(n));for(let e=0;e<2;e+=1){1===e&&(r=this.backupUrl||(this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(XA(\"EVENT_REPORT_BACKUP_DOMAIN\"),\"&p=\").concat(XA(\"STATS_COLLECTOR_PORT\"),\"&d=\").concat(n):\"https://\".concat(XA(\"EVENT_REPORT_BACKUP_DOMAIN\"),\":\").concat(XA(\"STATS_COLLECTOR_PORT\")).concat(n)));try{t?await BA(r,{timeout:1e4,data:i}):await FA(r,{timeout:1e4,data:i})}catch(t){if(1===e)throw t;continue}return}}createBaseInfo(e,t){const i=Object.assign({},Sb);return i.sid=e,this.baseInfoMap.set(e,{info:i,startTime:t}),i}reportResourceTiming(e,t){const i=performance.getEntriesByName(e),n=i[i.length-1];n&&this.reportApiInvoke(t,{name:\"Client.resourceTiming\",options:n,tag:jy.TRACER}).onSuccess()}};db.on(\"REPORT_LOG_UPLOAD\",(e=>{e.networkState=iA.networkState,vb.reportApiInvoke(null,{name:\"logUploadError\",options:e,tag:jy.TRACER}).onSuccess(\"logUploadError\")}));class yb extends Cy{constructor(e){super(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",arguments.length>2?arguments[2]:void 0),sb(this,\"name\",\"AgoraRTCException\")}print(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"error\";return super.print(e,fb)}throw(){super.throw(fb)}}const Ab=[\"CHINA\",\"GLOBAL\"];const bb=[[0,1,2,3,4,5,5],[0,2,2,3,4,5,5],[0,3,3,3,4,5,5],[0,4,4,4,4,5,5],[0,5,5,5,5,5,5]],wb=[];function Ob(e,t){return!!t&&wb.some((i=>i.uid===e&&i.channelName===t))}var Nb=nT.forEach,Db=Bn(\"forEach\")?[].forEach:function(e){return Nb(this,e,arguments.length>1?arguments[1]:void 0)};wi({target:\"Array\",proto:!0,forced:[].forEach!=Db},{forEach:Db});var Pb=Xi(\"Array\").forEach,Lb=pn,kb=Ze,Mb=l,Ub=Pb,xb=Array.prototype,Vb={DOMTokenList:!0,NodeList:!0},Fb=function(e){var t=e.forEach;return e===xb||Mb(xb,e)&&t===xb.forEach||kb(Vb,Lb(e))?Ub:t},Bb=i(Fb),jb=Je,Gb=eo;wi({target:\"Object\",stat:!0,forced:n((function(){Gb(1)}))},{keys:function(e){return Gb(jb(e))}});var Wb=i(ie.Object.keys),Hb=i(zn),Kb=wi,Yb=om,qb=d([].reverse),zb=[1,2];Kb({target:\"Array\",proto:!0,forced:String(zb)===String(zb.reverse())},{reverse:function(){return Yb(this)&&(this.length=this.length),qb(this)}});var Jb=Xi(\"Array\").reverse,Xb=l,Qb=Jb,Zb=Array.prototype,$b=function(e){var t=e.reverse;return e===Zb||Xb(Zb,e)&&t===Zb.reverse?Qb:t},ew=$b,tw=i(ew),iw=wi,nw=om,rw=jc,ow=te,sw=xi,aw=Gi,cw=Z,dw=E_,lw=ht,uw=Xc,hw=mm(\"slice\"),pw=lw(\"species\"),_w=Array,Ew=Math.max;iw({target:\"Array\",proto:!0,forced:!hw},{slice:function(e,t){var i,n,r,o=cw(this),s=aw(o),a=sw(e,s),c=sw(void 0===t?s:t,s);if(nw(o)&&(i=o.constructor,(rw(i)&&(i===_w||nw(i.prototype))||ow(i)&&null===(i=i[pw]))&&(i=void 0),i===_w||void 0===i))return uw(o,a,c);for(n=new(void 0===i?_w:i)(Ew(c-a,0)),r=0;a<c;a++,r++)a in o&&dw(n,r,o[a]);return n.length=r,n}});var fw=Xi(\"Array\").slice,mw=l,Tw=fw,Sw=Array.prototype,gw=function(e){var t=e.slice;return e===Sw||mw(Sw,e)&&t===Sw.slice?Tw:t},Rw=i(gw);function Cw(e,t,i,n,r){var o,s,a,c={};return Bb(o=Wb(n)).call(o,(function(e){c[e]=n[e]})),c.enumerable=!!c.enumerable,c.configurable=!!c.configurable,(\"value\"in c||c.initializer)&&(c.writable=!0),c=Hb(s=tw(a=Rw(i).call(i)).call(a)).call(s,(function(i,n){return n(e,t,i)||i}),c),r&&void 0!==c.initializer&&(c.value=c.initializer?c.initializer.call(r):void 0,c.initializer=void 0),void 0===c.initializer&&(nm(e,t,c),c=null),c}let Iw=function(e){return e.L1T1=\"L1T1\",e.L1T2=\"L1T2\",e.L1T3=\"L1T3\",e.L1T3_KEY=\"L1T3_KEY\",e.L2T1_KEY=\"L2T1_KEY\",e.L2T2_KEY=\"L2T2_KEY\",e.L2T3_KEY=\"L2T3_KEY\",e.L3T1_KEY=\"L3T1_KEY\",e.L3T2_KEY=\"L3T2_KEY\",e.L3T3_KEY=\"L3T3_KEY\",e}({}),vw=function(e){return e.CERTIFICATE=\"certificate\",e.CODEC=\"codec\",e.CANDIDATE_PAIR=\"candidate-pair\",e.LOCAL_CANDIDATE=\"local-candidate\",e.REMOTE_CANDIDATE=\"remote-candidate\",e.INBOUND=\"inbound-rtp\",e.TRACK=\"track\",e.OUTBOUND=\"outbound-rtp\",e.PC=\"peer-connection\",e.REMOTE_INBOUND=\"remote-inbound-rtp\",e.REMOTE_OUTBOUND=\"remote-outbound-rtp\",e.TRANSPORT=\"transport\",e.CSRC=\"csrc\",e.DATA_CHANNEL=\"data-channel\",e.STREAM=\"stream\",e.SENDER=\"sender\",e.RECEIVER=\"receiver\",e}({}),yw=function(e){return e[e.ACCESS_POINT=101]=\"ACCESS_POINT\",e[e.UNILBS=201]=\"UNILBS\",e[e.STRING_UID_ALLOCATOR=901]=\"STRING_UID_ALLOCATOR\",e}({}),Aw=function(e){return e[e.IIIEGAL_APPID=1]=\"IIIEGAL_APPID\",e[e.IIIEGAL_UID=2]=\"IIIEGAL_UID\",e[e.INTERNAL_ERROR=3]=\"INTERNAL_ERROR\",e}({}),bw=function(e){return e[e.INVALID_VENDOR_KEY=5]=\"INVALID_VENDOR_KEY\",e[e.INVALID_CHANNEL_NAME=7]=\"INVALID_CHANNEL_NAME\",e[e.INTERNAL_ERROR=8]=\"INTERNAL_ERROR\",e[e.NO_AUTHORIZED=9]=\"NO_AUTHORIZED\",e[e.DYNAMIC_KEY_TIMEOUT=10]=\"DYNAMIC_KEY_TIMEOUT\",e[e.NO_ACTIVE_STATUS=11]=\"NO_ACTIVE_STATUS\",e[e.DYNAMIC_KEY_EXPIRED=13]=\"DYNAMIC_KEY_EXPIRED\",e[e.STATIC_USE_DYNAMIC_KEY=14]=\"STATIC_USE_DYNAMIC_KEY\",e[e.DYNAMIC_USE_STATIC_KEY=15]=\"DYNAMIC_USE_STATIC_KEY\",e[e.USER_OVERLOAD=16]=\"USER_OVERLOAD\",e[e.FORBIDDEN_REGION=18]=\"FORBIDDEN_REGION\",e[e.CANNOT_MEET_AREA_DEMAND=19]=\"CANNOT_MEET_AREA_DEMAND\",e}({}),ww=function(e){return e[e.NO_FLAG_SET=100]=\"NO_FLAG_SET\",e[e.FLAG_SET_BUT_EMPTY=101]=\"FLAG_SET_BUT_EMPTY\",e[e.INVALID_FALG_SET=102]=\"INVALID_FALG_SET\",e[e.FLAG_SET_BUT_NO_RE=103]=\"FLAG_SET_BUT_NO_RE\",e[e.INVALID_SERVICE_ID=104]=\"INVALID_SERVICE_ID\",e[e.NO_SERVICE_AVAILABLE=200]=\"NO_SERVICE_AVAILABLE\",e[e.NO_SERVICE_AVAILABLE_P2P=201]=\"NO_SERVICE_AVAILABLE_P2P\",e[e.NO_SERVICE_AVAILABLE_VOICE=202]=\"NO_SERVICE_AVAILABLE_VOICE\",e[e.NO_SERVICE_AVAILABLE_WEBRTC=203]=\"NO_SERVICE_AVAILABLE_WEBRTC\",e[e.NO_SERVICE_AVAILABLE_CDS=204]=\"NO_SERVICE_AVAILABLE_CDS\",e[e.NO_SERVICE_AVAILABLE_CDN=205]=\"NO_SERVICE_AVAILABLE_CDN\",e[e.NO_SERVICE_AVAILABLE_TDS=206]=\"NO_SERVICE_AVAILABLE_TDS\",e[e.NO_SERVICE_AVAILABLE_REPORT=207]=\"NO_SERVICE_AVAILABLE_REPORT\",e[e.NO_SERVICE_AVAILABLE_APP_CENTER=208]=\"NO_SERVICE_AVAILABLE_APP_CENTER\",e[e.NO_SERVICE_AVAILABLE_ENV0=209]=\"NO_SERVICE_AVAILABLE_ENV0\",e[e.NO_SERVICE_AVAILABLE_VOET=210]=\"NO_SERVICE_AVAILABLE_VOET\",e[e.NO_SERVICE_AVAILABLE_STRING_UID=211]=\"NO_SERVICE_AVAILABLE_STRING_UID\",e[e.NO_SERVICE_AVAILABLE_WEBRTC_UNILBS=212]=\"NO_SERVICE_AVAILABLE_WEBRTC_UNILBS\",e[e.NO_SERVICE_AVAILABLE_UNILBS_FLV=213]=\"NO_SERVICE_AVAILABLE_UNILBS_FLV\",e}({}),Ow=function(e){return e[e.K_TIMESTAMP_EXPIRED=2]=\"K_TIMESTAMP_EXPIRED\",e[e.K_CHANNEL_PERMISSION_INVALID=3]=\"K_CHANNEL_PERMISSION_INVALID\",e[e.K_CERTIFICATE_INVALID=4]=\"K_CERTIFICATE_INVALID\",e[e.K_CHANNEL_NAME_EMPTY=5]=\"K_CHANNEL_NAME_EMPTY\",e[e.K_CHANNEL_NOT_FOUND=6]=\"K_CHANNEL_NOT_FOUND\",e[e.K_TICKET_INVALID=7]=\"K_TICKET_INVALID\",e[e.K_CHANNEL_CONFLICTED=8]=\"K_CHANNEL_CONFLICTED\",e[e.K_SERVICE_NOT_READY=9]=\"K_SERVICE_NOT_READY\",e[e.K_SERVICE_TOO_HEAVY=10]=\"K_SERVICE_TOO_HEAVY\",e[e.K_UID_BANNED=14]=\"K_UID_BANNED\",e[e.K_IP_BANNED=15]=\"K_IP_BANNED\",e[e.K_CHANNEL_BANNED=16]=\"K_CHANNEL_BANNED\",e[e.K_AUTO_REBALANCE=28]=\"K_AUTO_REBALANCE\",e[e.WARN_NO_AVAILABLE_CHANNEL=103]=\"WARN_NO_AVAILABLE_CHANNEL\",e[e.WARN_LOOKUP_CHANNEL_TIMEOUT=104]=\"WARN_LOOKUP_CHANNEL_TIMEOUT\",e[e.WARN_LOOKUP_CHANNEL_REJECTED=105]=\"WARN_LOOKUP_CHANNEL_REJECTED\",e[e.WARN_OPEN_CHANNEL_TIMEOUT=106]=\"WARN_OPEN_CHANNEL_TIMEOUT\",e[e.WARN_OPEN_CHANNEL_REJECTED=107]=\"WARN_OPEN_CHANNEL_REJECTED\",e[e.WARN_REQUEST_DEFERRED=108]=\"WARN_REQUEST_DEFERRED\",e[e.ERR_DYNAMIC_KEY_TIMEOUT=109]=\"ERR_DYNAMIC_KEY_TIMEOUT\",e[e.ERR_NO_AUTHORIZED=110]=\"ERR_NO_AUTHORIZED\",e[e.ERR_VOM_SERVICE_UNAVAILABLE=111]=\"ERR_VOM_SERVICE_UNAVAILABLE\",e[e.ERR_NO_CHANNEL_AVAILABLE_CODE=112]=\"ERR_NO_CHANNEL_AVAILABLE_CODE\",e[e.ERR_MASTER_VOCS_UNAVAILABLE=114]=\"ERR_MASTER_VOCS_UNAVAILABLE\",e[e.ERR_INTERNAL_ERROR=115]=\"ERR_INTERNAL_ERROR\",e[e.ERR_NO_ACTIVE_STATUS=116]=\"ERR_NO_ACTIVE_STATUS\",e[e.ERR_INVALID_UID=117]=\"ERR_INVALID_UID\",e[e.ERR_DYNAMIC_KEY_EXPIRED=118]=\"ERR_DYNAMIC_KEY_EXPIRED\",e[e.ERR_STATIC_USE_DYANMIC_KE=119]=\"ERR_STATIC_USE_DYANMIC_KE\",e[e.ERR_DYNAMIC_USE_STATIC_KE=120]=\"ERR_DYNAMIC_USE_STATIC_KE\",e[e.ERR_NO_VOCS_AVAILABLE=2e3]=\"ERR_NO_VOCS_AVAILABLE\",e[e.ERR_NO_VOS_AVAILABLE=2001]=\"ERR_NO_VOS_AVAILABLE\",e[e.ERR_JOIN_CHANNEL_TIMEOUT=2002]=\"ERR_JOIN_CHANNEL_TIMEOUT\",e[e.ERR_REPEAT_JOIN_CHANNEL=2003]=\"ERR_REPEAT_JOIN_CHANNEL\",e[e.ERR_JOIN_BY_MULTI_IP=2004]=\"ERR_JOIN_BY_MULTI_IP\",e[e.ERR_NOT_JOINED=2011]=\"ERR_NOT_JOINED\",e[e.ERR_REPEAT_JOIN_REQUEST=2012]=\"ERR_REPEAT_JOIN_REQUEST\",e[e.ERR_INVALID_VENDOR_KEY=2013]=\"ERR_INVALID_VENDOR_KEY\",e[e.ERR_INVALID_CHANNEL_NAME=2014]=\"ERR_INVALID_CHANNEL_NAME\",e[e.ERR_INVALID_STRINGUID=2015]=\"ERR_INVALID_STRINGUID\",e[e.ERR_TOO_MANY_USERS=2016]=\"ERR_TOO_MANY_USERS\",e[e.ERR_SET_CLIENT_ROLE_TIMEOUT=2017]=\"ERR_SET_CLIENT_ROLE_TIMEOUT\",e[e.ERR_SET_CLIENT_ROLE_NO_PERMISSION=2018]=\"ERR_SET_CLIENT_ROLE_NO_PERMISSION\",e[e.ERR_SET_CLIENT_ROLE_ALREADY_IN_USE=2019]=\"ERR_SET_CLIENT_ROLE_ALREADY_IN_USE\",e[e.ERR_PUBLISH_REQUEST_INVALID=2020]=\"ERR_PUBLISH_REQUEST_INVALID\",e[e.ERR_SUBSCRIBE_REQUEST_INVALID=2021]=\"ERR_SUBSCRIBE_REQUEST_INVALID\",e[e.ERR_NOT_SUPPORTED_MESSAGE=2022]=\"ERR_NOT_SUPPORTED_MESSAGE\",e[e.ERR_ILLEAGAL_PLUGIN=2023]=\"ERR_ILLEAGAL_PLUGIN\",e[e.ERR_REJOIN_TOKEN_INVALID=2024]=\"ERR_REJOIN_TOKEN_INVALID\",e[e.ERR_REJOIN_USER_NOT_JOINED=2025]=\"ERR_REJOIN_USER_NOT_JOINED\",e[e.ERR_INVALID_OPTIONAL_INFO=2027]=\"ERR_INVALID_OPTIONAL_INFO\",e[e.ILLEGAL_AES_PASSWORD=2028]=\"ILLEGAL_AES_PASSWORD\",e[e.ILLEGAL_CLIENT_ROLE_LEVEL=2029]=\"ILLEGAL_CLIENT_ROLE_LEVEL\",e[e.ERR_TOO_MANY_BROADCASTERS=2031]=\"ERR_TOO_MANY_BROADCASTERS\",e[e.ERR_TOO_MANY_SUBSCRIBERS=2032]=\"ERR_TOO_MANY_SUBSCRIBERS\",e[e.ERR_LICENSE_MISSING=32769]=\"ERR_LICENSE_MISSING\",e[e.ERR_LICENSE_EXPIRED=32771]=\"ERR_LICENSE_EXPIRED\",e[e.ERR_LICENSE_MINUTES_EXCEEDED=32773]=\"ERR_LICENSE_MINUTES_EXCEEDED\",e[e.ERR_LICENSE_PERIOD_INVALID=32774]=\"ERR_LICENSE_PERIOD_INVALID\",e[e.ERR_LICENSE_MULTIPLE_SDK_SERVICE=32778]=\"ERR_LICENSE_MULTIPLE_SDK_SERVICE\",e[e.ERR_LICENSE_ILLEGAL=32783]=\"ERR_LICENSE_ILLEGAL\",e[e.ERR_TEST_RECOVER=9e3]=\"ERR_TEST_RECOVER\",e[e.ERR_TEST_TRYNEXT=9001]=\"ERR_TEST_TRYNEXT\",e[e.ERR_TEST_RETRY=9002]=\"ERR_TEST_RETRY\",e}({}),Nw=function(e){return e.CONNECTING=\"connecting\",e.CONNECTED=\"connected\",e.RECONNECTING=\"reconnecting\",e.CLOSED=\"closed\",e}({}),Dw=function(e){return e.WS_CONNECTED=\"ws_connected\",e.WS_RECONNECTING=\"ws_reconnecting\",e.WS_CLOSED=\"ws_closed\",e.WS_RECONNECT_WAITTING_FINISH=\"ws_reconnect_waitting_finish\",e.WS_RECONNECT_CREATE_CONNECTION=\"ws_reconnect_create_connection\",e.ON_BINARY_DATA=\"on_binary_data\",e.REQUEST_RECOVER=\"request_recover\",e.REQUEST_JOIN_INFO=\"request_join_info\",e.REQUEST_REJOIN_INFO=\"req_rejoin_info\",e.IS_P2P_DISCONNECTED=\"is_p2p_dis\",e.DISCONNECT_P2P=\"dis_p2p\",e.ABORT_P2P_EXECUTION=\"abort_p2p_execution\",e.NEED_RENEW_SESSION=\"need-sid\",e.REPORT_JOIN_GATEWAY=\"report_join_gateway\",e.REQUEST_TIMEOUT=\"request_timeout\",e.REQUEST_SUCCESS=\"request_success\",e.JOIN_RESPONSE=\"join_response\",e.PRE_CONNECT_PC=\"pre_connect_pc\",e.P2P_CONNECTION=\"p2p_connection\",e.P2P_REMOTE_CANDIDATE_UPDATE=\"p2p_remote_candidate_update\",e.P2P_SUBSCRIBE=\"p2p_subscribe\",e.P2P_UNSUBSCRIBE=\"p2p_unsubscribe\",e.P2P_EXCHANGE_SDP=\"p2p_exchange_sdp\",e.P2P_ON_ADD_VIDEO_STREAM=\"p2p_on_add_video_stream\",e.P2P_ON_ADD_AUDIO_STREAM=\"p2p_on_add_audio_stream\",e.RECOVER_NOTIFICATION=\"recover_notification\",e}({}),Pw=function(e){return e.PING=\"ping\",e.PING_BACK=\"ping_back\",e.JOIN=\"join_v3\",e.REJOIN=\"rejoin_v3\",e.LEAVE=\"leave\",e.SET_CLIENT_ROLE=\"set_client_role\",e.PUBLISH=\"publish\",e.PUBLISH_DATASTREAM=\"publish_datastream\",e.UNPUBLISH=\"unpublish\",e.UNPUBLISH_DATASTREAM=\"unpublish_datastream\",e.SUBSCRIBE=\"subscribe\",e.PRE_SUBSCRIBE=\"pre_subscribe\",e.SUBSCRIBE_DATASTREAM=\"subscribe_datastream\",e.SUBSCRIBE_STREAMS=\"subscribe_streams\",e.UNSUBSCRIBE=\"unsubscribe\",e.UNSUBSCRIBE_DATASTREAM=\"unsubscribe_datastream\",e.UNSUBSCRIBE_STREAMS=\"unsubscribe_streams\",e.SUBSCRIBE_CHANGE=\"subscribe_change\",e.TRAFFIC_STATS=\"traffic_stats\",e.RENEW_TOKEN=\"renew_token\",e.SWITCH_VIDEO_STREAM=\"switch_video_stream\",e.DEFAULT_VIDEO_STREAM=\"default_video_stream\",e.SET_FALLBACK_OPTION=\"set_fallback_option\",e.GATEWAY_INFO=\"gateway_info\",e.CONTROL=\"control\",e.SEND_METADATA=\"send_metadata\",e.DATA_STREAM=\"data_stream\",e.PICK_SVC_LAYER=\"pick_svc_layer\",e.RESTART_ICE=\"restart_ice\",e.CONNECT_PC=\"connect_pc\",e.SET_VIDEO_PROFILE=\"set_video_profile\",e.SET_PARAMETER=\"set_parameter\",e.SET_RTM2_FLAG=\"set_rtm2_flag\",e}({}),Lw=function(e){return e.WRTC_STATS=\"wrtc_stats\",e.WS_INFLATE_DATA_LENGTH=\"ws_inflate_data_length\",e.DENOISER_STATS=\"denoiser_stats\",e.EXTENSION_USAGE_STATS=\"extension_usage_stats\",e}({}),kw=function(e){return e.ON_USER_ONLINE=\"on_user_online\",e.ON_USER_OFFLINE=\"on_user_offline\",e.ON_STREAM_FALLBACK_UPDATE=\"on_stream_fallback_update\",e.ON_PUBLISH_STREAM=\"on_publish_stream\",e.ON_UPLINK_STATS=\"on_uplink_stats\",e.ON_P2P_LOST=\"on_p2p_lost\",e.ON_REMOVE_STREAM=\"on_remove_stream\",e.ON_ADD_AUDIO_STREAM=\"on_add_audio_stream\",e.ON_ADD_VIDEO_STREAM=\"on_add_video_stream\",e.ON_TOKEN_PRIVILEGE_WILL_EXPIRE=\"on_token_privilege_will_expire\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"on_token_privilege_did_expire\",e.ON_USER_BANNED=\"on_user_banned\",e.ON_USER_LICENSE_BANNED=\"on_user_license_banned\",e.ON_NOTIFICATION=\"on_notification\",e.ON_CRYPT_ERROR=\"on_crypt_error\",e.MUTE_AUDIO=\"mute_audio\",e.MUTE_VIDEO=\"mute_video\",e.UNMUTE_AUDIO=\"unmute_audio\",e.UNMUTE_VIDEO=\"unmute_video\",e.ON_P2P_OK=\"on_p2p_ok\",e.RECEIVE_METADATA=\"receive_metadata\",e.ON_DATA_STREAM=\"on_data_stream\",e.ON_RTP_CAPABILITY_CHANGE=\"on_rtp_capability_change\",e.ON_REMOTE_DATASTREAM_UPDATE=\"on_remote_datastream_update\",e.ON_REMOTE_FULL_DATASTREAM_INFO=\"on_remote_full_datastream_info\",e.ENABLE_LOCAL_VIDEO=\"enable_local_video\",e.DISABLE_LOCAL_VIDEO=\"disable_local_video\",e.ENABLE_LOCAL_AUDIO=\"enable_local_audio\",e.DISABLE_LOCAL_AUDIO=\"disable_local_audio\",e.ON_PUBLISHED_USER_LIST=\"on_published_user_list\",e}({}),Mw=function(e){return e.SEND_ONLY=\"SEND_ONLY\",e.RECEIVE_ONLY=\"RECEIVE_ONLY\",e}({}),Uw=function(e){return e.CONNECTED=\"websocket:connected\",e.RECONNECTING=\"websocket:reconnecting\",e.WILL_RECONNECT=\"websocket:will_reconnect\",e.CLOSED=\"websocket:closed\",e.FAILED=\"websocket:failed\",e.ON_MESSAGE=\"websocket:on_message\",e.REQUEST_NEW_URLS=\"websocket:request_new_urls\",e.RECONNECT_WAITTING_FINISH=\"websocket:reconnect_waitting_finish\",e.RECONNECT_CREATE_CONNECTION=\"websocket:reconnect_create_connection\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"websocket:on_token_privilege_did_expire\",e}({});function xw(e){if(\"string\"!=typeof e||!/^[a-zA-Z0-9 \\!\\#\\$\\%\\&\\(\\)\\+\\-\\:\\;\\<\\=\\.\\>\\?\\@\\[\\]\\^\\_\\{\\}\\|\\~\\,]{1,64}$/.test(e))throw fb.error(\"Invalid Channel Name \".concat(e)),new yb(Ry.INVALID_PARAMS,\"The length must be within 64 bytes. The supported characters: a-z,A-Z,0-9,space,!, #, $, %, &, (, ), +, -, :, ;, <, =, ., >, ?, @, [, ], ^, _,  {, }, |, ~, ,\")}function Vw(e){if(!function(e){return\"number\"==typeof e&&Math.floor(e)===e&&0<=e&&e<=4294967295}(e)&&!Ny(e,1,255))throw new yb(Ry.INVALID_PARAMS,\"[String uid] Length of the string: [1,255]. ASCII characters only. [Number uid] The value range is [0,10000]\");\"string\"==typeof e&&fb.warn(\"You input a string as the user ID, to ensure better end-user experience, Agora highly suggests not using a string as the user ID.\")}let Fw=function(e){return e.TRANSCODE=\"mix_streaming\",e.RAW=\"raw_streaming\",e}({});const Bw={alpha:1,height:640,width:360,x:0,y:0,zOrder:0,audioChannel:0},jw={x:0,y:0,width:160,height:160,zOrder:255,alpha:1};function Gw(e,t){by(e.url,\"\".concat(t,\".url\"),1,1e3,!1),Oy(e.x)||yy(e.x,\"\".concat(t,\".x\"),0,1e4),Oy(e.y)||yy(e.y,\"\".concat(t,\".y\"),0,1e4),Oy(e.width)||yy(e.width,\"\".concat(t,\".width\"),0,1e4),Oy(e.height)||yy(e.height,\"\".concat(t,\".height\"),0,1e4),Oy(e.zOrder)||yy(e.zOrder,\"\".concat(t,\".zOrder\"),0,255),Oy(e.alpha)||yy(e.alpha,\"\".concat(t,\".alpha\"),0,1,!1)}const Ww={audioBitrate:48,audioChannels:1,audioSampleRate:48e3,backgroundColor:0,height:360,lowLatency:!1,videoBitrate:400,videoCodecProfile:100,videoCodecType:1,videoFrameRate:15,videoGop:30,width:640,images:[],userConfigs:[],userConfigExtraInfo:\"\"};let Hw=function(e){return e.WARNING=\"@live_uap-warning\",e.ERROR=\"@line_uap-error\",e.PUBLISH_STREAM_STATUS=\"@live_uap-publish-status\",e.WORKER_STATUS=\"@live_uap-worker-status\",e.REQUEST_NEW_ADDRESS=\"@live_uap-request-address\",e}({}),Kw=function(e){return e.REQUEST_WORKER_MANAGER_LIST=\"@live_req_worker_manager\",e}({}),Yw=function(e){return e[e.LIVE_STREAM_RESPONSE_SUCCEED=200]=\"LIVE_STREAM_RESPONSE_SUCCEED\",e[e.LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM=454]=\"LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM\",e[e.LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR=450]=\"LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR\",e[e.LIVE_STREAM_RESPONSE_BAD_STREAM=451]=\"LIVE_STREAM_RESPONSE_BAD_STREAM\",e[e.LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR=400]=\"LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR\",e[e.LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST=404]=\"LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST\",e[e.LIVE_STREAM_RESPONSE_NOT_AUTHORIZED=456]=\"LIVE_STREAM_RESPONSE_NOT_AUTHORIZED\",e[e.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE=457]=\"LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE\",e[e.LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN=429]=\"LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN\",e[e.LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH=452]=\"LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH\",e[e.LIVE_STREAM_RESPONSE_NOT_SUPPORTED=453]=\"LIVE_STREAM_RESPONSE_NOT_SUPPORTED\",e[e.LIVE_STREAM_RESPONSE_MAX_STREAM_NUM=455]=\"LIVE_STREAM_RESPONSE_MAX_STREAM_NUM\",e[e.LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR=500]=\"LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR\",e[e.LIVE_STREAM_RESPONSE_WORKER_LOST=501]=\"LIVE_STREAM_RESPONSE_WORKER_LOST\",e[e.LIVE_STREAM_RESPONSE_RESOURCE_LIMIT=502]=\"LIVE_STREAM_RESPONSE_RESOURCE_LIMIT\",e[e.LIVE_STREAM_RESPONSE_WORKER_QUIT=503]=\"LIVE_STREAM_RESPONSE_WORKER_QUIT\",e[e.ERROR_FAIL_SEND_MESSAGE=504]=\"ERROR_FAIL_SEND_MESSAGE\",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE=30]=\"PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE\",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT=31]=\"PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT\",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH=32]=\"PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH\",e[e.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN=33]=\"PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN\",e}({});function qw(e){if(!e.channelName)throw new yb(Ry.INVALID_PARAMS,\"invalid channelName in info\");if(\"number\"!=typeof e.uid)throw new yb(Ry.INVALID_PARAMS,\"invalid uid in info, uid must be a number\");return e.token&&by(e.token,\"info.token\",1,2047),Vw(e.uid),xw(e.channelName),!0}let zw=function(e){return e[e.SetSdkProfile=0]=\"SetSdkProfile\",e[e.SetSourceChannel=1]=\"SetSourceChannel\",e[e.SetSourceUserId=2]=\"SetSourceUserId\",e[e.SetDestChannel=3]=\"SetDestChannel\",e[e.StartPacketTransfer=4]=\"StartPacketTransfer\",e[e.StopPacketTransfer=5]=\"StopPacketTransfer\",e[e.UpdateDestChannel=6]=\"UpdateDestChannel\",e[e.Reconnect=7]=\"Reconnect\",e[e.SetVideoProfile=8]=\"SetVideoProfile\",e}({}),Jw=function(e){return e.NETWORK_DISCONNECTED=\"NETWORK_DISCONNECTED\",e.NETWORK_CONNECTED=\"NETWORK_CONNECTED\",e.PACKET_JOINED_SRC_CHANNEL=\"PACKET_JOINED_SRC_CHANNEL\",e.PACKET_JOINED_DEST_CHANNEL=\"PACKET_JOINED_DEST_CHANNEL\",e.PACKET_SENT_TO_DEST_CHANNEL=\"PACKET_SENT_TO_DEST_CHANNEL\",e.PACKET_RECEIVED_VIDEO_FROM_SRC=\"PACKET_RECEIVED_VIDEO_FROM_SRC\",e.PACKET_RECEIVED_AUDIO_FROM_SRC=\"PACKET_RECEIVED_AUDIO_FROM_SRC\",e.PACKET_UPDATE_DEST_CHANNEL=\"PACKET_UPDATE_DEST_CHANNEL\",e.PACKET_UPDATE_DEST_CHANNEL_REFUSED=\"PACKET_UPDATE_DEST_CHANNEL_REFUSED\",e.PACKET_UPDATE_DEST_CHANNEL_NOT_CHANGE=\"PACKET_UPDATE_DEST_CHANNEL_NOT_CHANGE\",e}({}),Xw=function(e){return e.RELAY_STATE_IDLE=\"RELAY_STATE_IDLE\",e.RELAY_STATE_CONNECTING=\"RELAY_STATE_CONNECTING\",e.RELAY_STATE_RUNNING=\"RELAY_STATE_RUNNING\",e.RELAY_STATE_FAILURE=\"RELAY_STATE_FAILURE\",e}({}),Qw=function(e){return e.RELAY_OK=\"RELAY_OK\",e.SERVER_CONNECTION_LOST=\"SERVER_CONNECTION_LOST\",e.SRC_TOKEN_EXPIRED=\"SRC_TOKEN_EXPIRED\",e.DEST_TOKEN_EXPIRED=\"DEST_TOKEN_EXPIRED\",e}({}),Zw=function(e){return e.High=\"high\",e.Low=\"low\",e.Audio=\"audio\",e.Screen=\"screen\",e.ScreenLow=\"screen_low\",e}({}),$w=function(e){return e.DISCONNECT=\"disconnect\",e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.NETWORK_QUALITY=\"network-quality\",e.STREAM_TYPE_CHANGE=\"stream-type-change\",e.IS_P2P_DISCONNECTED=\"is-p2p-dis\",e.DISCONNECT_P2P=\"dis-p2p\",e.REQUEST_NEW_GATEWAY_LIST=\"req-gate-url\",e.NEED_RENEW_SESSION=\"need-sid\",e.REQUEST_P2P_CONNECTION_PARAMS=\"request-p2p-connection-params\",e.JOIN_RESPONSE=\"join-response\",e.RESET_CONNECTION_EVENTS=\"reset-connection-events\",e.PRE_CONNECT_PC=\"pre-connect_pc\",e}({}),eO=function(e){return e.P2P_DISCONNECTED=\"P2P_DISCONNECTED\",e.A_ROUND_WS_FAILED=\"A_ROUND_WS_FAILED\",e.TIMEOUT=\"TIMEOUT\",e.UNKNOWN_REASON=\"UNKNOWN_REASON\",e}({}),tO=function(e){return e[e.Nothing=0]=\"Nothing\",e[e.Audio=1]=\"Audio\",e[e.LwoVideo=2]=\"LwoVideo\",e[e.Video=4]=\"Video\",e[e.Data=8]=\"Data\",e[e.DataStream0=256]=\"DataStream0\",e[e.DataStream1=512]=\"DataStream1\",e[e.DataStream2=1024]=\"DataStream2\",e[e.DataStream3=2048]=\"DataStream3\",e[e.DataStream4=4096]=\"DataStream4\",e[e.DataStream5=8192]=\"DataStream5\",e[e.DataStream6=16384]=\"DataStream6\",e[e.DataStream7=32768]=\"DataStream7\",e}({}),iO=function(e){return e.CHINA=\"CHINA\",e.ASIA=\"ASIA\",e.NORTH_AMERICA=\"NORTH_AMERICA\",e.EUROPE=\"EUROPE\",e.JAPAN=\"JAPAN\",e.INDIA=\"INDIA\",e.KOREA=\"KOREA\",e.HKMC=\"HKMC\",e.US=\"US\",e.OCEANIA=\"OCEANIA\",e.SOUTH_AMERICA=\"SOUTH_AMERICA\",e.AFRICA=\"AFRICA\",e.OVERSEA=\"OVERSEA\",e.GLOBAL=\"GLOBAL\",e.EXTENSIONS=\"EXTENSIONS\",e}({});const nO=[iO.AFRICA,iO.ASIA,iO.CHINA,iO.EUROPE,iO.GLOBAL,iO.INDIA,iO.JAPAN,iO.NORTH_AMERICA,iO.OCEANIA,iO.OVERSEA,iO.SOUTH_AMERICA];let rO=function(e){return e.CHINA=\"CN\",e.ASIA=\"AS\",e.NORTH_AMERICA=\"NA\",e.EUROPE=\"EU\",e.JAPAN=\"JP\",e.INDIA=\"IN\",e.KOREA=\"KR\",e.HKMC=\"HK\",e.US=\"US\",e.OCEANIA=\"OC\",e.SOUTH_AMERICA=\"SA\",e.AFRICA=\"AF\",e.OVERSEA=\"OVERSEA\",e.GLOBAL=\"GLOBAL\",e.EXTENSIONS=\"GLOBAL\",e}({});const oO={CHINA:{},ASIA:{CODE:rO.ASIA,WEBCS_DOMAIN:[\"ap-web-1-asia.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-asia.agora.io\"],PROXY_CS:[\"proxy-ap-web-asia.agora.io\"],CDS_AP:[\"cds-ap-web-asia.agora.io\",\"cds-ap-web-asia2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-asia.agora.io\",\"sua-ap-web-asia2.agora.io\"],UAP_AP:[\"uap-ap-web-asia.agora.io\",\"uap-ap-web-asia2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-asia.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-asia.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-asia.agora.io\"],PROXY_SERVER_TYPE3:[\"southeast-asia.webrtc-cloud-proxy.sd-rtn.com\"]},NORTH_AMERICA:{CODE:rO.NORTH_AMERICA,WEBCS_DOMAIN:[\"ap-web-1-north-america.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-north-america.agora.io\"],PROXY_CS:[\"proxy-ap-web-america.agora.io\"],CDS_AP:[\"cds-ap-web-america.agora.io\",\"cds-ap-web-america2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-america.agora.io\",\"sua-ap-web-america2.agora.io\"],UAP_AP:[\"uap-ap-web-america.agora.io\",\"uap-ap-web-america2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-north-america.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-north-america.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-north-america.agora.io\"],PROXY_SERVER_TYPE3:[\"east-usa.webrtc-cloud-proxy.sd-rtn.com\"]},EUROPE:{CODE:rO.EUROPE,WEBCS_DOMAIN:[\"ap-web-1-europe.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-europe.agora.io\"],PROXY_CS:[\"proxy-ap-web-europe.agora.io\"],CDS_AP:[\"cds-ap-web-europe.agora.io\",\"cds-ap-web-europe2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-europe.agora.io\",\"sua-ap-web-europe.agora.io\"],UAP_AP:[\"uap-ap-web-europe.agora.io\",\"uap-ap-web-europe2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-europe.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-europe.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-europe.agora.io\"],PROXY_SERVER_TYPE3:[\"europe.webrtc-cloud-proxy.sd-rtn.com\"]},JAPAN:{CODE:rO.JAPAN,WEBCS_DOMAIN:[\"ap-web-1-japan.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-japan.agora.io\"],PROXY_CS:[\"proxy-ap-web-japan.agora.io\"],CDS_AP:[\"cds-ap-web-japan.agora.io\",\"cds-ap-web-japan2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-japan.agora.io\",\"sua-ap-web-japan2.agora.io\"],UAP_AP:[\"uap-ap-web-japan.agora.io\",\"uap-ap-web-japan2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-japan.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-japan.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-japan.agora.io\"],PROXY_SERVER_TYPE3:[\"japan.webrtc-cloud-proxy.sd-rtn.com\"]},INDIA:{CODE:rO.INDIA,WEBCS_DOMAIN:[\"ap-web-1-india.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-india.agora.io\"],PROXY_CS:[\"proxy-ap-web-india.agora.io\"],CDS_AP:[\"cds-ap-web-india.agora.io\",\"cds-ap-web-india2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-india.agora.io\",\"sua-ap-web-india2.agora.io\"],UAP_AP:[\"uap-ap-web-india.agora.io\",\"uap-ap-web-india2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-india.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-india.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-india.agora.io\"],PROXY_SERVER_TYPE3:[\"india.webrtc-cloud-proxy.sd-rtn.com\"]},KOREA:{CODE:rO.KOREA,WEBCS_DOMAIN:[\"ap-web-1-korea.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-korea.agora.io\"],PROXY_CS:[\"proxy-ap-web-korea.agora.io\"],CDS_AP:[\"cds-ap-web-korea.agora.io\",\"cds-ap-web-korea2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-korea.agora.io\",\"sua-ap-web-korea2.agora.io\"],UAP_AP:[\"uap-ap-web-korea.agora.io\",\"uap-ap-web-korea2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-korea.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-korea.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-korea.agora.io\"],PROXY_SERVER_TYPE3:[\"korea.webrtc-cloud-proxy.sd-rtn.com\"]},HKMC:{CODE:rO.HKMC,WEBCS_DOMAIN:[\"ap-web-1-hkmc.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-hkmc.agora.io\"],PROXY_CS:[\"proxy-ap-web-hkmc.agora.io\"],CDS_AP:[\"cds-ap-web-hkmc.agora.io\",\"cds-ap-web-hkmc2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-hkmc.agora.io\",\"sua-ap-web-hkmc2.agora.io\"],UAP_AP:[\"uap-ap-web-hkmc.agora.io\",\"uap-ap-web-hkmc2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-hkmc.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-hkmc.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-hkmc.agora.io\"],PROXY_SERVER_TYPE3:[\"hkmc.webrtc-cloud-proxy.sd-rtn.com\"]},US:{CODE:rO.US,WEBCS_DOMAIN:[\"ap-web-1-us.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-us.agora.io\"],PROXY_CS:[\"proxy-ap-web-us.agora.io\"],CDS_AP:[\"cds-ap-web-us.agora.io\",\"cds-ap-web-us2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-us.agora.io\",\"sua-ap-web-us2.agora.io\"],UAP_AP:[\"uap-ap-web-us.agora.io\",\"uap-ap-web-us2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-us.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-us.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-us.agora.io\"],PROXY_SERVER_TYPE3:[\"us.webrtc-cloud-proxy.sd-rtn.com\"]},OVERSEA:{CODE:rO.OVERSEA,WEBCS_DOMAIN:[\"ap-web-1-oversea.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-oversea.agora.io\"],PROXY_CS:[\"proxy-ap-web-oversea.agora.io\"],CDS_AP:[\"cds-ap-web-oversea.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-oversea.agora.io\"],UAP_AP:[\"uap-ap-web-oversea.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-oversea.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-oversea.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-oversea.agora.io\"],PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy.agora.io\"]},GLOBAL:{CODE:rO.GLOBAL,WEBCS_DOMAIN:[\"webrtc2-ap-web-1.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"webrtc2-ap-web-3.agora.io\"],PROXY_CS:[\"ap-proxy-1.agora.io\",\"ap-proxy-2.agora.io\"],CDS_AP:[\"cds-ap-web-1.agora.io\",\"cds-ap-web-3.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-1.agora.io\",\"sua-ap-web-3.agora.io\"],UAP_AP:[\"uap-ap-web-1.agora.io\",\"uap-ap-web-3.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice.agora.io\"],PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy.sd-rtn.com\"]},OCEANIA:{CODE:rO.OCEANIA,WEBCS_DOMAIN:[\"ap-web-1-oceania.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-oceania.agora.io\"],PROXY_CS:[\"proxy-ap-web-oceania.agora.io\"],CDS_AP:[\"cds-ap-web-oceania.agora.io\",\"cds-ap-web-oceania2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-oceania.agora.io\",\"sua-ap-web-oceania2.agora.io\"],UAP_AP:[\"uap-ap-web-oceania.agora.io\",\"uap-ap-web-oceania2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-oceania.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-oceania.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-oceania.agora.io\"],PROXY_SERVER_TYPE3:[\"oceania.webrtc-cloud-proxy.sd-rtn.com\"]},SOUTH_AMERICA:{CODE:rO.SOUTH_AMERICA,WEBCS_DOMAIN:[\"ap-web-1-south-america.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-south-america.agora.io\"],PROXY_CS:[\"proxy-ap-web-south-america.agora.io\"],CDS_AP:[\"cds-ap-web-south-america.agora.io\",\"cds-ap-web-south-america2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-south-america.agora.io\",\"sua-ap-web-south-america2.agora.io\"],UAP_AP:[\"uap-ap-web-south-america.agora.io\",\"uap-ap-web-south-america2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-south-america.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-south-america.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-south-america.agora.io\"],PROXY_SERVER_TYPE3:[\"south-america.webrtc-cloud-proxy.sd-rtn.com\"]},AFRICA:{CODE:rO.AFRICA,WEBCS_DOMAIN:[\"ap-web-1-africa.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-africa.agora.io\"],PROXY_CS:[\"proxy-ap-web-africa.agora.io\"],CDS_AP:[\"cds-ap-web-africa.agora.io\",\"cds-ap-web-africa2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-africa.agora.io\",\"sua-ap-web-africa2.agora.io\"],UAP_AP:[\"uap-ap-web-africa.agora.io\",\"uap-ap-web-africa2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-africa.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-africa.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-south-africa.agora.io\"],PROXY_SERVER_TYPE3:[\"africa.webrtc-cloud-proxy.sd-rtn.com\"]},EXTENSIONS:{}};WA&&(oO.CHINA={CODE:rO.CHINA,WEBCS_DOMAIN:[\"webrtc2-2.ap.sd-rtn.com\"],WEBCS_DOMAIN_BACKUP_LIST:[\"webrtc2-4.ap.sd-rtn.com\"],PROXY_CS:[\"proxy-web.ap.sd-rtn.com\"],CDS_AP:[\"cds-web-2.ap.sd-rtn.com\",\"cds-web-4.ap.sd-rtn.com\"],ACCOUNT_REGISTER:[\"sua-web-2.ap.sd-rtn.com\",\"sua-web-4.ap.sd-rtn.com\"],UAP_AP:[\"uap-web-2.ap.sd-rtn.com\",\"uap-web-4.ap.sd-rtn.com\"],EVENT_REPORT_DOMAIN:[\"web-3.statscollector.sd-rtn.com\"],EVENT_REPORT_BACKUP_DOMAIN:[\"web-4.statscollector.sd-rtn.com\"],LOG_UPLOAD_SERVER:[\"logservice-china.agora.io\"],PROXY_SERVER_TYPE3:[\"east-cn.webrtc-cloud-proxy.sd-rtn.com\"]});let sO=function(e){return e.UPDATE_BITRATE_LIMIT=\"update_bitrate_limit\",e}({});class aO extends xy{constructor(e,t){super(),Fg(this,\"onICEConnectionStateChange\",void 0),Fg(this,\"onConnectionStateChange\",void 0),Fg(this,\"onDTLSTransportStateChange\",void 0),Fg(this,\"onDTLSTransportError\",void 0),Fg(this,\"onICETransportStateChange\",void 0),Fg(this,\"onFirstAudioReceived\",void 0),Fg(this,\"onFirstVideoReceived\",void 0),Fg(this,\"onFirstAudioDecoded\",void 0),Fg(this,\"onFirstVideoDecoded\",void 0),Fg(this,\"onFirstVideoDecodedTimeout\",void 0),Fg(this,\"onSelectedLocalCandidateChanged\",void 0),Fg(this,\"onSelectedRemoteCandidateChanged\",void 0),Fg(this,\"getLocalVideoStats\",void 0)}}class cO extends aO{constructor(e,t){super(e,t),Fg(this,\"establishPromise\",void 0)}}let dO=function(e){return e.VIDEO=\"video\",e.AUDIO=\"audio\",e}({}),lO=function(e){return e[e.UDP=0]=\"UDP\",e[e.TCP=1]=\"TCP\",e[e.RELAY=2]=\"RELAY\",e}({}),uO=function(e){return e[e.FIRST_CONNECTION=0]=\"FIRST_CONNECTION\",e[e.TCP_RESTART=1]=\"TCP_RESTART\",e[e.RELAY_RESTART=2]=\"RELAY_RESTART\",e[e.OLD_FIRST_CONNECTION=10]=\"OLD_FIRST_CONNECTION\",e[e.OLD_RESTART=11]=\"OLD_RESTART\",e[e.DISCONNECTED_OR_FAILED=20]=\"DISCONNECTED_OR_FAILED\",e}({}),hO=function(e){return e.LocalVideoTrack=\"videoTrack\",e.LocalAudioTrack=\"audioTrack\",e.LocalVideoLowTrack=\"videoLowTrack\",e}({}),pO=function(e){return e.New=\"new\",e.Connected=\"connected\",e.Reconnecting=\"reconnecting\",e.Disconnected=\"disconnected\",e}({}),_O=function(e){return e.StateChange=\"stateChange\",e.IceConnectionStateChange=\"iceConnectionStateChange\",e.RequestMuteLocal=\"requestMuteLocal\",e.RequestUnmuteLocal=\"requestUnmuteLocal\",e.RequestRePublish=\"requestRePublish\",e.RequestRePublishDataChannel=\"requestRePublishDataChannel\",e.RequestReSubscribe=\"requestReSubscribe\",e.RequestUploadStats=\"requestUploadStats\",e.RequestUpload=\"requestUpload\",e.MediaReconnectStart=\"MediaReconnectStart\",e.MediaReconnectEnd=\"MediaReconnectEnd\",e.NeedSignalRTT=\"NeedSignalRTT\",e.RequestRestartICE=\"RequestRestartIce\",e.PeerConnectionStateChange=\"PeerConnectionStateChange\",e.RequestReconnect=\"RequestReconnect\",e.RequestReconnectPC=\"RequestReconnectPC\",e.RequestUnpublishForReconnectPC=\"RequestUnpublishForReconnectPC\",e.P2PLost=\"P2PLost\",e.UpdateVideoEncoder=\"UpdateVideoEncoder\",e.ConnectionTypeChange=\"ConnectionTypeChange\",e.RequestLowStreamParameter=\"RequestLowStreamParameter\",e.QueryClientConnectionState=\"QueryClientConnectionState\",e.LocalCandidate=\"LocalCandidate\",e.RequestP2PMuteLocal=\"requestP2PMuteLocal\",e.RequestP2PUnPublish=\"RequestP2PUnPublish\",e.RequestP2PUnmuteRemote=\"RequestP2PUnmuteRemote\",e.RequestP2PMuteRemote=\"RequestP2PMuteRemote\",e.RequestP2PRestartICE=\"RequestP2PRestartICE\",e}({}),EO=function(e){return e.CONNECTING=\"CONNECTING\",e.RECONNECTING=\"RECONNECTING\",e.CONNECTED=\"CONNECTED\",e.CLOSED=\"CLOSED\",e}({}),fO=function(e){return e[e.CONNECT_AP=0]=\"CONNECT_AP\",e[e.AP_CONNECTED=1]=\"AP_CONNECTED\",e[e.CONNECT_WORKER_MANAGER=2]=\"CONNECT_WORKER_MANAGER\",e[e.WORKER_MANAGER_CONNECTED=3]=\"WORKER_MANAGER_CONNECTED\",e[e.GET_WORKER_MANAGER_RESPONSE=4]=\"GET_WORKER_MANAGER_RESPONSE\",e[e.CONNECT_WORKER=5]=\"CONNECT_WORKER\",e[e.WORKER_CONNECTED=6]=\"WORKER_CONNECTED\",e[e.CLOSED=7]=\"CLOSED\",e}({}),mO=function(e){return e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.STATE_CHANGE=\"state-change\",e.INSPECT_RESULT=\"inspect-result\",e.CLIENT_LOCAL_VIDEO_TRACK=\"client-local-video-track\",e.REQUEST_NEW_WORKER_URL=\"request-new-worker-url\",e}({}),TO=function(e){return e.CONNECTED=\"transmitter:connected\",e.RECONNECTING=\"transmitter:reconnecting\",e.WILL_RECONNECT=\"transmitter:will_reconnect\",e.CLOSED=\"transmitter:closed\",e.FAILED=\"transmitter:failed\",e.ON_MESSAGE=\"transmitter:on_message\",e.REQUEST_NEW_URLS=\"transmitter:request_new_urls\",e.RECONNECT_WAITTING_FINISH=\"transmitter:reconnect_waitting_finish\",e.RECONNECT_CREATE_CONNECTION=\"transmitter:reconnect_create_connection\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"transmitter:on_token_privilege_did_expire\",e.TO_CONNECT_DATACHANNEL=\"transmitter:to_connect_datachannel\",e.FAILBACK=\"transmitter:failback\",e.PRE_CONNECT_PC=\"transmitter:pre_connect_pc\",e}({}),SO=function(e){return e.CAMERA_CHANGED=\"camera-changed\",e.MICROPHONE_CHANGED=\"microphone-changed\",e.PLAYBACK_DEVICE_CHANGED=\"playback-device-changed\",e.AUDIO_AUTOPLAY_FAILED=\"audio-autoplay-failed\",e.AUTOPLAY_FAILED=\"autoplay-failed\",e.AUDIO_CONTEXT_STATE_CHANGED=\"audio-context-state-changed\",e.SECURITY_POLICY_VIOLATION=\"security-policy-violation\",e}({}),gO=function(e){return e.CONNECTING=\"CONNECTING\",e.RECONNECTING=\"RECONNECTING\",e.CONNECTED=\"CONNECTED\",e.CLOSED=\"CLOSED\",e}({}),RO=function(e){return e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.STATE_CHANGE=\"state-change\",e.INSPECT_RESULT=\"inspect-result\",e.CLIENT_LOCAL_VIDEO_TRACK=\"client-local-video-track\",e.REQUEST_NEW_WORKER_URL=\"request-new-worker-url\",e}({}),CO=function(e){return e[e.CONNECT_AP=0]=\"CONNECT_AP\",e[e.AP_CONNECTED=1]=\"AP_CONNECTED\",e[e.CONNECT_WORKER_MANAGER=2]=\"CONNECT_WORKER_MANAGER\",e[e.WORKER_MANAGER_CONNECTED=3]=\"WORKER_MANAGER_CONNECTED\",e[e.GET_WORKER_MANAGER_RESPONSE=4]=\"GET_WORKER_MANAGER_RESPONSE\",e[e.CONNECT_WORKER=5]=\"CONNECT_WORKER\",e[e.WORKER_CONNECTED=6]=\"WORKER_CONNECTED\",e[e.CLOSED=7]=\"CLOSED\",e}({}),IO=function(e){return e.CALL=\"call\",e.CANDIDATE=\"candidate\",e.PUBLISH=\"publish\",e.UNPUBLISH=\"unpublish\",e.CONTROL=\"control\",e.RESTART_ICE=\"restart_ice\",e.ACK=\"ack\",e.RESPONSE=\"response\",e.JOIN=\"join\",e.CHECK=\"check\",e}({}),vO=function(e){return e.ABORT=\"abort\",e}({}),yO=function(e){return e.MUTE_LOCAL_AUDIO=\"mute_local_audio\",e.MUTE_LOCAL_VIDEO=\"mute_local_video\",e.UNMUTE_LOCAL_AUDIO=\"unmute_local_audio\",e.UNMUTE_LOCAL_VIDEO=\"unmute_local_video\",e}({}),AO=function(e){return e.P2P_TOKEN_TIMEOUT=\"p2p_token_timeout\",e.P2P_TOKEN_CHANGED=\"p2p_token_changed\",e}({});const bO={[yw.ACCESS_POINT]:{[ww.NO_FLAG_SET]:{desc:\"flag is zero\",retry:!1},[ww.FLAG_SET_BUT_EMPTY]:{desc:\"flag is empty\",retry:!1},[ww.INVALID_FALG_SET]:{desc:\"invalid flag\",retry:!1},[ww.FLAG_SET_BUT_NO_RE]:{desc:\"flag set unilbs but no request\",retry:!1},[ww.INVALID_SERVICE_ID]:{desc:\"invalid service id\",retry:!1},[ww.NO_SERVICE_AVAILABLE]:{desc:\"no service available\",retry:!0},[ww.NO_SERVICE_AVAILABLE_P2P]:{desc:\"no unilbs p2p service available\",retry:!0},[ww.NO_SERVICE_AVAILABLE_VOICE]:{desc:\"no unilbs voice service available\",retry:!0},[ww.NO_SERVICE_AVAILABLE_WEBRTC]:{desc:\"no unilbs webrtc service available\",retry:!0},[ww.NO_SERVICE_AVAILABLE_CDS]:{desc:\"no cds service available\",retry:!0},[ww.NO_SERVICE_AVAILABLE_CDN]:{desc:\"no cdn dispatcher service available\",retry:!0},[ww.NO_SERVICE_AVAILABLE_TDS]:{desc:\"no tds service available\",retry:!0},[ww.NO_SERVICE_AVAILABLE_REPORT]:{desc:\"no unilbs report service available\",retry:!0},[ww.NO_SERVICE_AVAILABLE_APP_CENTER]:{desc:\"no app center service available\",retry:!0},[ww.NO_SERVICE_AVAILABLE_ENV0]:{desc:\"no unilbs sig env0 service available\",retry:!0},[ww.NO_SERVICE_AVAILABLE_VOET]:{desc:\"no unilbs voet service available\",retry:!0},[ww.NO_SERVICE_AVAILABLE_STRING_UID]:{desc:\"no string uid service available\",retry:!0},[ww.NO_SERVICE_AVAILABLE_WEBRTC_UNILBS]:{desc:\"no webrtc unilbs service available\",retry:!0}},[yw.UNILBS]:{[bw.INVALID_VENDOR_KEY]:{desc:\"invalid vendor key, can not find appid\",retry:!1},[bw.INVALID_CHANNEL_NAME]:{desc:\"invalid channel name\",retry:!1},[bw.INTERNAL_ERROR]:{desc:\"unilbs internal error\",retry:!1},[bw.NO_AUTHORIZED]:{desc:\"invalid token, authorized failed\",retry:!1},[bw.DYNAMIC_KEY_TIMEOUT]:{desc:\"dynamic key or token timeout\",retry:!1},[bw.NO_ACTIVE_STATUS]:{desc:\"no active status\",retry:!1},[bw.DYNAMIC_KEY_EXPIRED]:{desc:\"dynamic key expired\",retry:!1},[bw.STATIC_USE_DYNAMIC_KEY]:{desc:\"static use dynamic key\",retry:!1},[bw.DYNAMIC_USE_STATIC_KEY]:{desc:\"dynamic use static key\",retry:!1},[bw.USER_OVERLOAD]:{desc:\"amount of users over load\",retry:!1},[bw.FORBIDDEN_REGION]:{desc:\"the request is forbidden in this area\",retry:!1},[bw.CANNOT_MEET_AREA_DEMAND]:{desc:\"unable to allocate services in this area\",retry:!1}},[yw.STRING_UID_ALLOCATOR]:{[Aw.IIIEGAL_APPID]:{desc:\"invalid appid\",retry:!1},[Aw.IIIEGAL_UID]:{desc:\"invalid string uid\",retry:!1},[Aw.INTERNAL_ERROR]:{desc:\"string uid allocator internal error\",retry:!0}}};function wO(e){const t=bO[Math.floor(e/1e4)];if(!t)return{desc:\"unknown error\",retry:!1};const i=t[e%1e4];if(!i){if(Math.floor(e/1e4)===yw.ACCESS_POINT){const t=e%1e4;if(\"1\"===t.toString()[0])return{desc:e.toString(),retry:!1};if(\"2\"===t.toString()[0])return{desc:e.toString(),retry:!0}}return{desc:\"unknown error\",retry:!1}}return i}const OO={[Ow.K_TIMESTAMP_EXPIRED]:{desc:\"K_TIMESTAMP_EXPIRED\",action:\"failed\"},[Ow.K_CHANNEL_PERMISSION_INVALID]:{desc:\"K_CHANNEL_PERMISSION_INVALID\",action:\"failed\"},[Ow.K_CERTIFICATE_INVALID]:{desc:\"K_CERTIFICATE_INVALID\",action:\"failed\"},[Ow.K_CHANNEL_NAME_EMPTY]:{desc:\"K_CHANNEL_NAME_EMPTY\",action:\"failed\"},[Ow.K_CHANNEL_NOT_FOUND]:{desc:\"K_CHANNEL_NOT_FOUND\",action:\"failed\"},[Ow.K_TICKET_INVALID]:{desc:\"K_TICKET_INVALID\",action:\"failed\"},[Ow.K_CHANNEL_CONFLICTED]:{desc:\"K_CHANNEL_CONFLICTED\",action:\"failed\"},[Ow.K_SERVICE_NOT_READY]:{desc:\"K_SERVICE_NOT_READY\",action:\"tryNext\"},[Ow.K_SERVICE_TOO_HEAVY]:{desc:\"K_SERVICE_TOO_HEAVY\",action:\"tryNext\"},[Ow.K_UID_BANNED]:{desc:\"K_UID_BANNED\",action:\"failed\"},[Ow.K_IP_BANNED]:{desc:\"K_IP_BANNED\",action:\"failed\"},[Ow.K_AUTO_REBALANCE]:{desc:\"k_AUTO_REBALANCE\",action:\"recover\"},[Ow.ERR_INVALID_VENDOR_KEY]:{desc:\"ERR_INVALID_VENDOR_KEY\",action:\"failed\"},[Ow.ERR_INVALID_CHANNEL_NAME]:{desc:\"ERR_INVALID_CHANNEL_NAME\",action:\"failed\"},[Ow.WARN_NO_AVAILABLE_CHANNEL]:{desc:\"WARN_NO_AVAILABLE_CHANNEL\",action:\"failed\"},[Ow.WARN_LOOKUP_CHANNEL_TIMEOUT]:{desc:\"WARN_LOOKUP_CHANNEL_TIMEOUT\",action:\"tryNext\"},[Ow.WARN_LOOKUP_CHANNEL_REJECTED]:{desc:\"WARN_LOOKUP_CHANNEL_REJECTED\",action:\"failed\"},[Ow.WARN_OPEN_CHANNEL_TIMEOUT]:{desc:\"WARN_OPEN_CHANNEL_TIMEOUT\",action:\"tryNext\"},[Ow.WARN_OPEN_CHANNEL_REJECTED]:{desc:\"WARN_OPEN_CHANNEL_REJECTED\",action:\"failed\"},[Ow.WARN_REQUEST_DEFERRED]:{desc:\"WARN_REQUEST_DEFERRED\",action:\"failed\"},[Ow.ERR_DYNAMIC_KEY_TIMEOUT]:{desc:\"ERR_DYNAMIC_KEY_TIMEOUT\",action:\"failed\"},[Ow.ERR_NO_AUTHORIZED]:{desc:\"ERR_NO_AUTHORIZED\",action:\"failed\"},[Ow.ERR_VOM_SERVICE_UNAVAILABLE]:{desc:\"ERR_VOM_SERVICE_UNAVAILABLE\",action:\"tryNext\"},[Ow.ERR_NO_CHANNEL_AVAILABLE_CODE]:{desc:\"ERR_NO_CHANNEL_AVAILABLE_CODE\",action:\"failed\"},[Ow.ERR_MASTER_VOCS_UNAVAILABLE]:{desc:\"ERR_MASTER_VOCS_UNAVAILABLE\",action:\"tryNext\"},[Ow.ERR_INTERNAL_ERROR]:{desc:\"ERR_INTERNAL_ERROR\",action:\"tryNext\"},[Ow.ERR_NO_ACTIVE_STATUS]:{desc:\"ERR_NO_ACTIVE_STATUS\",action:\"failed\"},[Ow.ERR_INVALID_UID]:{desc:\"ERR_INVALID_UID\",action:\"failed\"},[Ow.ERR_DYNAMIC_KEY_EXPIRED]:{desc:\"ERR_DYNAMIC_KEY_EXPIRED\",action:\"failed\"},[Ow.ERR_STATIC_USE_DYANMIC_KE]:{desc:\"ERR_STATIC_USE_DYANMIC_KE\",action:\"failed\"},[Ow.ERR_DYNAMIC_USE_STATIC_KE]:{desc:\"ERR_DYNAMIC_USE_STATIC_KE\",action:\"failed\"},[Ow.ERR_NO_VOCS_AVAILABLE]:{desc:\"ERR_NO_VOCS_AVAILABLE\",action:\"tryNext\"},[Ow.ERR_NO_VOS_AVAILABLE]:{desc:\"ERR_NO_VOS_AVAILABLE\",action:\"tryNext\"},[Ow.ERR_JOIN_CHANNEL_TIMEOUT]:{desc:\"ERR_JOIN_CHANNEL_TIMEOUT\",action:\"tryNext\"},[Ow.ERR_JOIN_BY_MULTI_IP]:{desc:\"ERR_JOIN_BY_MULTI_IP\",action:\"recover\"},[Ow.ERR_NOT_JOINED]:{desc:\"ERR_NOT_JOINED\",action:\"failed\"},[Ow.ERR_REPEAT_JOIN_REQUEST]:{desc:\"ERR_REPEAT_JOIN_REQUEST\",action:\"quit\"},[Ow.ERR_REPEAT_JOIN_CHANNEL]:{desc:\"ERR_REPEAT_JOIN_CHANNEL\",action:\"quit\"},[Ow.ERR_INVALID_STRINGUID]:{desc:\"ERR_INVALID_STRINGUID\",action:\"failed\"},[Ow.ERR_TOO_MANY_USERS]:{desc:\"ERR_TOO_MANY_USERS\",action:\"tryNext\"},[Ow.ERR_SET_CLIENT_ROLE_TIMEOUT]:{desc:\"ERR_SET_CLIENT_ROLE_TIMEOUT\",action:\"failed\"},[Ow.ERR_SET_CLIENT_ROLE_NO_PERMISSION]:{desc:\"ERR_SET_CLIENT_ROLE_TIMEOUT\",action:\"failed\"},[Ow.ERR_SET_CLIENT_ROLE_ALREADY_IN_USE]:{desc:\"ERR_SET_CLIENT_ROLE_ALREADY_IN_USE\",action:\"success\"},[Ow.ERR_PUBLISH_REQUEST_INVALID]:{desc:\"ERR_PUBLISH_REQUEST_INVALID\",action:\"failed\"},[Ow.ERR_SUBSCRIBE_REQUEST_INVALID]:{desc:\"ERR_SUBSCRIBE_REQUEST_INVALID\",action:\"failed\"},[Ow.ERR_NOT_SUPPORTED_MESSAGE]:{desc:\"ERR_NOT_SUPPORTED_MESSAGE\",action:\"failed\"},[Ow.ERR_ILLEAGAL_PLUGIN]:{desc:\"ERR_ILLEAGAL_PLUGIN\",action:\"failed\"},[Ow.ILLEGAL_CLIENT_ROLE_LEVEL]:{desc:\"ILLEGAL_CLIENT_ROLE_LEVEL\",action:\"failed\"},[Ow.ERR_REJOIN_TOKEN_INVALID]:{desc:\"ERR_REJOIN_TOKEN_INVALID\",action:\"failed\"},[Ow.ERR_REJOIN_USER_NOT_JOINED]:{desc:\"ERR_REJOIN_NOT_JOINED\",action:\"failed\"},[Ow.ERR_INVALID_OPTIONAL_INFO]:{desc:\"ERR_INVALID_OPTIONAL_INFO\",action:\"quit\"},[Ow.ERR_TEST_RECOVER]:{desc:\"ERR_TEST_RECOVER\",action:\"recover\"},[Ow.ERR_TEST_TRYNEXT]:{desc:\"ERR_TEST_TRYNEXT\",action:\"recover\"},[Ow.ERR_TEST_RETRY]:{desc:\"ERR_TEST_RETRY\",action:\"recover\"},[Ow.ILLEGAL_AES_PASSWORD]:{desc:\"ERR_TEST_RETRY\",action:\"failed\"},[Ow.ERR_TOO_MANY_BROADCASTERS]:{desc:\"ERR_TOO_MANY_BROADCASTERS\",action:\"failed\"},[Ow.ERR_TOO_MANY_SUBSCRIBERS]:{desc:\"ERR_TOO_MANY_SUBSCRIBERS\",action:\"failed\"},[Ow.ERR_LICENSE_ILLEGAL]:{desc:\"ERR_LICENSE_ILLEGAL\",action:\"quit\"},[Ow.ERR_LICENSE_MISSING]:{desc:\"ERR_LICENSE_MISSING\",action:\"quit\"},[Ow.ERR_LICENSE_EXPIRED]:{desc:\"ERR_LICENSE_EXPIRED\",action:\"quit\"},[Ow.ERR_LICENSE_MINUTES_EXCEEDED]:{desc:\"ERR_LICENSE_MINUTES_EXCEEDED\",action:\"quit\"},[Ow.ERR_LICENSE_PERIOD_INVALID]:{desc:\"ERR_LICENSE_PERIOD_INVALID\",action:\"quit\"},[Ow.ERR_LICENSE_MULTIPLE_SDK_SERVICE]:{desc:\"ERR_LICENSE_MULTIPLE_SDK_SERVICE\",action:\"quit\"}};function NO(e){const t=OO[e];return t||{desc:\"UNKNOWN_ERROR_\".concat(e),action:\"failed\"}}function DO(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function PO(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?DO(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):DO(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function LO(e){return e.every((e=>e.readyState===WebSocket.CLOSED||e.readyState===WebSocket.CLOSING))}function kO(e,t){if(\"string\"==typeof e)return e;const{proxy:i,host:n,port:r}=e;if(t){const e=XA(\"JOIN_GATEWAY_FALLBACK_PORT\")||443;return 443===e?\"wss://\".concat(n,\"/ws/?p=\").concat(Number(r)+150):\"wss://\".concat(n,\":\").concat(e,\"/ws/?p=\").concat(Number(r)+150)}return i?\"wss://\".concat(i,\"/ws/?h=\").concat(n,\"&p=\").concat(r):\"wss://\".concat(n,\":\").concat(r)}const MO=/wss:\\/\\/(.+)\\/ws\\/\\?h=(.+)&p=([0-9]+)\\/?/,UO=/wss:\\/\\/(.+)\\/ws\\/\\?p=([0-9]+)\\/?/,xO=/wss:\\/\\/(.+):([0-9]+)\\/?/,VO=/wss:\\/\\/(.[^\\/]+)\\/?/;let FO=0;class BO{constructor(e,t){Fg(this,\"id\",0),Fg(this,\"store\",void 0),Fg(this,\"recordIndex\",void 0),Fg(this,\"websockets\",[]),Fg(this,\"try443PortDuration\",2e3),Fg(this,\"forceCloseWSDuration\",5e3),Fg(this,\"try443PortTimeout\",null),Fg(this,\"forceCloseTimeout\",null),Fg(this,\"isTry443PortFailed\",!1),Fg(this,\"isNormalPortFailed\",!1),Fg(this,\"useDoubleDomain\",!1),Fg(this,\"useProxy\",!1),Fg(this,\"startTime\",Date.now()),this.id=++FO,this.try443PortDuration=XA(\"JOIN_GATEWAY_TRY_443PORT_DURATION\")||2e3,this.forceCloseWSDuration=e||5e3,this.store=t}closeAllWebsockets(){this.websockets.forEach((e=>{e.onopen=null,e.onclose=null,e.onmessage=null,e.close()})),this.websockets.length=0}clearTimeout(){this.forceCloseTimeout&&clearTimeout(this.forceCloseTimeout),this.try443PortTimeout&&clearTimeout(this.try443PortTimeout)}logger(){var e;const t=Date.now()-this.startTime;for(var i=arguments.length,n=new Array(i),r=0;r<i;r++)n[r]=arguments[r];fb.debug(\"[choose-best-ws \".concat(null===(e=this.store)||void 0===e?void 0:e.clientId,\" \").concat(this.id,\"] \").concat(t,\"ms:\"),...n)}createWebSocket(e,t,i){this.logger(\"createWebSocket:\",e,{isTry443Port:t,hasTimeoutDetection:i});const n=XA(\"GATEWAY_DOMAINS\"),r=Date.now(),o=[],s=n.find((t=>{var i;return Dn(i=e.host).call(i,t)}));s||(this.useDoubleDomain=!1);const a=[];if(this.useDoubleDomain)n.forEach((i=>{a.push(kO(PO(PO({},e),{},{host:e.host.replace(s,i)}),t))}));else{const i=PO({},e);if(t&&s){const e=n.find((e=>e!==s));e&&(i.host=i.host.replace(s,e))}a.push(kO(i,t))}try{a.forEach((e=>{const t=new WebSocket(e);t.binaryType=\"arraybuffer\",o.push(t),this.logger(\"ws is connecting:\",t.url)}))}catch(n){if(this.logger(\"ws create failed\"),o.forEach((e=>e.close())),o.length=0,this.useDoubleDomain)return this.useDoubleDomain=!1,this.createWebSocket(e,t,i);if(!t&&443!==Number(e.port))return this.createWebSocket(e,!0,i);throw new yb(Ry.WS_ERR,\"init websocket failed! Error: \".concat(n.toString()))}const c=Mv();this.store&&this.store.recordJoinChannelService({urls:o.map((e=>e.url)),service:\"gateway\"},this.recordIndex),o.forEach((e=>{e.onopen=()=>{this.logger(\"onopen: ws \".concat(e.url,\" open cost \").concat(Date.now()-r,\"ms\")),this.websockets.forEach((t=>{t!==e&&(t.onopen=null,t.onclose=null,t.onmessage=null,t.close(),this.logger(\"close backup websocket: \".concat(t.url)))})),this.websockets.length=0,c.resolve(e)},e.onclose=i=>{this.logger(\"onclose: ws \".concat(e.url,\" closed cost \").concat(Date.now()-r,\"ms state: \").concat(e.readyState)),t?this.isTry443PortFailed=LO(o):this.isNormalPortFailed=LO(o),this.logger(\"443: \".concat(this.useProxy?\"not try\":this.isTry443PortFailed?\"failed\":\"trying\",\" 47xx: \").concat(this.isNormalPortFailed?\"failed\":\"trying\")),(t&&this.isTry443PortFailed||!t&&(this.isTry443PortFailed||this.useProxy)&&this.isNormalPortFailed)&&(this.logger(\"onclose: all websocket is closed, \".concat(i.reason)),c.reject({code:i.code,reason:eO.A_ROUND_WS_FAILED}))},e.onmessage=t=>this.logger(\"\".concat(e.url,\" onmessage: \").concat(t.data))})),this.websockets.push(...o);return i||(()=>{const i=()=>{this.logger(\"5s timeout close un-opens, isWebsocket created: \",c.isResolved),this.websockets.forEach((e=>e.readyState!==WebSocket.OPEN&&e.close()))};if(t||this.useProxy)return this.logger(\"add 5s timeout at \".concat(t?\"try-443\":\"proxy\",\" condition\")),this.forceCloseTimeout=window.setTimeout(i,this.forceCloseWSDuration);this.try443PortTimeout=window.setTimeout((()=>{if(this.logger(\"2s timeout, isWebsocket created: \",c.isResolved),c.isResolved)return i();Hv().os===Fv.MAC_OS&&Zv()&&i(),this.createWebSocket(e,!0,!0).then((e=>c.resolve(e))).catch((e=>{this.isNormalPortFailed&&c.reject(e),this.logger(\"try 443 port to create ws failed\")})),this.forceCloseTimeout=window.setTimeout(i,this.forceCloseWSDuration)}),this.try443PortDuration)})(),c.promise}chooseBestWebsocket(e,t,i,n){return this.useDoubleDomain=!!t,\"string\"==typeof e&&(e=function(e){let t,i,n;return[,t,i,n]=e.match(MO)||[],t||([,i,n]=e.match(UO)||[]),i&&n||([,i,n]=e.match(xO)||[]),i&&n||([,i]=e.match(VO)||[]),i||fb.warning(\"un-destructible url: \",e),{proxy:t,host:i,port:n||\"443\"}}(e)),this.recordIndex=n,this.useProxy=!!e.proxy,i&&this.useProxy&&(fb.warn(\"cannot use 443 only when use proxy\"),i=!1),this.createWebSocket(e,!!i,!1).finally((()=>this.clearTimeout()))}}function jO(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}class GO extends xy{get url(){return this.websocket&&this.websocket.url||null}get reconnectMode(){return this._reconnectMode}set reconnectMode(e){var t;Dn(t=[\"tryNext\",\"recover\"]).call(t,e)&&this.resetReconnectCount(e),this._reconnectMode=e}get state(){return this._state}set state(e){e!==this._state&&(this._state=e,\"reconnecting\"===this._state?this.emit(Uw.RECONNECTING,this.reconnectReason):\"connected\"===this._state?this.emit(Uw.CONNECTED):\"closed\"===this._state?this.emit(Uw.CLOSED):\"failed\"===this._state&&this.emit(Uw.FAILED))}resetReconnectCount(e){fb.debug(\"websocket reset reconnect count, reason: \"+e),this.reconnectCount=0}constructor(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5?arguments[5]:void 0;super(),Fg(this,\"connectionID\",0),Fg(this,\"currentURLIndex\",0),Fg(this,\"urls\",[]),Fg(this,\"_reconnectMode\",\"tryNext\"),Fg(this,\"reconnectReason\",void 0),Fg(this,\"_initMutex\",new NA(\"websocket\")),Fg(this,\"name\",void 0),Fg(this,\"_state\",\"closed\"),Fg(this,\"reconnectInterrupter\",void 0),Fg(this,\"websocket\",void 0),Fg(this,\"retryConfig\",void 0),Fg(this,\"reconnectCount\",0),Fg(this,\"forceCloseTimeout\",5e3),Fg(this,\"onlineReconnectListener\",void 0),Fg(this,\"useCompress\",void 0),Fg(this,\"tryDoubleDomain\",!1),Fg(this,\"use443PortOnly\",!1),Fg(this,\"wsInflateLength\",0),Fg(this,\"wsDeflateLength\",0),Fg(this,\"closeEstablishingWs\",(()=>{})),Fg(this,\"store\",void 0),Fg(this,\"joinGatewayRecordIndex\",void 0),this.store=o,this.name=e,this.retryConfig=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?jO(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):jO(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},t),this.useCompress=i,this.tryDoubleDomain=n,this.use443PortOnly=r;const{timeout:s,timeoutFactor:a}=t,c=Math.max(300,Math.floor(3*s/5)),d=Math.max(1.2,Math.floor(8*a)/10);Xy.ONLINE&&(this.retryConfig.timeout=c,this.retryConfig.timeoutFactor=d),iA.on(Qy.NETWORK_STATE_CHANGE,((e,t)=>{e!==t&&(this.resetReconnectCount(\"network state change: \".concat(t,\" -> \").concat(e)),e===Xy.ONLINE?(this.retryConfig.timeout=c,this.retryConfig.timeoutFactor=d):(this.retryConfig.timeout=s,this.retryConfig.timeoutFactor=a))}))}getConnection(){return this.websocket||void 0}async init(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;const i=await this._initMutex.lock();this.forceCloseTimeout=t,this.urls=e,this.state=\"connecting\";try{const e=Mv(),t=this.urls[this.currentURLIndex];XA(\"ENABLE_PREALLOC_PC\")&&this.emit(TO.PRE_CONNECT_PC),this.createWebSocketConnection(t).then(e.resolve).catch(e.reject),this.once(Uw.CLOSED,(()=>{e.reject(new Cy(Ry.WS_DISCONNECT))})),this.once(Uw.CONNECTED,e.resolve),await e.promise}catch(e){}finally{i()}}close(e,t){if(this.currentURLIndex=0,this.resetReconnectCount(\"close\"),this.reconnectInterrupter&&this.reconnectInterrupter(),this.websocket){this.websocket.onclose=null,this.websocket.onopen=null,this.websocket.onmessage=null;const e=this.websocket;t?setTimeout((()=>e.close()),500):e.close(),this.websocket=void 0}this.state=e?\"failed\":\"closed\",this.closeEstablishingWs&&this.closeEstablishingWs()}reconnect(e,t){if(!this.websocket)return void fb.warning(\"[\".concat(this.name,\"] can not reconnect, no websocket\"));void 0!==e&&(this.reconnectMode=e),fb.debug(\"[\".concat(this.name,\"] reconnect is triggered initiative\")),\"number\"==typeof this.joinGatewayRecordIndex&&this.store&&this.store.recordJoinChannelService({status:\"error\",errors:[new Error(t)]},this.joinGatewayRecordIndex);const i=this.websocket.onclose;this.websocket.onclose=null,this.websocket.close(),i&&i.bind(this.websocket)({code:9999,reason:t})}sendMessage(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!this.websocket||this.websocket.readyState!==WebSocket.OPEN)throw new Cy(Ry.WS_ABORT,\"websocket is not ready\");try{t||(e=JSON.stringify(e)),this.websocket.send(e)}catch(e){throw new Cy(Ry.WS_ERR,\"send websocket message error\"+e.toString())}}setWsInflateData(e){this.wsDeflateLength=this.wsDeflateLength+e.originLength,this.wsInflateLength=this.wsInflateLength+e.compressedLength}getWsInflateData(){const e=this.wsInflateLength,t=this.wsDeflateLength;return this.clearWsInflateData(),{wsInflateLength:e,wsDeflateLength:t}}clearWsInflateData(){this.wsInflateLength=0,this.wsDeflateLength=0}async createWebSocketConnection(e){var t;const i=Mv();this.connectionID+=1,this.joinGatewayRecordIndex=void 0;const n=e=>{var t;null===(t=this.store)||void 0===t||t.signalChannelOpen(),fb.debug(\"[\".concat(this.name,\"] websocket opened:\"),e),this.reconnectMode=\"retry\",this.state=\"connected\",this.resetReconnectCount(\"opened\"),i.resolve()},r=async e=>{var t;if(fb.debug(\"[\".concat(this.name,\"] websocket close \").concat(null===(t=this.websocket)||void 0===t?void 0:t.url,\", code: \").concat(e.code,\", reason: \").concat(e.reason,\", current mode: \").concat(this.reconnectMode)),this.reconnectCount>=this.retryConfig.maxRetryCount)i.reject(new Cy(Ry.WS_DISCONNECT,\"websocket close: \".concat(e.code))),this.close();else{\"connected\"===this.state&&(this.reconnectReason=e.reason,this.state=\"reconnecting\");const t=eA(this,Uw.WILL_RECONNECT,this.reconnectMode,e.reason)||this.reconnectMode,n=await this.reconnectWithAction(t);if(\"closed\"===this.state)return void fb.debug(\"[\".concat(this.connectionID,\"] ws is closed, no need to reconnect\"));if(!n)return i.reject(new Cy(Ry.WS_DISCONNECT,\"websocket reconnect failed: \".concat(e.code))),this.close(!0);i.resolve()}},o=e=>{this.emit(Uw.ON_MESSAGE,e)},s=e=>{fb.warn(\"[\".concat(this.connectionID,\"] ws open error \").concat(e))};this.websocket&&(this.websocket.onclose=null,this.websocket.close()),XA(\"GATEWAY_WSS_ADDRESS\")&&this.name.startsWith(\"gateway\")&&(e=XA(\"GATEWAY_WSS_ADDRESS\")),fb.debug(\"[\".concat(this.name,\"] start connect, url:\"),e);const a=null===(t=this.store)||void 0===t?void 0:t.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"gateway\"});try{var c;const t=await this.chooseBestWebsocketConnection(e);this.websocket=t,n&&n(this.websocket.url),this.websocket.onclose=r,this.websocket.onmessage=o,this.websocket.onerror=s,null===(c=this.store)||void 0===c||c.recordJoinChannelService({endTs:Date.now(),status:\"success\"},a),this.joinGatewayRecordIndex=a}catch(e){const t=\"closed\"===this.state,n=e instanceof Cy,o=n&&e.code===Ry.WS_ABORT,s=n&&e.code===Ry.WS_ERR,c=n?e.message:e&&(e.reason||e.toString());fb.warning(\"[choose-best-ws] chooseBestWebsocket error: \".concat(c)),this.store&&this.store.recordJoinChannelService({endTs:Date.now(),status:o?\"aborted\":\"error\",errors:[e]},a),t||s?(i.reject(t?new Cy(Ry.WS_DISCONNECT,\"websocket is closed: \".concat(c)):new Cy(Ry.WS_ERR,\"init websocket failed: \".concat(c))),s&&fb.error(\"[\".concat(this.name,\"] init websocket failed: \").concat(c))):r&&r(e)}return i.promise}async reconnectWithAction(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this.reconnectCount>=this.retryConfig.maxRetryCount)return!1;if(0===this.urls.length)return!1;if(\"closed\"===this.state)return!1;fb.warning(\"[choose-best-ws] action: =>\",e),this.onlineReconnectListener||iA.isOnline||!iA.onlineWaiter||(this.onlineReconnectListener=iA.onlineWaiter.then((()=>{this.onlineReconnectListener=void 0})));let i=!0;if(this.reconnectInterrupter=()=>i=!1,t){const t=LA(this.reconnectCount,this.retryConfig);fb.debug(\"[\".concat(this.name,\"] wait \").concat(t,\"ms to reconnect websocket, mode: \").concat(e)),await Gh.race([mA(t),this.onlineReconnectListener||new Gh((()=>{}))])}if(\"closed\"===this._state||!i)return!1;this.reconnectCount+=1;const n=async(e,t)=>{this.emit(Uw.RECONNECT_CREATE_CONNECTION,t),await this.createWebSocketConnection(e)};try{if(\"retry\"===e)this.emit(Uw.RECONNECT_WAITTING_FINISH,e),await n(this.urls[this.currentURLIndex],e);else if(\"tryNext\"===e){if(this.currentURLIndex+=1,this.currentURLIndex>=this.urls.length)return this.reconnectWithAction(\"recover\",!1);fb.debug(\"[\".concat(this.name,\"] websocket url length: \").concat(this.urls.length,\" current index: \").concat(this.currentURLIndex)),this.emit(Uw.RECONNECT_WAITTING_FINISH,e),await n(this.urls[this.currentURLIndex],e)}else\"recover\"===e&&(fb.debug(\"[\".concat(this.name,\"] request new urls\")),this.resetReconnectCount(\"recover mode\"),this.emit(Uw.RECONNECT_WAITTING_FINISH,e),this.urls=await Zy(this,Uw.REQUEST_NEW_URLS),this.currentURLIndex=0,await n(this.urls[this.currentURLIndex],e))}catch(i){var r;fb.error(\"[\".concat(this.name,\"] reconnect failed \").concat(i&&i.toString()));const n=null==i||null===(r=i.data)||void 0===r?void 0:r.desc;return Array.isArray(n)&&Dn(n).call(n,\"dynamic key expired\")?(this.emit(Uw.ON_TOKEN_PRIVILEGE_DID_EXPIRE),!1):this.reconnectWithAction(e,t)}return!0}}class WO extends GO{constructor(e,t){super(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2],arguments.length>3&&void 0!==arguments[3]&&arguments[3],arguments.length>4&&void 0!==arguments[4]&&arguments[4],arguments.length>5?arguments[5]:void 0)}async chooseBestWebsocketConnection(e,t){const i=Mv(),n=function(e,t){return new BO(e,t)}(this.forceCloseTimeout,this.store);this.closeEstablishingWs=()=>{fb.debug(\"[choose-best-ws] close establishing websockets\"),n.closeAllWebsockets(),i.reject(new Cy(Ry.WS_ABORT,\"choose best websocket aborted\"))};const r=XA(\"GATEWAY_DOMAINS\");return fb.debug(\"[choose-best-ws] currentDomain: \",e,\", domains: \",r,\"total: \".concat(this.urls.length),\"current: \".concat(this.currentURLIndex+1)),n.chooseBestWebsocket(e,this.tryDoubleDomain,this.use443PortOnly,t).then(i.resolve).catch(i.reject),i.promise.finally((()=>{this.closeEstablishingWs=void 0}))}}class HO extends GO{constructor(e,t){super(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2],arguments.length>3&&void 0!==arguments[3]&&arguments[3],arguments.length>4&&void 0!==arguments[4]&&arguments[4],arguments.length>5?arguments[5]:void 0)}async chooseBestWebsocketConnection(e,t){return new Gh(((i,n)=>{let r=!1;const o=[];this.closeEstablishingWs=()=>{fb.debug(\"[choose-best-ws] close establishing websockets\"),o.forEach((e=>{e.onclose=null,e.onopen=null,e.onmessage=null,e.close()})),n(new Cy(Ry.WS_ABORT,\"choose best websocket aborted\"))};const s=XA(\"GATEWAY_DOMAINS\");let a;const c=e.indexOf(\"?h=\"),d=s.find((t=>-1!==c?Dn(e).call(e,t,c):Dn(e).call(e,t)));fb.debug(\"[choose-best-ws] currentDomain: \",d,\", domains: \",s);let l=!this.tryDoubleDomain||!d;if(!l&&d){var u;const h=Date.now();try{s.forEach((t=>{const i=-1===c?e.replace(d,t):e.substr(0,c)+e.substr(c).replace(d,t),n=new WebSocket(i);n.binaryType=\"arraybuffer\",o.push(n),fb.debug(\"[choose-best-ws] ws is connecting:\",n.url)}))}catch(e){for(fb.debug(\"[choose-best-ws] ws create failed, fallback to single url\"),o.forEach((e=>e.close()));o.length;)o.pop();l=!0}null===(u=this.store)||void 0===u||u.recordJoinChannelService({urls:o.map((e=>e.url)),service:\"gateway\"},t),o.forEach((e=>{e.onopen=()=>{if(r)return;const t=Date.now()-h;fb.debug(\"[choose-best-ws] ws open cost \".concat(t,\"ms\")),o.filter((t=>t!==e)).forEach((e=>{fb.debug(\"[choose-best-ws]close backup websocket: \".concat(e.url)),e.close()})),r=!0,i(e)},e.onclose=e=>{if(a=e,r)return;o.find((e=>!(e.readyState===WebSocket.CLOSED||e.readyState===WebSocket.CLOSING)))||(fb.debug(\"[choose-best-ws] all websocket is closed\"),r=!0,n(a))},e.onmessage=t=>{fb.debug(\"[choose-best-ws]\".concat(e.url,\" onmessage: \").concat(t.data))}})),mA(this.forceCloseTimeout).then((()=>{o.forEach((e=>{e.readyState!==WebSocket.OPEN&&e.close()}))}))}if(l){var h;let r;fb.debug(\"[choose-best-ws] use single url: \",e),null===(h=this.store)||void 0===h||h.recordJoinChannelService({urls:[e],service:\"gateway\"},t);try{r=new WebSocket(e),o.push(r),r.binaryType=\"arraybuffer\"}catch(e){const t=new Cy(Ry.WS_ERR,\"init websocket failed! Error: \".concat(e.toString()));return fb.error(\"[\".concat(this.name,\"]\").concat(t)),void n(t)}r.onopen=()=>{i(r)},r.onclose=e=>{n(e)},r.onmessage=e=>{fb.debug(\"[choose-best-ws]\".concat(r.url,\" onmessage: \").concat(e.data))},mA(this.forceCloseTimeout).then((()=>{r&&r.readyState!==WebSocket.OPEN&&r.close()}))}})).then((e=>(this.closeEstablishingWs=void 0,e))).catch((e=>{throw this.closeEstablishingWs=void 0,e}))}}class KO extends xy{get connectionState(){return this._connectionState}set connectionState(e){e!==this._connectionState&&(this._connectionState=e,e===Nw.CONNECTED?this.emit(Dw.WS_CONNECTED):e===Nw.RECONNECTING?this.emit(Dw.WS_RECONNECTING,this._websocketReconnectReason):e===Nw.CLOSED&&this.emit(Dw.WS_CLOSED,this._disconnectedReason))}get currentURLIndex(){return this.websocket.currentURLIndex}get url(){return this.websocket&&this.websocket.url||null}get rtt(){return this.rttRolling.mean()}constructor(e,t){super(),Fg(this,\"_disconnectedReason\",void 0),Fg(this,\"_websocketReconnectReason\",void 0),Fg(this,\"_connectionState\",Nw.CLOSED),Fg(this,\"reconnectToken\",void 0),Fg(this,\"websocket\",void 0),Fg(this,\"openConnectionTime\",void 0),Fg(this,\"clientId\",void 0),Fg(this,\"lastMsgTime\",Date.now()),Fg(this,\"uploadCache\",[]),Fg(this,\"uploadCacheInterval\",void 0),Fg(this,\"rttRolling\",new MA(5)),Fg(this,\"pingpongTimer\",void 0),Fg(this,\"wsInflateDataTimer\",void 0),Fg(this,\"pingpongTimeoutCount\",0),Fg(this,\"joinResponse\",void 0),Fg(this,\"multiIpOption\",void 0),Fg(this,\"initError\",void 0),Fg(this,\"spec\",void 0),Fg(this,\"store\",void 0),Fg(this,\"onWebsocketMessage\",(e=>{if(e.data instanceof ArrayBuffer)return void this.emit(Dw.ON_BINARY_DATA,e.data);const t=JSON.parse(e.data);if(this.lastMsgTime=Date.now(),Object.prototype.hasOwnProperty.call(t,\"_id\")){const e=\"res-@\".concat(t._id);this.emit(e,t._result,t._message)}else if(Object.prototype.hasOwnProperty.call(t,\"_type\")){if(this.emit(t._type,t._message),t._type===kw.ON_NOTIFICATION&&this.handleNotification(t._message),t._type===kw.ON_USER_BANNED)switch(t._message.error_code){case 14:this.close(Hy.UID_BANNED);break;case 15:this.close(Hy.IP_BANNED);break;case 16:this.close(Hy.CHANNEL_BANNED)}if(t._type===kw.ON_USER_LICENSE_BANNED)switch(t._message.error_code){case Ow.ERR_LICENSE_MISSING:this.close(Hy.LICENSE_MISSING);break;case Ow.ERR_LICENSE_EXPIRED:this.close(Hy.LICENSE_EXPIRED);break;case Ow.ERR_LICENSE_MINUTES_EXCEEDED:this.close(Hy.LICENSE_MINUTES_EXCEEDED);break;case Ow.ERR_LICENSE_PERIOD_INVALID:this.close(Hy.LICENSE_PERIOD_INVALID);break;case Ow.ERR_LICENSE_MULTIPLE_SDK_SERVICE:this.close(Hy.LICENSE_MULTIPLE_SDK_SERVICE);break;case Ow.ERR_LICENSE_ILLEGAL:this.close(Hy.LICENSE_ILLEGAL);break;default:this.close()}}})),this.clientId=e.clientId,this.spec=e,this.store=t,this.websocket=new WO(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,XA(\"JOIN_GATEWAY_USE_DUAL_DOMAIN\"),XA(\"JOIN_GATEWAY_USE_443PORT_ONLY\"),t),this.handleWebsocketEvents(),window.addEventListener(\"offline\",(()=>{this.connectionState===Nw.CONNECTED&&this.reconnect(\"retry\",Jy.OFFLINE)}))}async request(e,t,i,n){const r=TA(6,\"\"),o={_id:r,_type:e,_message:t},s=this.websocket.connectionID,a=()=>new Gh(((t,i)=>{if(this.connectionState===Nw.CONNECTED)return t();const n=()=>{this.off(Dw.WS_CLOSED,r),t()},r=()=>{this.off(Dw.WS_CONNECTED,n),i(new yb(Ry.WS_ABORT))};this.once(Dw.WS_CONNECTED,n),this.once(Dw.WS_CLOSED,r),e!==Pw.PUBLISH&&e!==Pw.PUBLISH_DATASTREAM&&e!==Pw.SUBSCRIBE&&e!==Pw.SUBSCRIBE_DATASTREAM&&e!==Pw.UNSUBSCRIBE&&e!==Pw.UNSUBSCRIBE_DATASTREAM&&e!==Pw.UNPUBLISH&&e!==Pw.UNPUBLISH_DATASTREAM&&e!==Pw.CONTROL&&e!==Pw.RESTART_ICE||this.once(Dw.DISCONNECT_P2P,(()=>{i(new yb(Ry.DISCONNECT_P2P))})),e!==Pw.PUBLISH&&e!==Pw.RESTART_ICE||this.once(Dw.ABORT_P2P_EXECUTION,(()=>{i(new yb(Ry.DISCONNECT_P2P))}))}));if(this.connectionState!==Nw.CONNECTING&&this.connectionState!==Nw.RECONNECTING||e===Pw.JOIN||e===Pw.REJOIN||await a(),this.websocket.sendMessage(o,!0),n)return;const c=new Gh(((i,n)=>{let o=!1;const a=(n,r)=>{o=!0,i({isSuccess:\"success\"===n,message:r||{}}),this.off(Dw.WS_CLOSED,c),this.off(Dw.WS_RECONNECTING,c),this.emit(Dw.REQUEST_SUCCESS,e,t)};this.once(\"res-@\".concat(r),a);const c=()=>{n(new yb(Ry.WS_ABORT,\"type: \".concat(e))),this.off(Dw.WS_CLOSED,c),this.off(Dw.WS_RECONNECTING,c),this.off(\"res-@\".concat(r),a)};this.once(Dw.WS_CLOSED,c),this.once(Dw.WS_RECONNECTING,c),mA(XA(\"SIGNAL_REQUEST_TIMEOUT\")).then((()=>{this.websocket.connectionID!==s||o||(fb.warning(\"[\".concat(this.clientId,\"] ws request timeout, type: \").concat(e)),this.emit(Dw.REQUEST_TIMEOUT,e,t))}))}));let d=null;try{d=await c}catch(n){if(this.connectionState===Nw.CLOSED||e===Pw.LEAVE)throw new yb(Ry.WS_ABORT);return!this.spec.forceWaitGatewayResponse||i?n.throw():e===Pw.JOIN||e===Pw.REJOIN?null:(await a(),await this.request(e,t))}if(d.isSuccess)return d.message;const l=Number(d.message.error_code||d.message.code),u=NO(l),h=new yb(Ry.UNEXPECTED_RESPONSE,\"\".concat(u.desc,\": \").concat(d.message.error_str),{code:l,data:d.message,desc:u.desc});return\"success\"===u.action?d.message:(fb.warning(\"[\".concat(this.clientId,\"] [\").concat(this.websocket.connectionID,\"] unexpected response from type \").concat(e,\", error_code: \").concat(l,\", message: \").concat(u.desc,\", action: \").concat(u.action)),l===Ow.ERR_TOO_MANY_BROADCASTERS?e===Pw.JOIN||e===Pw.REJOIN?(this.initError=h,this.close(),h.throw()):h.throw():\"failed\"===u.action?h.throw():\"quit\"===u.action?(this.initError=h,this.close(),h.throw()):(l===Ow.ERR_JOIN_BY_MULTI_IP?(this.multiIpOption=d.message.option,fb.warning(\"[\".concat(this.clientId,\"] detect multi ip, recover\")),this.reconnect(\"recover\",Jy.MULTI_IP)):this.reconnect(u.action,Jy.SERVER_ERROR),e===Pw.JOIN||e===Pw.REJOIN?null:await this.request(e,t)))}waitMessage(e,t){return new Gh((i=>{const n=r=>{(!t||t(r))&&(this.off(e,n),i(r))};this.on(e,n)}))}uploadWRTCStats(e){if(!this.store.sessionId)return void fb.warn(\"[\".concat(this.clientId,\"] no session id when upload wrtc stats\"));const t={lts:Date.now(),sid:this.store.sessionId,uid:this.store.intUid,stats:e};this.upload(Lw.WRTC_STATS,t)}upload(e,t){const i={_type:e,_message:t};try{this.websocket.sendMessage(i)}catch(e){const t=XA(\"MAX_UPLOAD_CACHE\")||50;this.uploadCache.push(i),this.uploadCache.length>t&&this.uploadCache.splice(0,1),this.uploadCache.length>0&&!this.uploadCacheInterval&&(this.uploadCacheInterval=window.setInterval((()=>{if(this.connectionState!==Nw.CONNECTED)return;const e=this.uploadCache.splice(0,1)[0];0===this.uploadCache.length&&(window.clearInterval(this.uploadCacheInterval),this.uploadCacheInterval=void 0),this.upload(e._type,e._message)}),XA(\"UPLOAD_CACHE_INTERVAL\")||2e3))}}send(e,t){const i={_type:e,_message:t};this.websocket.sendMessage(i)}init(e,t){return this.initError=void 0,this.multiIpOption=void 0,this.joinResponse=void 0,this.reconnectToken=void 0,this.openConnectionTime=void 0,new Gh(((t,i)=>{this.once(Dw.WS_CONNECTED,(()=>t(this.joinResponse))),this.once(Dw.WS_CLOSED,(()=>i(this.initError||new yb(Ry.WS_ABORT)))),this.connectionState=Nw.CONNECTING,this.websocket.init(e).catch(i),this.wsInflateDataTimer&&window.clearInterval(this.wsInflateDataTimer),this.wsInflateDataTimer=window.setInterval((()=>{this.handleWsInflateData()}),2e4)}))}close(e){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.wsInflateDataTimer&&(this.handleWsInflateData(),window.clearInterval(this.wsInflateDataTimer),this.wsInflateDataTimer=void 0),this.reconnectToken=void 0,this.joinResponse=void 0,this._disconnectedReason=e||Hy.LEAVE,this.connectionState=Nw.CLOSED,fb.debug(\"[\".concat(this.clientId,\"] \")+\"will close websocket in signal\"),this.websocket.close()}async join(){if(!this.joinResponse){this.emit(Dw.ABORT_P2P_EXECUTION);const e=await Zy(this,Dw.REQUEST_JOIN_INFO),t=await this.request(Pw.JOIN,e);if(!t)return this.emit(Dw.REPORT_JOIN_GATEWAY,eO.TIMEOUT,this.url||\"\"),!1;this.joinResponse=t,this.emit(Dw.JOIN_RESPONSE,this.joinResponse),this.reconnectToken=this.joinResponse.rejoin_token}return this.connectionState=Nw.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),!0}async rejoin(){if(!this.reconnectToken)throw new yb(Ry.UNEXPECTED_ERROR,\"can not rejoin, no rejoin token\");const e=tA(this,Dw.REQUEST_REJOIN_INFO);e.token=this.reconnectToken;const t=await this.request(Pw.REJOIN,e);return!!t&&(this.connectionState=Nw.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),t.peers&&t.peers.forEach((e=>{this.emit(kw.ON_USER_ONLINE,{uid:e.uid}),e.audio&&this.emit(kw.ON_ADD_AUDIO_STREAM,{uid:e.uid,uint_id:e.uint_id,audio:!0,ssrcId:e.audio_ssrc}),e.video&&this.emit(kw.ON_ADD_VIDEO_STREAM,{uid:e.uid,uint_id:e.uint_id,video:!0,ssrcId:e.video_ssrc}),e.audio_mute?this.emit(kw.MUTE_AUDIO,{uid:e.uid}):this.emit(kw.UNMUTE_AUDIO,{uid:e.uid}),e.video_mute?this.emit(kw.MUTE_VIDEO,{uid:e.uid}):this.emit(kw.UNMUTE_VIDEO,{uid:e.uid}),e.audio_enable_local?this.emit(kw.ENABLE_LOCAL_AUDIO,{uid:e.uid}):this.emit(kw.DISABLE_LOCAL_AUDIO,{uid:e.uid}),e.video_enable_local?this.emit(kw.ENABLE_LOCAL_VIDEO,{uid:e.uid}):this.emit(kw.DISABLE_LOCAL_VIDEO,{uid:e.uid}),e.audio||e.video||this.emit(kw.ON_REMOVE_STREAM,{uid:e.uid,uint_id:e.uint_id})})),!0)}reconnect(e,t){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.websocket.reconnect(e,t)}handleNotification(e){fb.debug(\"[\".concat(this.clientId,\"] receive notification: \"),e);const t=NO(e.code);if(28===e.code&&\"detail\"in e&&(fb.info(\"[\".concat(this.clientId,\"] receive recover notification: \"),e.detail),this.emit(Dw.RECOVER_NOTIFICATION,e.detail)),\"success\"!==t.action){if(\"failed\"!==t.action)return\"quit\"===t.action?(\"ERR_REPEAT_JOIN_CHANNEL\"===t.desc&&this.close(Hy.UID_BANNED),void this.close()):void this.reconnect(t.action,Jy.SERVER_ERROR);fb.error(\"[\".concat(this.clientId,\"] ignore error: \"),t.desc)}}handlePingPong(){if(!this.websocket||\"connected\"!==this.websocket.state)return;this.pingpongTimeoutCount>0&&this.rttRolling.add(3e3),this.pingpongTimeoutCount+=1;const e=XA(\"PING_PONG_TIME_OUT\"),t=Date.now();this.pingpongTimeoutCount>=e&&(fb.warning(\"[\".concat(this.clientId,\"] PING-PONG Timeout. Last Socket Message: \").concat(t-this.lastMsgTime,\"ms\")),t-this.lastMsgTime>XA(\"WEBSOCKET_TIMEOUT_MIN\"))?this.reconnect(\"retry\",Jy.TIMEOUT):this.request(Pw.PING,void 0,!0).then((()=>{this.pingpongTimeoutCount=0;const e=Date.now()-t;this.rttRolling.add(e),XA(\"REPORT_STATS\")&&this.send(Pw.PING_BACK,{pingpongElapse:e})})).catch((e=>{}))}handleWsInflateData(){const{wsInflateLength:e,wsDeflateLength:t}=this.websocket.getWsInflateData();0!==e&&0!==t&&this.upload(Lw.WS_INFLATE_DATA_LENGTH,{ws_deflate_length:t,ws_inflate_length:e})}handleWebsocketEvents(){this.websocket.on(Uw.RECONNECT_WAITTING_FINISH,(e=>{this.emit(Dw.WS_RECONNECT_WAITTING_FINISH,e)})),this.websocket.on(Uw.RECONNECT_CREATE_CONNECTION,(e=>{this.emit(Dw.WS_RECONNECT_CREATE_CONNECTION,e)})),this.websocket.on(Uw.ON_MESSAGE,this.onWebsocketMessage),this.websocket.on(Uw.CLOSED,(()=>{this.connectionState=Nw.CLOSED})),this.websocket.on(Uw.FAILED,(()=>{this._disconnectedReason=Hy.NETWORK_ERROR,this.connectionState=Nw.CLOSED})),this.websocket.on(Uw.RECONNECTING,(e=>{this._websocketReconnectReason=e,this.joinResponse=void 0,this.connectionState===Nw.CONNECTED?this.connectionState=Nw.RECONNECTING:this.connectionState=Nw.CONNECTING})),this.websocket.on(Uw.WILL_RECONNECT,((e,t,i)=>{const n=tA(this,Dw.IS_P2P_DISCONNECTED),r=n||\"retry\"!==e;n&&\"retry\"===e&&(fb.debug(\"\".concat(this.clientId,\" reconnect mode is retry, but p2p lost, change to tryNext\")),e=\"tryNext\",t=eO.P2P_DISCONNECTED),r&&(fb.debug(\"\".concat(this.clientId,\" will renewSession, reconnect mode: \").concat(e)),this.emit(Dw.REPORT_JOIN_GATEWAY,t||eO.UNKNOWN_REASON,this.url||\"\"),this.reconnectToken=void 0,this.emit(Dw.DISCONNECT_P2P)),i(e)})),this.websocket.on(Uw.CONNECTED,(()=>{this.openConnectionTime=Date.now(),this.reconnectToken?this.rejoin().catch((e=>{fb.warning(\"[\".concat(this.clientId,\"] rejoin failed \").concat(e)),this.reconnect(\"tryNext\",Jy.SERVER_ERROR)})):this.join().catch((e=>{if(this.emit(Dw.REPORT_JOIN_GATEWAY,e,this.url||\"\"),e instanceof yb){if(e.code===Ry.UNEXPECTED_RESPONSE&&e.data.code===Ow.ERR_NO_AUTHORIZED)return this.initError=new yb(Ry.CAN_NOT_GET_GATEWAY_SERVER,\"AgoraRTCError CAN_NOT_GET_GATEWAY_SERVER: dynamic key expired\"),fb.warning(\"[\".concat(this.clientId,\"] reconnect no authorized, recover\")),void this.reconnect(\"recover\",Jy.SERVER_ERROR);fb.error(\"[\".concat(this.clientId,\"] join gateway request failed\"),e.toString()),this.spec.forceWaitGatewayResponse?this.reconnect(\"tryNext\",Jy.SERVER_ERROR):(this.initError=e,this.close())}}))})),this.websocket.on(Uw.REQUEST_NEW_URLS,((e,t)=>{Zy(this,Dw.REQUEST_RECOVER,this.multiIpOption).then(e).catch(t)})),this.websocket.on(Uw.ON_TOKEN_PRIVILEGE_DID_EXPIRE,(()=>{this.emit(kw.ON_TOKEN_PRIVILEGE_DID_EXPIRE)})),this.websocket.on(TO.PRE_CONNECT_PC,(()=>{this.emit(Dw.PRE_CONNECT_PC)}))}}let YO=function(e){return e[e.CHOOSE_SERVER=11]=\"CHOOSE_SERVER\",e[e.CLOUD_PROXY=18]=\"CLOUD_PROXY\",e[e.CLOUD_PROXY_5=20]=\"CLOUD_PROXY_5\",e[e.CLOUD_PROXY_FALLBACK=26]=\"CLOUD_PROXY_FALLBACK\",e}({});function qO(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function zO(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?qO(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):qO(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function JO(e){return e.match(/^[\\.\\:\\d]+$/)?\"\".concat(e.replace(/[^\\d]/g,\"-\"),\".\").concat(XA(\"TURN_DOMAIN\")):(fb.info(\"Unidentified as ip: \".concat(e,\", use as host\")),e)}function XO(e,t){e.addresses||(e.addresses=[]);const i=function(e,t){if(XA(\"CONNECT_GATEWAY_WITHOUT_DOMAIN\"))return e.map((e=>{let{ip:t,port:i}=e;return{address:\"\".concat(t,\":\").concat(i)}}));const i=XA(\"GATEWAY_DOMAINS\");let n=i[1]&&Dn(t).call(t,i[1])?1:0;return e.map((e=>{let{domain_prefix:t,port:r,ip:o}=e;if(t)return{address:\"\".concat(t,\".\").concat(i[n++%i.length],\":\").concat(r)};const s=/^[\\.\\:\\d]+$/.test(o),a=s?\"\".concat(o.replace(/[^\\d]/g,\"-\"),\".\").concat(i[n++%i.length],\":\").concat(r):\"\".concat(o,\":\").concat(r);return s||fb.info(\"Unidentified as ip: \".concat(o,\", use as host\")),{ip:o,port:r,address:a}}))}(e.addresses,t),n=Array.isArray(e.detail)&&e.detail[18];if(n&&\"string\"==typeof n){const e=n.split(\";\");for(let t=0;t<e.length;t++){var r;const n=jp(r=e[t]).call(r);i[t]&&n&&(i[t].ip6=n)}}const o=e.detail&&e.detail.candidate;let s;if(o){const[e,t]=o.split(\":\");e&&t&&(s={port:Number(t),ip:e,address:\"\".concat(e,\":\").concat(t)})}return{gatewayAddrs:i,apGatewayAddress:s,uid:e.uid,cid:e.cid,cert:e.cert,vid:e.detail&&e.detail[8],uni_lbs_ip:e.detail&&e.detail[1],res:e,csIp:e.detail&&e.detail[502]}}function QO(e){return\"number\"==typeof e?e:e.exact||e.ideal||e.max||e.min||0}function ZO(e){const t=e._encoderConfig;if(!t)return{};const i={resolution:t.width&&t.height?\"\".concat(QO(t.width),\"x\").concat(QO(t.height)):void 0,maxVideoBW:t.bitrateMax,minVideoBW:t.bitrateMin};return\"number\"==typeof t.frameRate?(i.maxFrameRate=t.frameRate,i.minFrameRate=t.frameRate):t.frameRate&&(i.maxFrameRate=t.frameRate.max||t.frameRate.ideal||t.frameRate.exact||t.frameRate.min,i.minFrameRate=t.frameRate.min||t.frameRate.ideal||t.frameRate.exact||t.frameRate.max),i}function $O(e){return e>=0&&e<.17?1:e>=.17&&e<.36?2:e>=.36&&e<.59?3:e>=.59&&e<=1?4:e>1?5:0}function eN(e,t){let i,n,r;switch(t){case YO.CHOOSE_SERVER:n=4096,r=\"choose server\";break;case YO.CLOUD_PROXY:n=1048576,r=\"proxy\";break;case YO.CLOUD_PROXY_5:n=4194304,r=\"proxy5\";break;case YO.CLOUD_PROXY_FALLBACK:n=4194310,r=\"proxy fallback\";break;default:throw new yb(Ry.UNEXPECTED_ERROR,\"multi unlibs response transformer get unknown service id\",{csIp:e.detail&&e.detail[502],retry:!1})}if(e.response_body.forEach((t=>{t.buffer&&t.buffer.flag===n&&(i={code:t.buffer.code,addresses:(t.buffer.edges_services||[]).map((e=>zO(zO({},e),{},{ticket:t.buffer.cert}))),server_ts:e.enter_ts,uid:t.buffer.uid,cid:t.buffer.cid,cname:t.buffer.cname,detail:zO(zO({},t.buffer.detail),e.detail),flag:t.buffer.flag,opid:e.opid,cert:t.buffer.cert})})),!i)throw new yb(Ry.MULTI_UNILBS_RESPONSE_ERROR,\"cannot parse response \".concat(r,\" from multi unilbs response\"),{csIp:e.detail&&e.detail[502]});return i}async function tN(e,t){return await Gh.all(e.addresses.map((async e=>({address:JO(e.ip),tcpport:e.port,udpport:e.port,username:t&&XA(\"ENCRYPT_PROXY_USERNAME_AND_PSW\")&&window.isSecureContext?t.toString():KA.username,password:t&&XA(\"ENCRYPT_PROXY_USERNAME_AND_PSW\")&&window.isSecureContext?await Uy(t.toString()):KA.password}))))}function iN(e,t){const i=t.getMediaStreamTrack(!0).getSettings(),n=t.videoHeight||i.height,r=t.videoWidth||i.width;return n&&r?Math.max(Math.min(n,r)/Math.min(QO(e.height),QO(e.width)),1):(fb.warning(\"can't get ori-track's height, default scale down 4 times for low stream\"),4)}function nN(e){let{candidateType:t,relayProtocol:i,type:n,address:r,port:o,protocol:s}=e;return\"local-candidate\"===n?{candidateType:t,relayProtocol:i,protocol:s}:{candidateType:t,relayProtocol:i,address:r,port:o,protocol:s}}var rN,oN=i(ew),sN=Xi(\"Array\").values,aN=pn,cN=Ze,dN=l,lN=sN,uN=Array.prototype,hN={DOMTokenList:!0,NodeList:!0},pN=function(e){var t=e.values;return e===uN||dN(uN,e)&&t===uN.values||cN(hN,aN(e))?lN:t},_N=i(pN),EN=N,fN=d,mN=L,TN=n,SN=eo,gN=Br,RN=k,CN=Je,IN=K,vN=Object.assign,yN=Object.defineProperty,AN=fN([].concat),bN=!vN||TN((function(){if(EN&&1!==vN({b:1},vN(yN({},\"a\",{enumerable:!0,get:function(){yN(this,\"b\",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},i=Symbol(),n=\"abcdefghijklmnopqrst\";return e[i]=7,n.split(\"\").forEach((function(e){t[e]=e})),7!=vN({},e)[i]||SN(vN({},t)).join(\"\")!=n}))?function(e,t){for(var i=CN(e),n=arguments.length,r=1,o=gN.f,s=RN.f;n>r;)for(var a,c=IN(arguments[r++]),d=o?AN(SN(c),o(c)):SN(c),l=d.length,u=0;l>u;)a=d[u++],EN&&!mN(s,c,a)||(i[a]=c[a]);return i}:vN,wN=ii,ON=rs,NN=Xt,DN=L,PN=Je,LN=function(e,t,i,n){try{return n?t(wN(i)[0],i[1]):t(i)}catch(t){ON(e,\"throw\",t)}},kN=jo,MN=jc,UN=Gi,xN=E_,VN=es,FN=qo,BN=Array,jN=d,GN=2147483647,WN=/[^\\0-\\u007E]/,HN=/[.\\u3002\\uFF0E\\uFF61]/g,KN=\"Overflow: input needs wider integers to process\",YN=RangeError,qN=jN(HN.exec),zN=Math.floor,JN=String.fromCharCode,XN=jN(\"\".charCodeAt),QN=jN([].join),ZN=jN([].push),$N=jN(\"\".replace),eD=jN(\"\".split),tD=jN(\"\".toLowerCase),iD=function(e){return e+22+75*(e<26)},nD=function(e,t,i){var n=0;for(e=i?zN(e/700):e>>1,e+=zN(e/t);e>455;)e=zN(e/35),n+=36;return zN(n+36*e/(e+38))},rD=function(e){var t=[];e=function(e){for(var t=[],i=0,n=e.length;i<n;){var r=XN(e,i++);if(r>=55296&&r<=56319&&i<n){var o=XN(e,i++);56320==(64512&o)?ZN(t,((1023&r)<<10)+(1023&o)+65536):(ZN(t,r),i--)}else ZN(t,r)}return t}(e);var i,n,r=e.length,o=128,s=0,a=72;for(i=0;i<e.length;i++)(n=e[i])<128&&ZN(t,JN(n));var c=t.length,d=c;for(c&&ZN(t,\"-\");d<r;){var l=GN;for(i=0;i<e.length;i++)(n=e[i])>=o&&n<l&&(l=n);var u=d+1;if(l-o>zN((GN-s)/u))throw YN(KN);for(s+=(l-o)*u,o=l,i=0;i<e.length;i++){if((n=e[i])<o&&++s>GN)throw YN(KN);if(n==o){for(var h=s,p=36;;){var _=p<=a?1:p>=a+26?26:p-a;if(h<_)break;var E=h-_,f=36-_;ZN(t,JN(iD(_+E%f))),h=zN(E/f),p+=36}ZN(t,JN(iD(h))),a=nD(s,u,d==c),s=0,d++}}s++,o++}return QN(t,\"\")},oD=wi,sD=N,aD=Gg,cD=h,dD=Xt,lD=d,uD=ha,hD=hc,pD=Sc,_D=Ze,ED=bN,fD=function(e){var t=PN(e),i=MN(this),n=arguments.length,r=n>1?arguments[1]:void 0,o=void 0!==r;o&&(r=NN(r,n>2?arguments[2]:void 0));var s,a,c,d,l,u,h=FN(t),p=0;if(!h||this===BN&&kN(h))for(s=UN(t),a=i?new this(s):BN(s);s>p;p++)u=o?r(t[p],p):t[p],xN(a,p,u);else for(l=(d=VN(t,h)).next,a=i?new this:[];!(c=DN(l,d)).done;p++)u=o?LN(d,r,[c.value,p],!0):c.value,xN(a,p,u);return a.length=p,a},mD=R_,TD=Ch.codeAt,SD=function(e){var t,i,n=[],r=eD($N(tD(e),HN,\".\"),\".\");for(t=0;t<r.length;t++)i=r[t],ZN(n,qN(WN,i)?\"xn--\"+rD(i):i);return QN(n,\".\")},gD=fn,RD=Da,CD=Zc,ID=rC,vD=ra,yD=vD.set,AD=vD.getterFor(\"URL\"),bD=ID.URLSearchParams,wD=ID.getState,OD=cD.URL,ND=cD.TypeError,DD=cD.parseInt,PD=Math.floor,LD=Math.pow,kD=lD(\"\".charAt),MD=lD(/./.exec),UD=lD([].join),xD=lD(1..toString),VD=lD([].pop),FD=lD([].push),BD=lD(\"\".replace),jD=lD([].shift),GD=lD(\"\".split),WD=lD(\"\".slice),HD=lD(\"\".toLowerCase),KD=lD([].unshift),YD=\"Invalid scheme\",qD=\"Invalid host\",zD=\"Invalid port\",JD=/[a-z]/i,XD=/[\\d+-.a-z]/i,QD=/\\d/,ZD=/^0x/i,$D=/^[0-7]+$/,eP=/^\\d+$/,tP=/^[\\da-f]+$/i,iP=/[\\0\\t\\n\\r #%/:<>?@[\\\\\\]^|]/,nP=/[\\0\\t\\n\\r #/:<>?@[\\\\\\]^|]/,rP=/^[\\u0000-\\u0020]+/,oP=/(^|[^\\u0000-\\u0020])[\\u0000-\\u0020]+$/,sP=/[\\t\\n\\r]/g,aP=function(e){var t,i,n,r;if(\"number\"==typeof e){for(t=[],i=0;i<4;i++)KD(t,e%256),e=PD(e/256);return UD(t,\".\")}if(\"object\"==typeof e){for(t=\"\",n=function(e){for(var t=null,i=1,n=null,r=0,o=0;o<8;o++)0!==e[o]?(r>i&&(t=n,i=r),n=null,r=0):(null===n&&(n=o),++r);return r>i&&(t=n,i=r),t}(e),i=0;i<8;i++)r&&0===e[i]||(r&&(r=!1),n===i?(t+=i?\":\":\"::\",r=!0):(t+=xD(e[i],16),i<7&&(t+=\":\")));return\"[\"+t+\"]\"}return e},cP={},dP=ED({},cP,{\" \":1,'\"':1,\"<\":1,\">\":1,\"`\":1}),lP=ED({},dP,{\"#\":1,\"?\":1,\"{\":1,\"}\":1}),uP=ED({},lP,{\"/\":1,\":\":1,\";\":1,\"=\":1,\"@\":1,\"[\":1,\"\\\\\":1,\"]\":1,\"^\":1,\"|\":1}),hP=function(e,t){var i=TD(e,0);return i>32&&i<127&&!_D(t,e)?e:encodeURIComponent(e)},pP={ftp:21,file:null,http:80,https:443,ws:80,wss:443},_P=function(e,t){var i;return 2==e.length&&MD(JD,kD(e,0))&&(\":\"==(i=kD(e,1))||!t&&\"|\"==i)},EP=function(e){var t;return e.length>1&&_P(WD(e,0,2))&&(2==e.length||\"/\"===(t=kD(e,2))||\"\\\\\"===t||\"?\"===t||\"#\"===t)},fP=function(e){return\".\"===e||\"%2e\"===HD(e)},mP={},TP={},SP={},gP={},RP={},CP={},IP={},vP={},yP={},AP={},bP={},wP={},OP={},NP={},DP={},PP={},LP={},kP={},MP={},UP={},xP={},VP=function(e,t,i){var n,r,o,s=gD(e);if(t){if(r=this.parse(s))throw ND(r);this.searchParams=null}else{if(void 0!==i&&(n=new VP(i,!0)),r=this.parse(s,null,n))throw ND(r);(o=wD(new bD)).bindURL(this),this.searchParams=o}};VP.prototype={type:\"URL\",parse:function(e,t,i){var n,r,o,s,a,c=this,d=t||mP,l=0,u=\"\",h=!1,p=!1,_=!1;for(e=gD(e),t||(c.scheme=\"\",c.username=\"\",c.password=\"\",c.host=null,c.port=null,c.path=[],c.query=null,c.fragment=null,c.cannotBeABaseURL=!1,e=BD(e,rP,\"\"),e=BD(e,oP,\"$1\")),e=BD(e,sP,\"\"),n=fD(e);l<=n.length;){switch(r=n[l],d){case mP:if(!r||!MD(JD,r)){if(t)return YD;d=SP;continue}u+=HD(r),d=TP;break;case TP:if(r&&(MD(XD,r)||\"+\"==r||\"-\"==r||\".\"==r))u+=HD(r);else{if(\":\"!=r){if(t)return YD;u=\"\",d=SP,l=0;continue}if(t&&(c.isSpecial()!=_D(pP,u)||\"file\"==u&&(c.includesCredentials()||null!==c.port)||\"file\"==c.scheme&&!c.host))return;if(c.scheme=u,t)return void(c.isSpecial()&&pP[c.scheme]==c.port&&(c.port=null));u=\"\",\"file\"==c.scheme?d=NP:c.isSpecial()&&i&&i.scheme==c.scheme?d=gP:c.isSpecial()?d=vP:\"/\"==n[l+1]?(d=RP,l++):(c.cannotBeABaseURL=!0,FD(c.path,\"\"),d=MP)}break;case SP:if(!i||i.cannotBeABaseURL&&\"#\"!=r)return YD;if(i.cannotBeABaseURL&&\"#\"==r){c.scheme=i.scheme,c.path=mD(i.path),c.query=i.query,c.fragment=\"\",c.cannotBeABaseURL=!0,d=xP;break}d=\"file\"==i.scheme?NP:CP;continue;case gP:if(\"/\"!=r||\"/\"!=n[l+1]){d=CP;continue}d=yP,l++;break;case RP:if(\"/\"==r){d=AP;break}d=kP;continue;case CP:if(c.scheme=i.scheme,r==rN)c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,c.path=mD(i.path),c.query=i.query;else if(\"/\"==r||\"\\\\\"==r&&c.isSpecial())d=IP;else if(\"?\"==r)c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,c.path=mD(i.path),c.query=\"\",d=UP;else{if(\"#\"!=r){c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,c.path=mD(i.path),c.path.length--,d=kP;continue}c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,c.path=mD(i.path),c.query=i.query,c.fragment=\"\",d=xP}break;case IP:if(!c.isSpecial()||\"/\"!=r&&\"\\\\\"!=r){if(\"/\"!=r){c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,d=kP;continue}d=AP}else d=yP;break;case vP:if(d=yP,\"/\"!=r||\"/\"!=kD(u,l+1))continue;l++;break;case yP:if(\"/\"!=r&&\"\\\\\"!=r){d=AP;continue}break;case AP:if(\"@\"==r){h&&(u=\"%40\"+u),h=!0,o=fD(u);for(var E=0;E<o.length;E++){var f=o[E];if(\":\"!=f||_){var m=hP(f,uP);_?c.password+=m:c.username+=m}else _=!0}u=\"\"}else if(r==rN||\"/\"==r||\"?\"==r||\"#\"==r||\"\\\\\"==r&&c.isSpecial()){if(h&&\"\"==u)return\"Invalid authority\";l-=fD(u).length+1,u=\"\",d=bP}else u+=r;break;case bP:case wP:if(t&&\"file\"==c.scheme){d=PP;continue}if(\":\"!=r||p){if(r==rN||\"/\"==r||\"?\"==r||\"#\"==r||\"\\\\\"==r&&c.isSpecial()){if(c.isSpecial()&&\"\"==u)return qD;if(t&&\"\"==u&&(c.includesCredentials()||null!==c.port))return;if(s=c.parseHost(u))return s;if(u=\"\",d=LP,t)return;continue}\"[\"==r?p=!0:\"]\"==r&&(p=!1),u+=r}else{if(\"\"==u)return qD;if(s=c.parseHost(u))return s;if(u=\"\",d=OP,t==wP)return}break;case OP:if(!MD(QD,r)){if(r==rN||\"/\"==r||\"?\"==r||\"#\"==r||\"\\\\\"==r&&c.isSpecial()||t){if(\"\"!=u){var T=DD(u,10);if(T>65535)return zD;c.port=c.isSpecial()&&T===pP[c.scheme]?null:T,u=\"\"}if(t)return;d=LP;continue}return zD}u+=r;break;case NP:if(c.scheme=\"file\",\"/\"==r||\"\\\\\"==r)d=DP;else{if(!i||\"file\"!=i.scheme){d=kP;continue}if(r==rN)c.host=i.host,c.path=mD(i.path),c.query=i.query;else if(\"?\"==r)c.host=i.host,c.path=mD(i.path),c.query=\"\",d=UP;else{if(\"#\"!=r){EP(UD(mD(n,l),\"\"))||(c.host=i.host,c.path=mD(i.path),c.shortenPath()),d=kP;continue}c.host=i.host,c.path=mD(i.path),c.query=i.query,c.fragment=\"\",d=xP}}break;case DP:if(\"/\"==r||\"\\\\\"==r){d=PP;break}i&&\"file\"==i.scheme&&!EP(UD(mD(n,l),\"\"))&&(_P(i.path[0],!0)?FD(c.path,i.path[0]):c.host=i.host),d=kP;continue;case PP:if(r==rN||\"/\"==r||\"\\\\\"==r||\"?\"==r||\"#\"==r){if(!t&&_P(u))d=kP;else if(\"\"==u){if(c.host=\"\",t)return;d=LP}else{if(s=c.parseHost(u))return s;if(\"localhost\"==c.host&&(c.host=\"\"),t)return;u=\"\",d=LP}continue}u+=r;break;case LP:if(c.isSpecial()){if(d=kP,\"/\"!=r&&\"\\\\\"!=r)continue}else if(t||\"?\"!=r)if(t||\"#\"!=r){if(r!=rN&&(d=kP,\"/\"!=r))continue}else c.fragment=\"\",d=xP;else c.query=\"\",d=UP;break;case kP:if(r==rN||\"/\"==r||\"\\\\\"==r&&c.isSpecial()||!t&&(\"?\"==r||\"#\"==r)){if(\"..\"===(a=HD(a=u))||\"%2e.\"===a||\".%2e\"===a||\"%2e%2e\"===a?(c.shortenPath(),\"/\"==r||\"\\\\\"==r&&c.isSpecial()||FD(c.path,\"\")):fP(u)?\"/\"==r||\"\\\\\"==r&&c.isSpecial()||FD(c.path,\"\"):(\"file\"==c.scheme&&!c.path.length&&_P(u)&&(c.host&&(c.host=\"\"),u=kD(u,0)+\":\"),FD(c.path,u)),u=\"\",\"file\"==c.scheme&&(r==rN||\"?\"==r||\"#\"==r))for(;c.path.length>1&&\"\"===c.path[0];)jD(c.path);\"?\"==r?(c.query=\"\",d=UP):\"#\"==r&&(c.fragment=\"\",d=xP)}else u+=hP(r,lP);break;case MP:\"?\"==r?(c.query=\"\",d=UP):\"#\"==r?(c.fragment=\"\",d=xP):r!=rN&&(c.path[0]+=hP(r,cP));break;case UP:t||\"#\"!=r?r!=rN&&(\"'\"==r&&c.isSpecial()?c.query+=\"%27\":c.query+=\"#\"==r?\"%23\":hP(r,cP)):(c.fragment=\"\",d=xP);break;case xP:r!=rN&&(c.fragment+=hP(r,dP))}l++}},parseHost:function(e){var t,i,n;if(\"[\"==kD(e,0)){if(\"]\"!=kD(e,e.length-1))return qD;if(t=function(e){var t,i,n,r,o,s,a,c=[0,0,0,0,0,0,0,0],d=0,l=null,u=0,h=function(){return kD(e,u)};if(\":\"==h()){if(\":\"!=kD(e,1))return;u+=2,l=++d}for(;h();){if(8==d)return;if(\":\"!=h()){for(t=i=0;i<4&&MD(tP,h());)t=16*t+DD(h(),16),u++,i++;if(\".\"==h()){if(0==i)return;if(u-=i,d>6)return;for(n=0;h();){if(r=null,n>0){if(!(\".\"==h()&&n<4))return;u++}if(!MD(QD,h()))return;for(;MD(QD,h());){if(o=DD(h(),10),null===r)r=o;else{if(0==r)return;r=10*r+o}if(r>255)return;u++}c[d]=256*c[d]+r,2!=++n&&4!=n||d++}if(4!=n)return;break}if(\":\"==h()){if(u++,!h())return}else if(h())return;c[d++]=t}else{if(null!==l)return;u++,l=++d}}if(null!==l)for(s=d-l,d=7;0!=d&&s>0;)a=c[d],c[d--]=c[l+s-1],c[l+--s]=a;else if(8!=d)return;return c}(WD(e,1,-1)),!t)return qD;this.host=t}else if(this.isSpecial()){if(e=SD(e),MD(iP,e))return qD;if(t=function(e){var t,i,n,r,o,s,a,c=GD(e,\".\");if(c.length&&\"\"==c[c.length-1]&&c.length--,(t=c.length)>4)return e;for(i=[],n=0;n<t;n++){if(\"\"==(r=c[n]))return e;if(o=10,r.length>1&&\"0\"==kD(r,0)&&(o=MD(ZD,r)?16:8,r=WD(r,8==o?1:2)),\"\"===r)s=0;else{if(!MD(10==o?eP:8==o?$D:tP,r))return e;s=DD(r,o)}FD(i,s)}for(n=0;n<t;n++)if(s=i[n],n==t-1){if(s>=LD(256,5-t))return null}else if(s>255)return null;for(a=VD(i),n=0;n<i.length;n++)a+=i[n]*LD(256,3-n);return a}(e),null===t)return qD;this.host=t}else{if(MD(nP,e))return qD;for(t=\"\",i=fD(e),n=0;n<i.length;n++)t+=hP(i[n],cP);this.host=t}},cannotHaveUsernamePasswordPort:function(){return!this.host||this.cannotBeABaseURL||\"file\"==this.scheme},includesCredentials:function(){return\"\"!=this.username||\"\"!=this.password},isSpecial:function(){return _D(pP,this.scheme)},shortenPath:function(){var e=this.path,t=e.length;!t||\"file\"==this.scheme&&1==t&&_P(e[0],!0)||e.length--},serialize:function(){var e=this,t=e.scheme,i=e.username,n=e.password,r=e.host,o=e.port,s=e.path,a=e.query,c=e.fragment,d=t+\":\";return null!==r?(d+=\"//\",e.includesCredentials()&&(d+=i+(n?\":\"+n:\"\")+\"@\"),d+=aP(r),null!==o&&(d+=\":\"+o)):\"file\"==t&&(d+=\"//\"),d+=e.cannotBeABaseURL?s[0]:s.length?\"/\"+UD(s,\"/\"):\"\",null!==a&&(d+=\"?\"+a),null!==c&&(d+=\"#\"+c),d},setHref:function(e){var t=this.parse(e);if(t)throw ND(t);this.searchParams.update()},getOrigin:function(){var e=this.scheme,t=this.port;if(\"blob\"==e)try{return new FP(e.path[0]).origin}catch(e){return\"null\"}return\"file\"!=e&&this.isSpecial()?e+\"://\"+aP(this.host)+(null!==t?\":\"+t:\"\"):\"null\"},getProtocol:function(){return this.scheme+\":\"},setProtocol:function(e){this.parse(gD(e)+\":\",mP)},getUsername:function(){return this.username},setUsername:function(e){var t=fD(gD(e));if(!this.cannotHaveUsernamePasswordPort()){this.username=\"\";for(var i=0;i<t.length;i++)this.username+=hP(t[i],uP)}},getPassword:function(){return this.password},setPassword:function(e){var t=fD(gD(e));if(!this.cannotHaveUsernamePasswordPort()){this.password=\"\";for(var i=0;i<t.length;i++)this.password+=hP(t[i],uP)}},getHost:function(){var e=this.host,t=this.port;return null===e?\"\":null===t?aP(e):aP(e)+\":\"+t},setHost:function(e){this.cannotBeABaseURL||this.parse(e,bP)},getHostname:function(){var e=this.host;return null===e?\"\":aP(e)},setHostname:function(e){this.cannotBeABaseURL||this.parse(e,wP)},getPort:function(){var e=this.port;return null===e?\"\":gD(e)},setPort:function(e){this.cannotHaveUsernamePasswordPort()||(\"\"==(e=gD(e))?this.port=null:this.parse(e,OP))},getPathname:function(){var e=this.path;return this.cannotBeABaseURL?e[0]:e.length?\"/\"+UD(e,\"/\"):\"\"},setPathname:function(e){this.cannotBeABaseURL||(this.path=[],this.parse(e,LP))},getSearch:function(){var e=this.query;return e?\"?\"+e:\"\"},setSearch:function(e){\"\"==(e=gD(e))?this.query=null:(\"?\"==kD(e,0)&&(e=WD(e,1)),this.query=\"\",this.parse(e,UP)),this.searchParams.update()},getSearchParams:function(){return this.searchParams.facade},getHash:function(){var e=this.fragment;return e?\"#\"+e:\"\"},setHash:function(e){\"\"!=(e=gD(e))?(\"#\"==kD(e,0)&&(e=WD(e,1)),this.fragment=\"\",this.parse(e,xP)):this.fragment=null},update:function(){this.query=this.searchParams.serialize()||null}};var FP=function(e){var t=pD(this,BP),i=CD(arguments.length,1)>1?arguments[1]:void 0,n=yD(t,new VP(e,!1,i));sD||(t.href=n.serialize(),t.origin=n.getOrigin(),t.protocol=n.getProtocol(),t.username=n.getUsername(),t.password=n.getPassword(),t.host=n.getHost(),t.hostname=n.getHostname(),t.port=n.getPort(),t.pathname=n.getPathname(),t.search=n.getSearch(),t.searchParams=n.getSearchParams(),t.hash=n.getHash())},BP=FP.prototype,jP=function(e,t){return{get:function(){return AD(this)[e]()},set:t&&function(e){return AD(this)[t](e)},configurable:!0,enumerable:!0}};if(sD&&(hD(BP,\"href\",jP(\"serialize\",\"setHref\")),hD(BP,\"origin\",jP(\"getOrigin\")),hD(BP,\"protocol\",jP(\"getProtocol\",\"setProtocol\")),hD(BP,\"username\",jP(\"getUsername\",\"setUsername\")),hD(BP,\"password\",jP(\"getPassword\",\"setPassword\")),hD(BP,\"host\",jP(\"getHost\",\"setHost\")),hD(BP,\"hostname\",jP(\"getHostname\",\"setHostname\")),hD(BP,\"port\",jP(\"getPort\",\"setPort\")),hD(BP,\"pathname\",jP(\"getPathname\",\"setPathname\")),hD(BP,\"search\",jP(\"getSearch\",\"setSearch\")),hD(BP,\"searchParams\",jP(\"getSearchParams\")),hD(BP,\"hash\",jP(\"getHash\",\"setHash\"))),uD(BP,\"toJSON\",(function(){return AD(this).serialize()}),{enumerable:!0}),uD(BP,\"toString\",(function(){return AD(this).serialize()}),{enumerable:!0}),OD){var GP=OD.createObjectURL,WP=OD.revokeObjectURL;GP&&uD(FP,\"createObjectURL\",dD(GP,OD)),WP&&uD(FP,\"revokeObjectURL\",dD(WP,OD))}RD(FP,\"URL\"),oD({global:!0,constructor:!0,forced:!aD,sham:!sD},{URL:FP});var HP=wi,KP=n,YP=Zc,qP=fn,zP=Gg,JP=ae(\"URL\");HP({target:\"URL\",stat:!0,forced:!(zP&&KP((function(){JP.canParse()})))},{canParse:function(e){var t=YP(arguments.length,1),i=qP(e),n=t<2||void 0===arguments[1]?void 0:qP(arguments[1]);try{return!!new JP(i,n)}catch(e){return!1}}});var XP=i(ie.URL);const QP={getDisplayMedia:!1,getStreamFromExtension:!1,supportUnifiedPlan:!1,supportMinBitrate:!1,supportSetRtpSenderParameters:!1,supportDualStream:!0,webAudioMediaStreamDest:!1,supportReplaceTrack:!1,supportWebGL:!1,webAudioWithAEC:!1,supportRequestFrame:!1,supportShareAudio:!1,supportDualStreamEncoding:!1,supportDataChannel:!1,supportPCSetConfiguration:!1,supportWebRTCEncodedTransform:!1,supportWebRTCInsertableStream:!1,supportRequestVideoFrameCallback:!1,supportWebCrypto:!1};function ZP(){return QP}function $P(){return\"setSinkId\"in HTMLAudioElement.prototype&&(!XA(\"RESTRICTION_SET_PLAYBACK_DEVICE\")||(Jv()||Qv())&&!_y())}function eL(){return!QP.supportUnifiedPlan||XA(\"CHROME_FORCE_PLAN_B\")&&Ey()}let tL=function(e){return e.IOS_15_16_INTERRUPTION_START=\"ios15_16-interruption-start\",e.IOS_15_16_INTERRUPTION_END=\"ios15_16-interruption-end\",e.IOS_INTERRUPTION_START=\"ios-interruption-start\",e.IOS_INTERRUPTION_END=\"ios-interruption-end\",e.STATE_CHANGE=\"state-change\",e}({});function iL(e,t,i){return{sampleRate:e,stereo:t,bitrate:i}}function nL(e,t,i,n,r){return{width:e,height:t,frameRate:i,bitrateMin:n,bitrateMax:r}}function rL(e,t,i,n,r){return{width:{max:e},height:{max:t},frameRate:i,bitrateMin:n,bitrateMax:r}}function oL(e,t){return{numSpatialLayers:e,numTemporalLayers:t}}const sL={\"90p\":nL(160,90),\"90p_1\":nL(160,90),\"120p\":nL(160,120,15,30,65),\"120p_1\":nL(160,120,15,30,65),\"120p_3\":nL(120,120,15,30,50),\"120p_4\":nL(212,120),\"180p\":nL(320,180,15,30,140),\"180p_1\":nL(320,180,15,30,140),\"180p_3\":nL(180,180,15,30,100),\"180p_4\":nL(240,180,15,30,120),\"240p\":nL(320,240,15,40,200),\"240p_1\":nL(320,240,15,40,200),\"240p_3\":nL(240,240,15,40,140),\"240p_4\":nL(424,240,15,40,220),\"360p\":nL(640,360,15,80,400),\"360p_1\":nL(640,360,15,80,400),\"360p_3\":nL(360,360,15,80,260),\"360p_4\":nL(640,360,30,80,600),\"360p_6\":nL(360,360,30,80,400),\"360p_7\":nL(480,360,15,80,320),\"360p_8\":nL(480,360,30,80,490),\"360p_9\":nL(640,360,15,80,800),\"360p_10\":nL(640,360,24,80,800),\"360p_11\":nL(640,360,24,80,1e3),\"480p\":nL(640,480,15,100,500),\"480p_1\":nL(640,480,15,100,500),\"480p_2\":nL(640,480,30,100,1e3),\"480p_3\":nL(480,480,15,100,400),\"480p_4\":nL(640,480,30,100,750),\"480p_6\":nL(480,480,30,100,600),\"480p_8\":nL(848,480,15,100,610),\"480p_9\":nL(848,480,30,100,930),\"480p_10\":nL(640,480,10,100,400),\"720p\":nL(1280,720,15,120,1130),\"720p_auto\":nL(1280,720,30,900,3e3),\"720p_1\":nL(1280,720,15,120,1130),\"720p_2\":nL(1280,720,30,120,2e3),\"720p_3\":nL(1280,720,30,120,1710),\"720p_5\":nL(960,720,15,120,910),\"720p_6\":nL(960,720,30,120,1380),\"1080p\":nL(1920,1080,15,120,2080),\"1080p_1\":nL(1920,1080,15,120,2080),\"1080p_2\":nL(1920,1080,30,120,3e3),\"1080p_3\":nL(1920,1080,30,120,3150),\"1080p_5\":nL(1920,1080,60,120,4780),\"1440p\":nL(2560,1440,30,120,4850),\"1440p_1\":nL(2560,1440,30,120,4850),\"1440p_2\":nL(2560,1440,60,120,7350),\"4k\":nL(3840,2160,30,120,8910),\"4k_1\":nL(3840,2160,30,120,8910),\"4k_3\":nL(3840,2160,60,120,13500)},aL={\"480p\":rL(640,480,5),\"480p_1\":rL(640,480,5),\"480p_2\":rL(640,480,30),\"480p_3\":rL(640,480,15),\"720p\":rL(1280,720,5),\"720p_auto\":nL(1280,720,30,900,3e3),\"720p_1\":rL(1280,720,5),\"720p_2\":rL(1280,720,30),\"720p_3\":rL(1280,720,15),\"1080p\":rL(1920,1080,5),\"1080p_1\":rL(1920,1080,5),\"1080p_2\":rL(1920,1080,30),\"1080p_3\":rL(1920,1080,15)},cL={\"1SL1TL\":oL(1,1),\"3SL3TL\":oL(3,3),\"2SL3TL\":oL(2,3)};function dL(e){return e||(e=\"480p_1\"),\"string\"==typeof e?Object.assign({},sL[e]):e}function lL(e){return\"string\"==typeof e?Object.assign({},aL[e]):e}function uL(e){return\"string\"==typeof e?Object.assign({},cL[e]):e}const hL={speech_low_quality:iL(16e3,!1),speech_standard:iL(32e3,!1,18),music_standard:iL(48e3,!1),standard_stereo:iL(48e3,!0,56),high_quality:iL(48e3,!1,128),high_quality_stereo:iL(48e3,!0,192)};function pL(e){return\"string\"==typeof e?Object.assign({},hL[e]):e}const _L=[];function EL(e){return vy(e,\"mediaSource\",[\"screen\",\"window\",\"application\"]),!0}let fL=function(e){return e.NEED_RENEGOTIATE=\"@need_renegotiate\",e.NEED_REPLACE_TRACK=\"@need_replace_track\",e.NEED_REPLACE_MIXING_TRACK=\"@need_replace_mixing_track\",e.NEED_CLOSE=\"@need_close\",e.NEED_ENABLE_TRACK=\"@need_enable_track\",e.NEED_DISABLE_TRACK=\"@need_disable_track\",e.NEED_SESSION_ID=\"@need_sid\",e.SET_OPTIMIZATION_MODE=\"@set_optimization_mode\",e.GET_STATS=\"@get_stats\",e.GET_RTC_STATS=\"@get_rtc_stats\",e.GET_LOW_VIDEO_TRACK=\"@get_low_video_track\",e.NEED_RESET_REMOTE_SDP=\"@need_reset_remote_sdp\",e.NEED_UPDATE_VIDEO_ENCODER=\"@need_update_video_encoder\",e.NEED_UPDATE_VIDEO_SEND_PARAMETERS=\"@need_update_video_send_parameters\",e.NEED_MUTE_TRACK=\"@need_mute_track\",e.NEED_UNMUTE_TRACK=\"@need_unmute_track\",e}({}),mL=function(e){return e.SCREEN_TRACK=\"screen_track\",e.CUSTOM_TRACK=\"custome_track\",e.LOW_STREAM=\"low_stream\",e.SCREEN_LOW_TRACK=\"screen_low_track\",e}({});let TL=function(e){return e[e.HIGH_STREAM=0]=\"HIGH_STREAM\",e[e.LOW_STREAM=1]=\"LOW_STREAM\",e}({}),SL=function(e){return e[e.HIGH_STREAM=0]=\"HIGH_STREAM\",e[e.LOW_STREAM=1]=\"LOW_STREAM\",e[e.HIGH_STREAM_LAYER1=4]=\"HIGH_STREAM_LAYER1\",e[e.HIGH_STREAM_LAYER2=5]=\"HIGH_STREAM_LAYER2\",e[e.HIGH_STREAM_LAYER3=6]=\"HIGH_STREAM_LAYER3\",e[e.HIGH_STREAM_LAYER4=7]=\"HIGH_STREAM_LAYER4\",e[e.HIGH_STREAM_LAYER5=8]=\"HIGH_STREAM_LAYER5\",e[e.HIGH_STREAM_LAYER6=9]=\"HIGH_STREAM_LAYER6\",e}({}),gL=function(e){return e[e.DISABLE=0]=\"DISABLE\",e[e.LOW_STREAM=1]=\"LOW_STREAM\",e[e.AUDIO_ONLY=2]=\"AUDIO_ONLY\",e[e.HIGH_STREAM_LAYER1=3]=\"HIGH_STREAM_LAYER1\",e[e.HIGH_STREAM_LAYER2=4]=\"HIGH_STREAM_LAYER2\",e[e.HIGH_STREAM_LAYER3=5]=\"HIGH_STREAM_LAYER3\",e[e.HIGH_STREAM_LAYER4=6]=\"HIGH_STREAM_LAYER4\",e[e.HIGH_STREAM_LAYER5=7]=\"HIGH_STREAM_LAYER5\",e[e.HIGH_STREAM_LAYER6=8]=\"HIGH_STREAM_LAYER6\",e}({}),RL=function(e){return e.TRANSCEIVER_UPDATED=\"transceiver-updated\",e.SEI_TO_SEND=\"sei-to-send\",e.SEI_RECEIVED=\"sei-received\",e.TRACK_UPDATED=\"track-updated\",e}({}),CL=function(e){return e.SOURCE_STATE_CHANGE=\"source-state-change\",e.TRACK_ENDED=\"track-ended\",e.BEAUTY_EFFECT_OVERLOAD=\"beauty-effect-overload\",e.VIDEO_ELEMENT_VISIBLE_STATUS=\"video-element-visible-status\",e.CLOSED=\"closed\",e}({}),IL=function(e){return e.FIRST_FRAME_DECODED=\"first-frame-decoded\",e.VIDEO_ELEMENT_VISIBLE_STATUS=\"video-element-visible-status\",e.VIDEO_STATE_CHANGED=\"video-state-changed\",e}({}),vL=function(e){return e.AUDIO=\"audio\",e.VIDEO=\"video\",e.DATA=\"data\",e}({}),yL=function(e){return e.AUDIO_SOURCE_STATE_CHANGE=\"audio_source_state_change\",e.RECEIVE_TRACK_BUFFER=\"receive_track_buffer\",e.ON_AUDIO_BUFFER=\"on_audio_buffer\",e.UPDATE_SOURCE=\"update_source\",e}({});!function(e){e.UPDATE_TRACK_SOURCE=\"update-track-source\"}({});const AL={sendVolumeLevel:0,sendBitrate:0,sendBytes:0,sendPackets:0,sendPacketsLost:0,sendJitterMs:0,sendRttMs:0,currentPacketLossRate:0},bL={sendBytes:0,sendBitrate:0,sendPackets:0,sendPacketsLost:0,sendJitterMs:0,sendRttMs:0,sendResolutionHeight:0,sendResolutionWidth:0,captureResolutionHeight:0,captureResolutionWidth:0,targetSendBitrate:0,totalDuration:0,totalFreezeTime:0,currentPacketLossRate:0},wL={transportDelay:0,end2EndDelay:0,receiveBitrate:0,receiveLevel:0,receiveBytes:0,receiveDelay:0,receivePackets:0,receivePacketsLost:0,receivePacketsDiscarded:0,totalDuration:0,totalFreezeTime:0,freezeRate:0,packetLossRate:0,currentPacketLossRate:0,publishDuration:-1},OL={uplinkNetworkQuality:0,downlinkNetworkQuality:0},NL={transportDelay:0,end2EndDelay:0,receiveBitrate:0,receiveBytes:0,receiveDelay:0,receivePackets:0,receivePacketsLost:0,receiveResolutionHeight:0,receiveResolutionWidth:0,totalDuration:0,totalFreezeTime:0,freezeRate:0,packetLossRate:0,currentPacketLossRate:0,publishDuration:-1};let DL=function(e){return e.ON_TRACK=\"on_track\",e.ON_NODE=\"on_node\",e}({}),PL=function(e){return e.REQUEST_UPDATE_CONSTRAINTS=\"request_update_constraints\",e.REQUEST_CONSTRAINTS=\"request_constraints\",e}({}),LL=function(e){return e.IDLE=\"IDLE\",e.INITING=\"INITING\",e.INITEND=\"INITEND\",e}({}),kL=function(e){return e.STATE_CHANGE=\"state_change\",e.RECORDING_DEVICE_CHANGED=\"recordingDeviceChanged\",e.PLAYOUT_DEVICE_CHANGED=\"playoutDeviceChanged\",e.CAMERA_DEVICE_CHANGED=\"cameraDeviceChanged\",e}({}),ML=function(e){return e.NONE=\"none\",e.INIT=\"init\",e.CANPLAY=\"canplay\",e.PLAYING=\"playing\",e.PAUSED=\"paused\",e.SUSPEND=\"suspend\",e.STALLED=\"stalled\",e.WAITING=\"waiting\",e.ERROR=\"error\",e.DESTROYED=\"destroyed\",e.ABORT=\"abort\",e.ENDED=\"ended\",e.EMPTIED=\"emptied\",e.LOADEDDATA=\"loadeddata\",e}({}),UL=function(e){return e[e.VideoStateStopped=0]=\"VideoStateStopped\",e[e.VideoStateStarting=1]=\"VideoStateStarting\",e[e.VideoStateDecoding=2]=\"VideoStateDecoding\",e[e.VideoStateFrozen=3]=\"VideoStateFrozen\",e}({});const xL={uninit:100,none:110,init:120,loadeddata:130,canplay:200,playing:210,paused:220,suspend:300,stalled:310,waiting:320,error:330,destroyed:340,abort:350,ended:360,emptied:370};let VL=function(e){return e.OPEN=\"open\",e.MESSAGE=\"message\",e.CLOSE=\"close\",e.CLOSING=\"closing\",e.ERROR=\"error\",e}({});function FL(e,t,i,n,r){var o,s,a={};return Object.keys(n).forEach((function(e){a[e]=n[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,(\"value\"in a||a.initializer)&&(a.writable=!0),a=Jn(o=oN(s=i.slice()).call(s)).call(o,(function(i,n){return n(e,t,i)||i}),a),r&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(r):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}function BL(e,t,i){return(t=function(e){var t=function(e,t){if(\"object\"!=typeof e||!e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,\"string\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e);return\"symbol\"==typeof t?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function jL(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function GL(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?jL(Object(i),!0).forEach((function(t){BL(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):jL(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class WL extends xy{set _mediaStreamTrack(e){e!==this.mediaStreamTrack&&(this.safeEmit(RL.TRACK_UPDATED,e),this.mediaStreamTrack=e)}get _mediaStreamTrack(){return this.mediaStreamTrack}constructor(e,t){super(),BL(this,\"trackMediaType\",void 0),BL(this,\"_ID\",void 0),BL(this,\"_rtpTransceiver\",void 0),BL(this,\"_lowRtpTransceiver\",void 0),BL(this,\"_hints\",[]),BL(this,\"_isClosed\",!1),BL(this,\"_originMediaStreamTrack\",void 0),BL(this,\"mediaStreamTrack\",void 0),BL(this,\"_external\",{}),this._ID=t||TA(8,\"track-\"),this._originMediaStreamTrack=e,this.mediaStreamTrack=e,function(e){Dn(_L).call(_L,e)||_L.push(e)}(this)}toString(){return this._ID}getTrackId(){return this._ID}getMediaStreamTrack(e){return e||dA((()=>{var e;vb.reportApiInvoke(null,{name:By.GET_MEDIA_STREAM_TRACK,options:[],tag:jy.TRACER}).onSuccess((null===(e=this._mediaStreamTrack)||void 0===e?void 0:e.label)||\"\")}),this.mediaStreamTrack.id||this.getTrackId()),this._mediaStreamTrack}getRTCRtpTransceiver(e){return e===TL.LOW_STREAM?this._lowRtpTransceiver:this._rtpTransceiver}getMediaStreamTrackSettings(){return this.getMediaStreamTrack(!0).getSettings()}close(){this._isClosed=!0,this._lowRtpTransceiver=void 0,this._rtpTransceiver=void 0,function(e){const t=_L.indexOf(e);-1!==t&&_L.splice(t,1)}(this),this.emit(CL.CLOSED),this.removeAllListeners(RL.SEI_RECEIVED)}_updateRtpTransceiver(e,t){if(t===TL.LOW_STREAM){if(this._lowRtpTransceiver===e)return;this._lowRtpTransceiver=e}else{if(this._rtpTransceiver===e)return;this._rtpTransceiver=e}this.emit(RL.TRANSCEIVER_UPDATED,e,t)}}class HL extends WL{get isExternalTrack(){return this._isExternalTrack}get muted(){return this._muted}get enabled(){return this._enabled}get processorContext(){return this._processorContext}constructor(e,t){super(e,t),BL(this,\"_enabled\",!0),BL(this,\"_muted\",!1),BL(this,\"_isExternalTrack\",!1),BL(this,\"_isClosed\",!1),BL(this,\"_enabledMutex\",void 0),BL(this,\"processor\",void 0),BL(this,\"_processorContext\",void 0),BL(this,\"_handleTrackEnded\",(()=>{this.onTrackEnded()})),this._enabledMutex=new NA(\"\".concat(this.getTrackId())),e.addEventListener(\"ended\",this._handleTrackEnded)}getTrackLabel(){var e,t;return null!==(e=null===(t=this._originMediaStreamTrack)||void 0===t?void 0:t.label)&&void 0!==e?e:\"\"}close(){this._isClosed||(this.stop(),this._originMediaStreamTrack.stop(),this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack.stop(),this._mediaStreamTrack=null),this._originMediaStreamTrack=null,this._enabledMutex=null,fb.debug(\"[\".concat(this.getTrackId(),\"] close\")),this.emit(fL.NEED_CLOSE),super.close())}async _updateOriginMediaStreamTrack(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._isExternalTrack=i,e!==this._originMediaStreamTrack&&(this._originMediaStreamTrack&&(this._originMediaStreamTrack.removeEventListener(\"ended\",this._handleTrackEnded),t&&this._originMediaStreamTrack.stop()),e.addEventListener(\"ended\",this._handleTrackEnded),this._originMediaStreamTrack=e,this._muted&&(this._originMediaStreamTrack.enabled=!1),this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await $y(this,fL.NEED_REPLACE_TRACK,this),this.processor&&this._processorContext&&this.processor.updateInput({track:this._originMediaStreamTrack,context:this._processorContext}))}_getDefaultPlayerConfig(){return{}}onTrackEnded(){fb.debug(\"[\".concat(this.getTrackId(),\"] track ended\")),this.safeEmit(CL.TRACK_ENDED)}stateCheck(e,t){if(fb.debug(\"check track state, [muted: \".concat(this._muted,\", enabled: \").concat(this._enabled,\"] to [\").concat(e,\": \").concat(t,\"]\")),Iy(t,e),this._enabled&&this._muted&&\"enabled\"===e&&!1===t)throw new Cy(Ry.TRACK_STATE_UNREACHABLE,\"cannot set enabled while the track is muted\").print(\"error\",fb);if(!this._enabled&&!this._muted&&\"muted\"===e&&!0===t)throw new Cy(Ry.TRACK_STATE_UNREACHABLE,\"cannot set muted while the track is disabled\").print(\"error\",fb)}getProcessorStats(){return this._processorContext&&this._processorContext.gatherStats()||[]}getProcessorUsage(){return this._processorContext?this._processorContext.gatherUsage():Gh.resolve([])}}const KL=window.AudioContext||window.webkitAudioContext;let YL=null;const qL=new class extends xy{constructor(){super(...arguments),BL(this,\"prevState\",void 0),BL(this,\"curState\",void 0),BL(this,\"currentTime\",void 0),BL(this,\"currentTimeStuckAt\",void 0),BL(this,\"interruptDetectorTrack\",void 0),BL(this,\"onLocalAudioTrackMute\",(()=>{fb.info(\"ios15-interruption-start\"),this.emit(tL.IOS_15_16_INTERRUPTION_START)})),BL(this,\"onLocalAudioTrackUnmute\",(async()=>{fb.info(\"ios15-interruption-end\"),\"running\"!==this.curState||this.duringInterruption?fb.info(\"ios15-interruption-end-canceled\"):(YL&&await YL.suspend(),this.emit(tL.IOS_15_16_INTERRUPTION_END))}))}get duringInterruption(){return\"running\"===this.prevState&&\"interrupted\"===this.curState}bindInterruptDetectorTrack(e){fb.debug(\"webaudio bindInterruptDetectorTrack \".concat(e.getTrackId())),this.interruptDetectorTrack||(this.interruptDetectorTrack=e,this.interruptDetectorTrack._mediaStreamTrack.onmute=this.onLocalAudioTrackMute,this.interruptDetectorTrack._mediaStreamTrack.onunmute=this.onLocalAudioTrackUnmute)}unbindInterruptDetectorTrack(e){fb.debug(\"webaudio unbindInterruptDetectorTrack \".concat(e.getTrackId())),this.interruptDetectorTrack&&this.interruptDetectorTrack===e&&(this.interruptDetectorTrack._mediaStreamTrack&&(this.interruptDetectorTrack._mediaStreamTrack.onmute=null,this.interruptDetectorTrack._mediaStreamTrack.onunmute=null),this.interruptDetectorTrack=void 0)}};function zL(){if(!YL){if(function(){if(!KL)return void fb.error(\"your browser is not support web audio\");fb.info(\"create audio context\");const e=GL({},XA(\"WEBAUDIO_INIT_OPTIONS\"));fb.debug(\"audio context init option:\",JSON.stringify(e)),YL=new KL(e),qL.curState=YL.state,YL.onstatechange=()=>{qL.prevState=qL.curState,qL.curState=YL?YL.state:void 0;const{prevState:e,curState:t}=qL,i=\"running\"===t,n=\"interrupted\"===t,r=\"running\"===e,o=\"suspended\"===e,s=\"interrupted\"===e,a=Hv().osVersion;($v()||uy())&&r&&n&&(fb.info(\"ios\".concat(a,\"-interruption-start\")),qL.emit(tL.IOS_INTERRUPTION_START)),($v()||uy())&&(o||s)&&i&&(fb.info(\"ios\".concat(a,\"-interruption-end\")),qL.emit(tL.IOS_INTERRUPTION_END)),e!==t&&qL.emit(tL.STATE_CHANGE,t,e)},setInterval((()=>{var e;const t=null===(e=YL)||void 0===e?void 0:e.currentTime;qL.currentTime!==t?(qL.currentTimeStuckAt&&(fb.debug(\"AudioContext current time resume at \".concat(t)),qL.currentTimeStuckAt=void 0),qL.currentTime=t):(t!==qL.currentTimeStuckAt&&(vb.reportApiInvoke(null,{name:\"WEB_AUDIO_CURRENT_TIME_STUCK\",options:{currentTime:t},tag:jy.TRACER}).onSuccess(),fb.warning(\"AudioContext current time stuck at \".concat(t))),qL.currentTimeStuckAt=t)}),5e3),async function(e){const t=[\"click\",\"contextmenu\",\"auxclick\",\"dblclick\",\"mousedown\",\"mouseup\",\"touchend\",\"keydown\",\"keyup\"];let i,n=!1,r=!1,o=!1;function s(t){\"running\"===e.state?a(!1):$v()||uy()?\"suspended\"===e.state&&(a(!0),t&&e.resume().then(c,c)):\"closed\"!==e.state&&(a(!0),t&&e.resume().then(c,c))}function a(e){if(n!==e){n=e;for(let i=0,n=t;i<n.length;i+=1){const t=n[i];e?window.addEventListener(t,d,{capture:!0,passive:!0}):window.removeEventListener(t,d,{capture:!0,passive:!0})}}}function c(){s(!1)}function d(){s(!0)}function l(e){if(!o)if(i.paused)if(e){let t;u(!1),o=!0;try{t=i.play(),t?t.then(h,h):(i.addEventListener(\"playing\",h),i.addEventListener(\"abort\",h),i.addEventListener(\"error\",h))}catch(e){h()}}else u(!0);else u(!1)}function u(e){if(r!==e){r=e;for(let i=0,n=t;i<n.length;i++){const t=n[i];e?window.addEventListener(t,p,{capture:!0,passive:!0}):window.removeEventListener(t,p,{capture:!0,passive:!0})}}}function h(){i.removeEventListener(\"playing\",h),i.removeEventListener(\"abort\",h),i.removeEventListener(\"error\",h),o=!1,l(!1)}function p(){l(!0)}if($v()){const t=e.createMediaStreamDestination(),n=document.createElement(\"div\");n.innerHTML=\"<audio x-webkit-airplay='deny'></audio>\",i=n.children.item(0),i.controls=!1,i.disableRemotePlayback=!0,i.preload=\"auto\",i.srcObject=t.stream,l(!0)}qL.on(tL.STATE_CHANGE,(function(){s(!0)})),s(!1)}(YL)}(),!YL)throw new Cy(Ry.NOT_SUPPORTED,\"can not create audio context\");return YL}return YL}function JL(e){if(function(){if(null!==XL)return XL;const e=zL(),t=e.createBufferSource(),i=e.createGain(),n=e.createGain();t.connect(i),t.connect(n),t.disconnect(i);let r=!1;try{t.disconnect(i)}catch(e){r=!0}return t.disconnect(),XL=r,r}())return;const t=e.connect,i=e.disconnect;e.connect=(i,n,r)=>{var o;return e._inputNodes||(e._inputNodes=[]),Dn(o=e._inputNodes).call(o,i)||(i instanceof AudioNode?(e._inputNodes.push(i),t.call(e,i,n,r)):t.call(e,i,n)),e},e.disconnect=(n,r,o)=>{i.call(e),n?nA(e._inputNodes,n):e._inputNodes=[];for(const i of e._inputNodes)t.call(e,i)}}let XL=null;function QL(e,t){let i=!1;const n=1/t;if(XA(\"DISABLE_WEBAUDIO\")){const t=window.setInterval((()=>{i?window.clearInterval(t):e(performance.now()/1e3)}),1e3*n)}else{const t=zL();let r=t.createGain();r.gain.value=0,r.connect(t.destination);const o=()=>{if(i)return void(r=null);const s=t.createOscillator();s.onended=o,s.connect(r),s.start(0),s.stop(t.currentTime+n),e(t.currentTime)};o()}return()=>{i=!0}}class ZL{constructor(){BL(this,\"context\",void 0),BL(this,\"analyserNode\",void 0),BL(this,\"sourceNode\",void 0),this.context=zL(),this.analyserNode=this.context.createAnalyser(),this.analyserNode.fftSize=2048,this.analyserNode.smoothingTimeConstant=.4}updateSource(e){if(e!==this.sourceNode){if(this.sourceNode)try{this.sourceNode.disconnect(this.analyserNode)}catch(e){}this.sourceNode=e,null==e||e.connect(this.analyserNode)}}getVolumeLevel(){if(!this.sourceNode)return 0;if(!this.context||$v()||uy()||\"running\"!==this.context.state&&this.context.resume(),!this.analyserNode)return 0;const e=new Float32Array(this.analyserNode.fftSize);if(this.analyserNode.getFloatTimeDomainData)this.analyserNode.getFloatTimeDomainData(e);else{const t=new Uint8Array(this.analyserNode.fftSize);this.analyserNode.getByteTimeDomainData(t);for(let i=0;i<e.length;++i)e[i]=t[i]/128-1}const t=Jn(e).call(e,((e,t)=>e+t*t),0)/e.length;return Math.max(10*Math.log10(t)+100,0)/100}getAnalyserNode(){return this.analyserNode}rebuildAnalyser(){try{var e,t;null===(e=this.sourceNode)||void 0===e||e.disconnect(this.analyserNode),this.analyserNode=this.context.createAnalyser(),this.analyserNode.fftSize=2048,this.analyserNode.smoothingTimeConstant=.4,null===(t=this.sourceNode)||void 0===t||t.connect(this.analyserNode)}catch(e){fb.warning(\"rebuild analyser node failed.\")}}destroy(){this.updateSource(void 0)}}class $L extends xy{get processSourceNode(){return this.sourceNode}set processedNode(e){var t;if(!this.isDestroyed&&this._processedNode!==e){try{var i;null===(i=this.sourceNode)||void 0===i||i.disconnect(this.outputNode)}catch(e){}null===(t=this._processedNode)||void 0===t||t.disconnect(),this._processedNode=e,this.connect()}}get processedNode(){return this._processedNode}constructor(){super(),BL(this,\"outputNode\",void 0),BL(this,\"outputTrack\",void 0),BL(this,\"isPlayed\",!1),BL(this,\"sourceNode\",void 0),BL(this,\"context\",void 0),BL(this,\"audioBufferNode\",void 0),BL(this,\"destNode\",void 0),BL(this,\"audioOutputLevel\",0),BL(this,\"volumeLevelAnalyser\",void 0),BL(this,\"_processedNode\",void 0),BL(this,\"playNode\",void 0),BL(this,\"isDestroyed\",!1),BL(this,\"onNoAudioInput\",void 0),BL(this,\"isNoAudioInput\",!1),BL(this,\"_noAudioInputCount\",0),this.context=zL(),this.playNode=this.context.destination,this.outputNode=this.context.createGain(),JL(this.outputNode),this.volumeLevelAnalyser=new ZL}startGetAudioBuffer(e){this.audioBufferNode||(this.audioBufferNode=this.context.createScriptProcessor(e),this.outputNode.connect(this.audioBufferNode),this.audioBufferNode.connect(this.context.destination),this.audioBufferNode.onaudioprocess=e=>{this.emit(yL.ON_AUDIO_BUFFER,function(e){for(let t=0;t<e.outputBuffer.numberOfChannels;t+=1){const i=e.outputBuffer.getChannelData(t);for(let e=0;e<i.length;e+=1)i[e]=0}return e.inputBuffer}(e))})}stopGetAudioBuffer(){this.audioBufferNode&&(this.audioBufferNode.onaudioprocess=null,this.outputNode.disconnect(this.audioBufferNode),this.audioBufferNode=void 0)}createOutputTrack(){if(!ZP().webAudioMediaStreamDest)throw new Cy(Ry.NOT_SUPPORTED,\"your browser is not support audio processor\");return this.destNode&&this.outputTrack||(this.destNode=this.context.createMediaStreamDestination(),this.outputNode.connect(this.destNode),this.outputTrack=this.destNode.stream.getAudioTracks()[0]),this.outputTrack}play(e){\"running\"!==this.context.state&&oA((()=>{qL.emit(\"autoplay-failed\")})),this.isPlayed=!0,this.playNode=e||this.context.destination,this.outputNode.connect(this.playNode)}stop(){if(this.isPlayed)try{this.outputNode.disconnect(this.playNode)}catch(e){}this.isPlayed=!1}getAccurateVolumeLevel(){return this.volumeLevelAnalyser.getVolumeLevel()}async checkHasAudioInput(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(e>5)return this.isNoAudioInput=!0,this.onNoAudioInput&&this.onNoAudioInput(),!1;$v()||uy()?\"suspended\"===this.context.state&&this.context.resume():\"running\"!==this.context.state&&this.context.resume();const t=this.volumeLevelAnalyser.getAnalyserNode();let i;t.getFloatTimeDomainData?(i=new Float32Array(t.fftSize),t.getFloatTimeDomainData(i)):(i=new Uint8Array(t.fftSize),t.getByteTimeDomainData(i));let n=!1;for(let e=0;e<i.length;e++)0!==i[e]&&(n=!0);return n?(this.isNoAudioInput=!1,!0):(await mA(200),await this.checkHasAudioInput(e?e+1:1)&&n)}getAudioVolume(){return this.outputNode.gain.value}setVolume(e){this.outputNode.gain.setValueAtTime(e,this.context.currentTime)}destroy(){this.disconnect(),this.stop(),this.isDestroyed=!0,this.onNoAudioInput=void 0}disconnect(){var e,t;null===(e=this.processedNode)||void 0===e||e.disconnect(),null===(t=this.sourceNode)||void 0===t||t.disconnect(),this.outputNode&&this.outputNode.disconnect()}connect(){var e;this.processedNode?null===(e=this.processedNode)||void 0===e||e.connect(this.outputNode):this.sourceNode&&this.sourceNode.connect(this.outputNode),this.volumeLevelAnalyser.updateSource(this.outputNode)}}class ek extends $L{get isFreeze(){return!1}constructor(e,t,i){var n;if(super(),BL(this,\"sourceNode\",void 0),BL(this,\"track\",void 0),BL(this,\"clonedTrack\",void 0),BL(this,\"audioElement\",void 0),BL(this,\"isCurrentTrackCloned\",!1),BL(this,\"isRemoteTrack\",!1),BL(this,\"originVolumeLevelAnalyser\",void 0),BL(this,\"rebuildWebAudio\",(async()=>{if(fb.debug(\"ready to rebuild web audio, state:\",this.context.state),this.isNoAudioInput&&await this.checkHasAudioInput(),!this.isNoAudioInput||this.isDestroyed)return document.body.removeEventListener(\"click\",this.rebuildWebAudio,!0),void fb.debug(\"rebuild web audio success, current volume status\",this.getAccurateVolumeLevel());this.context.resume().then((()=>fb.info(\"resume success\"))),fb.debug(\"rebuild web audio because of ios 12 bugs\"),this.disconnect();const e=this.track;this.track=this.track.clone(),this.isCurrentTrackCloned?e.stop():this.isCurrentTrackCloned=!0;const t=new MediaStream([this.track]);this.sourceNode=this.context.createMediaStreamSource(t),JL(this.sourceNode),this.volumeLevelAnalyser.rebuildAnalyser();const i=this.outputNode.gain.value;this.outputNode=this.context.createGain(),this.outputNode.gain.setValueAtTime(i,this.context.currentTime),JL(this.outputNode),this.emit(yL.UPDATE_SOURCE),this.connect(),this.audioElement.srcObject=t,this.isPlayed&&this.play(this.playNode),this.checkHasAudioInput()})),\"audio\"!==e.kind)throw new Cy(Ry.UNEXPECTED_ERROR);this.track=e;const r=new MediaStream([this.track]);if(this.isRemoteTrack=!!t,this.sourceNode=this.context.createMediaStreamSource(r),JL(this.sourceNode),i){const e=i.clone();e.enabled=!0,this.clonedTrack=e,fb.debug(\"create an unmuted track \".concat(e.id,\" from the original track \").concat(i.id,\" to get the volume\"));const t=this.context.createMediaStreamSource(new MediaStream([e]));JL(t),this.originVolumeLevelAnalyser=new ZL,this.originVolumeLevelAnalyser.updateSource(t)}this.connect(),this.audioElement=document.createElement(\"audio\"),this.audioElement.srcObject=r;const o=Hv();t&&o.os===Fv.IOS&&Number(null===(n=o.osVersion)||void 0===n?void 0:n.split(\".\")[0])<15&&(qL.on(tL.STATE_CHANGE,(()=>{\"suspended\"===this.context.state?document.body.addEventListener(\"click\",this.rebuildWebAudio,!0):\"running\"===this.context.state&&this.rebuildWebAudio()})),this.checkHasAudioInput().then((e=>{e||document.body.addEventListener(\"click\",this.rebuildWebAudio,!0)})))}updateTrack(e){this.sourceNode.disconnect(),this.track=e,this.isCurrentTrackCloned=!1;const t=new MediaStream([e]);this.sourceNode=this.context.createMediaStreamSource(t),JL(this.sourceNode),this.processedNode||this.sourceNode.connect(this.outputNode),this.emit(yL.UPDATE_SOURCE),this.audioElement.srcObject=t}destroy(){var e;this.audioElement.srcObject=null,this.audioElement.remove(),qL.off(\"state-change\",this.rebuildWebAudio),null===(e=this.originVolumeLevelAnalyser)||void 0===e||e.destroy(),this.clonedTrack=void 0,super.destroy()}createMediaStreamSourceNode(e){return this.context.createMediaStreamSource(new MediaStream([e]))}updateOriginTrack(e){const t=e.clone();t.enabled=!0,this.clonedTrack&&(this.clonedTrack.stop(),this.clonedTrack=t),fb.debug(\"create an unmuted track \".concat(t.id,\" from the original track \").concat(e.id,\" to get the volume\"));const i=this.context.createMediaStreamSource(new MediaStream([t]));JL(i),this.originVolumeLevelAnalyser&&this.originVolumeLevelAnalyser.updateSource(i)}getOriginVolumeLevel(){return this.originVolumeLevelAnalyser?this.originVolumeLevelAnalyser.getVolumeLevel():this.getAccurateVolumeLevel()}}async function tk(e,t,i){const n=(e,t)=>e?\"number\"!=typeof e?e.max||e.exact||e.ideal||e.min||t:e:t,r={audio:!!i&&{mandatory:{chromeMediaSource:\"desktop\"}},video:{mandatory:{chromeMediaSource:\"desktop\",chromeMediaSourceId:e,maxHeight:n(t.height,1080),maxWidth:n(t.width,1920)}}};return t.frameRate&&\"number\"!=typeof t.frameRate?(r.video.mandatory.maxFrameRate=t.frameRate.max,r.video.mandatory.minFrameRate=t.frameRate.min):\"number\"==typeof t.frameRate&&(r.video.mandatory.maxFrameRate=t.frameRate),await navigator.mediaDevices.getUserMedia(r)}async function ik(e,t){const i=await nk(e.mediaSource),{sourceId:n,audio:r}=await function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return new Gh(((i,n)=>{const r=document.createElement(\"div\");r.innerText=\"share screen\",r.setAttribute(\"style\",\"text-align: center; height: 25px; line-height: 25px; border-radius: 4px 4px 0 0; background: #D4D2D4; border-bottom:  solid 1px #B9B8B9;\");const o=document.createElement(\"div\");o.setAttribute(\"style\",\"width: 100%; height: 500px; padding: 15px 25px ; box-sizing: border-box;\");const s=document.createElement(\"div\");s.innerText=\"Agora Web Screensharing wants to share the contents of your screen with webdemo.agorabeckon.com. Choose what you'd like to share.\",s.setAttribute(\"style\",\"height: 12%;\");const a=document.createElement(\"div\");a.setAttribute(\"style\",\"width: 100%; height: 80%; background: #FFF; border:  solid 1px #CBCBCB; display: flex; flex-wrap: wrap; justify-content: space-around; overflow-y: scroll; padding: 0 15px; box-sizing: border-box;\");const c=document.createElement(\"div\");c.setAttribute(\"style\",\"display: flex; justify-content: space-between; padding: 16px 0;\");const d=document.createElement(\"button\");d.innerHTML=\"cancel\",d.setAttribute(\"style\",\"width: 85px;\"),d.onclick=()=>{document.body.removeChild(h);const e=new Error(\"NotAllowedError\");e.name=\"NotAllowedError\",n(e)};let l=t;const u=document.createElement(\"div\");if(t){const e=document.createElement(\"input\");e.setAttribute(\"type\",\"checkbox\");const t=document.createElement(\"span\");e.setAttribute(\"style\",\"margin-right: 6px;\"),t.innerText=\"Share audio\",e.checked=l,e.onchange=()=>{l=e.checked},u.appendChild(e),u.appendChild(t)}c.appendChild(u),c.appendChild(d),o.appendChild(s),o.appendChild(a),o.appendChild(c);const h=document.createElement(\"div\");h.setAttribute(\"style\",\"position: fixed; z-index: 99999999; top: 50%; left: 50%; width: 620px; height: 525px; background: #ECECEC; border-radius: 4px; -webkit-transform: translate(-50%,-50%); transform: translate(-50%,-50%);\"),h.appendChild(r),h.appendChild(o),document.body.appendChild(h),e.map((e=>{if(e.id){const t=document.createElement(\"div\");t.setAttribute(\"style\",\"width: 30%; height: 160px; padding: 20px 0; text-align: center;box-sizing: content-box;\");let n=e.thumbnail;try{const{width:e}=n.getSize();e>1920&&(n=n.resize({width:1920}))}catch(e){throw e&&e.message.startsWith(\"Illegal invocation\")&&console.error(\"Operate thumbnail error, please try to set contextIsolation: false. (https://github.com/electron/electron/issues/34953)\"),e}t.innerHTML='<div style=\"height: 120px; display: table-cell; vertical-align: middle;\"><img style=\"width: 100%; background: #333333; box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2);\" src='+n.toDataURL()+' /></div><span style=\"\\theight: 40px; line-height: 40px; display: inline-block; width: 70%; word-break: keep-all; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\">'+e.name.replace(/[\\u00A0-\\u9999<>\\&]/g,(function(e){return\"&#\"+e.charCodeAt(0)+\";\"}))+\"</span>\",t.onclick=()=>{document.body.removeChild(h),i({sourceId:e.id,audio:l})},a.appendChild(t)}}))}))}(i,t);return await tk(n,e,r)}async function nk(e){let t=[\"window\",\"screen\"];\"application\"!==e&&\"window\"!==e||(t=[\"window\"]),\"screen\"===e&&(t=[\"screen\"]);const i=Fy();if(!i)throw console.error(\"failed to fetch electron, please mount it to window\"),new Cy(Ry.ELECTRON_IS_NULL);let n=null;try{var r;n=(null===(r=i.desktopCapturer)||void 0===r?void 0:r.getSources({types:t}))||i.ipcRenderer.invoke(\"DESKTOP_CAPTURER_GET_SOURCES\",{types:t})}catch(e){n=null}n&&n.then||(n=new Gh(((e,n)=>{i.desktopCapturer.getSources({types:t},((t,i)=>{t?n(t):e(i)}))})));try{return await n}catch(e){throw new Cy(Ry.ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR,e.toString())}}const rk=new NA(\"safari\");let ok=!1,sk=!1;async function ak(e,t){let i=0,n=null;for(;i<2;)try{n=await ck(e,t,i>0);break}catch(e){if(e instanceof Cy)throw fb.error(\"[\".concat(t,\"] \").concat(e.toString())),e;const n=dk(e.name||e.code||e,e.message);if(n.code===Ry.MEDIA_OPTION_INVALID){fb.debug(\"[\".concat(t,\"] detect media option invalid, retry\")),i+=1,await mA(500);continue}throw fb.error(\"[\".concat(t,\"] \").concat(n.toString())),n}if(!n)throw new Cy(Ry.UNEXPECTED_ERROR,\"can not find stream after getUserMedia\");return n}async function ck(e,t,i){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new Cy(Ry.NOT_SUPPORTED,\"can not find getUserMedia\");i&&(e.video&&(delete e.video.width,delete e.video.height),e.screen&&(delete e.screen.width,delete e.screen.height));const n=ZP(),r=new MediaStream;if(e.audioSource&&r.addTrack(e.audioSource),e.videoSource&&r.addTrack(e.videoSource),!e.audio&&!e.video&&!e.screen)return fb.debug(\"Using Video Source/ Audio Source\"),r;if(e.screen)if(Fy())e.screen.sourceId?lk(r,await tk(e.screen.sourceId,e.screen,e.screenAudio)):lk(r,await ik(e.screen,e.screenAudio));else if(Jv()&&e.screen.extensionId&&e.screen.mandatory){if(!n.getStreamFromExtension)throw new Cy(Ry.NOT_SUPPORTED,\"This browser does not support screen sharing\");fb.debug(\"[\".concat(t,'] Screen access on chrome stable, looking for extension\"'));const i=await(s=e.screen.extensionId,a=t,new Gh(((e,t)=>{try{chrome.runtime.sendMessage(s,{getStream:!0},(i=>{if(!i||!i.streamId)return fb.error(\"[\".concat(a,\"] No response from Chrome Plugin. Plugin not installed properly\"),i),void t(new Cy(Ry.CHROME_PLUGIN_NO_RESPONSE,\"No response from Chrome Plugin. Plugin not installed properly\"));e(i.streamId)}))}catch(e){fb.error(\"[\".concat(a,\"] AgoraRTC screensharing plugin is not accessible(\").concat(s,\")\"),e.toString()),t(new Cy(Ry.CHROME_PLUGIN_NOT_INSTALL))}})));e.screen.mandatory.chromeMediaSourceId=i,lk(r,await navigator.mediaDevices.getUserMedia({video:{mandatory:e.screen.mandatory}}))}else if(n.getDisplayMedia){var o;e.screen.mediaSource&&EL(e.screen.mediaSource);const i={width:e.screen.width,height:e.screen.height,frameRate:e.screen.frameRate,displaySurface:null!==(o=e.screen.displaySurface)&&void 0!==o?o:\"screen\"===e.screen.mediaSource?\"monitor\":e.screen.mediaSource},{selfBrowserSurface:n,surfaceSwitching:s,systemAudio:a}=e.screen,c={selfBrowserSurface:n,surfaceSwitching:s,systemAudio:a};!n&&delete c.selfBrowserSurface,!s&&delete c.surfaceSwitching,!a&&delete c.systemAudio,fb.debug(\"[\".concat(t,\"] getDisplayMedia:\"),JSON.stringify({video:i,audio:!!e.screenAudio,controls:c})),lk(r,await navigator.mediaDevices.getDisplayMedia(GL({video:i,audio:!!e.screenAudio},c)))}else{if(!Zv())throw fb.error(\"[\".concat(t,\"] This browser does not support screenSharing\")),new Cy(Ry.NOT_SUPPORTED,\"This browser does not support screen sharing\");{e.screen.mediaSource&&EL(e.screen.mediaSource);const i={video:{mediaSource:e.screen.mediaSource,width:e.screen.width,height:e.screen.height,frameRate:e.screen.frameRate}};fb.debug(\"[\".concat(t,\"] getUserMedia: \").concat(JSON.stringify(i))),lk(r,await navigator.mediaDevices.getUserMedia(i))}}var s,a;if(!e.video&&!e.audio)return r;let c={video:e.video,audio:e.audio},d=XA(\"MEDIA_DEVICE_CONSTRAINTS\");if(d)try{\"string\"==typeof d&&(d=JSON.parse(d)),c=vA(c,d)}catch(e){}fb.debug(\"[\".concat(t,\"] GetUserMedia\"),JSON.stringify(c)),Hv();let l,u=null;(Xv()||$v()||zv())&&(u=await rk.lock());try{l=await navigator.mediaDevices.getUserMedia(c)}catch(e){throw u&&u(),e}return c.audio&&(ok=!0),c.video&&(sk=!0),lk(r,l),u&&u(),r}function dk(e,t){switch(e){case\"Starting video failed\":case\"OverconstrainedError\":case\"TrackStartError\":return new Cy(Ry.MEDIA_OPTION_INVALID,\"\".concat(e,\": \").concat(t));case\"NotFoundError\":case\"DevicesNotFoundError\":return new Cy(Ry.DEVICE_NOT_FOUND,\"\".concat(e,\": \").concat(t));case\"NotSupportedError\":return new Cy(Ry.NOT_SUPPORTED,\"\".concat(e,\": \").concat(t));case\"NotReadableError\":return new Cy(Ry.NOT_READABLE,\"\".concat(e,\": \").concat(t));case\"InvalidStateError\":case\"NotAllowedError\":case\"PERMISSION_DENIED\":case\"PermissionDeniedError\":return new Cy(Ry.PERMISSION_DENIED,\"\".concat(e,\": \").concat(t));case\"ConstraintNotSatisfiedError\":return new Cy(Ry.CONSTRAINT_NOT_SATISFIED,\"\".concat(e,\": \").concat(t));default:return fb.error(\"getUserMedia unexpected error\",e),new Cy(Ry.UNEXPECTED_ERROR,\"\".concat(e,\": \").concat(t))}}function lk(e,t){const i=e.getVideoTracks()[0],n=e.getAudioTracks()[0],r=t.getVideoTracks()[0],o=t.getAudioTracks()[0];o&&(n&&e.removeTrack(n),e.addTrack(o)),r&&(i&&e.removeTrack(i),e.addTrack(r))}const uk=new class extends xy{get state(){return this._state}set state(e){e!==this._state&&(this.emit(kL.STATE_CHANGE,e),this._state=e)}constructor(){super(),BL(this,\"_state\",LL.IDLE),BL(this,\"isAccessMicrophonePermission\",!1),BL(this,\"isAccessCameraPermission\",!1),BL(this,\"lastAccessMicrophonePermission\",!1),BL(this,\"lastAccessCameraPermission\",!1),BL(this,\"checkdeviceMatched\",!1),BL(this,\"deviceInfoMap\",new Map),this.init().then((()=>{navigator.mediaDevices.addEventListener&&navigator.mediaDevices.addEventListener(\"devicechange\",this.updateDevicesInfo.bind(this)),window.setInterval((()=>{(XA(\"ENUMERATE_DEVICES_INTERVAL\")||(fy()||Yv()===Fv.HARMONY_OS)&&Ey())&&this.updateDevicesInfo()}),XA(\"ENUMERATE_DEVICES_INTERVAL_TIME\"))})).catch((e=>fb.error(e.toString())))}async enumerateDevices(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!navigator.mediaDevices||!navigator.mediaDevices.enumerateDevices)return new Cy(Ry.NOT_SUPPORTED,\"enumerateDevices() not supported.\").throw();const n=await navigator.mediaDevices.enumerateDevices(),r=this.checkMediaDeviceInfoIsOk(n);let o=!this.isAccessMicrophonePermission&&e,s=!this.isAccessCameraPermission&&t;r.audio&&(o=!1),r.video&&(s=!1);let a=null,c=null,d=null;if(!i&&(o||s)){if(rk.isLocked&&(fb.debug(\"[device manager] wait GUM lock\"),(await rk.lock())(),fb.debug(\"[device manager] GUM unlock\")),ok&&(o=!1,this.isAccessMicrophonePermission=!0),sk&&(s=!1,this.isAccessCameraPermission=!0),fb.debug(\"[device manager] check media device permissions\",e,t,o,s),o&&s){try{d=await navigator.mediaDevices.getUserMedia({audio:!0,video:!0})}catch(e){const t=dk(e.name||e.code||e,e.message);if(t.code===Ry.PERMISSION_DENIED)throw t;fb.warning(\"getUserMedia failed in getDevices\",t)}this.isAccessCameraPermission=!0,this.isAccessMicrophonePermission=!0}else if(o){try{a=await navigator.mediaDevices.getUserMedia({audio:e})}catch(e){const t=dk(e.name||e.code||e,e.message);if(t.code===Ry.PERMISSION_DENIED)throw t;fb.warning(\"getUserMedia failed in getDevices\",t)}this.isAccessMicrophonePermission=!0}else if(s){try{c=await navigator.mediaDevices.getUserMedia({video:t})}catch(e){const t=dk(e.name||e.code||e,e.message);if(t.code===Ry.PERMISSION_DENIED)throw t;fb.warning(\"getUserMedia failed in getDevices\",t)}this.isAccessCameraPermission=!0}fb.debug(\"[device manager] mic permission\",e,\"cam permission\",t)}try{const e=await navigator.mediaDevices.enumerateDevices();return a&&a.getTracks().forEach((e=>e.stop())),c&&c.getTracks().forEach((e=>e.stop())),d&&d.getTracks().forEach((e=>e.stop())),a=null,c=null,d=null,e}catch(e){return a&&a.getTracks().forEach((e=>e.stop())),c&&c.getTracks().forEach((e=>e.stop())),d&&d.getTracks().forEach((e=>e.stop())),a=null,c=null,d=null,new Cy(Ry.ENUMERATE_DEVICES_FAILED,e.toString()).throw()}}async getRecordingDevices(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!0,!1,e)).filter((e=>\"audioinput\"===e.kind))}async getCamerasDevices(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!1,!0,e)).filter((e=>\"videoinput\"===e.kind))}async getSpeakers(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!0,!1,e)).filter((e=>\"audiooutput\"===e.kind))}searchDeviceIdByName(e){let t=null;return this.deviceInfoMap.forEach((i=>{i.device.label===e&&(t=i.device.deviceId)})),t}async getDeviceById(e){const t=(await this.enumerateDevices(!0,!0,!0)).find((t=>t.deviceId===e));if(!t)throw new Cy(Ry.DEVICE_NOT_FOUND,\"deviceId: \".concat(e));return t}async init(){this.state=LL.INITING;try{await this.updateDevicesInfo(),this.state=LL.INITEND}catch(e){throw fb.warning(\"Device Detection functionality cannot start properly.\",e.toString()),this.state=LL.IDLE,(\"boolean\"==typeof isSecureContext?isSecureContext:\"https:\"===location.protocol||\"file:\"===location.protocol||\"localhost\"===location.hostname||\"127.0.0.1\"===location.hostname||\"::1\"===location.hostname)||new Cy(Ry.WEB_SECURITY_RESTRICT,\"Your context is limited by web security, please try using https protocol or localhost.\").throw(),e}}async updateDevicesInfo(){const e=await this.enumerateDevices(!0,!0,!0),t=Date.now(),i=[];if(e[0]&&e[0].label&&!1===this.checkdeviceMatched){this.checkdeviceMatched=!0;const t=e.find((e=>\"audioinput\"===e.kind&&\"default\"===e.deviceId)),i=e.find((e=>\"audiooutput\"===e.kind&&\"default\"===e.deviceId));t&&i?i.groupId===t.groupId?fb.debug(\"[device-check] default input \".concat(t.label,\" and output \").concat(i.label,\" is the same group\")):fb.warning(\"[device-check] default input \".concat(t.label,\" and output \").concat(i.label,\" is not the same group\")):fb.debug(\"[device-check] default input or output not found\")}const n=this.checkMediaDeviceInfoIsOk(e);if(e.forEach((e=>{if(!e.deviceId)return;const n=this.deviceInfoMap.get(\"\".concat(e.kind,\"_\").concat(e.deviceId));if(\"ACTIVE\"!==(n?n.state:\"INACTIVE\")){const n={initAt:t,updateAt:t,device:e,state:\"ACTIVE\"};this.deviceInfoMap.set(\"\".concat(e.kind,\"_\").concat(e.deviceId),n),i.push(n)}n&&(n.updateAt=t)})),this.deviceInfoMap.forEach(((e,n)=>{\"ACTIVE\"===e.state&&e.updateAt!==t&&(e.state=\"INACTIVE\",i.push(e))})),this.state!==LL.INITEND)return n.audio&&(this.lastAccessMicrophonePermission=!0,this.isAccessMicrophonePermission=!0),void(n.video&&(this.lastAccessCameraPermission=!0,this.isAccessCameraPermission=!0));i.forEach((e=>{switch(e.device.kind){case\"audioinput\":this.lastAccessMicrophonePermission&&this.isAccessMicrophonePermission&&this.emit(kL.RECORDING_DEVICE_CHANGED,e);break;case\"videoinput\":this.lastAccessCameraPermission&&this.isAccessCameraPermission&&this.emit(kL.CAMERA_DEVICE_CHANGED,e);break;case\"audiooutput\":this.lastAccessMicrophonePermission&&this.isAccessMicrophonePermission&&this.emit(kL.PLAYOUT_DEVICE_CHANGED,e)}})),n.audio&&(this.lastAccessMicrophonePermission=!0,this.isAccessMicrophonePermission=!0),n.video&&(this.lastAccessCameraPermission=!0,this.isAccessCameraPermission=!0)}checkMediaDeviceInfoIsOk(e){const t=e.filter((e=>\"audioinput\"===e.kind)),i=e.filter((e=>\"videoinput\"===e.kind)),n={audio:!1,video:!1};for(const e of t)if(e.label&&e.deviceId){n.audio=!0;break}for(const e of i)if(e.label&&e.deviceId){n.video=!0;break}return n}};let hk=!1;const pk=new class extends xy{constructor(){super(...arguments),BL(this,\"onAutoplayFailed\",void 0),BL(this,\"onAudioAutoplayFailed\",void 0)}};function _k(){if(Hv(),!hk){const e=t=>{t.preventDefault(),hk=!1,my()?document.body.removeEventListener(\"click\",e,!0):(document.body.removeEventListener(\"touchstart\",e,!0),document.body.removeEventListener(\"mousedown\",e,!0))};hk=!0,my()?document.body.addEventListener(\"click\",e,!0):(document.body.addEventListener(\"touchstart\",e,!0),document.body.addEventListener(\"mousedown\",e,!0)),fb.info(\"detect media autoplay failed, document: https://docs.agora.io/cn/Voice/autoplay_policy_web_ng?platform=Web\"),pk.onAutoplayFailed?pk.onAutoplayFailed():pk.onAudioAutoplayFailed?fb.warning(\"AgoraRTC.onAudioAutoplayFailed has been deprecated in favor of AgoraRTC.onAutoplayFailed.\\n\\n  Please refer to the Agora document to migrate the newer API, https://docs.agora.io/en/Voice/autoplay_policy_web_ng?platform=Web .\"):fb.warning(\"We have detected a media autoplay failed event, and found out that you haven't implemented AgoraRTC.onAutoplayFailed callback yet.\\n\\n  It will cause audio/video element not playing automatically on some browsers without user interaction, possibly hurting user experiences.\\n\\n  Please refer to the Agora document to properly handle autoplay failed event, https://docs.agora.io/en/Voice/autoplay_policy_web_ng?platform=Web .\"),pk.emit(\"autoplay-failed\")}}function Ek(e,t,i,n){if(!e)return;const r=vb.getBaseInfoBySessionId(e);if(!r)return;const o=r.info,s=Date.now(),a=GL(GL({},o),{},{vid:void 0===o.vid?0:Number(o.vid),lts:s,elapse:s-r.startTime,cbRegistered:pk.onAutoplayFailed||pk.onAudioAutoplayFailed?1:-1,errorMsg:i,mediaType:t,trackId:n,extend:void 0});vb.send({type:Rb.AUTOPLAY_FAILED,data:a},!0)}const fk=[\"play\",\"playing\",\"loadeddata\",\"canplay\",\"pause\",\"stalled\",\"suspend\",\"waiting\",\"abort\",\"emptied\",\"ended\",\"error\"],mk=new class{constructor(){BL(this,\"onAutoplayFailed\",void 0),BL(this,\"elementMap\",new Map),BL(this,\"elementStateMap\",new Map),BL(this,\"elementsNeedToResume\",[]),BL(this,\"sinkIdMap\",new Map),BL(this,\"autoResumeAfterInterruption\",(e=>{Array.from(this.elementMap.entries()).forEach((t=>{let[i,n]=t;const r=this.elementStateMap.get(i),o=n.srcObject.getAudioTracks()[0],s=o&&o.readyState;if(fb.debug(\"resume after interrupted, ele: \".concat(r,\" audio: \").concat(s,\" \").concat(e)),\"live\"===s){if(e)return n.pause(),void n.play();if(\"running\"===qL.curState)return cy()?(n.pause(),void n.play()):void(r&&\"paused\"===r&&n.play())}}))})),BL(this,\"autoResumeAfterInterruptionOnIOS15_16\",(()=>{Array.from(this.elementMap.entries()).forEach((e=>{let[t,i]=e;const n=i.srcObject.getAudioTracks()[0];n&&\"live\"===n.readyState&&(fb.debug(\"auto resume after interruption inside autoResumeAfterInterruptionOnIOS15\"),i.pause(),i.play())}))})),this.autoResumeAudioElement(),qL.on(tL.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),qL.on(tL.IOS_15_16_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15_16),qL.on(tL.STATE_CHANGE,(()=>{$v()&&\"suspended\"===qL.prevState&&\"running\"===qL.curState&&this.autoResumeAfterInterruption()}))}async setSinkID(e,t){const i=this.elementMap.get(e);if(this.sinkIdMap.set(e,t),i)try{await i.setSinkId(t)}catch(e){throw new Cy(Ry.PERMISSION_DENIED,\"can not set sink id: \"+e.toString())}}play(e,t,i,n){if(this.elementMap.has(t))return;const r=document.createElement(\"audio\");r.autoplay=!0,r.srcObject=new MediaStream([e]),this.bindAudioElementEvents(t,r),this.elementMap.set(t,r),this.elementStateMap.set(t,ML.INIT),this.setVolume(t,i);const o=this.sinkIdMap.get(t);if(o)try{r.setSinkId(o).catch((e=>{fb.warning(\"[\".concat(t,\"] set sink id failed\"),e.toString())}))}catch(e){fb.warning(\"[\".concat(t,\"] set sink id failed\"),e.toString())}const s=r.play();s&&s.then&&s.catch((e=>{n&&Ek(n,\"audio\",e.message,t),fb.warning(\"audio element play warning\",e.toString()),this.elementMap.has(t)&&\"NotAllowedError\"===e.name&&(fb.warning(\"detected audio element autoplay failed\"),this.elementsNeedToResume.push(r),oA((()=>{this.onAutoplayFailed&&this.onAutoplayFailed(),_k()})))}))}updateTrack(e,t){const i=this.elementMap.get(e);i&&(i.srcObject=new MediaStream([t]))}isPlaying(e){return this.elementMap.has(e)&&\"playing\"===this.elementStateMap.get(e)}setVolume(e,t){const i=this.elementMap.get(e);i&&(t=Math.max(0,Math.min(100,t)),i.volume=t/100)}stop(e){const t=this.elementMap.get(e);if(this.sinkIdMap.delete(e),!t)return;const i=this.elementsNeedToResume.indexOf(t);this.elementsNeedToResume.splice(i,1),t.srcObject=null,t.remove(),this.elementMap.delete(e),this.elementStateMap.delete(e)}bindAudioElementEvents(e,t){fk.forEach((i=>{t.addEventListener(i,(i=>{const n=this.elementStateMap.get(e),r=\"pause\"===i.type?\"paused\":i.type;if(fb.debug(\"[\".concat(e,\"] audio-element-status change \").concat(n,\" => \").concat(r)),\"error\"===i.type){const i=null==t?void 0:t.error;i&&fb.error(\"[\".concat(e,\"] media error, code: \").concat(i.code,\", message: \").concat(i.message))}this.elementStateMap.set(e,r)}))}))}getPlayerState(e){return this.elementStateMap.get(e)||\"uninit\"}autoResumeAudioElement(){const e=()=>{this.elementsNeedToResume.forEach((e=>{e.play().then((e=>{fb.debug(\"Auto resume audio element success\")})).catch((e=>{fb.warning(\"Auto resume audio element failed!\",e)}))})),this.elementsNeedToResume=[]};new Gh((e=>{document.body?e():window.addEventListener(\"load\",(()=>e()))})).then((()=>{my()?document.body.addEventListener(\"click\",e,!0):(document.body.addEventListener(\"touchstart\",e,!0),document.body.addEventListener(\"mousedown\",e,!0))}))}};function Tk(){return function(e,t,i){const n=i.value;return\"function\"==typeof n&&(i.value=function(){this._isClosed&&new Cy(Ry.INVALID_OPERATION,\"[\".concat(this.getTrackId(),\"] cannot operate a closed track\")).print(\"warning\",fb);for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const r=n.apply(this,t);return r instanceof Gh?new Gh(((e,t)=>{r.then(e).catch(t)})):r}),i}}class Sk extends xy{constructor(e){super(),BL(this,\"name\",\"VideoProcessorDestination\"),BL(this,\"ID\",\"0\"),BL(this,\"_source\",void 0),BL(this,\"videoContext\",void 0),BL(this,\"inputTrack\",void 0),this.videoContext=e}get kind(){return\"video\"}get enabled(){return!0}pipe(){throw new Cy(Ry.NOT_SUPPORTED,\"VideoProcessor cannot pipe to any other Processor\")}unpipe(){throw new Cy(Ry.NOT_SUPPORTED,\"VideoProcessor cannot unpipe to any other Processor\")}enable(){}disable(){}updateInput(e){if(e.context!==this.videoContext)throw new Error(\"ProcessorContext passed to VideoTrack.processorDestination doesn't match it's belonging VideoTrack's context.\\nProbably you are making pipeline like this:\\nvideoTrack1.pipe(processor).pipe(videoTrack2.processorDestination).\");e.track&&e.track!==this.inputTrack&&(this.videoContext.chained=!0,this.inputTrack=e.track,this.emit(DL.ON_TRACK,e.track))}reset(){this.inputTrack=void 0,this.videoContext.chained=!1,this.emit(DL.ON_TRACK,void 0)}}class gk extends xy{set chained(e){this._chained=e}get chained(){return this._chained}constructor(e,t){super(),BL(this,\"constraintsMap\",new Map),BL(this,\"statsRegistry\",[]),BL(this,\"usageRegistry\",[]),BL(this,\"trackId\",void 0),BL(this,\"direction\",void 0),BL(this,\"_chained\",!1),this.trackId=e,this.direction=t}async getConstraints(){return await Zy(this,PL.REQUEST_CONSTRAINTS)}async requestApplyConstraints(e,t){var i;return fb.info(\"processor \".concat(t.name,\" requestApplyConstraints for \").concat(this.trackId)),e&&this.constraintsMap.set(t,e),$y(this,PL.REQUEST_UPDATE_CONSTRAINTS,Array.from(_N(i=this.constraintsMap).call(i)))}async requestRevertConstraints(e){var t;if(this.constraintsMap.has(e))return fb.info(\"processor \".concat(e.name,\" requestRevertConstraints for \").concat(this.trackId)),this.constraintsMap.delete(e),$y(this,PL.REQUEST_UPDATE_CONSTRAINTS,Array.from(_N(t=this.constraintsMap).call(t)))}registerStats(e,t,i){this.statsRegistry.find((i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t))||this.statsRegistry.push({processorName:e.name,processorID:e.ID,type:t,cb:i})}unregisterStats(e,t){const i=this.statsRegistry.findIndex((i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t));-1!==i&&this.statsRegistry.splice(i,1)}gatherStats(){const e=[];for(const{processorID:t,processorName:i,type:n,cb:r}of this.statsRegistry)try{const o=r();e.push({processorID:t,processorName:i,type:n,stats:o})}catch(e){fb.error(new Cy(Ry.UNEXPECTED_ERROR,e.message))}return e}registerUsage(e,t){this.usageRegistry.find((t=>t.processorID===e.ID&&t.processorName===e.name))||this.usageRegistry.push({processorID:e.ID,processorName:e.name,cb:t})}unregisterUsage(e){const t=this.usageRegistry.findIndex((t=>t.processorID===e.ID&&t.processorName===e.name));-1!==t&&this.usageRegistry.splice(t,1)}async gatherUsage(){const e=[];if(!this.chained)return[];for(const{cb:t}of this.usageRegistry)try{let i=t();i instanceof Gh&&(i=await i),e.push(GL(GL({},i),{},{direction:this.direction}))}catch(e){fb.error(\"gather extension usage error\",e)}return e}getDirection(){return this.direction}}class Rk extends xy{constructor(e){super(),BL(this,\"name\",\"AudioProcessorDestination\"),BL(this,\"ID\",\"0\"),BL(this,\"inputTrack\",void 0),BL(this,\"inputNode\",void 0),BL(this,\"audioProcessorContext\",void 0),BL(this,\"_source\",void 0),this.audioProcessorContext=e}get kind(){return\"audio\"}get enabled(){return!0}pipe(){throw new Cy(Ry.NOT_SUPPORTED,\"AudioProcessorDestination cannot pipe to any other Processor\")}unpipe(){throw new Cy(Ry.NOT_SUPPORTED,\"AudioProcessor cannot unpipe to any other Processor\")}enable(){}disable(){}reset(){this.inputTrack=void 0,this.inputNode=void 0,this.audioProcessorContext.chained=!1,this.emit(DL.ON_TRACK,void 0),this.emit(DL.ON_NODE,void 0)}updateInput(e){if(e.context!==this.audioProcessorContext)throw new Error(\"ProcessorContext passed to AudioTrack.processorDestination doesn't match it's belonging AudioTrack's context.\\n        Probably you are making pipeline like this: audioTrack1.pipe(processor).pipe(audioTrack2.processorDestination).\");e.track&&this.inputTrack!==e.track&&(this.audioProcessorContext.chained=!0,this.inputTrack=e.track,this.emit(DL.ON_TRACK,this.inputTrack)),e.node&&this.inputNode!==e.node&&(this.audioProcessorContext.chained=!0,this.inputNode=e.node,this.emit(DL.ON_NODE,this.inputNode))}}class Ck extends xy{set chained(e){this._chained=e}get chained(){return this._chained}constructor(e,t,i){super(),BL(this,\"constraintsMap\",new Map),BL(this,\"statsRegistry\",[]),BL(this,\"audioContext\",void 0),BL(this,\"trackId\",void 0),BL(this,\"direction\",void 0),BL(this,\"usageRegistry\",[]),BL(this,\"_chained\",!1),this.audioContext=e,this.trackId=t,this.direction=i}async getConstraints(){return Zy(this,PL.REQUEST_CONSTRAINTS)}getAudioContext(){return this.audioContext}async requestApplyConstraints(e,t){var i;return fb.info(\"processor \".concat(t.name,\" requestApplyConstraints for \").concat(this.trackId)),e&&this.constraintsMap.set(t,e),$y(this,PL.REQUEST_UPDATE_CONSTRAINTS,Array.from(_N(i=this.constraintsMap).call(i)))}async requestRevertConstraints(e){var t;if(this.constraintsMap.has(e))return this.constraintsMap.delete(e),$y(this,PL.REQUEST_UPDATE_CONSTRAINTS,Array.from(_N(t=this.constraintsMap).call(t)))}registerStats(e,t,i){this.statsRegistry.find((i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t))||this.statsRegistry.push({processorName:e.name,processorID:e.ID,type:t,cb:i})}unregisterStats(e,t){const i=this.statsRegistry.findIndex((i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t));-1!==i&&this.statsRegistry.splice(i,1)}gatherStats(){const e=[];for(const{processorID:t,processorName:i,type:n,cb:r}of this.statsRegistry)try{const o=r();e.push({processorID:t,processorName:i,type:n,stats:o})}catch(e){fb.error(new Cy(Ry.UNEXPECTED_ERROR,e.message))}return e}registerUsage(e,t){this.usageRegistry.find((t=>t.processorID===e.ID&&t.processorName===e.name))||this.usageRegistry.push({processorID:e.ID,processorName:e.name,cb:t})}unregisterUsage(e){const t=this.usageRegistry.findIndex((t=>t.processorID===e.ID&&t.processorName===e.name));-1!==t&&this.usageRegistry.splice(t,1)}async gatherUsage(){const e=[];if(!this.chained)return[];for(const{cb:t}of this.usageRegistry)try{let i=t();i instanceof Gh&&(i=await i),e.push(GL(GL({},i),{},{direction:this.direction}))}catch(e){fb.error(\"gather extension usage error\",e)}return e}getDirection(){return this.direction}}class Ik extends xy{get isPlayed(){return!0}get isFreeze(){return!1}constructor(){super(),BL(this,\"context\",void 0),BL(this,\"processSourceNode\",void 0),BL(this,\"outputTrack\",void 0),BL(this,\"processedNode\",void 0),BL(this,\"clonedTrack\",void 0),BL(this,\"outputNode\",void 0),this.outputNode=new vk}setVolume(){}createOutputTrack(){throw new Cy(Ry.NOT_SUPPORTED,\"can not create output MediaStreamTrack when WebAudio disabled\")}getOriginVolumeLevel(){return 0}getAccurateVolumeLevel(){return 0}stopGetAudioBuffer(){}startGetAudioBuffer(){}play(){}stop(){}destroy(){}updateTrack(){}updateOriginTrack(){}createMediaStreamSourceNode(){}}class vk{disconnect(){}connect(){}}function yk(e){return new Gh(((t,i)=>{let n=!1;const r=document.createElement(\"video\");r.setAttribute(\"autoplay\",\"\"),r.setAttribute(\"muted\",\"\"),r.muted=!0,r.autoplay=!0,r.setAttribute(\"playsinline\",\"\"),r.setAttribute(\"style\",\"position: fixed; top: 0; left: 0; width: 1px; height: 1px\"),document.body.appendChild(r);const o=$v()?\"canplay\":\"playing\";r.addEventListener(o,(()=>{const e=r.videoWidth,i=r.videoHeight;!e&&Zv()||(n=!0,r.srcObject=null,r.remove(),t([e,i]))})),r.srcObject=new MediaStream([e]),r.play().catch(gA),setTimeout((()=>{n||(r.srcObject=null,r.remove(),t([r.videoWidth,r.videoHeight]))}),4e3)}))}function Ak(e){const t={};e.facingMode&&(t.facingMode=e.facingMode),e.cameraId&&(t.deviceId={exact:e.cameraId});const i=dL(e.encoderConfig);return null!=i.width&&(t.width=i.width),null!=i.height&&(t.height=i.height),!py()&&i.frameRate&&(t.frameRate=i.frameRate),Qv()&&\"object\"==typeof t.frameRate&&(t.frameRate.max=60),Zv()&&(t.frameRate={ideal:30,max:30}),t}function bk(e){const t={};if(py()||(void 0!==e.AGC&&(t.autoGainControl=e.AGC),void 0!==e.AEC&&(t.echoCancellation=e.AEC),void 0!==e.ANS&&(t.noiseSuppression=e.ANS,Jv()&&e.ANS&&(t.googHighpassFilter=e.ANS))),e.encoderConfig){const i=pL(e.encoderConfig);t.channelCount=i.stereo?2:1,t.sampleRate=i.sampleRate,t.sampleSize=i.sampleSize}return e.microphoneId&&(t.deviceId={exact:e.microphoneId}),fy()&&(t.sampleRate=void 0),t}const wk=e=>{const t=e._encoderConfig;if(!t)return;const{frameRate:i,width:n,height:r}=e.getMediaStreamTrackSettings();let{frameRate:o=i,width:s=n,height:a=r}=t;if(!o||!s||!a)return;s=AA(s),a=AA(a),o=AA(o);const{max:c,min:d}=function(e,t,i){const n=200*Math.pow(i/15,.6)*Math.pow(e*t/640/360,.75);return{min:Math.floor(n),max:Math.floor(4*n)}}(s,a,o),{bitrateMax:l,bitrateMin:u}=t||{};l||fb.debug(\"calculate bitrate: [w: \".concat(s,\", h: \").concat(a,\", fps: \").concat(o,\"] => [brMax: \").concat(l,\", brMin: \").concat(u,\"]\"));const{maxFramerate:h}=XA(\"ENCODER_CONFIG_LIMIT\");return h&&\"number\"==typeof h&&(o=Math.min(o,h)),{frameRate:o,bitrateMax:l||c,bitrateMin:u||d,scaleResolutionDownBy:1,scale:0}},Ok=async(e,t,i)=>await(async(e,t,i)=>{const n=function(e){const t=[];for(let i=0;i<e.length;i+=2)t.push(parseInt(e.slice(i,i+2),16));return Uint8Array.from(t)}(bA(\"\"+t+i)).slice(0,16),r=n.slice(0,12),o=await window.crypto.subtle.importKey(\"raw\",n,\"AES-GCM\",!0,[\"encrypt\"]);return new Uint8Array(await window.crypto.subtle.encrypt({name:\"AES-GCM\",iv:r},o,e))})(e.buffer,t,i),Nk=e=>{const t=document.createElement(\"canvas\");return t.width=2,t.height=2,new Gh(((i,n)=>{t.toBlob((async e=>{if(t.remove(),e){const n=await Dk(e);i({buffer:n,width:t.width,height:t.height})}else n(new Cy(Ry.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED))}),e,1)}))},Dk=async e=>{const t=await e.arrayBuffer();return new Uint8Array(t)};var Pk,Lk,kk,Mk,Uk,xk,Vk,Fk,Bk,jk,Gk,Wk,Hk,Kk,Yk,qk,zk,Jk,Xk,Qk,Zk,$k,eM,tM,iM,nM,rM,oM,sM,aM,cM,dM,lM,uM,hM,pM,_M,EM,fM,mM;let TM=(Pk=Ib({argsMap:(e,t)=>[e.getTrackId(),t],throttleTime:300}),Lk=Ib({argsMap:(e,t)=>[e.getTrackId(),t]}),kk=Tk(),Mk=DA(\"LocalAudioTrack\",\"_enabledMutex\"),Uk=Ib({argsMap:(e,t)=>[e.getTrackId(),t]}),xk=Tk(),Vk=DA(\"LocalAudioTrack\",\"_enabledMutex\"),Fk=Ib({argsMap:(e,t)=>[e.getTrackId(),t]}),Bk=Tk(),jk=Tk(),Gk=Tk(),Wk=Ib({argsMap:e=>[e.getTrackId()]}),Hk=Tk(),Kk=Ib({argsMap:e=>[e.getTrackId()]}),Yk=Tk(),qk=Ib({argsMap:e=>[e.getTrackId()]}),zk=Ib({argsMap:(e,t)=>[e.getTrackId(),t.name]}),Jk=Ib({argsMap:e=>[e.getTrackId()]}),FL((Xk=class extends HL{get _source(){return this.initWebAudio()}set _source(e){this._trackSource=e}get processorContext(){return this._processorContext||(this._processorContext=this.initProcessor().processorContext),this._processorContext}get processorDestination(){return this._processorDestination||(this._processorDestination=this.initProcessor().processorDestination),this._processorDestination}get isPlaying(){return this._useAudioElement?mk.isPlaying(this.getTrackId()):this._source.isPlayed}get __className__(){return\"LocalAudioTrack\"}constructor(e,t,i,n){super(e,i),BL(this,\"trackMediaType\",vL.AUDIO),BL(this,\"_encoderConfig\",void 0),BL(this,\"_trackSource\",void 0),BL(this,\"_enabled\",!0),BL(this,\"_volume\",100),BL(this,\"_useAudioElement\",!0),BL(this,\"_bypassWebAudio\",!1),BL(this,\"processor\",void 0),BL(this,\"_processorContext\",void 0),BL(this,\"_processorDestination\",void 0),BL(this,\"_getOriginVolumeLevel\",void 0),this._encoderConfig=t,this._getOriginVolumeLevel=!!n,this._trackSource=new Ik,XA(\"DISABLE_WEBAUDIO\")&&(this._bypassWebAudio=!0),XA(\"LOCAL_AUDIO_TRACK_USES_WEB_AUDIO\")&&(this._useAudioElement=!1),Xv()&&!YL?setTimeout((()=>this.initWebAudio())):this.initWebAudio()}setVolume(e){yy(e,\"volume\",0,1e3),this._volume=e,this._source.setVolume(e/100),this._useAudioElement&&mk.setVolume(this.getTrackId(),e);try{if(this._bypassWebAudio)return void fb.debug(\"[\".concat(this.getTrackId(),\"] setVolume returned because no pass through WebAudio.\"));const e=this._source.createOutputTrack();this._mediaStreamTrack!==e&&(this._mediaStreamTrack=e,$y(this,fL.NEED_REPLACE_TRACK,this).then((()=>{fb.debug(\"[\".concat(this.getTrackId(),\"] replace web audio track success\"))})).catch((e=>{fb.warning(\"[\".concat(this.getTrackId(),\"] replace web audio track failed\"),e)})))}catch(e){}}getVolumeLevel(){return this._muted&&this.enabled&&this._getOriginVolumeLevel?this._source.getOriginVolumeLevel():this._source.getAccurateVolumeLevel()}async setPlaybackDevice(e){if(!this._useAudioElement||!$P())throw new Cy(Ry.NOT_SUPPORTED,\"your browser does not support setting the audio output device\");await mk.setSinkID(this.getTrackId(),e)}async setEnabled(e,t,i){return this._setEnabled(e,t,i)}async _setEnabled(e,t,i){if(!i){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(fb.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),e){this._originMediaStreamTrack.enabled=!0;try{i||(this._enabled=!0),await $y(this,fL.NEED_ENABLE_TRACK,this),fb.info(\"[\".concat(this.getTrackId(),\"] setEnabled to \").concat(e,\" success\"))}catch(e){throw i||(this._enabled=!1),fb.error(\"[\".concat(this.getTrackId(),\"] setEnabled to true error\"),e.toString()),e}}else{this._originMediaStreamTrack.enabled=!1,i||(this._enabled=!1);try{await $y(this,fL.NEED_DISABLE_TRACK,this)}catch(e){throw i||(this._enabled=!0),fb.error(\"[\".concat(this.getTrackId(),\"] setEnabled to false error\"),e.toString()),e}}}async setMuted(e){e!==this._muted&&(this.stateCheck(\"muted\",e),this._muted=e,this._originMediaStreamTrack.enabled=!e,fb.debug(\"[\".concat(this.getTrackId(),\"] start set muted: \").concat(e)),e?await $y(this,fL.NEED_MUTE_TRACK,this):await $y(this,fL.NEED_UNMUTE_TRACK,this))}getStats(){dA((()=>{fb.warning(\"[deprecated] LocalAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalAudioStats instead\")}),\"localAudioTrackGetStatsWarning\");return eA(this,fL.GET_STATS)||GL({},AL)}setAudioFrameCallback(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4096;if(!e)return this._source.removeAllListeners(yL.ON_AUDIO_BUFFER),void this._source.stopGetAudioBuffer();this._source.startGetAudioBuffer(t),this._source.removeAllListeners(yL.ON_AUDIO_BUFFER),this._source.on(yL.ON_AUDIO_BUFFER,(t=>e(t)))}play(){fb.debug(\"[\".concat(this.getTrackId(),\"] start audio playback\")),this._useAudioElement?(fb.debug(\"[\".concat(this.getTrackId(),\"] start audio playback in element\")),mk.play(this._mediaStreamTrack,this.getTrackId(),this._volume)):this._source.play()}stop(){fb.debug(\"[\".concat(this.getTrackId(),\"] stop audio playback\")),this._useAudioElement?mk.stop(this.getTrackId()):this._source.stop()}close(){super.close(),this._processorDestination&&this.unbindProcessorDestinationEvents(this._processorDestination),this._processorContext&&this.unbindProcessorContextEvents(this._processorContext),this.unpipe(),this._processorDestination&&this._processorDestination._source&&this._processorDestination._source.unpipe(),this._source.destroy()}_updatePlayerSource(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];fb.debug(\"[\".concat(this.getTrackId(),\"] update player source track\")),e&&this._source.updateTrack(this._mediaStreamTrack),this._useAudioElement&&mk.updateTrack(this.getTrackId(),this._mediaStreamTrack)}async _updateOriginMediaStreamTrack(e,t){this._originMediaStreamTrack!==e&&(this._originMediaStreamTrack&&(this._originMediaStreamTrack.removeEventListener(\"ended\",this._handleTrackEnded),t&&this._originMediaStreamTrack.stop()),e.addEventListener(\"ended\",this._handleTrackEnded),this._originMediaStreamTrack=e,this._muted&&(this._originMediaStreamTrack.enabled=!1),this.processor&&this._processorContext&&this.processor.updateInput({track:e,context:this._processorContext}),this._mediaStreamTrack!==this._source.outputTrack?(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await $y(this,fL.NEED_REPLACE_TRACK,this)):this._source.updateTrack(this._originMediaStreamTrack),this._getOriginVolumeLevel&&this._source.updateOriginTrack(e))}renewMediaStreamTrack(e){return Gh.resolve(void 0)}pipe(e){if(this._bypassWebAudio)throw new Cy(Ry.INVALID_OPERATION,\"Can not process AudioTrack when bypassWebAudio set to true.\");if(this.processor===e)return e;if(e._source)throw new Cy(Ry.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,node:this._source.processSourceNode,context:this.processorContext}),e}unpipe(){var e;if(!this.processor)return;const t=this.processor;null===(e=this._source.processSourceNode)||void 0===e||e.disconnect(),this.processor._source=!1,this.processor=void 0,t.reset()}bindProcessorDestinationEvents(e){e.on(DL.ON_TRACK,(async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(!1),this._source.processedNode=this._source.createMediaStreamSourceNode(e),await $y(this,fL.NEED_REPLACE_TRACK,this)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await $y(this,fL.NEED_REPLACE_TRACK,this))})),e.on(DL.ON_NODE,(e=>{this._source.processedNode=e}))}unbindProcessorDestinationEvents(e){e.removeAllListeners(DL.ON_TRACK),e.removeAllListeners(DL.ON_NODE)}bindProcessorContextEvents(e){e.on(PL.REQUEST_CONSTRAINTS,(async e=>{e(this._originMediaStreamTrack.getSettings())}))}unbindProcessorContextEvents(e){e.removeAllListeners(PL.REQUEST_CONSTRAINTS)}initWebAudio(){return this._trackSource instanceof Ik&&(this._trackSource=new ek(this._mediaStreamTrack,!1,this._getOriginVolumeLevel?this._mediaStreamTrack:void 0)),this._trackSource}initProcessor(){const e=new Ck(this._source.context,this.getTrackId(),\"local\"),t=new Rk(e);return this._processorContext=e,this._processorDestination=t,this.bindProcessorContextEvents(e),this.bindProcessorDestinationEvents(t),this._source.on(yL.UPDATE_SOURCE,(()=>{this.processor&&this.processor.updateInput({node:this._source.processSourceNode,context:e})})),this._useAudioElement&&(this._useAudioElement=!1,this.isPlaying&&(mk.stop(this.getTrackId()),this._source.play()),$y(this,fL.NEED_REPLACE_MIXING_TRACK,this).then((()=>{fb.debug(\"[\".concat(this.getTrackId(),\"] replace from origin track to web audio track success\"))})).catch((e=>{fb.warning(\"[\".concat(this.getTrackId(),\"] replace from origin track to web audio track failed\"),e)}))),{processorContext:e,processorDestination:t}}}).prototype,\"setVolume\",[Pk],Object.getOwnPropertyDescriptor(Xk.prototype,\"setVolume\"),Xk.prototype),FL(Xk.prototype,\"setPlaybackDevice\",[Lk,kk],Object.getOwnPropertyDescriptor(Xk.prototype,\"setPlaybackDevice\"),Xk.prototype),FL(Xk.prototype,\"setEnabled\",[Mk,Uk,xk],Object.getOwnPropertyDescriptor(Xk.prototype,\"setEnabled\"),Xk.prototype),FL(Xk.prototype,\"setMuted\",[Vk,Fk,Bk],Object.getOwnPropertyDescriptor(Xk.prototype,\"setMuted\"),Xk.prototype),FL(Xk.prototype,\"getStats\",[jk],Object.getOwnPropertyDescriptor(Xk.prototype,\"getStats\"),Xk.prototype),FL(Xk.prototype,\"setAudioFrameCallback\",[Gk],Object.getOwnPropertyDescriptor(Xk.prototype,\"setAudioFrameCallback\"),Xk.prototype),FL(Xk.prototype,\"play\",[Wk,Hk],Object.getOwnPropertyDescriptor(Xk.prototype,\"play\"),Xk.prototype),FL(Xk.prototype,\"stop\",[Kk,Yk],Object.getOwnPropertyDescriptor(Xk.prototype,\"stop\"),Xk.prototype),FL(Xk.prototype,\"close\",[qk],Object.getOwnPropertyDescriptor(Xk.prototype,\"close\"),Xk.prototype),FL(Xk.prototype,\"pipe\",[zk],Object.getOwnPropertyDescriptor(Xk.prototype,\"pipe\"),Xk.prototype),FL(Xk.prototype,\"unpipe\",[Jk],Object.getOwnPropertyDescriptor(Xk.prototype,\"unpipe\"),Xk.prototype),Xk),SM=(Qk=Ib({argsMap:(e,t)=>[e.getTrackId(),t]}),Zk=Tk(),$k=DA(\"MicrophoneAudioTrack\",\"_enabledMutex\"),eM=Ib({argsMap:(e,t,i)=>[e.getTrackId(),t,i]}),tM=Tk(),iM=Ib({argsMap:e=>[e.getTrackId()]}),FL((nM=class extends TM{get __className__(){return\"MicrophoneAudioTrack\"}constructor(e,t,i,n){super(e,t.encoderConfig?pL(t.encoderConfig):{},n,XA(\"GET_VOLUME_OF_MUTED_AUDIO_TRACK\")),BL(this,\"_config\",void 0),BL(this,\"_deviceName\",\"default\"),BL(this,\"_constraints\",void 0),BL(this,\"_originalConstraints\",void 0),BL(this,\"_enabled\",!0),this._config=t,this._constraints=i,this._originalConstraints=i,this._deviceName=e.label,\"boolean\"==typeof t.bypassWebAudio&&(this._bypassWebAudio=t.bypassWebAudio),(cy()||dy())&&qL.bindInterruptDetectorTrack(this)}async setDevice(e){if(fb.info(\"[\".concat(this.getTrackId(),\"] start set device to \").concat(e)),this._enabled)try{const t=await uk.getDeviceById(e),i={};i.audio=GL({},this._constraints),i.audio.deviceId={exact:e},this._originMediaStreamTrack.stop();let n=null;try{n=await ak(i,this.getTrackId())}catch(e){throw fb.error(\"[\".concat(this.getTrackId(),\"] setDevice failed\"),e.toString()),n=await ak({audio:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(n.getAudioTracks()[0],!1),e}await this._updateOriginMediaStreamTrack(n.getAudioTracks()[0],!1),this._deviceName=t.label,this._config.microphoneId=e,this._constraints.deviceId={exact:e}}catch(e){throw fb.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),e.toString()),e}else try{const t=await uk.getDeviceById(e);this._deviceName=t.label,this._config.microphoneId=e,this._constraints.deviceId={exact:e}}catch(e){throw fb.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),e.toString()),e}fb.info(\"[\".concat(this.getTrackId(),\"] set device to \").concat(e,\" success\"))}async setEnabled(e,t,i){if(t)return fb.debug(\"[\".concat(this.getTrackId(),\"] setEnabled false (do not close microphone)\")),await super._setEnabled(e);if(!i){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(fb.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),XA(\"AUTO_RESET_AUDIO_ROUTE\")&&($v()||uy())){const t=navigator.audioSession;t&&(e||(t.type=\"playback\"),t.type=\"auto\")}if(!e){var n;this._originMediaStreamTrack.onended=null,this._originMediaStreamTrack.stop(),null===(n=this._source.clonedTrack)||void 0===n||n.stop(),i||(this._enabled=!1);try{await $y(this,fL.NEED_DISABLE_TRACK,this)}catch(e){throw fb.error(\"[\".concat(this.getTrackId(),\"] setEnabled false failed\"),e.toString()),e}return}const r=GL({},this._constraints),o=uk.searchDeviceIdByName(this._deviceName);o&&!r.deviceId&&(r.deviceId=o);try{i||(this._enabled=!0);const e=await ak({audio:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getAudioTracks()[0],!1),await $y(this,fL.NEED_ENABLE_TRACK,this)}catch(e){throw i||(this._enabled=!1),fb.error(\"[\".concat(this.getTrackId(),\"] setEnabled true failed\"),e.toString()),e}fb.info(\"[\".concat(this.getTrackId(),\"] setEnabled success\"))}close(){super.close(),(cy()||dy())&&qL.unbindInterruptDetectorTrack(this)}onTrackEnded(){if(($v()||uy())&&this._enabled&&!this._isClosed&&qL.duringInterruption){const e=async()=>{qL.off(tL.IOS_INTERRUPTION_END,e),this._enabled&&!this._isClosed&&(fb.debug(\"[\".concat(this.getTrackId(),\"] try capture microphone media device for interrupted iOS device.\")),await this.setEnabled(!1),await this.setEnabled(!0))};qL.on(tL.IOS_INTERRUPTION_END,e)}else fb.debug(\"[\".concat(this.getTrackId(),\"] track ended\")),this.safeEmit(CL.TRACK_ENDED)}async renewMediaStreamTrack(e){const t=e||this._constraints,i=uk.searchDeviceIdByName(this._deviceName);if(i&&!t.deviceId&&(t.deviceId=i),this._constraints=t,this._enabled){this._originMediaStreamTrack.stop();const e=await ak({audio:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getAudioTracks()[0],!0)}}bindProcessorContextEvents(e){super.bindProcessorContextEvents(e),e.on(PL.REQUEST_UPDATE_CONSTRAINTS,(async(e,t,i)=>{try{const i=Object.assign({},this._originalConstraints,...e);await this.renewMediaStreamTrack(i),t()}catch(e){i(e)}}))}unbindProcessorContextEvents(e){super.unbindProcessorContextEvents(e),e.removeAllListeners(PL.REQUEST_UPDATE_CONSTRAINTS)}}).prototype,\"setDevice\",[Qk,Zk],Object.getOwnPropertyDescriptor(nM.prototype,\"setDevice\"),nM.prototype),FL(nM.prototype,\"setEnabled\",[$k,eM,tM],Object.getOwnPropertyDescriptor(nM.prototype,\"setEnabled\"),nM.prototype),FL(nM.prototype,\"close\",[iM],Object.getOwnPropertyDescriptor(nM.prototype,\"close\"),nM.prototype),nM),gM=(rM=Ib({argsMap:(e,t)=>[e.getTrackId(),t,e.duration]}),oM=Tk(),sM=Ib({argsMap:e=>[e.getTrackId()]}),aM=Tk(),cM=Ib({argsMap:e=>[e.getTrackId()]}),dM=Tk(),lM=Ib({argsMap:e=>[e.getTrackId()]}),uM=Tk(),hM=Ib({argsMap:e=>[e.getTrackId()]}),pM=Tk(),_M=Ib({argsMap:e=>[e.getTrackId()]}),EM=Ib({argsMap:e=>[e.getTrackId()]}),fM=Tk(),FL((mM=class extends TM{get __className__(){return\"BufferSourceAudioTrack\"}constructor(e,t,i,n){super(t.createOutputTrack(),i,n),BL(this,\"source\",void 0),BL(this,\"_bufferSource\",void 0),this._useAudioElement=!1,this.source=e,this._bufferSource=t,this._bufferSource.on(yL.AUDIO_SOURCE_STATE_CHANGE,(e=>{this.safeEmit(CL.SOURCE_STATE_CHANGE,e)}));try{this._mediaStreamTrack=this._source.createOutputTrack()}catch(e){}}get currentState(){return this._bufferSource.currentState}get duration(){return this._bufferSource.duration}get playbackSpeed(){return this._bufferSource.playbackSpeed}getCurrentTime(){return this._bufferSource.currentTime}startProcessAudioBuffer(e){e&&this._bufferSource.updateOptions(e),this._bufferSource.startProcessAudioBuffer()}pauseProcessAudioBuffer(){this._bufferSource.pauseProcessAudioBuffer()}seekAudioBuffer(e){this._bufferSource.seekAudioBuffer(e)}resumeProcessAudioBuffer(){this._bufferSource.resumeProcessAudioBuffer()}stopProcessAudioBuffer(){this._bufferSource.stopProcessAudioBuffer()}close(){this.source=null,this._bufferSource.destroy(),super.close()}setAudioBufferPlaybackSpeed(e){yy(e,\"speed\",0),this._bufferSource.setAudioBufferPlaybackSpeed(e)}}).prototype,\"startProcessAudioBuffer\",[rM,oM],Object.getOwnPropertyDescriptor(mM.prototype,\"startProcessAudioBuffer\"),mM.prototype),FL(mM.prototype,\"pauseProcessAudioBuffer\",[sM,aM],Object.getOwnPropertyDescriptor(mM.prototype,\"pauseProcessAudioBuffer\"),mM.prototype),FL(mM.prototype,\"seekAudioBuffer\",[cM,dM],Object.getOwnPropertyDescriptor(mM.prototype,\"seekAudioBuffer\"),mM.prototype),FL(mM.prototype,\"resumeProcessAudioBuffer\",[lM,uM],Object.getOwnPropertyDescriptor(mM.prototype,\"resumeProcessAudioBuffer\"),mM.prototype),FL(mM.prototype,\"stopProcessAudioBuffer\",[hM,pM],Object.getOwnPropertyDescriptor(mM.prototype,\"stopProcessAudioBuffer\"),mM.prototype),FL(mM.prototype,\"close\",[_M],Object.getOwnPropertyDescriptor(mM.prototype,\"close\"),mM.prototype),FL(mM.prototype,\"setAudioBufferPlaybackSpeed\",[EM,fM],Object.getOwnPropertyDescriptor(mM.prototype,\"setAudioBufferPlaybackSpeed\"),mM.prototype),mM);class RM extends TM{get __className__(){return\"MixingAudioTrack\"}get isActive(){for(const e of this.trackList)if(e._enabled&&!e._isClosed&&!e.muted)return!0;return!1}constructor(){const e=zL().createMediaStreamDestination();super(e.stream.getAudioTracks()[0],void 0,TA(8,\"track-mix-\")),BL(this,\"trackList\",void 0),BL(this,\"destNode\",void 0),this._useAudioElement=!1;try{this._mediaStreamTrack=this._source.createOutputTrack()}catch(e){}this.destNode=e,this.trackList=[]}hasAudioTrack(e){return-1!==this.trackList.indexOf(e)}addAudioTrack(e){-1===this.trackList.indexOf(e)?(fb.debug(\"add \".concat(e.getTrackId(),\" to mixing track\")),e._source.outputNode.connect(this.destNode),this.trackList.push(e),this.updateEncoderConfig()):fb.debug(\"track \".concat(e.getTrackId(),\" is already added\"))}removeAudioTrack(e){if(-1!==this.trackList.indexOf(e)){fb.debug(\"remove \".concat(e.getTrackId(),\" from mixing track\"));try{e._source.outputNode.disconnect(this.destNode)}catch(e){}nA(this.trackList,e),this.updateEncoderConfig()}}updateEncoderConfig(){const e={};this.trackList.forEach((t=>{t._encoderConfig&&((t._encoderConfig.bitrate||0)>(e.bitrate||0)&&(e.bitrate=t._encoderConfig.bitrate),(t._encoderConfig.sampleRate||0)>(e.sampleRate||0)&&(e.sampleRate=t._encoderConfig.sampleRate),(t._encoderConfig.sampleSize||0)>(e.sampleSize||0)&&(e.sampleSize=t._encoderConfig.sampleSize),t._encoderConfig.stereo&&(e.stereo=!0))})),this._encoderConfig=e}_updateRtpTransceiver(e){this._rtpTransceiver!==e&&(this._rtpTransceiver=e,this.trackList.forEach((t=>{t instanceof RM?t.emit(RL.TRANSCEIVER_UPDATED,e):t._updateRtpTransceiver(e)})))}}class CM extends $L{set currentState(e){e!==this._currentState&&(this._currentState=e,this.safeEmit(yL.AUDIO_SOURCE_STATE_CHANGE,this._currentState))}get currentState(){return this._currentState}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),BL(this,\"audioBuffer\",void 0),BL(this,\"sourceNode\",void 0),BL(this,\"startPlayTime\",0),BL(this,\"startPlayOffset\",0),BL(this,\"pausePlayTime\",0),BL(this,\"options\",void 0),BL(this,\"currentLoopCount\",0),BL(this,\"currentPlaybackSpeed\",100),BL(this,\"_currentState\",\"stopped\"),this.audioBuffer=e,this.options=t,this.startPlayOffset=this.options.startPlayTime||0}createWebAudioDiagram(){return this.context.createGain()}get duration(){return this.audioBuffer?this.audioBuffer.duration:0}get playbackSpeed(){return this.currentPlaybackSpeed}get currentTime(){return this.audioBuffer?\"stopped\"===this.currentState?0:\"paused\"===this.currentState?this.pausePlayTime:((this.context.currentTime-this.startPlayTime)*(this.playbackSpeed/100)+this.startPlayOffset)%this.audioBuffer.duration:0}updateOptions(e){\"stopped\"===this.currentState?(this.options=e,this.startPlayOffset=this.options.startPlayTime||0):fb.warning(\"can not set audio source options\")}startProcessAudioBuffer(){this.sourceNode&&this.stopProcessAudioBuffer(),this.sourceNode=this.createSourceNode(),this.startSourceNode(),this.currentState=\"playing\"}pauseProcessAudioBuffer(){this.sourceNode&&\"playing\"===this.currentState&&(this.pausePlayTime=this.currentTime,this.sourceNode.onended=null,this.sourceNode.stop(),this.sourceNode.buffer=null,this.sourceNode=this.createSourceNode(),this.currentState=\"paused\")}seekAudioBuffer(e){this.sourceNode&&(this.sourceNode.onended=null,\"playing\"===this.currentState&&this.sourceNode.stop(),this.sourceNode=this.createSourceNode(),\"playing\"===this.currentState?(this.startPlayOffset=e,this.startSourceNode()):\"paused\"===this.currentState&&(this.pausePlayTime=e))}resumeProcessAudioBuffer(){\"paused\"===this.currentState&&this.sourceNode&&(this.startPlayOffset=this.pausePlayTime,this.pausePlayTime=0,this.startSourceNode(),this.currentState=\"playing\")}stopProcessAudioBuffer(){if(this.sourceNode){this.sourceNode.onended=null;try{this.sourceNode.stop()}catch(e){}this.reset()}}destroy(){this.audioBuffer=null,super.destroy()}setAudioBufferPlaybackSpeed(e){this.sourceNode&&(\"playing\"===this.currentState&&(this.startPlayOffset=this.currentTime,this.startPlayTime=this.context.currentTime),this.sourceNode.playbackRate.value=e/100),this.currentPlaybackSpeed=e}startSourceNode(){this.sourceNode&&this.sourceNode.buffer&&(this.sourceNode.start(0,this.startPlayOffset),this.startPlayTime=this.context.currentTime,this.sourceNode.onended=this.handleSourceNodeEnded.bind(this))}createSourceNode(){const e=this.context.createBufferSource();return e.buffer=this.audioBuffer,e.loop=!!this.options.loop,e.connect(this.outputNode),e.playbackRate.value=this.currentPlaybackSpeed/100,e}handleSourceNodeEnded(){if(this.currentLoopCount+=1,this.options.cycle&&this.options.cycle>this.currentLoopCount)return this.startPlayOffset=0,this.sourceNode=void 0,void this.startProcessAudioBuffer();this.reset()}reset(){this.startPlayOffset=this.options.startPlayTime||0,this.currentState=\"stopped\",this.sourceNode&&(this.sourceNode.disconnect(),this.sourceNode=void 0),this.currentLoopCount=0}}const IM=new Map;class vM{get rendFrameRate(){if(this.renderStats&&this.renderStats.curTs!==this.renderStats.lastTs){const e=this.renderStats.curTs-this.renderStats.lastTs,t=(this.renderStats.renderNum-this.renderStats.lastRenderNum)/e;return this.renderStats.lastRenderNum=this.renderStats.renderNum,this.renderStats.lastTs=this.renderStats.curTs,t}return 0}get videoElementStatus(){return this._videoElementStatus}set videoElementStatus(e){e!==this._videoElementStatus&&(fb.debug(\"[\".concat(this.trackId,\"] video-element-status change \").concat(this._videoElementStatus,\" => \").concat(e)),this._videoElementStatus=e)}get videoState(){return this._videoState}set videoState(e){var t;e!==this._videoState&&(this._videoState=e,null===(t=this.onVideoStateChanged)||void 0===t||t.call(this,this.videoState))}constructor(e){BL(this,\"trackId\",void 0),BL(this,\"config\",void 0),BL(this,\"onFirstVideoFrameDecoded\",void 0),BL(this,\"onVideoStateChanged\",void 0),BL(this,\"freezeTimeCounterList\",[]),BL(this,\"renderFreezeAccTime\",0),BL(this,\"isKeepLastFrame\",!1),BL(this,\"timeUpdatedCount\",0),BL(this,\"freezeTime\",0),BL(this,\"playbackTime\",0),BL(this,\"lastTimeUpdatedTime\",0),BL(this,\"autoplayFailed\",!1),BL(this,\"videoTrack\",void 0),BL(this,\"videoElement\",void 0),BL(this,\"cacheVideoElement\",void 0),BL(this,\"renderStats\",void 0),BL(this,\"_videoState\",UL.VideoStateStopped),BL(this,\"videoElementCheckInterval\",void 0),BL(this,\"videoElementFreezeTimeout\",void 0),BL(this,\"_videoElementStatus\",ML.NONE),BL(this,\"isGettingVideoDimensions\",!1),BL(this,\"startGetVideoDimensions\",(()=>{const e=()=>{if(this.isGettingVideoDimensions=!0,this.videoElement.videoWidth*this.videoElement.videoHeight>4)return fb.debug(\"[\".concat(this.trackId,\"] current video dimensions:\"),this.videoElement.videoWidth,this.videoElement.videoHeight),void(this.isGettingVideoDimensions=!1);setTimeout(e,500)};!this.isGettingVideoDimensions&&e()})),BL(this,\"autoResumeAfterInterruption\",(()=>{this.videoTrack&&\"live\"===this.videoTrack.readyState&&\"running\"===qL.curState&&(fb.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume for \").concat(qv())),ly()?(this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):(this.videoElement.pause(),this.videoElement.play()))})),BL(this,\"handleVideoEvents\",(e=>{switch(e.type){case\"play\":case\"playing\":this.startGetVideoDimensions(),this.videoElementStatus=ML.PLAYING;break;case\"loadeddata\":if(this.videoState=UL.VideoStateStarting,this.onFirstVideoFrameDecoded&&this.onFirstVideoFrameDecoded(),this.cacheVideoElement){try{this.cacheVideoElement.srcObject=null,this.cacheVideoElement.remove()}catch(e){}this.cacheVideoElement=void 0}break;case\"canplay\":this.videoElementStatus=ML.CANPLAY;break;case\"stalled\":this.videoElementStatus=ML.STALLED;break;case\"suspend\":this.videoElementStatus=ML.SUSPEND;break;case\"pause\":this.videoElementStatus=ML.PAUSED,$v()||uy()||Xv()&&this.autoplayFailed||!this.videoTrack||\"live\"!==this.videoTrack.readyState||(fb.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume\")),this.videoElement.play());break;case\"waiting\":this.videoElementStatus=ML.WAITING;break;case\"abort\":this.videoElementStatus=ML.ABORT;break;case\"ended\":this.videoElementStatus=ML.ENDED;break;case\"emptied\":this.videoElementStatus=ML.EMPTIED;break;case\"error\":{const e=this.videoElement.error,t=e?\"\".concat(e.message,\" (\").concat(e.code,\")\"):\"\";e&&(this.videoElementStatus=ML.ERROR),fb.error(\"[\".concat(this.trackId,\"] media error: \").concat(t,\" \"));break}case\"timeupdate\":{const e=performance.now();if(this.timeUpdatedCount+=1,this.timeUpdatedCount<10)return void(this.lastTimeUpdatedTime=e);const t=e-this.lastTimeUpdatedTime,i=this.lastTimeUpdatedTime;if(this.lastTimeUpdatedTime=e,yU.lastVisibleTime<yU.lastHiddenTime||i<yU.lastHiddenTime||i<yU.lastVisibleTime)return;for(t>XA(\"VIDEO_FREEZE_DURATION\")&&(this.freezeTime+=t),this.playbackTime+=t;this.playbackTime>=6e3;){this.playbackTime-=6e3;const e=Math.min(6e3,this.freezeTime);this.freezeTimeCounterList.push(e),this.freezeTime=Math.max(0,this.freezeTime-6e3)}break}}})),BL(this,\"autoResumeAfterInterruptionOnIOS15_16\",(()=>{this.videoTrack&&\"live\"===this.videoTrack.readyState&&(fb.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume for \").concat(qv())),ly()?(this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):(this.videoElement.pause(),this.videoElement.play()))})),this.trackId=e.trackId,this.config=e,e.element instanceof HTMLVideoElement?this.videoElement=e.element:this.videoElement=document.createElement(\"video\"),qL.on(tL.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),qL.on(tL.IOS_15_16_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15_16)}getVideoElement(){return this.videoElement}getContainerElement(){var e;return null!==(e=this.videoElement.parentElement)&&void 0!==e?e:void 0}updateConfig(e){this.config=e,this.trackId=e.trackId,e.element!==this.videoElement&&(this.destroy(),this.videoElement=e.element),this.videoTrack&&this.initVideoElement()}updateVideoTrack(e){this.videoTrack!==e&&(this.videoTrack=e,this.initVideoElement())}play(e){const t=this.videoElement.play();t&&t.catch&&t.catch((t=>{e&&Ek(e,\"video\",t.message,this.trackId),\"NotAllowedError\"===t.name?(fb.warning(\"detected video element autoplay failed\",t),this.autoplayFailed=!0,this.handleAutoPlayFailed()):fb.warning(\"[\".concat(this.trackId,\"] play warning: \"),t)}));const i=Hv();if((\"Safari\"===i.name&&15===Number(i.version)||cy())&&t&&t.then){const e=()=>{this.config.mirror&&(this.videoElement.style.transform=\"rotateY(180deg)\")};t.then(e).catch(e)}}getCurrentFrame(){const e=document.createElement(\"canvas\");e.width=this.videoElement.videoWidth,e.height=this.videoElement.videoHeight;const t=e.getContext(\"2d\");if(!t)return fb.error(\"create canvas context failed!\"),new ImageData(2,2);t.drawImage(this.videoElement,0,0,e.width,e.height);const i=t.getImageData(0,0,e.width,e.height);return e.remove(),i}async getCurrentFrameToUint8Array(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;const i=document.createElement(\"canvas\");i.width=this.videoElement.videoWidth,i.height=this.videoElement.videoHeight;const n=i.getContext(\"2d\");return n?(n.drawImage(this.videoElement,0,0,i.width,i.height),new Gh(((n,r)=>{i.toBlob((async e=>{if(i.remove(),e){const t=await Dk(e);n({buffer:t,width:i.width,height:i.height})}else r(new Cy(Ry.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED))}),e,t<0?.1:t>1?1:t)}))):await Nk(e)}destroy(){this.renderStats=void 0,qL.off(tL.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),qL.off(tL.IOS_15_16_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15_16),this.videoElement.srcObject=null,this.resetVideoElement(),this.freezeTimeCounterList=[],this.videoState=UL.VideoStateStopped}initVideoElement(){if(this.videoElementStatus=ML.INIT,!this.videoElementCheckInterval&&(yM.forEach((e=>{this.videoElement.addEventListener(e,this.handleVideoEvents)})),this.videoElementCheckInterval=window.setInterval((()=>{(function(e){return e!==document.body&&document.body.contains(e)})(this.videoElement)||(this.videoElementStatus=ML.DESTROYED)}),1e3),XA(\"ENABLE_VIDEO_FRAME_CALLBACK\"))){var e,t;let i;const n=()=>{\"visible\"===document.visibilityState&&(document.removeEventListener(\"visibilitychange\",n),this.videoElementFreezeTimeout=window.setTimeout(r,XA(\"VIDEO_FREEZE_DURATION\")))},r=()=>{this.videoElementFreezeTimeout=void 0,this.videoState===UL.VideoStateDecoding&&(\"visible\"===document.visibilityState?this.videoState=UL.VideoStateFrozen:document.addEventListener(\"visibilitychange\",n))},o=(e,t)=>{if(this.videoElementStatus===ML.PLAYING){if(this.renderStats?(this.renderStats.renderNum++,this.renderStats.curTs=t.mediaTime):this.renderStats={lastTs:t.mediaTime,curTs:t.mediaTime,lastRenderNum:0,renderNum:0},i){const e=t.presentationTime-i.presentationTime;this.videoState===UL.VideoStateStarting&&(this.videoState=UL.VideoStateDecoding),this.videoState===UL.VideoStateDecoding&&this.onVideoStateChanged&&(this.videoElementFreezeTimeout&&window.clearTimeout(this.videoElementFreezeTimeout),this.videoElementFreezeTimeout=window.setTimeout(r,XA(\"VIDEO_FREEZE_DURATION\"))),e<XA(\"VIDEO_FREEZE_DURATION\")&&this.videoState===UL.VideoStateFrozen&&(this.videoState=UL.VideoStateDecoding),e>XA(\"VIDEO_FREEZE_DURATION\")&&yU.lastVisibleTime>=yU.lastHiddenTime&&i.timestamp>yU.lastVisibleTime&&i.timestamp>yU.lastHiddenTime&&(this.renderFreezeAccTime+=e)}i=GL(GL({},t),{},{timestamp:e})}var n,s;XA(\"ENABLE_VIDEO_FRAME_CALLBACK\")&&(null===(n=(s=this.videoElement).requestVideoFrameCallback)||void 0===n||n.call(s,o))};null===(e=(t=this.videoElement).requestVideoFrameCallback)||void 0===e||e.call(t,o)}this.videoElement.controls=!1,this.videoElement.setAttribute(\"playsinline\",\"\"),fy()&&!XA(\"HIDE_NO_POSTER\")&&(this.videoElement.poster=\"noposter\");const i=Hv();\"Safari\"===i.name&&15===Number(i.version)||cy()||!this.config.mirror||(this.videoElement.style.transform=\"rotateY(180deg)\"),this.config.fit?this.videoElement.style.objectFit=this.config.fit:this.videoElement.style.objectFit=\"cover\",this.videoElement.setAttribute(\"muted\",\"\"),this.videoElement.muted=!0,this.videoElement.srcObject&&this.videoElement.srcObject instanceof MediaStream?this.videoElement.srcObject.getVideoTracks()[0]!==this.videoTrack&&(this.videoElement.srcObject=this.videoTrack?new MediaStream([this.videoTrack]):null,Zv()&&this.videoElement.load()):(this.videoElement.srcObject=this.videoTrack?new MediaStream([this.videoTrack]):null,Zv()&&this.videoElement.load());const n=this.videoElement.play();void 0!==n&&n.catch((e=>{fb.debug(\"[\".concat(this.trackId,\"] playback interrupted\"),e.toString())}))}resetVideoElement(){yM.forEach((e=>{this.videoElement&&this.videoElement.removeEventListener(e,this.handleVideoEvents)})),this.videoElementCheckInterval&&(window.clearInterval(this.videoElementCheckInterval),this.videoElementCheckInterval=void 0),this.videoElementStatus=ML.NONE}handleAutoPlayFailed(){const e=t=>{t.preventDefault(),this.videoElement.play().then((()=>{fb.debug(\"[\".concat(this.trackId,\"] Video element for trackId:\").concat(this.trackId,\" autoplay resumed.\"))})).catch((e=>{fb.error(e)})),this.autoplayFailed=!1,my()?document.body.removeEventListener(\"click\",e,!0):(document.body.removeEventListener(\"touchstart\",e,!0),document.body.removeEventListener(\"mousedown\",e,!0))};my()?document.body.addEventListener(\"click\",e,!0):(document.body.addEventListener(\"touchstart\",e,!0),document.body.addEventListener(\"mousedown\",e,!0)),_k()}}const yM=[\"play\",\"playing\",\"loadeddata\",\"canplay\",\"pause\",\"stalled\",\"suspend\",\"waiting\",\"abort\",\"emptied\",\"ended\",\"timeupdate\",\"error\"];class AM extends vM{constructor(e){super(e),BL(this,\"container\",void 0),BL(this,\"slot\",void 0),this.slot=e.element,this.updateConfig(e)}updateConfig(e){this.config=e,this.trackId=e.trackId;const t=e.element;t!==this.slot&&(this.destroy(),this.slot=t),this.createElements()}updateVideoTrack(e){this.videoTrack!==e&&(this.videoTrack=e,this.createElements())}play(e){var t;null!==(t=this.container)&&void 0!==t&&t.contains(this.videoElement)&&super.play(e)}getCurrentFrame(){var e;return null!==(e=this.container)&&void 0!==e&&e.contains(this.videoElement)?super.getCurrentFrame():new ImageData(2,2)}async getCurrentFrameToUint8Array(e){var t;let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return null!==(t=this.container)&&void 0!==t&&t.contains(this.videoElement)?await super.getCurrentFrameToUint8Array(e,i):await Nk(e)}destroy(){if(super.destroy(),this.videoElement.remove(),this.videoElement=document.createElement(\"video\"),this.container){try{this.container.remove(),this.slot.removeChild(this.container)}catch(e){}this.container=void 0}}createElements(){this.container||(this.container=document.createElement(\"div\")),this.container.id=\"agora-video-player-\".concat(this.trackId),this.container.style.width=\"100%\",this.container.style.height=\"100%\",this.container.style.position=\"relative\",this.container.style.overflow=\"hidden\",this.videoTrack?(this.container.style.backgroundColor=\"black\",XA(\"KEEP_LAST_FRAME\")&&this.isKeepLastFrame&&this.videoElement.paused&&this.resetVideoElement(),this.mountedVideoElement()):this.unmountedVideoElement(),this.slot.appendChild(this.container)}mountedVideoElement(){var e;!this.container||null!==(e=this.container)&&void 0!==e&&e.contains(this.videoElement)||this.container.appendChild(this.videoElement),super.initVideoElement(),this.videoElement.id=\"video_\".concat(this.trackId),this.videoElement.className=\"agora_video_player\",this.videoElement.style.width=\"100%\",this.videoElement.style.height=\"100%\",this.videoElement.style.position=\"absolute\",this.videoElement.style.left=\"0\",this.videoElement.style.top=\"0\"}unmountedVideoElement(){var e;if(null!==(e=this.container)&&void 0!==e&&e.contains(this.videoElement)){super.resetVideoElement();try{this.container&&this.container.removeChild(this.videoElement)}catch(e){}this.videoElement=document.createElement(\"video\")}}resetVideoElement(){var e;null!==(e=this.container)&&void 0!==e&&e.contains(this.videoElement)&&(super.resetVideoElement(),this.cacheVideoElement=this.videoElement,this.videoElement=document.createElement(\"video\"))}getContainerElement(){return this.container}}var bM,wM,OM,NM,DM,PM,LM,kM,MM,UM,xM,VM,FM,BM,jM,GM,WM,HM,KM,YM,qM,zM,JM,XM,QM,ZM,$M,eU,tU,iU,nU,rU,oU,sU;let aU=(bM=Ib({argsMap:(e,t,i)=>[e.getTrackId(),\"string\"==typeof t?t:t instanceof HTMLVideoElement?\"HTMLVideoElement\":\"HTMLElement\",i]}),wM=Tk(),OM=Ib({argsMap:e=>[e.getTrackId()]}),NM=DA(\"LocalVideoTrack\",\"_enabledMutex\"),DM=Ib({argsMap:(e,t)=>[e.getTrackId(),t]}),PM=Tk(),LM=DA(\"LocalVideoTrack\",\"_enabledMutex\"),kM=Ib({argsMap:(e,t)=>[e.getTrackId(),t]}),MM=Tk(),UM=Ib({argsMap:(e,t)=>[e.getTrackId(),t]}),xM=Tk(),VM=Tk(),FM=Ib({argsMap:(e,t,i)=>[e.getTrackId(),t,i]}),BM=Tk(),jM=Tk(),GM=Tk(),WM=Tk(),HM=Tk(),KM=Tk(),YM=Tk(),qM=Ib({argsMap:(e,t)=>[e.getTrackId(),t.name]}),zM=Ib({argsMap:e=>[e.getTrackId()]}),JM=Ib({argsMap:e=>[e.getTrackId()]}),XM=Ib({argsMap:(e,t,i)=>[e.getTrackId(),t.label,i]}),QM=class e extends HL{get videoHeight(){if(Xv()){const{height:e}=this._mediaStreamTrack.getSettings();return this._videoHeight=e,this._videoHeight}return this._videoHeight}get videoWidth(){if(Xv()){const{width:e}=this._mediaStreamTrack.getSettings();return this._videoWidth=e,this._videoWidth}return this._videoWidth}get isPlaying(){return!(!this._player||this._player.videoElementStatus!==ML.PLAYING)}get processorDestination(){return this._processorDestination}get processorContext(){return this._processorContext}set processorContext(e){this._processorContext=e}get __className__(){return\"LocalVideoTrack\"}constructor(e,t,i,n,r,o){if(super(e,r),BL(this,\"trackMediaType\",vL.VIDEO),BL(this,\"_player\",void 0),BL(this,\"isUseScaleResolutionDownBy\",!1),BL(this,\"_videoVisibleTimer\",null),BL(this,\"_previousVideoVisibleStatus\",void 0),BL(this,\"_clearPreviousVideoVisibleStatus\",(()=>this._previousVideoVisibleStatus=void 0)),BL(this,\"_encoderConfig\",void 0),BL(this,\"_scalabilityMode\",{numSpatialLayers:1,numTemporalLayers:1}),BL(this,\"_optimizationMode\",void 0),BL(this,\"_videoHeight\",void 0),BL(this,\"_videoWidth\",void 0),BL(this,\"_forceBitrateLimit\",void 0),BL(this,\"_enabled\",!0),BL(this,\"_processorDestination\",void 0),BL(this,\"_processorContext\",void 0),Xv()){const{width:t,height:i}=e.getSettings();this._videoWidth=t,this._videoHeight=i}else this.updateMediaStreamTrackResolution();if(this._encoderConfig=t,this._scalabilityMode=i,this._optimizationMode=n,this._hints=o||[],-1===this._hints.indexOf(mL.SCREEN_TRACK))this.updateBitrateFromProfile();else if(function(e,t,i){const n=Hv();return!(n.name!==e||!n.osVersion)&&(i?Number(n.version)>=t&&Number(n.version)<=i:Number(n.version)===t)}(Bv.CHROME,115)&&-1!==Yv().indexOf(\"Windows\")){const t=function(e,t){if(\"VideoFrame\"in window&&\"TransformStream\"in window&&ZP().supportWebRTCInsertableStream){const i=new MediaStreamTrackProcessor(e),n=new MediaStreamTrackGenerator({kind:\"video\"});let r,o,s=Date.now();const a=()=>{c&&(clearInterval(c),c=void 0),r&&(r.close(),r=void 0),e.stop(),o=void 0,n.removeEventListener(\"ended\",a)};let c=window.setInterval((()=>{if(o&&r&&Date.now()-s>(null!=t?t:1e3))try{\"live\"===n.readyState?o.enqueue(r.clone()):a()}catch(e){a()}}),null!=t?t:1e3);const d=new TransformStream({transform:(e,t)=>{\"live\"===n.readyState?(o=t,s=Date.now(),void 0===r?(r=e,t.enqueue(e.clone())):(t.enqueue(r),r=e)):e.close()}});return n.addEventListener(\"ended\",a),i.readable.pipeThrough(d).pipeTo(n.writable),n}}(e);t&&(fb.info(\"local screen video track begin to inject frame\"),this._mediaStreamTrack=t)}t&&-1!==this._hints.indexOf(mL.CUSTOM_TRACK)&&this.setEncoderConfiguration(t),this._processorContext=new gk(this.getTrackId(),\"local\"),this._processorDestination=new Sk(this.processorContext),this.bindProcessorDestinationEvents()}play(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(\"string\"==typeof e){const t=document.getElementById(e);t?e=t:(fb.warning(\"[\".concat(this.getTrackId(),'] can not find \"#').concat(e,'\" element, use document.body')),e=document.body)}fb.debug(\"[\".concat(this.getTrackId(),\"] start video playback in \").concat(e instanceof HTMLVideoElement?\"HTMLVideoElement\":\"HTMLElement\"),JSON.stringify(t));const i=GL(GL(GL({},this._getDefaultPlayerConfig()),t),{},{trackId:this.getTrackId(),element:e});this._player?this._player.updateConfig(i):(e instanceof HTMLVideoElement?this._player=new vM(i):this._player=new AM(i),this._player.updateVideoTrack(this._mediaStreamTrack)),this._player.play(),this._videoVisibleTimer&&window.clearInterval(this._videoVisibleTimer),this._clearPreviousVideoVisibleStatus(),this._videoVisibleTimer=window.setInterval((()=>{try{const e=this.getVideoElementVisibleStatus();this.safeEmit(CL.VIDEO_ELEMENT_VISIBLE_STATUS,e)}catch(e){}}),XA(\"CHECK_VIDEO_VISIBLE_INTERVAL\"))}stop(){this._player&&(this._videoVisibleTimer&&(window.clearInterval(this._videoVisibleTimer),this._videoVisibleTimer=null),this._clearPreviousVideoVisibleStatus(),this._player.destroy(),this._player=void 0,fb.debug(\"[\".concat(this.getTrackId(),\"] stop video playback\")))}async setEnabled(e,t){if(!t){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(fb.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),!e){this._originMediaStreamTrack.enabled=!1;try{await $y(this,fL.NEED_DISABLE_TRACK,this)}catch(e){throw fb.error(\"[\".concat(this.getTrackId(),\"] setEnabled to false error\"),e.toString()),e}return t||(this._enabled=!1),void fb.info(\"[\".concat(this.getTrackId(),\"] setEnabled to false success\"))}this._originMediaStreamTrack.enabled=!0;try{await $y(this,fL.NEED_ENABLE_TRACK,this)}catch(e){throw fb.error(\"[\".concat(this.getTrackId(),\"] setEnabled to true error\"),e.toString()),e}fb.info(\"[\".concat(this.getTrackId(),\"] setEnabled to true success\")),t||(this._enabled=!0)}async setMuted(e){e!==this._muted&&(this.stateCheck(\"muted\",e),this._muted=e,this._originMediaStreamTrack.enabled=!e,fb.debug(\"[\".concat(this.getTrackId(),\"] start set muted: \").concat(e)),e?await $y(this,fL.NEED_MUTE_TRACK,this):await $y(this,fL.NEED_UNMUTE_TRACK,this))}async setEncoderConfiguration(e,t){if(!this._enabled)throw new Cy(Ry.TRACK_IS_DISABLED,\"can not set encoder configuration when track is disabled\");if(e=dL(e),this._forceBitrateLimit&&(e.bitrateMax=this._forceBitrateLimit.max_bitrate?this._forceBitrateLimit.max_bitrate:e.bitrateMax,e.bitrateMin=this._forceBitrateLimit.min_bitrate?this._forceBitrateLimit.min_bitrate:e.bitrateMin),e.width||e.height||e.frameRate){const t=Ak({encoderConfig:e});(Xv()||$v()||uy())&&(t.deviceId=void 0),fb.debug(\"[\".concat(this.getTrackId(),\"] setEncoderConfiguration applyConstraints\"),JSON.stringify(e),JSON.stringify(t));try{await this._originMediaStreamTrack.applyConstraints(t),this.updateMediaStreamTrackResolution()}catch(e){const t=new Cy(Ry.UNEXPECTED_ERROR,e.toString());throw fb.error(\"[\".concat(this.getTrackId(),\"] applyConstraints error\"),t.toString()),t}}this._encoderConfig=e,-1===this._hints.indexOf(mL.SCREEN_TRACK)&&this.updateBitrateFromProfile();try{await $y(this,fL.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw(fb)}}getStats(){dA((()=>{fb.warning(\"[deprecated] LocalVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalVideoStats instead\")}),\"localVideoTrackGetStatsWarning\");return eA(this,fL.GET_STATS)||GL({},bL)}async setBeautyEffect(e){fb.error(\"LocalVideoTrack.setBeautyEffect was deprecated, please migrate to agora-extension-beauty-effect\")}getCurrentFrameData(){return this._player?this._player.getCurrentFrame():new ImageData(2,2)}async getCurrentFrameImage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this._player?this._player.getCurrentFrameToUint8Array(e,t):await Nk(e)}async setBitrateLimit(e){if(fb.debug(\"[\".concat(this.getTrackId(),\"] set bitrate limit, \").concat(JSON.stringify(e))),e){this._forceBitrateLimit=e,this._encoderConfig&&(this._encoderConfig.bitrateMax?this._encoderConfig.bitrateMax=this._encoderConfig.bitrateMax<e.max_bitrate?this._encoderConfig.bitrateMax:e.max_bitrate:this._encoderConfig.bitrateMax=e.max_bitrate,this._encoderConfig.bitrateMin,this._encoderConfig.bitrateMin=e.min_bitrate);try{await $y(this,fL.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw(fb)}}}async setOptimizationMode(e){if(\"motion\"!==e&&\"detail\"!==e&&\"balanced\"!==e)return void fb.error(Ry.INVALID_PARAMS,\"optimization mode must be motion, detail or balanced\");const t=this._optimizationMode;try{this._optimizationMode=e,await $y(this,fL.NEED_UPDATE_VIDEO_SEND_PARAMETERS,this)}catch(e){throw this._optimizationMode=t,fb.error(\"[\".concat(this.getTrackId(),\"] set optimization mode failed\"),e.toString()),e}fb.info(\"[\".concat(this.getTrackId(),\"] set optimization mode success (\").concat(e,\")\"))}setScalabiltyMode(e){if(1===e.numSpatialLayers&&1!==e.numTemporalLayers)return fb.error(Ry.INVALID_PARAMS,\"scalability mode currently not supported, no SVC.\"),void(this._scalabilityMode={numSpatialLayers:1,numTemporalLayers:1});this._scalabilityMode=e,fb.info(\"[\".concat(this.getTrackId(),\"] set scalability mode success (\").concat(e,\")\"))}updateMediaStreamTrackResolution(){yk(this._originMediaStreamTrack).then((e=>{let[t,i]=e;this._videoHeight=i,this._videoWidth=t})).catch(gA)}_updatePlayerSource(){this._player&&this._player.updateVideoTrack(this._mediaStreamTrack)}_getDefaultPlayerConfig(){return{fit:\"contain\"}}async setSenderConfiguration(e){if(!this._enabled)throw new Cy(Ry.TRACK_IS_DISABLED,\"can not set encoder configuration when track is disabled\");fb.debug(\"[\".concat(this.getTrackId(),\"] setSenderConfiguration applyConstraints\"),JSON.stringify(e)),e=dL(e),this._forceBitrateLimit&&(e.bitrateMax=this._forceBitrateLimit.max_bitrate?this._forceBitrateLimit.max_bitrate:e.bitrateMax,e.bitrateMin=this._forceBitrateLimit.min_bitrate?this._forceBitrateLimit.min_bitrate:e.bitrateMin),this._encoderConfig=e,-1===this._hints.indexOf(mL.SCREEN_TRACK)&&this.updateBitrateFromProfile();try{await $y(this,fL.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw(fb)}}updateBitrateFromProfile(){if(!this._encoderConfig)return;const{width:e,height:t,frameRate:i}=this.getMediaStreamTrackSettings();if(!e||!t||!i)return;const{bitrateMax:n,bitrateMin:r}=this._encoderConfig;if(null==r||null==n){const{max:o,min:s}=function(e,t,i,n,r){const o=XA(\"BITRATE_ADAPTER_TYPE\");if(\"DEFAULT_BITRATE\"===o)return{min:n,max:r};if(void 0===r){var s;const a=Math.floor(200*Math.pow(i/15,.6)*Math.pow(e*t/640/360,.75));r=\"STANDARD_BITRATE\"===o?4*a:2*a,n=null!==(s=n)&&void 0!==s?s:a}else{var a;n=null!==(a=n)&&void 0!==a?a:Math.floor(r/10)}return{min:n,max:r}}(e,t,i,r,n);this._encoderConfig.bitrateMin=s,this._encoderConfig.bitrateMax=o,fb.debug(\"[\".concat(this.getTrackId(),\"] update bitrate from profile, [w: \").concat(e,\", h: \").concat(t,\", fps: \").concat(i,\"] => [brMax: \").concat(o,\", brMin: \").concat(s,\"]\"))}}getVideoElementVisibleStatus(){try{var e,t;const i=null==this||null===(e=this._player)||void 0===e?void 0:e.getContainerElement(),n={track:this,element:null==this||null===(t=this._player)||void 0===t?void 0:t.getVideoElement(),slot:null==i?void 0:i.parentElement},{element:r,slot:o}=n;if(this.isPlaying&&r instanceof HTMLVideoElement&&o instanceof HTMLElement){const e=Ly.checkOneElementVisible(r),t=Object.assign({},e);if(t.visible!==this._previousVideoVisibleStatus){this._previousVideoVisibleStatus=t.visible;const e=vb.reportApiInvoke(null,{tag:jy.TRACER,name:By.LOCAL_VIDEO_TRACK_GET_VIDEO_VISIBLE,options:[this.getTrackId()]});t.visible?e.onSuccess(\"Video is visible\"):e.onSuccess(\"Invisible because of \".concat(t.reason))}return t}return}catch(e){throw new Cy(Ry.GET_VIDEO_ELEMENT_VISIBLE_ERROR,e.message)}}async renewMediaStreamTrack(e){}pipe(e){if(this.processor===e)return e;if(e._source)throw new Cy(Ry.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,context:this.processorContext}),e}unpipe(){if(!this.processor)return;const e=this.processor;this.processor._source=void 0,this.processor=void 0,e.reset()}close(){super.close(),this.unbindProcessorDestinationEvents(),this.unbindProcessorContextEvents(),this.unpipe(),this.processorDestination._source&&this.processorDestination._source.unpipe()}clone(t){let i=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=this._encoderConfig;t&&(n=GL(GL({},n),dL(t))),n=aA(n);const r=TA(8,\"track-video-cloned-\"),o=new e(i?this._mediaStreamTrack.clone():this._mediaStreamTrack,n,aA(this._scalabilityMode),this._optimizationMode,r,aA(this._hints));return t&&n&&o.setEncoderConfiguration(n),fb.debug(\"clone video track from \".concat(this.getTrackId(),\" to \").concat(r,\", clone \").concat(i)),o}async replaceTrack(e,t){if(!(e instanceof MediaStreamTrack))throw new Cy(Ry.INVALID_PARAMS,\"track should be an instance of MediaStreamTrack\");if(\"video\"!==e.kind)throw new Cy(Ry.INVALID_PARAMS,\"track should be a video MediaStreamTrack\");await this._updateOriginMediaStreamTrack(e,t,!0),this.updateMediaStreamTrackResolution()}sendSeiData(e){if(dA((()=>{vb.reportApiInvoke(null,{name:By.LOCAL_VIDEO_SEND_SEI_DATA,options:[],tag:jy.TRACER}).onSuccess(\"\")}),this._mediaStreamTrack.id||this.getTrackId()),!XA(\"ENABLE_VIDEO_SEI\")||!XA(\"ENABLE_ENCODED_TRANSFORM\"))return void fb.warning('To send/receive SEI, please call AgoraRTC.setParameter(\"ENABLE_VIDEO_SEI\", true) before instantiate IAgoraRtcClient');if(e instanceof Uint8Array==0)return new Cy(Ry.INVALID_PARAMS,\"Invalid argument type, ILocalVideoTrack.sendSeiData() only accept Uint8Array argument.\").throw();const t=this.getRTCRtpTransceiver();if(!t)return void fb.warning(\"Video track is not published, SEI can not be send\");const i=t.sender.getParameters();if(0===i.codecs.length)return;const n=i.codecs[0].mimeType.toLocaleLowerCase();\"video/h264\"===n?this.safeEmit(\"sei-to-send\",e):fb.warning(\"SEI is not supported by \".concat(n))}bindProcessorDestinationEvents(){this.processorDestination.on(DL.ON_TRACK,(async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(),await $y(this,fL.NEED_REPLACE_TRACK,this)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await $y(this,fL.NEED_REPLACE_TRACK,this))}))}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(DL.ON_TRACK)}unbindProcessorContextEvents(){this.processorContext.removeAllListeners(PL.REQUEST_UPDATE_CONSTRAINTS),this.processorContext.removeAllListeners(PL.REQUEST_CONSTRAINTS)}},FL(QM.prototype,\"play\",[bM,wM],Object.getOwnPropertyDescriptor(QM.prototype,\"play\"),QM.prototype),FL(QM.prototype,\"stop\",[OM],Object.getOwnPropertyDescriptor(QM.prototype,\"stop\"),QM.prototype),FL(QM.prototype,\"setEnabled\",[NM,DM,PM],Object.getOwnPropertyDescriptor(QM.prototype,\"setEnabled\"),QM.prototype),FL(QM.prototype,\"setMuted\",[LM,kM,MM],Object.getOwnPropertyDescriptor(QM.prototype,\"setMuted\"),QM.prototype),FL(QM.prototype,\"setEncoderConfiguration\",[UM,xM],Object.getOwnPropertyDescriptor(QM.prototype,\"setEncoderConfiguration\"),QM.prototype),FL(QM.prototype,\"getStats\",[VM],Object.getOwnPropertyDescriptor(QM.prototype,\"getStats\"),QM.prototype),FL(QM.prototype,\"setBeautyEffect\",[FM,BM],Object.getOwnPropertyDescriptor(QM.prototype,\"setBeautyEffect\"),QM.prototype),FL(QM.prototype,\"getCurrentFrameData\",[jM],Object.getOwnPropertyDescriptor(QM.prototype,\"getCurrentFrameData\"),QM.prototype),FL(QM.prototype,\"getCurrentFrameImage\",[GM],Object.getOwnPropertyDescriptor(QM.prototype,\"getCurrentFrameImage\"),QM.prototype),FL(QM.prototype,\"setBitrateLimit\",[WM],Object.getOwnPropertyDescriptor(QM.prototype,\"setBitrateLimit\"),QM.prototype),FL(QM.prototype,\"setOptimizationMode\",[HM],Object.getOwnPropertyDescriptor(QM.prototype,\"setOptimizationMode\"),QM.prototype),FL(QM.prototype,\"setScalabiltyMode\",[KM],Object.getOwnPropertyDescriptor(QM.prototype,\"setScalabiltyMode\"),QM.prototype),FL(QM.prototype,\"updateMediaStreamTrackResolution\",[YM],Object.getOwnPropertyDescriptor(QM.prototype,\"updateMediaStreamTrackResolution\"),QM.prototype),FL(QM.prototype,\"pipe\",[qM],Object.getOwnPropertyDescriptor(QM.prototype,\"pipe\"),QM.prototype),FL(QM.prototype,\"unpipe\",[zM],Object.getOwnPropertyDescriptor(QM.prototype,\"unpipe\"),QM.prototype),FL(QM.prototype,\"close\",[JM],Object.getOwnPropertyDescriptor(QM.prototype,\"close\"),QM.prototype),FL(QM.prototype,\"replaceTrack\",[XM],Object.getOwnPropertyDescriptor(QM.prototype,\"replaceTrack\"),QM.prototype),QM),cU=(ZM=Ib({argsMap:(e,t)=>[e.getTrackId(),t]}),$M=Tk(),eU=DA(\"CameraVideoTrack\",\"_enabledMutex\"),tU=Ib({argsMap:(e,t)=>[e.getTrackId(),t]}),iU=Tk(),nU=Ib({argsMap:(e,t)=>[e.getTrackId(),t]}),rU=Tk(),oU=Ib({argsMap:e=>[e.getTrackId()]}),sU=class e extends aU{get __className__(){return\"CameraVideoTrack\"}constructor(e,t,i,n,r,o){super(e,dL(t.encoderConfig),n,r,o),BL(this,\"_config\",void 0),BL(this,\"_originalConstraints\",void 0),BL(this,\"_constraints\",void 0),BL(this,\"_enabled\",!0),BL(this,\"_deviceName\",\"default\"),BL(this,\"tryResumeVideoForIOS15_16WeChat\",(async()=>{(cy()||dy())&&!function(){const e=Hv();if(e.os!==Fv.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 15===Number(t[0])&&Number(t[1])>=2}()&&hy()&&this._enabled&&!this._isClosed&&(fb.debug(\"[\".concat(this.getTrackId(),\"] try capture camera media device for interrupted iOS 15 device on WeChat.\")),await this.renewMediaStreamTrack())})),this._config=t,this._originalConstraints=i,this._constraints=i,this._deviceName=e.label,this._encoderConfig=dL(this._config.encoderConfig),qL.on(tL.IOS_15_16_INTERRUPTION_END,this.tryResumeVideoForIOS15_16WeChat),qL.on(tL.IOS_INTERRUPTION_END,this.tryResumeVideoForIOS15_16WeChat),this.bindProcessorContextEvents()}async setDevice(e){return\"string\"==typeof e?this._setDeviceById(e):e.deviceId?this._setDeviceById(e.deviceId):e.facingMode?this._setDeviceByFacingModel(e.facingMode):void 0}async _setDeviceById(e){if(fb.info(\"[\".concat(this.getTrackId(),\"] set device to \").concat(e)),this._enabled)try{const t=await uk.getDeviceById(e),i={};i.video=GL({},this._constraints),i.video.deviceId={exact:e},i.video.facingMode=void 0,this._originMediaStreamTrack.stop();let n=null;try{n=await ak(i,this.getTrackId())}catch(e){throw fb.error(\"[\".concat(this.getTrackId(),\"] setDevice failed\"),e.toString()),n=await ak({video:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(n.getVideoTracks()[0],!1),e}await this._updateOriginMediaStreamTrack(n.getVideoTracks()[0],!1),this.updateMediaStreamTrackResolution(),this._deviceName=t.label,this._config.cameraId=e,this._constraints.deviceId={exact:e}}catch(e){throw fb.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),e.toString()),e}else try{const t=await uk.getDeviceById(e);this._deviceName=t.label,this._config.cameraId=e,this._constraints.deviceId={exact:e}}catch(e){throw fb.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),e.toString()),e}fb.info(\"[\".concat(this.getTrackId(),\"] setDevice success\"))}async _setDeviceByFacingModel(e){fb.info(\"[\".concat(this.getTrackId(),\"] set facingMode \").concat(e));const t={video:GL(GL({},this._constraints),{},{deviceId:void 0,facingMode:{exact:e}})};if(this._enabled){this._originMediaStreamTrack.stop();let e=null;try{e=await ak(t,this.getTrackId())}catch(t){throw fb.error(\"[\".concat(this.getTrackId(),\"] setDeviceByFacingModel failed\"),t.toString()),e=await ak({video:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!1),t}await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!1),this.updateMediaStreamTrackResolution()}this._deviceName=\"\",this._config.facingMode=e,this._config.cameraId=void 0,this._constraints=GL({},t.video),fb.info(\"[\".concat(this.getTrackId(),\"] setDeviceByFacingModel success\"))}async setEnabled(e,t){if(!t){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(fb.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),e){try{if(this.isExternalTrack)this._originMediaStreamTrack.enabled=!0;else{const e=await ak({video:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!1)}await $y(this,fL.NEED_ENABLE_TRACK,this)}catch(e){throw fb.error(\"[\".concat(this.getTrackId(),\"] setEnabled true error\"),e.toString()),e}this.updateMediaStreamTrackResolution(),fb.info(\"[\".concat(this.getTrackId(),\"] setEnabled to true success\")),t||(this._enabled=!0)}else{this.isExternalTrack?this._originMediaStreamTrack.enabled=!1:(this._originMediaStreamTrack.onended=null,this._originMediaStreamTrack.stop()),t||(this._enabled=!1);try{await $y(this,fL.NEED_DISABLE_TRACK,this)}catch(e){throw fb.error(\"[\".concat(this.getTrackId(),\"] setEnabled to false error\"),e.toString()),e}fb.info(\"[\".concat(this.getTrackId(),\"] setEnabled to false success\"))}}async setEncoderConfiguration(e,t){if(!this._enabled)throw new Cy(Ry.TRACK_IS_DISABLED,\"can not set encoder configuration when track is disabled\");e=dL(e),this._forceBitrateLimit&&(e.bitrateMax=this._forceBitrateLimit.max_bitrate||e.bitrateMax,e.bitrateMin=this._forceBitrateLimit.min_bitrate||e.bitrateMin);const i=sA(this._config);i.encoderConfig=e;const n=Ak(i);(Xv()||$v()||uy())&&(n.deviceId=void 0),fb.debug(\"[\".concat(this.getTrackId(),\"] setEncoderConfiguration applyConstraints\"),JSON.stringify(e),JSON.stringify(n));try{await this._originMediaStreamTrack.applyConstraints(n),this.updateMediaStreamTrackResolution()}catch(e){const t=new Cy(Ry.UNEXPECTED_ERROR,e.toString());throw fb.error(\"[\".concat(this.getTrackId(),\"] applyConstraints error\"),t.toString()),t}this._config=i,this._constraints=n,this._originalConstraints=n,this._encoderConfig=e,-1===this._hints.indexOf(mL.SCREEN_TRACK)&&this.updateBitrateFromProfile();try{await $y(this,fL.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw(fb)}}_getDefaultPlayerConfig(){return{mirror:!0,fit:\"cover\"}}onTrackEnded(){if(($v()||uy())&&this._enabled&&!this._isClosed&&qL.duringInterruption){const e=async()=>{qL.off(tL.IOS_INTERRUPTION_END,e),this._enabled&&!this._isClosed&&(fb.debug(\"[\".concat(this.getTrackId(),\"] try capture camera media device for interrupted iOS device.\")),await this.setEnabled(!1),await this.setEnabled(!0))};qL.on(tL.IOS_INTERRUPTION_END,e)}else fb.debug(\"[\".concat(this.getTrackId(),\"] track ended\")),this.safeEmit(CL.TRACK_ENDED)}async renewMediaStreamTrack(e){const t=e||this._constraints,i=uk.searchDeviceIdByName(this._deviceName);if(i&&!t.deviceId&&(t.deviceId={exact:i}),this._enabled){const e=await ak({video:t},this.getTrackId());this._constraints=t,await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!0),this.updateMediaStreamTrackResolution()}}close(){super.close(),qL.off(tL.IOS_15_16_INTERRUPTION_END,this.tryResumeVideoForIOS15_16WeChat),qL.off(tL.IOS_INTERRUPTION_END,this.tryResumeVideoForIOS15_16WeChat)}clone(t){let i=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=this._encoderConfig;t&&(n=GL(GL({},n),dL(t))),n=aA(n);const r=TA(8,\"track-cam-cloned-\"),o=new e(i?this._mediaStreamTrack.clone():this._mediaStreamTrack,aA(GL(GL({},this._config),{},{encoderConfig:n})),aA(this._constraints),aA(this._scalabilityMode),this._optimizationMode,r);return t&&n&&o.setEncoderConfiguration(n),fb.debug(\"clone track from \".concat(this.getTrackId(),\" to \").concat(r,\", clone \").concat(i)),o}bindProcessorContextEvents(){this.processorContext.on(PL.REQUEST_UPDATE_CONSTRAINTS,(async(e,t,i)=>{try{const i=Object.assign({},this._originalConstraints,...e);await this.renewMediaStreamTrack(i),t()}catch(e){i(e)}})),this.processorContext.on(PL.REQUEST_CONSTRAINTS,(async e=>{e(this._originMediaStreamTrack.getSettings())}))}},FL(sU.prototype,\"setDevice\",[ZM,$M],Object.getOwnPropertyDescriptor(sU.prototype,\"setDevice\"),sU.prototype),FL(sU.prototype,\"setEnabled\",[eU,tU,iU],Object.getOwnPropertyDescriptor(sU.prototype,\"setEnabled\"),sU.prototype),FL(sU.prototype,\"setEncoderConfiguration\",[nU,rU],Object.getOwnPropertyDescriptor(sU.prototype,\"setEncoderConfiguration\"),sU.prototype),FL(sU.prototype,\"close\",[oU],Object.getOwnPropertyDescriptor(sU.prototype,\"close\"),sU.prototype),sU);function dU(e,t,i,n){i.optimizationMode&&(n&&n.width&&n.height?(i.encoderConfig=GL(GL({},n),{},{bitrateMin:n.bitrateMin,bitrateMax:n.bitrateMax}),\"motion\"!==i.optimizationMode&&\"detail\"!==i.optimizationMode||(t.contentHint=i.optimizationMode,t.contentHint===i.optimizationMode?fb.debug(\"[\".concat(e,\"] set content hint to\"),i.optimizationMode):fb.debug(\"[\".concat(e,\"] set content hint failed\")))):fb.warning(\"[\".concat(e,\"] can not apply optimization mode bitrate config, no encoderConfig\")))}var lU,uU,hU,pU,_U,EU,fU,mU,TU,SU,gU,RU;class CU extends WL{getUserId(){return this._userId}constructor(e,t,i,n){super(e,\"track-\".concat(e.kind,\"-\").concat(t,\"-\").concat(n.clientId,\"_\").concat(TA(5,\"\"))),BL(this,\"_userId\",void 0),BL(this,\"_uintId\",void 0),BL(this,\"_isDestroyed\",!1),BL(this,\"store\",void 0),BL(this,\"processor\",void 0),BL(this,\"processorContext\",void 0),this._userId=t,this._uintId=i,this.store=n}_updateOriginMediaStreamTrack(e){this._originMediaStreamTrack=e,this._mediaStreamTrack=e,this._updatePlayerSource(),this.processor&&this.processor.updateInput({track:this._originMediaStreamTrack,context:this.processorContext})}_destroy(){this._isDestroyed=!0,fb.info(\"[\".concat(this.getTrackId(),\"] is destroyed\")),this.stop(),super.close()}getProcessorStats(){return this.processorContext.gatherStats()}getProcessorUsage(){return this.processorContext.gatherUsage()}}let IU=(lU=Ib({argsMap:(e,t,i)=>[e.getTrackId(),\"string\"==typeof t?t:t instanceof HTMLVideoElement?\"HTMLVideoElement\":\"HTMLElement\",i]}),uU=Ib({argsMap:e=>[e.getTrackId()]}),hU=Ib({argsMap:(e,t)=>[e.getTrackId(),t.name]}),pU=Ib({argsMap:e=>[e.getTrackId()]}),FL((_U=class extends CU{get isPlaying(){return!(!this._player||this._player.videoElementStatus!==ML.PLAYING)}get __className__(){return\"RemoteVideoTrack\"}constructor(e,t,i,n){super(e,t,i,n),BL(this,\"_videoVisibleTimer\",null),BL(this,\"_previousVideoVisibleStatus\",void 0),BL(this,\"_clearPreviousVideoVisibleStatus\",(()=>this._previousVideoVisibleStatus=void 0)),BL(this,\"trackMediaType\",vL.VIDEO),BL(this,\"_videoWidth\",void 0),BL(this,\"_videoHeight\",void 0),BL(this,\"_player\",void 0),BL(this,\"processorDestination\",void 0),BL(this,\"processorContext\",void 0),this.updateMediaStreamTrackResolution(),this.processorContext=new gk(this.getTrackId(),\"remote\"),this.processorDestination=new Sk(this.processorContext),this.bindProcessorDestinationEvents()}getStats(){return dA((()=>{fb.warning(\"[deprecated] RemoteVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteVideoStats instead\")}),\"remoteVideoTrackGetStatsWarning\"),eA(this,fL.GET_STATS)||GL({},NL)}play(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(\"string\"==typeof e){const t=document.getElementById(e);t?e=t:(fb.warning(\"[\".concat(this.getTrackId(),'] can not find \"#').concat(e,'\" element, use document.body')),e=document.body)}fb.debug(\"[\".concat(this.getTrackId(),\"] start video playback in \").concat(e instanceof HTMLVideoElement?\"HTMLVideoElement\":\"HTMLElement\"),JSON.stringify(t));const i=GL(GL({fit:\"cover\"},t),{},{trackId:this.getTrackId(),element:e});this._player?this._player.updateConfig(i):(e instanceof HTMLVideoElement?this._player=new vM(i):this._player=new AM(i),this._player.updateVideoTrack(this._mediaStreamTrack),this._player.onFirstVideoFrameDecoded=()=>{this.store.subscribe(this.getUserId(),\"video\",void 0,void 0,Date.now()),this.safeEmit(IL.FIRST_FRAME_DECODED)},this._player.onVideoStateChanged=e=>{this.safeEmit(IL.VIDEO_STATE_CHANGED,e)}),this._player.play(this.store.sessionId||void 0),this._videoVisibleTimer&&window.clearInterval(this._videoVisibleTimer),this._clearPreviousVideoVisibleStatus(),this._videoVisibleTimer=window.setInterval((()=>{try{const e=this.getVideoElementVisibleStatus();this.safeEmit(IL.VIDEO_ELEMENT_VISIBLE_STATUS,e)}catch(e){}}),XA(\"CHECK_VIDEO_VISIBLE_INTERVAL\"))}stop(){this._player&&(this._videoVisibleTimer&&(window.clearInterval(this._videoVisibleTimer),this._videoVisibleTimer=null),this._clearPreviousVideoVisibleStatus(),this._player.destroy(),this._player=void 0,fb.debug(\"[\".concat(this.getTrackId(),\"] stop video playback\")))}getCurrentFrameData(){return this._player?this._player.getCurrentFrame():new ImageData(2,2)}updateMediaStreamTrackResolution(){yk(this._originMediaStreamTrack).then((e=>{let[t,i]=e;this._videoHeight=i,this._videoWidth=t})).catch(gA)}_updatePlayerSource(){fb.debug(\"[\".concat(this.getTrackId(),\"] update player source track\")),this._player&&this._player.updateVideoTrack(this._mediaStreamTrack)}getVideoElementVisibleStatus(){try{var e,t;const i=null==this||null===(e=this._player)||void 0===e?void 0:e.getContainerElement(),n={track:this,element:null==this||null===(t=this._player)||void 0===t?void 0:t.getVideoElement(),slot:null==i?void 0:i.parentElement},{element:r,slot:o}=n;if(this.isPlaying&&r instanceof HTMLVideoElement&&o instanceof HTMLElement){const e=Ly.checkOneElementVisible(r),t=Object.assign({},e);if(t.visible!==this._previousVideoVisibleStatus){this._previousVideoVisibleStatus=t.visible;const e=vb.reportApiInvoke(null,{tag:jy.TRACER,name:By.REMOTE_VIDEO_TRACK_GET_VIDEO_VISIBLE,options:[this.getTrackId()]});t.visible?e.onSuccess(\"Video is visible\"):e.onSuccess(\"Invisible because of \".concat(t.reason))}return t}return}catch(e){throw new Cy(Ry.GET_VIDEO_ELEMENT_VISIBLE_ERROR,e.message)}}pipe(e){if(this.processor===e)return e;if(e._source)throw new Cy(Ry.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,context:this.processorContext}),e}unpipe(){if(!this.processor)return;const e=this.processor;this.processor._source=void 0,this.processor=void 0,e.reset()}bindProcessorDestinationEvents(){this.processorDestination.on(DL.ON_TRACK,(async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource()):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource())}))}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(DL.ON_TRACK)}_destroy(){super._destroy(),this.unbindProcessorDestinationEvents()}_onSei(e){this.emit(RL.SEI_RECEIVED,e)}}).prototype,\"play\",[lU],Object.getOwnPropertyDescriptor(_U.prototype,\"play\"),_U.prototype),FL(_U.prototype,\"stop\",[uU],Object.getOwnPropertyDescriptor(_U.prototype,\"stop\"),_U.prototype),FL(_U.prototype,\"pipe\",[hU],Object.getOwnPropertyDescriptor(_U.prototype,\"pipe\"),_U.prototype),FL(_U.prototype,\"unpipe\",[pU],Object.getOwnPropertyDescriptor(_U.prototype,\"unpipe\"),_U.prototype),_U),vU=(EU=Ib({argsMap:(e,t)=>[e.getTrackId(),t],throttleTime:300}),fU=Ib({argsMap:(e,t)=>[e.getTrackId(),t]}),mU=Ib({argsMap:e=>[e.getTrackId()]}),TU=Ib({argsMap:e=>[e.getTrackId()]}),SU=Ib({argsMap:(e,t)=>[e.getTrackId(),t.name]}),gU=Ib({argsMap:e=>[e.getTrackId()]}),FL((RU=class extends CU{get isPlaying(){return this._useAudioElement?mk.isPlaying(this.getTrackId()):this._source.isPlayed}get __className__(){return\"RemoteAudioTrack\"}constructor(e,t,i,n){super(e,t,i,n),BL(this,\"trackMediaType\",vL.AUDIO),BL(this,\"_source\",void 0),BL(this,\"_useAudioElement\",!0),BL(this,\"_volume\",100),BL(this,\"processorContext\",void 0),BL(this,\"processorDestination\",void 0),BL(this,\"_played\",!1),BL(this,\"_bypassWebAudio\",!1),XA(\"DISABLE_WEBAUDIO\")?(this._source=new Ik,this._bypassWebAudio=!0,this._useAudioElement=!0):(this._source=new ek(e,!0),XA(\"REMOTE_AUDIO_TRACK_USES_WEB_AUDIO\")&&(this._useAudioElement=!1)),this._source.once(yL.RECEIVE_TRACK_BUFFER,(()=>{this.safeEmit(IL.FIRST_FRAME_DECODED)})),this.processorContext=new Ck(this._source.context,this.getTrackId(),\"remote\"),this.processorDestination=new Rk(this.processorContext),this.bindProcessorDestinationEvents(),this._source.on(yL.UPDATE_SOURCE,(()=>{this.processor&&this.processor.updateInput({node:this._source.processSourceNode,context:this.processorContext})}))}setAudioFrameCallback(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4096;if(!e)return this._source.removeAllListeners(yL.ON_AUDIO_BUFFER),void this._source.stopGetAudioBuffer();this._source.startGetAudioBuffer(t),this._source.removeAllListeners(yL.ON_AUDIO_BUFFER),this._source.on(yL.ON_AUDIO_BUFFER,(t=>e(t)))}setVolume(e){this._volume=e,this._useAudioElement?mk.setVolume(this.getTrackId(),e):this._source.setVolume(e/100)}async setPlaybackDevice(e){if(!this._useAudioElement||!$P())throw new Cy(Ry.NOT_SUPPORTED,\"your browser does not support setting the audio output device\");await mk.setSinkID(this.getTrackId(),e)}getVolumeLevel(){return this._source.getAccurateVolumeLevel()}getStats(){return dA((()=>{fb.warning(\"[deprecated] RemoteAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteAudioStats instead\")}),\"remoteAudioTrackGetStatsWarning\"),eA(this,fL.GET_STATS)||GL({},wL)}play(){fb.debug(\"[\".concat(this.getTrackId(),\"] start audio playback\")),this._played=!0,this._useAudioElement?(fb.debug(\"[\".concat(this.getTrackId(),\"] use audio element to play\")),mk.play(this._mediaStreamTrack,this.getTrackId(),this._volume,this.store.sessionId||void 0)):this._source.play()}stop(){fb.debug(\"[\".concat(this.getTrackId(),\"] stop audio playback\")),this._played=!1,this._useAudioElement?mk.stop(this.getTrackId()):this._source.stop()}_destroy(){super._destroy(),this._played=!1,this.unbindProcessorDestinationEvents(),this._source.destroy()}_isFreeze(){return this._source.isFreeze}_updatePlayerSource(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];fb.debug(\"[\".concat(this.getTrackId(),\"] update player source track\")),e&&this._source.updateTrack(this._mediaStreamTrack),this._useAudioElement&&mk.updateTrack(this.getTrackId(),this._mediaStreamTrack)}pipe(e){if(this._bypassWebAudio)throw new Cy(Ry.NOT_SUPPORTED,\"can not pipe extension when WebAudio disabled\");if(this.processor===e)return e;if(e._source)throw new Cy(Ry.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,node:this._source.processSourceNode,context:this.processorContext}),e}unpipe(){var e;if(this._bypassWebAudio)throw new Cy(Ry.NOT_SUPPORTED,\"can not unpipe extension when WebAudio disabled\");if(!this.processor)return;const t=this.processor;null===(e=this._source.processSourceNode)||void 0===e||e.disconnect(),this.processor._source=!1,this.processor=void 0,t.reset()}bindProcessorDestinationEvents(){this.processorDestination.on(DL.ON_TRACK,(async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(!1),this._source.processedNode=this._source.createMediaStreamSourceNode(e)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource())})),this.processorDestination.on(DL.ON_NODE,(e=>{this._source.processedNode=e;const t=!e;this._useAudioElement!==t&&(this._played?(this.stop(),this._useAudioElement=t,this.play()):this._useAudioElement=t)}))}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(DL.ON_TRACK),this.processorDestination.removeAllListeners(DL.ON_NODE)}}).prototype,\"setVolume\",[EU],Object.getOwnPropertyDescriptor(RU.prototype,\"setVolume\"),RU.prototype),FL(RU.prototype,\"setPlaybackDevice\",[fU],Object.getOwnPropertyDescriptor(RU.prototype,\"setPlaybackDevice\"),RU.prototype),FL(RU.prototype,\"play\",[mU],Object.getOwnPropertyDescriptor(RU.prototype,\"play\"),RU.prototype),FL(RU.prototype,\"stop\",[TU],Object.getOwnPropertyDescriptor(RU.prototype,\"stop\"),RU.prototype),FL(RU.prototype,\"pipe\",[SU],Object.getOwnPropertyDescriptor(RU.prototype,\"pipe\"),RU.prototype),FL(RU.prototype,\"unpipe\",[gU],Object.getOwnPropertyDescriptor(RU.prototype,\"unpipe\"),RU.prototype),RU);const yU=new class extends xy{get visibility(){return document.visibilityState}get lastHiddenTime(){return this._lastHiddenTime}get lastVisibleTime(){return this._lastVisibleTime}constructor(){super(),BL(this,\"_lastHiddenTime\",0),BL(this,\"_lastVisibleTime\",0),document.addEventListener(\"visibilitychange\",(()=>{\"hidden\"===document.visibilityState?this._lastHiddenTime=performance.now():this._lastVisibleTime=performance.now(),fb.debug(\"document visibility went \".concat(document.visibilityState)),this.emit(\"VISIBILITY_CHANGE\",document.visibilityState)}))}};class AU extends xy{constructor(e,t){super(),BL(this,\"trackMediaType\",vL.DATA),BL(this,\"_version\",1),BL(this,\"_type\",3),BL(this,\"_config\",void 0),BL(this,\"_originDataChannel\",void 0),BL(this,\"_dataStreamPacketHeader\",new ArrayBuffer(4)),BL(this,\"_dataStreamPacketHandler\",{serialize:e=>e,deserialize:e=>e}),BL(this,\"_datachannelEventMap\",new Map),this._config=e,t&&(this._originDataChannel=t,this._bandDataChannelEvents(t)),this._initPacketHeader()}useDataStream(e){this._dataStreamPacketHandler=e}get id(){return this._config.id}get ordered(){return this._config.ordered}get maxRetransmits(){return XA(\"DATASTREAM_MAX_RETRANSMITS\")}get metadata(){return this._config.metadata}get readyState(){var e,t;return null!==(e=null===(t=this._originDataChannel)||void 0===t?void 0:t.readyState)&&void 0!==e?e:\"connecting\"}get _originDataChannelId(){var e,t;return null!==(e=null===(t=this._originDataChannel)||void 0===t?void 0:t.id)&&void 0!==e?e:null}getChannelId(){return this.id}getConfig(){return this._config}_close(){this._originDataChannel&&(this._unbindDataChannelEvents(this._originDataChannel),this._originDataChannel=void 0)}async _waitTillOpen(){return new Gh(((e,t)=>{if(this._originDataChannel){\"open\"===this._originDataChannel.readyState&&e();const i=setTimeout((()=>{var e;t(new Cy(Ry.DATACHANNEL_CONNECTION_TIMEOUT,\"Cannot create datachannel, id: \".concat(null===(e=this._originDataChannel)||void 0===e?void 0:e.id)))}),1e4);this._originDataChannel.onopen=()=>{clearTimeout(i),this._originDataChannel&&this._bandDataChannelEvents(this._originDataChannel),e()},this._originDataChannel.onerror=()=>{throw clearTimeout(i),new Cy(Ry.DATACHANNEL_CONNECTION_TIMEOUT)}}else t(new Cy(Ry.DATACHANNEL_CONNECTION_TIMEOUT,\"cannot find dataChannel\"))}))}_updateOriginDataChannel(e){this._originDataChannel=e,this._bandDataChannelEvents(e)}_initPacketHeader(){const e=new DataView(this._dataStreamPacketHeader);e.setUint16(0,this._version),e.setUint8(2,this._type),e.setUint8(3,this._config.id)}_bandDataChannelEvents(e){this._unbindDataChannelEvents(e),[VL.OPEN,VL.CLOSE,VL.ERROR].forEach((t=>{const i=()=>{this.emit(t)};this._datachannelEventMap.set(t,i),e.addEventListener(t,i)}))}_unbindDataChannelEvents(e){Array.from(this._datachannelEventMap.entries()).forEach((t=>{let[i,n]=t;e.removeEventListener(i,n)})),this._datachannelEventMap.clear()}}class bU extends AU{constructor(e){super(e),BL(this,\"_messageListener\",void 0),this._messageListener=e=>{if(e.data.byteLength<this._dataStreamPacketHeader.byteLength)throw Error(\"invalid byteLength: the byte length must exceed \"+this._dataStreamPacketHeader.byteLength);const t=e.data.slice(0,this._dataStreamPacketHeader.byteLength),i=new DataView(t).getUint8(3);if(i!==this.id)return void(XA(\"SHOW_DATASTREAM2_LOG\")&&fb.debug(\"invalid datachannel id: \".concat(i,\" !== \").concat(this.id)));let n=e.data.slice(this._dataStreamPacketHeader.byteLength);n=this._dataStreamPacketHandler.deserialize(n),this.emit(VL.MESSAGE,n)}}_updateOriginDataChannel(e){super._updateOriginDataChannel(e),this._bandRemoteDataChannelEvents()}_close(){this._originDataChannel&&(this._originDataChannel.removeEventListener(\"message\",this._messageListener),super._close())}_bandRemoteDataChannelEvents(){this._originDataChannel&&this._originDataChannel.addEventListener(\"message\",this._messageListener)}}class wU extends AU{send(e){if(this._originDataChannel){let t=e;t=this._dataStreamPacketHandler.serialize(e);const i=new Uint8Array(this._dataStreamPacketHeader.byteLength+t.byteLength);i.set(new Uint8Array(this._dataStreamPacketHeader),0),i.set(new Uint8Array(t),this._dataStreamPacketHeader.byteLength),this._originDataChannel.send(i.buffer)}}}function OU(){const e=new Blob([atob(\"ZnVuY3Rpb24gZShlLHQsbil7bGV0IHI9bmV3IFVpbnQ4QXJyYXkoZSx0LG4pLGE9W10sbz0wO2Zvcig7YS5sZW5ndGg8bjspbyszPG4mJjA9PT1yW29dJiYwPT09cltvKzFdJiYzPT09cltvKzJdJiYoMD09PXJbbyszXXx8MT09PXJbbyszXXx8Mj09PXJbbyszXXx8Mz09PXJbbyszXSk/KGEucHVzaChyW29dLHJbbysxXSxyW28rM10pLG8rPTQpOihhLnB1c2gocltvXSksbysrKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYSl9ZnVuY3Rpb24gdChlLHQpe2NvbnN0IG49ZnVuY3Rpb24oZSl7Y29uc3QgdD1lLmxlbmd0aDtsZXQgbj1bXSxyPTA7Zm9yKDtyPHQ7KXIrMjx0JiYwPT09ZVtyXSYmMD09PWVbcisxXSYmKDA9PT1lW3IrMl18fDE9PT1lW3IrMl18fDI9PT1lW3IrMl18fDM9PT1lW3IrMl0pPyhuLnB1c2goZVtyXSxlW3IrMV0sMyxlW3IrMl0pLHIrPTMpOihuLnB1c2goZVtyXSkscisrKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkobil9KHQpLHI9bi5sZW5ndGgsYT1NYXRoLmZsb29yKHIvMjU1KSxvPXIlMjU1LHM9bmV3IFVpbnQ4QXJyYXkoNithKzErcitlLmJ5dGVMZW5ndGgpO3NbMF09MCxzWzFdPTAsc1syXT0wLHNbM109MSxzWzRdPTYsc1s1XT0xMDE7bGV0IGk9MDtmb3IoO2k8YTspc1s2K2ldPTI1NSxpKys7cmV0dXJuIHNbNitpXT1vLGkrKyxzLnNldChuLDYraSkscy5zZXQobmV3IFVpbnQ4QXJyYXkoZSksNitpK3IpLHMuYnVmZmVyfW5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZigiU2FmYXJpIik+LTEmJi0xPT09bmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCJDaHJvbWUiKSYmKHNlbGYub25ydGN0cmFuc2Zvcm09bj0+e2NvbnN0IHI9bi50cmFuc2Zvcm1lcjtsZXQgYT1bXTtyLm9wdGlvbnMucG9ydC5vbm1lc3NhZ2U9ZT0+e2UuZGF0YS5zZWkmJmEucHVzaChlLmRhdGEuc2VpKX0sc2VsZi5wb3N0TWVzc2FnZSgic3RhcnRlZCIpO2NvbnN0IG89ci5yZWFkYWJsZS5nZXRSZWFkZXIoKSxzPXIud3JpdGFibGUuZ2V0V3JpdGVyKCk7InJ4Ij09PXIub3B0aW9ucy5uYW1lP2Z1bmN0aW9uIHQobil7by5yZWFkKCkudGhlbigocj0+e2lmKCFyLmRvbmUpe2lmKHIudmFsdWUgaW5zdGFuY2VvZiBSVENFbmNvZGVkVmlkZW9GcmFtZSl7Y29uc3QgdD1mdW5jdGlvbih0KXtjb25zdCBuPW5ldyBEYXRhVmlldyh0LmRhdGEpO2xldCByPTA7Zm9yKDtyKzQ8dC5kYXRhLmJ5dGVMZW5ndGg7KXtpZigwPT09bi5nZXRVaW50OChyKzApJiYwPT09bi5nZXRVaW50OChyKzEpJiYwPT09bi5nZXRVaW50OChyKzIpJiYxPT09bi5nZXRVaW50OChyKzMpJiY2PT09bi5nZXRVaW50OChyKzQpKXtsZXQgYT1yKzYsbz0wLHM9MDtmb3IoOzI1NT09PShzPW4uZ2V0VWludDgoYSsrKSk7KW8rPTI1NTtvKz1zO2NvbnN0IGk9ZSh0LmRhdGEsYSxvKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoaSl9cisrfXJldHVybiBudWxsfShyLnZhbHVlKTt0JiZuLm9wdGlvbnMucG9ydC5wb3N0TWVzc2FnZSh7c2VpOnR9KX1zLndyaXRlKHIudmFsdWUpLG4ub3B0aW9ucy5wb3J0LnBvc3RNZXNzYWdlKHt0cmFuc2Zvcm1lZDohMH0pLHQobil9fSkpfShyKToidHgiPT09ci5vcHRpb25zLm5hbWUmJmZ1bmN0aW9uIGUobil7by5yZWFkKCkudGhlbigocj0+e2lmKCFyLmRvbmUpe2lmKHIudmFsdWUgaW5zdGFuY2VvZiBSVENFbmNvZGVkVmlkZW9GcmFtZSl7Y29uc3QgZT1hLnNoaWZ0KCk7ZSYmKHIudmFsdWUuZGF0YT10KHIudmFsdWUuZGF0YSxlKSl9cy53cml0ZShyLnZhbHVlKSxuLm9wdGlvbnMucG9ydC5wb3N0TWVzc2FnZSh7dHJhbnNmb3JtZWQ6ITB9KSxlKG4pfX0pKX0ocil9LHNlbGYucG9zdE1lc3NhZ2UoInJlZ2lzdGVyZWQiKSk7Cg==\")],{type:\"text/javascript\"});return setTimeout((()=>XP.revokeObjectURL(e)),0),new Worker(XP.createObjectURL(e))}const NU=new Map;const DU=new Map;function PU(e,t,i){let n=new Uint8Array(e,t,i),r=[],o=0;for(;r.length<i;)o+3<i&&0===n[o]&&0===n[o+1]&&3===n[o+2]&&(0===n[o+3]||1===n[o+3]||2===n[o+3]||3===n[o+3])?(r.push(n[o],n[o+1],n[o+3]),o+=4):(r.push(n[o]),o++);return new Uint8Array(r)}const LU=new Map;async function kU(e,t){if(!ZP().supportWebRTCEncodedTransform)return void fb.warning(\"browser not support video encoded transform\");if(LU.has(e))return;if(!e.track)return;const i={track:e.track};if(Jv()){if(!e.createEncodedStreams)return void fb.warning(\"browser not support createEncodedStreams() API\");let r=null;try{r=e.createEncodedStreams()}catch(e){return void fb.error(\"create video-encoded-streams error\",e&&e.message)}let o=[];t.on(\"sei-to-send\",(e=>{o.push(e)}));const s=new TransformStream({transform(t,r){i.controller||(i.controller=r),e.track&&e.track.id!==i.track.id&&(fb.debug(\"video track changed: \".concat(i.track.id,\" => \").concat(e.track.id)),i.track.removeEventListener(\"ended\",n),i.track=e.track,i.track.addEventListener(\"ended\",n));const s=o.shift();s&&(t.data=function(e,t){const i=function(e){const t=e.length;let i=[],n=0;for(;n<t;)n+2<t&&0===e[n]&&0===e[n+1]&&(0===e[n+2]||1===e[n+2]||2===e[n+2]||3===e[n+2])?(i.push(e[n],e[n+1],3,e[n+2]),n+=3):(i.push(e[n]),n++);return new Uint8Array(i)}(t),n=i.length,r=Math.floor(n/255),o=n%255,s=new Uint8Array(6+r+1+n+e.byteLength);s[0]=0,s[1]=0,s[2]=0,s[3]=1,s[4]=6,s[5]=101;let a=0;for(;a<r;)s[6+a]=255,a++;return s[6+a]=o,a++,s.set(i,6+a),s.set(new Uint8Array(e),6+a+n),s.buffer}(t.data,s)),r.enqueue(t)}});r.readable.pipeThrough(s).pipeTo(r.writable)}else{if(!Xv())return;{if(\"undefined\"==typeof RTCRtpScriptTransform)return void fb.warning(\"browser not support RTCRtpScriptTransform\");const r=OU(),o=new MessageChannel;await new Gh((e=>r.onmessage=t=>{\"registered\"===t.data&&e(void 0)}));const s=new RTCRtpScriptTransform(r,{name:\"tx\",port:o.port2},[o.port2]);e.transform=s,await new Gh((e=>r.onmessage=t=>{\"started\"===t.data&&e(void 0)})),t.on(\"sei-to-send\",(e=>{o.port1.postMessage({sei:e})})),o.port1.onmessage=t=>{var r;t.data.transformed&&e.track&&(null===(r=e.track)||void 0===r?void 0:r.id)!==i.track.id&&(fb.debug(\"video track changed: \".concat(i.track.id,\" => \").concat(e.track.id)),i.track.removeEventListener(\"ended\",n),i.track=e.track,i.track.addEventListener(\"ended\",n))},i.worker=r}}function n(){if(e.track){if(this.id!==e.track.id)return;e.track.removeEventListener(\"ended\",n)}const t=LU.get(e);if(t){LU.delete(e);try{var i,r;null===(i=t.controller)||void 0===i||i.terminate(),null===(r=t.worker)||void 0===r||r.terminate()}catch(e){fb.warning(e&&e.message)}}}LU.set(e,i),e.track.addEventListener(\"ended\",n)}const MU=new Map;!function(){const e=Hv();QP.getDisplayMedia=!(!navigator.mediaDevices||!navigator.mediaDevices.getDisplayMedia),QP.getStreamFromExtension=e.name===Bv.CHROME&&Number(e.version)>34,QP.supportUnifiedPlan=function(){if(!window.RTCRtpTransceiver)return!1;if(!(\"currentDirection\"in RTCRtpTransceiver.prototype))return!1;const e=new RTCPeerConnection;let t=!1;try{e.addTransceiver(\"audio\"),t=!0}catch(e){}return e.close(),t}(),QP.supportMinBitrate=e.name===Bv.CHROME||e.name===Bv.EDGE,QP.supportSetRtpSenderParameters=function(){const e=Hv();return!!(window.RTCRtpSender&&window.RTCRtpSender.prototype.setParameters&&window.RTCRtpSender.prototype.getParameters)&&(!!Ey()||!(!Xv()&&!zv())||e.name===Bv.FIREFOX&&Number(e.version)>=64)}(),e.name===Bv.SAFARI&&(Number(e.version)>=14?QP.supportDualStream=!0:QP.supportDualStream=!1),QP.webAudioMediaStreamDest=function(){const e=Hv();return!(e.name===Bv.SAFARI&&Number(e.version)<12)}(),QP.supportReplaceTrack=!!window.RTCRtpSender&&\"function\"==typeof RTCRtpSender.prototype.replaceTrack,QP.supportWebGL=\"undefined\"!=typeof WebGLRenderingContext,QP.supportRequestFrame=!!window.CanvasCaptureMediaStreamTrack,Ey()||(QP.webAudioWithAEC=!0),QP.supportShareAudio=function(){const e=Hv();return(e.os===Fv.WIN_10||e.os===Fv.WIN_81||e.os===Fv.WIN_7||e.os===Fv.LINUX||e.os===Fv.MAC_OS||e.os===Fv.CHROMIUM_OS)&&e.name===Bv.CHROME&&Number(e.version)>=74}(),QP.supportDataChannel=!!(ey(76)||function(e){const t=Hv();return!(t.name!==Bv.FIREFOX||!t.osVersion)&&Number(t.version)>=e}(68)||ny(14)),QP.supportPCSetConfiguration=function(){const e=window.RTCPeerConnection;return!Zv()&&!!e&&e.prototype.setConfiguration instanceof Function}(),QP.supportWebRTCEncodedTransform=function(){const e=Hv();return\"Chrome\"===e.name&&Number(e.version)>=86||\"Safari\"===e.name&&Number(e.version)>=15}(),QP.supportWebRTCInsertableStream=function(){const e=Hv();return(e.name===Bv.CHROME||e.name===Bv.EDGE)&&Number(e.version)>=94&&\"MediaStreamTrackGenerator\"in window&&\"MediaStreamTrackProcessor\"in window}(),QP.supportRequestVideoFrameCallback=\"requestVideoFrameCallback\"in HTMLVideoElement.prototype,QP.supportWebCrypto=\"undefined\"!=typeof window&&void 0!==window.crypto&&void 0!==window.crypto.subtle,oA((()=>{QP.supportDualStreamEncoding=function(){const e=Hv();return!!XA(\"DISABLE_WEBAUDIO\")||(\"Safari\"===e.name&&Number(e.version)>=14||!!(\"Chrome\"===e.name&&/Windows/i.test(e.os||\"\")&&Number(e.version)>=100&&XA(\"CHROME_DUAL_STREAM_USE_ENCODING\")))}(),fb.info(\"browser compatibility\",JSON.stringify(QP),JSON.stringify(e))}))}();class UU extends xy{constructor(e,t){super(),Fg(this,\"signal\",void 0),Fg(this,\"token\",void 0),Fg(this,\"tokenTimeout\",void 0),Fg(this,\"tokenInterval\",void 0),Fg(this,\"_sequence\",0),Fg(this,\"userMap\",new Map),Fg(this,\"encoder\",new TextEncoder),this.signal=e,this.token=t;const i=()=>{this.signal.connectionState===Nw.CONNECTED&&this.check(),0===this.userMap.size?this.tokenInterval=window.setTimeout(i,1e3):this.tokenInterval=window.setTimeout(i,3*XA(\"P2P_TOKEN_INTERVAL\"))};i()}async send(e,t,i,n,r){var o,s,a;if(0===this.userMap.size)return;const c=Array.from(_N(o=this.userMap).call(o))[0].token;\"string\"!=typeof t&&(t=JSON.stringify(t)),n=null!==(s=n)&&void 0!==s?s:TA(6,\"\"),r=null!==(a=r)&&void 0!==a?a:this._sequence++;const d={_id:n,_type:e,_seq:r,_message:t,token:\"\".concat(this.token,\"_\").concat(c)};XA(\"SHOW_P2P_LOG\")&&fb.debug(\"send message\",d,\"noNeedResponse : \".concat(i));this.splitMessage(JSON.stringify(d)).forEach((e=>{this.signal.request(Pw.DATA_STREAM,{payload:uA(this.encoder.encode(e))})}));const l=new Gh(((t,r)=>{const o=window.setTimeout((()=>{this.off(\"res-@\".concat(n,\"_ack\"),s),this.off(\"res-@\".concat(n),c),this.off(vO.ABORT,a),fb.debug(\"[external-signal] request timeout, type: \".concat(e,\", requestId: \").concat(n)),0===this.userMap.size?r(new Cy(Ry.INVALID_REMOTE_USER)):r(new Cy(Ry.TIMEOUT))}),XA(\"EXTERNAL_SIGNAL_REQUEST_TIMEOUT\")),s=()=>{o&&window.clearTimeout(o),this.off(vO.ABORT,a),i&&t()},a=()=>{o&&window.clearTimeout(o),this.off(\"res-@\".concat(n,\"_ack\"),s),this.off(\"res-@\".concat(n),c),r(new Cy(Ry.EXTERNAL_SIGNAL_ABORT,\"type: \".concat(e,\", requestId: \").concat(n)))};this.once(vO.ABORT,a),this.once(\"res-@\".concat(n,\"_ack\"),s);const c=(i,c)=>{l=!0,o&&window.clearTimeout(o),this.off(\"res-@\".concat(n,\"_ack\"),s),this.off(vO.ABORT,a),\"success\"===i?t(c):r(new Cy(Ry.P2P_MESSAGE_FAILED,\"request \".concat(e,\" failed, requestId: \").concat(n)))};let l=!1;i||(this.once(\"res-@\".concat(n),c),mA(XA(\"SIGNAL_REQUEST_TIMEOUT\")).then((()=>{l||fb.warning(\"external_signal request timeout, type: \".concat(e,\", requestId: \").concat(n,\", \").concat(d))})))}));try{return await l}catch(o){if(o.code===Ry.TIMEOUT)return await this.send(e,t,i,n,r);throw o}}onMessage(e){var t;const{_uid:i}=e;let n,r=this.userMap.get(i);if(r)n=r.splitMessageMap;else{if(this.userMap.size>0||!(\"_type\"in e)||e._type!==IO.CHECK)return;const{token:t}=e;n=new Map,r={uid:i,isStart:!0,token:t,splitMessageMap:n,nextExpectedSequenceNumber:0,receivedMessagesMap:new Map},this.userMap.set(i,r),this.signal.emit(kw.ON_USER_ONLINE,{uid:i}),this.handleUserOnline()}if(\"id\"in e&&\"total\"in e){var o;const{id:t,total:r}=e,s=null!==(o=n.get(t))&&void 0!==o?o:[];if(s.push(e),n.has(t)||n.set(t,s),s.length!==r)return;{const r=aE(s).call(s,((e,t)=>e.index-t.index)).map((e=>e.payload)).join(\"\");n.delete(t),(e=JSON.parse(r))._uid=i}}const{_type:s,token:a}=e;if(Dn(t=[IO.ACK,IO.CHECK]).call(t,s))return s===IO.CHECK&&this.handleCheckToken(r,a),void this.receiveMessage(e);a===\"\".concat(r.token,\"_\").concat(this.token)?this.handleReceivedMessage(e):fb.debug('Receive unexpected message\", '.concat(a,\", cur_token: \").concat(r.token,\"_\").concat(this.token),e)}check(){const e={_id:TA(6,\"\"),token:this.token,_type:IO.CHECK};XA(\"SHOW_P2P_LOG\")&&fb.debug(\"send message\",e),this.signal.request(Pw.DATA_STREAM,{payload:uA(this.encoder.encode(JSON.stringify(e)))})}ack(e){const t={_id:e,_type:IO.ACK,token:this.token};XA(\"SHOW_P2P_LOG\")&&fb.debug(\"send message\",t),this.signal.request(Pw.DATA_STREAM,{payload:uA(this.encoder.encode(JSON.stringify(t)))})}response(e,t,i){this.send(IO.RESPONSE,JSON.stringify({success:!i,message:t}),!0,e)}handleReceivedMessage(e){const t=()=>{this.userMap.forEach((e=>{const{receivedMessagesMap:t,nextExpectedSequenceNumber:i}=e;for(;t.has(i);){const n=t.get(i);t.delete(i),this.receiveMessage(n),e.nextExpectedSequenceNumber++}}))};if(!e)return void t();const{_uid:i,_seq:n}=e,r=this.userMap.get(i),{receivedMessagesMap:o,isStart:s,nextExpectedSequenceNumber:a}=r;if(n<a)return this.ack(e._id),void fb.debug(\"[external-signal] receive old message, seq: \".concat(n,\", \").concat(e._message));o.set(n,e),s&&n===a&&(this.receiveMessage(e),o.delete(a),r.nextExpectedSequenceNumber++,t())}receiveMessage(e){const{_id:t,_type:i,_message:n,_uid:r}=e;if(XA(\"SHOW_P2P_LOG\")&&fb.debug(\"receive message\",e),t){let o;switch(e._type!==IO.ACK&&(n&&(o=JSON.parse(n)),this.ack(e._id)),e._type){case IO.CANDIDATE:case IO.CONTROL:this.signal.emit(i,o,r);break;case IO.PUBLISH:case IO.UNPUBLISH:case IO.RESTART_ICE:case IO.CALL:o.uid=r,Zy(this.signal,i,o).then((t=>{this.response(e._id,t)})).catch((()=>{this.response(e._id,void 0,!0)}));break;case IO.ACK:this.getListeners(\"res-@\".concat(t,\"_ack\")).length>0&&this.emit(\"res-@\".concat(t,\"_ack\"));break;case IO.RESPONSE:{const{success:e,message:i}=o;this.emit(\"res-@\".concat(t),e?\"success\":\"failed\",i);break}}}}splitMessage(e){if(e.length<UU.MAX_MESSAGE_SIZE)return[e];const t=[],{remoteToken:i}=JSON.parse(e),n=TA(6,\"\");let r=0,o=800;const s=Math.ceil(e.length/o);for(;e.length>0;){r++;const a={id:n,index:r,total:s,payload:e.slice(0,o),token:\"\".concat(this.token,\"_\").concat(i)};JSON.stringify(a).length>UU.MAX_MESSAGE_SIZE?o-=50:(t.push(a),e=e.slice(o))}return t.map((e=>JSON.stringify(e)))}handleCheckToken(e,t){return e.token!==t?(fb.debug(\"token changed, from \".concat(e.token,\" to \").concat(t)),this.reset(e.uid,t),!1):(this.tokenTimeout&&(window.clearTimeout(this.tokenTimeout),this.tokenTimeout=void 0),this.tokenTimeout=window.setTimeout((()=>{fb.debug(\"token timeout, \".concat(t)),this.reset(e.uid)}),XA(\"MAX_P2P_TIMEOUT\")),!0)}async handleUserOnline(){const e=await Zy(this.signal,IO.CALL,void 0),t=await this.send(IO.CALL,e);this.signal.emit(Dw.P2P_CONNECTION,t,!0)}async reset(e,t){const i=this.userMap.get(e);i&&(this.emit(vO.ABORT),this.signal.emit(kw.ON_USER_OFFLINE,{uid:i.uid,reason:AO.P2P_TOKEN_CHANGED}),this._sequence=0,this.userMap.clear(),t||(fb.debug(\"change local token from \".concat(t,\" to \").concat(t)),this.token=TA(6,\"\")))}clear(){this._sequence=0,this.userMap.clear(),this.tokenInterval&&window.clearTimeout(this.tokenInterval),this.tokenInterval=void 0,this.tokenTimeout&&window.clearTimeout(this.tokenTimeout),this.tokenTimeout=void 0,this.emit(vO.ABORT)}}Fg(UU,\"MAX_SIZE\",1),Fg(UU,\"MAX_MESSAGE_SIZE\",1024);class xU extends xy{get connectionState(){return this._connectionState}set connectionState(e){e!==this._connectionState&&(this._connectionState=e,e===Nw.CONNECTED?this.emit(Dw.WS_CONNECTED):e===Nw.RECONNECTING?this.emit(Dw.WS_RECONNECTING,this._websocketReconnectReason):e===Nw.CLOSED&&this.emit(Dw.WS_CLOSED,this._disconnectedReason))}get currentURLIndex(){return this.websocket.currentURLIndex}get url(){return this.websocket&&this.websocket.url||null}get rtt(){return this.rttRolling.mean()}constructor(e,t){super(),Fg(this,\"_disconnectedReason\",void 0),Fg(this,\"_websocketReconnectReason\",void 0),Fg(this,\"_connectionState\",Nw.CLOSED),Fg(this,\"reconnectToken\",void 0),Fg(this,\"p2pToken\",void 0),Fg(this,\"websocket\",void 0),Fg(this,\"openConnectionTime\",void 0),Fg(this,\"clientId\",void 0),Fg(this,\"lastMsgTime\",Date.now()),Fg(this,\"uploadCache\",[]),Fg(this,\"uploadCacheInterval\",void 0),Fg(this,\"rttRolling\",new MA(5)),Fg(this,\"pingpongTimer\",void 0),Fg(this,\"pingpongTimeoutCount\",0),Fg(this,\"joinResponse\",void 0),Fg(this,\"multiIpOption\",void 0),Fg(this,\"initError\",void 0),Fg(this,\"spec\",void 0),Fg(this,\"store\",void 0),Fg(this,\"_external_signal\",void 0),Fg(this,\"onWebsocketMessage\",(e=>{if(e.data instanceof ArrayBuffer)return void this.emit(Dw.ON_BINARY_DATA,e.data);const t=JSON.parse(e.data);if(this.lastMsgTime=Date.now(),Object.prototype.hasOwnProperty.call(t,\"_id\")){const e=\"res-@\".concat(t._id);this.emit(e,t._result,t._message)}else if(Object.prototype.hasOwnProperty.call(t,\"_type\")){switch(t._type){case kw.ON_DATA_STREAM:return void this.handleDataStream(t._message);case kw.MUTE_AUDIO:case kw.MUTE_VIDEO:case kw.ON_P2P_LOST:case kw.ON_USER_ONLINE:return;case kw.ON_USER_OFFLINE:const{uid:e}=t._message;return fb.debug(\"[\".concat(this.clientId,\"] user-offline uid: \").concat(e)),void this._external_signal.reset(e)}if(this.emit(t._type,t._message),t._type===kw.ON_NOTIFICATION&&this.handleNotification(t._message),t._type===kw.ON_USER_BANNED)switch(t._message.error_code){case 14:this.close(Hy.UID_BANNED);break;case 15:this.close(Hy.IP_BANNED);break;case 16:this.close(Hy.CHANNEL_BANNED)}if(t._type===kw.ON_USER_LICENSE_BANNED)switch(t._message.error_code){case Ow.ERR_LICENSE_MISSING:this.close(Hy.LICENSE_MISSING);break;case Ow.ERR_LICENSE_EXPIRED:this.close(Hy.LICENSE_EXPIRED);break;case Ow.ERR_LICENSE_MINUTES_EXCEEDED:this.close(Hy.LICENSE_MINUTES_EXCEEDED);break;case Ow.ERR_LICENSE_PERIOD_INVALID:this.close(Hy.LICENSE_PERIOD_INVALID);break;case Ow.ERR_LICENSE_MULTIPLE_SDK_SERVICE:this.close(Hy.LICENSE_MULTIPLE_SDK_SERVICE);break;case Ow.ERR_LICENSE_ILLEGAL:this.close(Hy.LICENSE_ILLEGAL);break;default:this.close()}}})),this.clientId=e.clientId,this.spec=e,this.store=t,this.websocket=new WO(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,XA(\"JOIN_GATEWAY_USE_DUAL_DOMAIN\"),XA(\"JOIN_GATEWAY_USE_443PORT_ONLY\"),t),this.handleWebsocketEvents(),window.addEventListener(\"offline\",(()=>{this.connectionState===Nw.CONNECTED&&this.reconnect(\"retry\",Jy.OFFLINE)})),this.p2pToken=TA(6,\"\"),this._external_signal=new UU(this,this.p2pToken)}async request(e,t,i,n){const r=TA(6,\"\"),o={_id:r,_type:e,_message:t},s=this.websocket.connectionID,a=()=>new Gh(((e,t)=>{if(this.connectionState===Nw.CONNECTED)return e();const i=()=>{this.off(Dw.WS_CLOSED,n),e()},n=()=>{this.off(Dw.WS_CONNECTED,i),t(new Cy(Ry.WS_ABORT))};this.once(Dw.WS_CONNECTED,i),this.once(Dw.WS_CLOSED,n)}));if(this.connectionState!==Nw.CONNECTING&&this.connectionState!==Nw.RECONNECTING||e===Pw.JOIN||e===Pw.REJOIN||await a(),this.websocket.sendMessage(o,!0),n)return;const c=new Gh(((i,n)=>{let o=!1;const a=(n,r)=>{o=!0,i({isSuccess:\"success\"===n,message:r||{}}),this.off(Dw.WS_CLOSED,c),this.off(Dw.WS_RECONNECTING,c),this.emit(Dw.REQUEST_SUCCESS,e,t)};this.once(\"res-@\".concat(r),a);const c=()=>{n(new Cy(Ry.WS_ABORT,\"type: \".concat(e))),this.off(Dw.WS_CLOSED,c),this.off(Dw.WS_RECONNECTING,c),this.off(\"res-@\".concat(r),a)};this.once(Dw.WS_CLOSED,c),this.once(Dw.WS_RECONNECTING,c),mA(XA(\"SIGNAL_REQUEST_TIMEOUT\")).then((()=>{this.websocket.connectionID!==s||o||(fb.warning(\"[\".concat(this.clientId,\"] ws request timeout, type: \").concat(e)),this.emit(Dw.REQUEST_TIMEOUT,e,t))}))}));let d=null;try{d=await c}catch(n){if(this.connectionState===Nw.CLOSED||e===Pw.LEAVE)throw new Cy(Ry.WS_ABORT);return!this.spec.forceWaitGatewayResponse||i?n.throw():e===Pw.JOIN||e===Pw.REJOIN?null:(await a(),await this.request(e,t))}if(d.isSuccess)return d.message;const l=Number(d.message.error_code||d.message.code),u=NO(l),h=new Cy(Ry.UNEXPECTED_RESPONSE,\"\".concat(u.desc,\": \").concat(d.message.error_str),{code:l,data:d.message,desc:u.desc});return\"success\"===u.action?d.message:(fb.warning(\"[\".concat(this.clientId,\"] [\").concat(this.websocket.connectionID,\"] unexpected response from type \").concat(e,\", error_code: \").concat(l,\", message: \").concat(u.desc,\", action: \").concat(u.action)),l===Ow.ERR_TOO_MANY_BROADCASTERS?e===Pw.JOIN||e===Pw.REJOIN?(this.initError=h,this.close(),h.throw()):h.throw():\"failed\"===u.action?h.throw():\"quit\"===u.action?(this.initError=h,this.close(),h.throw()):(l===Ow.ERR_JOIN_BY_MULTI_IP?(this.multiIpOption=d.message.option,fb.warning(\"[\".concat(this.clientId,\"] detect multi ip, recover\")),this.reconnect(\"recover\",Jy.MULTI_IP)):this.reconnect(u.action,Jy.SERVER_ERROR),e===Pw.JOIN||e===Pw.REJOIN?null:await this.request(e,t)))}waitMessage(e,t){return new Gh((i=>{const n=r=>{(!t||t(r))&&(this.off(e,n),i(r))};this.on(e,n)}))}uploadWRTCStats(e){if(!this.store.sessionId)return void fb.warn(\"[\".concat(this.clientId,\"] no session id when upload wrtc stats\"));const t={lts:Date.now(),sid:this.store.sessionId,uid:this.store.intUid,stats:e};this.upload(Lw.WRTC_STATS,t)}upload(e,t){const i={_type:e,_message:t};try{this.websocket.sendMessage(i)}catch(e){const t=XA(\"MAX_UPLOAD_CACHE\")||50;this.uploadCache.push(i),this.uploadCache.length>t&&this.uploadCache.splice(0,1),this.uploadCache.length>0&&!this.uploadCacheInterval&&(this.uploadCacheInterval=window.setInterval((()=>{if(this.connectionState!==Nw.CONNECTED)return;const e=this.uploadCache.splice(0,1)[0];0===this.uploadCache.length&&(window.clearInterval(this.uploadCacheInterval),this.uploadCacheInterval=void 0),this.upload(e._type,e._message)}),XA(\"UPLOAD_CACHE_INTERVAL\")||2e3))}}send(e,t){const i={_type:e,_message:t};this.websocket.sendMessage(i)}async sendExtensionMessage(e,t,i){return await this._external_signal.send(e,t,i)}init(e){return this.initError=void 0,this.multiIpOption=void 0,this.joinResponse=void 0,this.reconnectToken=void 0,this.openConnectionTime=void 0,new Gh(((t,i)=>{this.once(Dw.WS_CONNECTED,(()=>t(this.joinResponse))),this.once(Dw.WS_CLOSED,(()=>i(this.initError||new Cy(Ry.WS_ABORT)))),this.connectionState=Nw.CONNECTING,this.websocket.init(e).catch(i)}))}close(e){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.reconnectToken=void 0,this.joinResponse=void 0,this._external_signal.clear(),this._disconnectedReason=e||Hy.LEAVE,this.connectionState=Nw.CLOSED,fb.debug(\"[\".concat(this.clientId,\"] \")+\"will close websocket in signal\"),this.websocket.close(),this.p2pToken=TA(6,\"\"),this._external_signal.clear(),this._external_signal=new UU(this,this.p2pToken)}async join(){if(!this.joinResponse){this.emit(Dw.ABORT_P2P_EXECUTION);const e=await Zy(this,Dw.REQUEST_JOIN_INFO),t=await this.request(Pw.JOIN,e);if(!t)return this.emit(Dw.REPORT_JOIN_GATEWAY,Ry.TIMEOUT,this.url||\"\"),!1;this.joinResponse=t,this.emit(Dw.JOIN_RESPONSE,this.joinResponse),this.reconnectToken=this.joinResponse.rejoin_token}return this.connectionState=Nw.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),!0}reconnect(e,t){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.websocket.reconnect(e,t)}handleDataStream(e){try{var t;const i=lA(e.payload),n=(new TextDecoder).decode(i),r=JSON.parse(n);\"total\"in r&&\"id\"in r||Dn(t=Object.values(IO)).call(t,r._type)?(r._uid=e.uid,this._external_signal.onMessage(r)):this.emit(kw.ON_DATA_STREAM,e)}catch(t){this.emit(kw.ON_DATA_STREAM,e)}}handleNotification(e){fb.debug(\"[\".concat(this.clientId,\"] receive notification: \"),e);const t=NO(e.code);if(\"success\"!==t.action){if(\"failed\"!==t.action)return\"quit\"===t.action?(\"ERR_REPEAT_JOIN_CHANNEL\"===t.desc&&this.close(Hy.UID_BANNED),void this.close()):void this.reconnect(t.action,Jy.SERVER_ERROR);fb.error(\"[\".concat(this.clientId,\"] ignore error: \"),t.desc)}}handlePingPong(){if(!this.websocket||\"connected\"!==this.websocket.state)return;this.pingpongTimeoutCount>0&&this.rttRolling.add(3e3),this.pingpongTimeoutCount+=1;const e=XA(\"PING_PONG_TIME_OUT\"),t=Date.now();this.pingpongTimeoutCount>=e&&(fb.warning(\"[\".concat(this.clientId,\"] PINGPONG Timeout. Last Socket Message: \").concat(t-this.lastMsgTime,\"ms\")),t-this.lastMsgTime>XA(\"WEBSOCKET_TIMEOUT_MIN\"))?this.reconnect(\"retry\",Jy.TIMEOUT):this.request(Pw.PING,void 0,!0).then((()=>{this.pingpongTimeoutCount=0;const e=Date.now()-t;this.rttRolling.add(e),XA(\"REPORT_STATS\")&&this.send(Pw.PING_BACK,{pingpongElapse:e})})).catch((e=>{}))}handleWebsocketEvents(){this.websocket.on(Uw.RECONNECT_WAITTING_FINISH,(e=>{this.emit(Dw.WS_RECONNECT_WAITTING_FINISH,e)})),this.websocket.on(Uw.RECONNECT_CREATE_CONNECTION,(e=>{this.emit(Dw.WS_RECONNECT_CREATE_CONNECTION,e)})),this.websocket.on(Uw.ON_MESSAGE,this.onWebsocketMessage),this.websocket.on(Uw.CLOSED,(()=>{this.connectionState=Nw.CLOSED})),this.websocket.on(Uw.FAILED,(()=>{this._disconnectedReason=Hy.NETWORK_ERROR,this.connectionState=Nw.CLOSED})),this.websocket.on(Uw.RECONNECTING,(e=>{this._websocketReconnectReason=e,this.joinResponse=void 0,this.connectionState===Nw.CONNECTED?this.connectionState=Nw.RECONNECTING:this.connectionState=Nw.CONNECTING})),this.websocket.on(Uw.WILL_RECONNECT,((e,t,i)=>{\"retry\"!==e?(fb.debug(\"\".concat(this.clientId,\" websocket will_connect event, renewSession reconnectMode is \").concat(e)),this.reconnectToken=void 0):fb.debug(\"\".concat(this.clientId,\" reconnect mode is retry, no need to renew session\")),i(e)})),this.websocket.on(Uw.CONNECTED,(()=>{this.openConnectionTime=Date.now(),this.join().catch((e=>{if(this.emit(Dw.REPORT_JOIN_GATEWAY,e,this.url||\"\"),e instanceof Cy&&e.code===Ry.UNEXPECTED_RESPONSE&&e.data.code===Ow.ERR_NO_AUTHORIZED)return fb.warning(\"[\".concat(this.clientId,\"] reconnect no authorized, recover\")),void this.reconnect(\"recover\",Jy.SERVER_ERROR);fb.error(\"[\".concat(this.clientId,\"] join gateway request failed\"),e.toString()),this.spec.forceWaitGatewayResponse?this.reconnect(\"tryNext\",Jy.SERVER_ERROR):(this.initError=e,this.close())}))})),this.websocket.on(Uw.REQUEST_NEW_URLS,((e,t)=>{Zy(this,Dw.REQUEST_RECOVER,this.multiIpOption).then(e).catch(t)})),this.websocket.on(Uw.ON_TOKEN_PRIVILEGE_DID_EXPIRE,(()=>{this.emit(kw.ON_TOKEN_PRIVILEGE_DID_EXPIRE)}))}}var VU={exports:{}};VU.exports=(()=>{var e={8:(e,t,i)=>{i.r(t),i.d(t,{Parser:()=>C,Printer:()=>b,parse:()=>D,print:()=>P});const n=\"\\n\",r=\"\".concat(\"\\r\").concat(n),o=\" \";let s;function a(e){return e>=\"0\"&&e<=\"9\"}function c(e){return e>=\"!\"&&e<=\"~\"}function d(e){return c(e)||e>=\"Â\"&&e<=\"Ã¿\"}function l(e){return\"!\"===e||e>=\"#\"&&e<=\"'\"||e>=\"*\"&&e<=\"+\"||e>=\"-\"&&e<=\".\"||e>=\"0\"&&e<=\"9\"||e>=\"A\"&&e<=\"Z\"||e>=\"^\"&&e<=\"~\"}function u(e){return e>=\"1\"&&e<=\"9\"}function h(e){return e>=\"A\"&&e<=\"Z\"||e>=\"a\"&&e<=\"z\"}function p(e){return\"d\"===e||\"h\"===e||\"m\"===e||\"s\"===e}function _(e){return e>\"\u0001\"&&e<\"\\t\"||e>\"\\v\"&&e<\"\\f\"||e>\"\u000e\"&&e<\"Ã¿\"}function E(e){return h(e)||a(e)||\"+\"===e||\"/\"===e}function f(e){return a(e)||h(e)||\"+\"===e||\"/\"===e||\"-\"===e||\"_\"===e}function m(e){return h(e)||a(e)||\"+\"===e||\"/\"===e}function T(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function S(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?T(Object(i),!0).forEach((function(t){g(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):T(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function g(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}!function(e){e.VERSION=\"v\",e.ORIGIN=\"o\",e.SESSION_NAME=\"s\",e.INFORMATION=\"i\",e.URI=\"u\",e.EMAIL=\"e\",e.PHONE=\"p\",e.CONNECTION=\"c\",e.BANDWIDTH=\"b\",e.TIME=\"t\",e.REPEAT=\"r\",e.ZONE_ADJUSTMENTS=\"z\",e.KEY=\"k\",e.ATTRIBUTE=\"a\",e.MEDIA=\"m\"}(s||(s={}));class R{consumeText(e,t){let i=t;for(;i<e.length;){const t=e[i];if(\"\\0\"===t||\"\\r\"===t||t===n)break;i+=1}if(i-t==0)throw new Error(\"Invalid text, at \".concat(e));return i}consumeUnicastAddress(e,t,i){return this.consumeTill(e,t,o)}consumeOneOrMore(e,t,i){let n=t;for(;i(e[n]);)n++;if(n-t==0)throw new Error(\"Invalid rule at \".concat(t,\".\"));return n}consumeSpace(e,t){if(e[t]===o)return t+1;throw new Error(\"Invalid space at \".concat(t,\".\"))}consumeIP4Address(e,t){let i=t;for(let t=0;t<4;t++)if(i=this.consumeDecimalUChar(e,i),3!==t){if(\".\"!==e[i])throw new Error(\"Invalid IP4 address.\");i++}return i}consumeDecimalUChar(e,t){let i=t;for(let t=0;t<3&&a(e[i]);t++,i++);if(i-t==0)throw new Error(\"Invalid decimal uchar.\");const n=parseInt(e.slice(t,i));if(n>=0&&n<=255)return i;throw new Error(\"Invalid decimal uchar\")}consumeIP6Address(e,t){let i=this.consumeHexpart(e,t);return\":\"===e[i]?(i+=1,i=this.consumeIP4Address(e,i),i):i}consumeHexpart(e,t){let i=t;if(\":\"===e[i]&&\":\"===e[i+1]){i+=2;try{i=this.consumeHexseq(e,i)}catch(e){}return i}if(i=this.consumeHexseq(e,i),\":\"===e[i]&&\":\"===e[i+1]){i+=2;try{i=this.consumeHexseq(e,i)}catch(e){}return i}return i}consumeHexseq(e,t){let i=t;for(;i=this.consumeHex4(e,i),\":\"===e[i]&&\":\"!==e[i+1];)i+=1;return i}consumeHex4(e,t){let i=0;for(;i<4;i++)if(!((n=e[t+i])>=\"0\"&&n<=\"9\"||n>=\"a\"&&n<=\"f\"||n>=\"A\"&&n<=\"F\")){if(0===i)throw new Error(\"Invalid hex 4\");break}var n;return t+i}consumeFQDN(e,t){let i=t;for(;a(e[i])||h(e[i])||\"-\"===e[i]||\".\"===e[i];)i+=1;if(i-t<4)throw new Error(\"Invalid FQDN\");return i}consumeExtnAddr(e,t){return this.consumeOneOrMore(e,t,d)}consumeMulticastAddress(e,t,i){switch(i){case\"IP4\":case\"ip4\":return this.consumeIP4MulticastAddress(e,t);case\"IP6\":case\"ip6\":return this.consumeIP6MulticastAddress(e,t);default:try{return this.consumeFQDN(e,t)}catch(i){return this.consumeExtnAddr(e,t)}}}consumeIP6MulticastAddress(e,t){const i=this.consumeHexpart(e,t);return\"/\"===e[i]?this.consumeInteger(e,i+1):i}consumeIP4MulticastAddress(e,t){let i=t+3;const n=e.slice(t,i),r=parseInt(n);if(r<224||r>239)throw new Error(\"Invalid IP4 multicast address, IPv4 multicast addresses may be in the range 224.0.0.0 to 239.255.255.255.\");for(let t=0;t<3;t++){if(\".\"!==e[i])throw new Error(\"Invalid IP4 multicast address.\");i+=1,i=this.consumeDecimalUChar(e,i)}return\"/\"===e[i]&&(i+=1),i=this.consumeTTL(e,i),\"/\"===e[i]&&(i=this.consumeInteger(e,i)),i}consumeInteger(e,t){if(!u(e[t]))throw new Error(\"Invalid integer.\");for(t+=1;a(e[t]);)t+=1;return t}consumeTTL(e,t){if(\"0\"===e[t])return t+1;if(!u(e[t]))throw new Error(\"Invalid TTL.\");t+=1;for(let i=0;i<2&&a(e[t]);i++)t+=1;return t}consumeToken(e,t){return this.consumeOneOrMore(e,t,l)}consumeTime(e,t){let i=t;if(\"0\"===e[i])return i+1;for(u(e[i])&&(i+=1);a(e[i]);)i++;if(i-t<10)throw new Error(\"Invalid time\");return i}consumeAddress(e,t){return this.consumeTill(e,t,o)}consumeTypedTime(e,t){let i=t;return i=this.consumeOneOrMore(e,i,a),p(e[i])?i+1:i}consumeRepeatInterval(e,t){if(!u(e[t]))throw new Error(\"Invalid repeat interval\");for(t+=1;a(e[t]);)t+=1;return p(e[t])&&(t+=1),t}consumePort(e,t){return this.consumeOneOrMore(e,t,a)}consume(e,t,i){for(let n=0;n<i.length;n++){if(t+n>=e.length)throw new Error(\"consume exceeding value length\");if(e[t+n]!==i[n])throw new Error(\"consume \".concat(i,\" failed at \").concat(n))}return t+i.length}consumeTill(e,t,i){let n=t;for(;n<e.length&&(\"string\"!=typeof i||e[n]!==i)&&(\"function\"!=typeof i||!i(e[n]));)n++;return n}}class C extends R{constructor(){super(),g(this,\"records\",[]),g(this,\"currentLine\",0)}parse(e){const t=this.probeEOL(e);this.records=e.split(t).filter((e=>!!jp(e).call(e))).map(this.parseLine),this.currentLine=0;const i=this.parseVersion(),n=this.parseOrigin(),r=this.parseSessionName(),o=this.parseInformation(),s=this.parseUri(),a=this.parseEmail(),c=this.parsePhone(),d=this.parseConnection(),l=this.parseBandWidth(),u=this.parseTimeFields(),h=this.parseKey(),p=this.parseSessionAttribute(),_=this.parseMediaDescription();if(this.currentLine!==this.records.length)throw new Error(\"parsing failed, non exhaustive sdp lines.\");return{version:i,origin:n,sessionName:r,information:o,uri:s,emails:a,phones:c,connection:d,bandwidths:l,timeFields:u,key:h,attributes:p,mediaDescriptions:_}}getCurrentRecord(){const e=this.records[this.currentLine];if(!e)throw new Error(\"Record doesn't exit.\");return e}probeEOL(e){for(let t=0;t<e.length;t++)if(e[t]===n)return\"\\r\"===e[t-1]?r:n;throw new Error(\"Invalid newline character.\")}parseLine(e,t){if(e.length<2)throw new Error(\"Invalid sdp line, sdp line should be of form <type>=<value>.\");const i=e[0];if(\"=\"!==e[1])throw new Error('Invalid sdp line, <type> should be a single character followed by an \"=\" sign.');return{type:i,value:e.slice(2),line:t,cur:0}}parseSessionAttribute(){const e=new v;for(;this.currentLine<this.records.length;){const t=this.getCurrentRecord();if(t.type!==s.ATTRIBUTE)break;const i={attField:this.extractOneOrMore(t,(e=>l(e)&&\":\"!==e)),_cur:0};\":\"===t.value[t.cur]&&(t.cur+=1,i.attValue=this.extractOneOrMore(t,_)),e.parse(i),this.currentLine++}return e.digest()}parseMediaAttributes(e){const t=new y(e);for(;this.currentLine<this.records.length;){const e=this.getCurrentRecord();if(e.type!==s.ATTRIBUTE)break;const i={attField:this.extractOneOrMore(e,(e=>l(e)&&\":\"!==e)),_cur:0};\":\"===e.value[e.cur]&&(e.cur+=1,i.attValue=this.extractOneOrMore(e,_)),t.parse(i),this.currentLine++}return t.digest()}parseKey(){const e=this.getCurrentRecord();if(e.type===s.KEY){if(\"prompt\"===e.value||\"clear:\"===e.value||\"base64:\"===e.value||\"uri:\"===e.value)return e.value;throw this.currentLine++,new Error(\"Invalid key.\")}}parseZone(){const e=this.getCurrentRecord();if(e.type===s.ZONE_ADJUSTMENTS){const t=[];for(;;)try{const i=this.extract(e,this.consumeTime);this.consumeSpaceForRecord(e);let n=!1;\"-\"===e.value[e.cur]&&(n=!0,e.cur+=1);const r=this.extract(e,this.consumeTypedTime);t.push({time:i,typedTime:r,back:n})}catch(e){break}if(0===t.length)throw new Error(\"Invalid zone adjustments\");return this.currentLine++,t}return[]}parseRepeat(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==s.REPEAT)break;{const i=this.extract(t,this.consumeRepeatInterval),n=this.parseTypedTime(t);e.push({repeatInterval:i,typedTimes:n}),this.currentLine++}}return e}parseTypedTime(e){const t=[];for(;;)try{this.consumeSpaceForRecord(e),t.push(this.extract(e,this.consumeTypedTime))}catch(e){break}if(0===t.length)throw new Error(\"Invalid typed time.\");return t}parseTime(){const e=this.getCurrentRecord(),t=this.extract(e,this.consumeTime);this.consumeSpaceForRecord(e);const i=this.extract(e,this.consumeTime);return this.currentLine++,{startTime:t,stopTime:i}}parseBandWidth(){const e=[];for(;this.currentLine<this.records.length;){const t=this.getCurrentRecord();if(t.type!==s.BANDWIDTH)break;{const i=this.extractOneOrMore(t,l);if(\":\"!==t.value[t.cur])throw new Error(\"Invalid bandwidth field.\");t.cur++;const n=this.extractOneOrMore(t,a);e.push({bwtype:i,bandwidth:n}),this.currentLine++}}return e}parseVersion(){const e=this.getCurrentRecord();if(e.type!==s.VERSION)throw new Error(\"first sdp record must be version\");const t=e.value.slice(0,this.consumeOneOrMore(e.value,0,a));if(t.length!==e.value.length)throw new Error('invalid proto version, \"v='.concat(e.value,'\"'));return this.currentLine++,t}parseOrigin(){const e=this.getCurrentRecord();if(e.type!==s.ORIGIN)throw new Error(\"second line of sdp must be origin\");const t=this.extractOneOrMore(e,d);this.consumeSpaceForRecord(e);const i=this.extractOneOrMore(e,a);this.consumeSpaceForRecord(e);const n=this.extractOneOrMore(e,a);this.consumeSpaceForRecord(e);const r=this.extractOneOrMore(e,l);this.consumeSpaceForRecord(e);const o=this.extractOneOrMore(e,l);this.consumeSpaceForRecord(e);const c=this.extract(e,this.consumeUnicastAddress);return this.currentLine++,{username:t,sessId:i,sessVersion:n,nettype:r,addrtype:o,unicastAddress:c}}parseSessionName(){const e=this.getCurrentRecord();if(e.type===s.SESSION_NAME){const t=this.extract(e,this.consumeText);return this.currentLine++,t}}parseInformation(){const e=this.getCurrentRecord();if(e.type!==s.INFORMATION)return;const t=this.extract(e,this.consumeText);return this.currentLine++,t}parseUri(){const e=this.getCurrentRecord();if(e.type===s.URI)return this.currentLine++,e.value}parseEmail(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==s.EMAIL)break;e.push(t.value),this.currentLine++}return e}parsePhone(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==s.PHONE)break;e.push(t.value),this.currentLine++}return e}parseConnection(){const e=this.getCurrentRecord();if(e.type===s.CONNECTION){const t=this.extractOneOrMore(e,l);this.consumeSpaceForRecord(e);const i=this.extractOneOrMore(e,l);this.consumeSpaceForRecord(e);const n=this.extract(e,this.consumeAddress);return this.currentLine++,{nettype:t,addrtype:i,address:n}}}parseMedia(){const e=this.getCurrentRecord(),t=this.extract(e,this.consumeToken);this.consumeSpaceForRecord(e);let i=this.extract(e,this.consumePort);\"/\"===e.value[e.cur]&&(e.cur+=1,i+=this.extract(e,this.consumeInteger)),this.consumeSpaceForRecord(e);const n=[];for(n.push(this.extract(e,this.consumeToken));\"/\"===e.value[e.cur];)e.cur+=1,n.push(this.extract(e,this.consumeToken));if(0===n.length)throw new Error(\"Invalid proto\");const r=this.parseFmt(e);return this.currentLine++,{mediaType:t,port:i,protos:n,fmts:r}}parseTimeFields(){const e=[];for(;this.getCurrentRecord().type===s.TIME;){const t=this.parseTime(),i=this.parseRepeat(),n=this.parseZone();e.push({time:t,repeats:i,zones:n})}return e}parseMediaDescription(){const e=[];for(;this.currentLine<this.records.length&&this.getCurrentRecord().type===s.MEDIA;){const t=this.parseMedia(),i=this.parseInformation(),n=this.parseConnections(),r=this.parseBandWidth(),o=this.parseKey(),s=this.parseMediaAttributes(t);e.push({media:t,information:i,connections:n,bandwidths:r,key:o,attributes:s})}return e}parseConnections(){const e=[];for(;this.currentLine<this.records.length&&this.getCurrentRecord().type===s.CONNECTION;)e.push(this.parseConnection());return e}parseFmt(e){const t=[];for(;;)try{this.consumeSpaceForRecord(e),t.push(this.extract(e,this.consumeToken))}catch(e){break}if(0===t.length)throw new Error(\"Invalid fmts\");return t}extract(e,t){for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];const o=t.call(this,e.value,e.cur,...n),s=e.value.slice(e.cur,o);return e.cur=o,s}extractOneOrMore(e,t){const i=this.consumeOneOrMore(e.value,e.cur,t),n=e.value.slice(e.cur,i);return e.cur=i,n}consumeSpaceForRecord(e){if(e.value[e.cur]!==o)throw new Error(\"Invalid space at \".concat(e.cur,\".\"));e.cur+=1}}class I extends R{constructor(){super(...arguments),g(this,\"attributes\",void 0),g(this,\"digested\",!1)}extractOneOrMore(e,t,i){const n=this.consumeOneOrMore(e.attValue,e._cur,t),r=e.attValue.slice(e._cur,n),[o,s]=i||[];if(\"number\"==typeof o&&r.length<o)throw new Error(\"error in length, should be more or equal than \".concat(o,\" characters.\"));if(\"number\"==typeof s&&r.length>s)throw new Error(\"error in length, should be less or equal than \".concat(s,\" characters.\"));return e._cur=n,r}consumeAttributeSpace(e){if(e.attValue[e._cur]!==o)throw new Error(\"Invalid space at \".concat(e._cur,\".\"));e._cur+=1}extract(e,t){if(!e.attValue)throw new Error(\"Nothing to extract from attValue.\");for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];const o=t.call(this,e.attValue,e._cur,...n),s=e.attValue.slice(e._cur,o);return e._cur=o,s}atEnd(e){if(!e.attValue)throw new Error;return e._cur>=e.attValue.length}peekChar(e){if(!e.attValue)throw new Error;return e.attValue[e._cur]}peek(e,t){if(!e.attValue)throw new Error;for(let i=0;i<t.length;i++)if(t[i]!==e.attValue[e._cur+i])return!1;return!0}parseIceUfrag(e){if(this.attributes.iceUfrag)throw new Error(\"Invalid ice-ufrag, should be only a single line if 'a=ice-ufrag'\");this.attributes.iceUfrag=this.extractOneOrMore(e,E,[4,256])}parseIcePwd(e){if(this.attributes.icePwd)throw new Error(\"Invalid ice-pwd, should be only a single line if 'a=ice-pwd'\");this.attributes.icePwd=this.extractOneOrMore(e,E,[22,256])}parseIceOptions(e){if(this.attributes.iceOptions)throw new Error(\"Invalid ice-options, should be only one 'ice-options' line\");const t=[];for(;!this.atEnd(e);){t.push(this.extractOneOrMore(e,E));try{this.consumeAttributeSpace(e)}catch(t){if(this.atEnd(e))break;throw t}}this.attributes.iceOptions=t}parseFingerprint(e){const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill);this.attributes.fingerprints.push({hashFunction:t,fingerprint:i})}parseExtmap(e){const t=this.extractOneOrMore(e,a);let i;\"/\"===this.peekChar(e)&&(this.extract(e,this.consume,\"/\"),i=this.extract(e,this.consumeToken)),this.consumeAttributeSpace(e);const n=this.extract(e,this.consumeTill,o),r=S(S({entry:parseInt(t,10)},i&&{direction:i}),{},{extensionName:n});this.peekChar(e)===o&&(this.consumeAttributeSpace(e),r.extensionAttributes=this.extract(e,this.consumeTill)),this.attributes.extmaps.push(r)}parseSetup(e){if(this.attributes.setup)throw new Error(\"must only be one single 'a=setup' line.\");const t=this.extract(e,this.consumeTill);if(\"active\"!==t&&\"passive\"!==t&&\"actpass\"!==t&&\"holdconn\"!==t)throw new Error(\"role must be one of 'active', 'passive', 'actpass', 'holdconn'.\");this.attributes.setup=t}}class v extends I{constructor(){super(...arguments),g(this,\"attributes\",{unrecognized:[],groups:[],extmaps:[],fingerprints:[],identities:[]})}parse(e){if(this.digested)throw new Error(\"already digested\");try{switch(e.attField){case\"group\":this.parseGroup(e);break;case\"ice-lite\":this.parseIceLite();break;case\"ice-ufrag\":this.parseIceUfrag(e);break;case\"ice-pwd\":this.parseIcePwd(e);break;case\"ice-options\":this.parseIceOptions(e);break;case\"fingerprint\":this.parseFingerprint(e);break;case\"setup\":this.parseSetup(e);break;case\"tls-id\":this.parseTlsId(e);break;case\"identity\":this.parseIdentity(e);break;case\"extmap\":this.parseExtmap(e);break;case\"msid-semantic\":this.parseMsidSemantic(e);break;default:e.ignored=!0,this.attributes.unrecognized.push(e)}}catch(t){throw console.error(\"parsing session attribute \".concat(e.attField,' error, \"a=').concat(e.attField,\":\").concat(e.attValue,'\"')),t}if(!e.ignored&&e.attValue&&!this.atEnd(e))throw new Error(\"attribute parsing error\")}digest(){return this.digested=!0,this.attributes}parseGroup(e){const t=this.extract(e,this.consumeToken),i=[];for(;!this.atEnd(e)&&this.peekChar(e)===o;)this.consumeAttributeSpace(e),i.push(this.extract(e,this.consumeToken));this.attributes.groups.push({semantic:t,identificationTag:i})}parseIceLite(){if(this.attributes.iceLite)throw new Error(\"Invalid ice-lite, should be only a single line of 'a=ice-lite'\");this.attributes.iceLite=!0}parseTlsId(e){if(this.attributes.tlsId)throw new Error(\"must be only one tld-id line\");this.attributes.tlsId=this.extractOneOrMore(e,f)}parseIdentity(e){const t=this.extractOneOrMore(e,m),i=[];for(;!this.atEnd(e)&&this.peekChar(e)===o;){this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeToken);this.extract(e,this.consume,\"=\");const n=this.extractOneOrMore(e,(e=>e!==o&&_(e)));i.push({name:t,value:n})}this.attributes.identities.push({assertionValue:t,extensions:i})}parseMsidSemantic(e){this.peekChar(e)===o&&this.consumeAttributeSpace(e);const t={semantic:this.extract(e,this.consumeToken),identifierList:[]};for(;;){try{this.consumeAttributeSpace(e)}catch(e){break}if(\"*\"===this.peekChar(e)){this.extract(e,this.consume,\"*\"),t.applyForAll=!0;break}{const i=this.extract(e,this.consumeTill,o);t.identifierList.push(i)}}this.attributes.msidSemantic=t}}class y extends I{constructor(e){super(),g(this,\"attributes\",void 0),-1!==e.protos.indexOf(\"RTP\")||e.protos.indexOf(\"rtp\"),this.attributes={unrecognized:[],candidates:[],extmaps:[],fingerprints:[],imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:[],ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:[]}}parse(e){if(this.digested)throw new Error(\"already digested\");try{switch(e.attField){case\"extmap\":this.parseExtmap(e);break;case\"setup\":this.parseSetup(e);break;case\"ice-ufrag\":this.parseIceUfrag(e);break;case\"ice-pwd\":this.parseIcePwd(e);break;case\"ice-options\":this.parseIceOptions(e);break;case\"candidate\":this.parseCandidate(e);break;case\"remote-candidate\":this.parseRemoteCandidate(e);break;case\"end-of-candidates\":this.parseEndOfCandidates();break;case\"fingerprint\":this.parseFingerprint(e);break;case\"rtpmap\":this.parseRtpmap(e);break;case\"ptime\":this.parsePtime(e);break;case\"maxptime\":this.parseMaxPtime(e);break;case\"sendrecv\":case\"recvonly\":case\"sendonly\":case\"inactive\":this.parseDirection(e);break;case\"ssrc\":this.parseSSRC(e);break;case\"fmtp\":this.parseFmtp(e);break;case\"rtcp-fb\":this.parseRtcpFb(e);break;case\"rtcp-mux\":this.parseRTCPMux();break;case\"rtcp-mux-only\":this.parseRTCPMuxOnly();break;case\"rtcp-rsize\":this.parseRTCPRsize();break;case\"rtcp\":this.parseRTCP(e);break;case\"mid\":this.parseMid(e);break;case\"msid\":this.parseMsid(e);break;case\"imageattr\":this.parseImageAttr(e);break;case\"rid\":this.parseRid(e);break;case\"simulcast\":this.parseSimulcast(e);break;case\"sctp-port\":this.parseSctpPort(e);break;case\"max-message-size\":this.parseMaxMessageSize(e);break;case\"ssrc-group\":this.parseSSRCGroup(e);break;default:e.ignored=!0,this.attributes.unrecognized.push(e)}}catch(t){throw console.error(\"parsing media attribute \".concat(e.attField,' error, \"a=').concat(e.attField,\":\").concat(e.attValue,'\"')),t}if(!e.ignored&&e.attValue&&!this.atEnd(e))throw new Error(\"attribute parsing error\")}parseCandidate(e){const t=this.extractOneOrMore(e,E,[1,32]);this.consumeAttributeSpace(e);const i=this.extractOneOrMore(e,a,[1,5]);this.consumeAttributeSpace(e);const n=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const r=this.extractOneOrMore(e,a,[1,10]);this.consumeAttributeSpace(e);const s=this.extract(e,this.consumeAddress);this.consumeAttributeSpace(e);const d=this.extract(e,this.consumePort);this.consumeAttributeSpace(e),this.extract(e,this.consume,\"typ\"),this.consumeAttributeSpace(e);const l={foundation:t,componentId:i,transport:n,priority:r,connectionAddress:s,port:d,type:this.extract(e,this.consumeToken),extension:{}};for(this.peek(e,\" raddr\")&&(this.extract(e,this.consume,\" raddr\"),this.consumeAttributeSpace(e),l.relAddr=this.extract(e,this.consumeAddress)),this.peek(e,\" rport\")&&(this.extract(e,this.consume,\" rport\"),this.consumeAttributeSpace(e),l.relPort=this.extract(e,this.consumePort));this.peekChar(e)===o;){this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e),l.extension[t]=this.extractOneOrMore(e,c)}this.attributes.candidates.push(l)}parseRemoteCandidate(e){const t=[];for(;;){const i=this.extractOneOrMore(e,a,[1,5]);this.consumeAttributeSpace(e);const n=this.extract(e,this.consumeAddress);this.consumeAttributeSpace(e);const r=this.extract(e,this.consumePort);t.push({componentId:i,connectionAddress:n,port:r});try{this.consumeAttributeSpace(e)}catch(e){break}}this.attributes.remoteCandidatesList.push(t)}parseEndOfCandidates(){if(this.attributes.endOfCandidates)throw new Error(\"must be only one line of end-of-candidates\");this.attributes.endOfCandidates=!0}parseRtpmap(e){const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill,\"/\");this.extract(e,this.consume,\"/\");const n={encodingName:i,clockRate:this.extractOneOrMore(e,a)};this.atEnd(e)||\"/\"!==this.peekChar(e)||(this.extract(e,this.consume,\"/\"),n.encodingParameters=parseInt(this.extract(e,this.consumeTill),10));const r=this.attributes.payloads.find((e=>e.payloadType===parseInt(t,10)));r?r.rtpMap=n:this.attributes.payloads.push({payloadType:parseInt(t,10),rtpMap:n,rtcpFeedbacks:[]})}parsePtime(e){if(this.attributes.ptime)throw new Error(\"must be only one line of ptime\");this.attributes.ptime=this.extract(e,this.consumeTill)}parseMaxPtime(e){if(this.attributes.maxPtime)throw new Error(\"must be only one line of ptime\");this.attributes.maxPtime=this.extract(e,this.consumeTill)}parseDirection(e){if(this.attributes.direction)throw new Error(\"must be only one line of direction info\");this.attributes.direction=e.attField}parseSSRC(e){const t=this.extractOneOrMore(e,a);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill,\":\");let n;\":\"===this.peekChar(e)&&(this.extract(e,this.consume,\":\"),n=this.extract(e,this.consumeTill));const r=this.attributes.ssrcs.find((e=>e.ssrcId===parseInt(t,10)));r?r.attributes[i]=n:this.attributes.ssrcs.push({ssrcId:parseInt(t,10),attributes:{[i]:n}})}parseFmtp(e){const t=this.extract(e,this.consumeTill,o);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill),n={};i.split(\";\").forEach((e=>{let[t,i]=e.split(\"=\");t=jp(t).call(t);const r=\"string\"==typeof i?jp(i).call(i):null;\"string\"==typeof t&&t.length>0&&(n[t]=r)}));const r=this.attributes.payloads.find((e=>e.payloadType===parseInt(t,10)));r?r.fmtp={parameters:n}:this.attributes.payloads.push({payloadType:parseInt(t,10),rtcpFeedbacks:[],fmtp:{parameters:n}})}parseFmtParameters(e){const t={},i=this.extract(e,this.consumeTill,\"=\");e._cur++;const n=this.extract(e,this.consumeTill,\";\");for(t[i]=n;\";\"===e.attValue[e._cur];){const i=this.extract(e,this.consumeTill,\"=\");e._cur++;const n=this.extract(e,this.consumeTill,\";\");t[i]=n}return t}parseRtcpFb(e){let t=\"\";t=\"*\"===this.peekChar(e)?this.extract(e,this.consume,\"*\"):this.extract(e,this.consumeTill,o),this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill,o);let n;if(\"trr-int\"===i)n={type:i,interval:this.extract(e,this.consumeTill)};else{const t={type:i};this.peekChar(e)===o&&(this.consumeAttributeSpace(e),t.parameter=this.extract(e,this.consumeToken),this.peekChar(e)===o&&(t.additional=this.extract(e,this.consumeTill))),n=t}if(\"*\"===t)this.attributes.rtcpFeedbackWildcards.push(n);else{const e=this.attributes.payloads.find((e=>e.payloadType===parseInt(t,10)));e?e.rtcpFeedbacks.push(n):this.attributes.payloads.push({payloadType:parseInt(t,10),rtcpFeedbacks:[n]})}}parseRTCPMux(){if(this.attributes.rtcpMux)throw new Error(\"must be single line of rtcp-mux\");this.attributes.rtcpMux=!0}parseRTCPMuxOnly(){if(this.attributes.rtcpMuxOnly)throw new Error(\"must be single line of rtcp-only\");this.attributes.rtcpMuxOnly=!0}parseRTCPRsize(){if(this.attributes.rtcpRsize)throw new Error(\"must be single line of rtcp-rsize\");this.attributes.rtcpRsize=!0}parseRTCP(e){if(this.attributes.rtcp)throw new Error(\"must be single line of rtcp\");const t={port:this.extract(e,this.consumePort)};this.peekChar(e)===o&&(this.consumeAttributeSpace(e),t.netType=this.extractOneOrMore(e,l),this.consumeAttributeSpace(e),t.addressType=this.extractOneOrMore(e,l),this.consumeAttributeSpace(e),t.address=this.extract(e,this.consumeAddress)),this.attributes.rtcp=t}parseMsid(e){const t={id:this.extractOneOrMore(e,l,[1,64])};this.peekChar(e)===o&&(this.consumeAttributeSpace(e),t.appdata=this.extractOneOrMore(e,l,[1,64])),this.attributes.msids.push(t)}parseImageAttr(e){this.attributes.imageattr.push(e.attValue)}parseRid(e){const t=this.extractOneOrMore(e,(e=>h(e)||a(e)||\"_\"===e||\"-\"===e));this.consumeAttributeSpace(e);const i={id:t,direction:this.extract(e,this.consumeToken),params:[]};if(this.peekChar(e)===o){if(this.consumeAttributeSpace(e),this.peek(e,\"pt=\")){this.extract(e,this.consume,\"pt=\");const t=[];for(;;){const i=this.extract(e,this.consumeToken);t.push(i);try{this.extract(e,this.consume,\",\")}catch(e){break}}i.payloads=t,this.peekChar(e)===o&&this.extract(e,this.consume,o)}for(;;){const t=this.extract(e,this.consumeToken);switch(t){case\"depend\":{const n={type:t,rids:this.extract(e,this.consume,\"=\").split(\",\")};i.params.push(n);break}default:{const n={type:t};\"=\"===this.peekChar(e)&&(this.extract(e,this.consume,\"=\"),n.val=this.extract(e,this.consumeTill,\";\")),i.params.push(n)}}try{this.extract(e,this.consume,\";\")}catch(e){break}}}this.attributes.rids.push(i)}parseSimulcast(e){if(this.attributes.simulcast)throw new Error(\"must be single line of simulcast\");this.attributes.simulcast=e.attValue,this.extract(e,this.consumeTill)}parseSctpPort(e){this.attributes.sctpPort=this.extractOneOrMore(e,a,[1,5])}parseMaxMessageSize(e){this.attributes.maxMessageSize=this.extractOneOrMore(e,a,[1,void 0])}digest(){return this.digested=!0,this.attributes}parseMid(e){this.attributes.mid=this.extract(e,this.consumeToken)}parseSSRCGroup(e){const t=this.extract(e,this.consumeToken),i=[];for(;;)try{this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeInteger);i.push(parseInt(t,10))}catch(e){break}this.attributes.ssrcGroups.push({semantic:t,ssrcIds:i})}}function A(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}class b{constructor(){A(this,\"eol\",r)}print(e,t){let i=\"\";return t&&(this.eol=t),i+=this.printVersion(e.version),i+=this.printOrigin(e.origin),i+=this.printSessionName(e.sessionName),i+=this.printInformation(e.information),i+=this.printUri(e.uri),i+=this.printEmail(e.emails),i+=this.printPhone(e.phones),i+=this.printConnection(e.connection),i+=this.printBandwidth(e.bandwidths),i+=this.printTimeFields(e.timeFields),i+=this.printKey(e.key),i+=this.printSessionAttributes(e.attributes),i+=this.printMediaDescription(e.mediaDescriptions),i}printVersion(e){return\"v=\".concat(e).concat(this.eol)}printOrigin(e){return\"o=\".concat(e.username,\" \").concat(e.sessId,\" \").concat(e.sessVersion,\" \").concat(e.nettype,\" \").concat(e.addrtype,\" \").concat(e.unicastAddress).concat(this.eol)}printSessionName(e){return e?\"s=\".concat(e).concat(this.eol):\"\"}printInformation(e){return e?\"i=\".concat(e).concat(this.eol):\"\"}printUri(e){return e?\"u=\".concat(e).concat(this.eol):\"\"}printEmail(e){let t=\"\";for(const i of e)t+=\"e=\".concat(i).concat(this.eol);return t}printPhone(e){let t=\"\";for(const i of e)t+=\"e=\".concat(i).concat(this.eol);return t}printConnection(e){return e?\"c=\".concat(e.nettype,\" \").concat(e.addrtype,\" \").concat(e.address).concat(this.eol):\"\"}printBandwidth(e){let t=\"\";for(const i of e)t+=\"b=\".concat(i.bwtype,\":\").concat(i.bandwidth).concat(this.eol);return t}printTimeFields(e){let t=\"\";for(const i of e){t+=\"t=\".concat(i.time.startTime,\" \").concat(i.time.startTime).concat(this.eol);for(const e of i.repeats)t+=\"r=\".concat(e.repeatInterval,\" \").concat(e.typedTimes.join(\" \")).concat(this.eol);i.zoneAdjustments&&(t+=\"z=\",t+=\"z=\".concat(i.zoneAdjustments.map((e=>\"\".concat(e.time,\" \").concat(e.back?\"-\":\"\",\" \").concat(e.typedTime))).join(\" \")).concat(this.eol),t+=this.eol)}return t}printKey(e){return e?\"k=\".concat(e).concat(this.eol):\"\"}printAttributes(e){let t=\"\";for(const i of e)t+=\"a=\".concat(i.attField).concat(i.attValue?\":\".concat(i.attValue):\"\").concat(this.eol);return t}printMediaDescription(e){let t=\"\";for(const i of e)t+=this.printMedia(i.media),t+=this.printInformation(i.information),t+=this.printConnections(i.connections),t+=this.printBandwidth(i.bandwidths),t+=this.printKey(i.key),t+=this.printMediaAttributes(i);return t}printConnections(e){let t=\"\";for(const i of e)t+=this.printConnection(i);return t}printMedia(e){return\"m=\".concat(e.mediaType,\" \").concat(e.port,\" \").concat(e.protos.join(\"/\"),\" \").concat(e.fmts.join(\" \")).concat(this.eol)}printSessionAttributes(e){return new O(this.eol).print(e)}printMediaAttributes(e){return new N(this.eol).print(e)}}class w{constructor(e){A(this,\"eol\",void 0),this.eol=e}printIceUfrag(e){return void 0===e?\"\":\"a=ice-ufrag:\".concat(e).concat(this.eol)}printIcePwd(e){return void 0===e?\"\":\"a=ice-pwd:\".concat(e).concat(this.eol)}printIceOptions(e){return void 0===e?\"\":\"a=ice-options:\".concat(e.join(o)).concat(this.eol)}printFingerprints(e){return e.length>0?e.map((e=>\"a=fingerprint:\".concat(e.hashFunction).concat(o).concat(e.fingerprint))).join(this.eol)+this.eol:\"\"}printExtmap(e){return e.map((e=>\"a=extmap:\".concat(e.entry).concat(e.direction?\"/\".concat(e.direction):\"\").concat(o).concat(e.extensionName).concat(e.extensionAttributes?\"\".concat(o).concat(e.extensionAttributes):\"\").concat(this.eol))).join(\"\")}printSetup(e){return void 0===e?\"\":\"a=setup:\".concat(e).concat(this.eol)}printUnrecognized(e){return e.map((e=>\"a=\".concat(e.attField).concat(e.attValue?\":\".concat(e.attValue):\"\").concat(this.eol))).join(\"\")}}class O extends w{print(e){let t=\"\";return t+=this.printGroups(e.groups),t+=this.printMsidSemantic(e.msidSemantic),t+=this.printIceLite(e.iceLite),t+=this.printIceUfrag(e.iceUfrag),t+=this.printIcePwd(e.icePwd),t+=this.printIceOptions(e.iceOptions),t+=this.printFingerprints(e.fingerprints),t+=this.printSetup(e.setup),t+=this.printTlsId(e.tlsId),t+=this.printIdentity(e.identities),t+=this.printExtmap(e.extmaps),t+=this.printUnrecognized(e.unrecognized),t}printGroups(e){let t=\"\";return e.length>0&&(t+=e.map((e=>\"a=group:\".concat(e.semantic).concat(e.identificationTag.map((e=>\"\".concat(o).concat(e))).join(\"\")).concat(this.eol))).join(\"\")),t}printIceLite(e){return void 0===e?\"\":\"a=ice-lite\"+this.eol}printTlsId(e){return e?\"a=tls-id:\".concat(e).concat(this.eol):\"\"}printIdentity(e){return 0===e.length?\"\":e.map((e=>\"a=identity:\".concat(e.assertionValue).concat(e.extensions.map((e=>\"\".concat(o).concat(e.name).concat(e.value?\"=\".concat(e.value):\"\")))))).join(this.eol)+this.eol}printMsidSemantic(e){if(!e)return\"\";let t=\"a=msid-semantic:\".concat(e.semantic);return e.applyForAll?t+=\"\".concat(o,\"*\"):e.identifierList.length>0&&(t+=e.identifierList.map((e=>\"\".concat(o).concat(e)))),t+this.eol}}class N extends w{print(e){const t=e.attributes;let i=\"\";return i+=this.printRTCP(t.rtcp),i+=this.printIceUfrag(t.iceUfrag),i+=this.printIcePwd(t.icePwd),i+=this.printIceOptions(t.iceOptions),i+=this.printCandidates(t.candidates),i+=this.printRemoteCandidatesList(t.remoteCandidatesList),i+=this.printEndOfCandidates(t.endOfCandidates),i+=this.printFingerprints(t.fingerprints),i+=this.printSetup(t.setup),i+=this.printMid(t.mid),i+=this.printExtmap(t.extmaps),i+=this.printRTPRelated(t),i+=this.printPtime(t.ptime),i+=this.printMaxPtime(t.maxPtime),i+=this.printDirection(t.direction),i+=this.printSSRCGroups(t.ssrcGroups),i+=this.printSSRC(t.ssrcs),i+=this.printRTCPMux(t.rtcpMux),i+=this.printRTCPMuxOnly(t.rtcpMuxOnly),i+=this.printRTCPRsize(t.rtcpRsize),i+=this.printMSId(t.msids),i+=this.printImageattr(t.imageattr),i+=this.printRid(t.rids),i+=this.printSimulcast(t.simulcast),i+=this.printSCTPPort(t.sctpPort),i+=this.printMaxMessageSize(t.maxMessageSize),i+=this.printUnrecognized(t.unrecognized),i}printCandidates(e){return e.map((e=>\"a=candidate:\".concat(e.foundation).concat(o).concat(e.componentId).concat(o).concat(e.transport).concat(o).concat(e.priority).concat(o).concat(e.connectionAddress).concat(o).concat(e.port).concat(o,\"typ\").concat(o).concat(e.type).concat(e.relAddr?\"\".concat(o,\"raddr\").concat(o).concat(e.relAddr):\"\").concat(e.relPort?\"\".concat(o,\"rport\").concat(o).concat(e.relPort):\"\").concat(Object.keys(e.extension).map((t=>\"\".concat(o).concat(t).concat(o).concat(e.extension[t]))).join(\"\")).concat(this.eol))).join(\"\")}printRemoteCandidatesList(e){return e.map((e=>\"a=remote-candidates:\".concat(e.join(o)).concat(this.eol))).join(\"\")}printEndOfCandidates(e){return void 0===e?\"\":\"a=end-of-candidates\"+this.eol}printRTPRelated(e){if(!e.payloads)return\"\";const t=e.payloads;let i=\"\";i+=e.rtcpFeedbackWildcards.map((e=>this.printRTCPFeedback(\"*\",e))).join(\"\");for(const e of t)i+=this.printRtpMap(e.payloadType,e.rtpMap),i+=this.printFmtp(e.payloadType,e.fmtp),i+=e.rtcpFeedbacks.map((t=>this.printRTCPFeedback(e.payloadType,t))).join(\"\");return i}printFmtp(e,t){if(!t)return\"\";const i=Object.keys(t.parameters);return 1===i.length&&null===t.parameters[i[0]]?\"a=fmtp:\".concat(e).concat(o).concat(i[0]).concat(this.eol):\"a=fmtp:\".concat(e).concat(o).concat(Object.keys(t.parameters).map((e=>\"\".concat(e,\"=\").concat(t.parameters[e]))).join(\";\")).concat(this.eol)}printRtpMap(e,t){return t?\"a=rtpmap:\".concat(e).concat(o).concat(t.encodingName,\"/\").concat(t.clockRate).concat(t.encodingParameters?\"/\".concat(t.encodingParameters):\"\").concat(this.eol):\"\"}printRTCPFeedback(e,t){let i=\"a=rtcp-fb:\".concat(e).concat(o),n=t;return\"trr-int\"===n.type?i+=\"ttr-int\".concat(o).concat(n.interval):(i+=\"\".concat(n.type),n.parameter&&(i+=\"\".concat(o).concat(n.parameter),n.additional&&(i+=\"\".concat(o).concat(n.additional)))),i+this.eol}printPtime(e){return void 0===e?\"\":\"a=ptime:\".concat(e).concat(this.eol)}printMaxPtime(e){return void 0===e?\"\":\"a=maxptime:\".concat(e).concat(this.eol)}printDirection(e){return void 0===e?\"\":\"a=\".concat(e).concat(this.eol)}printSSRC(e){return e.map((e=>Object.keys(e.attributes).map((t=>\"a=ssrc:\".concat(e.ssrcId.toString(10)).concat(o).concat(t).concat(e.attributes[t]?\":\".concat(e.attributes[t]):\"\").concat(this.eol))).join(\"\"))).join(\"\")}printRTCPMux(e){return void 0===e?\"\":\"a=rtcp-mux\".concat(this.eol)}printRTCPMuxOnly(e){return void 0===e?\"\":\"a=rtcp-mux-only\".concat(this.eol)}printRTCPRsize(e){return void 0===e?\"\":\"a=rtcp-rsize\".concat(this.eol)}printRTCP(e){if(void 0===e)return\"\";let t=\"a=rtcp:\".concat(e.port);return e.netType&&(t+=\"\".concat(o).concat(e.netType)),e.addressType&&(t+=\"\".concat(o).concat(e.addressType)),e.address&&(t+=\"\".concat(o).concat(e.address)),t+this.eol}printMSId(e){return e.map((e=>\"a=msid:\".concat(e.id).concat(e.appdata?\"\".concat(o).concat(e.appdata):\"\").concat(this.eol))).join(\"\")}printImageattr(e){return e.map((e=>\"a=imageattr:\".concat(e).concat(this.eol))).join(\"\")}printRid(e){return e.map((e=>{let t=\"a=rid:\".concat(e.id).concat(o).concat(e.direction);return e.payloads&&(t+=\"\".concat(o,\"pt=\").concat(e.payloads.join(\",\"))),e.params.length>0&&(t+=\"\".concat(o).concat(e.params.map((e=>\"depend\"===e.type?\"depend=\".concat(e.rids.join(\",\")):\"\".concat(e.type,\"=\").concat(e.val))).join(\";\"))),t+this.eol})).join(\"\")}printSimulcast(e){return void 0===e?\"\":\"a=simulcast:\".concat(e).concat(this.eol)}printSCTPPort(e){return void 0===e?\"\":\"a=sctp-port:\".concat(e).concat(this.eol)}printMaxMessageSize(e){return void 0===e?\"\":\"a=max-message-size:\".concat(e).concat(this.eol)}printMid(e){return void 0===e?\"\":\"a=mid:\".concat(e).concat(this.eol)}printSSRCGroups(e){return e.map((e=>\"a=ssrc-group:\".concat(e.semantic).concat(e.ssrcIds.map((e=>\"\".concat(o).concat(e.toString(10)))).join(\"\")).concat(this.eol))).join(\"\")}}function D(e){return(new C).parse(e)}function P(e,t){return(new b).print(e,t)}}},t={};function i(n){if(t[n])return t[n].exports;var r=t[n]={exports:{}};return e[n](r,r.exports,i),r.exports}return i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},i(8)})();var FU=VU.exports;function BU(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:XA(\"SVC_MODE\");if(XA(\"ENABLE_SVC\"))return function(e){return e in Iw}(e)?e:Iw.L1T3}function jU(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function GU(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?jU(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):jU(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function WU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=arguments.length>3?arguments[3]:void 0;const{filterRTX:r,filterVideoFec:o,filterAudioFec:s,filterAudioCodec:a,filterVideoCodec:c}=t,{useXR:d}=i;let l=[],u=[],h=[],p=[],_=!1,E=!1;if(FU.parse(e).mediaDescriptions.forEach((e=>{n&&n!==e.attributes.direction||(\"video\"!==e.media.mediaType||_||(u=e.attributes.payloads,p=e.attributes.extmaps,_=!0),\"audio\"!==e.media.mediaType||E||(l=e.attributes.payloads,h=e.attributes.extmaps,E=!0))})),!p||0===u.length)throw new Error(\"Cannot get video capabilities from SDP.\");if(!h||0===l.length)throw new Error(\"Cannot get audio capabilities from SDP.\");if(u.forEach((e=>{var t;null!==(t=e.rtpMap)&&void 0!==t&&t.clockRate&&(e.rtpMap.clockRate=parseInt(e.rtpMap.clockRate)),d&&e.rtcpFeedbacks.push({type:\"rrtr\"})})),l.forEach((e=>{var t;null!==(t=e.rtpMap)&&void 0!==t&&t.clockRate&&(e.rtpMap.clockRate=parseInt(e.rtpMap.clockRate)),d&&e.rtcpFeedbacks.push({type:\"rrtr\"})})),r&&(l=l.filter((e=>{var t;return\"rtx\"!==(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())})),u=u.filter((e=>{var t;return\"rtx\"!==(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())}))),o&&(u=u.filter((e=>{var t;return!/(red)|(ulpfec)|(flexfec)/i.test((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName)||\"\")}))),s&&(l=l.filter((e=>{var t;return!/(red)|(ulpfec)|(flexfec)/i.test((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName)||\"\")}))),a&&(null==a?void 0:a.length)>0&&(l=l.filter((e=>{var t;return Dn(a).call(a,(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\")}))),c&&(null==c?void 0:c.length)>0){const e=u.filter((e=>{var t;return Dn(c).call(c,(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\")}));u=e.concat(r?[]:ax(e,u))}const f=XA(\"UNSUPPORTED_VIDEO_CODEC\");return f&&f.length>0&&(u=u.filter((e=>!(e.rtpMap&&Dn(f).call(f,e.rtpMap.encodingName.toLowerCase()))))),{audioCodecs:l,videoCodecs:u,audioExtensions:h,videoExtensions:p}}function HU(e){const t=FU.parse(e);let i,n;for(const e of t.mediaDescriptions){if(!i){const t=e.attributes.iceUfrag,n=e.attributes.icePwd;if(!t||!n)throw new Error(\"Cannot get iceUfrag or icePwd from SDP.\");i={iceUfrag:t,icePwd:n}}if(!n){const t=e.attributes.fingerprints;t.length>0&&(n={fingerprints:t})}}if(!n&&t.attributes.fingerprints.length>0&&(n={fingerprints:t.attributes.fingerprints}),!n||!i)throw new Error(\"Cannot get iceParameters or dtlsParameters from SDP.\");return{iceParameters:i,dtlsParameters:n}}function KU(e,t){const i=[],n=e.attributes.ssrcGroups.filter((e=>\"FID\"===e.semantic)),r=e.attributes.ssrcGroups.find((e=>\"SIM\"===e.semantic)),o=e.attributes.ssrcs;if(r)r.ssrcIds.forEach((e=>{var r;const o=null===(r=n.find((t=>t.ssrcIds[0]===e)))||void 0===r?void 0:r.ssrcIds[1];i.push({ssrcId:e,rtx:t?o:void 0})}));else if(n.length>0){const e=n[0].ssrcIds[0],r=n[0].ssrcIds[1];i.push({ssrcId:e,rtx:t?r:void 0})}else{if(0===o.length)throw new Error(\"No ssrcs found on local media description.\");i.push({ssrcId:o[0].ssrcId})}return i}function YU(e,t,i){const{cname:n}=e;let r=[];t&&(r=qU(t)),0===r.length&&(r=e.iceParameters.candidates.map((e=>({foundation:e.foundation,componentId:\"1\",transport:e.protocol,priority:e.priority.toString(),connectionAddress:e.ip,port:e.port.toString(),type:e.type,extension:{}}))),fb.debug(\"Using candidates from gateway.\"));const o={fingerprints:e.dtlsParameters.fingerprints.map((e=>({hashFunction:e.algorithm,fingerprint:e.fingerprint})))},s={iceUfrag:e.iceParameters.iceUfrag,icePwd:e.iceParameters.icePwd};let a;switch(e.dtlsParameters.role){case\"server\":a=\"passive\";break;case\"client\":a=\"active\";break;case\"auto\":a=\"actpass\"}const c=rx(e.rtpCapabilities),d=[];return Array.isArray(i)&&i.length>0&&i.forEach((e=>{d.push({kind:dO.VIDEO,ssrcId:e.v,rtx:e.v_rtx,mslabel:\"\".concat(e.v,\"_\").concat(e.a)},{kind:dO.AUDIO,ssrcId:e.a,mslabel:\"\".concat(e.v,\"_\").concat(e.a)})})),{dtlsParameters:o,iceParameters:s,candidates:r,rtpCapabilities:c,setup:a,cname:n,preSSRCs:d}}function qU(e){let t=[];return e.ip&&\"number\"==typeof e.port&&(t=[{foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:e.ip,port:e.port.toString(),type:\"host\",extension:{}}],fb.debug(\"Using remote candidate from AP \".concat(e.ip,\":\").concat(e.port)),e.ip6&&(t.push({foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:e.ip6,port:e.port.toString(),type:\"host\",extension:{}}),fb.debug(\"Using IPV6 remote candidate from AP \".concat(e.ip6,\":\").concat(e.port)))),t}function zU(e,t,i){const n=[],r=[];return e.forEach((e=>{let{ssrcId:o,rtx:s}=e;const a=TA(8,\"track-\"),c={ssrcId:o,attributes:GU({label:a,mslabel:i=i||TA(10,\"\"),msid:\"\".concat(i,\" \").concat(a)},t&&{cname:t})};if(n.push(c),void 0!==s){const e={ssrcId:s,attributes:GU({label:a,mslabel:i,msid:\"\".concat(i,\" \").concat(a)},t&&{cname:t})};n.push(e),r.push({semantic:\"FID\",ssrcIds:[o,s]})}})),e.length>1&&r.push({semantic:\"SIM\",ssrcIds:e.map((e=>{let{ssrcId:t}=e;return t}))}),{ssrcs:n,ssrcGroups:r}}function JU(e,t){t instanceof TM&&e.attributes.payloads.forEach((e=>{var i;const n=null===(i=e.rtpMap)||void 0===i?void 0:i.encodingName.toLowerCase();if(!n||-1===[\"opus\",\"pcmu\",\"pcma\",\"g722\"].indexOf(n))return;e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters.minptime=\"10\",e.fmtp.parameters.useinbandfec=\"1\";const r=t._encoderConfig;r&&\"pcmu\"!==n&&\"pcma\"!==n&&\"g722\"!==n&&(r.bitrate&&!Zv()&&(e.fmtp.parameters.maxaveragebitrate=\"\".concat(Math.floor(1e3*r.bitrate))),r.sampleRate&&(e.fmtp.parameters.maxplaybackrate=\"\".concat(r.sampleRate),e.fmtp.parameters[\"sprop-maxcapturerate\"]=\"\".concat(r.sampleRate)),r.stereo&&(e.fmtp.parameters.stereo=\"1\",e.fmtp.parameters[\"sprop-stereo\"]=\"1\"))}))}function XU(e){const t=e.attributes.unrecognized.findIndex((e=>\"x-google-flag\"===e.attField&&\"conference\"===e.attValue));-1!==t&&e.attributes.unrecognized.splice(t,1)}function QU(e,t){var i;if(!(t instanceof aU&&t._encoderConfig&&-1===t._hints.indexOf(mL.SCREEN_TRACK)))return;const n=t._encoderConfig;ZP().supportMinBitrate&&n.bitrateMin&&e.attributes.payloads.forEach((e=>{var t,i;Dn(t=[\"h264\",\"h265\",\"vp8\",\"vp9\",\"av1\"]).call(t,(null===(i=e.rtpMap)||void 0===i?void 0:i.encodingName.toLowerCase())||\"\")&&(e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters[\"x-google-min-bitrate\"]=\"\".concat(n.bitrateMin))})),ZP().supportMinBitrate&&!Dn(i=t._hints).call(i,mL.LOW_STREAM)&&n.bitrateMax&&e.attributes.payloads.forEach((e=>{var t,i;Dn(t=[\"h264\",\"h265\",\"vp8\",\"vp9\",\"av1\"]).call(t,(null===(i=e.rtpMap)||void 0===i?void 0:i.encodingName.toLowerCase())||\"\")&&(e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters[\"x-google-start-bitrate\"]=\"\".concat(XA(\"X_GOOGLE_START_BITRATE\")||Math.floor(n.bitrateMax)))}))}function ZU(e){if(\"video\"!==e.media.mediaType)return;const t=Hv();if(t.name!==Bv.SAFARI&&t.os!==Fv.IOS)return;const i=e.attributes.extmaps.findIndex((e=>/video-orientation/g.test(e.extensionName)));-1!==i&&e.attributes.extmaps.splice(i,1)}function $U(e,t,i){if(!t)return;let n,r;if(\"video\"===e.media.mediaType?(n=i.videoExtensions,r=i.videoCodecs):(n=i.audioExtensions,r=i.audioCodecs),!0===t.twcc){const t=n.find((e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName));if(t){e.attributes.extmaps.find((e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName))||e.attributes.extmaps.push({entry:t.entry,extensionName:\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"});const i=function(e,t){return t.filter((t=>!!e.find((e=>e.payloadType===t.payloadType&&!!e.rtcpFeedbacks.find((e=>\"transport-cc\"===e.type))))))}(r,e.attributes.payloads);i.forEach((e=>{e.rtcpFeedbacks.find((e=>\"transport-cc\"===e.type))||e.rtcpFeedbacks.push({type:\"transport-cc\"})}))}}else if(!1===t.twcc){const t=e.attributes.extmaps.findIndex((e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName));-1!==t&&e.attributes.extmaps.splice(t,1),e.attributes.payloads.forEach((e=>{const t=e.rtcpFeedbacks.findIndex((e=>\"transport-cc\"===e.type));-1!==t&&e.rtcpFeedbacks.splice(t,1)}))}if(!0===t.remb){const t=n.find((e=>\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"===e.extensionName));if(t){e.attributes.extmaps.find((e=>\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"===e.extensionName))||e.attributes.extmaps.push({entry:t.entry,extensionName:\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"});const i=function(e,t){return t.filter((t=>!!e.find((e=>e.payloadType===t.payloadType&&!!e.rtcpFeedbacks.find((e=>\"goog-remb\"===e.type))))))}(r,e.attributes.payloads);i.forEach((e=>{e.rtcpFeedbacks.find((e=>\"goog-remb\"===e.type))||e.rtcpFeedbacks.push({type:\"goog-remb\"})}))}}else if(!1===t.remb){const t=e.attributes.extmaps.findIndex((e=>\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"===e.extensionName));-1!==t&&e.attributes.extmaps.splice(t,1),e.attributes.payloads.forEach((e=>{const t=e.rtcpFeedbacks.findIndex((e=>\"goog-remb\"===e.type));-1!==t&&e.rtcpFeedbacks.splice(t,1)}))}}function ex(e,t,i){if(Zv())return;if(\"video\"!==e.media.mediaType)return;if(!(t instanceof aU))return;if(\"vp9\"!==i&&\"vp8\"!==i)return;if(\"vp8\"===i&&!XA(\"SIMULCAST\"))return;if(\"vp9\"===i&&XA(\"ENABLE_SVC\"))return;if(void 0===t._scalabilityMode||t._scalabilityMode.numSpatialLayers<=1)return;const n=\"vp8\"===i?2:t._scalabilityMode.numSpatialLayers,r=e.attributes.ssrcs[0],o=e.attributes.ssrcGroups.find((e=>\"FID\"===e.semantic&&e.ssrcIds[0]===r.ssrcId)),s={semantic:\"SIM\",ssrcIds:[r.ssrcId]};for(let t=1;t<n;t++)e.attributes.ssrcs.push({ssrcId:r.ssrcId+t,attributes:sA(r.attributes)}),s.ssrcIds.push(r.ssrcId+t),o&&(e.attributes.ssrcs.push({ssrcId:o.ssrcIds[1]+t,attributes:sA(r.attributes)}),e.attributes.ssrcGroups.push({semantic:\"FID\",ssrcIds:[r.ssrcId+t,o.ssrcIds[1]+t]}));e.attributes.ssrcGroups.unshift(s)}async function tx(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=new RTCPeerConnection;i.addTransceiver(\"video\",{direction:\"sendonly\"}),i.addTransceiver(\"audio\",{direction:\"sendonly\"}),i.addTransceiver(\"video\",{direction:\"recvonly\"}),i.addTransceiver(\"audio\",{direction:\"recvonly\"});const n=(await i.createOffer()).sdp,{send:r,recv:o,sendrecv:s}=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2?arguments[2]:void 0;const n=WU(i,e,t,\"sendonly\"),r=WU(i,e,t,\"recvonly\"),o={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},s={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},a={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]};if(nx(n,r,\"videoExtensions\",o,s,a),nx(n,r,\"videoCodecs\",o,s,a),nx(n,r,\"audioExtensions\",o,s,a),nx(n,r,\"audioCodecs\",o,s,a),XA(\"RAISE_H264_BASELINE_PRIORITY\")){const e=a.videoCodecs.findIndex((e=>{var t,i;return\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&\"42001f\"===(null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"])}));if(-1!==e){const t=a.videoCodecs.findIndex((e=>{var t;return\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())}));if(t<e){fb.debug(\"raising H264 baseline profile priority\");const i=a.videoCodecs[e];a.videoCodecs.splice(e,1),a.videoCodecs.splice(t,0,i)}-1!==t&&(s.videoCodecs=s.videoCodecs.filter((e=>{var t,i;return!(\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&\"42001f\"!==(null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"]))}))),-1!==t&&XA(\"FILTER_SEND_H264_BASELINE\")&&(o.videoCodecs=o.videoCodecs.filter((e=>{var t,i;return!(\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&\"42001f\"!==(null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"]))})))}}return{send:o,recv:s,sendrecv:a}}(e,t,n);try{i.close()}catch(e){}return{send:r,recv:o,sendrecv:s}}function ix(){const e={audioCodecs:[],videoCodecs:[],audioExtensions:[],videoExtensions:[]},t=WU(arguments.length>2?arguments[2]:void 0,arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},\"recvonly\"),i={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},n={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},r={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]};if(nx(e,t,\"videoExtensions\",i,n,r),nx(e,t,\"videoCodecs\",i,n,r),nx(e,t,\"audioExtensions\",i,n,r),nx(e,t,\"audioCodecs\",i,n,r),XA(\"RAISE_H264_BASELINE_PRIORITY\")){const e=r.videoCodecs.findIndex((e=>e.rtpMap&&\"h264\"===e.rtpMap.encodingName.toLocaleLowerCase()&&e.fmtp&&\"42001f\"===e.fmtp.parameters[\"profile-level-id\"]));if(-1!==e){const t=r.videoCodecs.findIndex((e=>e.rtpMap&&\"h264\"===e.rtpMap.encodingName.toLocaleLowerCase()));if(t<e){fb.debug(\"raising H264 baseline profile priority\");const i=r.videoCodecs[e];r.videoCodecs.splice(e,1),r.videoCodecs.splice(t,0,i)}-1!==t&&(n.videoCodecs=n.videoCodecs.filter((e=>!(e.rtpMap&&\"h264\"===e.rtpMap.encodingName.toLocaleLowerCase()&&e.fmtp&&\"42001f\"!==e.fmtp.parameters[\"profile-level-id\"]))))}}return{send:i,recv:n,sendrecv:r}}function nx(e,t,i,n,r,o){if(\"videoExtensions\"===i||\"audioExtensions\"===i){const s=[];return e[i].forEach((e=>{t[i].some(((t,i)=>{if(e.entry===t.entry&&e.extensionName===t.extensionName)return s.push(i),!0}))?o[i].push(e):n[i].push(e)})),void t[i].forEach(((e,t)=>{-1===s.indexOf(t)&&r[i].push(e)}))}if(\"videoCodecs\"===i||\"audioCodecs\"===i){const s=[];return e[i].forEach((e=>{t[i].some(((t,i)=>{if(e.payloadType===t.payloadType&&JSON.stringify(e)===JSON.stringify(t))return s.push(i),!0}))?o[i].push(e):n[i].push(e)})),void t[i].forEach(((e,t)=>{-1===s.indexOf(t)&&r[i].push(e)}))}}function rx(e){const{send:t,recv:i,sendrecv:n}=e;if(!n){if(!t||!i)throw new Error(\"cannot merge rtp capabilities because one of send or recv is empty!\");return{send:t,recv:i}}let r,o;return t?(r={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},r.audioCodecs=[...t.audioCodecs,...n.audioCodecs],r.videoCodecs=[...t.videoCodecs,...n.videoCodecs],r.audioExtensions=[...t.audioExtensions,...n.audioExtensions],r.videoExtensions=[...t.videoExtensions,...n.videoExtensions]):r=n,i?(o={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},o.audioCodecs=[...i.audioCodecs,...n.audioCodecs],o.videoCodecs=[...i.videoCodecs,...n.videoCodecs],o.audioExtensions=[...i.audioExtensions,...n.audioExtensions],o.videoExtensions=[...i.videoExtensions,...n.videoExtensions]):o=n,{send:r,recv:o}}function ox(e){if(\"audio\"!==e.media.mediaType)return;e.attributes.payloads.filter((e=>{var t;return\"opus\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())})).forEach((e=>{e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters.stereo=\"1\",e.fmtp.parameters[\"sprop-stereo\"]=\"1\"}))}function sx(e,t,i,n){let r=[];if(e===dO.VIDEO){if(XA(\"H264_PROFILE_LEVEL_ID\")&&\"h264\"===n&&(r=t.videoCodecs.filter((e=>{var t;return Dn(t=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(t,n)&&e&&e.fmtp&&e.fmtp.parameters[\"profile-level-id\"]===XA(\"H264_PROFILE_LEVEL_ID\")}))),!Array.isArray(r)||0===r.length){let e=[];const o=[],s=[],a=[];if(i.videoCodecs.forEach((t=>{const i=t.rtpMap&&t.rtpMap.encodingName.toLowerCase()||\"\";Dn(i).call(i,n)?e.push(t):Dn(i).call(i,\"vp9\")?o.push(t):Dn(i).call(i,\"vp8\")?s.push(t):Dn(i).call(i,\"h264\")&&a.push(t)})),0===e.length){let t=\"\";0!==o.length?(e=o,t=\"vp9\"):0!==s.length?(e=s,t=\"vp8\"):0!==a.length&&(e=a,t=\"h264\"),fb.warning(\"codec \".concat(n,\" not included in rtpCapabilities, fallback to default payloads: \").concat(t))}0!==e.length&&(r=t.videoCodecs.filter((t=>e.some((e=>e.payloadType===t.payloadType)))))}if(0===r.length&&(fb.warning(\"codec \".concat(n,\" not included in rtpCapabilities, fallback to default payloads: \").concat(t.videoCodecs[0].rtpMap&&t.videoCodecs[0].rtpMap.encodingName)),r=t.videoCodecs),XA(\"USE_PUB_RTX\")||XA(\"USE_SUB_RTX\")){const e=ax(r,t.videoCodecs);r=[...r,...e]}}else r=t.audioCodecs.filter((e=>{var t;return Dn(t=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(t,n)})),0===r.length&&(fb.warning(\"codec \".concat(n,\" not included in rtpCapabilities, fallback to opus\")),r=t.audioCodecs.filter((e=>{var t;return Dn(t=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(t,\"opus\")})));return r}function ax(e,t){const i=e.map((e=>e.payloadType.toString()));return t.filter((e=>e.rtpMap&&\"rtx\"===e.rtpMap.encodingName&&e.fmtp&&e.fmtp.parameters.apt&&Dn(i).call(i,e.fmtp&&e.fmtp.parameters.apt)))}async function cx(e,t,i){const n=t.toString(),r=lx(n,\"offer\",\"remote\",\"exchangeSDP\");await e.setRemoteDescription({type:\"offer\",sdp:n});const o=await e.createAnswer();if(!o.sdp)throw new Error(\"cannot get answer sdp\");let s=o.sdp;s=dx(s,i||{}),null==r||r(s||\"\"),await e.setLocalDescription({type:\"answer\",sdp:s})}function dx(e,t,i){const n=FU.parse(e),{useXR:r}=t;return n.mediaDescriptions.forEach((e=>{var t;e.attributes.mid&&(Array.isArray(i)&&!Dn(i).call(i,e.attributes.mid)||(\"audio\"===e.media.mediaType&&ox(e),r&&Dn(t=[\"audio\",\"video\"]).call(t,e.media.mediaType)&&e.attributes.payloads.forEach((e=>{-1===e.rtcpFeedbacks.findIndex((e=>\"rrtr\"===e.type))&&e.rtcpFeedbacks.push({type:\"rrtr\"})}))))})),FU.print(n)}function lx(e,t,i,n){if(XA(\"SDP_LOGGING\"))return fb.upload(\"exchanging \".concat(i,\" \").concat(t,\" SDP during P2PConnection.\").concat(n,\"\\n\"),e),\"offer\"===t?e=>{lx(e,\"answer\",\"local\"===i?\"remote\":\"local\",n)}:void 0}function ux(e,t){return typeof XA(e)===t?XA(e):void 0}function hx(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function px(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?hx(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):hx(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const _x=new Map;class Ex extends xy{get state(){return this._state}set state(e){if(e===this._state)return;const t=this._state;this._state=e,\"DISCONNECTED\"===e&&this._disconnectedReason?this.emit($w.CONNECTION_STATE_CHANGE,e,t,this._disconnectedReason):this.emit($w.CONNECTION_STATE_CHANGE,e,t)}get joinGatewayStartTime(){return this._joinGatewayStartTime}set joinGatewayStartTime(e){fb.debug(\"[\".concat(this.store.clientId,\"] set joinGatewayStartTime at \").concat(e)),this._joinGatewayStartTime=e}constructor(e,t){super(),Fg(this,\"store\",void 0),Fg(this,\"joinInfo\",void 0),Fg(this,\"key\",void 0),Fg(this,\"ntpOffset\",0),Fg(this,\"signal\",void 0),Fg(this,\"role\",void 0),Fg(this,\"inChannelInfo\",{joinAt:null,duration:0}),Fg(this,\"spec\",void 0),Fg(this,\"_state\",\"DISCONNECTED\"),Fg(this,\"_statsCollector\",void 0),Fg(this,\"_disconnectedReason\",void 0),Fg(this,\"isSignalRecover\",!1),Fg(this,\"hasChangeBGPAddress\",!1),Fg(this,\"trafficStatsInterval\",void 0),Fg(this,\"networkQualityInterval\",void 0),Fg(this,\"_joinGatewayStartTime\",0),Fg(this,\"_signalTimeout\",!1),Fg(this,\"_clientRoleOptions\",void 0),Fg(this,\"_isProactiveJoin\",!1),this.store=e,this.spec=t,this.signal=this.store.useP2P?new xU(px(px({},t),{},{retryConfig:t.websocketRetryConfig}),e):new KO(px(px({},t),{},{retryConfig:t.websocketRetryConfig}),e),this._statsCollector=t.statsCollector,this.role=t.role||\"audience\",this._clientRoleOptions=t.clientRoleOptions,this.handleSignalEvents()}async join(e,t,i){this.store.joinGatewayStart(),\"disabled\"!==e.cloudProxyServer&&(this.hasChangeBGPAddress=!0);const n=Date.now();let r=_x.get(e.cname);if(r||(r=new Map,_x.set(e.cname,r)),this._isProactiveJoin=!0,r.has(e.uid)){const t=new yb(Ry.UID_CONFLICT);throw vb.joinGateway(e.sid,{lts:n,succ:!1,ec:t.code,addr:null,uid:e.uid,cid:e.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!e.proxyServer,signalChannel:\"0\",preload:e.preload}),this._isProactiveJoin=!1,t}r.set(e.uid,!0),this.joinInfo=e,this.key=t;let o=0;this.joinGatewayStartTime=n;const s=e.proxyServer;try{fb.debug(\"[\".concat(this.store.clientId,\"] use websocket join uid \").concat(o));const t=e.gatewayAddrs.map((t=>{let{address:i}=t;const[n,r]=i.split(\":\"),o={host:n,port:r};return e.proxyServer&&(o.proxy=e.proxyServer),o}));o=(await this.signal.init(t,i)).uid,fb.debug(\"[\".concat(this.store.clientId,\"] websocket join uid \").concat(o,\" cost \").concat(Date.now()-this.joinGatewayStartTime))}catch(t){var a;throw fb.error(\"[\".concat(this.store.clientId,\"] User join failed\"),t.toString()),vb.joinGateway(e.sid,{lts:n,succ:!1,ec:(null===(a=t.data)||void 0===a?void 0:a.desc)||t.code,errorMsg:t.message,addr:this.signal.url,uid:e.uid,cid:e.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!s,signalChannel:\"0\",preload:e.preload}),this._isProactiveJoin=!1,r.delete(e.uid),this.signal.close(),t}return this.state=\"CONNECTED\",this.inChannelInfo.joinAt=Date.now(),fb.debug(\"[\".concat(this.store.clientId,\"] Connected to gateway server\")),this.trafficStatsInterval=window.setInterval((()=>{this.updateTrafficStats().catch((e=>{fb.warning(\"[\".concat(this.store.clientId,\"] get traffic stats error\"),e.toString())}))}),3e3),this.networkQualityInterval=window.setInterval((()=>{navigator&&void 0!==navigator.onLine&&!navigator.onLine?this.emit($w.NETWORK_QUALITY,{downlinkNetworkQuality:6,uplinkNetworkQuality:6}):this._signalTimeout?this.emit($w.NETWORK_QUALITY,{downlinkNetworkQuality:5,uplinkNetworkQuality:5}):\"CONNECTED\"===this.state&&this._statsCollector.trafficStats?this.emit($w.NETWORK_QUALITY,{uplinkNetworkQuality:$O(this._statsCollector.trafficStats.B_unq),downlinkNetworkQuality:$O(this._statsCollector.trafficStats.B_dnq)}):this.emit($w.NETWORK_QUALITY,{uplinkNetworkQuality:0,downlinkNetworkQuality:0})}),2e3),this.store.joinGatewayEnd(),o}async leave(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1?arguments[1]:void 0;if(\"DISCONNECTED\"!==this.state){t!==Hy.FALLBACK&&(this.state=\"DISCONNECTING\");try{e||this.signal.connectionState!==Nw.CONNECTED||await function(e,t){return t===1/0?e:Gh.race([e,fA(t)])}(this.signal.request(Pw.LEAVE,void 0,!0),3e3)}catch(e){fb.warning(\"[\".concat(this.store.clientId,\"] leave request failed, ignore\"),e)}this.signal.close(t),t!==Hy.FALLBACK&&(this.state=\"DISCONNECTED\"),this.reset()}}async publish(e,t,i){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new yb(Ry.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));const n={state:\"offer\",p2p_id:this.store.p2pId,ortc:t,mode:this.spec.mode,extend:XA(\"PUB_EXTEND\"),twcc:!!XA(\"PUBLISH_TWCC\"),rtx:!!XA(\"USE_PUB_RTX\")};try{return(await this.signal.request(Pw.PUBLISH,n,!0))._message}catch(n){if(i&&n.data&&n.data.code===Ow.ERR_PUBLISH_REQUEST_INVALID)return fb.warning(\"[\".concat(this.store.clientId,\"] receive publish error code, retry\"),n.toString()),await this.tryUnpubBeforeRepub(e,t),this.publish(e,t,!1);throw n}}async publishDataChannel(e,t,i){var n;if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new yb(Ry.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));const r={stream_id:t.streamId,ordered:t.ordered?1:0,max_retrans_times:null!==(n=t.maxRetransmits)&&void 0!==n?n:10,channel_id:t.channelId,metadata:t.metadata};try{await this.signal.request(Pw.PUBLISH_DATASTREAM,r,!0)}catch(n){if(i&&n.data&&n.data.code===Ow.ERR_PUBLISH_REQUEST_INVALID)return fb.warning(\"[\".concat(this.store.clientId,\"] receive publish datachannels error code, retry\"),n.toString()),await this.tryUnpubDataChannelBeforeRepub(e,t),this.publishDataChannel(e,t,!1);throw n}}async unpublish(e,t){try{if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new yb(Ry.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));await this.signal.request(Pw.UNPUBLISH,{stream_id:t,ortc:e},!0)}catch(e){fb.warning(\"[\".concat(this.store.clientId,\"] unpublish warning: \"),e)}}async unpublishDataChannel(e){try{if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new yb(Ry.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));await Gh.all(e.map((e=>this.signal.request(Pw.UNPUBLISH_DATASTREAM,{channel_id:e},!0))))}catch(e){fb.warning(\"unpublish datachannels warning: \",e)}}async presubscribe(e,t,i){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new yb(Ry.INVALID_OPERATION,\"can not presubscribe when connection state is \".concat(this.state));const n={stream_id:e,stream_type:t,mode:this.spec.mode,codec:this.spec.codec,p2p_id:this.store.p2pId,twcc:!!XA(\"SUBSCRIBE_TWCC\"),rtx:!!XA(\"USE_SUB_RTX\")||void 0,extend:XA(\"SUB_EXTEND\"),svc:Array.isArray(XA(\"SVC\"))&&0!==XA(\"SVC\").length?XA(\"SVC\"):void 0};try{return await this.signal.request(Pw.PRE_SUBSCRIBE,n,!0)}catch(n){if(i&&n.data&&n.data.code===Ow.ERR_SUBSCRIBE_REQUEST_INVALID)return fb.warning(\"[\".concat(this.store.clientId,\"] pre-subscribe error, retry\"),n.toString()),this.presubscribe(e,t,!1);throw n}}async subscribe(e,t,i){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new yb(Ry.INVALID_OPERATION,\"can not subscribe when connection state is \".concat(this.state));const n={stream_id:e,stream_type:t.stream_type,mode:this.spec.mode,codec:this.spec.codec,p2p_id:this.store.p2pId,twcc:!!XA(\"SUBSCRIBE_TWCC\"),rtx:!!XA(\"USE_SUB_RTX\"),extend:XA(\"SUB_EXTEND\"),ssrcId:t.ssrcId,svc:Array.isArray(XA(\"SVC\"))&&0!==XA(\"SVC\").length?XA(\"SVC\"):void 0};try{return(await this.signal.request(Pw.SUBSCRIBE,n,!0))._message}catch(n){if(i&&n.data&&n.data.code===Ow.ERR_SUBSCRIBE_REQUEST_INVALID)return fb.warning(\"[\".concat(this.store.clientId,\"] receiver subscribe error code, retry\"),n.toString()),await this.tryUnsubBeforeResub(e,t),await this.subscribe(e,t,!1);throw n}}async subscribeDataChannel(e,t,i){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new yb(Ry.INVALID_OPERATION,\"can not subscribe datachannel when connection state is \".concat(this.state));const n={uid:e,stream_id:t.id,channel_id:t.datachannelId};try{return void await this.signal.request(Pw.SUBSCRIBE_DATASTREAM,n,!0)}catch(n){if(i&&n.data&&n.data.code===Ow.ERR_SUBSCRIBE_REQUEST_INVALID)return fb.warning(\"[\".concat(this.store.clientId,\"] receiver subscribe datachannel error code, retry\"),n.toString()),await this.tryUnsubDataChannelBeforeResub(e,t),await this.subscribeDataChannel(e,t,!1);throw n}}async subscribeAll(e,t){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new yb(Ry.INVALID_OPERATION,\"can not massSubscribe when connection state is \".concat(this.state));const i={p2p_id:this.store.p2pId,users:e,dtx:!1,rtx:!!XA(\"USE_SUB_RTX\"),twcc:!!XA(\"SUBSCRIBE_TWCC\"),svc:Array.isArray(XA(\"SVC\"))&&0!==XA(\"SVC\").length?XA(\"SVC\"):void 0};try{return await this.signal.request(Pw.SUBSCRIBE_STREAMS,i,!0)}catch(i){if(t&&i.data&&i.data.code===Ow.ERR_SUBSCRIBE_REQUEST_INVALID)return fb.warning(\"[\".concat(this.store.clientId,\"] receiver massSubscribe error code, retry\"),i.toString()),await this.tryMassUnsubBeforeResub(e),await this.subscribeAll(e,!1);throw i}}async setVideoProfile(e){const t=function(e){if(!(e.bitrateMax&&e.bitrateMin&&e.frameRate&&e.height&&e.width))return;let t=e.frameRate,i=e.width,n=e.height,r=!0;return\"number\"!=typeof t&&(t=t.exact||t.ideal||t.max||t.min||0,t||(r=!1)),\"number\"!=typeof i&&(i=i.exact||i.ideal||i.max||i.min||0,i||(r=!1)),\"number\"!=typeof n&&(n=n.exact||n.ideal||n.max||n.min||0,t||(r=!1)),r?{stream_type:0,width:i,height:n,fps:t,start_bps:1e3*e.bitrateMax,min_bps:1e3*e.bitrateMin,target_bps:1e3*e.bitrateMax}:void 0}(e);if(t)return this.signal.request(Pw.SET_VIDEO_PROFILE,t);fb.debug(\"[\".concat(this.store.clientId,\"] encoder config is not complete, do not report to gateway\"))}async unsubscribe(e,t){try{await this.signal.request(Pw.UNSUBSCRIBE,{p2p_id:this.store.p2pId,ortc:e,stream_id:t},!0)}catch(e){fb.warning(\"[\".concat(this.store.clientId,\"] unsubscribe warning: \"),e)}}async unsubscribeDataChannel(e,t){try{if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new yb(Ry.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));await Gh.all(e.map((e=>this.signal.request(Pw.UNSUBSCRIBE_DATASTREAM,{stream_id:e,uid:t},!0))))}catch(e){fb.warning(\"unsubscribeDataChannel warning: \",e)}}async massUnsubscribe(e){try{await this.signal.request(Pw.UNSUBSCRIBE_STREAMS,e,!0)}catch(e){fb.warning(\"[\".concat(this.store.clientId,\"] massUnsubscribeAll warning: \"),e)}}async reconnectPC(e){const{iceParameters:t,dtlsParameters:i,rtpCapabilities:n}=e;return{gatewayEstablishParams:await this.signal.request(Pw.CONNECT_PC,{p2p_id:this.store.p2pId,stream_id:this.store.uid,ortc:{iceParameters:t,dtlsParameters:i,rtpCapabilities:n}},!0),gatewayAddress:this.getCurrentGatewayAddress()}}getGatewayInfo(){return this.signal.request(Pw.GATEWAY_INFO)}async renewToken(e){await this.signal.request(Pw.RENEW_TOKEN,e),this.key=e.token}async setClientRole(e,t){if(t&&(this._clientRoleOptions=Object.assign({},t)),\"CONNECTED\"!==this.state)return void(this.role=e);let i,n=0;\"audience\"===e?this._clientRoleOptions&&this._clientRoleOptions.delay?(i=this._clientRoleOptions.delay,n=1):n=this._clientRoleOptions&&this._clientRoleOptions.level?this._clientRoleOptions.level:2:n=0,await this.signal.request(Pw.SET_CLIENT_ROLE,{role:e,level:n,delay:i,client_ts:Date.now()}),this.role=e}async setRemoteVideoStreamType(e,t){await this.signal.request(Pw.SWITCH_VIDEO_STREAM,{stream_id:e,stream_type:t})}async setDefaultRemoteVideoStreamType(e){await this.signal.request(Pw.DEFAULT_VIDEO_STREAM,{stream_type:e})}async setStreamFallbackOption(e,t){await this.signal.request(Pw.SET_FALLBACK_OPTION,{stream_id:e,fallback_type:t})}async pickSVCLayer(e,t){await this.signal.request(Pw.PICK_SVC_LAYER,{stream_id:e,spatial_layer:t.spatialLayer,temporal_layer:t.temporalLayer})}async setRTM2Flag(e){await this.signal.request(Pw.SET_RTM2_FLAG,{rtm2_flag:e})}async sendExtensionMessage(e,t,i){if(this.signal instanceof xU)return this.signal.sendExtensionMessage(e,t,i)}getInChannelInfo(){return this.inChannelInfo.joinAt&&(this.inChannelInfo.duration=Date.now()-this.inChannelInfo.joinAt),px({},this.inChannelInfo)}async getGatewayVersion(){return(await this.signal.request(Pw.GATEWAY_INFO)).version}reset(){if(this.inChannelInfo.joinAt&&(this.inChannelInfo.duration=Date.now()-this.inChannelInfo.joinAt,this.inChannelInfo.joinAt=null),this.trafficStatsInterval&&(window.clearInterval(this.trafficStatsInterval),this.trafficStatsInterval=void 0),this.joinInfo){const e=_x.get(this.joinInfo.cname);e&&e.delete(this.joinInfo.uid)}this.joinInfo=void 0,this.key=void 0,this.networkQualityInterval&&(window.clearInterval(this.networkQualityInterval),this.networkQualityInterval=void 0)}updateTurnConfigFromSignal(){if(!this.joinInfo)return;const e=function(e){let t;return t=e.startsWith(\"dc\")?e.match(/(dc\\:\\/\\/)?([^:]+):(\\d+)/):e.match(/(wss\\:\\/\\/)?([^:]+):(\\d+)/),t?{username:KA.username,password:KA.password,turnServerURL:t[2],tcpport:parseInt(t[3])+30,udpport:parseInt(t[3])+30,forceturn:!1}:null}((\"disabled\"===this.joinInfo.cloudProxyServer?this.signal.url:this.joinInfo.gatewayAddrs[this.signal.currentURLIndex].address)||\"\");this.joinInfo.turnServer.serversFromGateway=[],e&&\"off\"!==this.joinInfo.turnServer.mode&&\"disabled\"===this.joinInfo.cloudProxyServer&&this.joinInfo.turnServer.serversFromGateway.push(px(px({},KA),{},{turnServerURL:e.turnServerURL,tcpport:e.tcpport,udpport:e.udpport,username:this.joinInfo.uid.toString(),password:this.joinInfo.token}))}async updateTrafficStats(){if(\"CONNECTED\"!==this.state)return;const e=await this.signal.request(Pw.TRAFFIC_STATS,void 0,!0);e.timestamp=Date.now(),null!=e.ntp_offset&&(this.ntpOffset=e.ntp_offset),e.peer_delay.forEach((e=>{const t=this._statsCollector.trafficStats&&this._statsCollector.trafficStats.peer_delay.find((t=>t.peer_uid===e.peer_uid));t&&t.B_st!==e.B_st&&oA((()=>{this.emit($w.STREAM_TYPE_CHANGE,e.peer_uid,e.B_st)}))})),this._statsCollector.updateTrafficStats(e)}getJoinMessage(e){if(!this.joinInfo||!this.key)throw new yb(Ry.UNEXPECTED_ERROR,\"can not generate join message, no join info\");const t=Object.assign({},this.joinInfo.apResponse);let i=XA(\"REPORT_APP_SCENARIO\");if(\"string\"!=typeof i)try{i=JSON.stringify(i)}catch(e){i=void 0}i&&i.length>128&&(i=void 0);const n=!(Zv()||ty(87)||eL())&&(\"boolean\"==typeof XA(\"ENABLE_PRE_SUB\")&&XA(\"ENABLE_PRE_SUB\")),r=!eL()&&ux(\"ENABLE_PREALLOC_PC\",\"boolean\"),o=px({license:this.joinInfo.license,p2p_id:this.store.p2pId,session_id:this.joinInfo.sid,app_id:this.joinInfo.appId,channel_key:this.key,channel_name:this.joinInfo.cname,sdk_version:GA,browser:navigator.userAgent,process_id:XA(\"PROCESS_ID\"),mode:this.store.useP2P?\"p2p\":this.spec.mode,codec:this.spec.codec,role:this.role,has_changed_gateway:this.hasChangeBGPAddress,ap_response:t,extend:XA(\"JOIN_EXTEND\"),details:{6:this.joinInfo.stringUid,cservice_map:\"proxy3\"===this.joinInfo.cloudProxyServer?\"1\":\"proxy5\"===this.joinInfo.cloudProxyServer?\"2\":void 0},features:{rejoin:!0},optionalInfo:this.joinInfo.optionalInfo,appScenario:i,attributes:{userAttributes:{enablePublishedUserList:XA(\"ENABLE_PUBLISHED_USER_LIST\"),maxSubscription:XA(\"MAX_SUBSCRIPTION\"),subscribeAudioFilterTopN:\"number\"==typeof XA(\"SUBSCRIBE_AUDIO_FILTER_TOPN\")?XA(\"SUBSCRIBE_AUDIO_FILTER_TOPN\"):void 0,enablePublishAudioFilter:\"boolean\"==typeof XA(\"ENABLE_PUBLISH_AUDIO_FILTER\")?XA(\"ENABLE_PUBLISH_AUDIO_FILTER\"):void 0,enableUserLicenseCheck:\"boolean\"==typeof XA(\"ENABLE_USER_LICENSE_CHECK\")?XA(\"ENABLE_USER_LICENSE_CHECK\"):void 0,enableRTX:!0===XA(\"USE_PUB_RTX\")||!0===XA(\"USE_SUB_RTX\")||void 0,disableFEC:XA(\"DISABLE_FEC\"),enableNTPReport:!!XA(\"ENABLE_NTP_REPORT\")||void 0,enableInstantVideo:!!XA(\"ENABLE_INSTANT_VIDEO\")||void 0,enableFulllinkAvSync:!!XA(\"ENABLE_FULL_LINK_AV_SYNC\")||void 0,enableDataStream2:ux(\"ENABLE_DATASTREAM_2\",\"boolean\"),enableAutFeedback:!!XA(\"ENABLE_AUT_FEEDBACK\")||void 0,rtm2Flag:\"number\"==typeof this.joinInfo.rtmFlag?this.joinInfo.rtmFlag:void 0,enableUserAutoRebalanceCheck:!!XA(\"ENABLE_USER_AUTO_REBALANCE_CHECK\"),enableXR:ux(\"USE_XR\",\"boolean\"),enableLossbasedBwe:ux(\"ENABLE_LOSSBASED_BWE\",\"boolean\"),enableAutCC:!!XA(\"ENABLE_AUT_CC\")||void 0,enableCCFallback:ux(\"ENABLE_CC_FALLBACK\",\"boolean\"),enablePreallocPC:r,preSubNum:n?ux(\"PRE_SUB_NUM\",\"number\"):void 0,enablePubTWCC:ux(\"PUBLISH_TWCC\",\"boolean\"),enableSubTWCC:ux(\"SUBSCRIBE_TWCC\",\"boolean\"),enablePubRTX:ux(\"USE_PUB_RTX\",\"boolean\"),enableSubRTX:ux(\"USE_SUB_RTX\",\"boolean\"),enableSubSVC:XA(\"ENABLE_SVC\")?XA(\"ENABLE_SVC_DEFAULT_CODECS\"):Array.isArray(XA(\"SVC\"))&&0!==XA(\"SVC\").length?XA(\"SVC\"):void 0}},join_ts:this.joinGatewayStartTime},e);return this.joinInfo.stringUid&&(o.string_uid=this.joinInfo.stringUid),this.joinInfo.aesmode&&this.joinInfo.aespassword&&(o.aes_mode=this.joinInfo.aesmode,XA(\"ENCRYPT_AES\")?(o.aes_secret=this.joinInfo.aespassword,o.aes_encrypt=!0):o.aes_secret=this.joinInfo.aespassword,this.joinInfo.aessalt&&(o.aes_salt=this.joinInfo.aessalt)),t.addresses[this.signal.websocket.currentURLIndex]&&(o.ap_response.ticket=t.addresses[this.signal.websocket.currentURLIndex].ticket,delete t.addresses),void 0!==this.joinInfo.defaultVideoStream&&(o.default_video_stream=this.joinInfo.defaultVideoStream),o}getRejoinMessage(){if(!this.joinInfo)throw new yb(Ry.UNEXPECTED_ERROR,\"can not generate rejoin message, no join info\");return{session_id:this.joinInfo.sid,channel_name:this.joinInfo.cname,cid:this.joinInfo.cid,uid:this.joinInfo.uid,vid:Number(this.joinInfo.vid)}}handleSignalEvents(){this.signal.on(Dw.WS_RECONNECT_WAITTING_FINISH,(e=>{var t;Dn(t=[\"tryNext\",\"recover\"]).call(t,e)&&this.joinInfo&&vb.adjustSessionStartTime(this.joinInfo.sid)})),this.signal.on(Dw.WS_RECONNECT_CREATE_CONNECTION,(e=>{this.joinGatewayStartTime=Date.now()})),this.signal.on(Dw.WS_RECONNECTING,(e=>{this.joinInfo&&vb.WebSocketQuit(this.joinInfo.sid,{lts:Date.now(),succ:-1,cname:this.joinInfo.cname,uid:this.joinInfo.uid,cid:this.joinInfo.cid,errorCode:e||Jy.NETWORK_ERROR}),this.joinInfo&&(this.state=\"RECONNECTING\",vb.sessionInit(this.joinInfo.sid,{lts:(new Date).getTime(),extend:this.isSignalRecover?{recover:!0}:{rejoin:!0},cname:this.joinInfo.cname,appid:this.joinInfo.appId,mode:this.spec.mode,stringUid:this.joinInfo.stringUid,channelProfile:\"live\"===this.spec.mode?1:0,channelMode:0,lsid:this.joinInfo.sid,clientRole:\"audience\"===this.role?2:1,buildFormat:2}),this.isSignalRecover=!1,this.joinGatewayStartTime=Date.now())})),this.signal.on(Dw.WS_CLOSED,(e=>{let t;switch(e){case Hy.LEAVE:t=Jy.LEAVE;break;case Hy.UID_BANNED:case Hy.IP_BANNED:case Hy.CHANNEL_BANNED:case Hy.SERVER_ERROR:t=Jy.SERVER_ERROR;break;case Hy.FALLBACK:t=Jy.FALLBACK;break;case Hy.LICENSE_MISSING:case Hy.LICENSE_EXPIRED:case Hy.LICENSE_MINUTES_EXCEEDED:case Hy.LICENSE_PERIOD_INVALID:case Hy.LICENSE_MULTIPLE_SDK_SERVICE:case Hy.LICENSE_ILLEGAL:case Hy.TOKEN_EXPIRE:t=e;break;default:t=Jy.NETWORK_ERROR}fb.debug(\"[\".concat(this.store.clientId,\"] [signal] websocket closed, reason: \").concat(t||\"undefined -> \"+Jy.NETWORK_ERROR)),this.joinInfo&&vb.WebSocketQuit(this.joinInfo.sid,{lts:Date.now(),succ:e===Hy.LEAVE?1:-1,cname:this.joinInfo.cname,uid:this.joinInfo.uid,cid:this.joinInfo.cid,errorCode:t}),this._disconnectedReason=e,e!==Hy.FALLBACK&&(this.state=\"DISCONNECTED\"),this.reset()})),this.signal.on(Dw.WS_CONNECTED,(()=>{if(this.updateTurnConfigFromSignal(),this.state=\"CONNECTED\",this.joinInfo&&(\"audience\"===this.role&&this._clientRoleOptions&&(this._clientRoleOptions.level||this._clientRoleOptions.delay)&&(fb.debug(\"[\".concat(this.store.clientId,\"] patch to send set client role, role: \").concat(this.role,\", mode: \").concat(this.spec.mode,\", level: \").concat(this._clientRoleOptions.level,\", delay: \").concat(this._clientRoleOptions.delay)),this.setClientRole(this.role,this._clientRoleOptions)),vb.joinGateway(this.joinInfo.sid,{lts:this.joinGatewayStartTime,succ:!0,ec:null,vid:this.joinInfo.vid,addr:this.signal.url,uid:this.joinInfo.uid,cid:this.joinInfo.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!this.joinInfo.proxyServer,signalChannel:\"0\",preload:this.joinInfo.preload}),this._isProactiveJoin=!1,this.joinInfo.useLocalAccessPoint&&1===this.joinInfo.setLocalAPVersion)){const e=this.signal.url&&this.signal.url.match(/wss\\:\\/\\/([^:]+):(\\d+)/);if(!e)return void fb.error(\"[\".concat(this.store.clientId,\"] set local access point after joined failed: \").concat(e));JA(\"EVENT_REPORT_DOMAIN\",e[1]),JA(\"EVENT_REPORT_BACKUP_DOMAIN\",e[1]),JA(\"LOG_UPLOAD_SERVER\",\"\".concat(e[1],\":6444\"))}})),this.signal.on(kw.ON_UPLINK_STATS,(e=>{this._statsCollector.updateUplinkStats(e)})),this.signal.on(Dw.REQUEST_RECOVER,((e,t,i)=>{if(!this.joinInfo)return i(new yb(Ry.UNEXPECTED_ERROR,\"gateway: can not recover, no join info\"));e&&(this.joinInfo.multiIP=e,this.hasChangeBGPAddress=!0),this.isSignalRecover=!0,Zy(this,$w.REQUEST_NEW_GATEWAY_LIST).then(t).catch(i)})),this.signal.on(Dw.REQUEST_JOIN_INFO,(async e=>{var t;if(this.updateTurnConfigFromSignal(),this.store.useP2P)return void e(this.getJoinMessage({ortc:{}}));const{iceParameters:i,dtlsParameters:n,rtpCapabilities:r}=await Zy(this,$w.REQUEST_P2P_CONNECTION_PARAMS,{turnServer:null===(t=this.joinInfo)||void 0===t?void 0:t.turnServer});e(this.getJoinMessage({ortc:{iceParameters:i,dtlsParameters:n,rtpCapabilities:r,version:\"2\"}}))})),this.signal.on(Dw.REQUEST_REJOIN_INFO,(e=>{e(this.getRejoinMessage())})),this.signal.on(Dw.REPORT_JOIN_GATEWAY,((e,t)=>{if(!this.joinInfo)return;let i,n=\"\";var r;e instanceof yb?(i=(null===(r=e.data)||void 0===r?void 0:r.desc)||e.code,n=e.message):i=e;vb.joinGateway(this.joinInfo.sid,{lts:this.joinGatewayStartTime,succ:!1,ec:i,errorMsg:n,addr:t,uid:this.joinInfo.uid,cid:this.joinInfo.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!this.joinInfo.proxyServer,signalChannel:\"0\",preload:this.joinInfo.preload}),this._isProactiveJoin=!1})),this.signal.on(Dw.IS_P2P_DISCONNECTED,(e=>{e(tA(this,$w.IS_P2P_DISCONNECTED))})),this.signal.on(Dw.DISCONNECT_P2P,(()=>{this.emit($w.DISCONNECT_P2P)})),this.signal.on(Dw.REQUEST_SUCCESS,(()=>{this._signalTimeout=!1})),this.signal.on(Dw.REQUEST_TIMEOUT,(()=>{this._signalTimeout=!0})),this.signal.on(Dw.JOIN_RESPONSE,(e=>{const t=this.getCurrentGatewayAddress();this.emit($w.JOIN_RESPONSE,e,t)})),this.signal.on(Dw.PRE_CONNECT_PC,(async()=>{if(this.joinInfo){this.updateTurnConfigFromSignal();const e=this.getCurrentGatewayAddress(),t=XA(\"FINGERPRINT\")||this.joinInfo.apResponse.addresses[this.signal.currentURLIndex].fingerprint;if(e&&t){const i=qU(e);this.emit($w.PRE_CONNECT_PC,{candidates:i,fingerprint:t})}}})),this.signal.on(Dw.RECOVER_NOTIFICATION,(e=>{this.joinInfo&&\"string\"==typeof XA(\"AP_REQUEST_DETAIL\")&&(this.joinInfo.apRequestDetail=\"\".concat(XA(\"AP_REQUEST_DETAIL\"),\";\").concat(e))}))}async tryUnsubBeforeResub(e,t){try{await this.signal.request(Pw.UNSUBSCRIBE,{p2p_id:this.store.p2pId,stream_id:e,ortc:[t]},!0)}catch(e){throw fb.warning(\"[\".concat(this.store.clientId,\"] tryUnsubBeforeResub warning\"),e),e}}async tryUnsubDataChannelBeforeResub(e,t){try{await this.signal.request(Pw.UNSUBSCRIBE,{stream_id:t.id},!0)}catch(e){throw fb.warning(\"unsubscribe datachannel warning\",e),e}}async tryUnpubBeforeRepub(e,t){try{await this.signal.request(Pw.UNPUBLISH,{stream_id:e,ortc:t},!0)}catch(e){throw fb.warning(\"[\".concat(this.store.clientId,\"] tryUnpubBeforeRepub warning: \"),e),e}}async tryUnpubDataChannelBeforeRepub(e,t){try{await this.signal.request(Pw.UNPUBLISH_DATASTREAM,{channnel_id:t.channelId},!0)}catch(e){throw fb.warning(\"unpublish datastream warning: \",e),e}}async tryMassUnsubBeforeResub(e){const t={users:e.map((e=>({stream_id:e.stream_id,stream_type:e.stream_type})))};try{await this.signal.request(Pw.UNSUBSCRIBE_STREAMS,t,!0)}catch(e){throw fb.warning(\"[\".concat(this.store.clientId,\"] tryMassUnsubBeforeResub warning\"),e),e}}async muteLocal(e,t){const i={action:e.find((e=>e.stream_type===Zw.Audio))?\"mute_local_audio\":\"mute_local_video\",p2p_id:this.store.p2pId,ortc:e,stream_id:t};try{await this.signal.request(Pw.CONTROL,i,!0,!0)}catch(e){throw fb.warning(\"[\".concat(this.store.clientId,\"] gateway muteLocal warning: \"),e),e}}async unmuteLocal(e,t){const i={action:e.find((e=>e.stream_type===Zw.Audio))?\"unmute_local_audio\":\"unmute_local_video\",p2p_id:this.store.p2pId,ortc:e,stream_id:t};try{await this.signal.request(Pw.CONTROL,i,!0,!0)}catch(e){throw fb.warning(\"[\".concat(this.store.clientId,\"] gateway unmuteLocal warning: \"),e),e}}async muteRemote(e,t){const i={action:e===dO.AUDIO?\"mute_remote_audio\":\"mute_remote_video\",p2p_id:this.store.p2pId,stream_id:t};try{await this.signal.request(Pw.CONTROL,i,!0,!0)}catch(e){throw fb.warning(\"[\".concat(this.store.clientId,\"] gateway muteRemote warning: \"),e),e}}async unmuteRemote(e,t){const i={action:e===dO.AUDIO?\"unmute_remote_audio\":\"unmute_remote_video\",p2p_id:this.store.p2pId,stream_id:t};try{await this.signal.request(Pw.CONTROL,i,!0,!0)}catch(e){throw fb.warning(\"[\".concat(this.store.clientId,\"] gateway unmuteRemote warning: \"),e),e}}uploadWRTCStats(e){this.signal.uploadWRTCStats(e)}upload(e,t){this.signal.upload(e,t)}getSignalRTT(){return this.signal.rtt}async restartICE(e){const t={p2p_id:this.store.p2pId,stream_id:this.store.uid,ortc:e};try{return await this.signal.request(Pw.RESTART_ICE,t,!0)}catch(e){throw fb.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.restartICE warning: \"),e),e}}reconnect(){\"CONNECTED\"===this.state&&this.signal.reconnect(void 0,Jy.P2P_FAILED)}getCurrentGatewayAddress(){var e,t;if(!XA(\"GATEWAY_WSS_ADDRESS\"))return XA(\"USE_CANDIDATE_FROM_AP_DETAIL\")&&null!==(e=this.joinInfo)&&void 0!==e&&e.apGatewayAddress?(fb.debug(\"[\".concat(this.store.clientId,\"] use candidate from ap detail, \").concat(JSON.stringify(this.joinInfo.apGatewayAddress))),this.joinInfo.apGatewayAddress):null!==(t=this.joinInfo)&&void 0!==t&&t.gatewayAddrs?this.joinInfo.gatewayAddrs[this.signal.currentURLIndex]:void 0}async setPublishAudioFilterEnabled(e){await this.signal.request(Pw.SET_PARAMETER,{enablePublishAudioFilter:e})}}let fx=0,mx=0;function Tx(e,t,i,n){return new Gh(((r,o)=>{t.timeout=t.timeout||XA(\"HTTP_CONNECT_TIMEOUT\"),t.responseType=t.responseType||\"json\",t.data&&!i?(t.data=JSON.stringify(t.data),fx+=_A(t.data)):i&&(t.data.size?fx+=t.data.size:t.data instanceof FormData?fx+=EA(t.data):fx+=_A(JSON.stringify(t.data))),t.headers=t.headers||{},t.headers[\"Content-Type\"]=t.headers[\"Content-Type\"]||\"application/json\",t.method=\"POST\",t.url=e,Lv.request(t).then((e=>{\"string\"==typeof e.data?mx+=_A(e.data):e.data instanceof ArrayBuffer||e.data instanceof Uint8Array?mx+=e.data.byteLength:mx+=_A(JSON.stringify(e.data)),n&&r({data:e.data,headers:e.headers}),r(e.data)})).catch((e=>{Lv.isCancel(e)?o(new yb(Ry.OPERATION_ABORTED,\"cancel token canceled\")):\"ECONNABORTED\"===e.code?o(new yb(Ry.NETWORK_TIMEOUT,e.message)):e.response?o(new yb(Ry.NETWORK_RESPONSE_ERROR,e.response.status)):o(new yb(Ry.NETWORK_ERROR,e.message))}))}))}\n/*! formdata-polyfill. MIT License. Jimmy W?rting <https://jimmy.warting.se/opensource> */!function(){var e;function i(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var n=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(e,t,i){return e==Array.prototype||e==Object.prototype||(e[t]=i.value),e};var r,o=function(e){e=[\"object\"==typeof globalThis&&globalThis,e,\"object\"==typeof window&&window,\"object\"==typeof self&&self,\"object\"==typeof t&&t];for(var i=0;i<e.length;++i){var n=e[i];if(n&&n.Math==Math)return n}throw Error(\"Cannot find global object\")}(this);function s(e,t){if(t)e:{var i=o;e=e.split(\".\");for(var r=0;r<e.length-1;r++){var s=e[r];if(!(s in i))break e;i=i[s]}(t=t(r=i[e=e[e.length-1]]))!=r&&null!=t&&n(i,e,{configurable:!0,writable:!0,value:t})}}function a(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function c(e){var t=\"undefined\"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return t?t.call(e):{next:i(e)}}if(s(\"Symbol\",(function(e){function t(e,t){this.A=e,n(this,\"description\",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.A};var i=\"jscomp_symbol_\"+(1e9*Math.random()>>>0)+\"_\",r=0;return function e(n){if(this instanceof e)throw new TypeError(\"Symbol is not a constructor\");return new t(i+(n||\"\")+\"_\"+r++,n)}})),s(\"Symbol.iterator\",(function(e){if(e)return e;e=Symbol(\"Symbol.iterator\");for(var t=\"Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array\".split(\" \"),r=0;r<t.length;r++){var s=o[t[r]];\"function\"==typeof s&&\"function\"!=typeof s.prototype[e]&&n(s.prototype,e,{configurable:!0,writable:!0,value:function(){return a(i(this))}})}return e})),\"function\"==typeof Object.setPrototypeOf)r=Object.setPrototypeOf;else{var d;e:{var l={};try{l.__proto__={a:!0},d=l.a;break e}catch(e){}d=!1}r=d?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+\" is not extensible\");return e}:null}var u=r;function h(){this.m=!1,this.j=null,this.v=void 0,this.h=1,this.u=this.C=0,this.l=null}function p(e){if(e.m)throw new TypeError(\"Generator is already running\");e.m=!0}function _(e,t){return e.h=3,{value:t}}function E(e){this.g=new h,this.G=e}function f(e,t,i,n){try{var r=t.call(e.g.j,i);if(!(r instanceof Object))throw new TypeError(\"Iterator result \"+r+\" is not an object\");if(!r.done)return e.g.m=!1,r;var o=r.value}catch(t){return e.g.j=null,e.g.s(t),m(e)}return e.g.j=null,n.call(e.g,o),m(e)}function m(e){for(;e.g.h;)try{var t=e.G(e.g);if(t)return e.g.m=!1,{value:t.value,done:!1}}catch(t){e.g.v=void 0,e.g.s(t)}if(e.g.m=!1,e.g.l){if(t=e.g.l,e.g.l=null,t.F)throw t.D;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function T(e){this.next=function(t){return e.o(t)},this.throw=function(t){return e.s(t)},this.return=function(t){return function(e,t){p(e.g);var i=e.g.j;return i?f(e,\"return\"in i?i.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),m(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function S(e,t){return t=new T(new E(t)),u&&e.prototype&&u(t,e.prototype),t}if(h.prototype.o=function(e){this.v=e},h.prototype.s=function(e){this.l={D:e,F:!0},this.h=this.C||this.u},h.prototype.return=function(e){this.l={return:e},this.h=this.u},E.prototype.o=function(e){return p(this.g),this.g.j?f(this,this.g.j.next,e,this.g.o):(this.g.o(e),m(this))},E.prototype.s=function(e){return p(this.g),this.g.j?f(this,this.g.j.throw,e,this.g.o):(this.g.s(e),m(this))},s(\"Array.prototype.entries\",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+=\"\");var i=0,n=!1,r={next:function(){if(!n&&i<e.length){var r=i++;return{value:t(r,e[r]),done:!1}}return n=!0,{done:!0,value:void 0}}};return r[Symbol.iterator]=function(){return r},r}(this,(function(e,t){return[e,t]}))}})),\"undefined\"!=typeof Blob&&(\"undefined\"==typeof FormData||!FormData.prototype.keys)){var g=function(e,t){for(var i=0;i<e.length;i++)t(e[i])},R=function(e){return e.replace(/\\r?\\n|\\r/g,\"\\r\\n\")},C=function(e,t,i){return t instanceof Blob?(i=void 0!==i?String(i+\"\"):\"string\"==typeof t.name?t.name:\"blob\",t.name===i&&\"[object Blob]\"!==Object.prototype.toString.call(t)||(t=new File([t],i)),[String(e),t]):[String(e),String(t)]},I=function(e,t){if(e.length<t)throw new TypeError(t+\" argument required, but only \"+e.length+\" present.\")},v=\"object\"==typeof globalThis?globalThis:\"object\"==typeof window?window:\"object\"==typeof self?self:this,y=v.FormData,A=v.XMLHttpRequest&&v.XMLHttpRequest.prototype.send,b=v.Request&&v.fetch,w=v.navigator&&v.navigator.sendBeacon,O=v.Element&&v.Element.prototype,N=v.Symbol&&Symbol.toStringTag;N&&(Blob.prototype[N]||(Blob.prototype[N]=\"Blob\"),\"File\"in v&&!File.prototype[N]&&(File.prototype[N]=\"File\"));try{new File([],\"\")}catch(e){v.File=function(e,t,i){return e=new Blob(e,i||{}),Object.defineProperties(e,{name:{value:t},lastModified:{value:+(i&&void 0!==i.lastModified?new Date(i.lastModified):new Date)},toString:{value:function(){return\"[object File]\"}}}),N&&Object.defineProperty(e,N,{value:\"File\"}),e}}var D=function(e){return e.replace(/\\n/g,\"%0A\").replace(/\\r/g,\"%0D\").replace(/\"/g,\"%22\")},P=function(e){this.i=[];var t=this;e&&g(e.elements,(function(e){if(e.name&&!e.disabled&&\"submit\"!==e.type&&\"button\"!==e.type&&!e.matches(\"form fieldset[disabled] *\"))if(\"file\"===e.type){var i=e.files&&e.files.length?e.files:[new File([],\"\",{type:\"application/octet-stream\"})];g(i,(function(i){t.append(e.name,i)}))}else\"select-multiple\"===e.type||\"select-one\"===e.type?g(e.options,(function(i){!i.disabled&&i.selected&&t.append(e.name,i.value)})):\"checkbox\"===e.type||\"radio\"===e.type?e.checked&&t.append(e.name,e.value):(i=\"textarea\"===e.type?R(e.value):e.value,t.append(e.name,i))}))};if((e=P.prototype).append=function(e,t,i){I(arguments,2),this.i.push(C(e,t,i))},e.delete=function(e){I(arguments,1);var t=[];e=String(e),g(this.i,(function(i){i[0]!==e&&t.push(i)})),this.i=t},e.entries=function e(){var t,i=this;return S(e,(function(e){if(1==e.h&&(t=0),3!=e.h)return t<i.i.length?e=_(e,i.i[t]):(e.h=0,e=void 0),e;t++,e.h=2}))},e.forEach=function(e,t){I(arguments,1);for(var i=c(this),n=i.next();!n.done;n=i.next()){var r=c(n.value);n=r.next().value,r=r.next().value,e.call(t,r,n,this)}},e.get=function(e){I(arguments,1);var t=this.i;e=String(e);for(var i=0;i<t.length;i++)if(t[i][0]===e)return t[i][1];return null},e.getAll=function(e){I(arguments,1);var t=[];return e=String(e),g(this.i,(function(i){i[0]===e&&t.push(i[1])})),t},e.has=function(e){I(arguments,1),e=String(e);for(var t=0;t<this.i.length;t++)if(this.i[t][0]===e)return!0;return!1},e.keys=function e(){var t,i,n,r,o=this;return S(e,(function(e){if(1==e.h&&(t=c(o),i=t.next()),3!=e.h)return i.done?void(e.h=0):(n=i.value,r=c(n),_(e,r.next().value));i=t.next(),e.h=2}))},e.set=function(e,t,i){I(arguments,2),e=String(e);var n=[],r=C(e,t,i),o=!0;g(this.i,(function(t){t[0]===e?o&&(o=!n.push(r)):n.push(t)})),o&&n.push(r),this.i=n},e.values=function e(){var t,i,n,r,o=this;return S(e,(function(e){if(1==e.h&&(t=c(o),i=t.next()),3!=e.h)return i.done?void(e.h=0):(n=i.value,(r=c(n)).next(),_(e,r.next().value));i=t.next(),e.h=2}))},P.prototype._asNative=function(){for(var e=new y,t=c(this),i=t.next();!i.done;i=t.next()){var n=c(i.value);i=n.next().value,n=n.next().value,e.append(i,n)}return e},P.prototype._blob=function(){var e=\"----formdata-polyfill-\"+Math.random(),t=[],i=\"--\"+e+'\\r\\nContent-Disposition: form-data; name=\"';return this.forEach((function(e,n){return\"string\"==typeof e?t.push(i+D(R(n))+'\"\\r\\n\\r\\n'+R(e)+\"\\r\\n\"):t.push(i+D(R(n))+'\"; filename=\"'+D(e.name)+'\"\\r\\nContent-Type: '+(e.type||\"application/octet-stream\")+\"\\r\\n\\r\\n\",e,\"\\r\\n\")})),t.push(\"--\"+e+\"--\"),new Blob(t,{type:\"multipart/form-data; boundary=\"+e})},P.prototype[Symbol.iterator]=function(){return this.entries()},P.prototype.toString=function(){return\"[object FormData]\"},O&&!O.matches&&(O.matches=O.matchesSelector||O.mozMatchesSelector||O.msMatchesSelector||O.oMatchesSelector||O.webkitMatchesSelector||function(e){for(var t=(e=(this.document||this.ownerDocument).querySelectorAll(e)).length;0<=--t&&e.item(t)!==this;);return-1<t}),N&&(P.prototype[N]=\"FormData\"),A){var L=v.XMLHttpRequest.prototype.setRequestHeader;v.XMLHttpRequest.prototype.setRequestHeader=function(e,t){L.call(this,e,t),\"content-type\"===e.toLowerCase()&&(this.B=!0)},v.XMLHttpRequest.prototype.send=function(e){e instanceof P?(e=e._blob(),this.B||this.setRequestHeader(\"Content-Type\",e.type),A.call(this,e)):A.call(this,e)}}b&&(v.fetch=function(e,t){return t&&t.body&&t.body instanceof P&&(t.body=t.body._blob()),b.call(this,e,t)}),w&&(v.navigator.sendBeacon=function(e,t){return t instanceof P&&(t=t._asNative()),w.call(this,e,t)}),v.FormData=P}}();const Sx=()=>{const e=XA(\"AREAS\");0===e.length&&e.push(iO.GLOBAL);return Jn(e).call(e,((e,t,i)=>{const n=gx(t);return n?0===i?n:\"\".concat(e,\",\").concat(n):e}),\"\")},gx=e=>e===iO.OVERSEA?\"\".concat(rO.ASIA,\",\").concat(rO.EUROPE,\",\").concat(rO.AFRICA,\",\").concat(rO.NORTH_AMERICA,\",\").concat(rO.SOUTH_AMERICA,\",\").concat(rO.OCEANIA):rO[e],Rx=e=>{const t={CODE:\"\",WEBCS_DOMAIN:[],WEBCS_DOMAIN_BACKUP_LIST:[],PROXY_CS:[],CDS_AP:[],ACCOUNT_REGISTER:[],UAP_AP:[],EVENT_REPORT_DOMAIN:[],EVENT_REPORT_BACKUP_DOMAIN:[],LOG_UPLOAD_SERVER:[],PROXY_SERVER_TYPE3:[]};return e.map((e=>{const i=oO[e],n=Object.keys(i);n&&n.map((e=>{\"CODE\"!==e&&(t[e]=t[e].concat(i[e]))}))})),t},Cx={GLOBAL:{ASIA:[iO.CHINA,iO.JAPAN,iO.INDIA,iO.KOREA,iO.HKMC],EUROPE:[],NORTH_AMERICA:[iO.US],SOUTH_AMERICA:[],OCEANIA:[],AFRICA:[]}},Ix=Object.keys(Cx[iO.GLOBAL]),vx=[iO.CHINA,iO.NORTH_AMERICA,iO.EUROPE,iO.ASIA,iO.JAPAN,iO.INDIA,iO.OCEANIA,iO.SOUTH_AMERICA,iO.AFRICA,iO.KOREA,iO.HKMC,iO.US],yx=function(e,t){let i=[];if(Dn(e).call(e,iO.GLOBAL)){const o=[iO.GLOBAL,iO.OVERSEA],s=Object.keys(oO);if(t===iO.GLOBAL)throw new yb(Ry.INVALID_PARAMS,\"GLOBAL is an invalid excludedArea value\");if(t===iO.CHINA)i=[iO.OVERSEA];else if(r=t,Dn(Ix).call(Ix,r)){const e=(n=t,Cx[iO.GLOBAL][n]||[]),r=[...o,t,...e];i=s.filter((e=>!Dn(r).call(r,e)))}else if(function(e){let t=!1;return Ix.forEach((i=>{var n;Dn(n=Cx[iO.GLOBAL][i]).call(n,e)&&(t=!0)})),t}(t)){const e=function(e){let t;return Ix.forEach((i=>{var n;Dn(n=Cx[iO.GLOBAL][i]).call(n,e)&&(t=i)})),t}(t),n=[...o,e,t];i=s.filter((e=>!Dn(n).call(n,e)))}else i=e;i=function(e){const t=[];return vx.forEach((i=>{Dn(e).call(e,i)&&t.push(i)})),t.concat(e.filter((e=>!Dn(vx).call(vx,e))))}(i)}else i=e;var n,r;return i};function Ax(e){var t,i;if(!e&&Dn(t=XA(\"AREAS\")).call(t,iO.EXTENSIONS))return fb.debug(\"update area from ap : reset\"),void bx(Ab,!0);if(!Dn(i=XA(\"AREAS\")).call(i,iO.GLOBAL)||!e)return;let n=oO.EXTENSIONS;n&&(n={CODE:gx(iO.EXTENSIONS),WEBCS_DOMAIN:[\"ap-web-1-\".concat(e,\".agora.io\")],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-\".concat(e,\".ap.sd-rtn.com\")],PROXY_CS:[\"proxy-ap-web-\".concat(e,\".agora.io\")],CDS_AP:[\"cds-ap-web-1-\".concat(e,\".agora.io\"),\"cds-ap-web-2-\".concat(e,\".ap.sd-rtn.com\")],ACCOUNT_REGISTER:[\"sua-ap-web-1-\".concat(e,\".agora.io\"),\"sua-ap-web-2-\".concat(e,\".ap.sd-rtn.com\")],UAP_AP:[\"uap-ap-web-1-\".concat(e,\".agora.io\"),\"uap-ap-web-2-\".concat(e,\".ap.sd-rtn.com\")],EVENT_REPORT_DOMAIN:[\"statscollector-1-\".concat(e,\".agora.io\")],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-\".concat(e,\".agora.io\")],LOG_UPLOAD_SERVER:[\"logservice-\".concat(e,\".agora.io\")],PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy-\".concat(e,\".agora.io\")]},fb.debug(\"update area from ap success: \".concat(e,\",config is \"),n),JA(\"AREAS\",[iO.EXTENSIONS],!0),Object.keys(n).map((e=>{if(\"LOG_UPLOAD_SERVER\"===e||\"EVENT_REPORT_DOMAIN\"===e||\"EVENT_REPORT_BACKUP_DOMAIN\"===e||\"PROXY_SERVER_TYPE3\"===e){JA(e,n[e][0])}else JA(e,n[e])})))}function bx(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i=vb.reportApiInvoke(null,{name:By.SET_AREA,options:e,tag:jy.TRACER});try{let n=[];if(\"string\"==typeof e&&(n=[e]),Array.isArray(e)&&(e.forEach((e=>{if(!Dn(nO).call(nO,e))throw new yb(Ry.INVALID_PARAMS,\"invalid area code\")})),n=e),\"[object Object]\"===Object.prototype.toString.call(e)){const{areaCode:t,excludedArea:i}=e;if(!t)throw new yb(Ry.INVALID_PARAMS,\"area code is needed\");let r=t;\"string\"==typeof t&&(r=[t]),n=i?yx(r,i):r}if(!t){if(QA.AREAS){const e=new yb(Ry.PROHIBITED_OPERATION,\"setArea is prohibited because of config-distribute\");return i.onError(e),void fb.warning(\"setArea is prohibited because of config-distribute\")}if(Dn(n).call(n,iO.GLOBAL)&&XA(\"AREAS\")===iO.EXTENSIONS){const e=new yb(Ry.PROHIBITED_OPERATION,\"setArea is prohibited because of ap extensions\");return i.onError(e),void fb.warning(\"setArea is prohibited because of ap extensions\")}}JA(\"AREAS\",n,t);const r=Rx(n);Object.keys(r).map((e=>{if(\"LOG_UPLOAD_SERVER\"===e||\"EVENT_REPORT_DOMAIN\"===e||\"EVENT_REPORT_BACKUP_DOMAIN\"===e||\"PROXY_SERVER_TYPE3\"===e){JA(e,r[e][0])}else JA(e,r[e])})),fb.debug(\"set area success:\",n.join(\",\"))}catch(e){throw i.onError(e),e}i.onSuccess()}function wx(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function Ox(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?wx(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):wx(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let Nx=1;function Dx(e,t,i,n,r){Nx+=1;const o={sid:i.sid,command:\"convergeAllocateEdge\",uid:\"666\",appId:i.appId,ts:Math.floor(Date.now()/1e3),seq:Nx,requestId:Nx,version:GA,cname:i.cname},s={service_name:t,json_body:JSON.stringify(o)};let a,c,d=e[0];return kA((async()=>{a=Date.now();const e=await Tx(d,{data:s,cancelToken:n,headers:{\"X-Packet-Service-Type\":\"0\",\"X-Packet-URI\":\"61\"}});if(c=Date.now()-a,0!==e.code){const t=new yb(Ry.UNEXPECTED_RESPONSE,\"live streaming ap error, code\"+e.code,{retry:!0,responseTime:c});throw fb.error(t.toString()),t}const i=JSON.parse(e.json_body);if(200!==i.code){const e=new yb(Ry.UNEXPECTED_RESPONSE,\"live streaming app center error, code: \".concat(i.code,\", reason: \").concat(i.reason),{code:i.code,responseTime:c});throw fb.error(e.toString()),e}if(!i.servers||0===i.servers.length){const e=new yb(Ry.UNEXPECTED_RESPONSE,\"live streaming app center empty server\",{code:i.code,responseTime:c});throw fb.error(e.toString()),e}const r=function(e,t){return{addressList:e.servers.map((e=>\"wss://\".concat(e.address.replace(/\\./g,\"-\"),\".\").concat(XA(\"WORKER_DOMAIN\"),\":\").concat(e.wss,\"?serviceName=\").concat(encodeURIComponent(t)))),workerToken:e.workerToken,vid:e.vid}}(i,t);return XA(\"LIVE_STREAMING_ADDRESS\")&&(r.addressList=XA(\"LIVE_STREAMING_ADDRESS\")instanceof Array?XA(\"LIVE_STREAMING_ADDRESS\"):[XA(\"LIVE_STREAMING_ADDRESS\")]),Ox(Ox({},r),{},{responseTime:c})}),((n,r)=>(vb.apworkerEvent(i.sid,{success:!0,sc:200,serviceName:t,responseDetail:JSON.stringify(n.addressList),firstSuccess:0===r,responseTime:c,serverIp:e[r%e.length]}),!1)),((n,r)=>(vb.apworkerEvent(i.sid,{success:!1,sc:n.data&&n.data.code||200,serviceName:t,responseTime:c,serverIp:e[r%e.length]}),!!(n.code!==Ry.OPERATION_ABORTED&&n.code!==Ry.UNEXPECTED_RESPONSE||n.data&&n.data.retry)&&(d=e[(r+1)%e.length],!0))),r)}let Px=1;function Lx(e,t,i,n){let{url:r,areaCode:o}=e;const{clientId:s,sid:a}=t,c=Date.now();let d;const[l,u]=Vx(t,o,[YO.CHOOSE_SERVER]);let h=iA.networkState;return kA((async()=>{h&&iA.networkState===Xy.OFFLINE&&iA.onlineWaiter&&await Gh.race([iA.onlineWaiter,mA(n&&n.maxRetryTimeout||PA.maxRetryTimeout)]),h=iA.networkState;const{data:e,headers:o}=await Tx(r,{data:l,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0,!0);d=\"1\"===o.http3?1:-1,vb.reportResourceTiming(r,a),Mx(e,r,t,c,[YO.CHOOSE_SERVER],d);const s=eN(e,YO.CHOOSE_SERVER);return Ux(s),XO(s,r)}),(e=>(e&&vb.joinChooseServer(a,{lts:c,succ:!0,csAddr:r,opid:u,serverList:e.gatewayAddrs.map((e=>e.address)),ec:null,cid:e.cid.toString(),uid:e.uid.toString(),csIp:e.csIp,unilbsServerIds:[YO.CHOOSE_SERVER].toString(),isHttp3:d,corssRegionTagReq:t.apRequestDetail,corssRegionTagRes:e.res.detail&&e.res.detail[38]}),!1)),(e=>e.code!==Ry.OPERATION_ABORTED&&(e.code===Ry.CAN_NOT_GET_GATEWAY_SERVER?e.data.retry:(vb.joinChooseServer(a,{lts:c,succ:!1,csAddr:r,serverList:null,opid:u,ec:e.code,csIp:e.data&&e.data.csIp,unilbsServerIds:[YO.CHOOSE_SERVER].toString(),extend:JSON.stringify({networkState:h}),isHttp3:d,corssRegionTagReq:t.apRequestDetail}),fb.warning(\"[\".concat(s||\"sid-\".concat(a.slice(0,6)),\"] Choose server network error, retry\"),e),!0))),n)}function kx(e,t,i,n){let r,{url:o,areaCode:s,serviceIds:a}=e;const c=Date.now(),[d,l]=Vx(t,s,a);let u;return kA((async()=>{u&&iA.networkState===Xy.OFFLINE&&iA.onlineWaiter&&await Gh.race([iA.onlineWaiter,mA(n&&n.maxRetryTimeout||PA.maxRetryTimeout)]),u=iA.networkState;const{data:e,headers:s}=await Tx(o,{data:d,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0,!0);r=\"1\"===s.http3?1:-1,vb.reportResourceTiming(o,t.sid),Mx(e,o,t,c,a,r);const l=eN(e,YO.CHOOSE_SERVER),h=eN(e,\"proxy5\"===t.cloudProxyServer?YO.CLOUD_PROXY_5:\"proxy3\"===t.cloudProxyServer||\"proxy4\"===t.cloudProxyServer?YO.CLOUD_PROXY:YO.CLOUD_PROXY_FALLBACK);return Ux(l),{gatewayInfo:XO(l,o),proxyInfo:h,url:o}}),(e=>(e.gatewayInfo&&vb.joinChooseServer(t.sid,{lts:c,succ:!0,csAddr:o,serverList:e.gatewayInfo.gatewayAddrs.map((e=>e.address)),ec:null,opid:l,cid:e.gatewayInfo.cid.toString(),uid:e.gatewayInfo.uid.toString(),csIp:e.gatewayInfo.csIp,unilbsServerIds:a.toString(),isHttp3:r,corssRegionTagReq:t.apRequestDetail,corssRegionTagRes:e.gatewayInfo.res.detail&&e.gatewayInfo.res.detail[38]}),e.proxyInfo&&vb.joinWebProxyAP(t.sid,{lts:c,sucess:1,apServerAddr:o,turnServerAddrList:e.proxyInfo.addresses.map((e=>e.ip)).join(\",\"),errorCode:null,eventType:t.cloudProxyServer,unilbsServerIds:a.toString()}),!1)),(e=>e.code!==Ry.OPERATION_ABORTED&&(e.code===Ry.CAN_NOT_GET_GATEWAY_SERVER?e.data.retry:(vb.joinWebProxyAP(t.sid,{lts:c,sucess:0,apServerAddr:o,turnServerAddrList:null,errorCode:e.code,eventType:t.cloudProxyServer,unilbsServerIds:a.toString(),extend:JSON.stringify({networkState:u})}),fb.warning(\"[\".concat(t.clientId,\"] multi unilbs network error, retry\"),e),!0))),n)}const Mx=(e,t,i,n,r,o)=>{const{sid:s,clientId:a,cloudProxyServer:c}=i,d=[],l=a=>{4096===a.flag?vb.joinChooseServer(s,{lts:n,succ:!1,csAddr:t,opid:e.opid,serverList:null,ec:a.error.message,csIp:a.error.data&&a.error.data.csIp,unilbsServerIds:r.toString(),isHttp3:o,corssRegionTagReq:i.apRequestDetail}):1048576!==a.flag&&4194304!==a.flag&&4194310!==a.flag||vb.joinWebProxyAP(s,{lts:n,sucess:0,apServerAddr:t,turnServerAddrList:null,errorCode:a.error.code,eventType:c,unilbsServerIds:r.toString()})};if(e.response_body.forEach((t=>{const i=t.buffer.code;if(23===t.uri&&0===i&&!t.buffer.edges_services)if(4194310===t.buffer.flag)fb.warning(\"no edge services in ap response of proxy fallback, will not set proxy in iceServers\"),t.buffer.edges_services=[];else{const i={error:new yb(Ry.CAN_NOT_GET_GATEWAY_SERVER,\"no edge services in ap response\",{retry:!0,csIp:e.detail[502]}),flag:t.buffer.flag};d.push(i),l(i)}if(0!==i){const n=wO(i),r={error:new yb(Ry.CAN_NOT_GET_GATEWAY_SERVER,n.desc,{desc:n.desc,retry:n.retry,csIp:e.detail[502]}),flag:t.buffer.flag};4194310===t.buffer.flag?fb.warning(r.error.toString()):d.push(r),l(r)}})),d.length)throw fb.warning(\"[\".concat(a||\"sid-\".concat(s.slice(0,6)),\"] multi unilbs \").concat(t,\" failed, \").concat(d.map((e=>\"flag: \".concat(e.flag,\", message: \").concat(e.error.message,\", retry: \").concat(e.error.data.retry))).join(\" | \"))),new yb(Ry.CAN_NOT_GET_GATEWAY_SERVER,d.map((e=>\"flag: \".concat(e.flag,\", message: \").concat(e.error.message))).join(\" | \"),{retry:!!d.find((e=>e.error.data.retry)),csIp:e.detail[502],desc:[...new Set(d.map((e=>{var t;return null==e||null===(t=e.error)||void 0===t||null===(t=t.data)||void 0===t?void 0:t.desc})).filter((e=>!!e)))]})},Ux=e=>{var t,i,n,r;if(e.addresses&&0===e.addresses.length&&0===e.code)throw new yb(Ry.CAN_NOT_GET_GATEWAY_SERVER,\"void gateway address\",{retry:!0,csIp:e.detail&&e.detail[502]});XA(\"AP_AREA\")&&(null!==(n=e.detail)&&void 0!==n&&n[23]&&\"string\"==typeof(null===(r=e.detail)||void 0===r?void 0:r[23])?Ax(e.detail[23].toLowerCase()):Ax());if(null!==(t=e.detail)&&void 0!==t&&t[19]&&\"string\"==typeof(null===(i=e.detail)||void 0===i?void 0:i[19])){const t=e.detail[19],i=null==t?void 0:t.split(\";\");for(let t=0;t<i.length;t++){var o;const n=jp(o=i[t]).call(o);e.addresses[t]&&i&&(e.addresses[t].fingerprint=n)}}if(XA(\"GATEWAY_ADDRESS\")&&XA(\"GATEWAY_ADDRESS\").length>0){fb.debug(\"assign gateway address to\",XA(\"GATEWAY_ADDRESS\"));const t=XA(\"GATEWAY_ADDRESS\").map((t=>{var i,n;const r=null!==(i=null===(n=e.addresses.find((e=>e.ip===t.ip&&e.port===t.port)))||void 0===n?void 0:n.fingerprint)&&void 0!==i?i:\"\";return{ip:t.ip,port:t.port,ticket:e.addresses[0]&&e.addresses[0].ticket,fingerprint:r}}));e.addresses=t}},xx=(e,t)=>{if(e.response_body&&e.response_body.length){const t=e.response_body[0];if(0!==t.buffer.code){const e=wO(t.buffer.code);throw new yb(Ry.UPDATE_TICKET_FAILED,\"[\".concat(t.buffer.code,\"]: \").concat(e.desc),{retry:e.retry})}return t.buffer.ticket}throw fb.debug(\"update ticket request received ap response without response body:\",t),new yb(Ry.UPDATE_TICKET_FAILED,\"cannot find response body from ap response\",{retry:!1})},Vx=(e,t,i)=>{const n=Math.floor(Math.random()*10**12),r={appid:e.appId,client_ts:Date.now(),opid:n,sid:e.sid,request_bodies:[{uri:22,buffer:{cname:e.cname,detail:Ox(Ox({6:e.stringUid,11:t,12:XA(\"USE_NEW_TOKEN\")?\"1\":void 0,22:t},e.apRequestDetail?{33:e.apRequestDetail}:{}),e.apRTM?{26:\"RTM2\"}:{}),key:e.token,service_ids:i,uid:e.uid||0}}]};r.request_bodies.forEach((t=>{e.multiIP&&e.multiIP.gateway_ip&&(t.buffer.detail[5]=JSON.stringify({vocs_ip:[e.multiIP.uni_lbs_ip],vos_ip:[e.multiIP.gateway_ip]}))}));const o=new FormData;return o.append(\"request\",JSON.stringify(r)),[o,n]},Fx=(e,t)=>{const i=Math.floor(Math.random()*10**12),n={appid:e.appId,client_ts:Date.now(),opid:i,sid:e.sid,request_bodies:[{uri:28,buffer:{cname:e.cname,detail:{1:\"\",6:e.stringUid,12:\"1\"},token:e.token,service_ids:t,uid:e.uid||0,edges_services:e.apResponse.addresses.map((e=>({ip:e.ip,port:e.port})))}}]},r=new FormData;return r.append(\"request\",JSON.stringify(n)),[r,i]};let Bx=0;function jx(e){return Gh.all(e.map((e=>e.then((e=>{throw e}),(e=>e))))).then((e=>{throw e}),(e=>e))}const Gx=async e=>{let{fragementLength:t,referenceList:i,asyncMapHandler:n,allFailedhandler:r,promisesCollector:o}=e,s=0;const a=t;let c,d=0;const l=async()=>{const e=(()=>{const e=s*a,t=e+a;return i.slice(e,t).map(n)})();o&&o.push(...e);try{c=await jx(e)}catch(e){if(d+=a,s++,!(d>=i.length))return void await l();r(e)}e.forEach((e=>e.cancel()))};return await l(),c},Wx=async e=>{let{referenceList:t,asyncMapHandler:i,closeFn:n}=e;const r=t.length;let o=0;const s=async()=>{const e=i(t.shift());try{return await e}catch(e){if(o++,o>=r||null!=n&&n(e))throw e;return s()}};return s()};async function Hx(e,t,i,n){const r=async function(e,t,i,n){let r=null;const o=[],s=async()=>{const r=XA(\"WEBCS_DOMAIN\").slice(0,XA(\"AJAX_REQUEST_CONCURRENT\")).map((t=>({url:e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v2/transpond/webrtc?v=2\"):\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),areaCode:Sx()}))),s=n.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:r.map((e=>e.url))}),a=await Gx({fragementLength:XA(\"FRAGEMENT_LENGTH\"),referenceList:r,asyncMapHandler:n=>(fb.debug(\"[\".concat(e.clientId,\"] Connect to choose_server:\"),n.url),Lx(n,e,t,i)),allFailedhandler:e=>{throw n.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},s),e[0]},promisesCollector:o});return n.recordJoinChannelService({endTs:Date.now(),status:\"success\"},s),a},a=async()=>{if(await mA(1e3),null!==r)return r;const s=XA(\"WEBCS_DOMAIN_BACKUP_LIST\").map((t=>({url:e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v2/transpond/webrtc?v=2\"):\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),areaCode:Sx()}))),a=n.recordJoinChannelService({endTs:void 0,startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:s.map((e=>e.url))}),c=await Gx({fragementLength:XA(\"FRAGEMENT_LENGTH\"),referenceList:s,asyncMapHandler:n=>(fb.debug(\"[\".concat(e.clientId,\"] Connect to backup choose_server:\"),n.url),Lx(n,e,t,i)),allFailedhandler:e=>{throw n.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},a),e[0]},promisesCollector:o});return n.recordJoinChannelService({endTs:Date.now(),status:\"success\"},a),c};try{return r=await jx([s(),a()]),o.length&&o.forEach((e=>e.cancel&&\"function\"==typeof e.cancel&&e.cancel())),r}catch(e){throw e[0]}}(e,t,i,n);return{gatewayInfo:await r}}async function Kx(e,t,i,n,r){const o=e.cloudProxyServer;if(\"disabled\"===o){if(!n)return;if(e.useLocalAccessPoint)return await Hx(e,t,i,r);if(XA(\"JOIN_WITH_FALLBACK_MEDIA_PROXY\")){const{gatewayInfo:n,proxyInfo:o}=await Xx(e,t,i,r);if(e.turnServer&&\"auto\"!==e.turnServer.mode)return{gatewayInfo:n};const a=o.map((e=>({turnServerURL:e.address,tcpport:e.tcpport||KA.tcpport,udpport:e.udpport||KA.udpport,username:e.username||KA.username,password:e.password||KA.password,forceturn:!1,security:!0})));if(r.useP2P){var s;const t=null!==(s=e.uid)&&void 0!==s?s:n.uid,i=\"glb:\".concat(t.toString()),r=await Uy(i),c=o.map((e=>({turnServerURL:e.address,tcpport:e.tcpport||KA.tcpport,udpport:e.udpport||KA.udpport,username:i,password:r,forceturn:!1,security:!0})));a.push(...c)}return e.turnServer={mode:\"manual\",servers:a},{gatewayInfo:n}}return await Hx(e,t,i,r)}const{proxyInfo:a,gatewayInfo:c}=await Xx(e,t,i,r),d={gatewayInfo:c},l=a.map((e=>({turnServerURL:e.address,tcpport:\"proxy3\"===o?void 0:e.tcpport?e.tcpport:KA.tcpport,udpport:\"proxy4\"===o?void 0:e.udpport?e.udpport:KA.udpport,username:e.username||KA.username,password:e.password||KA.password,forceturn:\"proxy4\"!==o,security:\"proxy5\"===o})));if(r.useP2P){var u;const t=null!==(u=e.uid)&&void 0!==u?u:c.uid,i=\"glb:\".concat(t.toString()),n=await Uy(i),r=a.map((e=>({turnServerURL:e.address,tcpport:\"proxy3\"===o?void 0:e.tcpport||KA.tcpport,udpport:\"proxy4\"===o?void 0:e.udpport||KA.udpport,username:i,password:n,forceturn:\"proxy4\"!==o,security:\"proxy5\"===o})));l.push(...r)}return e.turnServer={mode:\"manual\",servers:l},fb.debug(\"[\".concat(e.clientId,\"] set proxy server: \").concat(e.proxyServer,\", mode: \").concat(o)),d}async function Yx(e,t,i,n,r){const o=XA(\"ACCOUNT_REGISTER\").slice(0,XA(\"AJAX_REQUEST_CONCURRENT\"));let s=[];s=t.proxyServer?o.map((e=>\"https://\".concat(t.proxyServer,\"/ap/?url=\").concat(e+\"/api/v1\"))):o.map((e=>\"https://\".concat(e,\"/api/v1\")));const a=null==r?void 0:r.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"stringUID\",urls:s});try{const o=await async function(e,t,i,n,r){const o=Date.now(),s={sid:i.sid,opid:10,appid:i.appId,string_uid:t};let a=e[0];const c=await kA((()=>Tx(a+\"\".concat(-1===a.indexOf(\"?\")?\"?\":\"&\",\"action=stringuid\"),{data:s,cancelToken:n,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":72}})),((i,n)=>{if(0===i.code){if(i.uid<=0||i.uid>=Math.pow(2,32))throw fb.error(\"Invalid Uint Uid \".concat(t,\" => \").concat(i.uid),i),vb.reqUserAccount(s.sid,{lts:o,success:!1,serverAddr:a,stringUid:s.string_uid,uid:i.uid,errorCode:Ry.INVALID_UINT_UID_FROM_STRING_UID,extend:s}),new yb(Ry.INVALID_UINT_UID_FROM_STRING_UID);return vb.reqUserAccount(s.sid,{lts:o,success:!0,serverAddr:a,stringUid:s.string_uid,uid:i.uid,errorCode:null,extend:s}),!1}const r=wO(i.code);return r.retry&&(a=e[(n+1)%e.length]),vb.reqUserAccount(s.sid,{lts:o,success:!1,serverAddr:a,stringUid:s.string_uid,uid:i.uid,errorCode:r.desc,extend:s}),r.retry}),((t,i)=>t.code!==Ry.OPERATION_ABORTED&&(vb.reqUserAccount(s.sid,{lts:o,success:!1,serverAddr:a,stringUid:s.string_uid,uid:null,errorCode:t.code,extend:s}),a=e[(i+1)%e.length],!0)),r);if(0!==c.code){const e=wO(c.code);throw new yb(Ry.UNEXPECTED_RESPONSE,e.desc)}return c}(s,e,t,i,n);return null==r||r.recordJoinChannelService({status:\"success\",endTs:Date.now()},a),o.uid}catch(e){throw null==r||r.recordJoinChannelService({status:\"error\",endTs:Date.now(),errors:[e]},a),e}}async function qx(e,t,i){const n=XA(\"ACCOUNT_REGISTER\");let r=[];r=t.proxyServer?n.map((e=>\"https://\".concat(t.proxyServer,\"/ap/?url=\").concat(e+\"/api/v1\"))):n.map((e=>\"https://\".concat(e,\"/api/v1\")));try{const n=await Wx({referenceList:r,asyncMapHandler:n=>async function(e,t,i,n){const r=Date.now(),o={sid:i.sid,opid:10,appid:i.appId,string_uid:t};try{const t=await Tx(e+\"\".concat(-1===e.indexOf(\"?\")?\"?\":\"&\",\"action=stringuid\"),{data:o,cancelToken:n,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":72}});if(0!==t.code){const e=wO(t.code);throw new yb(Ry.UNEXPECTED_RESPONSE,\"preload sua error:\".concat(e.desc),e)}if(t.uid<=0||t.uid>=Math.pow(2,32))throw new yb(Ry.INVALID_UINT_UID_FROM_STRING_UID);return{requestTime:r,url:e,req:o,uid:t.uid,elapse:Date.now()-r}}catch(e){throw e}}(n,e,t,i),closeFn:e=>e.code===Ry.OPERATION_ABORTED||e.code===Ry.UNEXPECTED_RESPONSE&&!e.data.retry});return n}catch(e){throw e}}async function zx(e,t,i){const n=XA(\"CDS_AP\").slice(0,XA(\"AJAX_REQUEST_CONCURRENT\")).map((t=>e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v1\"):\"https://\".concat(t,\"/api/v1?action=config\"))),r=n.map((n=>function(e,t,i,n){const r=Hv(),o={flag:64,cipher_method:0,features:{device:r.name,system:r.os,system_general:navigator.userAgent,vendor:t.appId,version:GA,cname:t.cname,sid:t.sid,session_id:t.sid,detail:\"\",proxyServer:t.proxyServer}};return kA((()=>Tx(e,{data:o,timeout:1e3,cancelToken:i,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":54}})),void 0,(e=>e.code!==Ry.OPERATION_ABORTED),n)}(n,e,t,i)));let o=null,s=null,a={};try{o=await jx(r)}catch(e){if(e.code===Ry.OPERATION_ABORTED)throw e;s=e}r.forEach((e=>e.cancel()));if(vb.reportApiInvoke(e.sid,{name:By.REQUEST_CONFIG_DISTRIBUTE,options:{error:s,res:o}}).onSuccess(),o&&o.test_tags)try{a=function(e){if(!e.test_tags)return{};const t=e.test_tags,i=Object.keys(t),n={};return i.forEach((e=>{var i;const r=jp(i=e.slice(4)).call(i),o=JSON.parse(t[e])[1];n[r]=o})),n}(o)}catch(e){}return a}async function Jx(e,t){const i=XA(\"WEBCS_DOMAIN\").concat(XA(\"WEBCS_DOMAIN_BACKUP_LIST\")).map((e=>({url:\"https://\".concat(e,\"/api/v2/transpond/webrtc?v=2\"),areaCode:Sx(),serviceIds:[YO.CHOOSE_SERVER,YO.CLOUD_PROXY_FALLBACK]})));try{const n=await Wx({referenceList:i,asyncMapHandler:i=>async function(e,t,i){let n,{url:r,areaCode:o,serviceIds:s}=e;const a=Date.now(),[c,d]=Vx(t,o,s);let l=iA.networkState;try{l&&iA.networkState===Xy.OFFLINE&&iA.onlineWaiter&&await Gh.race([iA.onlineWaiter,mA(PA.maxRetryTimeout)]),l=iA.networkState;const{data:e,headers:t}=await Tx(r,{data:c,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0,!0);n=\"1\"===t.http3?1:-1;const o=e=>{const t=[];if(e.response_body.forEach((i=>{const n=i.buffer.code;if(23===i.uri&&0===n&&!i.buffer.edges_services)if(4194310===i.buffer.flag)i.buffer.edges_services=[];else{const n={error:new yb(Ry.CAN_NOT_GET_GATEWAY_SERVER,\"no edge services in ap response\",{retry:!0,csIp:e.detail[502]}),flag:i.buffer.flag};t.push(n)}if(0!==n){const r=wO(n),o={error:new yb(Ry.CAN_NOT_GET_GATEWAY_SERVER,r.desc,{desc:r.desc,retry:r.retry,csIp:e.detail[502]}),flag:i.buffer.flag};4194310===i.buffer.flag?fb.warning(o.error.toString()):t.push(o)}})),t.length)throw new yb(Ry.CAN_NOT_GET_GATEWAY_SERVER,t.map((e=>\"flag: \".concat(e.flag,\", message: \").concat(e.error.message))).join(\" | \"),{retry:!!t.find((e=>e.error.data.retry)),csIp:e.detail[502],desc:[...new Set(t.map((e=>{var t;return null==e||null===(t=e.error)||void 0===t||null===(t=t.data)||void 0===t?void 0:t.desc})).filter((e=>!!e)))]})};o(e);const s=eN(e,YO.CHOOSE_SERVER),u=eN(e,YO.CLOUD_PROXY_FALLBACK);return Ux(s),{gatewayInfo:XO(s,r),proxyInfo:u,opid:d,requestTime:a,url:r,isHttp3:n,elapse:Date.now()-a}}catch(e){throw e}}(i,e,t),closeFn:e=>e.code===Ry.OPERATION_ABORTED||e.code===Ry.CAN_NOT_GET_GATEWAY_SERVER&&!e.data.retry});return n}catch(e){throw e}}async function Xx(e,t,i,n){const r=XA(\"PROXY_SERVER_TYPE3\"),o=(e,t,i)=>{let n=i||r;return Array.isArray(n)&&(n=t%2==0?r[1]:r[0]),\"https://\".concat(n,\"/ap/?url=\").concat(e)};let s=null;const a=[],c=async()=>{const r=XA(\"WEBCS_DOMAIN\").slice(0,XA(\"AJAX_REQUEST_CONCURRENT\")).map(((t,i)=>{let n;return n=\"disabled\"===e.cloudProxyServer&&e.proxyServer?o(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i,e.proxyServer):\"disabled\"===e.cloudProxyServer||\"fallback\"===e.cloudProxyServer?\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"):o(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i),{url:n,areaCode:Sx(),serviceIds:[YO.CHOOSE_SERVER,\"proxy5\"===e.cloudProxyServer?YO.CLOUD_PROXY_5:\"proxy3\"===e.cloudProxyServer||\"proxy4\"===e.cloudProxyServer?YO.CLOUD_PROXY:YO.CLOUD_PROXY_FALLBACK]}})),s=n.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:r.map((e=>e.url))}),c=await Gx({fragementLength:XA(\"FRAGEMENT_LENGTH\"),referenceList:r,asyncMapHandler:n=>(fb.debug(\"[\".concat(e.clientId,\"] Connect to choose_server:\"),n.url),kx(n,e,t,i)),allFailedhandler:e=>{throw n.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},s),e[0]},promisesCollector:a});return n.recordJoinChannelService({endTs:Date.now(),status:\"success\"},s),c},d=async()=>{if(await mA(1e3),null!==s)return s;const r=XA(\"WEBCS_DOMAIN_BACKUP_LIST\").map(((t,i)=>{let n;return n=\"disabled\"===e.cloudProxyServer&&e.proxyServer?o(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i,e.proxyServer):\"disabled\"===e.cloudProxyServer||\"fallback\"===e.cloudProxyServer?\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"):o(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i),{url:n,areaCode:Sx(),serviceIds:[YO.CHOOSE_SERVER,\"proxy5\"===e.cloudProxyServer?YO.CLOUD_PROXY_5:\"proxy3\"===e.cloudProxyServer||\"proxy4\"===e.cloudProxyServer?YO.CLOUD_PROXY:YO.CLOUD_PROXY_FALLBACK]}})),c=n.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:r.map((e=>e.url))}),d=await Gx({fragementLength:XA(\"FRAGEMENT_LENGTH\"),referenceList:r,asyncMapHandler:n=>(fb.debug(\"[\".concat(e.clientId,\"] Connect to backup choose_server:\"),n.url),kx(n,e,t,i)),allFailedhandler:e=>{throw n.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},c),e[0]},promisesCollector:a});return n.recordJoinChannelService({endTs:Date.now(),status:\"success\"},c),d};let l,u,h;try{({gatewayInfo:l,proxyInfo:u,url:h}=await jx([c(),d()]))}catch(e){throw e[0]}if(a.length&&a.forEach((e=>e.cancel&&\"function\"==typeof e.cancel&&e.cancel())),!l||!u)throw new yb(Ry.UNEXPECTED_ERROR,\"missing gateway or proxy response\").print();if(e.apUrl=h,\"disabled\"!==e.cloudProxyServer&&Array.isArray(r)&&h){const t=/^https?:\\/\\/(.+?)(\\/.*)?$/.exec(h)[1];Dn(r).call(r,t)&&(e.proxyServer=t,fb.setProxyServer(t),vb.setProxyServer(t))}return s={gatewayInfo:l,proxyInfo:await tN(u,l.uid)},s}async function Qx(e,t,i){const n=XA(\"UAP_AP\").slice(0,XA(\"AJAX_REQUEST_CONCURRENT\")).map((t=>e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v1?action=uap\"):\"https://\".concat(t,\"/api/v1?action=uap\"))),r=n.map((n=>function(e,t,i,n){const r={command:\"convergeAllocateEdge\",sid:t.sid,appId:t.appId,token:t.token,ts:Date.now(),version:GA,cname:t.cname,uid:t.uid.toString(),requestId:Px,seq:Px};Px+=1;const o={service_name:\"tele_channel\",json_body:JSON.stringify(r)};return kA((async()=>{const t=await Tx(e,{data:o,cancelToken:i,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":61}});if(0!==t.code){const e=new yb(Ry.UNEXPECTED_RESPONSE,\"cross channel ap error, code\"+t.code,{retry:!0});throw fb.error(e.toString()),e}const n=JSON.parse(t.json_body);if(200!==n.code){const e=new yb(Ry.UNEXPECTED_RESPONSE,\"cross channel app center error, code: \".concat(n.code,\", reason: \").concat(n.reason));throw fb.error(e.toString()),e}if(!n.servers||0===n.servers.length){const e=new yb(Ry.UNEXPECTED_RESPONSE,\"cross channel app center empty server\");throw fb.error(e.toString()),e}return{vid:n.vid,workerToken:n.workerToken,addressList:(XA(\"CHANNEL_MEDIA_RELAY_SERVERS\")||n.servers).map((e=>\"wss://\".concat(e.address.replace(/\\./g,\"-\"),\".\").concat(XA(\"WORKER_DOMAIN\"),\":\").concat(e.wss)))}}),void 0,(e=>!!(e.code!==Ry.OPERATION_ABORTED&&e.code!==Ry.UNEXPECTED_RESPONSE||e.data&&e.data.retry)),n)}(n,e,t,i)));try{const e=await jx(r);return r.forEach((e=>e.cancel())),e}catch(e){throw e[0]}}async function Zx(e,t,i){let n=null;const r=[],o=async o=>{const s=XA(o?\"WEBCS_DOMAIN_BACKUP_LIST\":\"WEBCS_DOMAIN\").map((t=>e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v2/transpond/webrtc?v=2\"):\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\")));return o&&(await mA(1e3),null!==n)?n:await Gx({fragementLength:XA(\"FRAGEMENT_LENGTH\"),referenceList:s,asyncMapHandler:n=>(fb.debug(\"[\".concat(e.clientId,\"] update ticket, Connect to \").concat(o?\"backup\":\"\",\" choose_server:\"),n),function(e,t,i,n){const[r]=Fx(t,[YO.CHOOSE_SERVER]);let o=iA.networkState;return kA((async()=>{o&&iA.networkState===Xy.OFFLINE&&iA.onlineWaiter&&await Gh.race([iA.onlineWaiter,mA(n&&n.maxRetryTimeout||PA.maxRetryTimeout)]),o=iA.networkState;const t=await Tx(e,{data:r,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0);return xx(t,e)}),(()=>!1),(e=>e.code!==Ry.OPERATION_ABORTED&&(e.code===Ry.UPDATE_TICKET_FAILED?e.data.retry:(fb.warning(\"[\".concat(t.clientId,\"] update ticket network error, retry\"),e),!0))),n)}(n,e,t,i)),allFailedhandler:e=>{throw e[0]},promisesCollector:r})};try{return n=await jx([o(!1),o(!0)]),r.length&&r.forEach((e=>e.cancel&&\"function\"==typeof e.cancel&&e.cancel())),n}catch(e){throw e[0]}}function $x(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function eV(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?$x(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):$x(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class tV extends xy{get isSuccess(){return!!this.configs}constructor(){super(),Fg(this,\"configs\",void 0),Fg(this,\"joinInfo\",void 0),Fg(this,\"cancelToken\",void 0),Fg(this,\"retryConfig\",{timeout:3e3,timeoutFactor:1.5,maxRetryCount:1,maxRetryTimeout:1e4}),Fg(this,\"interval\",void 0),Fg(this,\"mutex\",new NA(\"config-distribute\")),Fg(this,\"mutableParamsRead\",!1)}startGetConfigDistribute(e,t){this.joinInfo=e,this.cancelToken=t,this.interval&&this.stopGetConfigDistribute(),XA(\"ENABLE_CONFIG_DISTRIBUTE\")&&(this.updateConfigDistribute(),this.interval=window.setInterval((()=>{this.updateConfigDistribute()}),XA(\"CONFIG_DISTRIBUTE_INTERVAL\")))}stopGetConfigDistribute(){this.interval&&clearInterval(this.interval),this.interval=void 0,this.joinInfo=void 0,this.cancelToken=void 0}async awaitConfigDistributeComplete(){if(!this.mutex.isLocked)return;(await this.mutex.lock())()}async updateConfigDistribute(){if(!this.mutableParamsRead){this.mutableParamsRead=!0;vb.reportApiInvoke(null,{options:void 0,name:By.LOAD_CONFIG_FROM_LOCALSTORAGE,tag:jy.TRACER}).onSuccess(JSON.stringify(QA))}if(!this.joinInfo||!this.cancelToken||!this.retryConfig)return void fb.debug(\"[config-distribute] get config distribute interrupted have no joininfo\");let e;const t=await this.mutex.lock();try{e=await zx(this.joinInfo,this.cancelToken,this.retryConfig),fb.debug(\"[config-distribute] get config distribute\",JSON.stringify(e)),e.limit_bitrate&&this.handleBitrateLimit(e.limit_bitrate),this.cacheGlobalParameterConfig(e),this.configs=e}catch(e){const t=new yb(Ry.NETWORK_RESPONSE_ERROR,e);fb.warning(\"[config-distribute] \".concat(t.toString()))}finally{t()}}getBitrateLimit(){return this.configs?this.configs.limit_bitrate:void 0}handleBitrateLimit(e){var t;(t=e)&&t.uplink&&t.id&&void 0!==t.uplink.max_bitrate&&void 0!==t.uplink.min_bitrate&&(this.configs&&this.configs.limit_bitrate?this.configs&&this.configs.limit_bitrate&&this.configs.limit_bitrate.id!==e.id&&this.emit(sO.UPDATE_BITRATE_LIMIT,e):this.emit(sO.UPDATE_BITRATE_LIMIT,e))}getLowStreamConfigDistribute(){return this.configs&&this.configs.limit_bitrate&&eV({},this.configs.limit_bitrate.low_stream_uplink)}cacheGlobalParameterConfig(e){var t;const i=aE(t=Object.keys(e).filter((e=>/^webrtc_ng_global_parameter/.test(e)))).call(t);for(let t=0;t<i.length;t++)for(let n=i.length-1;n>t;n--){const t=i[n];if(\"number\"==typeof e[t].__priority){const r=e[t].__priority,o=i[n-1];if(\"number\"==typeof e[o].__priority){if(!(r>e[o].__priority))continue;{const e=t;i[n]=i[n-1],i[n-1]=e}}else{const e=t;i[n]=i[n-1],i[n-1]=e}}}const n={};i.forEach((t=>{const i=e[t],r=i.__expires;Object.keys(i).forEach((e=>{\"__priority\"===e||\"__expires\"===e||Object.prototype.hasOwnProperty.call(n,e)||(n[e]=eV({value:i[e]},r&&{expires:r}))}))}));try{!function(e){try{const t=Date.now();Object.keys(e).forEach((i=>{switch(i){case\"ENABLE_EVENT_REPORT\":case\"UPLOAD_LOG\":case\"ENABLE_AG_ADAPTATION\":case\"FORCE_AG_HIGH_FRAMERATE\":case\"FORCE_SUPPORT_AG_ADAPTATION\":case\"ENCODER_CONFIG_LIMIT\":case\"CAMERA_CAPTURE_CONFIG\":case\"ENABLE_PRELOAD\":if(Object.prototype.hasOwnProperty.call(zA,i)){const{value:n,expires:r}=e[i];if(r&&r<=t)return;QA[i]=n,zA[i]=n,fb.debug(\"Update global parameters from config distribute\",i,n)}}}))}catch(t){fb.error(\"Error update config immediately: \".concat(e),t.message)}}(n);const e=JSON.stringify(n),t=window.btoa(e);window.localStorage.setItem(\"websdk_ng_global_parameter\",t),fb.debug(\"Caching global parameters \".concat(e))}catch(e){fb.error(\"Error caching global parameters:\",e.message)}}}class iV extends xy{constructor(){super(...arguments),Fg(this,\"resultStorage\",new Map)}setLocalAudioStats(e,t,i){this.record(\"AUDIO_INPUT_LEVEL_TOO_LOW\",e,this.checkAudioInputLevel(i,t)),this.record(\"SEND_AUDIO_BITRATE_TOO_LOW\",e,this.checkSendAudioBitrate(i,t))}setLocalVideoStats(e,t,i){this.record(\"SEND_VIDEO_BITRATE_TOO_LOW\",e,this.checkSendVideoBitrate(i,t)),this.record(\"FRAMERATE_INPUT_TOO_LOW\",e,this.checkFramerateInput(i,t)),this.record(\"FRAMERATE_SENT_TOO_LOW\",e,this.checkFramerateSent(i))}setRemoteAudioStats(e,t){const i=e.getUserId();this.record(\"AUDIO_OUTPUT_LEVEL_TOO_LOW\",i,this.checkAudioOutputLevel(t))}setRemoteVideoStats(e,t){const i=e.getUserId();this.record(\"RECV_VIDEO_DECODE_FAILED\",i,this.checkVideoDecode(t))}record(e,t,i){if(XA(\"STATS_UPDATE_INTERVAL\")>500)return;this.resultStorage.has(e)||this.resultStorage.set(e,{result:[],isPrevNormal:!0});const n=this.resultStorage.get(e);if(n&&(n.result.push(i),n.result.length>=5)){var r;const i=Dn(r=n.result).call(r,!0);n.isPrevNormal&&!i&&this.emit(\"exception\",nV[e],e,t),!n.isPrevNormal&&i&&this.emit(\"exception\",nV[e]+2e3,e+\"_RECOVER\",t),n.isPrevNormal=i,n.result=[]}}checkAudioOutputLevel(e){return!(e.receiveBitrate>0&&0===e.receiveLevel)}checkAudioInputLevel(e,t){return t instanceof RM&&!t.isActive||(!!t.muted||0!==e.sendVolumeLevel)}checkFramerateInput(e,t){let i=null;t._encoderConfig&&t._encoderConfig.frameRate&&(i=QO(t._encoderConfig.frameRate));const n=e.captureFrameRate;return!i||!n||!(i>10&&n<5||i<10&&i>=5&&n<=1)}checkFramerateSent(e){return!(e.captureFrameRate&&e.sendFrameRate&&e.captureFrameRate>5&&e.sendFrameRate<=1)}checkSendVideoBitrate(e,t){return!!t.muted||0!==e.sendBitrate}checkSendAudioBitrate(e,t){return t instanceof RM&&!t.isActive||(!!t.muted||0!==e.sendBitrate)}checkVideoDecode(e){return 0===e.receiveBitrate||0!==e.decodeFrameRate}}const nV={FRAMERATE_INPUT_TOO_LOW:1001,FRAMERATE_SENT_TOO_LOW:1002,SEND_VIDEO_BITRATE_TOO_LOW:1003,RECV_VIDEO_DECODE_FAILED:1005,AUDIO_INPUT_LEVEL_TOO_LOW:2001,AUDIO_OUTPUT_LEVEL_TOO_LOW:2002,SEND_AUDIO_BITRATE_TOO_LOW:2003};const rV=new class{markSubscribeStart(e,t){performance.mark(\"agora-web-sdk/\".concat(e,\"/subscribe-\").concat(t))}markPublishStart(e,t){performance.mark(\"agora-web-sdk/\".concat(e,\"/publish-\").concat(t))}measureFromSubscribeStart(e,t){const i=performance.getEntriesByName(\"agora-web-sdk/\".concat(e,\"/subscribe-\").concat(t));if(i.length>0){const e=i[i.length-1];return Math.round(performance.now()-e.startTime)}return 0}measureFromPublishStart(e,t){const i=performance.getEntriesByName(\"agora-web-sdk/\".concat(e,\"/publish-\").concat(t));if(i.length>0){const e=i[i.length-1];return Math.round(performance.now()-e.startTime)}return 0}};var oV=i(ie.Object.getOwnPropertySymbols),sV=wi,aV=qi.indexOf,cV=Bn,dV=v([].indexOf),lV=!!dV&&1/dV([1],1,-0)<0;sV({target:\"Array\",proto:!0,forced:lV||!cV(\"indexOf\")},{indexOf:function(e){var t=arguments.length>1?arguments[1]:void 0;return lV?dV(this,e,t)||0:aV(this,e,t)}});var uV=Xi(\"Array\").indexOf,hV=l,pV=uV,_V=Array.prototype,EV=function(e){var t=e.indexOf;return e===_V||hV(_V,e)&&t===_V.indexOf?pV:t},fV=i(EV);function mV(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},o=Wb(e);for(n=0;n<o.length;n++)i=o[n],fV(t).call(t,i)>=0||(r[i]=e[i]);return r}(e,t);if(oV){var o=oV(e);for(n=0;n<o.length;n++)i=o[n],fV(t).call(t,i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}function TV(e){if(Array.isArray(e))return e.map((e=>e));if(!SV(e))return e;const t={};for(const i in e){const n=e[i];SV(n)||Array.isArray(n)?t[i]=TV(n):t[i]=n}return t}function SV(e){return!(\"object\"!=typeof e||Array.isArray(e)||!e)}class gV{constructor(e){Fg(this,\"input\",[]),Fg(this,\"size\",void 0),this.size=e}add(e){this.input.push(e),this.input.length>this.size&&this.input.splice(0,1)}diffMean(){return 0===this.input.length?0:(this.input[this.input.length-1]-this.input[0])/this.input.length}}const RV={address:\"unknown\",candidateType:\"unknown\",id:\"unknown\",port:0,priority:0,protocol:\"unknown\",type:\"unknown\"},CV={timestamp:0,bitrate:{actualEncoded:0,transmit:0},sendPacketLossRate:0,recvPacketLossRate:0,videoRecv:[],videoSend:[],audioRecv:[],audioSend:[],selectedCandidatePair:{id:\"unknown\",localCandidate:RV,remoteCandidate:RV}},IV={firsCount:0,nacksCount:0,plisCount:0,framesDecodeCount:0,framesDecodeInterval:0,framesDecodeFreezeTime:0,decodeFrameRate:0,bytes:0,packetsLost:0,packetLostRate:0,packets:0,ssrc:0,qpSumPerFrame:0,framesDroppedCount:0,outputFrameRate:0},vV={firsCount:0,nacksCount:0,plisCount:0,frameCount:0,bytes:0,packets:0,packetsLost:0,packetLostRate:0,ssrc:0,rttMs:0,jitterMs:0,qpSumPerFrame:0},yV={bytes:0,packets:0,packetsLost:0,packetLostRate:0,ssrc:0,rttMs:0,jitterMs:0},AV={jitterBufferMs:0,jitterMs:0,bytes:0,packetsLost:0,packetLostRate:0,packetsDiscarded:0,packets:0,ssrc:0,receivedFrames:0,droppedFrames:0,concealedSamples:0};function bV(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function wV(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?bV(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):bV(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class OV{constructor(e,t){Fg(this,\"onFirstVideoReceived\",void 0),Fg(this,\"onFirstVideoDecoded\",void 0),Fg(this,\"onFirstAudioReceived\",void 0),Fg(this,\"onFirstVideoDecodedTimeout\",void 0),Fg(this,\"onFirstAudioDecoded\",void 0),Fg(this,\"onSelectedLocalCandidateChanged\",void 0),Fg(this,\"onSelectedRemoteCandidateChanged\",void 0),Fg(this,\"videoIsReady\",!1),Fg(this,\"videoIsReady2\",{}),Fg(this,\"pc\",void 0),Fg(this,\"options\",void 0),Fg(this,\"intervalTimer\",void 0),Fg(this,\"stats\",TV(CV)),Fg(this,\"isFirstVideoReceived\",{}),Fg(this,\"isFirstVideoDecoded\",{}),Fg(this,\"isFirstAudioReceived\",{}),Fg(this,\"isFirstAudioDecoded\",{}),Fg(this,\"isFirstVideoDecodedTimeout\",{}),Fg(this,\"lossRateWindowStats\",[]),this.pc=e,this.options=t,this.intervalTimer=window.setInterval((async()=>{this.updateStats()}),this.options.updateInterval)}getStats(){return this.stats}getSelectedCandidatePair(){return new Gh((e=>{e({local:wV({},RV),remote:wV({},RV)})}))}setVideoIsReady(e){this.videoIsReady=e}setVideoIsReady2(e,t){this.videoIsReady2[e]=t}getVideoIsReady(e){return this.videoIsReady2[e]||!1}setIsFirstAudioDecoded(e){}destroy(){window.clearInterval(this.intervalTimer),this.pc=void 0}calcLossRate(e){this.lossRateWindowStats.push(e),this.lossRateWindowStats.length>this.options.lossRateInterval&&this.lossRateWindowStats.splice(0,1);const t=this.lossRateWindowStats.length,i=[\"videoSend\",\"audioSend\",\"videoRecv\",\"audioRecv\"];let n=0,r=0,o=0,s=0;for(const a of i)e[a].forEach(((e,i)=>{if(!this.lossRateWindowStats[t-1][a][i]||!this.lossRateWindowStats[0][a][i])return;const c=this.lossRateWindowStats[t-1][a][i].packets-this.lossRateWindowStats[0][a][i].packets,d=this.lossRateWindowStats[t-1][a][i].packetsLost-this.lossRateWindowStats[0][a][i].packetsLost;\"videoSend\"===a||\"audioSend\"===a?(n+=c,o+=d):(r+=c,s+=d),Number.isNaN(c)||Number.isNaN(c)?e.packetLostRate=0:e.packetLostRate=c<=0||d<=0?0:d/(c+d)}));e.sendPacketLossRate=n<=0||o<=0?0:o/(n+o),e.recvPacketLossRate=r<=0||s<=0?0:s/(r+s)}}function NV(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function DV(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?NV(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):NV(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class PV extends OV{constructor(){super(...arguments),Fg(this,\"_stats\",CV),Fg(this,\"lastDecodeVideoReceiverStats\",new Map)}async updateStats(){const e=await this._getStats(),t=this.statsResponsesToObjects(e);this._stats=TV(CV);const i=t.filter((e=>\"ssrc\"===e.type));this.processSSRCStats(i);const n=t.find((e=>\"VideoBwe\"===e.type));n&&this.processBandwidthStats(n),this._stats.timestamp=Date.now(),this.calcLossRate(this._stats),this.stats=this._stats}processBandwidthStats(e){this._stats.bitrate={actualEncoded:Number(e.googActualEncBitrate),targetEncoded:Number(e.googTargetEncBitrate),retransmit:Number(e.googRetransmitBitrate),transmit:Number(e.googTransmitBitrate)},this._stats.sendBandwidth=Number(e.googAvailableSendBandwidth)}processSSRCStats(e){e.forEach((e=>{var t;const i=Dn(t=e.id).call(t,\"send\");switch(\"\".concat(e.mediaType,\"_\").concat(i?\"send\":\"recv\")){case\"video_send\":{const t=TV(vV);t.codec=e.googCodecName,t.adaptionChangeReason=\"none\",e.googCpuLimitedResolution&&(t.adaptionChangeReason=\"cpu\"),e.googBandwidthLimitedResolution&&(t.adaptionChangeReason=\"bandwidth\"),t.avgEncodeMs=Number(e.googAvgEncodeMs),t.inputFrame={width:Number(e.googFrameWidthInput)||Number(e.googFrameWidthSent),height:Number(e.googFrameHeightInput)||Number(e.googFrameHeightSent),frameRate:Number(e.googFrameRateInput)},t.sentFrame={width:Number(e.googFrameWidthSent),height:Number(e.googFrameHeightSent),frameRate:Number(e.googFrameRateInput)},t.firsCount=Number(e.googFirReceived),t.nacksCount=Number(e.googNacksReceived),t.plisCount=Number(e.googPlisReceived),t.frameCount=Number(e.framesEncoded),t.bytes=Number(e.bytesSent),t.packets=Number(e.packetsSent),t.packetsLost=Number(e.packetsLost),t.ssrc=Number(e.ssrc),t.rttMs=Number(e.googRtt||0),this._stats.videoSend.push(t),this._stats.rtt=t.rttMs;break}case\"video_recv\":{const t=TV(IV),i=this.lastDecodeVideoReceiverStats.get(Number(e.ssrc));if(t.codec=e.googCodecName,t.targetDelayMs=Number(e.googTargetDelayMs),t.renderDelayMs=Number(e.googRenderDelayMs),t.currentDelayMs=Number(e.googCurrentDelayMs),t.minPlayoutDelayMs=Number(e.googMinPlayoutDelayMs),t.decodeMs=Number(e.googDecodeMs),t.maxDecodeMs=Number(e.googMaxDecodeMs),t.receivedFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateReceived)},t.decodedFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateDecoded)},t.decodeFrameRate=Number(e.googFrameRateDecoded),t.outputFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateOutput)},t.jitterBufferMs=Number(e.googJitterBufferMs),t.firsCount=Number(e.googFirsSent),t.nacksCount=Number(e.googNacksSent),t.plisCount=Number(e.googPlisSent),t.framesDecodeCount=Number(e.framesDecoded),t.bytes=Number(e.bytesReceived),t.packets=Number(e.packetsReceived),t.packetsLost=Number(e.packetsLost),t.ssrc=Number(e.ssrc),t.packets>0&&!this.isFirstVideoReceived[t.ssrc]&&(this.onFirstVideoReceived&&this.onFirstVideoReceived(t.ssrc),this.isFirstVideoReceived[t.ssrc]=!0),t.framesDecodeCount>0&&!this.isFirstVideoDecoded[t.ssrc]&&(this.onFirstVideoDecoded&&this.onFirstVideoDecoded(t.ssrc,t.decodedFrame.width,t.decodedFrame.height),this.isFirstVideoDecoded[t.ssrc]=!0),i){const n=i.stats,r=Date.now()-i.lts;t.framesDecodeFreezeTime=n.framesDecodeFreezeTime,t.framesDecodeInterval=n.framesDecodeInterval,t.framesDecodeCount>n.framesDecodeCount&&this.isFirstVideoDecoded[t.ssrc]?(i.lts=Date.now(),t.framesDecodeInterval=r,t.framesDecodeInterval>=this.options.freezeRateLimit&&(this.getVideoIsReady(parseInt(e.ssrc,10))?t.framesDecodeFreezeTime+=t.framesDecodeInterval:this.setVideoIsReady2(parseInt(e.ssrc,10),!0))):t.framesDecodeCount<i.stats.framesDecodeCount&&(t.framesDecodeInterval=0)}this.lastDecodeVideoReceiverStats.set(t.ssrc,{stats:DV({},t),lts:Date.now()}),this._stats.videoRecv.push(t);break}case\"audio_recv\":{const t=TV(AV);t.codec=e.googCodecName,t.outputLevel=Math.abs(Number(e.audioOutputLevel))/32767,t.decodingCNG=Number(e.googDecodingCNG),t.decodingCTN=Number(e.googDecodingCTN),t.decodingCTSG=Number(e.googDecodingCTSG),t.decodingNormal=Number(e.googDecodingNormal),t.decodingPLC=Number(e.googDecodingPLC),t.decodingPLCCNG=Number(e.googDecodingPLCCNG),t.expandRate=Number(e.googExpandRate),t.accelerateRate=Number(e.googAccelerateRate),t.preemptiveExpandRate=Number(e.googPreemptiveExpandRate),t.secondaryDecodedRate=Number(e.googSecondaryDecodedRate),t.speechExpandRate=Number(e.googSpeechExpandRate),t.preferredJitterBufferMs=Number(e.googPreferredJitterBufferMs),t.jitterBufferMs=Number(e.googJitterBufferMs),t.jitterMs=Number(e.googJitterReceived),t.bytes=Number(e.bytesReceived),t.packets=Number(e.packetsReceived),t.packetsLost=Number(e.packetsLost),t.ssrc=Number(e.ssrc),t.receivedFrames=Number(e.googDecodingCTN)||Number(e.packetsReceived),t.droppedFrames=Number(e.googDecodingPLC)+Number(e.googDecodingPLCCNG)||Number(e.packetsLost),t.receivedFrames>0&&!this.isFirstAudioReceived[t.ssrc]&&(this.onFirstAudioReceived&&this.onFirstAudioReceived(t.ssrc),this.isFirstAudioReceived[t.ssrc]=!0),t.decodingNormal>0&&!this.isFirstAudioDecoded[t.ssrc]&&(this.onFirstAudioDecoded&&this.onFirstAudioDecoded(t.ssrc),this.isFirstAudioDecoded[t.ssrc]=!0),this._stats.audioRecv.push(t);break}case\"audio_send\":{const t=TV(yV);t.codec=e.googCodecName,t.inputLevel=Math.abs(Number(e.audioInputLevel))/32767,t.aecReturnLoss=Number(e.googEchoCancellationReturnLoss||0),t.aecReturnLossEnhancement=Number(e.googEchoCancellationReturnLossEnhancement||0),t.residualEchoLikelihood=Number(e.googResidualEchoLikelihood||0),t.residualEchoLikelihoodRecentMax=Number(e.googResidualEchoLikelihoodRecentMax||0),t.bytes=Number(e.bytesSent),t.packets=Number(e.packetsSent),t.packetsLost=Number(e.packetsLost),t.ssrc=Number(e.ssrc),t.rttMs=Number(e.googRtt||0),this._stats.rtt=t.rttMs,this._stats.audioSend.push(t);break}}}))}_getStats(){return new Gh(((e,t)=>{this.pc.getStats(e,t)}))}statsResponsesToObjects(e){const t=[];return e.result().forEach((e=>{const i={id:e.id,timestamp:e.timestamp.valueOf().toString(),type:e.type};e.names().forEach((t=>{i[t]=e.stat(t)})),t.push(i)})),t}}function LV(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function kV(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?LV(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):LV(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class MV extends OV{constructor(){super(...arguments),Fg(this,\"_stats\",CV),Fg(this,\"report\",void 0),Fg(this,\"lastDecodeVideoReceiverStats\",new Map),Fg(this,\"lastVideoFramesRecv\",new Map),Fg(this,\"lastVideoFramesSent\",new Map),Fg(this,\"lastVideoFramesDecode\",new Map),Fg(this,\"lastVideoFramesOutput\",new Map),Fg(this,\"lastVideoJBDelay\",new Map),Fg(this,\"lastAudioJBDelay\",new Map),Fg(this,\"mediaBytesSent\",new Map),Fg(this,\"mediaBytesRetransmit\",new Map),Fg(this,\"mediaBytesTargetEncode\",new Map),Fg(this,\"lastEncoderMs\",new Map)}async updateStats(){this.report=await this.pc.getStats(),this._stats=TV(CV),this.report.forEach((e=>{switch(e.type){case vw.OUTBOUND:case vw.INBOUND:{const t=e.mediaType||e.kind,i=!t&&\"frameWidth\"in e,n=!t&&!(\"frameWidth\"in e);e.type===vw.OUTBOUND?\"audio\"===t||n?this.processAudioOutboundStats(e):(\"video\"===t||i)&&this.processVideoOutboundStats(e):e.type===vw.INBOUND&&(\"audio\"===t||n?this.processAudioInboundStats(e):(\"video\"===t||i)&&this.processVideoInboundStats(e));break}case vw.TRANSPORT:{const t=this.report.get(e.selectedCandidatePairId);t&&this.processCandidatePairStats(t);break}case vw.CANDIDATE_PAIR:e.selected&&this.processCandidatePairStats(e)}})),this.updateSendBitrate(),this._stats.timestamp=Date.now(),this.calcLossRate(this._stats),this.stats=this._stats}async getSelectedCandidatePair(){const e=await this.pc.getStats(),t={local:kV({},RV),remote:kV({},RV)};return e.forEach((i=>{let n;if(i.type===vw.TRANSPORT&&(n=e.get(i.selectedCandidatePairId)),i.type===vw.CANDIDATE_PAIR&&i.selected&&(n=i),n){const i=(e,t)=>{e.type=t.type,e.id=t.id,t.address&&(e.address=t.address),t.candidateType&&(e.candidateType=t.candidateType),t.port&&(e.port=t.port),t.priority&&(e.priority=t.priority),t.protocol&&(e.protocol=t.protocol),t.relayProtocol&&(e.relayProtocol=t.relayProtocol)};if(n.localCandidateId){const r=e.get(n.localCandidateId);r&&i(t.local,r)}if(n.remoteCandidateId){const r=e.get(n.remoteCandidateId);r&&i(t.remote,r)}}})),t}processCandidatePairStats(e){if(this._stats.sendBandwidth=e.availableOutgoingBitrate||0,e.currentRoundTripTime&&(this._stats.rtt=1e3*e.currentRoundTripTime),this._stats.videoSend.forEach((t=>{e.currentRoundTripTime&&(t.rttMs=1e3*e.currentRoundTripTime)})),this._stats.audioSend.forEach((t=>{e.currentRoundTripTime&&(t.rttMs=1e3*e.currentRoundTripTime)})),this._stats.selectedCandidatePair.id=e.id,e.localCandidateId){const t=this.report.get(e.localCandidateId);t&&this.processCandidateStats(t)}if(e.remoteCandidateId){const t=this.report.get(e.remoteCandidateId);t&&this.processCandidateStats(t)}}processCandidateStats(e){let t;e.type===vw.LOCAL_CANDIDATE&&(t=this._stats.selectedCandidatePair.localCandidate),e.type===vw.REMOTE_CANDIDATE&&(t=this._stats.selectedCandidatePair.remoteCandidate),t&&(t.type=e.type,t.id=e.id,e.address&&(t.address=e.address),e.candidateType&&(t.candidateType=e.candidateType),e.port&&(t.port=e.port),e.priority&&(t.priority=e.priority),e.protocol&&(t.protocol=e.protocol),e.relayProtocol&&(t.relayProtocol=e.relayProtocol),e.type===vw.LOCAL_CANDIDATE&&this.stats.selectedCandidatePair.localCandidate.id!==t.id&&this.onSelectedLocalCandidateChanged&&this.onSelectedLocalCandidateChanged(kV({},t),kV({},this.stats.selectedCandidatePair.localCandidate)),e.type===vw.REMOTE_CANDIDATE&&this.stats.selectedCandidatePair.remoteCandidate.id!==t.id&&this.onSelectedRemoteCandidateChanged&&this.onSelectedRemoteCandidateChanged(kV({},t),kV({},this.stats.selectedCandidatePair.remoteCandidate)))}processAudioInboundStats(e){let t=this._stats.audioRecv.find((t=>t.ssrc===e.ssrc));t||(t=TV(AV),this._stats.audioRecv.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsReceived,t.packetsLost=e.packetsLost,t.packetsDiscarded=e.packetsDiscarded,t.bytes=e.bytesReceived,t.jitterMs=1e3*e.jitter,this.processAudioTrackReceiverStats(e,e.trackId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),t.receivedFrames||(t.receivedFrames=e.packetsReceived),t.droppedFrames||(t.droppedFrames=e.packetsLost),t.receivedFrames>0&&!this.isFirstAudioReceived[t.ssrc]&&(this.onFirstAudioReceived&&this.onFirstAudioReceived(t.ssrc),this.isFirstAudioReceived[t.ssrc]=!0),t.outputLevel&&t.outputLevel>0&&!this.isFirstAudioDecoded[t.ssrc]&&(this.onFirstAudioDecoded&&this.onFirstAudioDecoded(t.ssrc),this.isFirstAudioDecoded[t.ssrc]=!0),\"number\"==typeof e.concealedSamples&&(t.concealedSamples=e.concealedSamples)}processVideoInboundStats(e){let t=this._stats.videoRecv.find((t=>t.ssrc===e.ssrc));t||(t=TV(IV),this._stats.videoRecv.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsReceived,t.packetsLost=e.packetsLost,t.bytes=e.bytesReceived,t.firsCount=e.firCount,t.nacksCount=e.nackCount,t.plisCount=e.pliCount,t.framesDecodeCount=e.framesDecoded,t.framesDroppedCount=e.framesDropped,t.totalInterFrameDelay=e.totalInterFrameDelay,t.totalSquaredInterFrameDelay=e.totalSquaredInterFrameDelay,t.totalFreezesDuration=e.totalFreezesDuration;const i=this.lastDecodeVideoReceiverStats.get(t.ssrc),n=this.lastVideoFramesDecode.get(t.ssrc),r=this.lastVideoFramesOutput.get(t.ssrc),o=Date.now();if(t.framesDecodeCount>0&&!this.isFirstVideoDecoded[t.ssrc]){const e=t.decodedFrame?t.decodedFrame.width:0,i=t.decodedFrame?t.decodedFrame.height:0;this.onFirstVideoDecoded&&this.onFirstVideoDecoded(t.ssrc,e,i),this.isFirstVideoDecoded[t.ssrc]=!0}if(i){const n=i.stats,r=o-i.lts;t.framesDecodeFreezeTime=n.framesDecodeFreezeTime,t.framesDecodeInterval=n.framesDecodeInterval,!this.isFirstVideoDecoded[t.ssrc]&&r>this.options.firstVideoDecodedTimeout&&!this.isFirstVideoDecodedTimeout[t.ssrc]&&(this.onFirstVideoDecodedTimeout&&this.onFirstVideoDecodedTimeout(t.ssrc),this.isFirstVideoDecodedTimeout[t.ssrc]=!0),t.framesDecodeCount>n.framesDecodeCount&&this.isFirstVideoDecoded[t.ssrc]?(i.lts=Date.now(),t.framesDecodeInterval=r,t.framesDecodeInterval>=this.options.freezeRateLimit&&(this.getVideoIsReady(parseInt(e.ssrc))?t.framesDecodeFreezeTime+=t.framesDecodeInterval:this.setVideoIsReady2(parseInt(e.ssrc,10),!0))):t.framesDecodeCount<n.framesDecodeCount&&(t.framesDecodeInterval=0),e.framesDecoded&&e.qpSum&&(i.stats.framesDecodeCount>e.framesDecoded?t.qpSumPerFrame=e.qpSum/e.framesDecoded:t.qpSumPerFrame=(e.qpSum-i.qpSum)/(e.framesDecoded-i.stats.framesDecodeCount))}n&&o-n.lts>=800?(t.decodeFrameRate=Math.round((t.framesDecodeCount-n.count)/((o-n.lts)/1e3)),this.lastVideoFramesDecode.set(t.ssrc,{count:t.framesDecodeCount,lts:o,rate:t.decodeFrameRate})):n?t.decodeFrameRate=n.rate:this.lastVideoFramesDecode.set(t.ssrc,{count:t.framesDecodeCount,lts:o,rate:0}),t.framesDroppedCount&&e.framesReceived&&(r&&o-r.lts>=800?(t.outputFrameRate=Math.round((e.framesReceived-t.framesDroppedCount-r.count)/((o-r.lts)/1e3)),this.lastVideoFramesOutput.set(t.ssrc,{count:e.framesReceived-t.framesDroppedCount,lts:o,rate:Math.max(t.outputFrameRate,0)})):r?t.outputFrameRate=r.rate:this.lastVideoFramesOutput.set(t.ssrc,{count:e.framesReceived-t.framesDroppedCount,lts:o,rate:0})),e.totalDecodeTime&&(t.decodeMs=1e3*e.totalDecodeTime),this.processVideoTrackReceiverStats(e,e.trackId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),e.framerateMean&&(t.framesRateFirefox=e.framerateMean),t.packets>0&&!this.isFirstVideoReceived[t.ssrc]&&(this.onFirstVideoReceived&&this.onFirstVideoReceived(t.ssrc),this.isFirstVideoReceived[t.ssrc]=!0),this.lastDecodeVideoReceiverStats.set(t.ssrc,{stats:kV({},t),lts:i?i.lts:Date.now(),qpSum:e.qpSum})}processVideoOutboundStats(e){let t=this._stats.videoSend.find((t=>t.ssrc===e.ssrc));t||(t=TV(vV),this._stats.videoSend.push(t));const i=this.mediaBytesSent.get(e.ssrc);if(i)i.add(e.bytesSent);else{const t=new gV(10);t.add(e.bytesSent),this.mediaBytesSent.set(e.ssrc,t)}if(void 0!==e.retransmittedBytesSent){const t=this.mediaBytesRetransmit.get(e.ssrc);if(t)t.add(e.retransmittedBytesSent);else{const t=new gV(10);t.add(e.retransmittedBytesSent),this.mediaBytesRetransmit.set(e.ssrc,t)}}if(e.totalEncodedBytesTarget){const t=this.mediaBytesTargetEncode.get(e.ssrc);if(t)t.add(e.totalEncodedBytesTarget);else{const t=new gV(10);t.add(e.totalEncodedBytesTarget),this.mediaBytesTargetEncode.set(e.ssrc,t)}}if(t.ssrc=e.ssrc,t.bytes=e.bytesSent,t.packets=e.packetsSent,t.firsCount=e.firCount,t.nacksCount=e.nackCount,t.plisCount=e.pliCount,t.frameCount=e.framesEncoded,t.adaptionChangeReason=e.qualityLimitationReason,t.scalabilityMode=e.scalabilityMode,e.totalEncodeTime&&e.framesEncoded){const i=this.lastEncoderMs.get(e.ssrc);if(!i||i.lastFrameCount>e.framesEncoded)t.avgEncodeMs=1e3*e.totalEncodeTime/e.framesEncoded;else{const n=e.framesEncoded-i.lastFrameCount,r=e.totalEncodeTime-i.lastEncoderTime;t.avgEncodeMs=1e3*r/n}}if(e.framesEncoded&&e.qpSum){const i=this.lastEncoderMs.get(e.ssrc);!i||i.lastFrameCount>e.framesEncoded?t.qpSumPerFrame=e.qpSum/e.framesEncoded:t.qpSumPerFrame=(e.qpSum-i.lastQpSum)/(e.framesEncoded-i.lastFrameCount)}if(this.lastEncoderMs.set(e.ssrc,{lastFrameCount:e.framesEncoded,lastEncoderTime:e.totalEncodeTime,lastQpSum:e.qpSum,lts:Date.now()}),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),e.mediaSourceId&&this.processVideoMediaSource(e.mediaSourceId,t),this.processVideoTrackSenderStats(e,e.trackId,t),e.remoteId)this.processRemoteInboundStats(e.remoteId,t);else{const i=this.findRemoteStatsId(e.ssrc,vw.REMOTE_INBOUND);i&&this.processRemoteInboundStats(i,t)}}processAudioOutboundStats(e){let t=this._stats.audioSend.find((t=>t.ssrc===e.ssrc));if(t||(t=TV(yV),this._stats.audioSend.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsSent,t.bytes=e.bytesSent,e.mediaSourceId&&this.processAudioMediaSource(e.mediaSourceId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),this.processAudioTrackSenderStats(e,e.trackId,t),e.remoteId)this.processRemoteInboundStats(e.remoteId,t);else{const i=this.findRemoteStatsId(e.ssrc,vw.REMOTE_INBOUND);i&&this.processRemoteInboundStats(i,t)}}findRemoteStatsId(e,t){var i;const n=Array.from(_N(i=this.report).call(i)).find((i=>i.type===t&&i.ssrc===e));return n?n.id:null}processVideoMediaSource(e,t){const i=this.report.get(e);i&&i.width&&i.height&&i.framesPerSecond&&(t.inputFrame={width:i.width,height:i.height,frameRate:i.framesPerSecond})}processAudioMediaSource(e,t){const i=this.report.get(e);i&&(t.inputLevel=i.audioLevel)}processVideoTrackSenderStats(e,t,i){var n,r,o,s;const a=t?this.report.get(t):void 0,c=null!==(n=null==a?void 0:a.framesSent)&&void 0!==n?n:e.framesSent;if(\"number\"!=typeof c)return;let d=null!==(r=null==a?void 0:a.frameWidth)&&void 0!==r?r:e.frameWidth,l=null!==(o=null==a?void 0:a.frameHeight)&&void 0!==o?o:e.frameHeight,u=null!==(s=null==a?void 0:a.framesPerSecond)&&void 0!==s?s:e.framesPerSecond;if(\"number\"==typeof d&&\"number\"==typeof l||(d=0,l=0),null==u){const e=Date.now(),t=this.lastVideoFramesSent.get(i.ssrc);t&&e-t.lts>=800?(u=Math.round((c-t.count)/((e-t.lts)/1e3)),this.lastVideoFramesSent.set(i.ssrc,{count:c,lts:e,rate:u})):t?u=t.rate:this.lastVideoFramesSent.set(i.ssrc,{count:c,lts:e,rate:0})}i.sentFrame={width:d,height:l,frameRate:Math.max(0,u)}}processVideoTrackReceiverStats(e,t,i){var n,r,o,s,a;const c=t?this.report.get(t):void 0,d=null!==(n=null==c?void 0:c.framesReceived)&&void 0!==n?n:e.framesReceived,l=null!==(r=null==c?void 0:c.frameWidth)&&void 0!==r?r:e.frameWidth,u=null!==(o=null==c?void 0:c.frameHeight)&&void 0!==o?o:e.frameHeight,h=null!==(s=null==c?void 0:c.jitterBufferDelay)&&void 0!==s?s:e.jitterBufferDelay,p=null!==(a=null==c?void 0:c.jitterBufferEmittedCount)&&void 0!==a?a:e.jitterBufferEmittedCount;if(\"number\"==typeof d){const e=this.lastVideoFramesRecv.get(i.ssrc),t=Date.now();i.framesReceivedCount=d;let n=0;e&&t-e.lts>=800?(n=Math.round((d-e.count)/((t-e.lts)/1e3)),this.lastVideoFramesRecv.set(i.ssrc,{count:d,lts:t,rate:n})):e?n=e.rate:this.lastVideoFramesRecv.set(i.ssrc,{count:d,lts:t,rate:0}),i.receivedFrame={width:l||0,height:u||0,frameRate:n||0},i.decodedFrame={width:l||0,height:u||0,frameRate:i.decodeFrameRate||0},i.outputFrame={width:l||0,height:u||0,frameRate:i.outputFrameRate||i.decodeFrameRate||0}}if(h&&p){const e=this.lastVideoJBDelay.get(i.ssrc)||{jitterBufferDelay:0,jitterBufferEmittedCount:0,jitterBufferMs:0};let t=e.jitterBufferMs;const n=p-e.jitterBufferEmittedCount;n>0&&(t=1e3*(h-e.jitterBufferDelay)/n),i.jitterBufferMs=t,i.currentDelayMs=Math.round(t),this.lastVideoJBDelay.set(i.ssrc,{jitterBufferDelay:h,jitterBufferEmittedCount:p,jitterBufferMs:i.currentDelayMs})}}processAudioTrackSenderStats(e,t,i){var n,r,o,s;const a=t?this.report.get(t):void 0,c=null!==(n=null!==(r=null==a?void 0:a.echoReturnLoss)&&void 0!==r?r:e.echoReturnLoss)&&void 0!==n?n:0,d=null!==(o=null!==(s=null==a?void 0:a.echoReturnLossEnhancement)&&void 0!==s?s:e.echoReturnLossEnhancement)&&void 0!==o?o:0;i.aecReturnLoss=c,i.aecReturnLossEnhancement=d}processAudioTrackReceiverStats(e,t,i){var n,r,o,s,a,c,d;const l=t?this.report.get(t):void 0,u=null!==(n=null==l?void 0:l.removedSamplesForAcceleration)&&void 0!==n?n:e.removedSamplesForAcceleration,h=null!==(r=null==l?void 0:l.totalSamplesReceived)&&void 0!==r?r:e.totalSamplesReceived,p=null!==(o=null==l?void 0:l.jitterBufferDelay)&&void 0!==o?o:e.jitterBufferDelay,_=null!==(s=null==l?void 0:l.jitterBufferEmittedCount)&&void 0!==s?s:e.jitterBufferEmittedCount,E=null!==(a=null==l?void 0:l.audioLevel)&&void 0!==a?a:null==e?void 0:e.audioLevel,f=null!==(c=null==l?void 0:l.totalSamplesDuration)&&void 0!==c?c:null==e?void 0:e.totalSamplesDuration,m=null!==(d=null==l?void 0:l.concealedSamples)&&void 0!==d?d:e.concealedSamples;if(u&&h&&(i.accelerateRate=u/h),p&&_){const e=this.lastAudioJBDelay.get(i.ssrc)||{jitterBufferDelay:0,jitterBufferEmittedCount:0,jitterBufferMs:0};let t=e.jitterBufferMs;const n=_-e.jitterBufferEmittedCount;n>0&&(t=1e3*(p-e.jitterBufferDelay)/n),i.jitterBufferMs=Math.round(t),this.lastAudioJBDelay.set(i.ssrc,{jitterBufferDelay:p,jitterBufferEmittedCount:_,jitterBufferMs:i.jitterBufferMs})}i.outputLevel=E;let T=1920;f&&h&&(T=h/f/50,i.receivedFrames=Math.round(h/T)),m&&(i.droppedFrames=Math.round(m/T))}processRemoteInboundStats(e,t){const i=this.report.get(e);i&&(t.packetsLost=i.packetsLost,i.roundTripTime&&(t.rttMs=1e3*i.roundTripTime),i.jitter&&(t.jitterMs=1e3*i.jitter),i.timestamp&&(t.timestamp=i.timestamp))}getCodecFromCodecStats(e){const t=this.report.get(e);if(!t)return\"\";const i=t.mimeType.match(/\\/(.*)$/);return i&&i[1]?i[1]:\"\"}updateSendBitrate(){let e=0,t=null,i=null;this.mediaBytesSent.forEach((t=>{e+=t.diffMean()})),this.mediaBytesRetransmit.forEach((e=>{t=null===t?e.diffMean():t+e.diffMean()})),this.mediaBytesTargetEncode.forEach((e=>{i=null===i?e.diffMean():i+e.diffMean()}));const n=null!==t?e-t:e;this._stats.bitrate={actualEncoded:8*n/(this.options.updateInterval/1e3),transmit:8*e/(this.options.updateInterval/1e3)},null!==t&&(this._stats.bitrate.retransmit=8*t/(this.options.updateInterval/1e3)),null!==i&&(this._stats.bitrate.targetEncoded=8*i/(this.options.updateInterval/1e3))}}class UV extends OV{updateStats(){return Gh.resolve()}}function xV(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:250,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:500,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1e4;const o=function(){const e=navigator.userAgent.toLocaleLowerCase().match(/chrome\\/[\\d]*/i);return e&&e[0]?Number(e[0].split(\"/\")[1]):null}();return o?o<76?new PV(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:n,firstVideoDecodedTimeout:r}):new MV(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:n,firstVideoDecodedTimeout:r}):function(e){if(!window.RTCStatsReport)return!1;const t=e.getStats();return!!(t instanceof Gh||function(e){return!!e&&(\"object\"==typeof e||\"function\"==typeof e)&&\"function\"==typeof e.then}(t))}(e)?new MV(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:n,firstVideoDecodedTimeout:r}):new UV(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:n,firstVideoDecodedTimeout:r})}let VV=class{get localCapabilities(){return sA(this._localCapabilities)}get rtpCapabilities(){return sA(this._rtpCapabilities)}get candidates(){return sA(this._candidates)}get iceParameters(){return sA(this._iceParameters)}get dtlsParameters(){return sA(this._dtlsParameters)}constructor(e){Fg(this,\"sessionDesc\",void 0),Fg(this,\"_localCapabilities\",void 0),Fg(this,\"_rtpCapabilities\",void 0),Fg(this,\"_candidates\",void 0),Fg(this,\"_iceParameters\",void 0),Fg(this,\"_dtlsParameters\",void 0),Fg(this,\"setup\",void 0),Fg(this,\"currentMidIndex\",void 0),Fg(this,\"cname\",\"o/i14u9pJrxRKAsu\"),Fg(this,\"firefoxSsrcMidMap\",new Map),e=sA(e);const{remoteIceParameters:t,remoteDtlsParameters:i,candidates:n,remoteRTPCapabilities:r,localCapabilities:o,direction:s,setup:a,videoCodec:c,audioCodec:d}=e;let l;this.setup=a,l=s===Mw.RECEIVE_ONLY?FU.parse(\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE 0 1\\na=msid-semantic: WMS\\na=extmap-allow-mixed\\nm=video 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:0\\nm=audio 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:1\\n\"):FU.parse(\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE 0 1\\na=msid-semantic: WMS\\na=extmap-allow-mixed\\nm=video 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=recvonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:0\\nm=audio 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=recvonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:1\\n\"),this._rtpCapabilities=r,this._candidates=n,this._iceParameters=t,this._dtlsParameters=i,this._localCapabilities=o;const u=s===Mw.RECEIVE_ONLY?this.rtpCapabilities.send:this.rtpCapabilities.recv,h=s===Mw.RECEIVE_ONLY?this._localCapabilities.recv:this._localCapabilities.send,p=s===Mw.RECEIVE_ONLY?r.send.videoCodecs:sx(dO.VIDEO,u,h,c),_=s===Mw.RECEIVE_ONLY?r.send.audioCodecs:sx(dO.AUDIO,u,h,d);for(const e of l.mediaDescriptions)e.attributes.iceUfrag=t.iceUfrag,e.attributes.icePwd=t.icePwd,e.attributes.fingerprints=i.fingerprints,e.attributes.candidates=n,e.attributes.setup=this.setup,\"application\"===e.media.mediaType&&(e.attributes.sctpPort=\"5000\"),\"video\"===e.media.mediaType&&(e.media.fmts=p.map((e=>e.payloadType.toString(10))),e.attributes.payloads=p,e.attributes.extmaps=u.videoExtensions),\"audio\"===e.media.mediaType&&(e.media.fmts=_.map((e=>e.payloadType.toString(10))),e.attributes.payloads=_,e.attributes.extmaps=u.audioExtensions,ox(e));this.sessionDesc=l,this.currentMidIndex=l.mediaDescriptions.length-1}toString(){return FU.print(this.sessionDesc)}hasMid(e){return Array.isArray(e)?e.every((e=>this.hasMid(e))):this.sessionDesc.mediaDescriptions.some((t=>t.attributes.mid===e))}send(e,t,i,n,r){i=i.replace(/ /g,\"-\");const{ssrcs:o,ssrcGroups:s}=zU(t,this.cname,XA(\"SYNC_GROUP\")?i:void 0),a=this.findPreloadMediaDesc(o);if(a){if(Zv()&&this.firefoxSsrcMidMap.set(o[0].ssrcId,a.attributes.mid),r&&(r.twcc||r.remb)){const e=this.sessionDesc.mediaDescriptions.indexOf(a);return this.sessionDesc.mediaDescriptions[e]=this.mungSendMediaDesc(a,r),{mid:a.attributes.mid,needExchangeSDP:!0}}return{mid:a.attributes.mid,needExchangeSDP:!1}}{const t=this.findAvailableMediaIndex(e,o,n);let i;return-1===t?(i=this.createOrRecycleSendMedia(e,o,s,\"sendonly\",n,r),this.updateBundleMids()):(i=sA(this.sessionDesc.mediaDescriptions[t]),i.attributes.direction=\"sendonly\",i.attributes.ssrcs=o,i.attributes.ssrcGroups=s,this.sessionDesc.mediaDescriptions[t]=this.mungSendMediaDesc(i,r)),Zv()&&this.firefoxSsrcMidMap.set(o[0].ssrcId,i.attributes.mid),{needExchangeSDP:!0,mid:i.attributes.mid}}}stopSending(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>t.attributes.mid&&-1!==e.indexOf(t.attributes.mid)));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.stopSending.\");t.forEach((e=>{e.attributes.ssrcs=[]})),this.updateBundleMids()}receive(e,t,i){const n=[];return e.forEach((e=>{const r=e._mediaStreamTrack.kind,o=this.findAvailableRecvMediaIndex(r);let s,a=!1;-1===o?(a=!0,s=this.createOrRecycleRecvMedia(e,[],\"recvonly\",t,i),this.updateBundleMids()):(s=sA(this.sessionDesc.mediaDescriptions[o]),s.attributes.direction=\"recvonly\"),n.push({mid:s.attributes.mid,needCreateTransceiver:a})})),n}stopReceiving(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>-1!==e.indexOf(t.attributes.mid)));if(t.length!==e.length)throw new Error(\"MediaDescriptions' length doesn't match mids's length when calling RemoteSDP.receive.\");t.forEach((e=>{e.media.port=\"0\",e.attributes.direction=\"inactive\"})),this.updateBundleMids()}addRemoteCandidate(e){const{foundation:t,protocol:i,address:n,port:r,type:o,relatedAddress:s,relatedPort:a,priority:c}=new RTCIceCandidate(e),d={foundation:null!=t?t:\"\",componentId:\"1\",transport:null!=i?i:\"\",priority:c?c+\"\":\"\",connectionAddress:null!=n?n:\"\",port:r?r+\"\":\"\",type:o?o+\"\":\"\",relAddr:null!=s?s:\"\",relPort:a?a+\"\":\"\",extension:{}};this.candidates.some((e=>e.priority===d.priority&&e.connectionAddress===d.connectionAddress&&e.port===d.port))||(this._candidates.push(d),this.sessionDesc.mediaDescriptions.forEach((e=>{e.attributes.candidates=this.candidates})))}clearRemoteCandidate(){this._candidates=[],this.sessionDesc.mediaDescriptions[0].attributes.candidates=this._candidates}createOrRecycleRecvMedia(e,t,i,n,r){const o=e._mediaStreamTrack.kind,s=this.rtpCapabilities.recv,a=sx(o,s,this.localCapabilities.send,o===dO.AUDIO?r:n),c=o===dO.VIDEO?s.videoExtensions:s.audioExtensions,d=\"\".concat(++this.currentMidIndex);let l={media:{mediaType:o,port:\"9\",protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:a.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:[],extmaps:c,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:a,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:i,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(d)}};l=this.mungRecvMediaDsec(l,e);const u=this.findFirstClosedMedia(o);if(u){const e=this.sessionDesc.mediaDescriptions.indexOf(u);this.sessionDesc.mediaDescriptions[e]=l}else this.sessionDesc.mediaDescriptions.push(l);return l}muteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>Dn(e).call(e,t.attributes.mid||\"\")));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach((e=>{e.attributes.direction=\"inactive\"}))}unmuteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>Dn(e).call(e,t.attributes.mid||\"\")));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach((e=>{e.attributes.direction=\"recvonly\"}))}findAvailableMediaIndex(e,t,i){return this.sessionDesc.mediaDescriptions.findIndex((n=>{const r=n.media.mediaType===e&&\"0\"!==n.media.port&&(\"sendonly\"===n.attributes.direction||\"sendrecv\"===n.attributes.direction)&&0===n.attributes.ssrcs.length;if(Zv()){if(r){const e=this.firefoxSsrcMidMap.get(t[0].ssrcId);return!(e||\"0\"!==n.attributes.mid&&\"1\"!==n.attributes.mid)||!(!e||e!==n.attributes.mid)}return!1}return r&&n.attributes.mid===i}))}findAvailableRecvMediaIndex(e){return this.sessionDesc.mediaDescriptions.findIndex((t=>{const i=t.media.mediaType===e&&\"0\"!==t.media.port&&(\"recvonly\"===t.attributes.direction||\"sendrecv\"===t.attributes.direction);return\"0\"!==t.attributes.mid&&\"1\"!==t.attributes.mid&&i}))}predictReceivingMids(e){const t=[];for(let i=0;i<e;i++)t.push((this.currentMidIndex+i+1).toString(10));return t}restartICE(e){e=sA(e),this._iceParameters=e,this.sessionDesc.mediaDescriptions.forEach((t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd}))}createOrRecycleSendMedia(e,t,i,n,r,o){const s=this.rtpCapabilities.send,a=e===dO.VIDEO?s.videoCodecs:s.audioCodecs,c=e===dO.VIDEO?s.videoExtensions:s.audioExtensions;Zv()&&(r=\"\".concat(++this.currentMidIndex));let d={media:{mediaType:e,port:\"9\",protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:a.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:[],extmaps:c,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:i,rtcpFeedbackWildcards:[],payloads:a,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:n,rtcpMux:!0,rtcpRsize:!0,mid:r}};d=this.mungSendMediaDesc(d,o);const l=this.findFirstClosedMedia(e);if(l){const e=this.sessionDesc.mediaDescriptions.indexOf(l);this.sessionDesc.mediaDescriptions[e]=d}else this.sessionDesc.mediaDescriptions.push(d);return d}mungRecvMediaDsec(e,t,i){const n=sA(e);return XU(n),JU(n,t),QU(n,t),ZU(n),$U(n,i,this.localCapabilities.send),n}mungSendMediaDesc(e,t){const i=sA(e);return $U(i,t,this.localCapabilities.recv),ox(i),i}updateRecvMedia(e,t){const i=this.sessionDesc.mediaDescriptions.findIndex((t=>t.attributes.mid===e));if(-1!==i){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[i],t);this.sessionDesc.mediaDescriptions[i]=e}}updateBundleMids(){this.sessionDesc.attributes.groups[0].identificationTag=this.sessionDesc.mediaDescriptions.filter((e=>\"0\"!==e.media.port)).map((e=>e.attributes.mid))}findPreloadMediaDesc(e){return this.sessionDesc.mediaDescriptions.find((t=>{var i;return(null===(i=t.attributes)||void 0===i||null===(i=i.ssrcs[0])||void 0===i?void 0:i.ssrcId)===e[0].ssrcId}))}findFirstClosedMedia(e){return this.sessionDesc.mediaDescriptions.find((t=>Zv()?\"0\"===t.media.port&&t.media.mediaType===e:\"0\"===t.media.port))}};const FV=[\"sdp\"];var BV;function jV(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function GV(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?jV(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):jV(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let WV=(BV=class e extends aO{get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}get dtlsTransportState(){var e,t;return null!==(e=null===(t=this.peerConnection.getReceivers()[0])||void 0===t||null===(t=t.transport)||void 0===t?void 0:t.state)&&void 0!==e?e:null}get localCodecs(){return[]}set isInRestartIce(e){this._isInRestartIce=e}get isInRestartIce(){return this._isInRestartIce}constructor(t,i,n){super(t,i),Fg(this,\"direction\",void 0),Fg(this,\"name\",void 0),Fg(this,\"store\",void 0),Fg(this,\"spec\",void 0),Fg(this,\"peerConnection\",void 0),Fg(this,\"initialOffer\",void 0),Fg(this,\"transport\",void 0),Fg(this,\"statsFilter\",void 0),Fg(this,\"localCandidateCount\",0),Fg(this,\"_isInRestartIce\",!1),Fg(this,\"mutex\",new NA(\"P2PConnection-mutex\")),Fg(this,\"onLocalCandidate\",void 0),Fg(this,\"remoteSDP\",void 0),Fg(this,\"pendingCandidates\",[]),Fg(this,\"localCapabilities\",void 0),Fg(this,\"isReady\",!1),Fg(this,\"restartCnt\",0),Fg(this,\"curTurnServerIndex\",0),this.store=i,this.spec=t,this.peerConnection=new RTCPeerConnection(e.resolvePCConfiguration(t,i.p2pTransport),{optional:[{googDscp:!0}]}),this.direction=null!=n?n:Mw.SEND_ONLY,this.name=this.direction===Mw.SEND_ONLY?\"sendP2PConnection\":\"recvP2PConnection\",this.statsFilter=xV(this.peerConnection,XA(\"STATS_UPDATE_INTERVAL\"),void 0,Zv()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1}async establish(e){try{const t=await tx();if(this.localCapabilities=rx(t),e){const{sdp:t}=e,i=mV(e,FV),n=function(){const e={audioCodecs:[],videoCodecs:[],audioExtensions:[],videoExtensions:[]},t=WU(arguments.length>2?arguments[2]:void 0,arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},\"sendonly\"),i={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},n={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},r={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]};if(nx(t,e,\"videoExtensions\",i,n,r),nx(t,e,\"videoCodecs\",i,n,r),nx(t,e,\"audioExtensions\",i,n,r),nx(t,e,\"audioCodecs\",i,n,r),XA(\"RAISE_H264_BASELINE_PRIORITY\")){const e=r.videoCodecs.findIndex((e=>e.rtpMap&&\"h264\"===e.rtpMap.encodingName.toLocaleLowerCase()&&e.fmtp&&\"42001f\"===e.fmtp.parameters[\"profile-level-id\"]));if(-1!==e){const t=r.videoCodecs.findIndex((e=>e.rtpMap&&\"h264\"===e.rtpMap.encodingName.toLocaleLowerCase()));if(t<e){fb.debug(\"raising H264 baseline profile priority\");const i=r.videoCodecs[e];r.videoCodecs.splice(e,1),r.videoCodecs.splice(t,0,i)}-1!==t&&XA(\"FILTER_SEND_H264_BASELINE\")&&(i.videoCodecs=i.videoCodecs.filter((e=>!(e.rtpMap&&\"h264\"===e.rtpMap.encodingName.toLocaleLowerCase()&&e.fmtp&&\"42001f\"!==e.fmtp.parameters[\"profile-level-id\"]))))}}return{send:i,recv:n,sendrecv:r}}({},{},t);this.remoteSDP=new VV({remoteIceParameters:i.iceParameters,remoteDtlsParameters:i.dtlsParameters,candidates:[],remoteRTPCapabilities:n,localCapabilities:this.localCapabilities,direction:this.direction,setup:\"actpass\",videoCodec:this.store.codec,audioCodec:this.store.audioCodec}),await this.setRemoteDescription({type:\"offer\",sdp:this.remoteSDP.toString()}),this.isReady=!0;const r=await this.peerConnection.createAnswer();if(!r.sdp)throw new Error(\"Cannot get answer sdp when trying to establish PeerConnection.\");const o=HU(r.sdp);await this.peerConnection.setLocalDescription(r);const s=await ix({},{},r.sdp);this.localCapabilities=rx(s);const a=this.peerConnection.getTransceivers()[0];return null!=a&&a.receiver&&a.receiver.transport&&this.tryBindTransportEvents(a.receiver.transport),GV(GV({},o),{},{sdp:r.sdp})}{this.peerConnection.addTransceiver(\"video\",{direction:\"sendonly\"}),this.peerConnection.addTransceiver(\"audio\",{direction:\"sendonly\"});const e=await this.peerConnection.createOffer();if(!e.sdp)throw new Error(\"Cannot get initialOffer.sdp when trying to establish PeerConnection.\");const t=HU(e.sdp);return this.initialOffer=e,GV(GV({},t),{},{sdp:e.sdp})}}catch(e){throw new Cy(Ry.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async connect(e){try{if(!this.initialOffer)throw new Error(\"Cannot establish P2PConnection without initial offer.\");await this.peerConnection.setLocalDescription(this.initialOffer);const{sdp:t,iceParameters:i,dtlsParameters:n}=e,r=await ix({},{},t);this.remoteSDP=new VV({remoteIceParameters:i,remoteDtlsParameters:n,candidates:[],remoteRTPCapabilities:r,localCapabilities:this.localCapabilities,direction:this.direction,setup:\"active\",videoCodec:this.store.codec,audioCodec:this.store.audioCodec}),await this.setRemoteDescription({type:\"answer\",sdp:this.remoteSDP.toString()});const o=this.peerConnection.getTransceivers()[0];null!=o&&o.sender&&o.sender.transport&&this.tryBindTransportEvents(o.sender.transport)}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.connect failed; \".concat(e.toString()))}}async addRemoteCandidate(e){try{e&&this.pendingCandidates.push(e),this.peerConnection.remoteDescription&&this.isReady&&(this.pendingCandidates.forEach((e=>{this.peerConnection.addIceCandidate(e)})),this.pendingCandidates=[])}catch(e){throw new Cy(Ry.ADD_CANDIDATE_FAILED,\"P2PConnection.addRemoteCandidate failed; \".concat(e.toString()))}}send(e,t,i){var n=this;return YI((function*(){const r=yield qI(n.mutex.lock(\"From P2PConnection.send\"));try{if(!n.remoteSDP)throw new Error(\"Cannot call P2PConnection.send before remote SDP created\");const o=[],s=n.remoteSDP.receive(e,t,i);e.forEach(((e,t)=>{if(s[t].needCreateTransceiver){const t=n.peerConnection.addTransceiver(e._mediaStreamTrack,{direction:\"sendonly\"});o.push(t),e._updateRtpTransceiver(t)}else{const i=n.peerConnection.getTransceivers().find((e=>e.mid===s[t].mid));if(!i)throw new Error(\"cannot find transceiver when sendPeerconnection send, mid is \".concat(s[t].mid));o.push(i),e._updateRtpTransceiver(i)}})),Zv()&&!0===XA(\"SIMULCAST\")&&(yield qI(n.applySimulcastForFirefox(o,e)));const a=s.map((e=>e.mid)),c=yield qI(n.peerConnection.createOffer()),d=n.mungSendOfferSDP(c.sdp,e,a),l=FU.parse(d),u=a.map((e=>{const t=l.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"Cannot extract ssrc from mediaDescription.\");return KU(t,XA(\"USE_PUB_RTX\"))})),h=o.map(((e,t)=>{const i=a[t];return{localSSRC:u[t],id:i}}));yield qI(n.peerConnection.setLocalDescription({type:\"offer\",sdp:d}));try{yield h}catch(e){const t=n.remoteSDP.toString();throw yield qI(n.peerConnection.setLocalDescription({type:\"offer\",sdp:d})),yield qI(n.peerConnection.setRemoteDescription({type:\"answer\",sdp:t})),yield qI(n.stopSending(a,!0)),e}yield qI(n.applySimulcastEncodings(o,e)),yield qI(n.applySendEncodings(o,e));const p=n.remoteSDP.toString(),_=n.logSDPExchange(d,\"offer\",\"local\",\"send\");return null==_||_(p),yield qI(n.setRemoteDescription({type:\"answer\",sdp:p})),o.map(((e,t)=>{const i=a[t];return{localSSRC:u[t],id:i}}))}catch(e){throw e instanceof Cy?e:new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.send failed; \".concat(e.toString()))}finally{r()}}))()}async stopSending(e,t){const i=t?void 0:await this.mutex.lock(\"From P2PConnection.stopSending\");try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopSending before remote SDP created\");const t=this.peerConnection.getTransceivers().filter((t=>-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length (\".concat(t.length,\") doesn't match mids' length (\").concat(e.length,\") when trying to call P2PConnection.stopSending.\"));t.map((e=>{var t;e.direction=\"inactive\",null===(t=e.stop)||void 0===t||t.call(e)}));const n=await this.peerConnection.createOffer(),r=this.logSDPExchange(n.sdp||\"\",\"offer\",\"local\",\"stopSending\");await this.peerConnection.setLocalDescription(n),this.remoteSDP.stopReceiving(e);const o=this.remoteSDP.toString();null==r||r(o),await this.setRemoteDescription({type:\"answer\",sdp:o})}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.stopSending failed; \".concat(e.toString()))}finally{i&&i()}}async receive(e,t,i,n){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.receive \".concat(e,\" before remoteSDP created.\"));const{mid:r,needExchangeSDP:o}=this.remoteSDP.send(e,t,i,n);if(o){const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"receive\");await this.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer(),o=this.mungReceiveAnswerSDP(n.sdp,r,e);null==i||i(o||\"\"),await this.peerConnection.setLocalDescription({type:\"answer\",sdp:o}),fb.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] receive \").concat(e,\" by exchanging SDP.\"))}else fb.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] receive \").concat(e,\" no need to exchange SDP.\"));const s=this.peerConnection.getTransceivers().find((e=>e.mid===r));if(!s||null===s.mid)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:s.receiver.track,mid:s.mid,transceiver:s}}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async mockReceive(e,t,i,n){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.receive \".concat(e,\" before remoteSDP created.\"));const{mid:r,needExchangeSDP:o}=this.remoteSDP.send(e,t,i,n);if(o){const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"receive\");await this.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer(),o=this.mungReceiveAnswerSDP(n.sdp,r,e);null==i||i(o||\"\"),await this.peerConnection.setLocalDescription({type:\"answer\",sdp:o}),fb.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] receive \").concat(e,\" by exchanging SDP.\"))}else fb.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] receive \").concat(e,\" no need to exchange SDP.\"))}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopReceiving before remote SDP created.\");this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"stopReceiving\");await this.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}async restartICE(t){try{if(this.store.p2pTransport===HA.Auto&&(this.store.p2pTransport=HA.SdRtn,ZP().supportPCSetConfiguration&&this.peerConnection.setConfiguration(e.resolvePCConfiguration(this.spec,this.store.p2pTransport))),this.restartCnt>3&&(this.restartCnt=0,ZP().supportPCSetConfiguration&&this.peerConnection.setConfiguration(e.resolvePCConfiguration(this.spec,this.store.p2pTransport,++this.curTurnServerIndex))),!t){this.restartCnt++,this.isReady=!1;const e=await this.peerConnection.createOffer({iceRestart:!0});if(!e.sdp)throw new Error(\"Cannot restartICE because restart offer SDP does not exist.\");const{iceParameters:t}=HU(e.sdp);return this.store.descriptionStart(),this.direction===Mw.SEND_ONLY&&await this.peerConnection.setLocalDescription(e),t}if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopReceiving before remote SDP created.\");if(this.remoteSDP.restartICE(t),this.store.descriptionStart(),this.direction===Mw.RECEIVE_ONLY){this.restartCnt++,await this.setRemoteDescription({type:\"offer\",sdp:this.remoteSDP.toString()});const e=await this.peerConnection.createAnswer();if(!e.sdp)throw new Error(\"Cannot get answer sdp when trying to iceRestart.\");const{iceParameters:t}=HU(e.sdp);return await this.peerConnection.setLocalDescription(e),t}await this.setRemoteDescription({type:\"answer\",sdp:this.remoteSDP.toString()}),this.isReady=!0}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}close(){var e;this.peerConnection.close(),this.peerConnection.onicecandidate=null,null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,\"closed\"),this.tryUnbindTransportEvents(),this.unbindPCEvents(),this.unbindStatsEvents(),this.transport=void 0,this.statsFilter.destroy()}getStats(){return this.statsFilter.getStats()}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.updateEncoderConfig before remote SDP created.\");const i=await this.peerConnection.createOffer(),n=this.mungSendOfferSDP(i.sdp,[t],[e]);this.remoteSDP.updateRecvMedia(e,t);const r=this.remoteSDP.toString(),o=this.logSDPExchange(n,\"offer\",\"local\",\"updateEncoderConfig\");await this.peerConnection.setLocalDescription({type:\"offer\",sdp:n}),null==o||o(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const i=this.peerConnection.getTransceivers().filter((t=>t.mid===e));1===i.length&&(this.isVP8Simulcast(t)?Zv()||await this.applySimulcastEncodings(i,[t]):await this.applySendEncodings(i,[t]))}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const i=this.peerConnection.getTransceivers().find((e=>e.mid===t));i&&await i.sender.replaceTrack(e._mediaStreamTrack)}async getSelectedCandidatePair(){const e=this.peerConnection.getReceivers();if(e.length>0&&e[0].transport&&e[0].transport.iceTransport&&e[0].transport.iceTransport.getSelectedCandidatePair&&e[0].transport.iceTransport.getSelectedCandidatePair()){const t=e[0].transport.iceTransport,{local:i,remote:n}=t.getSelectedCandidatePair();return{local:GV(GV({},RV),{},{candidateType:i.type,protocol:i.protocol,address:i.address,port:i.port}),remote:GV(GV({},RV),{},{candidateType:n.type,protocol:n.protocol,address:n.address,port:n.port})}}return this.statsFilter.getSelectedCandidatePair()}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e,t;Dn(e=[\"connected\",\"completed\"]).call(e,this.peerConnection.iceConnectionState)&&(this.isReady=!1),null===(t=this.onICEConnectionStateChange)||void 0===t||t.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;\"connected\"===this.peerConnection.connectionState&&(this.restartCnt=0),null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.startICECandidate()}startICECandidate(){this.peerConnection.onicecandidate||(this.localCandidateCount=0,this.peerConnection.onicecandidate=e=>{if(e.candidate){var t;if(e.candidate.candidate)null===(t=this.onLocalCandidate)||void 0===t||t.call(this,e.candidate.toJSON());this.localCandidateCount+=1}else fb.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] local candidate count\"),this.localCandidateCount)})}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(t,i){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r={iceServers:[]};var o;t.iceServers?r.iceServers=t.iceServers:t.turnServer&&\"off\"!==t.turnServer.mode&&(Ky(t.turnServer.servers)?r.iceServers=t.turnServer.servers:(r.iceServers&&r.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.servers,i,n)),XA(\"USE_TURN_SERVER_OF_GATEWAY\")&&r.iceServers&&t.turnServer.serversFromGateway&&r.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.serversFromGateway,i,n)),Dn(o=[HA.Relay,HA.SdRtn]).call(o,i)&&(r.iceTransportPolicy=\"relay\"),XA(\"FORCE_TURN_TCP\")?r.iceTransportPolicy=\"relay\":t.turnServer.servers.concat(t.turnServer.serversFromGateway||[]).forEach((e=>{e.forceturn&&(r.iceTransportPolicy=\"relay\")}))));return XA(\"ENABLE_ENCODED_TRANSFORM\")&&ZP().supportWebRTCEncodedTransform&&(r.encodedInsertableStreams=!0),fb.debug(\"P2PConnection p2pTransport is \".concat(i)),r}static turnServerConfigToIceServers(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const n=[],r=e.filter((e=>e.tcpport));fb.debug(\"P2PConnection turnServers is \".concat(r,\", current index is \").concat(i));const o=r.length>i?r[i]:r[0];switch(t){case HA.SdRtn:const t=e.filter((e=>{var t;return Dn(t=e.username).call(t,\"glb:\")&&e.turnServerURL==e.turnServerURL})),r=t.length>i?t[i]:t[0];r&&(n.push({username:r.username,credential:r.password,credentialType:\"password\",urls:\"turn:\".concat(JO(r.turnServerURL),\":\").concat(r.tcpport,\"?transport=udp\")}),n.push({username:r.username,credential:r.password,credentialType:\"password\",urls:\"turns:\".concat(JO(r.turnServerURL),\":\").concat(r.tcpport,\"?transport=tcp\")}));break;case HA.Relay:o&&(n.push({username:o.username,credential:o.password,credentialType:\"password\",urls:\"turn:\".concat(o.turnServerURL,\":\").concat(o.tcpport,\"?transport=udp\")}),n.push({username:o.username,credential:o.password,credentialType:\"password\",urls:\"turns:\".concat(JO(o.turnServerURL),\":\").concat(o.tcpport,\"?transport=tcp\")}));break;default:o&&(n.push({username:o.username,credential:o.password,credentialType:\"password\",urls:\"turn:\".concat(o.turnServerURL,\":\").concat(o.tcpport,\"?transport=udp\")}),n.push({username:o.username,credential:o.password,credentialType:\"password\",urls:\"turns:\".concat(JO(o.turnServerURL),\":\").concat(o.tcpport,\"?transport=tcp\")}),n.push({username:o.username,credential:o.password,credentialType:\"password\",urls:\"stun:\".concat(o.turnServerURL,\":\").concat(o.tcpport)}))}return n}tryBindTransportEvents(e){if(e){this.transport=e,e.onstatechange=()=>{var t;null!=e&&e.state&&(null===(t=this.onDTLSTransportStateChange)||void 0===t||t.call(this,e.state))},e.onerror=e=>{var t;null===(t=this.onDTLSTransportError)||void 0===t||t.call(this,\"error\"in e?e.error:e)};const t=e.iceTransport;t&&(t.onstatechange=()=>{const t=null==e?void 0:e.iceTransport.state;var i;t&&(null===(i=this.onICETransportStateChange)||void 0===i||i.call(this,t))},t.getSelectedCandidatePair&&(t.onselectedcandidatepairchange=()=>{if(t.getSelectedCandidatePair()){const{local:e,remote:i}=t.getSelectedCandidatePair();fb.info(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] selectedcandidatepairchange: local \").concat(JSON.stringify({candidateType:e.type,protocol:e.protocol}),\", remote \").concat(JSON.stringify({candidateType:i.type,protocol:i.protocol,address:i.address,port:i.port}),\" )\"))}}))}}tryUnbindTransportEvents(){this.transport&&(this.transport.onstatechange=null,this.transport.onerror=null,this.transport.iceTransport&&(this.transport.iceTransport.onstatechange=null))}async updateRtpSenderEncodings(e,t){var i;if(!t){t=this.peerConnection.getSenders().find((t=>t.track===e._mediaStreamTrack))}if(!t)return fb.warn(\"[\".concat(e.getTrackId(),\"] no rtpSender found}\"));if(this.isVP8Simulcast(e))return fb.warn(\"[updateRtpSenderEncodings] Track is VP8 simulcast, please apply simulcast encodings\");if(!ZP().supportSetRtpSenderParameters)return fb.warn(\"[updateRtpSenderEncodings] Browser not support set rtp-sender parameters\");const n={},r={};switch(e._optimizationMode){case\"motion\":n.degradationPreference=\"maintain-framerate\";break;case\"detail\":n.degradationPreference=\"maintain-resolution\";break;default:n.degradationPreference=\"balanced\"}if(e._encoderConfig){var o;const{bitrateMax:t,frameRate:i,scaleResolutionDownBy:n}=e._encoderConfig;t&&(r.maxBitrate=1e3*t),Dn(o=e._hints).call(o,mL.LOW_STREAM)&&(i&&(r.maxFramerate=QO(i)),n&&n>=1&&(r.scaleResolutionDownBy=n))}if(XA(\"DSCP_TYPE\")&&Ey()){var s;const e=XA(\"DSCP_TYPE\");Dn(s=[\"very-low\",\"low\",\"medium\",\"high\"]).call(s,e)&&(r.networkPriority=e)}const a=t.getParameters(),c=null===(i=a.encodings)||void 0===i?void 0:i[0];Zv()&&!c&&(n.encodings=[r]),c&&Object.assign(c,r),Object.assign(a,n),fb.debug(\"[\".concat(e.getTrackId(),\"] updateRtpSenderEncodings: \").concat(JSON.stringify(a.encodings))),await t.setParameters(a)}async applySendEncodings(e,t){try{if(!ZP().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let i=0;i<e.length;i++){const n=e[i],r=t[i];r instanceof aU&&!this.isVP8Simulcast(r)&&await this.updateRtpSenderEncodings(r,n.sender)}}catch(e){fb.debug(\"[\".concat(this.store.clientId,\"] Apply RTPSendEncodings failed.\"))}}mungSendOfferSDP(e,t,i){const n=FU.parse(e);return t.forEach(((e,t)=>{const r=i[t],o=n.mediaDescriptions.find((e=>e.attributes.mid===r));o&&(JU(o,e),ex(o,e,this.store.codec))})),FU.print(n)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,i)=>{var n;null===(n=this.onFirstVideoDecoded)||void 0===n||n.call(this,e,t,i)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedLocalCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onFirstVideoDecodedTimeout=e=>{var t;null===(t=this.onFirstVideoDecodedTimeout)||void 0===t||t.call(this,e)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0,this.statsFilter.onFirstVideoDecodedTimeout=void 0}async applySimulcastForFirefox(e,t){if(e.length===t.length)for(let a=0;a<e.length;a++){var i,n,r,o,s;const c=e[a],d=t[a];if(d instanceof aU&&!Dn(i=d._hints).call(i,mL.LOW_STREAM)&&null!==(n=d._encoderConfig)&&void 0!==n&&n.bitrateMax&&(null===(r=d._encoderConfig)||void 0===r?void 0:r.bitrateMax)>200&&null!==(o=d._scalabilityMode)&&void 0!==o&&o.numSpatialLayers&&(null===(s=d._scalabilityMode)||void 0===s?void 0:s.numSpatialLayers)>1&&\"vp8\"===this.store.codec){const e={},t={high:1e3*(d._encoderConfig.bitrateMax-50),medium:5e4};e.encodings=[{rid:\"m\",active:!0,maxBitrate:t.medium,scaleResolutionDownBy:4},{rid:\"h\",active:!0,maxBitrate:t.high}];const i=c.sender.getParameters();await c.sender.setParameters(Object.assign(i,e))}}}async applySimulcastEncodings(e,t){if(!Zv()&&e.length===t.length)for(let i=0;i<e.length;i++){const n=t[i];if(n instanceof aU&&this.isVP8Simulcast(n)){const t=e[i],r={},o={high:1e3*(n._encoderConfig.bitrateMax-50),medium:5e4};r.encodings=[{active:!0,adaptivePtime:!1,networkPriority:\"high\",priority:\"high\",maxBitrate:o.high},{active:!0,adaptivePtime:!1,networkPriority:\"low\",priority:\"low\",maxBitrate:o.medium,scaleResolutionDownBy:4}];const s=t.sender.getParameters();await t.sender.setParameters(Object.assign(s,r))}}}isVP8Simulcast(e){var t,i,n,r,o;return!!(e instanceof aU&&XA(\"SIMULCAST\")&&\"vp8\"===this.store.codec&&!Dn(t=e._hints).call(t,mL.LOW_STREAM)&&null!==(i=e._encoderConfig)&&void 0!==i&&i.bitrateMax&&(null===(n=e._encoderConfig)||void 0===n?void 0:n.bitrateMax)>200&&null!==(r=e._scalabilityMode)&&void 0!==r&&r.numSpatialLayers&&(null===(o=e._scalabilityMode)||void 0===o?void 0:o.numSpatialLayers)>1)}logSDPExchange(e,t,i,n){if(XA(\"SDP_LOGGING\"))return fb.upload(\"[\".concat(this.store.clientId,\"] exchanging \").concat(i,\" \").concat(t,\" SDP during P2PConnection.\").concat(n,\"\\n\"),e),\"offer\"===t?e=>{this.logSDPExchange(e,\"answer\",\"local\"===i?\"remote\":\"local\",n)}:void 0}async muteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter((t=>t.mid&&-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map((e=>{e.direction=\"inactive\"}));const i=await this.peerConnection.createOffer(),n=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"muteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.muteRemote(e);const r=this.remoteSDP.toString();null==n||n(r),await this.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.muteLocal failed; \".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter((t=>t.mid&&-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map((async e=>{e.direction=\"sendonly\"}));const i=await this.peerConnection.createOffer(),n=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"unmuteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.unmuteRemote(e);const r=this.remoteSDP.toString();null==n||n(r),await this.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteLocal failed; \".concat(e.toString()))}}async getRemoteSSRC(e,t){var i,n;if(t=null!==(i=t)&&void 0!==i?i:null===(n=this.currentRemoteDescription)||void 0===n?void 0:n.sdp){var r;const i=null===(r=FU.parse(t).mediaDescriptions.find((t=>t.attributes.mid===e)))||void 0===r?void 0:r.attributes.ssrcs;return null==i?void 0:i[0].ssrcId}}async setRemoteDescription(e){var t;await this.peerConnection.setRemoteDescription(e),Dn(t=[\"connected\",\"completed\"]).call(t,this.peerConnection.iceConnectionState)||(this.isReady=!0,this.addRemoteCandidate())}mungReceiveAnswerSDP(e,t,i){const n=FU.parse(e),r=n.mediaDescriptions.find((e=>e.attributes.mid===t));return r&&i===dO.AUDIO&&\"audio\"===r.media.mediaType&&ox(r),FU.print(n)}},Cw(BV.prototype,\"establish\",[HV],Object.getOwnPropertyDescriptor(BV.prototype,\"establish\"),BV.prototype),Cw(BV.prototype,\"connect\",[HV],Object.getOwnPropertyDescriptor(BV.prototype,\"connect\"),BV.prototype),Cw(BV.prototype,\"receive\",[HV],Object.getOwnPropertyDescriptor(BV.prototype,\"receive\"),BV.prototype),Cw(BV.prototype,\"mockReceive\",[HV],Object.getOwnPropertyDescriptor(BV.prototype,\"mockReceive\"),BV.prototype),Cw(BV.prototype,\"stopReceiving\",[HV],Object.getOwnPropertyDescriptor(BV.prototype,\"stopReceiving\"),BV.prototype),Cw(BV.prototype,\"restartICE\",[HV],Object.getOwnPropertyDescriptor(BV.prototype,\"restartICE\"),BV.prototype),Cw(BV.prototype,\"close\",[HV],Object.getOwnPropertyDescriptor(BV.prototype,\"close\"),BV.prototype),Cw(BV.prototype,\"updateEncoderConfig\",[HV],Object.getOwnPropertyDescriptor(BV.prototype,\"updateEncoderConfig\"),BV.prototype),Cw(BV.prototype,\"updateSendParameters\",[HV],Object.getOwnPropertyDescriptor(BV.prototype,\"updateSendParameters\"),BV.prototype),Cw(BV.prototype,\"replaceTrack\",[HV],Object.getOwnPropertyDescriptor(BV.prototype,\"replaceTrack\"),BV.prototype),Cw(BV.prototype,\"muteLocal\",[HV],Object.getOwnPropertyDescriptor(BV.prototype,\"muteLocal\"),BV.prototype),Cw(BV.prototype,\"unmuteLocal\",[HV],Object.getOwnPropertyDescriptor(BV.prototype,\"unmuteLocal\"),BV.prototype),BV);function HV(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From P2PConnection.\".concat(t));try{for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s];return await n.apply(this,o)}finally{i()}},i}function KV(e,t){let i=document.createElement(\"video\"),n=document.createElement(\"canvas\");i.setAttribute(\"style\",\"display:none\"),n.setAttribute(\"style\",\"display:none\"),i.setAttribute(\"muted\",\"\"),i.muted=!0,i.setAttribute(\"autoplay\",\"\"),i.autoplay=!0,i.setAttribute(\"playsinline\",\"\"),n.width=QO(t.width),n.height=QO(t.height);const r=QO(t.framerate||15);document.body.append(i),document.body.append(n);let o=e._mediaStreamTrack;i.srcObject=new MediaStream([o]),i.play();const s=n.getContext(\"2d\");if(!s)throw new yb(Ry.UNEXPECTED_ERROR,\"can not get canvas context\");const a=ZP(),c=n.captureStream(a.supportRequestFrame?0:r).getVideoTracks()[0];c.canvas||(c.canvas=n),n.startCapture=()=>{if(!i)return n.stopCapture&&n.stopCapture();if(i.paused&&i.play(),i.videoHeight>2&&i.videoWidth>2){const e=i.videoWidth,t=i.videoHeight/e,r=n.width*t;Math.abs(r-n.height)>=2&&(fb.debug(\"adjust low stream resolution\",\"\".concat(n.width,\"x\").concat(n.height,\" -> \").concat(n.width,\"x\").concat(r)),n.height=r)}s.drawImage(i,0,0,n.width,n.height),c.requestFrame&&c.requestFrame(),o!==e._mediaStreamTrack&&(o=e._mediaStreamTrack,i.srcObject=new MediaStream([o]))},n.stopCapture=QL((()=>n.startCapture&&n.startCapture()),r);const d=c.stop;return c.stop=()=>{d.call(c),i&&(i.remove(),i.srcObject=null,i=null),n&&(n.width=0,n.remove(),n.stopCapture&&n.stopCapture(),n.startCapture=void 0,n.stopCapture=void 0,n=null),fb.debug(\"clean low stream renderer\")},c}var YV=function(e){return e[e.HEIGHT=2033]=\"HEIGHT\",e[e.FRAME_RATE=2034]=\"FRAME_RATE\",e[e.WIDTH=2035]=\"WIDTH\",e}(YV||{}),qV=function(e){return e[e.FRAME_RATE=2002]=\"FRAME_RATE\",e[e.WIDTH=2003]=\"WIDTH\",e[e.HEIGHT=2004]=\"HEIGHT\",e[e.PACKAGE_LOST=2005]=\"PACKAGE_LOST\",e[e.AVG_ENCODE=2007]=\"AVG_ENCODE\",e[e.NACKS=2009]=\"NACKS\",e[e.PLIS=2010]=\"PLIS\",e[e.FIRS=2011]=\"FIRS\",e[e.BITRATE=2012]=\"BITRATE\",e[e.PACKAGE_RATE=2031]=\"PACKAGE_RATE\",e[e.ADAPTATION=2032]=\"ADAPTATION\",e[e.ACTUAL_ENCODED=2060]=\"ACTUAL_ENCODED\",e[e.BANDWIDTH=2061]=\"BANDWIDTH\",e[e.RETRANSMIT=2062]=\"RETRANSMIT\",e[e.TARGET_ENCODED=2064]=\"TARGET_ENCODED\",e[e.TRANSMIT=2066]=\"TRANSMIT\",e[e.FREEZE=2082]=\"FREEZE\",e[e.DISABLED=2095]=\"DISABLED\",e[e.PLAYER_STATUS=2128]=\"PLAYER_STATUS\",e[e.QP_SUM=2143]=\"QP_SUM\",e}(qV||{}),zV=function(e){return e[e.BITRATE=2069]=\"BITRATE\",e[e.PACKAGE_LOST=2070]=\"PACKAGE_LOST\",e[e.PACKAGE_RATE=2071]=\"PACKAGE_RATE\",e[e.HEIGHT=2073]=\"HEIGHT\",e[e.FRAME_RATE=2075]=\"FRAME_RATE\",e[e.WIDTH=2077]=\"WIDTH\",e}(zV||{}),JV=function(e){return e[e.JITTER=-1]=\"JITTER\",e[e.PACKAGE_LOST=2014]=\"PACKAGE_LOST\",e[e.WIDTH=2018]=\"WIDTH\",e[e.HEIGHT=2019]=\"HEIGHT\",e[e.FRAME_RATE=2020]=\"FRAME_RATE\",e[e.JITTER_BUFFER=2023]=\"JITTER_BUFFER\",e[e.CURRENT_DELAY=2024]=\"CURRENT_DELAY\",e[e.NACKS=2026]=\"NACKS\",e[e.PLIS=2027]=\"PLIS\",e[e.FIRS=2028]=\"FIRS\",e[e.BITRATE=2029]=\"BITRATE\",e[e.PACKAGE_RATE=2078]=\"PACKAGE_RATE\",e[e.FREEZE=2084]=\"FREEZE\",e[e.DISABLED=2101]=\"DISABLED\",e[e.PLAYER_STATUS=2129]=\"PLAYER_STATUS\",e[e.QP_SUM=2144]=\"QP_SUM\",e[e.I_FRAME_DELAY=2149]=\"I_FRAME_DELAY\",e}(JV||{}),XV=function(e){return e[e.FRAME_RATE_DECODE=2021]=\"FRAME_RATE_DECODE\",e[e.FRAME_RATE_RENDER=2022]=\"FRAME_RATE_RENDER\",e[e.FRAME_RATE_OUTPUT=2155]=\"FRAME_RATE_OUTPUT\",e[e.FREEZE_TIME=2109]=\"FREEZE_TIME\",e[e.FREEZE_TIME_RENDER=2147]=\"FREEZE_TIME_RENDER\",e[e.FREEZE_DURATION=2156]=\"FREEZE_DURATION\",e}(XV||{}),QV=function(e){return e[e.PCM_LEVEL=2104]=\"PCM_LEVEL\",e}(QV||{}),ZV=function(e){return e[e.PACKAGE_LOST=-1]=\"PACKAGE_LOST\",e[e.LEVEL=2038]=\"LEVEL\",e[e.BITRATE=2039]=\"BITRATE\",e[e.PACKAGE_RATE=2040]=\"PACKAGE_RATE\",e[e.AEC_RETURN_LOSS=2041]=\"AEC_RETURN_LOSS\",e[e.AEC_RETURN_LOSS_ENH=2042]=\"AEC_RETURN_LOSS_ENH\",e[e.FREEZE=2081]=\"FREEZE\",e[e.DISABLED=2096]=\"DISABLED\",e}(ZV||{}),$V=function(e){return e[e.BITRATE=2044]=\"BITRATE\",e[e.PACKAGE_LOST=2045]=\"PACKAGE_LOST\",e[e.PACKAGE_RATE=2046]=\"PACKAGE_RATE\",e[e.CURRENT_DELAY=2047]=\"CURRENT_DELAY\",e[e.JITTER_BUFFER=2054]=\"JITTER_BUFFER\",e[e.JITTER=2055]=\"JITTER\",e[e.FREEZE=2083]=\"FREEZE\",e[e.DISABLED=2102]=\"DISABLED\",e[e.PCM_LEVEL=2105]=\"PCM_LEVEL\",e[e.PLAYER_STATUS=2130]=\"PLAYER_STATUS\",e[e.CONCEALED_SAMPLES=2148]=\"CONCEALED_SAMPLES\",e}($V||{}),eF=function(e){return e[e.FREEZE_TIME=-1]=\"FREEZE_TIME\",e[e.LEVEL=2043]=\"LEVEL\",e}(eF||{}),tF=function(e){return e[e.RTT=2006]=\"RTT\",e[e.CONN_TYPE=801]=\"CONN_TYPE\",e}(tF||{});const iF=1e3,nF=3;function rF(e,t,i){null!=i&&Number.isFinite(i)&&(e[t]=Math.round(Math.max(0,i)))}function oF(e){const t={[tF.CONN_TYPE]:0,[tF.RTT]:e.rtt};switch(e.selectedCandidatePair.localCandidate.candidateType){case\"relay\":{const i=e.selectedCandidatePair.localCandidate.relayProtocol;\"udp\"===i&&(t[tF.CONN_TYPE]=1),\"tcp\"===i&&(t[tF.CONN_TYPE]=3),\"tls\"===i&&(t[tF.CONN_TYPE]=4);break}case\"srflx\":t[tF.CONN_TYPE]=2}return t}function sF(e){let t=0;switch(e){case\"none\":t=0;break;case\"cpu\":t=1;break;case\"bandwidth\":t=2;break;case\"other\":t=3}return t}class aF extends xy{constructor(e){super(),Fg(this,\"store\",void 0),Fg(this,\"uploadWRTCStatsTimer\",void 0),Fg(this,\"uploadOutboundDenoiserStatsTimer\",void 0),Fg(this,\"uploadExtStatsTimer\",void 0),Fg(this,\"uploadExtUsageStatsTimer\",void 0),Fg(this,\"uploadInboundExtStatsTimer\",void 0),Fg(this,\"requestStats\",void 0),Fg(this,\"requestTransportStats\",void 0),Fg(this,\"requestLocalMedia\",void 0),Fg(this,\"requestRemoteMedia\",void 0),Fg(this,\"requestAllTracks\",void 0),Fg(this,\"requestVideoIsReady\",void 0),Fg(this,\"requestUploadStats\",void 0),Fg(this,\"requestUpload\",void 0),Fg(this,\"uploadOutboundStarted\",!1),Fg(this,\"uploadInboundStarted\",!1),Fg(this,\"uploadTransportStarted\",!1),Fg(this,\"uploadExtensionUsageStarted\",!1),Fg(this,\"lastRecvStats\",void 0),Fg(this,\"lastSendStats\",void 0),Fg(this,\"lastFullRecvStats\",void 0),Fg(this,\"lastFullSendStats\",void 0),Fg(this,\"needUploadRenderFreezeTime\",!0),this.store=e}uploadWRTCStats(e){if(!this.requestStats||!this.requestUploadStats)return;let t,i;if(this.uploadTransportStarted&&(t=this.requestStats(),this.store.useP2P&&(i=this.requestStats(!0))),!t&&this.uploadOutboundStarted&&(t=this.requestStats()),!i&&this.uploadInboundStarted&&(i=this.requestStats(!0)),t||i){const n={};if(this.uploadTransportStarted&&t){const r=this.getTransportStats(t,i,e);r&&(n.misc=[r])}if(this.uploadOutboundStarted&&t){const i=this.getOutboundStats(t,e?this.lastSendStats:this.lastFullSendStats,e);i&&(n.outbound=[i])}if(this.uploadInboundStarted&&i){const t=this.getInboundStats(i,e?this.lastRecvStats:this.lastFullRecvStats,e);t&&(n.inbound=t)}this.requestUploadStats(n)}this.lastRecvStats=i,this.lastSendStats=t,e||(this.lastFullRecvStats=i,this.lastFullSendStats=t)}startUploadWRTCStats(){if(this.uploadWRTCStatsTimer)return;let e=1;this.uploadWRTCStatsTimer=window.setInterval((()=>{if(!this.uploadTransportStarted&&!this.uploadInboundStarted&&!this.uploadOutboundStarted)return this.stopUploadWRTCStats();this.uploadWRTCStats(e!==nF),++e===nF+1&&(e=1)}),iF)}stopUploadWRTCStats(){window.clearInterval(this.uploadWRTCStatsTimer),this.uploadWRTCStatsTimer=void 0,this.lastSendStats&&(this.lastSendStats.videoSend=[],this.lastSendStats.audioSend=[],this.lastSendStats=void 0),this.lastRecvStats&&(this.lastRecvStats.videoRecv=[],this.lastRecvStats.audioRecv=[],this.lastRecvStats=void 0)}getTransportStats(e,t,i){if(!this.requestStats)return;if(i)return null==e.rtt?void 0:{addition:{[tF.RTT]:e.rtt,[tF.CONN_TYPE]:void 0}};const n=oF(e);if(this.store.useP2P){if(t){const e=oF(t);n[tF.CONN_TYPE]+=e[tF.CONN_TYPE]<<3}n[tF.CONN_TYPE]+=110}else n[tF.CONN_TYPE]+=100;return{addition:n}}getOutboundStats(e,t,i){if(!this.requestUploadStats||!this.requestLocalMedia)return;const n=this.requestLocalMedia();if(!n||0===n.length)return;let r,o,s;return n.forEach((n=>{let[a,{track:c,ssrcs:d}]=n;switch(a){case hO.LocalVideoLowTrack:case hO.LocalVideoTrack:if(a===hO.LocalVideoTrack){const n=function(e,t,i,n,r){const o=t.videoSend.find((t=>t.ssrc===e));if(!o)return;const s={},{sentFrame:a,inputFrame:c}=o;if(c&&a){const e=c.frameRate,t=a.frameRate;s[qV.FREEZE]=function(e,t){let i=!0;return i=!(e<=5)&&(e<=10?t<3:e<=20?t<4:t<5),i}(e,t)?1:0}if(rF(s,qV.QP_SUM,o.qpSumPerFrame),r)return s;switch(a&&(rF(s,qV.HEIGHT,a.height),rF(s,qV.WIDTH,a.width),rF(s,qV.FRAME_RATE,a.frameRate)),s[qV.DISABLED]=n._originMediaStreamTrack&&!n._originMediaStreamTrack.enabled||n._mediaStreamTrack&&!n._mediaStreamTrack.enabled?1:0,o.adaptionChangeReason){case\"none\":s[qV.ADAPTATION]=0;break;case\"cpu\":s[qV.ADAPTATION]=1;break;case\"bandwidth\":s[qV.ADAPTATION]=2;break;case\"other\":s[qV.ADAPTATION]=3}let d=0;o.adaptionChangeReason&&(d+=sF(o.adaptionChangeReason)),t.qualityLimitationReason&&(d+=sF(t.qualityLimitationReason)<<3),s[qV.ADAPTATION]=d,s[qV.PLAYER_STATUS]=xL[n._player?n._player.videoElementStatus:\"uninit\"],rF(s,qV.NACKS,o.nacksCount),rF(s,qV.PLIS,o.plisCount),rF(s,qV.FIRS,o.firsCount),rF(s,qV.AVG_ENCODE,o.avgEncodeMs);const l=i&&i.videoSend.find((t=>t.ssrc===e));if(l){let e=r?iF:iF*nF;l.timestamp&&o.timestamp&&(e=o.timestamp-l.timestamp),null!=l.packets&&null!=o.packets&&rF(s,qV.PACKAGE_RATE,1e3*(o.packets-l.packets)/e),null!=o.packetsLost&&null!=l.packetsLost&&rF(s,qV.PACKAGE_LOST,o.packetsLost-l.packetsLost),null!=l.bytes&&null!=o.bytes&&rF(s,qV.BITRATE,8*(o.bytes-l.bytes)/e)}return s}(d[0].ssrcId,e,t,c,i),r=i?null:function(e,t,i){const n=t.videoSend.find((t=>t.ssrc===e));if(!n)return null;const r={},o=n.inputFrame,s=o&&o.height||i&&i.videoHeight||0,a=o&&o.width||i&&i.videoWidth||0,c=o&&o.frameRate||0;return rF(r,YV.HEIGHT,s),rF(r,YV.WIDTH,a),rF(r,YV.FRAME_RATE,c),r}(d[0].ssrcId,e,c),s=i?null:function(e){const t={};return rF(t,qV.RETRANSMIT,e.bitrate.retransmit),rF(t,qV.TARGET_ENCODED,e.bitrate.targetEncoded),rF(t,qV.ACTUAL_ENCODED,e.bitrate.actualEncoded),rF(t,qV.TRANSMIT,e.bitrate.transmit),rF(t,qV.BANDWIDTH,e.sendBandwidth),t}(e);o=Object.assign({},n,r,s)}else s=i?void 0:function(e,t,i){const n=t.videoSend.find((t=>t.ssrc===e));if(!n)return;const r={},o=n.sentFrame;if(o&&(rF(r,zV.HEIGHT,o.height),rF(r,zV.WIDTH,o.width),rF(r,zV.FRAME_RATE,o.frameRate)),i){const t=i.videoSend.find((t=>t.ssrc===e));if(t){let e=iF*nF;t.timestamp&&n.timestamp&&(e=n.timestamp-t.timestamp),null!=t.packets&&null!=n.packets&&rF(r,zV.PACKAGE_RATE,1e3*(n.packets-t.packets)/e),null!=n.packetsLost&&null!=t.packetsLost&&rF(r,zV.PACKAGE_LOST,n.packetsLost-t.packetsLost),null!=t.bytes&&null!=n.bytes&&rF(r,zV.BITRATE,8*(n.bytes-t.bytes)/e)}}return r}(d[0].ssrcId,e,t);break;case hO.LocalAudioTrack:r=i?void 0:function(e,t,i,n){const r=t.audioSend.find((t=>t.ssrc===e));if(!r)return;const o={};o[ZV.DISABLED]=n._originMediaStreamTrack&&!n._originMediaStreamTrack.enabled||n._mediaStreamTrack&&!n._mediaStreamTrack.enabled?1:0;const s=100*n._source.getAccurateVolumeLevel(),a=r.inputLevel;if(null!=a){const e=Math.ceil(50*Math.log10(100*a+1));rF(o,ZV.LEVEL,e)}else rF(o,ZV.LEVEL,s);rF(o,QV.PCM_LEVEL,s),rF(o,ZV.AEC_RETURN_LOSS,r.aecReturnLoss),rF(o,ZV.AEC_RETURN_LOSS_ENH,r.aecReturnLossEnhancement),o[ZV.FREEZE]=0;const c=i&&i.audioSend.find((t=>t.ssrc===e));if(c){let e=iF*nF;c.timestamp&&r.timestamp&&(e=r.timestamp-c.timestamp),null!=c.bytes&&null!=r.bytes&&rF(o,ZV.BITRATE,8*(r.bytes-c.bytes)/e),null!=c.packets&&null!=r.packets&&rF(o,ZV.PACKAGE_RATE,1e3*(r.packets-c.packets)/e)}return o}(d[0].ssrcId,e,t,c)}})),{high:o,low:s,audio:r}}getInboundStats(e,t,i){if(!this.requestRemoteMedia)return;const n=this.requestRemoteMedia()||[],r=[];return n.forEach((n=>{let[o,s]=n;const a={peer:o.uid};if(s.has(dO.VIDEO)&&o.videoTrack){const n=o._videoSSRC&&this.requestVideoIsReady&&this.requestVideoIsReady(o._videoSSRC)||!1,r=o.videoTrack?function(e,t,i,n,r,o,s){var a;const c=t.videoRecv.find((t=>t.ssrc===e));if(!c)return;const d={},{receivedFrame:l,outputFrame:u,decodeFrameRate:h}=c,p=i&&i.videoRecv.find((t=>t.ssrc===e));if(d[JV.FREEZE]=r&&DF.isRemoteVideoFreeze(n,c,p)?1:0,rF(d,XV.FRAME_RATE_DECODE,h),rF(d,JV.QP_SUM,c.qpSumPerFrame),c.framesRateFirefox&&rF(d,JV.FRAME_RATE,c.framesRateFirefox),l&&rF(d,JV.FRAME_RATE,l.frameRate),p){const e=t.timestamp-i.timestamp||(s?iF:nF*iF);null!=c.packetsLost&&null!=p.packetsLost&&rF(d,JV.PACKAGE_LOST,c.packetsLost-p.packetsLost),null!=p.bytes&&null!=c.bytes&&rF(d,JV.BITRATE,8*(c.bytes-p.bytes)/e),null!=p.packets&&null!=c.packets&&rF(d,JV.PACKAGE_RATE,1e3*(c.packets-p.packets)/e)}if(s)return d;l?(rF(d,JV.HEIGHT,l.height),rF(d,JV.WIDTH,l.width)):n&&(rF(d,JV.HEIGHT,n._videoHeight||0),rF(d,JV.WIDTH,n._videoWidth||0)),u&&rF(d,XV.FRAME_RATE_OUTPUT,u.frameRate);const _=null===(a=n._player)||void 0===a?void 0:a.rendFrameRate.toFixed(0);if(_&&rF(d,XV.FRAME_RATE_RENDER,+_),rF(d,JV.JITTER_BUFFER,c.jitterBufferMs),rF(d,JV.CURRENT_DELAY,c.currentDelayMs),rF(d,JV.FIRS,c.firsCount),rF(d,JV.NACKS,c.nacksCount),rF(d,JV.PLIS,c.plisCount),n){d[JV.DISABLED]=n._originMediaStreamTrack.enabled&&n._mediaStreamTrack.enabled?0:1;const e=n._player;if(e){const{freezeTimeCounterList:t,renderFreezeAccTime:i,videoElementStatus:n}=e;if(t&&t.length>0&&rF(d,XV.FREEZE_TIME,t.splice(0,1)[0]),o&&\"visible\"===yU.visibility&&n===ML.PLAYING&&ZP().supportRequestVideoFrameCallback){const t=Math.min(6e3,i);e.renderFreezeAccTime=Math.max(0,i-t),rF(d,XV.FREEZE_TIME_RENDER,t)}if(\"number\"==typeof c.totalFreezesDuration){const e=p&&p.totalFreezesDuration?c.totalFreezesDuration-p.totalFreezesDuration:c.totalFreezesDuration;rF(d,XV.FREEZE_DURATION,1e3*e)}}}if(d[JV.PLAYER_STATUS]=xL[n._player?n._player.videoElementStatus:\"uninit\"],p&&void 0!==c.totalInterFrameDelay&&void 0!==c.totalSquaredInterFrameDelay&&void 0!==p.totalInterFrameDelay&&void 0!==p.totalSquaredInterFrameDelay){const e=c.totalInterFrameDelay-p.totalInterFrameDelay,t=c.totalSquaredInterFrameDelay-p.totalSquaredInterFrameDelay,i=c.framesDecodeCount-p.framesDecodeCount,n=e/i*1e3,r=Math.round(1e3*Math.sqrt((t-Math.pow(e,2)/i)/i));!isNaN(r)&&n+r>Math.max(3*n,n+150)&&(d[JV.I_FRAME_DELAY]=r)}return d}(o._videoSSRC,e,t,o.videoTrack,!0===n,this.needUploadRenderFreezeTime,i):void 0;r&&(a.video=r)}if(s.has(dO.AUDIO)&&o.audioTrack){const n=o.audioTrack?function(e,t,i,n,r){const o=t.audioRecv.find((t=>t.ssrc===e));if(!o)return;const s={},a=i&&i.audioRecv.find((t=>t.ssrc===e)),{receivedFrames:c,droppedFrames:d}=o;var l,u;if(rF(s,$V.JITTER,o.jitterMs),null!=c&&null!=d&&(s[$V.FREEZE]=(u=d,0===(l=c)||100*u/l>20?1:0)),a){const e=t.timestamp-i.timestamp||(r?iF:iF*nF);null!=o.packets&&null!=a.packets&&rF(s,$V.PACKAGE_RATE,1e3*(o.packets-a.packets)/e),null!=a.bytes&&null!=o.bytes&&rF(s,$V.BITRATE,8*(o.bytes-a.bytes)/e),null!=o.packetsLost&&null!=a.packetsLost&&rF(s,$V.PACKAGE_LOST,o.packetsLost-a.packetsLost)}if(r)return s;const h=100*n._source.getAccurateVolumeLevel(),p=o.outputLevel;if(null!=p){const e=Math.ceil(50*Math.log10(100*p+1));rF(s,eF.LEVEL,e)}if(rF(s,$V.PCM_LEVEL,h),n&&(s[$V.DISABLED]=n._originMediaStreamTrack.enabled&&n._mediaStreamTrack.enabled?0:1),rF(s,$V.JITTER_BUFFER,o.jitterBufferMs),rF(s,$V.CURRENT_DELAY,o.jitterBufferMs),s[$V.PLAYER_STATUS]=xL[mk.getPlayerState(n.getTrackId())],a){const e=o.concealedSamples-a.concealedSamples;e>0&&rF(s,$V.CONCEALED_SAMPLES,e)}return s}(o._audioSSRC,e,t,o.audioTrack,i):void 0;n&&(a.audio=n)}(a.video||a.audio)&&r.push(a)})),this.needUploadRenderFreezeTime=!this.needUploadRenderFreezeTime,r}startUploadTransportStats(){this.uploadTransportStarted=!0,this.uploadWRTCStatsTimer||this.startUploadWRTCStats()}stopUploadTransportStats(){this.uploadTransportStarted=!1}startUploadOutboundStats(){this.uploadOutboundStarted||(this.uploadOutboundStarted=!0,this.uploadWRTCStatsTimer||this.startUploadWRTCStats(),this.uploadOutboundDenoiserStatsTimer&&window.clearInterval(this.uploadOutboundDenoiserStatsTimer),this.uploadOutboundDenoiserStatsTimer=window.setInterval((()=>{if(!this.requestAllTracks||!this.requestUpload)return;const e=(this.requestAllTracks()||[]).find((e=>e instanceof SM));if(e&&e._external.getDenoiserStats){const t=e._external.getDenoiserStats();t&&this.requestUpload(Lw.DENOISER_STATS,t)}}),2e3),this.uploadExtStatsTimer&&window.clearInterval(this.uploadExtStatsTimer),this.uploadExtStatsTimer=window.setInterval((()=>{if(!this.requestAllTracks||!this.requestUpload)return;this.requestAllTracks().forEach((e=>{e.getProcessorStats().forEach((e=>{this.requestUpload&&this.requestUpload(e.type,e.stats)}))}))}),2e3))}stopUploadOutboundStats(){this.uploadOutboundStarted&&(this.uploadOutboundStarted=!1,this.lastSendStats&&(this.lastSendStats.videoSend=[],this.lastSendStats.audioSend=[],this.lastSendStats=void 0),this.uploadOutboundDenoiserStatsTimer&&window.clearInterval(this.uploadOutboundDenoiserStatsTimer),this.uploadOutboundDenoiserStatsTimer=void 0)}startUploadInboundStats(){this.uploadInboundStarted||(this.uploadInboundStarted=!0,this.uploadWRTCStatsTimer||this.startUploadWRTCStats(),this.uploadInboundExtStatsTimer&&window.clearInterval(this.uploadInboundExtStatsTimer),this.uploadInboundExtStatsTimer=window.setInterval((()=>{if(!this.requestUpload||!this.requestRemoteMedia)return;(this.requestRemoteMedia()||[]).forEach((e=>{let[t,i]=e;if(i.has(dO.VIDEO)&&t.videoTrack){t.videoTrack.getProcessorStats().forEach((e=>{this.requestUpload&&this.requestUpload(e.type,e.stats)}))}if(i.has(dO.AUDIO)&&t.audioTrack){t.audioTrack.getProcessorStats().forEach((e=>{this.requestUpload&&this.requestUpload(e.type,e.stats)}))}}))}),2e3))}stopUploadInboundStats(){this.uploadInboundStarted&&(this.uploadInboundStarted=!1,this.lastRecvStats&&(this.lastRecvStats.videoRecv=[],this.lastRecvStats.audioRecv=[],this.lastRecvStats=void 0))}startUploadExtensionUsageStats(){if(this.uploadExtensionUsageStarted)return;this.uploadExtensionUsageStarted=!0,this.uploadExtUsageStatsTimer&&window.clearInterval(this.uploadExtUsageStatsTimer);const e=new Map;this.uploadExtUsageStatsTimer=window.setInterval((async()=>{const t=Date.now(),i={connectionInterval:XA(\"EXTENSION_USAGE_UPLOAD_INTERVAL\")/1e3,details:[],lts:t};let n=[];const r=this.requestAllTracks&&this.requestAllTracks()||[];for(const e of r)!e.muted&&e.enabled&&(n=n.concat(await e.getProcessorUsage()));const o=this.requestRemoteMedia&&this.requestRemoteMedia()||[];for(const[e,t]of o)t.has(dO.VIDEO)&&e.videoTrack&&(n=n.concat(await e.videoTrack.getProcessorUsage())),t.has(dO.AUDIO)&&e.audioTrack&&(n=n.concat(await e.audioTrack.getProcessorUsage()));if(0===n.length)return;i.details=function(e,t){const i={};for(const{id:s,value:a,level:c,direction:d}of e){var n;const e=null!==(n=t.get(s))&&void 0!==n?n:0,l=2===a?e+XA(\"EXTENSION_USAGE_UPLOAD_INTERVAL\")/1e3:e;var r,o;t.set(s,l),i[s]?(2===a&&(i[s].value=a),c>i[s].level&&(i[s].level=c),\"remote\"===d&&(i[s].remoteUidCount+=1),i[s].totalTs=null!==(r=t.get(s))&&void 0!==r?r:0):i[s]={value:a,level:c,remoteUidCount:\"local\"===d?0:1,totalTs:null!==(o=t.get(s))&&void 0!==o?o:0}}return Object.keys(i).map((e=>{const{level:t,value:n,totalTs:r}=i[e];return{id:e,level:t,value:n,totalTs:r}}))}(n,e);const s=Date.now(),a=s>t?s:t+1;this.requestUpload&&this.requestUpload(Lw.EXTENSION_USAGE_STATS,{usageStats:i,sendTs:a})}),XA(\"EXTENSION_USAGE_UPLOAD_INTERVAL\"))}stopUploadExtensionUsageStats(){this.uploadExtensionUsageStarted&&(this.uploadExtensionUsageStarted=!1,this.uploadExtUsageStatsTimer&&window.clearInterval(this.uploadExtUsageStatsTimer),this.uploadExtUsageStatsTimer=void 0)}}class cF{get hasVideo(){return this._video_enabled_&&!this._video_muted_&&this._video_added_}get hasAudio(){return this._audio_enabled_&&!this._audio_muted_&&this._audio_added_}get audioTrack(){if(this.hasAudio||this._audio_pre_subscribed)return this._audioTrack}get videoTrack(){if(this.hasVideo||this._video_pre_subscribed)return this._videoTrack}get dataChannels(){return this._dataChannels}constructor(e,t){Fg(this,\"uid\",void 0),Fg(this,\"_uintid\",void 0),Fg(this,\"_trust_in_room_\",!0),Fg(this,\"_trust_audio_enabled_state_\",!0),Fg(this,\"_trust_video_enabled_state_\",!0),Fg(this,\"_trust_audio_mute_state_\",!0),Fg(this,\"_trust_video_mute_state_\",!0),Fg(this,\"_audio_muted_\",!1),Fg(this,\"_video_muted_\",!1),Fg(this,\"_audio_enabled_\",!0),Fg(this,\"_video_enabled_\",!0),Fg(this,\"_audio_added_\",!1),Fg(this,\"_video_added_\",!1),Fg(this,\"_is_pre_created\",!1),Fg(this,\"_video_pre_subscribed\",!1),Fg(this,\"_audio_pre_subscribed\",!1),Fg(this,\"_trust_video_stream_added_state_\",!0),Fg(this,\"_trust_audio_stream_added_state_\",!0),Fg(this,\"_audioTrack\",void 0),Fg(this,\"_videoTrack\",void 0),Fg(this,\"_dataChannels\",[]),Fg(this,\"_audioSSRC\",void 0),Fg(this,\"_videoSSRC\",void 0),Fg(this,\"_audioOrtc\",void 0),Fg(this,\"_videoOrtc\",void 0),Fg(this,\"_cname\",void 0),Fg(this,\"_rtxSsrcId\",void 0),Fg(this,\"_videoMid\",void 0),Fg(this,\"_audioMid\",void 0),this.uid=e,this._uintid=t}}let dF=function(e){return e.SEND_ONLY=\"SEND_ONLY\",e.RECEIVE_ONLY=\"RECEIVE_ONLY\",e}({});function lF(e,t){var i;let n;switch(t){case hO.LocalAudioTrack:n=Zw.Audio;break;case hO.LocalVideoTrack:n=Dn(i=e._hints).call(i,mL.SCREEN_TRACK)?Zw.Screen:Zw.High;break;case hO.LocalVideoLowTrack:n=Zw.Low}return n}function uF(e){const t=ZP();if(e.some((e=>e._bypassWebAudio)))throw new Cy(Ry.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio\");if(!t.webAudioMediaStreamDest)throw new Cy(Ry.NOT_SUPPORTED,\"cannot publish multiple tracks because your browser does not support audio mixing\")}function hF(e,t){uF(e);const i=t||new RM;return e.forEach((e=>i.addAudioTrack(e))),i}var pF,_F,EF,fF,mF,TF,SF,gF,RF,CF,IF,vF;function yF(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function AF(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?yF(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):yF(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let bF=(pF=wF(dF.SEND_ONLY),_F=wF(dF.SEND_ONLY),EF=wF(),fF=wF(dF.RECEIVE_ONLY),mF=wF(dF.RECEIVE_ONLY),TF=wF(dF.RECEIVE_ONLY),SF=wF(dF.RECEIVE_ONLY),gF=wF(dF.RECEIVE_ONLY),RF=wF(dF.RECEIVE_ONLY),CF=wF(),IF=wF(dF.RECEIVE_ONLY),vF=class extends xy{get state(){return this._state}set state(e){const t=this._state;this._state=e,this.emit(_O.StateChange,t,this._state)}constructor(e,t){super(),Fg(this,\"isPlanB\",!1),Fg(this,\"store\",void 0),Fg(this,\"statsUploader\",void 0),Fg(this,\"sendConnection\",void 0),Fg(this,\"recvConnection\",void 0),Fg(this,\"localTrackMap\",new Map),Fg(this,\"remoteUserMap\",new Map),Fg(this,\"localDataChannels\",[]),Fg(this,\"pendingLocalTracks\",[]),Fg(this,\"pendingRemoteTracks\",[]),Fg(this,\"statsCollector\",void 0),Fg(this,\"dtlsFailedCount\",0),Fg(this,\"sendMutex\",new NA(\"P2PChannel2-send-mutex\")),Fg(this,\"recvMutex\",new NA(\"P2PChannel2-recv-mutex\")),Fg(this,\"_state\",pO.Disconnected),Fg(this,\"_restartStates\",[\"disconnected\",\"failed\"]),Fg(this,\"reconnectInterval\",void 0),Fg(this,\"uploadUnplinkStarted\",!1),Fg(this,\"uploadDownlinkStarted\",!1),Fg(this,\"uplinkStateUploadInterval\",void 0),Fg(this,\"downlinkStatsUploadInterval\",void 0),Fg(this,\"handleMuteLocalTrack\",(async(e,t,i)=>{const n=await this.sendMutex.lock(\"Locking from P2PChannel2.handleMuteLocalTrack\");try{if(!this.sendConnection||this.state!==pO.Connected)return void i(new Cy(Ry.INVALID_OPERATION,\"Cannot call P2PChannel2.handleMuteLocalTrack before sendConnection established.\"));const s=this.filterTobeMutedTracks(e);if(0===s.length)return void t();const a=s.find((e=>\"videoLowTrack\"===e[0]));if(a){a[1].track._originMediaStreamTrack.stop()}await this.sendConnection.muteLocal(s.map((e=>{let[,{id:t}]=e;return t})));let c=!1;var r,o;if(\"video\"===e.trackMediaType)c=!(null===(r=this.localTrackMap.get(hO.LocalAudioTrack))||void 0===r||!r.track._muted);else c=void 0===(null===(o=this.localTrackMap.get(hO.LocalVideoTrack))||void 0===o?void 0:o.id);const d=this.createMuteMessage(s);await $y(this,_O.RequestMuteLocal,d);const l=\"video\"===e.trackMediaType?yO.MUTE_LOCAL_VIDEO:yO.MUTE_LOCAL_AUDIO;await $y(this,_O.RequestP2PMuteLocal,{action:l,message:d,isMuteAll:c}),t()}catch(e){i(e)}finally{n()}})),Fg(this,\"handleUnmuteLocalTrack\",(async(e,t,i)=>{const n=await this.sendMutex.lock(\"Locking from P2PChannel2.handleUnmuteLocalTrack\");try{if(!this.sendConnection||this.state!==pO.Connected)return void i(new Cy(Ry.INVALID_OPERATION,\"Cannot call P2PChannel2.handleUnmuteLocalTrack before sendConnection established.\"));const r=this.filterTobeUnmutedTracks(e);if(0===r.length)return void t();await this.sendConnection.unmuteLocal(r.map((e=>{let[,{id:t}]=e;return t})));const o=this.createUnmuteMessage(r),s=\"video\"===e.trackMediaType?yO.UNMUTE_LOCAL_VIDEO:yO.UNMUTE_LOCAL_AUDIO;await $y(this,_O.RequestP2PMuteLocal,{action:s,message:o}),t()}catch(e){i(e)}finally{n()}})),Fg(this,\"handleUpdateVideoEncoder\",(async(e,t,i)=>{const n=await this.sendMutex.lock(\"Locking from P2PChannel2.handleSetVideoEncoder\");try{const i=this.localTrackMap.get(hO.LocalVideoTrack);if(!this.sendConnection||!i||i.track!==e||this.state!==pO.Connected)return void t();const{id:r,track:o}=i;r&&(await this.sendConnection.updateSendParameters(r,o),await this.sendConnection.updateEncoderConfig(r,o),this.emit(_O.UpdateVideoEncoder,o)),t()}catch(e){i(e)}finally{n()}})),Fg(this,\"handleUpdateVideoSendParameters\",(async(e,t,i)=>{const n=await this.sendMutex.lock(\"Locking from P2PChannel2.handleUpdateVideoSendParameters\");try{const i=this.localTrackMap.get(hO.LocalVideoTrack);if(!this.sendConnection||!i||i.track!==e||this.state!==pO.Connected)return void t();const{id:r,track:o}=i;r&&await this.sendConnection.updateSendParameters(r,o),t()}catch(e){i(e)}finally{n()}})),Fg(this,\"handleReplaceTrack\",(async(e,t,i,n)=>{let r;fb.debug(\"[\".concat(this.store.clientId,\"] P2PChannel2 handleReplaceTrack for [track-id-\").concat(e.getTrackId(),\"]\")),\"boolean\"==typeof n&&n||(r=await this.sendMutex.lock(\"From P2PChannel2.handleReplaceTrack\"));try{var o;const i=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(!this.sendConnection||!i||void 0===i[1].id||this.state!==pO.Connected)return void t();if(await(null===(o=this.sendConnection)||void 0===o?void 0:o.replaceTrack(e,i[1].id)),i[0]===hO.LocalVideoTrack&&ZP().supportDualStreamEncoding){const t=this.localTrackMap.get(hO.LocalVideoLowTrack);if(t){const i=e._mediaStreamTrack.clone();t.track._originMediaStreamTrack.stop(),t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i,await new Gh(((e,i)=>{this.handleReplaceTrack(t.track,e,i,!0)}))}}t()}catch(e){i(e)}finally{var s;null===(s=r)||void 0===s||s()}})),Fg(this,\"handleGetLocalVideoStats\",(e=>{e(this.statsCollector.getLocalVideoTrackStats())})),Fg(this,\"handleGetLocalAudioStats\",(e=>{e(this.statsCollector.getLocalAudioTrackStats())})),Fg(this,\"handleGetRemoteVideoStats\",(e=>this.statsCollector.getRemoteVideoTrackStats(e.uid)[e.uid])),Fg(this,\"handleGetRemoteAudioStats\",(e=>this.statsCollector.getRemoteAudioTrackStats(e.uid)[e.uid])),this.store=e,this.statsCollector=t,this.statsCollector.addP2PChannel(this),this.statsUploader=new aF(e),this.bindStatsUploaderEvents(),this.reconnectInterval=window.setInterval((()=>{[this.sendConnection,this.recvConnection].forEach((e=>{e&&(\"disconnected\"!==e.iceConnectionState&&\"failed\"!==e.iceConnectionState||this.handleDisconnect(e.direction))}))}),XA(\"ICE_RESTART_INTERVAL\"))}async startP2PConnection(e,t){throw new Cy(Ry.NOT_SUPPORTED,\"p2p mode does not support startP2PConnection.\")}async connect(e){throw new Cy(Ry.NOT_SUPPORTED,\"p2p mode does not support connect.\")}async startP2P(e,t){let i;try{if(t){this.recvConnection&&(fb.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.startP2P reset recvConnection.\")),this.recvConnection.close(),this.unbindConnectionEvents(this.recvConnection)),i=await this.recvMutex.lock(\"From P2PChannel.startP2P\"),this.recvConnection=new WV(e,this.store,Mw.RECEIVE_ONLY),this.bindConnectionEvents(this.recvConnection);const n=await this.recvConnection.establish(t);return{iceParameters:n.iceParameters,dtlsParameters:n.dtlsParameters,sdp:n.sdp}}{this.state=pO.New,this.sendConnection&&(fb.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.startP2P reset sendConnection.\")),this.sendConnection.close(),this.unbindConnectionEvents(this.sendConnection)),i=await this.sendMutex.lock(\"From P2PChannel.startP2P\"),this.sendConnection=new WV(e,this.store),this.store.peerConnectionStart(),this.bindConnectionEvents(this.sendConnection);const t=await this.sendConnection.establish();return{iceParameters:t.iceParameters,dtlsParameters:t.dtlsParameters,sdp:t.sdp}}}finally{i&&i()}}async p2pConnect(e){if(!this.sendConnection)throw new Cy(Ry.UNEXPECTED_ERROR,\"Cannot P2PChannel2.p2pConnect before P2PChannel2.startP2PConnection .\");this.store.peerConnectionStart(),await this.sendConnection.connect(e),this.statsUploader.startUploadTransportStats(),this.statsUploader.startUploadExtensionUsageStats(),this.state=pO.Connected}async addRemoteCandidate(e,t){if(t===Mw.RECEIVE_ONLY){if(!this.sendConnection)throw new Cy(Ry.UNEXPECTED_ERROR,\"Cannot P2PChannel2.connect before P2PChannel2.addRemoteCandidate .\");await this.sendConnection.addRemoteCandidate(e)}else{if(!this.recvConnection)throw new Cy(Ry.UNEXPECTED_ERROR,\"Cannot P2PChannel2.connect before P2PChannel2.addRemoteCandidate .\");await this.recvConnection.addRemoteCandidate(e)}}publish(e,t,i){var n=this;return YI((function*(){const r=yield qI(n.sendMutex.lock(\"From P2PChannel.publish\"));try{if(!n.sendConnection||n.state!==pO.Connected){n.throwIfTrackTypeNotMatch(e);const t=e.filter((e=>-1===n.pendingLocalTracks.indexOf(e)));return void(n.pendingLocalTracks=n.pendingLocalTracks.concat(t))}n.store.pubId=n.store.pubId+1,rV.markPublishStart(n.store.clientId,n.store.pubId);const o=n.filterTobePublishedTracks(e,t,i);if(0===o.length)return void(yield qI(n.tryToUnmuteAudio(e)));o.forEach((e=>{let{track:t,type:i}=e;const r=Date.now();n.store.publish(t.getTrackId(),i===hO.LocalAudioTrack?\"audio\":\"video\",r)})),n.bindLocalTrackEvents(o);const s=yield qI(n.sendConnection.send(o.map((e=>{let{track:t}=e;return t})),n.store.codec,n.store.audioCodec)),a=(yield qI(s.next())).value,c=n.createGatewayPublishMessage(o,a);try{yield c}catch(e){throw s.throw(e),(null==e?void 0:e.code)===Ry.WS_ABORT&&o.forEach((e=>{let{track:t}=e;-1===n.pendingLocalTracks.indexOf(t)&&n.pendingLocalTracks.push(t)})),n.unbindLocalTrackEvents(o),e}yield qI(s.next()),o.forEach((e=>{let{type:t}=e;n.statsCollector.addLocalStats(t)})),n.statsUploader.startUploadOutboundStats(),n.assignLocalTracks(o,a),o.forEach((e=>{let{track:t,type:i}=e;const r=Date.now();n.store.publish(t.getTrackId(),i===hO.LocalAudioTrack?\"audio\":\"video\",void 0,r)})),n.startUploadUplinkState()}finally{r()}}))()}async unpublish(e){if(!this.sendConnection||this.state!==pO.Connected)return void(0===e.length?this.pendingLocalTracks.length=0:this.pendingLocalTracks=this.pendingLocalTracks.filter((t=>!Dn(e).call(e,t))));const t=this.filterTobeUnpublishedTracks(e);if(0===t.length)return;const i=t.find((e=>\"videoLowTrack\"===e[0]));if(i){i[1].track.close()}const n=this.createGatewayUnpublishMessage(t);if(await this.sendConnection.stopSending(t.map((e=>{let[,{id:t}]=e;return t}))),this.withdrawLocalTracks(t),this.unbindLocalTrackEvents(t.map((e=>{let[t,{track:i}]=e;return{type:t,track:i}}))),t.forEach((e=>{let[t]=e;this.statsCollector.removeLocalStats(t)})),0===this.localTrackMap.size&&(this.statsUploader.stopUploadOutboundStats(),this.stopUploadUplinkState()),this.sendConnection&&this.state===pO.Connected){if(i){i[1].track.close()}return n}e.forEach((e=>{const t=this.pendingLocalTracks.indexOf(e);-1!==t&&this.pendingLocalTracks.splice(t,1)}))}startUploadUplinkState(){if(this.uploadUnplinkStarted)return;this.uploadUnplinkStarted=!0,this.uplinkStateUploadInterval&&window.clearInterval(this.uplinkStateUploadInterval);const e=()=>{const e=[],t=[];Array.from(this.localTrackMap.entries()).forEach((i=>{let[n,{track:r,ssrcs:o}]=i;const s={stream_type:lF(r,n),ssrcs:o};r._muted||!r._enabled?e.push(s):t.push(s)})),e.length>0&&e.forEach((e=>{$y(this,_O.RequestMuteLocal,[e])})),t.length>0&&t.forEach((e=>{$y(this,_O.RequestUnmuteLocal,[e])}))};e(),this.uplinkStateUploadInterval=window.setInterval((()=>{e()}),3e3)}stopUploadUplinkState(){this.uploadUnplinkStarted&&(this.uploadUnplinkStarted=!1,this.uplinkStateUploadInterval&&window.clearInterval(this.uplinkStateUploadInterval))}publishLowStream(e){return YI((function*(){throw new Cy(Ry.NOT_SUPPORTED,\"p2p mode does not support publishLowStream.\")}))()}async republish(){this.pendingLocalTracks.length>0&&(fb.debug(\"[\".concat(this.store.clientId,\"] Emit P2PChannelEvents.RequestRePublish to republish tracks.\")),await Zy(this,_O.RequestRePublish,this.pendingLocalTracks),this.emit(_O.MediaReconnectEnd,this.store.uid),this.pendingLocalTracks=[])}async unpublishLowStream(){throw new Cy(Ry.NOT_SUPPORTED,\"p2p mode does not support unpublishLowStream.\")}async subscribe(e,t,i,n){var r;if(!this.recvConnection)throw new Cy(Ry.INVALID_OPERATION,\"Cannot subscribe remote user when recvConnection disconnected.\");if(null!==(r=this.remoteUserMap.get(e))&&void 0!==r&&r.has(t))return;const{track:o,mid:s,transceiver:a}=await this.recvConnection.receive(t,[{ssrcId:i}],String(e.uid),n);t===dO.AUDIO?(e._audioTrack?e._audioTrack._updateOriginMediaStreamTrack(o):(e._audioTrack=new vU(o,e.uid,e._uintid,this.store),fb.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote audio track: \").concat(e._audioTrack.getTrackId()))),a&&e._audioTrack._updateRtpTransceiver(a),this.bindRemoteTrackEvents(e,e._audioTrack)):(e._videoSSRC=i,e._videoTrack?e._videoTrack._updateOriginMediaStreamTrack(o):(e._videoTrack=new IU(o,e.uid,e._uintid,this.store),fb.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote video track: \").concat(e._videoTrack.getTrackId()))),a&&e._videoTrack._updateRtpTransceiver(a),this.bindRemoteTrackEvents(e,e._videoTrack));const c=this.remoteUserMap.get(e);c?c.set(t,s):this.remoteUserMap.set(e,new Map([[t,s]])),this.statsCollector.addRemoteStats(e.uid),this.statsUploader.startUploadInboundStats(),this.startUploadDownlinkState();const d=this.pendingRemoteTracks.findIndex((i=>{let{user:n,kind:r}=i;return n.uid===e.uid&&t===r}));-1!==d&&(this.pendingRemoteTracks.splice(d,1),this.emit(_O.MediaReconnectEnd,e.uid))}async mockSubscribe(e,t,i,n){if(!this.recvConnection)throw new Cy(Ry.INVALID_OPERATION,\"Cannot subscribe remote user when recvConnection disconnected.\");await this.recvConnection.mockReceive(t,[{ssrcId:i}],String(e.uid),n)}async unsubscribe(e,t,i){const n=this.pendingRemoteTracks.filter((i=>{let{user:n,kind:r}=i;return void 0!==t?n.uid===e.uid&&t===r:n.uid===e.uid}));if(n.forEach((e=>{const t=this.pendingRemoteTracks.indexOf(e);this.pendingRemoteTracks.splice(t,1)})),this.recvConnection||i||n.forEach((t=>{let{kind:i}=t;var n;if(i===dO.AUDIO)null===(n=e._audioTrack)||void 0===n||n._destroy(),e._audioTrack=void 0;else if(i===dO.VIDEO){var r;null===(r=e._videoTrack)||void 0===r||r._destroy(),e._videoTrack=void 0}})),!this.recvConnection)return;const r=this.filterTobeUnSubscribedTracks(e,t);0!==r.length&&(await this.recvConnection.stopReceiving(r.map((e=>{let[,{id:t}]=e;return t}))),this.withdrawRemoteTracks(r),0===this.remoteUserMap.size&&(this.statsUploader.stopUploadInboundStats(),this.stopUploadDownlinkState()),r.forEach((e=>{let[t,{kind:n}]=e;var r,o;n===dO.VIDEO&&t._videoSSRC&&(null===(r=this.recvConnection)||void 0===r||r.setStatsRemoteVideoIsReady(t._videoSSRC,!1));if(n===dO.VIDEO)this.unbindRemoteTrackEvents(t._videoTrack),i||(null===(o=t._videoTrack)||void 0===o||o._destroy(),t._videoTrack=void 0);else if(n===dO.AUDIO){var s;if(this.unbindRemoteTrackEvents(t._audioTrack),!i)null===(s=t._audioTrack)||void 0===s||s._destroy(),t._audioTrack=void 0}})),r.forEach((e=>{let[,{kind:t}]=e;$y(this,_O.RequestP2PMuteRemote,t)})))}startUploadDownlinkState(){if(this.uploadDownlinkStarted)return;this.uploadDownlinkStarted=!0,this.downlinkStatsUploadInterval&&window.clearInterval(this.downlinkStatsUploadInterval);const e=()=>Array.from(this.remoteUserMap.entries()).forEach((e=>{let[,t]=e;[dO.VIDEO,dO.AUDIO].forEach((e=>{t.has(e)?$y(this,_O.RequestP2PUnmuteRemote,e):$y(this,_O.RequestP2PMuteRemote,e)}))}));e(),this.downlinkStatsUploadInterval=window.setInterval((()=>{e()}),3e3)}stopUploadDownlinkState(){this.uploadDownlinkStarted&&(this.uploadDownlinkStarted=!1,this.downlinkStatsUploadInterval&&window.clearInterval(this.downlinkStatsUploadInterval))}getAllDataChannels(){return this.localDataChannels}async massSubscribe(e){throw new Cy(Ry.NOT_SUPPORTED,\"p2p mode does not support massSubscribe.\")}async massSubscribeNoLock(e){throw new Cy(Ry.NOT_SUPPORTED,\"p2p mode does not support massSubscribeNoLock.\")}async massUnsubscribe(e){throw new Cy(Ry.NOT_SUPPORTED,\"p2p mode does not support massUnsubscribe.\")}async massUnsubscribeNoLock(e){throw new Cy(Ry.NOT_SUPPORTED,\"p2p mode does not support massUnsubscribeNoLock.\")}async muteRemote(e,t){if(!this.recvConnection)return;const i=this.remoteUserMap.get(e);if(!i)return void fb.warning(\"[\".concat(this.store.clientId,\"] P2PChannel2.muteRemote has no remote user \").concat(e.uid,\".\"));if(!i.get(t))return void fb.warning(\"[\".concat(this.store.clientId,\"] P2PChannel2.muteRemote has no remote user \").concat(e.uid,\" media type \").concat(t,\".\"));const n=t===dO.VIDEO?e._videoSSRC:e._audioSSRC;void 0!==n&&this.recvConnection.setStatsRemoteVideoIsReady(n,!1)}async unmuteRemote(e,t){return this.unmuteRemoteNoLock(e,t)}async unmuteRemoteNoLock(e,t){if(!this.recvConnection)return;const i=this.remoteUserMap.get(e);if(!i)return void fb.warning(\"[\".concat(this.store.clientId,\"] P2PChannel2.unmuteRemote has no remote user \").concat(e.uid,\".\"));i.get(t)||fb.warning(\"[\".concat(this.store.clientId,\"] P2PChannel2.unmuteRemote has no remote user \").concat(e.uid,\" media type \").concat(t,\".\"))}getAllTracks(e){const t=this.localTrackMap.get(hO.LocalAudioTrack);if((null==t?void 0:t.track)instanceof RM){const i=t.track;return Array.from(this.localTrackMap.entries()).filter((e=>{let[t]=e;return t!==hO.LocalAudioTrack})).filter((t=>{let[i]=t;return!(e&&i===hO.LocalVideoLowTrack)})).map((e=>{let[,{track:t}]=e;return t})).concat(i.trackList)}return Array.from(this.localTrackMap.entries()).filter((t=>{let[i]=t;return!(e&&i===hO.LocalVideoLowTrack)})).map((e=>{let[,{track:t}]=e;return t}))}reportPublishEvent(e,t,i,n,r){if(e){const i=this.localTrackMap.get(hO.LocalAudioTrack),o=n?this.localTrackMap.get(hO.LocalVideoLowTrack):this.localTrackMap.get(hO.LocalVideoTrack);vb.publish(this.store.sessionId,{eventElapse:rV.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==i?void 0:i.track.getTrackLabel(),videoName:null==o?void 0:o.track.getTrackLabel(),screenshare:-1!==(null==o?void 0:o.track._hints.indexOf(mL.SCREEN_TRACK)),audio:!!i,video:!!o,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:r})}else{var o;i||(i=[]);const s=i.find((e=>e instanceof TM)),a=n?null===(o=this.localTrackMap.get(hO.LocalVideoTrack))||void 0===o?void 0:o.track:i.find((e=>e instanceof aU));vb.publish(this.store.sessionId,{eventElapse:rV.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==s?void 0:s.getTrackLabel(),videoName:null==a?void 0:a.getTrackLabel(),screenshare:-1!==(null==a?void 0:a._hints.indexOf(mL.SCREEN_TRACK)),audio:!!s,video:!!a,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:r})}}reportSubscribeEvent(e,t,i,n){const r=n===dO.VIDEO?i._videoSSRC:i._audioSSRC;r&&vb.subscribe(this.store.sessionId,{succ:e,ec:t,video:n===dO.VIDEO,audio:n===dO.AUDIO,peerid:i.uid,subscribeRequestid:n===dO.VIDEO?i._videoSSRC:i._audioSSRC,p2pid:this.store.p2pId,eventElapse:rV.measureFromSubscribeStart(this.store.clientId,r)})}reset(){fb.debug(\"[\".concat(this.store.clientId,\"] P2PChannel2.reset\")),this.sendMutex=new NA(\"P2PChannel2-send-mutex\"),this.sendMutex=new NA(\"P2PChannel2-recv-mutex\"),this.sendConnection&&(this.sendConnection.close(),this.unbindConnectionEvents(this.sendConnection),this.sendConnection=void 0),this.recvConnection&&(this.recvConnection.close(),this.unbindConnectionEvents(this.recvConnection),this.recvConnection=void 0),this.statsUploader.stopUploadOutboundStats(),this.statsUploader.stopUploadInboundStats(),this.statsUploader.stopUploadTransportStats(),this.statsUploader.stopUploadExtensionUsageStats(),this.stopUploadUplinkState(),this.stopUploadDownlinkState(),this.unbindLocalTrackEvents(),this.unbindAllRemoteTrackEvents(),this.unbindRtpTransceiver();const e=this.localTrackMap.get(hO.LocalAudioTrack);if((null==e?void 0:e.track)instanceof RM){if(e.track.trackList.length>0){const t=e.track;e.track.trackList.forEach((e=>{t.removeAudioTrack(e)}))}e.track.close()}this.localTrackMap.clear(),this.remoteUserMap.clear(),this.statsCollector.removeRemoteStats(),this.statsCollector.removeLocalStats(),this.dtlsFailedCount=0,this.pendingLocalTracks=[],this.pendingRemoteTracks=[],this.reconnectInterval&&(window.clearInterval(this.reconnectInterval),this.reconnectInterval=void 0),this.state=pO.Disconnected}getStats(e){var t,i;return e?null===(i=this.recvConnection)||void 0===i?void 0:i.getStats():null===(t=this.sendConnection)||void 0===t?void 0:t.getStats()}getRemoteVideoIsReady(e){var t;return(null===(t=this.recvConnection)||void 0===t?void 0:t.getRemoteVideoIsReady(e))||!1}getLocalAudioVolume(){const e=this.localTrackMap.get(hO.LocalAudioTrack);if(e)return e.track.getVolumeLevel()}getLocalVideoSize(){const e=this.localTrackMap.get(hO.LocalVideoTrack);if(e)return{width:e.track.videoWidth||0,height:e.track.videoHeight||0}}getEncoderConfig(e){const t=this.localTrackMap.get(e);return t&&t.track instanceof aU||t&&t.track instanceof TM?t.track._encoderConfig:void 0}getLocalMedia(e){return this.localTrackMap.get(e)}hasLocalMedia(){return this.localTrackMap.size>0}hasRemoteMedia(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}async hasRemoteMediaWithLock(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}getRemoteMedia(e){var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t.uid===e));return i?{audioTrack:i.audioTrack,audioSSRC:i._audioSSRC,videoTrack:i.videoTrack,videoSSRC:i._videoSSRC}:{}}getAudioLevels(){let e=Array.from(this.remoteUserMap.entries()).map((e=>{let[t]=e;return{uid:t.uid,level:t.audioTrack?100*t.audioTrack._source.getAccurateVolumeLevel():0}}));const t=this.localTrackMap.get(hO.LocalAudioTrack);return t&&e.push({level:100*t.track._source.getAccurateVolumeLevel(),uid:this.store.uid}),e=aE(e).call(e,((e,t)=>e.level-t.level)),e}async disconnectForReconnect(){this.sendConnection&&this.recvConnection&&(fb.debug(\"[\".concat(this.store.clientId,\"] P2PChannel2.disconnectForReconnect closing P2PConnection\")),this.state=pO.Reconnecting,XA(\"KEEP_LAST_FRAME\")&&0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t]=e;var i;t._videoTrack&&t._videoTrack._player&&(null===(i=t._videoTrack._player.getVideoElement())||void 0===i||i.pause(),t._videoTrack._player.isKeepLastFrame=!0,t._videoTrack._originMediaStreamTrack.stop())})),this.sendConnection.close(),this.unbindConnectionEvents(this.sendConnection),this.sendConnection=void 0,this.recvConnection.close(),this.unbindConnectionEvents(this.recvConnection),this.recvConnection=void 0,0!==this.localTrackMap.size&&(Array.from(this.localTrackMap.entries()).forEach((e=>{var t;let[i,{track:n}]=e;switch(i){case hO.LocalVideoTrack:Dn(t=n._hints).call(t,mL.LOW_STREAM)?n.close():this.pendingLocalTracks.push(n);break;case hO.LocalAudioTrack:n instanceof RM?this.pendingLocalTracks=this.pendingLocalTracks.concat(n.trackList):this.pendingLocalTracks.push(n);case hO.LocalVideoLowTrack:}})),this.emit(_O.MediaReconnectStart,this.store.uid)),this.unbindLocalTrackEvents(),this.localTrackMap.clear(),0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t,i]=e;Array.from(d_(i).call(i)).forEach((e=>{this.setPendingRemoteMedia(t,e)})),this.emit(_O.MediaReconnectStart,t.uid)})),this.unbindAllRemoteTrackEvents(),this.remoteUserMap.clear(),this.stopUploadUplinkState(),this.stopUploadDownlinkState(),this.statsUploader.stopUploadOutboundStats(),this.statsUploader.stopUploadInboundStats(),this.statsUploader.stopUploadTransportStats(),fb.debug(\"[\".concat(this.store.clientId,\"] P2PChannel2 disconnected, waiting to reconnect.\")))}hasPendingRemoteMedia(e,t){for(const i of this.pendingRemoteTracks){const{user:n,kind:r}=i;if((e instanceof cF?e.uid:e)===n.uid&&t===r)return!0}return!1}setPendingRemoteMedia(e,t){this.hasPendingRemoteMedia(e,t)||this.pendingRemoteTracks.push({user:e,kind:t})}async restartICE(e,t){let i,n;if(e===Mw.SEND_ONLY){if(!this.sendConnection)throw new Cy(Ry.INVALID_OPERATION,\"Cannot call P2PChannel2.handleMuteLocalTrack before sendConnection established.\");i=await this.sendMutex.lock(\"From P2PChannel.restartICE\"),n=this.sendConnection}else{if(!this.recvConnection)throw new Cy(Ry.INVALID_OPERATION,\"Cannot call P2PChannel2.handleMuteLocalTrack before recvConnection established.\");i=await this.recvMutex.lock(\"From P2PChannel.restartICE\"),n=this.recvConnection}try{if(t){const e=await n.restartICE(t);return n.isInRestartIce=!1,e}{const e=await n.restartICE();if(e){const t=await Zy(this,_O.RequestP2PRestartICE,{direction:Mw.RECEIVE_ONLY,iceParameter:e});await n.restartICE(t),n.isInRestartIce=!1}}}finally{i()}}getUplinkNetworkQuality(){if(!this.sendConnection)return 0;const e=this.sendConnection.getStats(),t=this.localTrackMap.get(hO.LocalVideoTrack),i=this.localTrackMap.get(hO.LocalAudioTrack),n=e.videoSend.find((e=>{var i;return e.ssrc===(null==t||null===(i=t.ssrcs)||void 0===i?void 0:i[0].ssrcId)})),r=e.audioSend.find((e=>{var t;return e.ssrc===(null==i||null===(t=i.ssrcs)||void 0===t?void 0:t[0].ssrcId)}));if(!n||!r)return 1;const o=eA(this,_O.NeedSignalRTT),s=n?n.rttMs:void 0,a=r?r.rttMs:void 0,c=s&&a?(s+a)/2:s||a,d=(c&&o?(c+o)/2:c||o)||0,l=100*e.sendPacketLossRate*.7/50+.3*d/1500,u=l<.17?1:l<.36?2:l<.59?3:l<.1?4:5,h=null==t?void 0:t.track;if(h&&h._encoderConfig&&-1===h._hints.indexOf(mL.SCREEN_TRACK)){const t=h._encoderConfig.bitrateMax,i=e.bitrate.actualEncoded;if(t&&i){const e=(1e3*t-i)/(1e3*t);return bb[e<.15?0:e<.3?1:e<.45?2:e<.6?3:4][u]}}return u}getDownlinkNetworkQuality(){if(!this.recvConnection)return 0;const e=this.recvConnection.getStats();let t=0;return Array.from(this.remoteUserMap.entries()).forEach((i=>{let[n]=i;const r=n._audioSSRC,o=n._videoSSRC,s=e.audioRecv.find((e=>e.ssrc===r)),a=e.videoRecv.find((e=>e.ssrc===o));if(!s&&!a)return void(t+=1);const c=eA(this,_O.NeedSignalRTT),d=e.rtt,l=(d&&c?(d+c)/2:d||c)||0,u=s?s.jitterMs:void 0,h=e.recvPacketLossRate;let p=.7*h*100/50+.3*l/1500;u&&(p=.6*h*100/50+.2*l/1500+.2*u/400);t+=p<.1?1:p<.17?2:p<.36?3:p<.59?4:5})),this.remoteUserMap.size>0?Math.round(t/this.remoteUserMap.size):t}async muteLocalTrack(e){return new Gh(((t,i)=>{this.handleMuteLocalTrack(e,t,i)}))}filterTobePublishedTracks(e,t,i){const n=[],r=ZP(),o=this.getAllTracks();e=rA(e=e.filter((e=>-1===o.indexOf(e))));let s=!1,a=!1;for(const o of e){if(o instanceof aU&&(this.localTrackMap.has(hO.LocalVideoTrack)||s?new Cy(Ry.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS).throw():(n.push({track:o,type:hO.LocalVideoTrack}),s=!0),t)){const e=this.getLowVideoTrack(o,i);n.push({track:e,type:hO.LocalVideoLowTrack})}if(o instanceof TM){const e=this.localTrackMap.get(hO.LocalAudioTrack);if(e){if(!(e.track instanceof RM))throw new Cy(Ry.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser does not support audio mixing\");if(o._bypassWebAudio)throw new Cy(Ry.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio\");e.track.addAudioTrack(o),this.bindLocalAudioTrackEvents(o,!0)}else if(a){const e=n.find((e=>{let{type:t}=e;return t===hO.LocalAudioTrack}));if(!(e.track instanceof RM))throw new Cy(Ry.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser does not support audio mixing\");if(o._bypassWebAudio)throw new Cy(Ry.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio\");e.track.addAudioTrack(o)}else{if(!r.webAudioMediaStreamDest||o instanceof RM||o._bypassWebAudio)n.push({track:o,type:hO.LocalAudioTrack});else{const e=new RM;e.addAudioTrack(o),n.push({track:e,type:hO.LocalAudioTrack})}a=!0}}}return n}filterTobeUnpublishedTracks(e){const t=[],i=this.getAllTracks();e=rA(e=e.filter((e=>-1!==i.indexOf(e))));for(const i of e){if(i instanceof TM){const e=this.localTrackMap.get(hO.LocalAudioTrack);if(!e)continue;e.track instanceof RM?(e.track.removeAudioTrack(i),this.unbindLocalAudioTrackEvents(i),0===e.track.trackList.length&&(t.push([hO.LocalAudioTrack,e]),e.track.close())):t.push([hO.LocalAudioTrack,e])}if(i instanceof aU){const e=this.localTrackMap.get(hO.LocalVideoTrack);if(!e)continue;t.push([hO.LocalVideoTrack,e]);const i=this.localTrackMap.get(hO.LocalVideoLowTrack);i&&t.push([hO.LocalVideoLowTrack,i])}}return t}bindLocalTrackEvents(e){e.forEach((e=>{let{track:t,type:i}=e;switch(i){case hO.LocalVideoTrack:t.addListener(fL.GET_STATS,this.handleGetLocalVideoStats),t.addListener(fL.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.addListener(fL.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.addListener(fL.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.addListener(fL.NEED_UPDATE_VIDEO_SEND_PARAMETERS,this.handleUpdateVideoSendParameters),t.addListener(fL.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.addListener(fL.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.addListener(fL.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case hO.LocalAudioTrack:this.bindLocalAudioTrackEvents(t);case hO.LocalVideoLowTrack:}}))}bindLocalAudioTrackEvents(e,t){e instanceof RM?e.trackList.forEach((e=>{e.addListener(fL.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener(fL.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener(fL.GET_STATS,this.handleGetLocalAudioStats),e.addListener(fL.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener(fL.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)})):(e.addListener(fL.GET_STATS,this.handleGetLocalAudioStats),e.addListener(fL.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener(fL.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener(fL.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener(fL.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack),t||e.addListener(fL.NEED_REPLACE_TRACK,this.handleReplaceTrack))}unbindLocalTrackEvents(e){e||(e=Array.from(this.localTrackMap.entries()).map((e=>{let[t,{track:i}]=e;return{track:i,type:t}}))),e.forEach((e=>{let{track:t,type:i}=e;switch(i){case hO.LocalVideoTrack:t.off(fL.GET_STATS,this.handleGetLocalVideoStats),t.off(fL.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.off(fL.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.off(fL.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.off(fL.NEED_UPDATE_VIDEO_SEND_PARAMETERS,this.handleUpdateVideoSendParameters),t.off(fL.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.off(fL.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.off(fL.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case hO.LocalAudioTrack:this.unbindLocalAudioTrackEvents(t);case hO.LocalVideoLowTrack:}}))}unbindLocalAudioTrackEvents(e){e instanceof RM?e.trackList.forEach((e=>{e.off(fL.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off(fL.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off(fL.GET_STATS,this.handleGetLocalAudioStats),e.off(fL.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off(fL.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)})):(e.off(fL.GET_STATS,this.handleGetLocalAudioStats),e.off(fL.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off(fL.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off(fL.NEED_REPLACE_TRACK,this.handleReplaceTrack),e.off(fL.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off(fL.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack))}bindRemoteTrackEvents(e,t){t instanceof IU&&t.addListener(fL.GET_STATS,(t=>{t(this.handleGetRemoteVideoStats(e))})),t instanceof vU&&t.addListener(fL.GET_STATS,(t=>{t(this.handleGetRemoteAudioStats(e))}))}unbindRemoteTrackEvents(e){e&&e.removeAllListeners(fL.GET_STATS)}unbindAllRemoteTrackEvents(){Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t,i]=e;i.has(dO.AUDIO)&&this.unbindRemoteTrackEvents(t._audioTrack),i.has(dO.VIDEO)&&this.unbindRemoteTrackEvents(t._videoTrack)}))}createGatewayPublishMessage(e,t){return e.map(((e,i)=>{var n;let r,{track:o,type:s}=e;switch(s){case hO.LocalAudioTrack:r=Zw.Audio;break;case hO.LocalVideoTrack:r=Dn(n=o._hints).call(n,mL.SCREEN_TRACK)?Zw.Screen:Zw.High;break;case hO.LocalVideoLowTrack:r=Zw.Low}return{kind:s===hO.LocalAudioTrack?dO.AUDIO:dO.VIDEO,stream_type:r,mid:t[i].id,ssrcs:t[i].localSSRC,isMuted:o.muted||!o.enabled}}))}createGatewayUnpublishMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:o,id:s}]=e;switch(n){case hO.LocalVideoTrack:i=Dn(t=r._hints).call(t,mL.SCREEN_TRACK)?Zw.Screen:Zw.High;break;case hO.LocalAudioTrack:i=Zw.Audio;break;case hO.LocalVideoLowTrack:i=Zw.Low}return{stream_type:i,ssrcs:o,mid:s}}))}assignLocalTracks(e,t){e.forEach(((e,i)=>{let{track:n,type:r}=e;this.localTrackMap.set(r,{track:n,id:t[i].id,ssrcs:t[i].localSSRC})}))}withdrawLocalTracks(e){e.forEach((e=>{let[t]=e;this.localTrackMap.delete(t)}))}bindConnectionEvents(e){e.onConnectionStateChange=async t=>{var i;fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: \").concat(e.name,\".onConnectionStateChange(\").concat(t,\")\")),this.emit(_O.PeerConnectionStateChange,t),\"connected\"!==t||this.store.keyMetrics.peerConnectionEnd||this.store.peerConnectionEnd(),\"connected\"===t&&(e.isInRestartIce=!1),Dn(i=this._restartStates).call(i,t)&&!e.isInRestartIce&&(\"disconnected\"===t&&await mA(800),\"disconnected\"!==e.iceConnectionState&&\"failed\"!==e.iceConnectionState||this.handleDisconnect(e.direction))},e.onICEConnectionStateChange=e=>{\"connected\"!==e||this.store.keyMetrics.iceConnectionEnd||this.store.iceConnectionEnd(),fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onICEConnectionStateChange(\").concat(e,\")\")),vb.reportApiInvoke(this.store.sessionId,{name:\"ICEConnectionStateChange\",options:e,tag:jy.TRACER}).onSuccess(),this.emit(_O.IceConnectionStateChange,e)},e.onICETransportStateChange=e=>{fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onICETransportStateChange(\").concat(e,\")\"))},e.onDTLSTransportStateChange=e=>{fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportStateChange(\").concat(e,\")\"))},e.onDTLSTransportError=e=>{fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportError(\").concat(e,\")\"))},e.onFirstAudioDecoded=e=>{var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t._audioSSRC===e));var n;i&&(this.store.subscribe(i.uid,\"audio\",void 0,void 0,void 0,Date.now()),null===(n=i.audioTrack)||void 0===n||n.emit(IL.FIRST_FRAME_DECODED),vb.firstRemoteFrame(this.store.sessionId,gb.FIRST_AUDIO_DECODE,Rb.FIRST_AUDIO_DECODE,{peer:i._uintid,subscribeElapse:rV.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId}))},e.onFirstAudioReceived=e=>{var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t._audioSSRC===e));i&&vb.firstRemoteFrame(this.store.sessionId,gb.FIRST_AUDIO_RECEIVED,Rb.FIRST_AUDIO_RECEIVED,{peer:i._uintid,subscribeElapse:rV.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onFirstVideoDecoded=(e,t,i)=>{this.reportVideoFirstFrameDecoded(e,t,i)},e.onFirstVideoReceived=e=>{var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t._videoSSRC===e));i&&vb.firstRemoteFrame(this.store.sessionId,gb.FIRST_VIDEO_RECEIVED,Rb.FIRST_VIDEO_RECEIVED,{peer:i._uintid,subscribeElapse:rV.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onSelectedLocalCandidateChanged=(e,t)=>{const i=\"relay\"===e.candidateType,n=\"relay\"===t.candidateType;\"unknown\"!==t.candidateType&&i===n||this.emit(_O.ConnectionTypeChange,i),fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.SelectedLocalCandidateChanged(\").concat(JSON.stringify(nN(t)),\" -> \").concat(JSON.stringify(nN(e)),\")\"))},e.onSelectedRemoteCandidateChanged=(e,t)=>{fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.SelectedRemoteCandidateChanged(\").concat(JSON.stringify(nN(t)),\" -> \").concat(JSON.stringify(nN(e)),\")\"))},e.onFirstVideoDecodedTimeout=e=>{this.reportVideoFirstFrameDecoded(e,void 0,void 0,!0)},e.onLocalCandidate=t=>{this.emit(_O.LocalCandidate,{candidate:t,direction:e.direction})}}unbindConnectionEvents(e){e.onConnectionStateChange=void 0,e.onICEConnectionStateChange=void 0,e.onICETransportStateChange=void 0,e.onDTLSTransportStateChange=void 0,e.onDTLSTransportError=void 0,e.onFirstAudioDecoded=void 0,e.onFirstAudioReceived=void 0,e.onFirstVideoDecoded=void 0,e.onFirstVideoReceived=void 0,e.onSelectedLocalCandidateChanged=void 0,e.onSelectedRemoteCandidateChanged=void 0,e.onFirstVideoDecodedTimeout=void 0,e.onLocalCandidate=void 0}async handleDisconnect(e){const t=e===Mw.SEND_ONLY?this.sendConnection:this.recvConnection;t&&!t.isInRestartIce&&(t.isInRestartIce=!0,fb.debug(\"[\".concat(this.store.clientId,\"] [P2PChannel-\").concat(t.name,\"] start use restartICE\")),e===Mw.SEND_ONLY?this.restartICE(e):Zy(this,_O.RequestP2PRestartICE,{direction:Mw.SEND_ONLY}))}filterTobeMutedTracks(e){const t=[];if(-1===this.getAllTracks().indexOf(e))return t;const i=this.localTrackMap.get(hO.LocalAudioTrack);if(e instanceof TM&&(null==i?void 0:i.track)instanceof RM)return i.track.isActive||t.push([hO.LocalAudioTrack,i]),t;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(n&&(t.push(n),n[0]===hO.LocalVideoTrack)){const e=this.localTrackMap.get(hO.LocalVideoLowTrack);e&&t.push([hO.LocalVideoLowTrack,e])}return t}filterTobeUnmutedTracks(e){const t=[],i=this.localTrackMap.get(hO.LocalAudioTrack);if(e instanceof TM&&(null==i?void 0:i.track)instanceof RM)return i.track.isActive&&t.push([hO.LocalAudioTrack,i]),t;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(n)if(n[0]===hO.LocalVideoTrack){t.push(n);const e=this.localTrackMap.get(hO.LocalVideoLowTrack);e&&t.push([hO.LocalVideoLowTrack,e])}else t.push(n);return t}createMuteMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:o,id:s}]=e;switch(n){case hO.LocalAudioTrack:i=Zw.Audio;break;case hO.LocalVideoTrack:i=Dn(t=r._hints).call(t,mL.SCREEN_TRACK)?Zw.Screen:Zw.High;break;case hO.LocalVideoLowTrack:i=Zw.Low}return{stream_type:i,ssrcs:o,mid:s}}))}createUnmuteMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:o,id:s}]=e;switch(n){case hO.LocalAudioTrack:i=Zw.Audio;break;case hO.LocalVideoTrack:i=Dn(t=r._hints).call(t,mL.SCREEN_TRACK)?Zw.Screen:Zw.High;break;case hO.LocalVideoLowTrack:i=Zw.Low}return{stream_type:i,ssrcs:o,mid:s}}))}filterTobeUnSubscribedTracks(e,t){const i=[],n=this.remoteUserMap.get(e);if(!n)return i;if(t){const r=n.get(t);if(!r)return i;i.push([e,{kind:t,id:r}])}else Array.from(n.entries()).forEach((t=>{let[n,r]=t;i.push([e,{kind:n,id:r}])}));return i}createUnsubscribeMessage(e){const t=[];return e.forEach((e=>{let[i,{kind:n,id:r}]=e;switch(n){case dO.VIDEO:return void(i._videoSSRC&&t.push({stream_type:dO.VIDEO,ssrcId:i._videoSSRC}));case dO.AUDIO:return void(i._audioSSRC&&t.push({stream_type:dO.AUDIO,ssrcId:i._audioSSRC}))}})),t}withdrawRemoteTracks(e){e.forEach((e=>{let[t,{kind:i}]=e;const n=this.remoteUserMap.get(t);n&&(n.delete(i),0===Array.from(n.entries()).length&&this.remoteUserMap.delete(t))}))}async updateBitrateLimit(e){const t=this.localTrackMap.get(hO.LocalVideoTrack),i=this.localTrackMap.get(hO.LocalVideoLowTrack);t&&await t.track.setBitrateLimit(e.uplink),i&&e.low_stream_uplink&&await i.track.setBitrateLimit({max_bitrate:e.low_stream_uplink.bitrate,min_bitrate:e.low_stream_uplink.bitrate||0})}isP2PDisconnected(){if(this.sendConnection&&this.recvConnection){const e=this.sendConnection.peerConnectionState,t=this.recvConnection.peerConnectionState;return\"connected\"!==e&&\"connected\"!==t}return!0}async tryToUnmuteAudio(e){for(let t=0;t<e.length;t++)if(e[t]instanceof TM){const i=this.filterTobeUnmutedTracks(e[t]);if(0===i.length)continue;const n=this.createUnmuteMessage(i);return void await $y(this,_O.RequestUnmuteLocal,n)}}bindStatsUploaderEvents(){this.statsUploader.requestStats=e=>this.getStats(e),this.statsUploader.requestLocalMedia=()=>Array.from(this.localTrackMap.entries()).filter((e=>{let[,{ssrcs:t}]=e;return!!t})),this.statsUploader.requestRemoteMedia=()=>Array.from(this.remoteUserMap.entries()),this.statsUploader.requestVideoIsReady=e=>{var t;return!(null===(t=this.recvConnection)||void 0===t||!t.getRemoteVideoIsReady(e))},this.statsUploader.requestUpload=(e,t)=>this.emit(_O.RequestUpload,e,t),this.statsUploader.requestUploadStats=e=>this.emit(_O.RequestUploadStats,e),this.statsUploader.requestAllTracks=()=>this.getAllTracks()}unbindStatsUploaderEvents(){this.statsUploader.requestStats=void 0,this.statsUploader.requestLocalMedia=void 0,this.statsUploader.requestRemoteMedia=void 0,this.statsUploader.requestVideoIsReady=void 0}async requestReconnect(){this.dtlsFailedCount+=1,await mA(LA(this.dtlsFailedCount,PA)),this.emit(_O.RequestReconnect)}async reconnectP2P(){}canPublishLowStream(){return this.localTrackMap.has(hO.LocalVideoTrack)||this.pendingLocalTracks.some((e=>e instanceof aU))}throwIfTrackTypeNotMatch(e){if(e.filter((e=>e instanceof aU)).length>1)throw new Cy(Ry.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(e.filter((e=>e instanceof TM)).length>1&&(e.some((e=>e instanceof TM&&e._bypassWebAudio))||!ZP().webAudioMediaStreamDest))throw new Cy(Ry.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\");for(const t of e){if(t instanceof aU&&this.pendingLocalTracks.some((e=>e instanceof aU)))throw new Cy(Ry.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(t instanceof TM&&this.pendingLocalTracks.some((e=>e instanceof TM))&&(!ZP().webAudioMediaStreamDest||t._bypassWebAudio||this.pendingLocalTracks.some((e=>e instanceof TM&&e._bypassWebAudio))))throw new Cy(Ry.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\")}}getLowVideoTrack(e,t){const i=!XA(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&ZP().supportDualStreamEncoding,n=AF(AF({},{width:160,height:120,framerate:15,bitrate:50}),t);let r;r=i?e._mediaStreamTrack.clone():KV(e,n);const o=TA(8,\"track-low-\"),s=new aU(r,AF(AF({},i&&{scaleResolutionDownBy:iN(n,e)}),{},{frameRate:n.framerate,bitrateMax:n.bitrate,bitrateMin:n.bitrate}),void 0,void 0,o);return s.on(RL.TRANSCEIVER_UPDATED,(t=>{e._updateRtpTransceiver(t,TL.LOW_STREAM)})),s._hints.push(mL.LOW_STREAM),e.addListener(fL.NEED_CLOSE,(()=>{s.close()})),s}async globalLock(){return this.recvMutex.lock(\"From P2PChannel2.globalLock\")}reportVideoFirstFrameDecoded(e,t,i,n){var r;const o=Array.from(d_(r=this.remoteUserMap).call(r)).find((t=>t._videoSSRC===e));if(o){n||this.store.subscribe(o.uid,\"video\",void 0,void 0,void 0,void 0,Date.now());const r=this.store.keyMetrics,s=r.subscribe.find((e=>e.userId===o.uid&&\"video\"===e.type));vb.firstRemoteVideoDecode(this.store.sessionId,gb.FIRST_VIDEO_DECODE,Rb.FIRST_VIDEO_DECODE,{peer:o._uintid,videowidth:t,videoheight:i,subscribeElapse:rV.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId,apEnd:r.requestAPEnd||0,apStart:r.requestAPStart||0,joinGwEnd:r.joinGatewayEnd||0,joinGwStart:r.joinGatewayStart||0,pcEnd:r.peerConnectionEnd||0,pcStart:r.peerConnectionStart||0,subscriberEnd:(null==s?void 0:s.subscribeEnd)||0,subscriberStart:(null==s?void 0:s.subscribeStart)||0,videoAddNotify:(null==s?void 0:s.streamAdded)||0,state:n?1:0})}}async remoteMediaSsrcChanged(e,t,i){if(!this.recvConnection)return!1;const n=this.remoteUserMap.get(e);if(!n)return!1;const r=n.get(t);if(!r)return!1;const o=await this.recvConnection.getRemoteSSRC(r);return void 0!==o&&o!==i}isPreSubScribe(e){return!1}async publishDataChannel(e){throw new Cy(Ry.NOT_SUPPORTED)}async unpublishDataChannel(e){throw new Cy(Ry.NOT_SUPPORTED)}async subscribeDataChannel(e,t){throw new Cy(Ry.NOT_SUPPORTED)}async unsubscribeDataChannel(e,t){throw new Cy(Ry.NOT_SUPPORTED)}hasPendingRemoteDataChannel(e,t){throw new Cy(Ry.NOT_SUPPORTED)}setPendingRemoteDataChannel(e,t){throw new Cy(Ry.NOT_SUPPORTED)}async preConnect(e){throw new Cy(Ry.NOT_SUPPORTED)}getEstablishParams(){throw new Cy(Ry.NOT_SUPPORTED)}async reSubscribe(e){throw new Cy(Ry.NOT_SUPPORTED)}async updateVideoStreamParameter(e,t){throw new Cy(Ry.NOT_SUPPORTED)}unbindRtpTransceiver(){0!==this.localTrackMap.size&&Array.from(this.localTrackMap.entries()).forEach((e=>{let[t,{track:i}]=e;t===hO.LocalVideoLowTrack?i._updateRtpTransceiver(void 0,TL.LOW_STREAM):i._updateRtpTransceiver(void 0)}))}},Cw(vF.prototype,\"p2pConnect\",[pF],Object.getOwnPropertyDescriptor(vF.prototype,\"p2pConnect\"),vF.prototype),Cw(vF.prototype,\"unpublish\",[_F],Object.getOwnPropertyDescriptor(vF.prototype,\"unpublish\"),vF.prototype),Cw(vF.prototype,\"unpublishLowStream\",[EF],Object.getOwnPropertyDescriptor(vF.prototype,\"unpublishLowStream\"),vF.prototype),Cw(vF.prototype,\"subscribe\",[fF],Object.getOwnPropertyDescriptor(vF.prototype,\"subscribe\"),vF.prototype),Cw(vF.prototype,\"mockSubscribe\",[mF],Object.getOwnPropertyDescriptor(vF.prototype,\"mockSubscribe\"),vF.prototype),Cw(vF.prototype,\"unsubscribe\",[TF],Object.getOwnPropertyDescriptor(vF.prototype,\"unsubscribe\"),vF.prototype),Cw(vF.prototype,\"muteRemote\",[SF],Object.getOwnPropertyDescriptor(vF.prototype,\"muteRemote\"),vF.prototype),Cw(vF.prototype,\"unmuteRemote\",[gF],Object.getOwnPropertyDescriptor(vF.prototype,\"unmuteRemote\"),vF.prototype),Cw(vF.prototype,\"hasRemoteMediaWithLock\",[RF],Object.getOwnPropertyDescriptor(vF.prototype,\"hasRemoteMediaWithLock\"),vF.prototype),Cw(vF.prototype,\"disconnectForReconnect\",[CF],Object.getOwnPropertyDescriptor(vF.prototype,\"disconnectForReconnect\"),vF.prototype),Cw(vF.prototype,\"remoteMediaSsrcChanged\",[IF],Object.getOwnPropertyDescriptor(vF.prototype,\"remoteMediaSsrcChanged\"),vF.prototype),vF);function wF(e){return function(t,i,n){const r=t[i];if(\"function\"!=typeof r)throw new Error(\"Cannot use mutex on object property.\");return n.value=async function(){for(var t=arguments.length,n=new Array(t),o=0;o<t;o++)n[o]=arguments[o];switch(e){case dF.SEND_ONLY:{const e=await this.sendMutex.lock(\"From P2PChannel2.\".concat(i));try{return await r.apply(this,n)}finally{e()}}case dF.RECEIVE_ONLY:{const e=await this.recvMutex.lock(\"From P2PChannel2.\".concat(i));try{return await r.apply(this,n)}finally{e()}}default:{const e=await this.sendMutex.lock(\"From P2PChannel2.\".concat(i)),t=await this.recvMutex.lock(\"From P2PChannel2.\".concat(i));try{return await r.apply(this,n)}finally{e(),t()}}}},n}}function OF(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function NF(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?OF(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):OF(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class DF{constructor(e){Fg(this,\"store\",void 0),Fg(this,\"onStatsException\",void 0),Fg(this,\"onUploadPublishDuration\",void 0),Fg(this,\"onStatsChanged\",void 0),Fg(this,\"localStats\",new Map),Fg(this,\"remoteStats\",new Map),Fg(this,\"updateStatsInterval\",void 0),Fg(this,\"trafficStats\",void 0),Fg(this,\"trafficStatsPeerList\",[]),Fg(this,\"uplinkStats\",void 0),Fg(this,\"exceptionMonitor\",void 0),Fg(this,\"p2pChannel\",void 0),Fg(this,\"scalabilityMode\",Iw.L1T1),Fg(this,\"updateStats\",(()=>{this.p2pChannel&&(this.updateRemoteStats(this.p2pChannel),this.updateLocalStats(this.p2pChannel))})),this.store=e,this.exceptionMonitor=new iV,this.exceptionMonitor.on(\"exception\",((e,t,i)=>{this.onStatsException&&this.onStatsException(e,t,i)}))}startUpdateStats(){this.updateStatsInterval||(this.updateStatsInterval=window.setInterval(this.updateStats,1e3))}stopUpdateStats(){this.updateStatsInterval&&(window.clearInterval(this.updateStatsInterval),this.updateStatsInterval=void 0)}reset(){this.localStats=new Map,this.remoteStats=new Map,this.trafficStats=void 0,this.trafficStatsPeerList=[],this.uplinkStats=void 0}getLocalAudioTrackStats(){return this.localStats.get(hO.LocalAudioTrack)||NF({},AL)}getLocalVideoTrackStats(){return this.localStats.get(hO.LocalVideoTrack)||NF({},bL)}getRemoteAudioTrackStats(e){const t=(e,t)=>{if(!this.trafficStats)return t;const i=this.trafficStats.peer_delay.find((t=>t.peer_uid===e));return i&&(t.publishDuration=i.B_ppad+(Date.now()-this.trafficStats.timestamp)),t},i={};if(e){var n;const r=null===(n=this.remoteStats.get(e))||void 0===n?void 0:n.audioStats;r&&(i[e]=t(e,r))}else Array.from(this.remoteStats.entries()).forEach((e=>{let[n,{audioStats:r}]=e;r&&(i[n]=t(n,r))}));return i}getRemoteNetworkQualityStats(e){const t={};if(e){var i;const n=null===(i=this.remoteStats.get(e))||void 0===i?void 0:i.networkStats;n&&(t[e]=n)}else Array.from(this.remoteStats.entries()).forEach((e=>{let[i,{networkStats:n}]=e;n&&(t[i]=n)}));return t}getRemoteVideoTrackStats(e){const t=(e,t)=>{if(!this.trafficStats)return t;const i=this.trafficStats.peer_delay.find((t=>t.peer_uid===e));return i&&(t.publishDuration=i.B_ppvd+(Date.now()-this.trafficStats.timestamp)),t},i={};if(e){var n;const r=null===(n=this.remoteStats.get(e))||void 0===n?void 0:n.videoStats;r&&(i[e]=t(e,r))}else Array.from(this.remoteStats.entries()).forEach((e=>{let[n,{videoStats:r}]=e;r&&(i[n]=t(n,r))}));return i}getRTCStats(){let e=0,t=0,i=0,n=0;const r=this.localStats.get(hO.LocalAudioTrack);r&&(e+=r.sendBytes,t+=r.sendBitrate);const o=this.localStats.get(hO.LocalVideoTrack);o&&(e+=o.sendBytes,t+=o.sendBitrate);const s=this.localStats.get(hO.LocalVideoLowTrack);s&&(e+=s.sendBytes,t+=s.sendBitrate),this.remoteStats.forEach((e=>{let{audioStats:t,videoStats:r}=e;t&&(i+=t.receiveBytes,n+=t.receiveBitrate),r&&(i+=r.receiveBytes,n+=r.receiveBitrate)}));let a=1;return this.trafficStats&&(a+=this.trafficStats.peer_delay.length),{Duration:0,UserCount:a,SendBitrate:t,SendBytes:e,RecvBytes:i,RecvBitrate:n,OutgoingAvailableBandwidth:this.uplinkStats?this.uplinkStats.B_uab/1e3:0,RTT:this.trafficStats?2*this.trafficStats.B_acd:0}}addLocalStats(e){this.localStats.set(e,void 0)}removeLocalStats(e){e?this.localStats.delete(e):this.localStats.clear()}addRemoteStats(e){this.remoteStats.set(e,{})}removeRemoteStats(e){e?this.remoteStats.delete(e):this.remoteStats.clear()}addP2PChannel(e){this.p2pChannel=e}updateTrafficStats(e){e.peer_delay=e.peer_delay.filter((e=>void 0!==e.B_ppad||void 0!==e.B_ppvd));e.peer_delay.filter((e=>-1===this.trafficStatsPeerList.indexOf(e.peer_uid))).forEach((e=>{var t;const i=null===(t=this.p2pChannel)||void 0===t?void 0:t.getRemoteMedia(e.peer_uid),n=null!=i&&i.videoSSRC?rV.measureFromSubscribeStart(this.store.clientId,i.videoSSRC):0,r=null!=i&&i.audioSSRC?rV.measureFromSubscribeStart(this.store.clientId,i.audioSSRC):0;void 0!==e.B_ppad&&void 0!==e.B_ppvd&&(this.onUploadPublishDuration&&this.onUploadPublishDuration(e.peer_uid,e.B_ppad,e.B_ppvd,n>r?n:r),this.trafficStatsPeerList.push(e.peer_uid))})),this.trafficStats=e}updateUplinkStats(e){this.uplinkStats&&this.uplinkStats.B_fir!==e.B_fir&&fb.debug(\"[\".concat(this.store.clientId,\"]: Period fir changes to \").concat(e.B_fir)),this.uplinkStats=e}static isRemoteVideoFreeze(e,t,i){if(!e)return!1;const n=!!i&&t.framesDecodeFreezeTime>i.framesDecodeFreezeTime,r=!i||t.framesDecodeCount>i.framesDecodeCount;return n||!r}static isRemoteAudioFreeze(e){return!!e&&e._isFreeze()}isLocalVideoFreeze(e){return!(!e.inputFrame||!e.sentFrame)&&(e.inputFrame.frameRate>5&&e.sentFrame.frameRate<3)}updateLocalStats(e){Array.from(this.localStats.entries()).forEach((t=>{let[i,n]=t;switch(i){case hO.LocalVideoTrack:case hO.LocalVideoLowTrack:{const t=n,o=NF({},bL),s=e.getStats(),a=e.getLocalMedia(i);if(s){const i=s.videoSend.find((e=>e.ssrc===(null==a?void 0:a.ssrcs[0].ssrcId)));if(i){const n=e.getLocalVideoSize(),r=e.getEncoderConfig(hO.LocalVideoTrack);\"H264\"!==i.codec&&\"H265\"!==i.codec&&\"VP8\"!==i.codec&&\"VP9\"!==i.codec&&\"AV1X\"!==i.codec&&\"AV1\"!==i.codec||(o.codecType=i.codec),o.sendBytes=i.bytes,o.sendBitrate=t?8*Math.max(0,o.sendBytes-t.sendBytes):0,i.inputFrame?(o.captureFrameRate=i.inputFrame.frameRate,o.captureResolutionHeight=i.inputFrame.height,o.captureResolutionWidth=i.inputFrame.width):n&&(o.captureResolutionWidth=n.width,o.captureResolutionHeight=n.height),i.sentFrame?(o.sendFrameRate=i.sentFrame.frameRate,o.sendResolutionHeight=i.sentFrame.height,o.sendResolutionWidth=i.sentFrame.width):n&&(o.sendResolutionWidth=n.width,o.sendResolutionHeight=n.height),i.avgEncodeMs&&(o.encodeDelay=i.avgEncodeMs),r&&r.bitrateMax&&(o.targetSendBitrate=1e3*r.bitrateMax),o.sendPackets=i.packets,o.sendPacketsLost=i.packetsLost,o.sendJitterMs=i.jitterMs,o.sendRttMs=i.rttMs,o.totalDuration=t?t.totalDuration+1:1,o.totalFreezeTime=t?t.totalFreezeTime:0,this.isLocalVideoFreeze(i)&&(o.totalFreezeTime+=1),i.scalabilityMode&&this.scalabilityMode!==i.scalabilityMode&&(fb.debug(\"[\".concat(this.store.clientId,\"]: The scalabilityMode of the video sending stream is \").concat(i.scalabilityMode)),this.scalabilityMode=i.scalabilityMode)}this.trafficStats&&(o.currentPacketLossRate=(this.trafficStats.B_pvlr4||0)/100)}var r;if(this.localStats.set(i,o),(null==t?void 0:t.sendResolutionWidth)!==o.sendResolutionWidth||(null==t?void 0:t.sendResolutionHeight)!==o.sendResolutionHeight)null===(r=this.onStatsChanged)||void 0===r||r.call(this,\"resolution\",{width:o.sendResolutionWidth,height:o.sendResolutionHeight});o&&a&&this.exceptionMonitor.setLocalVideoStats(this.store.uid,a.track,o);break}case hO.LocalAudioTrack:{const t=n,r=NF({},AL),o=e.getStats(),s=e.getLocalMedia(i);if(o){const i=o.audioSend.find((e=>e.ssrc===(null==s?void 0:s.ssrcs[0].ssrcId)));if(i){if(\"opus\"!==i.codec&&\"aac\"!==i.codec&&\"PCMU\"!==i.codec&&\"PCMA\"!==i.codec&&\"G722\"!==i.codec||(r.codecType=i.codec),i.inputLevel)r.sendVolumeLevel=Math.round(32767*i.inputLevel);else{const t=e.getLocalAudioVolume();t&&(r.sendVolumeLevel=Math.round(32767*t))}r.sendBytes=i.bytes,r.sendPackets=i.packets,r.sendPacketsLost=i.packetsLost,r.sendJitterMs=i.jitterMs,r.sendRttMs=i.rttMs,r.sendBitrate=t?8*Math.max(0,r.sendBytes-t.sendBytes):0}}this.trafficStats&&(r.currentPacketLossRate=(this.trafficStats.B_palr4||0)/100),this.localStats.set(hO.LocalAudioTrack,r),r&&s&&this.exceptionMonitor.setLocalAudioStats(this.store.uid,s.track,r);break}}}))}updateRemoteStats(e){Array.from(this.remoteStats.entries()).forEach((t=>{var i,n;let[r,{videoStats:o,audioStats:s,videoPcStats:a}]=t;const c=s,d=o,l=a,u=NF({},wL),h=NF({},NL),p=NF({},OL),{audioTrack:_,videoTrack:E,audioSSRC:f,videoSSRC:m}=e.getRemoteMedia(r);let T;T=e instanceof bF?e.getStats(!0):e.getStats();const S=null===(i=T)||void 0===i?void 0:i.audioRecv.find((e=>e.ssrc===f)),g=null===(n=T)||void 0===n?void 0:n.videoRecv.find((e=>e.ssrc===m)),R=this.trafficStats&&this.trafficStats.peer_delay.find((e=>e.peer_uid===r));if(S&&(\"opus\"!==S.codec&&\"aac\"!==S.codec&&\"PCMU\"!==S.codec&&\"PCMA\"!==S.codec&&\"G722\"!==S.codec||(u.codecType=S.codec),S.outputLevel?u.receiveLevel=Math.round(32767*S.outputLevel):_&&(u.receiveLevel=Math.round(32767*_.getVolumeLevel())),u.receiveBytes=S.bytes,u.receivePackets=S.packets,u.receivePacketsLost=S.packetsLost,u.receivePacketsDiscarded=S.packetsDiscarded,u.packetLossRate=u.receivePacketsLost/(u.receivePackets+u.receivePacketsLost),u.receiveBitrate=c?8*Math.max(0,u.receiveBytes-c.receiveBytes):0,u.totalDuration=c?c.totalDuration+1:1,u.totalFreezeTime=c?c.totalFreezeTime:0,u.freezeRate=u.totalFreezeTime/u.totalDuration,u.receiveDelay=S.jitterBufferMs,u.totalDuration>10&&DF.isRemoteAudioFreeze(_)&&(u.totalFreezeTime+=1)),g){\"H264\"!==g.codec&&\"H265\"!==g.codec&&\"VP8\"!==g.codec&&\"VP9\"!==g.codec&&\"AV1X\"!==g.codec&&\"AV1\"!==g.codec||(h.codecType=g.codec),h.receiveBytes=g.bytes,h.receiveBitrate=d?8*Math.max(0,h.receiveBytes-d.receiveBytes):0,h.decodeFrameRate=g.decodeFrameRate<0?0:g.decodeFrameRate,h.renderFrameRate=g.decodeFrameRate<0?0:g.decodeFrameRate,g.outputFrame&&(h.renderFrameRate=g.outputFrame.frameRate),g.receivedFrame?(h.receiveFrameRate=g.receivedFrame.frameRate,h.receiveResolutionHeight=g.receivedFrame.height,h.receiveResolutionWidth=g.receivedFrame.width):E&&(h.receiveResolutionHeight=E._videoHeight||0,h.receiveResolutionWidth=E._videoWidth||0),void 0!==g.framesRateFirefox&&(h.receiveFrameRate=Math.round(g.framesRateFirefox)),h.receivePackets=g.packets,h.receivePacketsLost=g.packetsLost,h.packetLossRate=h.receivePacketsLost/(h.receivePackets+h.receivePacketsLost),h.totalDuration=d?d.totalDuration+1:1,h.totalFreezeTime=d?d.totalFreezeTime:0,h.receiveDelay=g.jitterBufferMs||0;const t=!!m&&e.getRemoteVideoIsReady(m);E&&t&&DF.isRemoteVideoFreeze(E,g,l)&&(h.totalFreezeTime+=1),h.freezeRate=h.totalFreezeTime/h.totalDuration}R&&(u.end2EndDelay=R.B_ad,h.end2EndDelay=R.B_vd,u.transportDelay=R.B_ed,h.transportDelay=R.B_ed,u.currentPacketLossRate=R.B_ealr4/100,h.currentPacketLossRate=R.B_evlr4/100,p.uplinkNetworkQuality=R.B_punq?R.B_punq:0,p.downlinkNetworkQuality=R.B_pdnq?R.B_pdnq:0),this.remoteStats.set(r,{audioStats:u,videoStats:h,videoPcStats:g,networkStats:p}),_&&this.exceptionMonitor.setRemoteAudioStats(_,u),E&&this.exceptionMonitor.setRemoteVideoStats(E,h)}))}}class PF{constructor(){Fg(this,\"destChannelMediaInfos\",new Map),Fg(this,\"srcChannelMediaInfo\",void 0)}setSrcChannelInfo(e){qw(e),this.srcChannelMediaInfo=e}addDestChannelInfo(e){qw(e),this.destChannelMediaInfos.set(e.channelName,e)}removeDestChannelInfo(e){xw(e),this.destChannelMediaInfos.delete(e)}getSrcChannelMediaInfo(){return this.srcChannelMediaInfo}getDestChannelMediaInfo(){return this.destChannelMediaInfos}}function LF(e){if(!(e instanceof PF)){return new yb(Ry.INVALID_PARAMS,\"Config should be instance of [ChannelMediaRelayConfiguration]\").throw()}const t=e.getSrcChannelMediaInfo(),i=e.getDestChannelMediaInfo();if(!t){return new yb(Ry.INVALID_PARAMS,\"srcChannelMediaInfo should not be empty\").throw()}if(0===i.size){return new yb(Ry.INVALID_PARAMS,\"destChannelMediaInfo should not be empty\").throw()}}function kF(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function MF(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?kF(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):kF(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}var UF;function xF(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function VF(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?xF(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):xF(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let FF=(UF=class e extends cO{get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get localCodecs(){return[...new Set(this.localCapabilities&&this.localCapabilities.videoCodecs.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")).filter((e=>{var t;return Dn(t=Object.keys(eb)).call(t,e)})))]}constructor(t,i){super(t,i),Fg(this,\"store\",void 0),Fg(this,\"peerConnection\",void 0),Fg(this,\"remoteSDP\",void 0),Fg(this,\"initialOffer\",void 0),Fg(this,\"statsFilter\",void 0),Fg(this,\"useRTX\",!1),Fg(this,\"localCapabilities\",void 0),Fg(this,\"localCandidateCount\",0),Fg(this,\"allCandidatesReceived\",!1),Fg(this,\"establishPromise\",void 0),Fg(this,\"mutex\",new NA(\"P2PConnection-mutex\")),this.store=i,this.peerConnection=new RTCPeerConnection(e.resolvePCConfiguration(t),{optional:[{googDscp:!0}]}),this.statsFilter=xV(this.peerConnection,XA(\"STATS_UPDATE_INTERVAL\"),void 0,Zv()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1,this.establishPromise=this.establish()}async establish(){try{const e=await this.peerConnection.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});if(!e.sdp)throw new Error(\"Cannot get initialOffer.sdp when trying to establish PeerConnection.\");const t=HU(e.sdp),i=WU(e.sdp,{filterRTX:!this.useRTX,filterVideoFec:XA(\"FILTER_VIDEO_FEC\"),filterAudioFec:XA(\"FILTER_AUDIO_FEC\"),filterAudioCodec:[\"opus\"]});return this.localCapabilities=i,this.initialOffer=e,VF(VF({},t),{},{rtpCapabilities:{send:{audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},recv:{audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},sendrecv:i},offerSDP:e.sdp})}catch(e){throw new Cy(Ry.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async updateRemoteConnect(){}async connect(e){try{if(!this.initialOffer)throw new Error(\"Cannot establish P2PConnection without initial offer.\");this.remoteSDP=new class{constructor(e){Fg(this,\"sessionDesc\",void 0),Fg(this,\"localCapabilities\",void 0),Fg(this,\"rtpCapabilities\",void 0),Fg(this,\"candidates\",void 0),Fg(this,\"iceParameters\",void 0),Fg(this,\"dtlsParameters\",void 0),Fg(this,\"setup\",void 0),Fg(this,\"currentMidIndex\",void 0),Fg(this,\"cname\",void 0),e=sA(e);const{iceParameters:t,dtlsParameters:i,candidates:n,rtpCapabilities:r,setup:o,localCapabilities:s,sdkCodec:a,cname:c}=e,d=FU.parse(\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE audio video\\na=msid-semantic: WMS\\na=ice-lite\\nm=audio 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendrecv\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:audio\\nm=video 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendrecv\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:video\\n\");this.rtpCapabilities=r,this.candidates=n,this.iceParameters=t,this.dtlsParameters=i,this.setup=o,this.localCapabilities=s,this.cname=c;for(let e=0;e<d.mediaDescriptions.length;e++){const s=d.mediaDescriptions[e];if(s.attributes.iceUfrag=t.iceUfrag,s.attributes.icePwd=t.icePwd,s.attributes.fingerprints=i.fingerprints,s.attributes.candidates=n,s.attributes.setup=o,\"video\"===s.media.mediaType){s.media.fmts=r.videoCodecs.map((e=>e.payloadType.toString(10)));let e=r.videoCodecs.filter((e=>{var t,i;return null===(t=e.rtpMap)||void 0===t?void 0:Dn(i=t.encodingName.toLowerCase()).call(i,a)}));0===e.length&&(e=r.videoCodecs),s.attributes.payloads=e,s.attributes.extmaps=r.videoExtensions}\"audio\"===s.media.mediaType&&(s.media.fmts=r.audioCodecs.map((e=>e.payloadType.toString(10))),s.attributes.payloads=r.audioCodecs,s.attributes.extmaps=r.audioExtensions),d.mediaDescriptions[e]=this.mungMediaDesc(s)}this.sessionDesc=d,this.currentMidIndex=d.mediaDescriptions.length-1}toString(){return FU.print(this.sessionDesc)}send(e,t,i){const{ssrcs:n,ssrcGroups:r}=zU(t,this.cname),o=this.sessionDesc.mediaDescriptions.find((t=>e===dO.VIDEO?\"video\"===t.media.mediaType:\"audio\"===t.media.mediaType)),s=n[0].attributes.label,a=n[0].attributes.mslabel;return o.attributes.ssrcs=o.attributes.ssrcs.concat(n),o.attributes.ssrcGroups=o.attributes.ssrcGroups.concat(r),{id:s,mslabel:a}}batchSend(e){return e.map((e=>{let{kind:t,ssrcMsg:i}=e;return this.send(t,i,void 0)}))}stopSending(e){this.sessionDesc.mediaDescriptions.forEach((t=>{const i=[],n=[],r=[];t.attributes.ssrcs.forEach((t=>{Dn(e).call(e,t.attributes.label||\"\")?r.push(t):i.push(t)})),t.attributes.ssrcGroups.forEach((e=>{var t;Dn(t=r.map((e=>e.ssrcId))).call(t,e.ssrcIds[0])||n.push(e)})),t.attributes.ssrcs=i,t.attributes.ssrcGroups=n}))}mute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.mute.\"));t.attributes.direction=\"inactive\"}unmute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.unmute.\"));t.attributes.direction=\"sendonly\"}receive(e,t,i){e.forEach(((e,t)=>{const i=e._mediaStreamTrack,n=this.sessionDesc.mediaDescriptions.findIndex((e=>e.attributes.mid===i.kind)),r=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[n],e);this.sessionDesc.mediaDescriptions[n]=r}))}stopReceiving(e){}updateCandidates(e){e===lO.TCP?this.candidates.forEach((e=>{-1===this.candidates.findIndex((t=>\"tcp\"===t.transport&&t.connectionAddress===e.connectionAddress&&t.port===e.port))&&this.candidates.push(MF(MF({},e),{},{foundation:\"tcpcandidate\",priority:Number(e.priority)-1+\"\",transport:\"tcp\",port:Number(e.port)+90+\"\"}))})):this.candidates=this.candidates.filter((e=>\"tcp\"!==e.transport));for(const e of this.sessionDesc.mediaDescriptions)e.attributes.candidates=this.candidates}restartICE(e){e=sA(e),this.iceParameters=e,this.sessionDesc.mediaDescriptions.forEach((t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd}))}predictReceivingMids(e){const t=[];for(let i=0;i<e;i++)t.push((this.currentMidIndex+i+1).toString(10));return t}mungRecvMediaDsec(e,t){const i=sA(e);return JU(i,t),QU(i,t),i}updateRecvMedia(e,t){const i=this.sessionDesc.mediaDescriptions.findIndex((t=>t.attributes.mid===e));if(-1!==i){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[i],t);this.sessionDesc.mediaDescriptions[i]=e}}bumpMid(e){this.currentMidIndex+=e}updateTrackLabel(e,t,i){const n=this.sessionDesc.mediaDescriptions.find((t=>e===dO.VIDEO?\"video\"===t.attributes.mid:\"audio\"===t.attributes.mid));if(n){const e=n.attributes.ssrcs.find((e=>e.attributes.label===t));var r;e&&(e.attributes.label=i,null===(r=e.attributes.msid)||void 0===r||r.replace(t,i))}}mungMediaDesc(e){const t=sA(e);return XU(t),function(e){const t=e.attributes.extmaps.find((e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName));t&&e.attributes.extmaps.splice(e.attributes.extmaps.indexOf(t),1),e.attributes.payloads.forEach((e=>{const t=e.rtcpFeedbacks.findIndex((e=>\"transport-cc\"===e.type));-1!==t&&e.rtcpFeedbacks.splice(t,1)}))}(t),t}getSSRC(e){for(const t of this.sessionDesc.mediaDescriptions)for(const i of t.attributes.ssrcs)if(i.attributes.label===e)return[i]}}(VF(VF({},e),{},{rtpCapabilities:e.rtpCapabilities.send,localCapabilities:this.localCapabilities,sdkCodec:this.store.codec}));const t=this.remoteSDP.toString();await this.peerConnection.setLocalDescription(this.initialOffer),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:t})}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.connect failed; \".concat(e.toString()))}}async updateRemoteRTPCapabilities(e,t){throw new Cy(Ry.NOT_SUPPORTED,\"Planb mode does not support createDataChannels.\")}getPreMedia(e){}send(e,t){var i=this;return YI((function*(){const n=yield qI(i.mutex.lock());try{if(!i.remoteSDP)throw new Error(\"Cannot call P2PConnection.send before remote SDP created\");const r=e.map((e=>i.peerConnection.addTrack(e._mediaStreamTrack))),o=yield qI(i.peerConnection.createOffer()),s=FU.parse(o.sdp),a=e.map((e=>{const t=e._mediaStreamTrack,n=s.mediaDescriptions.find((e=>e.attributes.mid===t.kind));if(!n)throw new Error(\"Cannot extract ssrc from mediaDescription.\");return function(e,t,i){const n=e.attributes.ssrcs.filter((e=>e.attributes.label===t)),r=e.attributes.ssrcGroups;if(0===n.length)throw new Error(\"Cannot extract ssrc from plan-b SDP.\");if(r&&n.length>1){const e=r.find((e=>-1!==e.ssrcIds.indexOf(n[0].ssrcId)));return e?[{ssrcId:e.ssrcIds[0],rtx:i?e.ssrcIds[1]:void 0}]:[{ssrcId:n[0].ssrcId}]}return[{ssrcId:n[0].ssrcId}]}(n,t.id,i.useRTX)}));let c;try{c=yield a}catch(e){throw r.forEach((e=>{Xv()&&e.replaceTrack(null),i.peerConnection.removeTrack(e)})),e}const d=i.mungSendOfferSDP(o.sdp,e);i.remoteSDP.receive(e,t,c);const l=i.remoteSDP.toString();return yield qI(i.peerConnection.setLocalDescription({type:\"offer\",sdp:d})),yield qI(i.applySendEncodings(r,e)),yield qI(i.peerConnection.setRemoteDescription({type:\"answer\",sdp:l})),e.map(((e,t)=>{const i=e._mediaStreamTrack.id;return{localSSRC:a[t],id:i}}))}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.send failed; \".concat(e.toString()))}finally{n()}}))()}async stopSending(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopSending before remote SDP created\");const t=this.peerConnection.getSenders().filter((t=>{var i;return-1!==e.indexOf((null===(i=t.track)||void 0===i?void 0:i.id)||\"\")}));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length when trying to call P2PConnection.stopSending.\");t.map((e=>{Xv()&&e.replaceTrack(null),this.peerConnection.removeTrack(e)}));const i=await this.peerConnection.createOffer();await this.peerConnection.setLocalDescription(i),this.remoteSDP.stopReceiving(e);const n=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.stopSending failed; \".concat(e.toString()))}}async receive(e,t,i,n){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.receive \".concat(e,\" before remoteSDP created.\"));const{id:i,mslabel:r}=this.remoteSDP.send(e,t,n),o=new Gh(((t,n)=>{const o=setTimeout((()=>{n(new Error(\"Cannot receive track, id: \".concat(i)))}),1e4),s=n=>{const a=Hv();if((\"Safari\"===a.name&&11===Number(a.version)||$v())&&n.track.id!==i&&n.streams[0].id===r){var c;const r=n.streams[0].getTracks()[0];return null===(c=this.remoteSDP)||void 0===c||c.updateTrackLabel(e,i,n.track.id),this.peerConnection.removeEventListener(\"track\",s),clearTimeout(o),void t(r)}if(n.track.id===i)return this.peerConnection.removeEventListener(\"track\",s),clearTimeout(o),void t(n.track)};this.peerConnection.addEventListener(\"track\",s)})),s=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:s});const a=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(a);return{track:await o,id:i}}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopReceiving before remote SDP created.\");this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const i=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(i)}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}async muteRemote(e){}async unmuteRemote(e){}async muteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteLocal before remote SDP created.\");const t=this.peerConnection.getSenders().filter((t=>{var i;return-1!==e.indexOf((null===(i=t.track)||void 0===i?void 0:i.id)||\"\")}));if(t.length!==e.length)throw new Error(\"sender' length doesn't match mids' length.\");t.map((e=>{if(Xv()&&e.track)e.track.enabled=!1;else{const t=e.getParameters();t.encodings.forEach((e=>e.active=!1)),e.setParameters(t)}}))}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.muteLocal failed; \".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteLocal before remote SDP created.\");const t=this.peerConnection.getSenders().filter((t=>{var i;return-1!==e.indexOf((null===(i=t.track)||void 0===i?void 0:i.id)||\"\")}));if(t.length!==e.length)throw new Error(\"Senders' length doesn't match mids' length.\");t.map((async e=>{if(Xv()&&e.track)e.track.enabled=!0;else{const t=e.getParameters();t.encodings.forEach((e=>e.active=!0)),await e.setParameters(t)}}));const i=await this.peerConnection.createOffer();await this.peerConnection.setLocalDescription(i);const n=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteLocal failed; \".concat(e.toString()))}}restartICE(e){var t=this;return YI((function*(){const i=yield qI(t.mutex.lock(\"From P2PConnection.restartICE\"));try{if(!t.remoteSDP)throw new Error(\"Cannot restartICE before remoteSDP created.\");if(ZP().supportPCSetConfiguration){const i=t.peerConnection.getConfiguration(),n=e===lO.RELAY?\"relay\":\"all\";i.iceTransportPolicy!==n&&(fb.debug(\"[\".concat(t.store.clientId,\"] restartICE change iceTransportPolicy from [\").concat(i.iceTransportPolicy,\"] to [\").concat(n,\"]\")),i.iceTransportPolicy=n,t.peerConnection.setConfiguration(i))}else if(e===lO.RELAY)return;e!==lO.RELAY&&t.remoteSDP.updateCandidates(e);const n=yield qI(t.peerConnection.createOffer({iceRestart:!0}));if(!n.sdp)throw new Error(\"Cannot restartICE because restart offer SDP does not exist.\");const r=HU(n.sdp),{remoteIceParameters:o}=yield r.iceParameters;t.remoteSDP.restartICE(o);const s=t.remoteSDP.toString();yield qI(t.peerConnection.setLocalDescription(n)),yield qI(t.peerConnection.setRemoteDescription({type:\"answer\",sdp:s}))}catch(e){fb.warning(\"[\".concat(t.store.clientId,\"] restart ICE failed, abort operation\"),e)}finally{i()}}))()}close(){var e;this.peerConnection.close(),null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,\"closed\"),this.unbindPCEvents(),this.unbindStatsEvents(),this.removeAllListeners(),this.statsFilter.destroy()}getStats(){return this.statsFilter.getStats()}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.updateEncoderConfig before remote SDP created.\");const e=await this.peerConnection.createOffer(),i=this.mungSendOfferSDP(e.sdp,[t]);this.remoteSDP.updateRecvMedia(t._mediaStreamTrack.kind,t);const n=this.remoteSDP.toString();await this.peerConnection.setLocalDescription({type:\"offer\",sdp:i}),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const i=this.peerConnection.getSenders().filter((t=>{var i;return(null===(i=t.track)||void 0===i?void 0:i.id)===e}));1===i.length&&await this.applySendEncodings(i,[t])}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const i=this.peerConnection.getSenders().find((e=>{var i;return(null===(i=e.track)||void 0===i?void 0:i.id)===t}));i&&await i.replaceTrack(e._mediaStreamTrack)}createDataChannels(e,t){throw new Cy(Ry.NOT_SUPPORTED,\"Planb mode does not support createDataChannels.\")}stopDataChannels(e){throw new Cy(Ry.NOT_SUPPORTED,\"Planb mode does not support stopDataChannels.\")}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e;null===(e=this.onICEConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.peerConnection.onicecandidate=e=>{e.candidate?this.localCandidateCount+=1:(this.peerConnection.onicecandidate=null,this.allCandidatesReceived=!0,fb.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] local candidate count\"),this.localCandidateCount))},setTimeout((()=>{this.allCandidatesReceived||(this.allCandidatesReceived=!0,fb.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] onicecandidate timeout, local candidate count\"),this.localCandidateCount))}),XA(\"CANDIDATE_TIMEOUT\"))}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(t){const i={iceServers:[],sdpSemantics:\"plan-b\"};return t.iceServers?i.iceServers=t.iceServers:t.turnServer&&\"off\"!==t.turnServer.mode&&(Ky(t.turnServer.servers)?i.iceServers=t.turnServer.servers:(i.iceServers&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.servers)),XA(\"USE_TURN_SERVER_OF_GATEWAY\")&&i.iceServers&&t.turnServer.serversFromGateway&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.serversFromGateway)),t.turnServer.servers.concat(t.turnServer.serversFromGateway||[]).forEach((e=>{e.forceturn&&(i.iceTransportPolicy=\"relay\")})))),i}static turnServerConfigToIceServers(e){const t=[];return e.forEach((e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turns:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}):(e.udpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.udpport,\"?transport=udp\")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}))})),t}async updateRtpSenderEncodings(e,t){var i;if(!t){t=this.peerConnection.getSenders().find((t=>{var i;return(null===(i=t.track)||void 0===i?void 0:i.id)===e._mediaStreamTrack.id}))}if(!t)return fb.warn(\"[\".concat(e.getTrackId(),\"] no rtpSender found}\"));if(!ZP().supportSetRtpSenderParameters)return fb.warn(\"Browser not support set rtp-sender parameters\");const n={},r={};if(e instanceof aU)switch(e._optimizationMode){case\"motion\":n.degradationPreference=\"maintain-framerate\";break;case\"detail\":n.degradationPreference=\"maintain-resolution\";break;default:n.degradationPreference=\"balanced\"}if(XA(\"DSCP_TYPE\")&&Ey()){var o;const e=XA(\"DSCP_TYPE\");Dn(o=[\"very-low\",\"low\",\"medium\",\"high\"]).call(o,e)&&(r.networkPriority=e)}const s=t.getParameters(),a=null===(i=s.encodings)||void 0===i?void 0:i[0];a&&Object.assign(a,r),Object.assign(s,n),fb.debug(\"[\".concat(e.getTrackId(),\"] updateRtpSenderEncodings: \").concat(JSON.stringify(s.encodings))),await t.setParameters(s)}async applySendEncodings(e,t){try{if(!ZP().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let i=0;i<e.length;i++){const n=e[i],r=t[i];n&&r&&await this.updateRtpSenderEncodings(r,n)}}catch(e){fb.debug(\"[\".concat(this.store.clientId,\"] Apply RTPSendEncodings failed.\"))}}mungSendOfferSDP(e,t){const i=FU.parse(e);return t.forEach(((e,t)=>{const n=e._mediaStreamTrack,r=i.mediaDescriptions.find((e=>e.attributes.mid===n.kind));r&&JU(r,e)})),FU.print(i)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,i)=>{var n;null===(n=this.onFirstVideoDecoded)||void 0===n||n.call(this,e,t,i)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedLocalCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i||i.call(this,e,t)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0}async batchReceive(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.batchReceive before remoteSDP created.\");const t=this.remoteSDP.batchSend(e).map(((t,i)=>{let{id:n,mslabel:r}=t;const{kind:o}=e[i];return new Gh(((e,t)=>{const i=setTimeout((()=>{t(new Error(\"Cannot receive track, id: \".concat(n)))}),1e4),s=t=>{const a=Hv();if(\"Safari\"===a.name&&11===Number(a.version)&&t.track.id!==n&&t.streams[0].id===r){var c;const r=t.streams[0].getTracks()[0];return null===(c=this.remoteSDP)||void 0===c||c.updateTrackLabel(o,n,t.track.id),this.peerConnection.removeEventListener(\"track\",s),clearTimeout(i),void e({track:r,id:n})}if(t.track.id===n)return this.peerConnection.removeEventListener(\"track\",s),clearTimeout(i),void e({track:t.track,id:n})};this.peerConnection.addEventListener(\"track\",s)}))})),i=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:i});const n=await this.peerConnection.createAnswer();return await this.peerConnection.setLocalDescription(n),await Gh.all(t)}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async getRemoteSSRC(e){if(!this.remoteSDP)return;const t=this.remoteSDP.getSSRC(e);return null==t?void 0:t[0].ssrcId}setConfiguration(t){if(ZP().supportPCSetConfiguration){const i=e.resolvePCConfiguration(t);this.peerConnection.setConfiguration(i)}}},Cw(UF.prototype,\"connect\",[BF],Object.getOwnPropertyDescriptor(UF.prototype,\"connect\"),UF.prototype),Cw(UF.prototype,\"stopSending\",[BF],Object.getOwnPropertyDescriptor(UF.prototype,\"stopSending\"),UF.prototype),Cw(UF.prototype,\"receive\",[BF],Object.getOwnPropertyDescriptor(UF.prototype,\"receive\"),UF.prototype),Cw(UF.prototype,\"stopReceiving\",[BF],Object.getOwnPropertyDescriptor(UF.prototype,\"stopReceiving\"),UF.prototype),Cw(UF.prototype,\"muteRemote\",[BF],Object.getOwnPropertyDescriptor(UF.prototype,\"muteRemote\"),UF.prototype),Cw(UF.prototype,\"unmuteRemote\",[BF],Object.getOwnPropertyDescriptor(UF.prototype,\"unmuteRemote\"),UF.prototype),Cw(UF.prototype,\"muteLocal\",[BF],Object.getOwnPropertyDescriptor(UF.prototype,\"muteLocal\"),UF.prototype),Cw(UF.prototype,\"unmuteLocal\",[BF],Object.getOwnPropertyDescriptor(UF.prototype,\"unmuteLocal\"),UF.prototype),Cw(UF.prototype,\"close\",[BF],Object.getOwnPropertyDescriptor(UF.prototype,\"close\"),UF.prototype),Cw(UF.prototype,\"updateEncoderConfig\",[BF],Object.getOwnPropertyDescriptor(UF.prototype,\"updateEncoderConfig\"),UF.prototype),Cw(UF.prototype,\"updateSendParameters\",[BF],Object.getOwnPropertyDescriptor(UF.prototype,\"updateSendParameters\"),UF.prototype),Cw(UF.prototype,\"replaceTrack\",[BF],Object.getOwnPropertyDescriptor(UF.prototype,\"replaceTrack\"),UF.prototype),Cw(UF.prototype,\"getRemoteSSRC\",[BF],Object.getOwnPropertyDescriptor(UF.prototype,\"getRemoteSSRC\"),UF.prototype),UF);function BF(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"Locking from P2PConnection.\".concat(t));try{for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s];return await n.apply(this,o)}finally{i()}},i}function jF(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function GF(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?jF(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):jF(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const WF=\"9\",HF=4e4;class KF{get localCapabilities(){return sA(this._localCapabilities)}get rtpCapabilities(){return sA(this._rtpCapabilities)}get candidates(){return sA(this._candidates)}get iceParameters(){return sA(this._iceParameters)}get dtlsParameters(){return sA(this._dtlsParameters)}constructor(e){Fg(this,\"sessionDesc\",void 0),Fg(this,\"_localCapabilities\",void 0),Fg(this,\"_rtpCapabilities\",void 0),Fg(this,\"_candidates\",void 0),Fg(this,\"_iceParameters\",void 0),Fg(this,\"_dtlsParameters\",void 0),Fg(this,\"setup\",void 0),Fg(this,\"currentMidIndex\",void 0),Fg(this,\"cname\",void 0),Fg(this,\"firefoxSsrcMidMap\",new Map),e=sA(e);const{iceParameters:t,dtlsParameters:i,candidates:n,rtpCapabilities:r,setup:o,localCapabilities:s,cname:a}=e;this._rtpCapabilities=r,this._candidates=n,this._iceParameters=t,this._dtlsParameters=i,this._localCapabilities=s,this.setup=o,this.cname=a,this.sessionDesc=this.updateRemoteRTPCapabilities(r),this.currentMidIndex=this.sessionDesc.mediaDescriptions.length-1}preloadRemoteMedia(e){const t=this.candidates,i=this.dtlsParameters,n=this.iceParameters,r=this.rtpCapabilities.send;let o=this.sessionDesc.mediaDescriptions.length-1;for(let s=1;s<e;s++){const e=2*s+2e4,a=2*s+HF,{ssrcs:c,ssrcGroups:d}=zU([{ssrcId:e}],this.cname),{ssrcs:l,ssrcGroups:u}=zU([{ssrcId:a,rtx:XA(\"USE_SUB_RTX\")?a+1:void 0}],this.cname);this.sessionDesc.mediaDescriptions.push({media:{mediaType:\"video\",port:WF,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:r.videoCodecs.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:n.iceUfrag,icePwd:n.icePwd,unrecognized:[],candidates:t,extmaps:r.videoExtensions,fingerprints:i.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:l,ssrcGroups:u,rtcpFeedbackWildcards:[],payloads:r.videoCodecs,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:\"sendonly\",rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(++o)}}),this.sessionDesc.mediaDescriptions.push({media:{mediaType:\"audio\",port:WF,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:r.audioCodecs.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:n.iceUfrag,icePwd:n.icePwd,unrecognized:[],candidates:t,extmaps:r.audioExtensions,fingerprints:i.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:c,ssrcGroups:d,rtcpFeedbackWildcards:[],payloads:r.audioCodecs,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:\"sendonly\",rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(++o)}}),this.currentMidIndex+=2}this.updateBundleMids()}toString(){return FU.print(this.sessionDesc)}send(e,t,i,n){const{ssrcs:r,ssrcGroups:o}=zU(t,this.cname,XA(\"SYNC_GROUP\")?i:void 0),s=this.findPreloadMediaDesc(r);if(s){if(Zv()&&this.firefoxSsrcMidMap.set(r[0].ssrcId,s.attributes.mid),n&&(n.twcc||n.remb)){const e=this.sessionDesc.mediaDescriptions.indexOf(s);return this.sessionDesc.mediaDescriptions[e]=this.mungSendMediaDesc(s,n),{mid:s.attributes.mid,needExchangeSDP:!0}}return{mid:s.attributes.mid,needExchangeSDP:!1}}{const t=this.findAvailableMediaIndex(e,r);let i;return-1===t||1===t&&(Xv()||function(){const e=Hv();return!(e.name!==Bv.CHROME||!e.osVersion)&&Number(e.version)<=90}())||0===t&&XA(\"USE_SUB_RTX\")||ay()?(i=this.createOrRecycleSendMedia(e,r,o,\"sendonly\",n),this.updateBundleMids()):(i=sA(this.sessionDesc.mediaDescriptions[t]),i.attributes.direction=\"sendonly\",i.attributes.ssrcs=r,i.attributes.ssrcGroups=o,this.sessionDesc.mediaDescriptions[t]=this.mungSendMediaDesc(i,n)),Zv()&&this.firefoxSsrcMidMap.set(r[0].ssrcId,i.attributes.mid),{mid:i.attributes.mid,needExchangeSDP:!0}}}sendDataChannel(){const{mediaDesc:e,needExchangeSDP:t}=this.createOrRecycleDataChannel();return this.updateBundleMids(),{mid:e.attributes.mid,needExchangeSDP:t}}batchSend(e){const t=e.map((e=>{let{kind:t,ssrcMsg:i,mslabel:n}=e;return this.send(t,i,n)})),i=[];let n=!1;return t.forEach((e=>{let{mid:t,needExchangeSDP:r}=e;r&&(n=!0),i.push(t)})),{mids:i,needExchangeSDP:n}}stopSending(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>t.attributes.mid&&-1!==e.indexOf(t.attributes.mid)));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.stopSending.\");t.forEach((e=>{\"0\"===e.attributes.mid||Zv()||ay()?e.attributes.ssrcs=[]:(e.attributes.ssrcs=[],e.attributes.direction=\"inactive\",e.media.port=\"0\")})),this.updateBundleMids()}mute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.mute.\"));t.attributes.direction=\"inactive\"}unmute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.unmute.\"));t.attributes.direction=\"sendonly\"}muteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>Dn(e).call(e,t.attributes.mid||\"\")));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach((e=>{e.attributes.direction=\"inactive\"}))}unmuteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>Dn(e).call(e,t.attributes.mid||\"\")));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach((e=>{e.attributes.direction=\"recvonly\"}))}receive(e,t,i,n){e.forEach(((e,r)=>{this.createOrRecycleRecvMedia(e,[],\"recvonly\",t,i,n[r])})),this.updateBundleMids()}stopReceiving(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>-1!==e.indexOf(t.attributes.mid)));if(t.length!==e.length)throw new Error(\"MediaDescriptions' length doesn't match mids's length when calling RemoteSDP.receive.\");t.forEach((e=>{e.media.port=\"0\",e.attributes.direction=\"inactive\"})),this.updateBundleMids()}updateRemoteRTPCapabilities(e){const t=this.sessionDesc||FU.parse(\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE 0 1\\na=msid-semantic: WMS\\na=ice-lite\\nm=video 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:0\\nm=audio 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:1\\n\");this._rtpCapabilities=e;const i=this.rtpCapabilities.send,n=this.localCapabilities.send;for(const e of t.mediaDescriptions){if(e.attributes.iceUfrag=this._iceParameters.iceUfrag,e.attributes.icePwd=this._iceParameters.icePwd,e.attributes.fingerprints=this._dtlsParameters.fingerprints,e.attributes.candidates=this._candidates,e.attributes.setup=this.setup,\"application\"===e.media.mediaType&&(e.attributes.sctpPort=\"5000\"),\"video\"===e.media.mediaType)if(0===i.videoCodecs.length){const t=n.videoCodecs.filter((e=>{var t,i;return null===(t=e.rtpMap)||void 0===t?void 0:Dn(i=t.encodingName.toLowerCase()).call(i,\"vp8\")}))||[n.videoCodecs[0]];e.media.fmts=t.map((e=>e.payloadType.toString(10))),e.attributes.payloads=t,e.attributes.extmaps=[]}else if(e.media.fmts=i.videoCodecs.map((e=>e.payloadType.toString(10))),e.attributes.payloads=i.videoCodecs,e.attributes.extmaps=i.videoExtensions,XA(\"PRELOAD_MEDIA_COUNT\")>0){const{ssrcs:t,ssrcGroups:i}=zU([{ssrcId:HF,rtx:XA(\"USE_SUB_RTX\")?40001:void 0}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}if(\"audio\"===e.media.mediaType)if(0===i.audioCodecs.length){const t=n.audioCodecs.filter((e=>{var t,i;return null===(t=e.rtpMap)||void 0===t?void 0:Dn(i=t.encodingName.toLowerCase()).call(i,\"opus\")}))||[n.audioCodecs[0]];e.media.fmts=t.map((e=>e.payloadType.toString(10))),e.attributes.payloads=t,e.attributes.extmaps=[]}else if(e.media.fmts=i.audioCodecs.map((e=>e.payloadType.toString(10))),e.attributes.payloads=i.audioCodecs,e.attributes.extmaps=i.audioExtensions,ox(e),XA(\"PRELOAD_MEDIA_COUNT\")>0){const{ssrcs:t,ssrcGroups:i}=zU([{ssrcId:2e4}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}}return this.sessionDesc=t,this.currentMidIndex=t.mediaDescriptions.length-1,this.sessionDesc}updateCandidates(e){const t=this._candidates.filter((e=>\"udp\"===e.transport));if(e===lO.TCP){if(0===t.length)return;if(XA(\"TCP_CANDIDATE_ONLY\")){const e=this._candidates.filter((e=>\"tcp\"===e.transport));t.forEach((t=>{-1===e.findIndex((e=>e.connectionAddress===t.connectionAddress))&&e.push(GF(GF({},t),{},{foundation:\"tcpcandidate\",priority:Number(t.priority)-1+\"\",transport:\"tcp\",port:Number(t.port)+90+\"\"}))})),this._candidates=e}else{const e=[];t.forEach((t=>{e.push(GF(GF({},t),{},{foundation:\"tcpcandidate\",priority:Number(t.priority)-1+\"\",transport:\"tcp\",port:Number(t.port)+90+\"\"}))})),this._candidates=[...t,...e]}}else if(e===lO.RELAY){if(0!==t.length)return;{const e=this._candidates.filter((e=>\"tcp\"===e.transport));e.forEach((e=>{t.push(GF(GF({},e),{},{foundation:\"udpcandidate\",priority:Number(e.priority)+1+\"\",transport:\"udp\",port:Number(e.port)-90+\"\"}))})),this._candidates=[...t,...e]}}else if(0===t.length){this._candidates.filter((e=>\"tcp\"===e.transport)).forEach((e=>{t.push(GF(GF({},e),{},{foundation:\"udpcandidate\",priority:Number(e.priority)+1+\"\",transport:\"udp\",port:Number(e.port)-90+\"\"}))})),this._candidates=t}else this._candidates=this._candidates.filter((e=>\"tcp\"!==e.transport));for(const e of this.sessionDesc.mediaDescriptions)e.attributes.candidates=this.candidates}restartICE(e){e=sA(e),this._iceParameters=e,this.sessionDesc.mediaDescriptions.forEach((t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd}))}predictReceivingMids(e){const t=[];for(let i=0;i<e;i++)t.push((this.currentMidIndex+i+1).toString(10));return t}findAvailableMediaIndex(e,t){return this.sessionDesc.mediaDescriptions.findIndex((i=>{const n=i.media.mediaType===e&&\"0\"!==i.media.port&&(\"sendonly\"===i.attributes.direction||\"sendrecv\"===i.attributes.direction)&&0===i.attributes.ssrcs.length;if(Zv()){if(n){const e=this.firefoxSsrcMidMap.get(t[0].ssrcId);return!(e||\"0\"!==i.attributes.mid&&\"1\"!==i.attributes.mid)||!(!e||e!==i.attributes.mid)}return!1}return n}))}createOrRecycleDataChannel(){for(const e of this.sessionDesc.mediaDescriptions)if(\"application\"===e.media.mediaType)return{mediaDesc:e,needExchangeSDP:!1};this.currentMidIndex+=1;const e=\"\".concat(this.currentMidIndex),t={media:{mediaType:\"application\",port:WF,protos:[\"UDP\",\"DTLS\",\"SCTP\"],fmts:[\"webrtc-datachannel\"]},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:[],fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:[],ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:[],rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,mid:\"\".concat(e),sctpPort:\"5000\"}};return this.sessionDesc.mediaDescriptions.push(t),{mediaDesc:t,needExchangeSDP:!0}}createOrRecycleRecvMedia(e,t,i,n,r,o){const s=e._mediaStreamTrack.kind,a=this.rtpCapabilities.recv,c=sx(s,a,this.localCapabilities.send,s===dO.VIDEO?n:r),d=s===dO.VIDEO?a.videoExtensions:a.audioExtensions;this.currentMidIndex+=1;const l=\"\".concat(this.currentMidIndex);let u={media:{mediaType:s,port:WF,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:c.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:d,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:c,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:i,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(l)}};u=this.mungRecvMediaDsec(u,e,o);const h=this.findFirstClosedMedia(s);if(h){const e=this.sessionDesc.mediaDescriptions.indexOf(h);this.sessionDesc.mediaDescriptions[e]=u}else this.sessionDesc.mediaDescriptions.push(u);return u}updateRemoteCodec(e,t,i){const n=[...new Set(this._rtpCapabilities.recv.videoCodecs.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")).filter((e=>{var t;return Dn(t=Object.keys(eb)).call(t,e)})))],r=new Set(t);if(n.every((e=>r.has(e))))return fb.debug(\"codecs has not changed, no need to updateRemoteCodec, codecs: \".concat(t)),!1;const o=this._rtpCapabilities.recv.videoCodecs.filter((e=>t.some((t=>{var i;return Dn(i=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(i,t)}))));if(0===o.length)return fb.debug(\"updateRemoteCodec failed, because cannot find matched codec, remoteCapabilities codecs: \".concat(n,\" codecs: \").concat(t)),!1;const s=[...new Set(o.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")))];let a;if(fb.debug(\"updateRemoteCodec, from \".concat(n,\" to \").concat(s)),0===e.length)a=this.sessionDesc.mediaDescriptions.filter((e=>\"video\"===e.media.mediaType&&\"recvonly\"===e.attributes.direction));else if(a=this.sessionDesc.mediaDescriptions.filter((t=>t.attributes.mid&&Dn(e).call(e,t.attributes.mid)&&\"recvonly\"===t.attributes.direction)),a.length!==e.length)return fb.debug(\"updateRemoteCodec failed, because cannot find mids, mids: \".concat(e,\", codecs: \").concat(t)),!1;if(XA(\"USE_PUB_RTX\")||XA(\"USE_SUB_RTX\")){const e=ax(o,this.rtpCapabilities.recv.videoCodecs);o.push(...e)}this._rtpCapabilities.recv.videoCodecs=o;const c=this.localCapabilities.send,d=this.rtpCapabilities.recv,l=sx(dO.VIDEO,d,c,i);return a.forEach((e=>{const t=l.map((e=>e.payloadType.toString(10)));fb.debug(\"updateRemoteCodec mid: \".concat(e.attributes.mid,\", from \").concat(e.attributes.payloads,\" to \").concat(l)),e.attributes.payloads=l,e.media.fmts=t})),!0}createOrRecycleSendMedia(e,t,i,n,r){const o=this.rtpCapabilities.send,s=e===dO.VIDEO?o.videoCodecs:o.audioCodecs,a=e===dO.VIDEO?o.videoExtensions:o.audioExtensions;this.currentMidIndex+=1;const c=\"\".concat(this.currentMidIndex);let d={media:{mediaType:e,port:WF,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:s.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:a,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:i,rtcpFeedbackWildcards:[],payloads:s,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:n,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(c)}};d=this.mungSendMediaDesc(d,r);const l=this.findFirstClosedMedia(e);if(l){const e=this.sessionDesc.mediaDescriptions.indexOf(l);this.sessionDesc.mediaDescriptions[e]=d}else this.sessionDesc.mediaDescriptions.push(d);return d}updateBundleMids(){this.sessionDesc.attributes.groups[0].identificationTag=this.sessionDesc.mediaDescriptions.filter((e=>\"0\"!==e.media.port)).map((e=>e.attributes.mid))}mungRecvMediaDsec(e,t,i){const n=sA(e);return XU(n),JU(n,t),QU(n,t),ZU(n),$U(n,i,this.localCapabilities.send),n}mungSendMediaDesc(e,t){const i=sA(e);return $U(i,t,this.localCapabilities.recv),ox(i),i}updateRecvMedia(e,t){const i=this.sessionDesc.mediaDescriptions.findIndex((t=>t.attributes.mid===e));if(-1!==i){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[i],t);this.sessionDesc.mediaDescriptions[i]=e}}bumpMid(e){this.currentMidIndex+=e}findFirstClosedMedia(e){return this.sessionDesc.mediaDescriptions.find((t=>Zv()?\"0\"===t.media.port&&t.media.mediaType===e:\"0\"===t.media.port))}findPreloadMediaDesc(e){return this.sessionDesc.mediaDescriptions.find((t=>{var i;return(null===(i=t.attributes)||void 0===i||null===(i=i.ssrcs[0])||void 0===i?void 0:i.ssrcId)===e[0].ssrcId}))}getSSRC(e){var t;return null===(t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e)))||void 0===t?void 0:t.attributes.ssrcs}}function YF(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function qF(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?YF(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):YF(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let zF=function(e){return e.BANDWIDTH=\"bandwidth\",e.CPU=\"cpu\",e.NONE=\"none\",e.OTHER=\"other\",e}({});var JF=function(e){return e[e.DOWN=0]=\"DOWN\",e[e.UP=1]=\"UP\",e}(JF||{});const XF=new Map;function QF(e,t,i,n){let{scale:r}=e;if(0===r&&n===JF.UP||r>=t.length-1&&n===JF.DOWN)return e;let o=qF(qF({},e),{},{scale:n===JF.DOWN?++r:--r});switch(i){case\"maintain-framerate\":o=qF(qF({},o),t[r].motion);break;case\"maintain-resolution\":o=qF(qF({},o),t[r].detail);break;case\"balanced\":o=qF(qF({},o),t[r].balanced)}return o}function ZF(e,t){if(t){const i={overUse:0,underUse:0,adaptationList:$F(t)};XF.set(e,i)}else XF.delete(e)}function $F(e){const t=qF({},e),{bitrateMax:i,frameRate:n,scaleResolutionDownBy:r,bitrateMin:o}=t,{MIN_FRAME_RATE:s,MAX_THRESHOLD_FRAMERATE:a,MAX_SCALE:c,BITRATE_MIN_THRESHOLD:d,BITRATE_MAX_THRESHOLD:l,BWE_SCALE_UP_THRESHOLD:u,BWE_SCALE_DOWN_THRESHOLD:h,PERF_SCALE_DOWN_THRESHOLD:p,PERF_SCALE_UP_THRESHOLD:_,BALANCE_BITRATE_FACTOR:E,BALANCE_FRAMERATE_FACTOR:f,BALANCE_RESOLUTION_FACTOR:m,MOTION_RESOLUTION_FACTOR:T,MOTION_BITRATE_FACTOR:S,DETAIL_FRAMERATE_FACTOR:g,DETAIL_BITRATE_FACTOR:R}=YA,C=Math.min(t.frameRate,a),I=[{scale:0,threshold:{bwe_down:Math.round(Math.pow(h,1)*i),bwe_up:i,fps_down:Math.round(Math.pow(p,1)*C),fps_up:n},balanced:{scaleResolutionDownBy:1,frameRate:n,bitrateMax:i,bitrateMin:o},motion:{scaleResolutionDownBy:1,frameRate:n,bitrateMax:i,bitrateMin:o},detail:{scaleResolutionDownBy:1,frameRate:n,bitrateMax:i,bitrateMin:o}}];for(let e=1;e<=c;e++){const t={bwe_up:Math.round(Math.pow(u,e)*i),bwe_down:Math.round(Math.pow(h,e+1)*i),fps_up:Math.round(Math.pow(_,e)*C),fps_down:Math.round(Math.pow(p,e+1)*C)},a={scaleResolutionDownBy:r/Math.pow(m,e),frameRate:Math.max(Math.round(Math.pow(f,e)*n),s),bitrateMax:Math.max(Math.round(Math.pow(E,e)*i),l),bitrateMin:Math.max(Math.round(Math.pow(E,e)*o),d)},c={scaleResolutionDownBy:r/Math.pow(T,e),frameRate:n,bitrateMax:Math.max(Math.round(Math.pow(S,e)*i),l),bitrateMin:Math.max(Math.round(Math.pow(S,e)*o),d)},v={scaleResolutionDownBy:1,frameRate:Math.max(Math.round(Math.pow(g,e)*n),s),bitrateMax:Math.max(Math.round(Math.pow(R,e)*i),l),bitrateMin:Math.max(Math.round(Math.pow(R,e)*o),d)};I.push({scale:e,threshold:t,balanced:a,motion:c,detail:v})}return I}function eB(e,t,i,n,r,o){const s=XF.get(e)||{overUse:0,underUse:0,adaptationList:$F(r)},{adaptationList:a}=s;XF.set(e,s);const{OVERUSE_TIMES_THRESHOLD:c,UNDERUSE_TIMES_THRESHOLD:d}=YA,{scale:l}=n;let u,h;return\"number\"==typeof t&&t>0&&function(e,t,i,n){if(t>=i.length)return!1;let{threshold:{fps_down:r}}=i[t];return XA(\"FORCE_AG_HIGH_FRAMERATE\")&&\"maintain-framerate\"===n&&(r=i[0].threshold.fps_down),e<r}(t,l,a,o)&&(s.overUse++,h=zF.CPU,s.overUse>c)||\"number\"==typeof i&&i>0&&function(e,t,i){if(t>=i.length)return!1;const{threshold:{bwe_down:n}}=i[t];return e<n}(i,l,a)&&(s.overUse++,h=zF.BANDWIDTH,s.overUse>c)?(s.overUse=0,s.underUse=0,u=QF(n,a,o,JF.DOWN),[u,h]):(\"number\"==typeof t&&t>0&&\"number\"==typeof i&&i>0&&function(e,t,i,n){if(0===t)return;let{threshold:{fps_up:r}}=i[t];return XA(\"FORCE_AG_HIGH_FRAMERATE\")&&\"maintain-framerate\"===n&&(r=i[1].threshold.fps_up),e>r}(t,l,a,o)&&function(e,t,i){if(0===t)return;const{threshold:{bwe_up:n}}=i[t];return e>n}(i,l,a)&&(s.underUse++,s.underUse>d&&(s.overUse=0,s.underUse=0,u=QF(n,a,o,JF.UP),0===u.scale&&(h=zF.NONE))),[u,h])}function tB(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function iB(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?tB(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):tB(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function nB(e){var t;return!!XA(\"ENABLE_AG_ADAPTATION\")&&(!!(e instanceof cU||Dn(t=e._hints).call(t,mL.CUSTOM_TRACK))&&(!!XA(\"FORCE_SUPPORT_AG_ADAPTATION\")||!!(function(e){const t=Hv();if(t.os!==Fv.IOS||!t.osVersion)return!1;const i=t.osVersion.split(\".\");return Number(i[0])>=e}(14)&&ry(17,4,!0)||ny(14)&&oy(17,4,!0))))}const rB=new Map;function oB(e,t){const i=rB.get(e);if(i){const{timer:t}=i;window.clearTimeout(t),rB.delete(e)}t.qualityLimitationReason=zF.NONE,ZF(e)}var sB;function aB(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function cB(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?aB(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):aB(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let dB=(sB=class e extends cO{get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}get dtlsTransportState(){var e,t;return null!==(e=null===(t=this.peerConnection.getReceivers()[0])||void 0===t||null===(t=t.transport)||void 0===t?void 0:t.state)&&void 0!==e?e:null}get localCodecs(){return[...new Set(this.localCapabilities&&this.localCapabilities.send.videoCodecs.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")).filter((e=>{var t;return Dn(t=Object.keys(eb)).call(t,e)})))]}constructor(t,i){super(t,i),Fg(this,\"store\",void 0),Fg(this,\"peerConnection\",void 0),Fg(this,\"id\",TA(5,\"connection-\")),Fg(this,\"remoteSDP\",void 0),Fg(this,\"initialOffer\",void 0),Fg(this,\"transportEventReceiver\",void 0),Fg(this,\"statsFilter\",void 0),Fg(this,\"extension\",{useXR:XA(\"USE_XR\")}),Fg(this,\"localCapabilities\",void 0),Fg(this,\"remoteCodecs\",void 0),Fg(this,\"localCandidateCount\",0),Fg(this,\"allCandidatesReceived\",!1),Fg(this,\"isPreallocation\",!1),Fg(this,\"preSSRCMap\",new Map),Fg(this,\"dataStreamChannelMap\",new Map),Fg(this,\"establishPromise\",void 0),Fg(this,\"recoveredDataChannelIds\",[]),Fg(this,\"currentDataChannelId\",1),Fg(this,\"mutex\",new NA(\"P2PConnection-mutex\")),Fg(this,\"qualityLimitationReason\",zF.NONE),this.store=i,this.peerConnection=new RTCPeerConnection(e.resolvePCConfiguration(t),{optional:[{googDscp:!0}]}),this.statsFilter=xV(this.peerConnection,XA(\"STATS_UPDATE_INTERVAL\"),void 0,Zv()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1,this.establishPromise=this.establish()}getPreMedia(e){const t=this.preSSRCMap.get(e);if(void 0!==t){const e=this.peerConnection.getTransceivers().find((e=>e.mid===t));if(e)return{transceiver:e,track:e.receiver.track,id:t}}}async updateRemoteRTPCapabilities(e,t){if(this.remoteCodecs=t,!this.remoteSDP)return void fb.debug(\"[P2PConnection] cannot updateRemoteRTPCapabilities before remote SDP created, local codecs: \".concat(this.localCodecs,\", codecs: \").concat(t));if(this.remoteSDP.updateRemoteCodec(e,t,this.store.codec)){const e=await this.peerConnection.createOffer(),t=this.logSDPExchange(e.sdp||\"\",\"offer\",\"local\",\"muteLocal\");await this.peerConnection.setLocalDescription(e);const i=this.remoteSDP.toString();null==t||t(i),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:i})}else fb.debug(\"[P2PConnection] updateRemoteRTPCapabilities no need to exchange SDP.\")}async establish(){try{this.peerConnection.addTransceiver(\"video\",{direction:\"recvonly\"}),this.peerConnection.addTransceiver(\"audio\",{direction:\"recvonly\"});const e=await this.peerConnection.createOffer();if(!e.sdp)throw new Error(\"Cannot get initialOffer.sdp when trying to establish PeerConnection.\");const t=HU(e.sdp),i=await tx({filterRTX:!XA(\"USE_PUB_RTX\")&&!XA(\"USE_SUB_RTX\"),filterVideoFec:XA(\"FILTER_VIDEO_FEC\"),filterAudioFec:XA(\"FILTER_AUDIO_FEC\"),filterVideoCodec:XA(\"FILTER_VIDEO_CODEC\")},this.extension);return this.localCapabilities=rx(i),this.initialOffer=e,cB(cB({},t),{},{rtpCapabilities:i,offerSDP:e.sdp})}catch(e){throw new Cy(Ry.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async connect(e){try{if(!this.initialOffer)throw new Error(\"Cannot establish P2PConnection without initial offer.\");this.remoteSDP=new KF(cB(cB({},e),{},{localCapabilities:this.localCapabilities})),e.preallocation&&(this.isPreallocation=!0),Array.isArray(this.remoteCodecs)&&this.remoteCodecs.length>0&&this.remoteSDP.updateRemoteCodec([],this.remoteCodecs,this.store.codec);const t=this.remoteSDP.toString(),i=dx(this.initialOffer.sdp,this.extension),n=this.logSDPExchange(i||\"\",\"offer\",\"local\",\"connect\");this.store.descriptionStart(),await this.peerConnection.setLocalDescription({type:\"offer\",sdp:i}),null==n||n(t),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:t});const r=this.peerConnection.getTransceivers()[0];if(null!=r&&r.receiver&&this.tryBindTransportEvents(r.receiver),XA(\"PRELOAD_MEDIA_COUNT\")>0){this.remoteSDP.preloadRemoteMedia(XA(\"PRELOAD_MEDIA_COUNT\"));const e=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:e});const t=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(t)}const{preSSRCs:o}=e;if(Array.isArray(o)&&o.length>0){const{mids:e}=this.remoteSDP.batchSend(o.map((e=>({kind:e.kind,ssrcMsg:[{ssrcId:e.ssrcId,rtx:e.rtx}],mslabel:e.mslabel}))));e.forEach(((e,t)=>{this.preSSRCMap.set(o[t].ssrcId,e)})),await cx(this.peerConnection,this.remoteSDP,this.extension),fb.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] pre-batchReceive exchange SDP.\"))}}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.connect failed; \".concat(e.toString()))}}async updateRemoteConnect(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.updateRemoteConnect before remote SDP created\");const{rtpCapabilities:t}=e;this.remoteSDP.updateRemoteRTPCapabilities(t),Array.isArray(this.remoteCodecs)&&this.remoteCodecs.length>0&&this.remoteSDP.updateRemoteCodec([],this.remoteCodecs,this.store.codec);const{preSSRCs:i}=e;if(Array.isArray(i)&&i.length>0){const{mids:e}=this.remoteSDP.batchSend(i.map((e=>Object.assign({},{kind:e.kind,ssrcMsg:[{ssrcId:e.ssrcId,rtx:e.rtx}],mslabel:e.mslabel}))));e.forEach(((e,t)=>{this.preSSRCMap.set(i[t].ssrcId,e)}))}await cx(this.peerConnection,this.remoteSDP,this.extension),fb.debug(\"[P2PConnection] updateRemoteRTPCapabilities by exchanging SDP.\")}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.updateRemoteConnect failed; \".concat(e.toString()))}}send(e,t,i){var n=this;return YI((function*(){const r=yield qI(n.mutex.lock(\"From P2PConnection.send\"));try{if(!n.remoteSDP)throw new Error(\"Cannot call P2PConnection.send before remote SDP created\");const o=[];e.forEach((e=>{const t=n.peerConnection.addTransceiver(e._mediaStreamTrack,{direction:\"sendonly\"});o.push(t),e._updateRtpTransceiver(t)})),Zv()&&!0===XA(\"SIMULCAST\")&&(yield qI(n.applySimulcastForFirefox(o,e)));const s=yield qI(n.peerConnection.createOffer()),a=n.remoteSDP.predictReceivingMids(e.length),c=n.mungSendOfferSDP(s.sdp,e,a),d=FU.parse(c),l=a.map((e=>{const t=d.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"Cannot extract ssrc from mediaDescription.\");return KU(t,XA(\"USE_PUB_RTX\"))}));let u;try{u=yield l}catch(r){u=[],n.remoteSDP.receive(e,t,i,u);const o=n.remoteSDP.toString();throw yield qI(n.peerConnection.setLocalDescription({type:\"offer\",sdp:c})),yield qI(n.peerConnection.setRemoteDescription({type:\"answer\",sdp:o})),yield qI(n.stopSending(a,!0)),r}n.remoteSDP.receive(e,t,i,u);const h=n.remoteSDP.toString(),p=n.logSDPExchange(c,\"offer\",\"local\",\"send\");return yield qI(n.peerConnection.setLocalDescription({type:\"offer\",sdp:c})),yield qI(n.applySimulcastEncodings(o,e)),yield qI(n.applySendEncodings(o,e)),null==p||p(h),yield qI(n.peerConnection.setRemoteDescription({type:\"answer\",sdp:h})),o.map(((e,t)=>{const i=a[t];return{localSSRC:l[t],id:i,transceiver:e}}))}catch(e){throw e instanceof Cy?e:new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.send failed; \".concat(e.toString()))}finally{r()}}))()}async createDataChannels(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.createDataChannels before remote SDP created\");let i=this.dataStreamChannelMap.get(e);if(i&&\"open\"===i.readyState)fb.debug(\"[P2PConnection] Channels are already available and can be reused directly.\");else{const t=this.currentDataChannelId<1023?this.currentDataChannelId++:this.recoveredDataChannelIds.shift();if(\"number\"!=typeof t)throw new Error(\"create DataChannel error, because cannot get dc id\");i=this.peerConnection.createDataChannel(\"datastream-channel\",{id:t,negotiated:!0,ordered:!1,maxRetransmits:XA(\"DATASTREAM_MAX_RETRANSMITS\")}),i.binaryType=\"arraybuffer\",this.dataStreamChannelMap.set(e,i)}t.forEach((e=>{e._updateOriginDataChannel(i)}));const{needExchangeSDP:n}=this.remoteSDP.sendDataChannel();if(n){const e=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:e});const t=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(t),fb.debug(\"[P2PConnection] createDataChannels by exchanging SDP.\")}else fb.debug(\"[P2PConnection] createDataChannels no need to exchange SDP.\");return}catch(e){throw e instanceof Cy?e:new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.createDataChannels failed; \".concat(e.toString()))}}async stopDataChannels(e){try{const t=this.dataStreamChannelMap.get(e);return t&&(t.id&&this.recoveredDataChannelIds.push(t.id),t.close()),void this.dataStreamChannelMap.delete(e)}catch(e){throw e instanceof Cy?e:new Cy(Ry.DATACHANNEL_FAILED,\"P2PConnection.stopDataChannels failed; \".concat(e.toString()))}}async stopSending(e,t){const i=t?void 0:await this.mutex.lock(\"From P2PConnection.stopSending\");try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopSending before remote SDP created\");const t=this.peerConnection.getTransceivers().filter((t=>-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length when trying to call P2PConnection.stopSending.\");t.map((e=>{var t;oB(this.id+e.mid,this),e.direction=\"inactive\",null===(t=e.stop)||void 0===t||t.call(e)}));const n=await this.peerConnection.createOffer(),r=this.logSDPExchange(n.sdp||\"\",\"offer\",\"local\",\"stopSending\");await this.peerConnection.setLocalDescription(n),this.remoteSDP.stopReceiving(e);const o=this.remoteSDP.toString();null==r||r(o),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:o})}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.stopSending failed; \".concat(e.toString()))}finally{i&&i()}}async receive(e,t,i,n){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.receive \".concat(e,\" before remoteSDP created.\"));const{mid:r,needExchangeSDP:o}=this.remoteSDP.send(e,t,i,n);o&&(await cx(this.peerConnection,this.remoteSDP,this.extension),fb.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] receive \").concat(e,\" by exchanging SDP.\")));const s=this.peerConnection.getTransceivers().find((e=>e.mid===r));if(!s)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:s.receiver.track,id:r,transceiver:s}}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async batchReceive(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.batchReceive before remoteSDP created.\");const{mids:t,needExchangeSDP:i}=this.remoteSDP.batchSend(e);return i&&(await cx(this.peerConnection,this.remoteSDP,this.extension),fb.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] batchReceive by exchanging SDP.\"))),t.map((e=>{const t=this.peerConnection.getTransceivers().find((t=>t.mid===e));if(!t)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:t.receiver.track,id:e,transceiver:t}}))}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopReceiving before remote SDP created.\");e.forEach((e=>{Array.from(this.preSSRCMap.entries()).some((t=>{let[i,n]=t;if(n===e)return this.preSSRCMap.delete(i),!0}))})),this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"stopReceiving\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}async muteRemote(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteRemote mid=\".concat(e,\" before remote SDP created.\"));this.remoteSDP.mute(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"muteRemote\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.muteRemote failed; \".concat(e.toString()))}}async unmuteRemote(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteRemote mid=\".concat(e,\" before remote SDP created.\"));this.remoteSDP.unmute(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"unmuteRemote\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteRemote failed; \".concat(e.toString()))}}async muteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter((t=>t.mid&&-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map((e=>{e.direction=\"inactive\"}));const i=await this.peerConnection.createOffer(),n=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"muteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.muteRemote(e);const r=this.remoteSDP.toString();null==n||n(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.muteLocal failed; \".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter((t=>t.mid&&-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map((async(e,t)=>{e.direction=\"sendonly\"}));const i=await this.peerConnection.createOffer(),n=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"unmuteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.unmuteRemote(e);const r=this.remoteSDP.toString();null==n||n(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteLocal failed; \".concat(e.toString()))}}restartICE(e){var t=this;return YI((function*(){const i=yield qI(t.mutex.lock(\"From P2PConnection.restartICE\"));try{if(!t.remoteSDP)throw new Error(\"Cannot restartICE before remoteSDP created.\");if(ZP().supportPCSetConfiguration){const i=t.peerConnection.getConfiguration(),n=e===lO.RELAY?\"relay\":\"all\";i.iceTransportPolicy!==n&&(fb.debug(\"[\".concat(t.store.clientId,\"] restartICE change iceTransportPolicy from [\").concat(i.iceTransportPolicy,\"] to [\").concat(n,\"]\")),i.iceTransportPolicy=n,t.peerConnection.setConfiguration(i))}else if(e===lO.RELAY)return;t.remoteSDP.updateCandidates(e);const n=yield qI(t.peerConnection.createOffer({iceRestart:!0}));if(!n.sdp)throw new Error(\"Cannot restartICE because restart offer SDP does not exist.\");const r=HU(n.sdp),{remoteIceParameters:o}=yield r.iceParameters;t.remoteSDP.restartICE(o);const s=t.remoteSDP.toString(),a=t.logSDPExchange(n.sdp||\"\",\"offer\",\"local\",\"restartICE\");t.store.descriptionStart(),yield qI(t.peerConnection.setLocalDescription(n)),null==a||a(s),yield qI(t.peerConnection.setRemoteDescription({type:\"answer\",sdp:s}))}catch(e){fb.warning(\"[\".concat(t.store.clientId,\"] restart ICE failed, abort operation\"),e)}finally{i()}}))()}close(){var e;this.peerConnection.getTransceivers().forEach((e=>{oB(this.id+e.mid,this)})),this.preSSRCMap.clear(),this.peerConnection.close(),null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,\"closed\"),this.tryUnbindTransportEvents(),this.unbindPCEvents(),this.unbindStatsEvents(),this.removeAllListeners(),this.transportEventReceiver=void 0,this.statsFilter.destroy(),this.dataStreamChannelMap.clear(),this.recoveredDataChannelIds=[],this.currentDataChannelId=1}getStats(){return cB(cB({},this.statsFilter.getStats()),{},{qualityLimitationReason:this.qualityLimitationReason})}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.updateEncoderConfig before remote SDP created.\");const i=await this.peerConnection.createOffer(),n=this.mungSendOfferSDP(i.sdp,[t],[e]);this.remoteSDP.updateRecvMedia(e,t);const r=this.remoteSDP.toString(),o=this.logSDPExchange(n,\"offer\",\"local\",\"updateEncoderConfig\");await this.peerConnection.setLocalDescription({type:\"offer\",sdp:n}),null==o||o(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new Cy(Ry.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const i=this.peerConnection.getTransceivers().filter((t=>t.mid===e));1===i.length&&(this.isVP8Simulcast(t)?Zv()||await this.applySimulcastEncodings(i,[t]):await this.applySendEncodings(i,[t]))}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const i=this.peerConnection.getTransceivers().find((e=>e.mid===t));i&&await i.sender.replaceTrack(e._mediaStreamTrack)}async getSelectedCandidatePair(){const e=this.peerConnection.getReceivers();if(e.length>0&&e[0].transport&&e[0].transport.iceTransport&&e[0].transport.iceTransport.getSelectedCandidatePair&&e[0].transport.iceTransport.getSelectedCandidatePair()){const t=e[0].transport.iceTransport,{local:i,remote:n}=t.getSelectedCandidatePair();return{local:cB(cB({},RV),{},{candidateType:i.type,protocol:i.protocol,address:i.address,port:i.port}),remote:cB(cB({},RV),{},{candidateType:n.type,protocol:n.protocol,address:n.address,port:n.port})}}return this.statsFilter.getSelectedCandidatePair()}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e;null===(e=this.onICEConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.peerConnection.onicecandidate=e=>{e.candidate?this.localCandidateCount+=1:(this.peerConnection.onicecandidate=null,this.allCandidatesReceived=!0,fb.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] local candidate count\"),this.localCandidateCount))},setTimeout((()=>{this.allCandidatesReceived||(this.allCandidatesReceived=!0,fb.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] onicecandidate timeout, local candidate count\"),this.localCandidateCount))}),XA(\"CANDIDATE_TIMEOUT\"))}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(t){const i={iceServers:[]};return t.iceServers?i.iceServers=t.iceServers:t.turnServer&&\"off\"!==t.turnServer.mode&&(Ky(t.turnServer.servers)?i.iceServers=t.turnServer.servers:(i.iceServers&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.servers)),XA(\"USE_TURN_SERVER_OF_GATEWAY\")&&i.iceServers&&t.turnServer.serversFromGateway&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.serversFromGateway)),XA(\"FORCE_TURN_TCP\")?i.iceTransportPolicy=\"relay\":t.turnServer.servers.concat(t.turnServer.serversFromGateway||[]).forEach((e=>{e.forceturn&&(i.iceTransportPolicy=\"relay\")})))),XA(\"ENABLE_ENCODED_TRANSFORM\")&&ZP().supportWebRTCEncodedTransform&&(i.encodedInsertableStreams=!0),i}static turnServerConfigToIceServers(e){const t=[];return e.forEach((e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turns:\".concat(JO(e.turnServerURL),\":\").concat(e.tcpport,\"?transport=tcp\")}):(e.udpport&&!XA(\"FORCE_TURN_TCP\")&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.udpport,\"?transport=udp\")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}))})),t}tryBindTransportEvents(e){const t=e.transport;if(t){this.transportEventReceiver=e,t.onstatechange=()=>{var e;null!=t&&t.state&&(null===(e=this.onDTLSTransportStateChange)||void 0===e||e.call(this,t.state))},t.onerror=e=>{var t;null===(t=this.onDTLSTransportError)||void 0===t||t.call(this,\"error\"in e?e.error:e)};const i=t.iceTransport;i&&(i.onstatechange=()=>{const e=null==t?void 0:t.iceTransport.state;var i;e&&(null===(i=this.onICETransportStateChange)||void 0===i||i.call(this,e))},i.getSelectedCandidatePair&&(i.onselectedcandidatepairchange=()=>{if(i.getSelectedCandidatePair()){const{local:e,remote:t}=i.getSelectedCandidatePair();fb.info(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] selectedcandidatepairchange: local \").concat(JSON.stringify({candidateType:e.type,protocol:e.protocol}),\", remote \").concat(JSON.stringify({candidateType:t.type,protocol:t.protocol,address:t.address,port:t.port}),\" )\"))}}))}}tryUnbindTransportEvents(){this.transportEventReceiver&&this.transportEventReceiver.transport&&(this.transportEventReceiver.transport.onstatechange=null,this.transportEventReceiver.transport.onerror=null,this.transportEventReceiver.transport.iceTransport&&(this.transportEventReceiver.transport.iceTransport.onstatechange=null))}async updateRtpSenderEncodings(e,t){var i,n;if(!t){const i=this.peerConnection.getSenders();t=i.find((t=>t.track===e._mediaStreamTrack))}if(!t)return fb.warn(\"[\".concat(e.getTrackId(),\"] no rtpSender found}\"));if(this.isVP8Simulcast(e))return fb.warn(\"[updateRtpSenderEncodings] Track is VP8 simulcast, please apply simulcast encodings\");if(!ZP().supportSetRtpSenderParameters)return fb.warn(\"[updateRtpSenderEncodings] Browser not support set rtp-sender parameters\");const r={},o={};switch(e._optimizationMode){case\"motion\":r.degradationPreference=\"maintain-framerate\";break;case\"detail\":r.degradationPreference=\"maintain-resolution\";break;case\"balanced\":r.degradationPreference=\"balanced\"}const s=function(e,t){return e.getTransceivers().find((e=>e.sender.track===t||e.receiver.track===t))}(this.peerConnection,e._mediaStreamTrack),a=wk(e);if(nB(e)&&s&&t&&a&&this.getLocalVideoStats&&Dn(i=[\"vp8\",\"vp9\"]).call(i,this.store.codec)){var c;const i=r.degradationPreference||(Dn(c=e._hints).call(c,mL.CUSTOM_TRACK)?XA(\"CUSTOM_ADAPTATION_DEFAULT_MODE\"):\"maintain-framerate\");!function(e,t,i,n,r,o){if(oB(e,i),r(t),\"balanced\"!==n&&\"maintain-framerate\"!==n&&\"maintain-resolution\"!==n)return;let s=-1;ZF(e,t);const a=window.setInterval((()=>{const a=rB.get(e);if(!XA(\"ENABLE_AG_ADAPTATION\")||!a)return oB(e,i),void r(t);const c=o();if(c.sendPackets>0&&c.OutgoingAvailableBandwidth>0){if(-1===s)return void(s=Date.now());if(Date.now()-s<1e3)return;const o=c.sendFrameRate,d=c.OutgoingAvailableBandwidth,[l,u]=eB(e,o,d,a.adaptationConfig,t,n);u&&(i.qualityLimitationReason=u),l&&a.adaptationConfig.scale!==l.scale&&(fb.debug(\"[\".concat(e,\"] applyAdaptation: \").concat(i.qualityLimitationReason,\"\\n           sendFps \").concat(o,\", bwe \").concat(d,\", switch from \").concat(a.adaptationConfig.scale,\" to \").concat(l.scale,\" \")),a.adaptationConfig=iB(iB({},a.adaptationConfig),l),r(l))}}),XA(\"CHECK_LOCAL_STATS_INTERVAL\")),c=iB({},t);rB.set(e,{timer:a,adaptationConfig:c,originConfig:t,adaptationFunc:r}),fb.debug(\"[\".concat(e,\"] start adaptation, originConfig: \").concat(JSON.stringify(t),\", degradationPreference: \").concat(n))}(this.id+s.mid,a,this,i,(e=>{t&&this.updateAdaptation(t,e)}),this.getLocalVideoStats.bind(this))}if(e._encoderConfig){var d;const{bitrateMax:t,frameRate:i,scaleResolutionDownBy:n}=e._encoderConfig;t&&(o.maxBitrate=1e3*t),(Dn(d=e._hints).call(d,mL.LOW_STREAM)||e.isUseScaleResolutionDownBy)&&(i&&(o.maxFramerate=QO(i)),n&&n>=1&&(o.scaleResolutionDownBy=n))}const{maxFramerate:l}=XA(\"ENCODER_CONFIG_LIMIT\");if(l&&\"number\"==typeof l&&(o.maxFramerate=o.maxFramerate?Math.min(o.maxFramerate,l):l),XA(\"DSCP_TYPE\")&&Ey()){var u;const e=XA(\"DSCP_TYPE\");Dn(u=[\"very-low\",\"low\",\"medium\",\"high\"]).call(u,e)&&(o.networkPriority=e)}const h=t.getParameters(),p=null===(n=h.encodings)||void 0===n?void 0:n[0];Zv()&&!p&&(r.encodings=[o]),p&&Object.assign(p,o),Object.assign(h,r),fb.debug(\"[\".concat(e.getTrackId(),\"] updateRtpSenderEncodings: \").concat(JSON.stringify(h.encodings))),await t.setParameters(h),await async function(e,t,i){try{var n;if(!ZP().supportSetRtpSenderParameters)return;if(!function(e){return\"vp9\"===e}(e)||!XA(\"ENABLE_SVC\"))return;const r={},o={},s=t.getParameters(),a=null===(n=s.encodings)||void 0===n?void 0:n[0];o.scalabilityMode=BU(i),a&&Object.assign(a,o),Object.assign(s,r),await t.setParameters(s),fb.debug(\"[updateAdaptation] updateRtpSenderEncodings scalabilityMode success: \".concat(JSON.stringify(s.encodings)))}catch(e){fb.debug(\"[updateAdaptation] updateRtpSenderEncodings scalabilityMode failed\",e)}}(this.store.codec,t,XA(\"SVC_MODE\"))}async updateAdaptation(e,t){var i,n;if(!e)return fb.debug(\"[updateAdaptation] no rtpSender found\");if(!ZP().supportSetRtpSenderParameters)return fb.debug(\"[updateAdaptation] Browser not support set rtp-sender parameters\");const r={},{bitrateMax:o,frameRate:s,scaleResolutionDownBy:a}=t;o&&(r.maxBitrate=1e3*o),s&&(r.maxFramerate=QO(s)),a&&a>=1&&Dn(i=[\"vp8\",\"vp9\"]).call(i,this.store.codec)&&(r.scaleResolutionDownBy=a);const c=e.getParameters(),d=null===(n=c.encodings)||void 0===n?void 0:n[0];d&&Object.assign(d,r),Object.assign(c,{});try{await e.setParameters(c),fb.debug(\"[updateAdaptation] updateRtpSenderEncodings: \".concat(JSON.stringify(c.encodings)))}catch(t){!(\"transport\"in e)||e.transport&&\"connected\"===e.transport.state?\"connected\"!==this.peerConnectionState?fb.debug(\"[updateAdaptation] peerConnection not connected}\"):fb.debug(\"[updateAdaptation] updateRtpSenderEncodings failed\",t):fb.debug(\"[updateAdaptation] rtpSender transport not connected}\")}}async applySendEncodings(e,t){try{if(!ZP().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let i=0;i<e.length;i++){const n=e[i],r=t[i];r instanceof aU&&!this.isVP8Simulcast(r)&&await this.updateRtpSenderEncodings(r,n.sender)}}catch(e){fb.debug(\"[\".concat(this.store.clientId,\"] Apply RTPSendEncodings failed.\"))}}mungSendOfferSDP(e,t,i){const n=FU.parse(e);return t.forEach(((e,t)=>{const r=i[t],o=n.mediaDescriptions.find((e=>e.attributes.mid===r));o&&(JU(o,e),ex(o,e,this.store.codec))})),FU.print(n)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,i)=>{var n;null===(n=this.onFirstVideoDecoded)||void 0===n||n.call(this,e,t,i)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedLocalCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onFirstVideoDecodedTimeout=e=>{var t;null===(t=this.onFirstVideoDecodedTimeout)||void 0===t||t.call(this,e)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0,this.statsFilter.onFirstVideoDecodedTimeout=void 0}async applySimulcastForFirefox(e,t){if(e.length===t.length)for(let a=0;a<e.length;a++){var i,n,r,o,s;const c=e[a],d=t[a];if(d instanceof aU&&!Dn(i=d._hints).call(i,mL.LOW_STREAM)&&null!==(n=d._encoderConfig)&&void 0!==n&&n.bitrateMax&&(null===(r=d._encoderConfig)||void 0===r?void 0:r.bitrateMax)>200&&null!==(o=d._scalabilityMode)&&void 0!==o&&o.numSpatialLayers&&(null===(s=d._scalabilityMode)||void 0===s?void 0:s.numSpatialLayers)>1&&\"vp8\"===this.store.codec){const e={},t={high:1e3*(d._encoderConfig.bitrateMax-50),medium:5e4};e.encodings=[{rid:\"m\",active:!0,maxBitrate:t.medium,scaleResolutionDownBy:4},{rid:\"h\",active:!0,maxBitrate:t.high}];const i=c.sender.getParameters();await c.sender.setParameters(Object.assign(i,e))}}}async applySimulcastEncodings(e,t){if(!Zv()&&e.length===t.length)for(let i=0;i<e.length;i++){const n=t[i];if(n instanceof aU&&this.isVP8Simulcast(n)){const t=e[i],r={},o={high:1e3*(n._encoderConfig.bitrateMax-50),medium:5e4};r.encodings=[{active:!0,adaptivePtime:!1,networkPriority:\"high\",priority:\"high\",maxBitrate:o.high},{active:!0,adaptivePtime:!1,networkPriority:\"low\",priority:\"low\",maxBitrate:o.medium,scaleResolutionDownBy:4}];const s=t.sender.getParameters();await t.sender.setParameters(Object.assign(s,r))}}}isVP8Simulcast(e){var t,i,n,r,o;return!!(e instanceof aU&&XA(\"SIMULCAST\")&&\"vp8\"===this.store.codec&&!Dn(t=e._hints).call(t,mL.LOW_STREAM)&&null!==(i=e._encoderConfig)&&void 0!==i&&i.bitrateMax&&(null===(n=e._encoderConfig)||void 0===n?void 0:n.bitrateMax)>200&&null!==(r=e._scalabilityMode)&&void 0!==r&&r.numSpatialLayers&&(null===(o=e._scalabilityMode)||void 0===o?void 0:o.numSpatialLayers)>1)}logSDPExchange(e,t,i,n){if(XA(\"SDP_LOGGING\"))return fb.upload(\"[\".concat(this.store.clientId,\"] exchanging \").concat(i,\" \").concat(t,\" SDP during P2PConnection.\").concat(n,\"\\n\"),e),\"offer\"===t?e=>{this.logSDPExchange(e,\"answer\",\"local\"===i?\"remote\":\"local\",n)}:void 0}async getRemoteSSRC(e){if(!this.remoteSDP)return;const t=this.remoteSDP.getSSRC(e);return t&&0!==t.length?t[0].ssrcId:void 0}setConfiguration(t){if(ZP().supportPCSetConfiguration){const i=e.resolvePCConfiguration(t);this.peerConnection.setConfiguration(i)}}},Cw(sB.prototype,\"updateRemoteRTPCapabilities\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"updateRemoteRTPCapabilities\"),sB.prototype),Cw(sB.prototype,\"connect\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"connect\"),sB.prototype),Cw(sB.prototype,\"updateRemoteConnect\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"updateRemoteConnect\"),sB.prototype),Cw(sB.prototype,\"createDataChannels\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"createDataChannels\"),sB.prototype),Cw(sB.prototype,\"receive\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"receive\"),sB.prototype),Cw(sB.prototype,\"batchReceive\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"batchReceive\"),sB.prototype),Cw(sB.prototype,\"stopReceiving\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"stopReceiving\"),sB.prototype),Cw(sB.prototype,\"muteRemote\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"muteRemote\"),sB.prototype),Cw(sB.prototype,\"unmuteRemote\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"unmuteRemote\"),sB.prototype),Cw(sB.prototype,\"muteLocal\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"muteLocal\"),sB.prototype),Cw(sB.prototype,\"unmuteLocal\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"unmuteLocal\"),sB.prototype),Cw(sB.prototype,\"close\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"close\"),sB.prototype),Cw(sB.prototype,\"updateEncoderConfig\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"updateEncoderConfig\"),sB.prototype),Cw(sB.prototype,\"updateSendParameters\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"updateSendParameters\"),sB.prototype),Cw(sB.prototype,\"replaceTrack\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"replaceTrack\"),sB.prototype),Cw(sB.prototype,\"updateAdaptation\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"updateAdaptation\"),sB.prototype),Cw(sB.prototype,\"getRemoteSSRC\",[lB],Object.getOwnPropertyDescriptor(sB.prototype,\"getRemoteSSRC\"),sB.prototype),sB);function lB(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From P2PConnection.\".concat(t));try{for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s];return await n.apply(this,o)}finally{i()}},i}var uB;function hB(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function pB(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?hB(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):hB(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function _B(e){var t,i,n,r=2;for(\"undefined\"!=typeof Symbol&&(i=JI,n=Symbol.iterator);r--;){if(i&&null!=(t=e[i]))return t.call(e);if(n&&null!=(t=e[n]))return new EB(t.call(e));i=\"@@asyncIterator\",n=\"@@iterator\"}throw new TypeError(\"Object is not async iterable\")}function EB(e){function t(e){if(Object(e)!==e)return Gh.reject(new TypeError(e+\" is not an object.\"));var t=e.done;return Gh.resolve(e.value).then((function(e){return{value:e,done:t}}))}return EB=function(e){this.s=e,this.n=e.next},EB.prototype={s:null,n:null,next:function(){return t(this.n.apply(this.s,arguments))},return:function(e){var i=this.s.return;return void 0===i?Gh.resolve({value:e,done:!0}):t(i.apply(this.s,arguments))},throw:function(e){var i=this.s.return;return void 0===i?Gh.reject(e):t(i.apply(this.s,arguments))}},new EB(e)}let fB=(uB=class extends xy{get state(){return this._state}set state(e){const t=this._state;this._state=e,this.emit(_O.StateChange,t,this._state)}constructor(e,t){super(),Fg(this,\"isPlanB\",void 0),Fg(this,\"store\",void 0),Fg(this,\"statsUploader\",void 0),Fg(this,\"connection\",void 0),Fg(this,\"localTrackMap\",new Map),Fg(this,\"remoteUserMap\",new Map),Fg(this,\"localDataChannels\",[]),Fg(this,\"remoteDataChannelMap\",new Map),Fg(this,\"pendingLocalTracks\",[]),Fg(this,\"pendingRemoteTracks\",[]),Fg(this,\"pendingLocalDataChannels\",[]),Fg(this,\"pendingRemoteDataChannels\",[]),Fg(this,\"statsCollector\",void 0),Fg(this,\"shouldForwardP2PCreation\",void 0),Fg(this,\"iceFailedCount\",0),Fg(this,\"dtlsFailedCount\",0),Fg(this,\"mutex\",new NA(\"P2PChannel-mutex\")),Fg(this,\"_state\",pO.Disconnected),Fg(this,\"_pcStatsUploadType\",XA(\"NEW_ICE_RESTART\")?uO.FIRST_CONNECTION:uO.OLD_FIRST_CONNECTION),Fg(this,\"_isInRestartIce\",!1),Fg(this,\"_isStartRestartIce\",!1),Fg(this,\"_restartStates\",[\"disconnected\",\"failed\"]),Fg(this,\"_restartTimer\",void 0),Fg(this,\"_isFirstConnected\",!0),Fg(this,\"handleMuteLocalTrack\",(async(e,t,i)=>{const n=await this.mutex.lock(\"Locking from P2PChannel.handleMuteLocalTrack\");try{if(!this.connection||this.state!==pO.Connected)return void i(new Cy(Ry.INVALID_OPERATION,\"Cannot call P2PChannel.handleMuteLocalTrack before connection established.\"));const r=this.filterTobeMutedTracks(e);if(0===r.length)return void t();const o=r.find((e=>\"videoLowTrack\"===e[0]));if(o){o[1].track._originMediaStreamTrack.stop()}await this.connection.muteLocal(r.map((e=>{let[,{id:t}]=e;return t})));const s=this.createMuteMessage(r);await $y(this,_O.RequestMuteLocal,s),t()}catch(e){i(e)}finally{n()}})),Fg(this,\"handleUnmuteLocalTrack\",(async(e,t,i)=>{const n=await this.mutex.lock(\"Locking from P2PChannel.handleUnmuteLocalTrack\");try{if(!this.connection||this.state!==pO.Connected)return void i(new Cy(Ry.INVALID_OPERATION,\"Cannot call P2PChannel.handleUnmuteLocalTrack before connection established.\"));const r=this.filterTobeUnmutedTracks(e);if(0===r.length)return void t();const o=r.find((e=>\"videoLowTrack\"===e[0]));if(o){const t=o[1];if(t.track._originMediaStreamTrack.stop(),!XA(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&ZP().supportDualStreamEncoding){const i=e._mediaStreamTrack.clone();t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i}else{const i=KV(e,tA(this,_O.RequestLowStreamParameter));t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i}await new Gh(((e,i)=>{this.handleReplaceTrack(t.track,e,i,!0)}))}await this.connection.unmuteLocal(r.map((e=>{let[,{id:t}]=e;return t})));const s=this.createUnmuteMessage(r);await $y(this,_O.RequestUnmuteLocal,s),t()}catch(e){i(e)}finally{n()}})),Fg(this,\"handleUpdateVideoEncoder\",(async(e,t,i)=>{const n=await this.mutex.lock(\"Locking from P2PChannel.handleSetVideoEncoder\");try{const i=this.localTrackMap.get(hO.LocalVideoTrack);if(!this.connection||!i||i.track!==e||this.state!==pO.Connected)return void t();const{id:r,track:o}=i;await this.connection.updateSendParameters(r,o),await this.connection.updateEncoderConfig(r,o),this.emit(_O.UpdateVideoEncoder,o),t()}catch(e){i(e)}finally{n()}})),Fg(this,\"handleUpdateVideoSendParameters\",(async(e,t,i)=>{const n=await this.mutex.lock(\"Locking from P2PChannel.handleUpdateVideoSendParameters\");try{const i=this.localTrackMap.get(hO.LocalVideoTrack);if(!this.connection||!i||i.track!==e||this.state!==pO.Connected)return void t();const{id:r,track:o}=i;await this.connection.updateSendParameters(r,o),t()}catch(e){i(e)}finally{n()}})),Fg(this,\"handleReplaceMixingTrack\",(async(e,t,i,n)=>{if(!this.connection||this.state!==pO.Connected)return void t();const r=hF([e]);let o;fb.debug(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection will replace audioTrack [\").concat(r.getTrackId(),\"]\")),\"boolean\"==typeof n&&n||(o=await this.mutex.lock(\"From P2PChannel.handleReplaceMixingTrack\"));try{await this.replaceTrack(e,r),t()}catch(e){i(e)}finally{var s;null===(s=o)||void 0===s||s()}})),Fg(this,\"handleReplaceTrack\",(async(e,t,i,n)=>{let r;fb.debug(\"[\".concat(this.store.clientId,\"] P2PChannel handleReplaceTrack for [track-id-\").concat(e.getTrackId(),\"]\")),\"boolean\"==typeof n&&n||(r=await this.mutex.lock(\"From P2PChannel.handleReplaceTrack\"));try{var o;const i=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(!this.connection||!i||this.state!==pO.Connected)return void t();if(await(null===(o=this.connection)||void 0===o?void 0:o.replaceTrack(e,i[1].id)),this.isPlanB){const t=i[1];t.id=e._mediaStreamTrack.id,this.localTrackMap.set(i[0],t)}if(i[0]===hO.LocalVideoTrack&&!XA(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&ZP().supportDualStreamEncoding){const t=this.localTrackMap.get(hO.LocalVideoLowTrack);if(t){const i=e._mediaStreamTrack.clone();t.track._originMediaStreamTrack.stop(),t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i,await new Gh(((e,i)=>{this.handleReplaceTrack(t.track,e,i,!0)}))}}t()}catch(e){i(e)}finally{var s;null===(s=r)||void 0===s||s()}})),Fg(this,\"handleGetRTCStats\",(e=>{e(this.statsCollector.getRTCStats())})),Fg(this,\"handleGetLocalVideoStats\",(e=>{e(this.statsCollector.getLocalVideoTrackStats())})),Fg(this,\"handleGetLocalAudioStats\",(e=>{e(this.statsCollector.getLocalAudioTrackStats())})),Fg(this,\"handleGetRemoteVideoStats\",(e=>this.statsCollector.getRemoteVideoTrackStats(e.uid)[e.uid])),Fg(this,\"handleGetRemoteAudioStats\",(e=>this.statsCollector.getRemoteAudioTrackStats(e.uid)[e.uid])),this.store=e,this.statsCollector=t,this.statsCollector.addP2PChannel(this),this.statsUploader=new aF(this.store),this.bindStatsUploaderEvents(),this.isPlanB=!ZP().supportUnifiedPlan||XA(\"CHROME_FORCE_PLAN_B\")&&Ey(),this.shouldForwardP2PCreation=XA(\"FORWARD_P2P_CREATION\")&&ZP().supportPCSetConfiguration&&_y(),this.shouldForwardP2PCreation&&(this.connection=this.isPlanB?new FF({},this.store):new dB({},this.store),this.bindConnectionEvents(this.connection))}async startP2PConnection(e){var t;this.state=pO.New;const i=this.shouldForwardP2PCreation&&\"closed\"===(null===(t=this.connection)||void 0===t?void 0:t.peerConnectionState);if(this.shouldForwardP2PCreation&&!i||(i&&this.connection&&(fb.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.startP2PConnection ForwardP2P closed.\")),this.connection.close(),this.unbindConnectionEvents(this.connection)),this.connection=this.isPlanB?new FF(e,this.store):new dB(e,this.store),this.bindConnectionEvents(this.connection)),!this.connection)throw new Cy(Ry.UNEXPECTED_ERROR,\"Cannot P2PChannel.startConnection before P2PConnection initialization .\");return this._pcStatsUploadType=XA(\"NEW_ICE_RESTART\")?uO.FIRST_CONNECTION:uO.OLD_FIRST_CONNECTION,this._isFirstConnected=!0,this._isInRestartIce=!1,this._isStartRestartIce=!1,this.connection.setConfiguration(e),this.connection.establishPromise}async connect(e){if(!this.connection)throw new Cy(Ry.UNEXPECTED_ERROR,\"Cannot P2PChannel.connect before P2PChannel.startP2PConnection .\");XA(\"ENABLE_PREALLOC_PC\")&&this.state===pO.Connected?await this.connection.updateRemoteConnect(e):(this.store.peerConnectionStart(),await this.connection.connect(e),this.statsUploader.startUploadTransportStats(),this.statsUploader.startUploadExtensionUsageStats(),this.state=pO.Connected)}updateRemoteRTPCapabilities(e){const t=Array.from(this.localTrackMap.entries()).filter((e=>{var t;let[i]=e;return Dn(t=[hO.LocalVideoLowTrack,hO.LocalVideoTrack]).call(t,i)})),i=t.map((e=>{let[,{id:t}]=e;return t})),n=t.map((e=>{let[t]=e;return t}));if(this.connection instanceof dB){if(vb.updateRemoteRTPCapabilities(this.store.sessionId,{trackTypes:JSON.stringify(n),localCodecs:JSON.stringify(this.connection.localCodecs),remoteCodecs:JSON.stringify(e)}),!Dn(e).call(e,this.store.codec)){const t=[\"vp9\",\"vp8\",\"h264\"].find((t=>Dn(e).call(e,t)));t&&(this.store.codec=t,fb.debug(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\" updateRemoteRTPCapabilities] default codec is not available, hence the fallback to \").concat(t,\".\")))}this.connection.updateRemoteRTPCapabilities(i,e)}}async getEstablishParams(){var e;if(this.connection instanceof dB&&\"closed\"!==this.connection.peerConnectionState&&Dn(e=[pO.New,pO.Connected]).call(e,this.state))return this.connection.establishPromise}async publishDataChannel(e){if(!this.connection||this.state!==pO.Connected){if(this.state===pO.Disconnected)throw new Cy(Ry.UNEXPECTED_ERROR,\"PeerConnection already disconnected.\");return e.forEach((e=>{var t;Dn(t=this.pendingLocalDataChannels).call(t,e)||this.pendingLocalDataChannels.push(e)})),[]}const t=this.filterTobePublishedDataChannels(e);return 0===t.length?[]:(t.forEach((e=>{const t=Date.now();this.store.publish(e.id.toString(),\"datachannel\",t)})),await this.connection.createDataChannels(this.store.uid,t),t.forEach((e=>{this.localDataChannels.push(e);const t=Date.now();this.store.publish(e.id+\"\",\"datachannel\",void 0,t)})),e.map((e=>({streamId:e.id,ordered:e.ordered,maxRetransmits:e.maxRetransmits,metadata:e.metadata,channelId:e._originDataChannelId}))))}publish(e,t,i){var n=this;return YI((function*(){const r=yield qI(n.mutex.lock(\"From P2PChannel.publish\"));try{if(!n.connection||n.state!==pO.Connected){if(n.state===pO.Disconnected)throw new Cy(Ry.UNEXPECTED_ERROR,\"PeerConnection already disconnected.\");n.throwIfTrackTypeNotMatch(e);const t=e.filter((e=>-1===n.pendingLocalTracks.indexOf(e)));return void(n.pendingLocalTracks=n.pendingLocalTracks.concat(t))}n.store.pubId=n.store.pubId+1,rV.markPublishStart(n.store.clientId,n.store.pubId);const o=n.filterTobePublishedTracks(e,t,i);if(0===o.length)return void(yield qI(n.tryToUnmuteAudio(e)));yield*zI(_B(n.doPublish(n.connection,o)))}finally{r()}}))()}doPublish(e,t){var i=this;return YI((function*(){t.forEach((e=>{let{track:t,type:n}=e;const r=Date.now();i.store.publish(t.getTrackId(),n===hO.LocalAudioTrack?\"audio\":\"video\",r)})),i.bindLocalTrackEvents(t);const n=t.map((e=>{let{track:t}=e;return t})),r=yield qI(e.send(n,i.store.codec,i.store.audioCodec)),o=(yield qI(r.next())).value,s=i.createGatewayPublishMessage(t,o);let a;try{a=yield s}catch(e){throw r.throw(e),(null==e?void 0:e.code)===Ry.WS_ABORT&&t.forEach((e=>{let{track:t}=e;-1===i.pendingLocalTracks.indexOf(t)&&i.pendingLocalTracks.push(t)})),i.unbindLocalTrackEvents(t),e}const c=i.mapPubResToRemoteConfig(s,a,n),d=(yield qI(r.next(c))).value,l=XA(\"ENABLE_VIDEO_SEI\");n.forEach((async e=>{const t=e.getRTCRtpTransceiver();t&&l&&(e.trackMediaType===dO.VIDEO?await kU(t.sender,e):e.trackMediaType===dO.AUDIO&&await async function(e){if(!ZP().supportWebRTCEncodedTransform)return void fb.warning(\"browser not support audio encoded transform\");if(NU.has(e))return;if(!e.track)return;const t={track:e.track};if(Jv()){if(!e.createEncodedStreams)return void fb.warning(\"browser not support createEncodedStreams() API\");let n=null;try{n=e.createEncodedStreams()}catch(e){return void fb.error(\"create audio-encoded-streams error\",e&&e.message)}const r=new TransformStream({transform(n,r){t.controller||(t.controller=r),e.track&&e.track.id!==t.track.id&&(fb.debug(\"audio track changed: \".concat(t.track.id,\" => \").concat(e.track.id)),t.track.removeEventListener(\"ended\",i),t.track=e.track,t.track.addEventListener(\"ended\",i)),r.enqueue(n)}});n.readable.pipeThrough(r).pipeTo(n.writable)}else if(Xv()){if(\"undefined\"==typeof RTCRtpScriptTransform)return void fb.warning(\"browser not support RTCRtpScriptTransform\");const n=OU(),r=new MessageChannel;await new Gh((e=>n.onmessage=t=>{\"registered\"===t.data&&e(void 0)}));const o=new RTCRtpScriptTransform(n,{name:\"tx\",port:r.port2},[r.port2]);e.transform=o,await new Gh((e=>n.onmessage=t=>{\"started\"===t.data&&e(void 0)})),r.port1.onmessage=n=>{var r;n.data.transformed&&e.track&&(null===(r=e.track)||void 0===r?void 0:r.id)!==t.track.id&&(fb.debug(\"audio track changed: \".concat(t.track.id,\" => \").concat(e.track.id)),t.track.removeEventListener(\"ended\",i),t.track=e.track,t.track.addEventListener(\"ended\",i))},t.worker=n}function i(){if(e.track){if(this.id!==e.track.id)return;e.track.removeEventListener(\"ended\",i)}const t=NU.get(e);if(t){NU.delete(e);try{var n,r;null===(n=t.controller)||void 0===n||n.terminate(),null===(r=t.worker)||void 0===r||r.terminate()}catch(e){fb.warning(e&&e.message)}}}NU.set(e,t),e.track.addEventListener(\"ended\",i)}(t.sender))})),t.forEach((e=>{let{type:t}=e;i.statsCollector.addLocalStats(t)})),i.assignLocalTracks(t,d),i.statsUploader.startUploadOutboundStats(),t.forEach((e=>{let{track:t,type:n}=e;const r=Date.now();i.store.publish(t.getTrackId(),n===hO.LocalAudioTrack?\"audio\":\"video\",void 0,r)}))}))()}async updateVideoStreamParameter(e,t){const i=this.localTrackMap.get(t);if(!i)return;if(!(i.track instanceof aU))return fb.warn(\"[updateVideoStreamParameter]: track is not an instance of LocalVideoTrack\");if(!(this.connection instanceof dB||this.connection instanceof FF))return fb.warn(\"[updateVideoStreamParameter]: connection is not P2PConnection or P2PConnectionPlanB\");const{track:n}=i,r=function(e,t){const i={};return e.height&&e.width&&(i.scaleResolutionDownBy=iN(e,t)),i.maxFramerate=e.framerate?QO(e.framerate):void 0,i.maxBitrate=e.bitrate?1e3*e.bitrate:void 0,i}(e,n);if(n._encoderConfig||(n._encoderConfig={}),t!==hO.LocalVideoLowTrack||!XA(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&ZP().supportDualStreamEncoding)null!=r.scaleResolutionDownBy&&(n._encoderConfig.scaleResolutionDownBy=r.scaleResolutionDownBy);else{const t=n._originMediaStreamTrack;if(!t.canvas)return fb.warn(\"[\".concat(n.getTrackId(),\"] no canvas on track\"));!function(e,t){const i=e.canvas;t.width&&(i.width=QO(t.width)),t.height&&(i.height=QO(t.height)),t.framerate&&(i.stopCapture&&i.stopCapture(),i.stopCapture=QL((()=>{!i.startCapture&&i.stopCapture&&i.stopCapture(),i.startCapture&&i.startCapture()}),QO(t.framerate)))}(t,e)}null!=r.maxBitrate&&(n._encoderConfig.bitrateMax=r.maxBitrate/1e3),null!=r.maxFramerate&&(n._encoderConfig.frameRate&&\"object\"==typeof n._encoderConfig.frameRate?n._encoderConfig.frameRate.max=r.maxFramerate:n._encoderConfig.frameRate={max:r.maxFramerate}),fb.debug(\"[\".concat(n.getTrackId(),\"] LowStreamEncoderConfig: , \").concat(JSON.stringify(n._encoderConfig))),await this.connection.updateRtpSenderEncodings(n)}publishLowStream(e){var t=this;return YI((function*(){if(!t.connection||t.state!==pO.Connected)return;const i=yield qI(t.mutex.lock(\"Locking from P2PChannel.publishLowStream\"));try{const r=t.localTrackMap.get(hO.LocalVideoTrack);if(!r)throw new Cy(Ry.UNEXPECTED_ERROR,\"Could not find high stream\");if(t.localTrackMap.has(hO.LocalVideoLowTrack))throw new Cy(Ry.UNEXPECTED_ERROR,\"[\".concat(t.store.clientId,\"] Can't publish low stream when stream already publish\"));const o=[{track:t.getLowVideoTrack(r.track,e),type:hO.LocalVideoLowTrack}];if(yield*zI(_B(t.doPublish(t.connection,o))),r.track.muted||!r.track.enabled){var n;const e=null===(n=t.localTrackMap.get(hO.LocalVideoLowTrack))||void 0===n?void 0:n.id;void 0!==e&&(yield qI(t.connection.muteLocal([e])))}}finally{i()}}))()}async republish(){this.pendingLocalTracks.length>0&&(fb.debug(\"[\".concat(this.store.clientId,\"] Emit P2PChannelEvents.RequestRePublish to republish tracks.\")),await Zy(this,_O.RequestRePublish,this.pendingLocalTracks),this.emit(_O.MediaReconnectEnd,this.store.uid),this.pendingLocalTracks=[]),this.pendingLocalDataChannels.length>0&&(fb.debug(\"Emit P2PChannelEvents.RequestRePublishDataChannel to republish datachannels.\"),await Zy(this,_O.RequestRePublishDataChannel,this.pendingLocalDataChannels),this.pendingLocalDataChannels=[])}async reSubscribe(e){for(let e=this.pendingRemoteTracks.length-1;e>=0;e--){const{user:t,kind:i}=this.pendingRemoteTracks[e];(i!==dO.AUDIO||t._audio_added_&&t._audioSSRC)&&(i!==dO.VIDEO||t._video_added_&&t._videoSSRC)||this.pendingRemoteTracks.splice(e,1)}if(e)await Zy(this,_O.RequestReSubscribe,this.pendingRemoteTracks);else for(const{user:e,kind:t}of this.pendingRemoteTracks)await this.subscribe(e,t,t===dO.VIDEO?e._videoSSRC:e._audioSSRC);this.pendingRemoteTracks.forEach((e=>{let{user:t}=e;this.emit(_O.MediaReconnectEnd,t.uid)})),this.pendingRemoteTracks=[]}async unpublish(e){if(!this.connection||this.state!==pO.Connected)return void e.forEach((e=>{const t=this.pendingLocalTracks.indexOf(e);-1!==t&&this.pendingLocalTracks.splice(t,1)}));const t=this.filterTobeUnpublishedTracks(e);if(0===t.length)return;const i=t.find((e=>\"videoLowTrack\"===e[0]));if(i){i[1].track.close()}return this.doUnpublish(this.connection,t)}async unpublishDataChannel(e){if(!this.connection||this.state!==pO.Connected)return void e.forEach((e=>{const t=this.pendingLocalDataChannels.indexOf(e);-1!==t&&this.pendingLocalDataChannels.splice(t,1)}));const t=this.filterTobeUnpublishedDataChannels(e);return 0!==t.length?(t.forEach((e=>{const t=this.localDataChannels.indexOf(e);-1!==t&&this.localDataChannels.splice(t,1)})),0===this.localDataChannels.length&&await this.connection.stopDataChannels(this.store.uid),t.map((e=>e.id))):void 0}async unpublishLowStream(){if(!this.connection||this.state!==pO.Connected)return;const e=this.localTrackMap.get(hO.LocalVideoLowTrack);if(!e)return;e.track.close();const t=[[hO.LocalVideoLowTrack,e]];return this.doUnpublish(this.connection,t)}async doUnpublish(e,t){const i=this.createGatewayUnpublishMessage(t);return await e.stopSending(t.map((e=>{let[,{id:t}]=e;return t}))),this.withdrawLocalTracks(t),this.unbindLocalTrackEvents(t.map((e=>{let[t,{track:i}]=e;return{type:t,track:i}}))),t.forEach((e=>{let[t]=e;this.statsCollector.removeLocalStats(t)})),0===this.localTrackMap.size&&this.statsUploader.stopUploadOutboundStats(),i}async subscribeDataChannel(e,t){if(!this.connection||this.state!==pO.Connected)throw new Cy(Ry.INVALID_OPERATION,\"Cannot subscribe remote user when peerConnection disconnected.\");const i=t.filter((t=>{var i;return!(null!==(i=this.remoteDataChannelMap.get(e))&&void 0!==i&&i.get(t.id))}));if(0!==i.length)return await this.connection.createDataChannels(e.uid,i),i.forEach((t=>{var i;this.remoteDataChannelMap.has(e)?null===(i=this.remoteDataChannelMap.get(e))||void 0===i||i.set(t.id,t):this.remoteDataChannelMap.set(e,new Map([[t.id,t]]));const n=this.pendingRemoteDataChannels.findIndex((i=>{let{user:n,id:r}=i;return n.uid===e.uid&&r===t.id}));-1!==n&&this.pendingRemoteDataChannels.splice(n,1)})),i.map((e=>e.id))}async subscribe(e,t,i,n,r){var o;if(!this.connection||this.state!==pO.Connected)throw new Cy(Ry.INVALID_OPERATION,\"Cannot subscribe remote user when peerConnection disconnected.\");if(null!==(o=this.remoteUserMap.get(e))&&void 0!==o&&o.has(t))return;let s,a,c;const d=this.connection.getPreMedia(i);if(d)fb.debug(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] preSSRCMap has ssrcId: \").concat(i,\", no need to send sub to gateway.\")),c=d.transceiver,s=d.track,a=d.id;else if(r){const i=r.find((e=>{let{stream_type:i}=e;return i===t}));if(!i)throw new Cy(Ry.UNEXPECTED_ERROR,\"Cannot subscribe to remote \".concat(t,\" for user: \").concat(e.uid,\" because subscribe answer from gateway does not contain stream_type: \").concat(t,\".\"));const n=await this.connection.receive(t,i.ssrcs,String(e._uintid),i.attributes);this.connection instanceof dB&&(c=n.transceiver),s=n.track,a=n.id}else{const r=await this.connection.receive(t,[{ssrcId:i,rtx:n}],String(e._uintid),void 0);this.connection instanceof dB&&(c=r.transceiver),s=r.track,a=r.id}t===dO.AUDIO?(e._audioTrack?e._audioTrack._updateOriginMediaStreamTrack(s):(e._audioTrack=new vU(s,e.uid,e._uintid,this.store),fb.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote audio track: \").concat(e._audioTrack.getTrackId()))),c&&e._audioTrack._updateRtpTransceiver(c),this.bindRemoteTrackEvents(e,e._audioTrack)):(e._videoTrack?e._videoTrack._updateOriginMediaStreamTrack(s):(e._videoTrack=new IU(s,e.uid,e._uintid,this.store),fb.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote video track: \").concat(e._videoTrack.getTrackId()))),c&&e._videoTrack._updateRtpTransceiver(c),this.bindRemoteTrackEvents(e,e._videoTrack)),XA(\"ENABLE_VIDEO_SEI\")&&c&&(t==dO.VIDEO?await async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!ZP().supportWebRTCEncodedTransform)return void fb.warning(\"browser not support video encoded transform\");if(!e.track)return;if(MU.has(e)){const i=MU.get(e);return void(i&&(i.onSei=t.onSei))}const i={track:e.track,onSei:t.onSei};if(Jv()){if(!e.createEncodedStreams)return void fb.warning(\"browser not support createEncodedStreams() API\");let t=null;try{t=e.createEncodedStreams()}catch(e){return void fb.error(\"create video-encoded-streams error\",e&&e.message)}const r=new TransformStream({transform(t,r){i.controller||(i.controller=r),e.track&&e.track.id!==i.track.id&&(fb.debug(\"video track changed: \".concat(i.track.id,\" => \").concat(e.track.id)),i.track.removeEventListener(\"ended\",n),i.track=e.track,i.track.addEventListener(\"ended\",n));const o=function(e){const t=new DataView(e.data);let i=0;for(;i+4<e.data.byteLength;){if(0===t.getUint8(i+0)&&0===t.getUint8(i+1)&&0===t.getUint8(i+2)&&1===t.getUint8(i+3)&&6===t.getUint8(i+4)){let n=i+6,r=0,o=0;for(;255===(o=t.getUint8(n++));)r+=255;r+=o;const s=PU(e.data,n,r);return new Uint8Array(s)}i++}return null}(t);o&&i.onSei&&i.onSei(o),r.enqueue(t)}});t.readable.pipeThrough(r).pipeTo(t.writable)}else if(Xv()){if(\"undefined\"==typeof RTCRtpScriptTransform)return void fb.warning(\"browser not support RTCRtpScriptTransform\");const t=OU(),r=new MessageChannel;await new Gh((e=>t.onmessage=t=>{\"registered\"===t.data&&e(void 0)}));const o=new RTCRtpScriptTransform(t,{name:\"rx\",port:r.port2},[r.port2]);e.transform=o,await new Gh((e=>t.onmessage=t=>{\"started\"===t.data&&e(void 0)})),r.port1.onmessage=t=>{var r;t.data.transformed&&e.track&&(null===(r=e.track)||void 0===r?void 0:r.id)!==i.track.id?(fb.debug(\"video track changed: \".concat(i.track.id,\" => \").concat(e.track.id)),i.track.removeEventListener(\"ended\",n),i.track=e.track,i.track.addEventListener(\"ended\",n)):t.data.sei&&i.onSei&&i.onSei(t.data.sei)},i.worker=t}function n(){if(e.track){if(this.id!==e.track.id)return;e.track.removeEventListener(\"ended\",n)}!function(e){const t=MU.get(e);if(t){MU.delete(e);try{var i,n;null===(i=t.controller)||void 0===i||i.terminate(),null===(n=t.worker)||void 0===n||n.terminate()}catch(e){fb.warning(e&&e.message)}}}(e)}MU.set(e,i),e.track.addEventListener(\"ended\",n)}(c.receiver,{onSei:t=>{var i;null===(i=e._videoTrack)||void 0===i||i._onSei(t)}}):t==dO.AUDIO&&await async function(e){if(!ZP().supportWebRTCEncodedTransform)return void fb.warning(\"browser not support audio encoded transform\");if(DU.has(e))return;const t={track:e.track};if(Jv()){if(!e.createEncodedStreams)return void fb.warning(\"browser not support createEncodedStreams() API\");let n=null;try{n=e.createEncodedStreams()}catch(e){return void fb.error(\"create audio-encoded-streams error\",e&&e.message)}const r=new TransformStream({transform(n,r){t.controller||(t.controller=r),e.track&&e.track.id!==t.track.id&&(fb.debug(\"audio track changed: \".concat(t.track.id,\" => \").concat(e.track.id)),t.track.removeEventListener(\"ended\",i),t.track=e.track,t.track.addEventListener(\"ended\",i)),r.enqueue(n)}});n.readable.pipeThrough(r).pipeTo(n.writable)}else if(Xv()){if(\"undefined\"==typeof RTCRtpScriptTransform)return void fb.warning(\"browser not support RTCRtpScriptTransform\");const n=OU(),r=new MessageChannel;await new Gh((e=>n.onmessage=t=>{\"registered\"===t.data&&e(void 0)}));const o=new RTCRtpScriptTransform(n,{name:\"rx\",port:r.port2},[r.port2]);e.transform=o,await new Gh((e=>n.onmessage=t=>{\"started\"===t.data&&e(void 0)})),r.port1.onmessage=n=>{var r;n.data.transformed&&e.track&&(null===(r=e.track)||void 0===r?void 0:r.id)!==t.track.id&&(fb.debug(\"audio track changed: \".concat(t.track.id,\" => \").concat(e.track.id)),t.track.removeEventListener(\"ended\",i),t.track=e.track,t.track.addEventListener(\"ended\",i))},t.worker=n}function i(){e.track.removeEventListener(\"ended\",i),function(e){const t=DU.get(e);if(t){DU.delete(e);try{var i,n;null===(i=t.controller)||void 0===i||i.terminate(),null===(n=t.worker)||void 0===n||n.terminate()}catch(e){fb.warning(e&&e.message)}}}(e)}DU.set(e,t),e.track.addEventListener(\"ended\",i)}(c.receiver));const l=this.remoteUserMap.get(e);l?l.set(t,a):this.remoteUserMap.set(e,new Map([[t,a]])),this.statsCollector.addRemoteStats(e.uid),this.statsUploader.startUploadInboundStats();const u=this.pendingRemoteTracks.findIndex((i=>{let{user:n,kind:r}=i;return n.uid===e.uid&&t===r}));-1!==u&&(this.pendingRemoteTracks.splice(u,1),this.emit(_O.MediaReconnectEnd,e.uid))}async massSubscribe(e){return this.massSubscribeNoLock(e)}async massSubscribeNoLock(e){if(!this.connection||this.state!==pO.Connected)throw new Cy(Ry.INVALID_OPERATION,\"Cannot subscribeAll remote users when peerConnection disconnected.\");e=e.filter((e=>{var t;let{user:i,mediaType:n}=e;return!(null!==(t=this.remoteUserMap.get(i))&&void 0!==t&&t.has(n))}));const t=[],i=new Map;e.forEach((e=>{if(!this.connection)return;const n=this.connection.getPreMedia(e.ssrcId);n?i.set(e.ssrcId,n):t.push(e)}));const n=await this.connection.batchReceive(t.map((e=>{let{user:t,mediaType:i,ssrcId:n,rtxSsrcId:r}=e;return{kind:i,ssrcMsg:[{ssrcId:n,rtx:r}],mslabel:String(t._uintid)}})));t.forEach(((e,t)=>{i.set(e.ssrcId,n[t])})),e.forEach((e=>{let{user:t,mediaType:n,ssrcId:r}=e;const o=i.get(r);if(!o)return void fb.debug(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] cannot find \").concat(t.uid,\" subscribe data,\").concat(n,\", \").concat(r));const{track:s,id:a,transceiver:c}=o;n===dO.AUDIO?(t._audioTrack?t._audioTrack._updateOriginMediaStreamTrack(s):(t._audioTrack=new vU(s,t.uid,t._uintid,this.store),fb.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote audio track: \").concat(t._audioTrack.getTrackId()))),c&&t._audioTrack._updateRtpTransceiver(c),this.bindRemoteTrackEvents(t,t._audioTrack)):(t._videoTrack?t._videoTrack._updateOriginMediaStreamTrack(s):(t._videoTrack=new IU(s,t.uid,t._uintid,this.store),fb.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote video track: \").concat(t._videoTrack.getTrackId()))),c&&t._videoTrack._updateRtpTransceiver(c),this.bindRemoteTrackEvents(t,t._videoTrack));const d=this.remoteUserMap.get(t);d?d.set(n,a):this.remoteUserMap.set(t,new Map([[n,a]])),this.statsCollector.addRemoteStats(t.uid),this.statsUploader.startUploadInboundStats();const l=this.pendingRemoteTracks.findIndex((e=>{let{user:i,kind:r}=e;return i.uid===t.uid&&n===r}));-1!==l&&(this.pendingRemoteTracks.splice(l,1),this.emit(_O.MediaReconnectEnd,t.uid))}))}async unsubscribe(e,t,i){const n=this.pendingRemoteTracks.filter((i=>{let{user:n,kind:r}=i;return void 0!==t?n.uid===e.uid&&t===r:n.uid===e.uid}));if(n.forEach((e=>{const t=this.pendingRemoteTracks.indexOf(e);this.pendingRemoteTracks.splice(t,1)})),this.connection&&this.state===pO.Connected||i||n.forEach((t=>{let{kind:i}=t;var n;if(i===dO.AUDIO)null===(n=e._audioTrack)||void 0===n||n._destroy(),e._audioTrack=void 0;else if(i===dO.VIDEO){var r;null===(r=e._videoTrack)||void 0===r||r._destroy(),e._videoTrack=void 0}})),!this.connection||this.state!==pO.Connected)return;const r=this.filterTobeUnSubscribedTracks(e,t);if(0===r.length)return;await this.connection.stopReceiving(r.map((e=>{let[,{id:t}]=e;return t})));const o=this.createUnsubscribeMessage(r);return this.withdrawRemoteTracks(r),0===this.remoteUserMap.size&&this.statsUploader.stopUploadInboundStats(),r.forEach((e=>{let[t,{kind:n}]=e;var r,o;n===dO.VIDEO&&t._videoSSRC&&(null===(r=this.connection)||void 0===r||r.setStatsRemoteVideoIsReady(t._videoSSRC,!1));if(n===dO.VIDEO)this.unbindRemoteTrackEvents(t._videoTrack),i||(null===(o=t._videoTrack)||void 0===o||o._destroy(),t._videoTrack=void 0);else if(n===dO.AUDIO){var s;if(this.unbindRemoteTrackEvents(t._audioTrack),!i)null===(s=t._audioTrack)||void 0===s||s._destroy(),t._audioTrack=void 0}})),o}async unsubscribeDataChannel(e,t){if(t.forEach((e=>{const t=this.pendingRemoteDataChannels.findIndex((t=>t.id===e.id));-1!==t&&this.pendingRemoteDataChannels.splice(t,1)})),!this.connection)return;const i=this.filterTobeUnSubscribedDataChannels(e,t);if(0===i.length)return;t.forEach((e=>{e._close()}));const n=this.remoteDataChannelMap.get(e);return i.forEach((e=>{n&&n.delete(e.id)})),n&&0===n.size&&(this.remoteDataChannelMap.delete(e),await this.connection.stopDataChannels(e.uid)),i.map((e=>e.id))}async massUnsubscribe(e){return this.massUnsubscribeNoLock(e)}async massUnsubscribeNoLock(e){let t=[];for(const{user:i,mediaType:n}of e){const e=this.pendingRemoteTracks.filter((e=>{let{user:t,kind:r}=e;return void 0!==n?t.uid===i.uid&&n===r:t.uid===i.uid}));e.forEach((e=>{const t=this.pendingRemoteTracks.indexOf(e);this.pendingRemoteTracks.splice(t,1)})),t=t.concat(e)}if(!this.connection||this.state!==pO.Connected)return void t.forEach((e=>{let{user:t,kind:i}=e;var n;if(i===dO.AUDIO)null===(n=t._audioTrack)||void 0===n||n._destroy(),t._audioTrack=void 0;else if(i===dO.VIDEO){var r;null===(r=t._videoTrack)||void 0===r||r._destroy(),t._videoTrack=void 0}}));const i=Jn(e).call(e,((e,t)=>{let{user:i,mediaType:n}=t;const r=this.filterTobeUnSubscribedTracks(i,n);return e.concat(r)}),[]);if(0===i.length)return;await this.connection.stopReceiving(i.map((e=>{let[,{id:t}]=e;return t})));const n=this.createUnsubscribeAllMessage(i);return this.withdrawRemoteTracks(i),0===this.remoteUserMap.size&&this.statsUploader.stopUploadInboundStats(),i.forEach((e=>{let[t,{kind:i}]=e;var n,r;i===dO.VIDEO&&t._videoSSRC&&(null===(n=this.connection)||void 0===n||n.setStatsRemoteVideoIsReady(t._videoSSRC,!1));if(i===dO.VIDEO)this.unbindRemoteTrackEvents(t._videoTrack),null===(r=t._videoTrack)||void 0===r||r._destroy(),t._videoTrack=void 0;else if(i===dO.AUDIO){var o;this.unbindRemoteTrackEvents(t._audioTrack),null===(o=t._audioTrack)||void 0===o||o._destroy(),t._audioTrack=void 0}})),n}isPreSubScribe(e){if(!this.connection||this.state!==pO.Connected)return!1;return!!this.connection.getPreMedia(e)}async muteRemote(e,t){if(!this.connection)return;const i=this.remoteUserMap.get(e);if(!i)return void fb.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.muteRemote has no remote user \").concat(e.uid,\".\"));if(!i.get(t))return void fb.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.muteRemote has no remote user \").concat(e.uid,\" media type \").concat(t,\".\"));const n=t===dO.VIDEO?e._videoSSRC:e._audioSSRC;void 0!==n&&this.connection.setStatsRemoteVideoIsReady(n,!1)}async unmuteRemote(e,t){return this.unmuteRemoteNoLock(e,t)}async unmuteRemoteNoLock(e,t){if(!this.connection)return;const i=this.remoteUserMap.get(e);if(!i)return void fb.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.unmuteRemote has no remote user \").concat(e.uid,\".\"));i.get(t)||fb.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.unmuteRemote has no remote user \").concat(e.uid,\" media type \").concat(t,\".\"))}getAllTracks(e){const t=this.localTrackMap.get(hO.LocalAudioTrack);if((null==t?void 0:t.track)instanceof RM){const i=t.track;return Array.from(this.localTrackMap.entries()).filter((e=>{let[t]=e;return t!==hO.LocalAudioTrack})).filter((t=>{let[i]=t;return!(e&&i===hO.LocalVideoLowTrack)})).map((e=>{let[,{track:t}]=e;return t})).concat(i.trackList)}return Array.from(this.localTrackMap.entries()).filter((t=>{let[i]=t;return!(e&&i===hO.LocalVideoLowTrack)})).map((e=>{let[,{track:t}]=e;return t}))}getAllDataChannels(){return this.localDataChannels}reportPublishEvent(e,t,i,n,r){if(e){const i=this.localTrackMap.get(hO.LocalAudioTrack),o=n?this.localTrackMap.get(hO.LocalVideoLowTrack):this.localTrackMap.get(hO.LocalVideoTrack);vb.publish(this.store.sessionId,{eventElapse:rV.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==i?void 0:i.track.getTrackLabel(),videoName:null==o?void 0:o.track.getTrackLabel(),screenshare:-1!==(null==o?void 0:o.track._hints.indexOf(mL.SCREEN_TRACK)),audio:!!i,video:!!o,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:r})}else{var o;i||(i=[]);const s=i.find((e=>e instanceof TM)),a=n?null===(o=this.localTrackMap.get(hO.LocalVideoTrack))||void 0===o?void 0:o.track:i.find((e=>e instanceof aU));vb.publish(this.store.sessionId,{eventElapse:rV.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==s?void 0:s.getTrackLabel(),videoName:null==a?void 0:a.getTrackLabel(),screenshare:-1!==(null==a?void 0:a._hints.indexOf(mL.SCREEN_TRACK)),audio:!!s,video:!!a,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:r})}}reportSubscribeEvent(e,t,i,n){const r=n===dO.VIDEO?i._videoSSRC:i._audioSSRC;r&&vb.subscribe(this.store.sessionId,{succ:e,ec:t,video:n===dO.VIDEO,audio:n===dO.AUDIO,peerid:i.uid,subscribeRequestid:r,p2pid:this.store.p2pId,eventElapse:rV.measureFromSubscribeStart(this.store.clientId,r),preSsrc:this.isPreSubScribe(r)})}reset(){fb.debug(\"[\".concat(this.store.clientId,\"] P2PChannel.reset\")),this.mutex=new NA(\"P2PChannel-mutex\"),this.connection&&(this.connection.close(),this.unbindConnectionEvents(this.connection),this.connection=void 0),this.shouldForwardP2PCreation&&(this.connection=this.isPlanB?new FF({},this.store):new dB({},this.store),this.bindConnectionEvents(this.connection)),this.statsUploader.stopUploadOutboundStats(),this.statsUploader.stopUploadInboundStats(),this.statsUploader.stopUploadTransportStats(),this.statsUploader.stopUploadExtensionUsageStats(),this.unbindLocalTrackEvents(),this.unbindAllRemoteTrackEvents(),this.unbindRtpTransceiver();const e=this.localTrackMap.get(hO.LocalAudioTrack);if((null==e?void 0:e.track)instanceof RM){if(e.track.trackList.length>0){const t=e.track;e.track.trackList.forEach((e=>{t.removeAudioTrack(e)}))}e.track.close()}this.localTrackMap.clear(),this.remoteUserMap.clear(),this.statsCollector.removeRemoteStats(),this.statsCollector.removeLocalStats(),this.iceFailedCount=0,this.dtlsFailedCount=0,this.pendingLocalTracks=[],this.pendingRemoteTracks=[],this.localDataChannels=[],this.remoteDataChannelMap.clear(),this.pendingLocalDataChannels=[],this.pendingRemoteDataChannels=[],this.state=pO.Disconnected}getStats(){var e;return null===(e=this.connection)||void 0===e?void 0:e.getStats()}getRemoteVideoIsReady(e){var t;return(null===(t=this.connection)||void 0===t?void 0:t.getRemoteVideoIsReady(e))||!1}getLocalAudioVolume(){const e=this.localTrackMap.get(hO.LocalAudioTrack);if(e)return e.track.getVolumeLevel()}getLocalVideoSize(){const e=this.localTrackMap.get(hO.LocalVideoTrack);if(e)return{width:e.track.videoWidth||0,height:e.track.videoHeight||0}}getEncoderConfig(e){const t=this.localTrackMap.get(e);return t&&t.track instanceof aU||t&&t.track instanceof TM?t.track._encoderConfig:void 0}getLocalMedia(e){return this.localTrackMap.get(e)}hasLocalMedia(){return this.localTrackMap.size>0}hasRemoteMedia(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}async hasRemoteMediaWithLock(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}getRemoteMedia(e){var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t.uid===e));return i?{audioTrack:i.audioTrack,audioSSRC:i._audioSSRC,videoTrack:i.videoTrack,videoSSRC:i._videoSSRC}:{}}getAudioLevels(){let e=Array.from(this.remoteUserMap.entries()).map((e=>{let[t]=e;return{uid:t.uid,level:t.audioTrack?100*t.audioTrack._source.getAccurateVolumeLevel():0}}));const t=this.localTrackMap.get(hO.LocalAudioTrack);return t&&e.push({level:100*t.track._source.getAccurateVolumeLevel(),uid:this.store.uid}),e=aE(e).call(e,((e,t)=>e.level-t.level)),e}async disconnectForReconnect(){this.connection&&(fb.debug(\"[\".concat(this.store.clientId,\"] P2PChannel.disconnectForReconnect closing P2PConnection\")),this.state=pO.Reconnecting,XA(\"KEEP_LAST_FRAME\")&&0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t]=e;var i;t._videoTrack&&t._videoTrack._player&&(null===(i=t._videoTrack._player.getVideoElement())||void 0===i||i.pause(),t._videoTrack._player.isKeepLastFrame=!0,t._videoTrack._originMediaStreamTrack.stop())})),this.connection.close(),this.unbindConnectionEvents(this.connection),this.connection=void 0,this.shouldForwardP2PCreation&&(this.connection=this.isPlanB?new FF({},this.store):new dB({},this.store),this.bindConnectionEvents(this.connection)),0!==this.localTrackMap.size&&(Array.from(this.localTrackMap.entries()).forEach((e=>{var t;let[i,{track:n}]=e;switch(i){case hO.LocalVideoTrack:Dn(t=n._hints).call(t,mL.LOW_STREAM)?n.close():this.pendingLocalTracks.push(n);break;case hO.LocalAudioTrack:n instanceof RM?this.pendingLocalTracks=this.pendingLocalTracks.concat(n.trackList):this.pendingLocalTracks.push(n);case hO.LocalVideoLowTrack:}})),this.emit(_O.MediaReconnectStart,this.store.uid)),this.unbindLocalTrackEvents(),this.localTrackMap.clear(),0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t,i]=e;Array.from(d_(i).call(i)).forEach((e=>{this.setPendingRemoteMedia(t,e)})),this.emit(_O.MediaReconnectStart,t.uid)})),this.unbindAllRemoteTrackEvents(),this.remoteUserMap.clear(),0!==this.localDataChannels.length&&(this.localDataChannels.forEach((e=>{this.pendingLocalDataChannels.push(e)})),this.localDataChannels.length=0),0!==this.remoteDataChannelMap.size&&(Array.from(this.remoteDataChannelMap.entries()).forEach((e=>{let[t,i]=e;Array.from(d_(i).call(i)).forEach((e=>{this.setPendingRemoteDataChannel(t,e)}))})),this.remoteDataChannelMap.clear()),this.statsUploader.stopUploadOutboundStats(),this.statsUploader.stopUploadInboundStats(),this.statsUploader.stopUploadTransportStats(),fb.debug(\"[\".concat(this.store.clientId,\"] P2PChannel disconnected, waiting to reconnect.\")))}hasPendingRemoteDataChannel(e,t){for(const i of this.pendingRemoteDataChannels){const{user:n,id:r}=i;if((e instanceof cF?e.uid:e)===n.uid&&r===t)return!0}return!1}setPendingRemoteDataChannel(e,t){this.hasPendingRemoteDataChannel(e,t)||this.pendingRemoteDataChannels.push({user:e,id:t})}hasPendingRemoteMedia(e,t){for(const i of this.pendingRemoteTracks){const{user:n,kind:r}=i;if((e instanceof cF?e.uid:e)===n.uid&&t===r)return!0}return!1}setPendingRemoteMedia(e,t){this.hasPendingRemoteMedia(e,t)||this.pendingRemoteTracks.push({user:e,kind:t})}restartICE(e){var t=this;return YI((function*(){if(!t.connection||t.state!==pO.Connected)return;const i=yield qI(t.mutex.lock(\"From P2PChannel.restartICE\"));let n;try{n=yield qI(t.connection.restartICE(e));const r=yield qI(n.next());if(r.done)return;const o=r.value,s=yield o;switch(t.reportPCDisconnectedOrFailed(e),e){case lO.TCP:t._pcStatsUploadType=uO.TCP_RESTART;break;case lO.RELAY:t._pcStatsUploadType=uO.RELAY_RESTART;break;default:t._pcStatsUploadType=uO.OLD_RESTART}t._isInRestartIce=!0,n.next(s)}catch(e){var r;null===(r=n)||void 0===r||r.throw(e)}finally{i()}}))()}getUplinkNetworkQuality(){if(!this.connection)return 0;const e=this.connection.getStats(),t=this.localTrackMap.get(hO.LocalVideoTrack),i=this.localTrackMap.get(hO.LocalAudioTrack),n=e.videoSend.find((e=>e.ssrc===(null==t?void 0:t.ssrcs[0].ssrcId))),r=e.audioSend.find((e=>e.ssrc===(null==i?void 0:i.ssrcs[0].ssrcId)));if(!n||!r)return 1;const o=eA(this,_O.NeedSignalRTT),s=n?n.rttMs:void 0,a=r?r.rttMs:void 0,c=s&&a?(s+a)/2:s||a,d=(c&&o?(c+o)/2:c||o)||0,l=100*e.sendPacketLossRate*.7/50+.3*d/1500,u=l<.17?1:l<.36?2:l<.59?3:l<.1?4:5,h=null==t?void 0:t.track;if(h&&h._encoderConfig&&-1===h._hints.indexOf(mL.SCREEN_TRACK)){const t=h._encoderConfig.bitrateMax,i=e.bitrate.actualEncoded;if(t&&i){const e=(1e3*t-i)/(1e3*t);return bb[e<.15?0:e<.3?1:e<.45?2:e<.6?3:4][u]}}return u}getDownlinkNetworkQuality(){if(!this.connection)return 0;const e=this.connection.getStats();let t=0;return Array.from(this.remoteUserMap.entries()).forEach((i=>{let[n]=i;const r=n._audioSSRC,o=n._videoSSRC,s=e.audioRecv.find((e=>e.ssrc===r)),a=e.videoRecv.find((e=>e.ssrc===o));if(!s&&!a)return void(t+=1);const c=eA(this,_O.NeedSignalRTT),d=e.rtt,l=(d&&c?(d+c)/2:d||c)||0,u=s?s.jitterMs:void 0,h=e.recvPacketLossRate;let p=.7*h*100/50+.3*l/1500;u&&(p=.6*h*100/50+.2*l/1500+.2*u/400);t+=p<.1?1:p<.17?2:p<.36?3:p<.59?4:5})),this.remoteUserMap.size>0?Math.round(t/this.remoteUserMap.size):t}async muteLocalTrack(e){return new Gh(((t,i)=>{this.handleMuteLocalTrack(e,t,i)}))}async replaceTrack(e,t){var i;if(fb.debug(\"[\".concat(this.store.clientId,\"] P2PChannel replaceTrack from [\").concat(e.getTrackId(),\"] to [\").concat(t.getTrackId(),\"]\")),!this.connection||this.state!==pO.Connected)return;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(!n)return;const r=n[0];if(e!==t&&(this.unbindLocalTrackEvents([{track:e,type:r}]),this.bindLocalTrackEvents([{track:t,type:r}]),n[1].track=t),await(null===(i=this.connection)||void 0===i?void 0:i.replaceTrack(t,n[1].id)),this.isPlanB){const e=n[1];e.id=t._mediaStreamTrack.id,this.localTrackMap.set(r,e)}if(r===hO.LocalVideoTrack&&!XA(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&ZP().supportDualStreamEncoding){const t=this.localTrackMap.get(hO.LocalVideoLowTrack);if(t){const i=e._mediaStreamTrack.clone();t.track._originMediaStreamTrack.stop(),t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i,await new Gh(((e,i)=>{this.handleReplaceTrack(t.track,e,i,!0)}))}}}filterTobePublishedTracks(e,t,i){const n=[],r=this.getAllTracks();e=rA(e=e.filter((e=>-1===r.indexOf(e))));let o,s=!1;const a=this.localTrackMap.get(hO.LocalAudioTrack);for(const r of e){if(r instanceof aU&&(this.localTrackMap.has(hO.LocalVideoTrack)||s?new Cy(Ry.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS).throw():(n.push({track:r,type:hO.LocalVideoTrack}),s=!0),t)){const e=this.getLowVideoTrack(r,i);n.push({track:e,type:hO.LocalVideoLowTrack})}if(r instanceof TM)if(a){const e=a.track;if(e instanceof RM)uF([r]),e.addAudioTrack(r),this.bindLocalAudioTrackEvents(r,!0);else{const t=hF([e,r]);fb.debug(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection will replace audioTrack [\").concat(t.getTrackId(),\"]\")),this.replaceTrack(e,t)}}else if(o instanceof RM)uF([r]),o.addAudioTrack(r);else if(o||!r._useAudioElement&&ZP().webAudioMediaStreamDest&&!r._bypassWebAudio){o=hF(o?[r,o]:[r])}else o=r}return o&&(fb.debug(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection will send audioTrack [\").concat(o.getTrackId(),\"]\")),n.push({track:o,type:hO.LocalAudioTrack})),n}filterTobeUnpublishedTracks(e){const t=[],i=this.getAllTracks();e=rA(e=e.filter((e=>-1!==i.indexOf(e))));for(const i of e){if(i instanceof TM){const e=this.localTrackMap.get(hO.LocalAudioTrack);if(!e)continue;e.track instanceof RM?(e.track.removeAudioTrack(i),this.unbindLocalAudioTrackEvents(i),0===e.track.trackList.length&&(t.push([hO.LocalAudioTrack,e]),e.track.close())):t.push([hO.LocalAudioTrack,e])}if(i instanceof aU){const e=this.localTrackMap.get(hO.LocalVideoTrack);if(!e)continue;t.push([hO.LocalVideoTrack,e]);const i=this.localTrackMap.get(hO.LocalVideoLowTrack);i&&t.push([hO.LocalVideoLowTrack,i])}}return t}filterTobePublishedDataChannels(e){return e=(e=rA(e)).filter((e=>-1===this.localDataChannels.findIndex((t=>t.id===e.id))))}filterTobeUnpublishedDataChannels(e){return e=(e=(e=rA(e)).filter((e=>-1!==this.localDataChannels.indexOf(e)))).filter((e=>e._originDataChannel))}bindLocalTrackEvents(e){e.forEach((e=>{let{track:t,type:i}=e;switch(i){case hO.LocalVideoTrack:t.addListener(fL.GET_STATS,this.handleGetLocalVideoStats),t.addListener(fL.GET_RTC_STATS,this.handleGetRTCStats),t.addListener(fL.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.addListener(fL.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.addListener(fL.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.addListener(fL.NEED_UPDATE_VIDEO_SEND_PARAMETERS,this.handleUpdateVideoSendParameters),t.addListener(fL.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.addListener(fL.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.addListener(fL.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case hO.LocalAudioTrack:this.bindLocalAudioTrackEvents(t);case hO.LocalVideoLowTrack:}}))}bindLocalAudioTrackEvents(e,t){e instanceof RM?e.trackList.forEach((e=>{e.addListener(fL.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener(fL.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener(fL.GET_STATS,this.handleGetLocalAudioStats),e.addListener(fL.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener(fL.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)})):(e.addListener(fL.GET_STATS,this.handleGetLocalAudioStats),e.addListener(fL.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener(fL.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener(fL.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener(fL.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack),t||(e.addListener(fL.NEED_REPLACE_TRACK,this.handleReplaceTrack),e.addListener(fL.NEED_REPLACE_MIXING_TRACK,this.handleReplaceMixingTrack)))}unbindLocalTrackEvents(e){e||(e=Array.from(this.localTrackMap.entries()).map((e=>{let[t,{track:i}]=e;return{track:i,type:t}}))),e.forEach((e=>{let{track:t,type:i}=e;switch(i){case hO.LocalVideoTrack:t.off(fL.GET_STATS,this.handleGetLocalVideoStats),t.off(fL.GET_RTC_STATS,this.handleGetRTCStats),t.off(fL.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.off(fL.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.off(fL.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.off(fL.NEED_UPDATE_VIDEO_SEND_PARAMETERS,this.handleUpdateVideoSendParameters),t.off(fL.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.off(fL.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.off(fL.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case hO.LocalAudioTrack:this.unbindLocalAudioTrackEvents(t);case hO.LocalVideoLowTrack:}}))}unbindLocalAudioTrackEvents(e){e instanceof RM?e.trackList.forEach((e=>{e.off(fL.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off(fL.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off(fL.GET_STATS,this.handleGetLocalAudioStats),e.off(fL.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off(fL.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)})):(e.off(fL.GET_STATS,this.handleGetLocalAudioStats),e.off(fL.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off(fL.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off(fL.NEED_REPLACE_TRACK,this.handleReplaceTrack),e.off(fL.NEED_REPLACE_MIXING_TRACK,this.handleReplaceMixingTrack),e.off(fL.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off(fL.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack))}bindRemoteTrackEvents(e,t){t instanceof IU&&t.addListener(fL.GET_STATS,(t=>{t(this.handleGetRemoteVideoStats(e))})),t instanceof vU&&t.addListener(fL.GET_STATS,(t=>{t(this.handleGetRemoteAudioStats(e))}))}unbindRemoteTrackEvents(e){e&&e.removeAllListeners(fL.GET_STATS)}unbindAllRemoteTrackEvents(){Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t,i]=e;i.has(dO.AUDIO)&&this.unbindRemoteTrackEvents(t._audioTrack),i.has(dO.VIDEO)&&this.unbindRemoteTrackEvents(t._videoTrack)}))}createGatewayPublishMessage(e,t){return e.map(((e,i)=>{var n;let r,o,{track:s,type:a}=e;switch(a){case hO.LocalAudioTrack:r=Zw.Audio,o={dtx:s instanceof SM&&s._config.DTX,hq:!1,lq:!1,stereo:!1,speech:!1};break;case hO.LocalVideoTrack:r=Dn(n=s._hints).call(n,mL.SCREEN_TRACK)?Zw.Screen:Zw.High,o=pB(pB({},ZO(s)),{},{codec:this.store.codec,svc_mode:BU()});break;case hO.LocalVideoLowTrack:r=Zw.Low,o=pB(pB({},ZO(s)),{},{codec:this.store.codec,svc_mode:BU()})}return{stream_type:r,attributes:o,ssrcs:t[i]}}))}createGatewayUnpublishMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:o,id:s}]=e;switch(n){case hO.LocalVideoTrack:i=Dn(t=r._hints).call(t,mL.SCREEN_TRACK)?Zw.Screen:Zw.High;break;case hO.LocalAudioTrack:i=Zw.Audio;break;case hO.LocalVideoLowTrack:i=Zw.Low}return{stream_type:i,ssrcs:o,mid:s}}))}assignLocalTracks(e,t){e.forEach(((e,i)=>{let{track:n,type:r}=e;this.localTrackMap.set(r,{track:n,id:t[i].id,ssrcs:t[i].localSSRC})}))}withdrawLocalTracks(e){e.forEach((e=>{let[t]=e;this.localTrackMap.delete(t)}))}bindConnectionEvents(e){e.onConnectionStateChange=async t=>{if(fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onConnectionStateChange(\").concat(t,\")\")),this.emit(_O.PeerConnectionStateChange,t),\"connected\"!==t||this.store.keyMetrics.peerConnectionEnd||this.store.peerConnectionEnd(),\"connected\"===t&&(this._restartTimer&&(clearTimeout(this._restartTimer),this._restartTimer=void 0),(this._isFirstConnected||this._isInRestartIce)&&this.reportPCStats(Date.now(),!0,this._pcStatsUploadType),this._isInRestartIce=!1,this._isFirstConnected=!1,this._isStartRestartIce=!1),XA(\"NEW_ICE_RESTART\")){var i;if(Dn(i=this._restartStates).call(i,t)){if(this._isStartRestartIce)return;this._isStartRestartIce=!0;const t=t=>{if(\"disconnected\"===e.iceConnectionState||\"checking\"===e.iceConnectionState||\"failed\"===e.iceConnectionState){fb.debug(\"[\".concat(this.store.clientId,\"] [P2PChannel] start use restartICE, type is \").concat(t));\"CONNECTED\"===eA(this,_O.QueryClientConnectionState)&&this.emit(_O.RequestRestartICE,t)}},i=()=>{\"disconnected\"!==e.iceConnectionState&&\"checking\"!==e.iceConnectionState&&\"failed\"!==e.iceConnectionState||(this.reportPCStats(Date.now(),!1,this._pcStatsUploadType),fb.debug(\"[\".concat(this.store.clientId,\"] P2PConnection disconnected timeout, force reconnect\")),setTimeout((()=>this.emit(_O.P2PLost)),0),this.iceFailedCount+=1,this.requestReconnect())},n=XA(\"ICE_RESTART_INTERVAL\");return void(this._restartTimer=window.setTimeout((()=>{if(XA(\"JOIN_WITH_FALLBACK_MEDIA_PROXY_FORCE\")&&ZP().supportPCSetConfiguration)t(lO.RELAY),this._restartTimer=window.setTimeout(i,n);else if(Zv())t(lO.UDP),this._restartTimer=window.setTimeout(i,4e3);else{if(t(lO.TCP),ZP().supportPCSetConfiguration)return void(this._restartTimer=window.setTimeout((()=>{t(lO.RELAY),this._restartTimer=window.setTimeout(i,n)}),n));this._restartTimer=window.setTimeout(i,n)}}),800))}}else{if(\"disconnected\"===t&&\"disconnected\"===e.iceConnectionState)return setTimeout((()=>{if(\"disconnected\"===e.iceConnectionState&&XA(\"ICE_RESTART\")){\"CONNECTED\"===eA(this,_O.QueryClientConnectionState)&&this.emit(_O.RequestRestartICE)}}),800),void setTimeout((()=>{\"disconnected\"===e.peerConnectionState&&(fb.debug(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection disconnected timeout 4000ms, force reconnect\")),this.reportPCStats(Date.now(),!1,this._pcStatsUploadType),this._isInRestartIce=!1,setTimeout((()=>this.emit(_O.P2PLost)),0),this.iceFailedCount+=1,this.requestReconnect())}),4e3);\"failed\"===t&&(fb.debug(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection state failed, force reconnect\")),this.reportPCDisconnectedOrFailed(),setTimeout((()=>this.emit(_O.P2PLost)),0),this.iceFailedCount+=1,await this.requestReconnect())}},e.onICEConnectionStateChange=e=>{\"connected\"!==e||this.store.keyMetrics.iceConnectionEnd||this.store.iceConnectionEnd(),fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onICEConnectionStateChange(\").concat(e,\")\")),vb.reportApiInvoke(this.store.sessionId,{name:\"ICEConnectionStateChange\",options:e,tag:jy.TRACER}).onSuccess(),this.emit(_O.IceConnectionStateChange,e)},e.onICETransportStateChange=e=>{fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onICETransportStateChange(\").concat(e,\")\"))},e.onDTLSTransportStateChange=e=>{fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportStateChange(\").concat(e,\")\"))},e.onDTLSTransportError=e=>{fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportError(\").concat(e,\")\"))},e.onFirstAudioDecoded=e=>{var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t._audioSSRC===e));var n;i&&(this.store.subscribe(i.uid,\"audio\",void 0,void 0,void 0,Date.now()),null===(n=i.audioTrack)||void 0===n||n.emit(IL.FIRST_FRAME_DECODED),vb.firstRemoteFrame(this.store.sessionId,gb.FIRST_AUDIO_DECODE,Rb.FIRST_AUDIO_DECODE,{peer:i._uintid,subscribeElapse:rV.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId}))},e.onFirstAudioReceived=e=>{var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t._audioSSRC===e));i&&vb.firstRemoteFrame(this.store.sessionId,gb.FIRST_AUDIO_RECEIVED,Rb.FIRST_AUDIO_RECEIVED,{peer:i._uintid,subscribeElapse:rV.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onFirstVideoDecoded=(e,t,i)=>{this.reportVideoFirstFrameDecoded(e,t,i)},e.onFirstVideoReceived=e=>{var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t._videoSSRC===e));i&&vb.firstRemoteFrame(this.store.sessionId,gb.FIRST_VIDEO_RECEIVED,Rb.FIRST_VIDEO_RECEIVED,{peer:i._uintid,subscribeElapse:rV.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onSelectedLocalCandidateChanged=(e,t)=>{const i=\"relay\"===e.candidateType,n=\"relay\"===t.candidateType;\"unknown\"!==t.candidateType&&i===n||this.emit(_O.ConnectionTypeChange,i),fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.SelectedLocalCandidateChanged(\").concat(JSON.stringify(nN(t)),\" -> \").concat(JSON.stringify(nN(e)),\")\"))},e.onSelectedRemoteCandidateChanged=(e,t)=>{fb.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.SelectedRemoteCandidateChanged(\").concat(JSON.stringify(nN(t)),\" -> \").concat(JSON.stringify(nN(e)),\")\"))},e.onFirstVideoDecodedTimeout=e=>{this.reportVideoFirstFrameDecoded(e,void 0,void 0,!0)},e.getLocalVideoStats=()=>{const e=this.statsCollector.getLocalVideoTrackStats(),t=this.statsCollector.getRTCStats();return pB(pB({},e),t)}}unbindConnectionEvents(e){e.onConnectionStateChange=void 0,e.onICEConnectionStateChange=void 0,e.onICETransportStateChange=void 0,e.onDTLSTransportStateChange=void 0,e.onDTLSTransportError=void 0,e.onFirstAudioDecoded=void 0,e.onFirstAudioReceived=void 0,e.onFirstVideoDecoded=void 0,e.onFirstVideoReceived=void 0,e.onSelectedLocalCandidateChanged=void 0,e.onSelectedRemoteCandidateChanged=void 0,e.onFirstVideoDecodedTimeout=void 0,e.getLocalVideoStats=void 0}filterTobeMutedTracks(e){const t=[];if(-1===this.getAllTracks().indexOf(e))return t;const i=this.localTrackMap.get(hO.LocalAudioTrack);if(e instanceof TM&&(null==i?void 0:i.track)instanceof RM)return i.track.isActive||t.push([hO.LocalAudioTrack,i]),t;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(n&&(t.push(n),n[0]===hO.LocalVideoTrack)){const e=this.localTrackMap.get(hO.LocalVideoLowTrack);e&&t.push([hO.LocalVideoLowTrack,e])}return t}filterTobeUnmutedTracks(e){const t=[],i=this.localTrackMap.get(hO.LocalAudioTrack);if(e instanceof TM&&(null==i?void 0:i.track)instanceof RM)return i.track.isActive&&t.push([hO.LocalAudioTrack,i]),t;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(n)if(n[0]===hO.LocalVideoTrack){t.push(n);const e=this.localTrackMap.get(hO.LocalVideoLowTrack);e&&t.push([hO.LocalVideoLowTrack,e])}else t.push(n);return t}createMuteMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:o,id:s}]=e;switch(n){case hO.LocalAudioTrack:i=Zw.Audio;break;case hO.LocalVideoTrack:i=Dn(t=r._hints).call(t,mL.SCREEN_TRACK)?Zw.Screen:Zw.High;break;case hO.LocalVideoLowTrack:i=Zw.Low}return{stream_type:i,ssrcs:o,mid:s}}))}createUnmuteMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:o,id:s}]=e;switch(n){case hO.LocalAudioTrack:i=Zw.Audio;break;case hO.LocalVideoTrack:i=Dn(t=r._hints).call(t,mL.SCREEN_TRACK)?Zw.Screen:Zw.High;break;case hO.LocalVideoLowTrack:i=Zw.Low}return{stream_type:i,ssrcs:o,mid:s}}))}filterTobeUnSubscribedTracks(e,t){const i=[],n=this.remoteUserMap.get(e);if(!n)return i;if(t){const r=n.get(t);if(!r)return i;i.push([e,{kind:t,id:r}])}else Array.from(n.entries()).forEach((t=>{let[n,r]=t;i.push([e,{kind:n,id:r}])}));return i}filterTobeUnSubscribedDataChannels(e,t){const i=[];return t.forEach((t=>{var n;null!==(n=this.remoteDataChannelMap.get(e))&&void 0!==n&&n.has(t.id)&&i.push(t)})),i}createUnsubscribeMessage(e){const t=[];return e.forEach((e=>{let[i,{kind:n,id:r}]=e;switch(n){case dO.VIDEO:return void(i._videoSSRC&&t.push({stream_type:dO.VIDEO,ssrcId:i._videoSSRC}));case dO.AUDIO:return void(i._audioSSRC&&t.push({stream_type:dO.AUDIO,ssrcId:i._audioSSRC}))}})),t}createUnsubscribeAllMessage(e){const t=new Map;return e.forEach((e=>{let[i,{kind:n}]=e;if(t.has(i)){let e=t.get(i);n===dO.VIDEO?e|=tO.Video:e|=tO.Audio,t.set(i,e)}else n===dO.VIDEO?t.set(i,tO.Video):t.set(i,tO.Audio)})),{users:Array.from(t.entries()).map((e=>{let[t,i]=e;return{stream_id:t.uid,stream_type:i}}))}}withdrawRemoteTracks(e){e.forEach((e=>{let[t,{kind:i}]=e;const n=this.remoteUserMap.get(t);n&&(n.delete(i),0===Array.from(n.entries()).length&&this.remoteUserMap.delete(t))}))}async updateBitrateLimit(e){const t=this.localTrackMap.get(hO.LocalVideoTrack),i=this.localTrackMap.get(hO.LocalVideoLowTrack);t&&await t.track.setBitrateLimit(e.uplink),i&&e.low_stream_uplink&&await i.track.setBitrateLimit({max_bitrate:e.low_stream_uplink.bitrate,min_bitrate:e.low_stream_uplink.bitrate||0})}isP2PDisconnected(){if(this.connection){return\"connected\"!==this.connection.peerConnectionState}return!0}mapPubResToRemoteConfig(e,t,i){return e.map(((e,n)=>{var r;let{stream_type:o}=e;const s=null===(r=t.find((e=>{let{stream_type:t}=e;return o===t})))||void 0===r?void 0:r.attributes;if(s&&XA(\"DISABLE_SCREEN_SHARE_REMB\")){const e=i[n]._hints;(Dn(e).call(e,mL.SCREEN_TRACK)||Dn(e).call(e,mL.SCREEN_LOW_TRACK))&&(s.remb=!1,fb.debug(\"disable remb for screen share, hints:\",e))}return s}))}async tryToUnmuteAudio(e){for(let i=0;i<e.length;i++)if(e[i]instanceof TM){var t;const n=this.filterTobeUnmutedTracks(e[i]);if(0===n.length)continue;await(null===(t=this.connection)||void 0===t?void 0:t.unmuteLocal(n.map((e=>{let[,{id:t}]=e;return t}))));const r=this.createUnmuteMessage(n);return void await $y(this,_O.RequestUnmuteLocal,r)}}bindStatsUploaderEvents(){this.statsUploader.requestStats=()=>this.getStats(),this.statsUploader.requestLocalMedia=()=>Array.from(this.localTrackMap.entries()),this.statsUploader.requestRemoteMedia=()=>Array.from(this.remoteUserMap.entries()),this.statsUploader.requestVideoIsReady=e=>{var t;return!(null===(t=this.connection)||void 0===t||!t.getRemoteVideoIsReady(e))},this.statsUploader.requestUpload=(e,t)=>this.emit(_O.RequestUpload,e,t),this.statsUploader.requestUploadStats=e=>this.emit(_O.RequestUploadStats,e),this.statsUploader.requestAllTracks=()=>this.getAllTracks()}unbindStatsUploaderEvents(){this.statsUploader.requestStats=void 0,this.statsUploader.requestLocalMedia=void 0,this.statsUploader.requestRemoteMedia=void 0,this.statsUploader.requestVideoIsReady=void 0}async requestReconnect(){this.dtlsFailedCount+=1,await mA(LA(this.dtlsFailedCount,PA)),this.emit(_O.RequestReconnect)}async reconnectP2P(){const e=Array.from(this.localTrackMap.entries()),t=this.createGatewayUnpublishMessage(e);Array.from(this.remoteUserMap.entries()),t.length>0&&await Zy(this,_O.RequestUnpublishForReconnectPC,t),this.disconnectForReconnect(),this.emit(_O.RequestReconnectPC)}canPublishLowStream(){return this.localTrackMap.has(hO.LocalVideoTrack)||this.pendingLocalTracks.some((e=>e instanceof aU))}throwIfTrackTypeNotMatch(e){if(e.filter((e=>e instanceof aU)).length>1)throw new Cy(Ry.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(e.filter((e=>e instanceof TM)).length>1&&(e.some((e=>e instanceof TM&&e._bypassWebAudio))||!ZP().webAudioMediaStreamDest))throw new Cy(Ry.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\");for(const t of e){if(t instanceof aU&&this.pendingLocalTracks.some((e=>e instanceof aU)))throw new Cy(Ry.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(t instanceof TM&&this.pendingLocalTracks.some((e=>e instanceof TM))&&(!ZP().webAudioMediaStreamDest||t._bypassWebAudio||this.pendingLocalTracks.some((e=>e instanceof TM&&e._bypassWebAudio))))throw new Cy(Ry.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\")}}getLowVideoTrack(e,t){var i;const n=!XA(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&ZP().supportDualStreamEncoding,r=pB(pB({},{width:160,height:120,framerate:15,bitrate:50}),t);let o;o=n?e._mediaStreamTrack.clone():KV(e,r);const s=TA(8,\"track-low-\"),a=new aU(o,pB(pB({},n&&{scaleResolutionDownBy:iN(r,e)}),{},{frameRate:r.framerate,bitrateMax:r.bitrate,bitrateMin:r.bitrate}),void 0,void 0,s);return a.on(RL.TRANSCEIVER_UPDATED,(t=>{e._updateRtpTransceiver(t,TL.LOW_STREAM)})),a._hints.push(mL.LOW_STREAM),Dn(i=e._hints).call(i,mL.SCREEN_TRACK)&&a._hints.push(mL.SCREEN_LOW_TRACK),e.on(\"sei-to-send\",(e=>{a.emit(\"sei-to-send\",e)})),e.addListener(fL.NEED_CLOSE,(()=>{a.close()})),a}async globalLock(){return this.mutex.lock(\"From P2PChannel.globalLock\")}async reportPCStats(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this.connection&&this.connection instanceof dB){var r,o,s,a;const c=this.store.keyMetrics.descriptionStart||0,{iceConnectionState:d,dtlsTransportState:l,peerConnectionState:u}=this.connection,{local:h,remote:p}=await this.connection.getSelectedCandidatePair();vb.pcStats(this.store.sessionId,{startTime:c,eventElapse:e-c||0,iceconnectionsate:d,dtlsstate:l,connectionstate:u,intSucc:t?1:2,error:n,selectedLocalCandidateProtocol:null!==(r=null==h?void 0:h.protocol)&&void 0!==r?r:\"\",selectedLocalCandidateType:null!==(o=h.candidateType)&&void 0!==o?o:\"\",selectedLocalCandidateAddress:\"\".concat(h.address,\":\").concat(h.port),selectedRemoteCandidateProtocol:null!==(s=p.protocol)&&void 0!==s?s:\"\",selectedRemoteCandidateType:null!==(a=p.candidateType)&&void 0!==a?a:\"\",selectedRemoteCandidateAddress:\"\".concat(p.address,\":\").concat(p.port),restartCnt:i,preallocation:this.connection.isPreallocation})}}reportVideoFirstFrameDecoded(e,t,i,n){var r;const o=Array.from(d_(r=this.remoteUserMap).call(r)).find((t=>t._videoSSRC===e));if(o){n||this.store.subscribe(o.uid,\"video\",void 0,void 0,void 0,void 0,Date.now());const r=this.store.keyMetrics,s=r.subscribe.find((e=>e.userId===o.uid&&\"video\"===e.type));vb.firstRemoteVideoDecode(this.store.sessionId,gb.FIRST_VIDEO_DECODE,Rb.FIRST_VIDEO_DECODE,{peer:o._uintid,videowidth:t,videoheight:i,subscribeElapse:rV.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId,apEnd:r.requestAPEnd||0,apStart:r.requestAPStart||0,joinGwEnd:r.joinGatewayEnd||0,joinGwStart:r.joinGatewayStart||0,pcEnd:r.peerConnectionEnd||0,pcStart:r.peerConnectionStart||0,subscriberEnd:(null==s?void 0:s.subscribeEnd)||0,subscriberStart:(null==s?void 0:s.subscribeStart)||0,videoAddNotify:(null==s?void 0:s.streamAdded)||0,state:n?1:0,firstFrame:(null==s?void 0:s.firstFrame)||0})}}async remoteMediaSsrcChanged(e,t,i){if(!this.connection)return!1;const n=this.remoteUserMap.get(e);if(!n)return!1;const r=n.get(t);if(!r)return!1;const o=await this.connection.getRemoteSSRC(r);return void 0!==o&&o!==i}unbindRtpTransceiver(){0!==this.localTrackMap.size&&Array.from(this.localTrackMap.entries()).forEach((e=>{let[t,{track:i}]=e;t===hO.LocalVideoLowTrack?i._updateRtpTransceiver(void 0,TL.LOW_STREAM):i._updateRtpTransceiver(void 0)}))}reportPCDisconnectedOrFailed(e){this.connection&&this.connection instanceof dB&&(\"disconnected\"!==this.connection.iceConnectionState&&\"checking\"!==this.connection.iceConnectionState&&\"failed\"!==this.connection.iceConnectionState||(this._isFirstConnected?(this.reportPCStats(Date.now(),!1,this._pcStatsUploadType),this._isFirstConnected=!1):this._pcStatsUploadType===uO.TCP_RESTART&&e===lO.RELAY?this.reportPCStats(Date.now(),!1,this._pcStatsUploadType):this.reportPCStats(Date.now(),!1,uO.DISCONNECTED_OR_FAILED)))}},Cw(uB.prototype,\"startP2PConnection\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"startP2PConnection\"),uB.prototype),Cw(uB.prototype,\"connect\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"connect\"),uB.prototype),Cw(uB.prototype,\"updateRemoteRTPCapabilities\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"updateRemoteRTPCapabilities\"),uB.prototype),Cw(uB.prototype,\"publishDataChannel\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"publishDataChannel\"),uB.prototype),Cw(uB.prototype,\"unpublish\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"unpublish\"),uB.prototype),Cw(uB.prototype,\"unpublishDataChannel\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"unpublishDataChannel\"),uB.prototype),Cw(uB.prototype,\"unpublishLowStream\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"unpublishLowStream\"),uB.prototype),Cw(uB.prototype,\"subscribeDataChannel\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"subscribeDataChannel\"),uB.prototype),Cw(uB.prototype,\"subscribe\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"subscribe\"),uB.prototype),Cw(uB.prototype,\"massSubscribe\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"massSubscribe\"),uB.prototype),Cw(uB.prototype,\"unsubscribe\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"unsubscribe\"),uB.prototype),Cw(uB.prototype,\"unsubscribeDataChannel\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"unsubscribeDataChannel\"),uB.prototype),Cw(uB.prototype,\"massUnsubscribe\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"massUnsubscribe\"),uB.prototype),Cw(uB.prototype,\"muteRemote\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"muteRemote\"),uB.prototype),Cw(uB.prototype,\"unmuteRemote\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"unmuteRemote\"),uB.prototype),Cw(uB.prototype,\"hasRemoteMediaWithLock\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"hasRemoteMediaWithLock\"),uB.prototype),Cw(uB.prototype,\"disconnectForReconnect\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"disconnectForReconnect\"),uB.prototype),Cw(uB.prototype,\"updateBitrateLimit\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"updateBitrateLimit\"),uB.prototype),Cw(uB.prototype,\"remoteMediaSsrcChanged\",[mB],Object.getOwnPropertyDescriptor(uB.prototype,\"remoteMediaSsrcChanged\"),uB.prototype),uB);function mB(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From P2PChannel.\".concat(t));try{for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s];return await n.apply(this,o)}finally{i()}},i}const TB={};function SB(e){(!(arguments.length>1&&void 0!==arguments[1])||arguments[1])&&fb.debug(\"install service \".concat(e.name)),TB[e.name]=e}function gB(e){const t=TB[e];if(!t)throw new Cy(Ry.INVALID_OPERATION,\"\".concat(e,\" not found, please use AgoraRTC.use(\").concat(e,\"Service) to load it first\"));return t}function RB(e,t){return gB(\"DataStream\").create(e,t)}function CB(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function IB(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?CB(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):CB(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const vB=Date.now(),yB=20,AB=new Map,bB=new Map;async function wB(e){const t=AB.get(e),i=Array.isArray(t)&&t[t.length-1],n=bB.get(e);if(!i)return void(n.isSyncing=!1);const r={uid:i.uid,payload:i.payload};0===n.firstRecvTs&&(n.firstRecvTs=i.recvTs,n.firstSendTs=i.sendTs);const o=i.sendTs-n.firstSendTs,s=o-(Date.now()-n.firstRecvTs);s>0&&(n.firstRecvTs=Date.now()-o);let a=i.mediaDelay+s;a<=0?(t.pop(),OB(i.context,r),a=0):a=Math.min(a,yB),setTimeout((()=>t.length&&wB(e)),a)}function OB(e,t){e.safeEmit(zy.STREAM_MESSAGE,t.uid,t.payload),e.onStreamMessage&&e.onStreamMessage(t)}function NB(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2?arguments[2]:void 0;if(!e.syncWithAudio)return OB(i,{uid:e.uid,payload:e.payload});const n=\"\".concat(i.id,\"-\").concat(e.uid),r=AB.get(n)||[],o=r.findIndex((t=>e.sendTs>=t.sendTs)),s=IB(IB({},e),{},{context:i,mediaDelay:t,recvTs:Date.now()});-1===o?r.push(s):r.splice(o,0,s),AB.set(n,r);let a=!1;var c;bB.has(n)?a=!(null===(c=bB.get(n))||void 0===c||!c.isSyncing):bB.set(n,{isSyncing:a,firstRecvTs:0,firstSendTs:0});a||wB(n)}const DB=Hv().name;function PB(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function LB(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?PB(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):PB(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const kB=\"websdk_ng_cache_parameter\",MB=XA(\"MAX_PRELOAD_ASYNC_LENGTH\"),UB=1e4,xB=new Map,VB=[];let FB=null,BB=0,jB=0;const GB=new Map,WB=function(e,t){const i=[];let n=0;const r=async()=>{const e=i.shift();e&&await e(),i.length>0&&n<t?r():n--};return async function(){for(var o=arguments.length,s=new Array(o),a=0;a<o;a++)s[a]=arguments[a];return new Gh((async(o,a)=>{i.push((async()=>{try{const t=await e(...s);o(t)}catch(e){a(e)}})),n<t&&(n++,r())}))}}(KB,MB),HB=Lv.CancelToken.source();async function KB(e,t,i,n,r,o){try{if(!XA(\"ENABLE_PRELOAD\"))return;if(!ZP().supportWebCrypto)return void dA((()=>{fb.warn(\"Your browser does not support preloading, this feature  be run in a secure environment\")}),\"preload_webcrypto_not_supported\");if(!i&&null!==i)throw new Cy(Ry.INVALID_PARAMS,\"Invalid token: \".concat(i,\". If you don not use token, set it to null\"));i&&by(i,\"token\",1,2047),by(e,\"appid\",1,2047),xw(t),n&&Vw(n);const s=SA();fb.debug(\"preload channel \".concat(t,\", uid is \").concat(n));const a={appId:e,cname:t,token:i||e,uid:\"string\"!=typeof n?n:null,sid:s,proxyServer:r};let c,d;\"string\"==typeof n?(a.stringUid=n,[d,c]=await Gh.all([qx(n,{sid:s,appId:e},HB.token),Jx(LB(LB({},a),{},{token:i||e,uid:0}),HB.token)]),a.uid=d.uid,c.gatewayInfo.uid=a.uid,c.gatewayInfo.res.uid=a.uid):(o&&(a.stringUid=o),c=await Jx(a,HB.token));const l={sid:s,appId:e,cname:t,token:i||e,uid:a.stringUid||n,intUid:a.uid||c.gatewayInfo.uid,stringUid:a.stringUid,ts:Date.now(),sua:d,ap:c};await async function(e){let t;try{e.uid&&qB({appId:e.appId,cname:e.cname,token:e.token,uid:e.uid,stringUid:e.stringUid});const i=$B(e),n=await async function(e,t){try{const i=await window.crypto.subtle.importKey(\"raw\",hA(t),\"AES-GCM\",!1,[\"encrypt\"]),n=await window.crypto.subtle.encrypt({name:\"AES-GCM\",iv:new Uint8Array(1)},i,lA(window.btoa(JSON.stringify(e))));return uA(new Uint8Array(n))}catch(e){return}}(e,e.token||e.appId);if(!n)return;t=QB(kB);const r=t?JSON.parse(t):[];r.push({[i]:n}),r.length>XA(\"AP_CACHE_NUM\")&&r.shift(),ZB(kB,JSON.stringify(r))}catch(e){fb.warn(\"Error caching server parameters:\",e.message),ZB(kB,\"\")}}(l),BB++}catch(e){throw jB++,function(e){FB||(FB=window.setTimeout((()=>{let t=\"\";GB.forEach(((e,i)=>{t+=\"\".concat(i,\": \").concat(e,\" ;\")})),vb.reportApiInvoke(null,{name:By.PRELOAD,options:{success:BB,failed:jB,err:t}}).onError(e),BB=0,jB=0,GB.clear(),FB=null}),UB));const t=GB.get(e.code)||0;GB.set(e.code,t+1)}(e),e}}async function YB(e){try{if(XA(\"AP_REQUEST_DETAIL\"))return;const t=qB(e);if(!t||\"disabled\"!==e.cloudProxyServer)return;const i=await async function(e,t){try{const i=await window.crypto.subtle.importKey(\"raw\",hA(t),\"AES-GCM\",!1,[\"decrypt\"]),n=await window.crypto.subtle.decrypt({name:\"AES-GCM\",iv:new Uint8Array(1)},i,lA(e));return JSON.parse(window.atob(uA(new Uint8Array(n))))}catch(e){return}}(t,e.token||e.appId);if(!i)return;if(!function(e,t){const i=e.cname===t.cname&&e.appId===t.appId&&e.token===t.token;if(!i)return!1;return t.stringUid?e.stringUid===t.stringUid:\"number\"==typeof t.uid?e.uid===t.uid:e.uid==t.uid}(i,e))return;if(i&&Date.now()-i.ts<XA(\"AP_CACHE_LIFETIME\"))return i}catch(e){fb.warn(\"Error get preloadInfo\",e.message)}}function qB(e){let t;try{if(t=QB(kB),!t)return;const i=JSON.parse(t),n=$B(e),r=function(e,t){for(let i=e.length-1;i>=0;i--)if(t(e[i]))return i;return-1}(i,(e=>n in e));if(-1===r)return;const o=i.splice(r,1)[0];return ZB(kB,JSON.stringify(i)),o[n]}catch(e){fb.warn(\"Error delete preload info: \".concat(t),e.message),ZB(kB,\"\")}}function zB(e){if(e){let t=xB.get(e);t&&(window.clearTimeout(t),t=null,xB.delete(e)),Dn(VB).call(VB,e)||\"disabled\"!==e.cloudProxyServer||VB.push(e)}if(xB.size<XA(\"AP_CACHE_NUM\")&&VB.length>0){const e=VB.shift();xB.set(e,window.setTimeout((async()=>{const{appId:t,cname:i,token:n,stringUid:r,uid:o,proxyServer:s}=e;try{await WB(t,i,n,o,s,r),xB.has(e)&&zB(e)}catch(t){fb.warn(\"update preload failed\",t.message),JB(e)}}),XA(\"AP_UPDATE_INTERVAL\")))}}function JB(e){const t=VB.indexOf(e);-1!==t&&VB.splice(t,1);let i=xB.get(e);i&&(window.clearTimeout(i),i=null,xB.delete(e),zB())}function XB(e,t){const i=e.sua,n=e.ap;t&&i&&vb.reqUserAccount(e.sid,{lts:i.requestTime,elapse:i.elapse,success:!0,serverAddr:i.url,stringUid:t,uid:e.intUid,errorCode:null,extend:i.req}),vb.reportResourceTiming(e.ap.url,e.sid),vb.joinWebProxyAP(e.sid,{lts:n.requestTime,elapse:n.elapse,sucess:1,apServerAddr:n.url,turnServerAddrList:n.proxyInfo.addresses.map((e=>e.ip)).join(\",\"),eventType:\"disabled\",unilbsServerIds:[YO.CHOOSE_SERVER,YO.CLOUD_PROXY_FALLBACK].toString()}),vb.joinChooseServer(e.sid,{lts:n.requestTime,elapse:n.elapse,succ:!0,csAddr:n.url,opid:n.opid,serverList:n.gatewayInfo.gatewayAddrs.map((e=>e.address)),ec:null,cid:n.gatewayInfo.cid.toString(),uid:n.gatewayInfo.uid.toString(),csIp:n.gatewayInfo.csIp,unilbsServerIds:[YO.CHOOSE_SERVER].toString(),isHttp3:n.isHttp3})}function QB(e){return window.atob(window.localStorage.getItem(e)||\"\")}function ZB(e,t){window.localStorage.setItem(e,window.btoa(t))}function $B(e){let t=\"\".concat(e.appId,\"_\").concat(e.cname);return\"string\"==typeof e.uid&&(t+=\"_s_\".concat(e.uid)),\"number\"==typeof e.uid&&(t+=\"_\".concat(e.uid)),e.token&&(t+=\"_\".concat(e.token)),bA(t)}function ej(e){let t=function(){const e=rj.pop();return e?(e.offset=e.limit=0,e):{bytes:new Uint8Array(64),offset:0,limit:0}}();return function(e,t){let i=e.appId;void 0!==i&&(Ej(t,10),uj(t,i));let n=e.cid;void 0!==n&&(Ej(t,16),Ej(t,n));let r=e.cname;void 0!==r&&(Ej(t,26),uj(t,r));let o=e.deviceId;void 0!==o&&(Ej(t,34),uj(t,o));let s=e.elapse;void 0!==s&&(Ej(t,40),mj(t,s));let a=e.fileSize;void 0!==a&&(Ej(t,48),mj(t,nj(a)));let c=e.height;void 0!==c&&(Ej(t,56),mj(t,nj(c)));let d=e.jpg;void 0!==d&&(Ej(t,66),Ej(t,d.length),dj(t,d));let l=e.networkType;void 0!==l&&(Ej(t,72),mj(t,nj(l)));let u=e.osType;void 0!==u&&(Ej(t,80),mj(t,nj(u)));let h=e.requestId;void 0!==h&&(Ej(t,90),uj(t,h));let p=e.sdkVersion;void 0!==p&&(Ej(t,98),uj(t,p));let _=e.sequence;void 0!==_&&(Ej(t,104),mj(t,nj(_)));let E=e.sid;void 0!==E&&(Ej(t,114),uj(t,E));let f=e.timestamp;void 0!==f&&(Ej(t,120),mj(t,f));let m=e.uid;void 0!==m&&(Ej(t,128),Ej(t,m));let T=e.vid;void 0!==T&&(Ej(t,136),Ej(t,T));let S=e.width;void 0!==S&&(Ej(t,144),mj(t,nj(S)));let g=e.service;void 0!==g&&(Ej(t,152),Ej(t,g));let R=e.callbackData;void 0!==R&&(Ej(t,162),Ej(t,R.length),dj(t,R));let C=e.ticket;void 0!==C&&(Ej(t,170),uj(t,C));let I=e.vendorConfigs;void 0!==I&&(Ej(t,178),uj(t,I))}(e,t),function(e){let t=e.bytes,i=e.limit;return t.length===i?t:t.subarray(0,i)}(t)}function tj(e){return function(e){let t={};e:for(;!sj(e);){let i=_j(e);switch(i>>>3){case 0:break e;case 1:t.code=_j(e);break;case 2:t.msg=lj(e,_j(e));break;case 3:t.requestId=lj(e,_j(e));break;case 4:t.timestamp=fj(e,!1);break;default:ij(e,7&i)}}return t}({bytes:t=e,offset:0,limit:t.length});var t}function ij(e,t){switch(t){case 0:for(;128&hj(e););break;case 2:oj(e,_j(e));break;case 5:oj(e,4);break;case 1:oj(e,8);break;default:throw new Error(\"Unimplemented type: \"+t)}}function nj(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}let rj=[];function oj(e,t){if(e.offset+t>e.limit)throw new Error(\"Skip past limit\");e.offset+=t}function sj(e){return e.offset>=e.limit}function aj(e,t){let i=e.bytes,n=e.offset,r=e.limit,o=n+t;if(o>i.length){let t=new Uint8Array(2*o);t.set(i),e.bytes=t}return e.offset=o,o>r&&(e.limit=o),n}function cj(e,t){let i=e.offset;if(i+t>e.limit)throw new Error(\"Read past limit\");return e.offset+=t,i}function dj(e,t){let i=aj(e,t.length);e.bytes.set(t,i)}function lj(e,t){let i=cj(e,t),n=String.fromCharCode,r=e.bytes,o=\"ï¿½\",s=\"\";for(let e=0;e<t;e++){let a,c,d,l,u=r[e+i];0==(128&u)?s+=n(u):192==(224&u)?e+1>=t?s+=o:(a=r[e+i+1],128!=(192&a)?s+=o:(l=(31&u)<<6|63&a,l<128?s+=o:(s+=n(l),e++))):224==(240&u)?e+2>=t?s+=o:(a=r[e+i+1],c=r[e+i+2],32896!=(49344&(a|c<<8))?s+=o:(l=(15&u)<<12|(63&a)<<6|63&c,l<2048||l>=55296&&l<=57343?s+=o:(s+=n(l),e+=2))):240==(248&u)?e+3>=t?s+=o:(a=r[e+i+1],c=r[e+i+2],d=r[e+i+3],8421504!=(12632256&(a|c<<8|d<<16))?s+=o:(l=(7&u)<<18|(63&a)<<12|(63&c)<<6|63&d,l<65536||l>1114111?s+=o:(l-=65536,s+=n(55296+(l>>10),56320+(1023&l)),e+=3))):s+=o}return s}function uj(e,t){let i=t.length,n=0;for(let e=0;e<i;e++){let r=t.charCodeAt(e);r>=55296&&r<=56319&&e+1<i&&(r=(r<<10)+t.charCodeAt(++e)-56613888),n+=r<128?1:r<2048?2:r<65536?3:4}Ej(e,n);let r=aj(e,n),o=e.bytes;for(let e=0;e<i;e++){let n=t.charCodeAt(e);n>=55296&&n<=56319&&e+1<i&&(n=(n<<10)+t.charCodeAt(++e)-56613888),n<128?o[r++]=n:(n<2048?o[r++]=n>>6&31|192:(n<65536?o[r++]=n>>12&15|224:(o[r++]=n>>18&7|240,o[r++]=n>>12&63|128),o[r++]=n>>6&63|128),o[r++]=63&n|128)}}function hj(e){return e.bytes[cj(e,1)]}function pj(e,t){let i=aj(e,1);e.bytes[i]=t}function _j(e){let t,i=0,n=0;do{t=hj(e),i<32&&(n|=(127&t)<<i),i+=7}while(128&t);return n}function Ej(e,t){for(t>>>=0;t>=128;)pj(e,127&t|128),t>>>=7;pj(e,t)}function fj(e,t){let i,n=0,r=0,o=0;return i=hj(e),n=127&i,128&i&&(i=hj(e),n|=(127&i)<<7,128&i&&(i=hj(e),n|=(127&i)<<14,128&i&&(i=hj(e),n|=(127&i)<<21,128&i&&(i=hj(e),r=127&i,128&i&&(i=hj(e),r|=(127&i)<<7,128&i&&(i=hj(e),r|=(127&i)<<14,128&i&&(i=hj(e),r|=(127&i)<<21,128&i&&(i=hj(e),o=127&i,128&i&&(i=hj(e),o|=(127&i)<<7))))))))),{low:n|r<<28,high:r>>>4|o<<24,unsigned:t}}function mj(e,t){let i=t.low>>>0,n=(t.low>>>28|t.high<<4)>>>0,r=t.high>>>24,o=0===r?0===n?i<16384?i<128?1:2:i<1<<21?3:4:n<16384?n<128?5:6:n<1<<21?7:8:r<128?9:10,s=aj(e,o),a=e.bytes;switch(o){case 10:a[s+9]=r>>>7&1;case 9:a[s+8]=9!==o?128|r:127&r;case 8:a[s+7]=8!==o?n>>>21|128:n>>>21&127;case 7:a[s+6]=7!==o?n>>>14|128:n>>>14&127;case 6:a[s+5]=6!==o?n>>>7|128:n>>>7&127;case 5:a[s+4]=5!==o?128|n:127&n;case 4:a[s+3]=4!==o?i>>>21|128:i>>>21&127;case 3:a[s+2]=3!==o?i>>>14|128:i>>>14&127;case 2:a[s+1]=2!==o?i>>>7|128:i>>>7&127;case 1:a[s]=1!==o?128|i:127&i}}const Tj={},Sj={},gj=4294967296,Rj=gj*gj,Cj=Rj/2,Ij=wj(0,!0),vj=wj(0),yj=Oj(0,-2147483648,!1),Aj=Oj(-1,2147483647,!1),bj=Oj(-1,-1,!0);function wj(e,t){let i,n,r;return t?(r=0<=(e>>>=0)&&e<256)&&(n=Sj[e],n)?n:(i=Oj(e,0,!0),r&&(Sj[e]=i),i):(r=-128<=(e|=0)&&e<128)&&(n=Tj[e],n)?n:(i=Oj(e,e<0?-1:0,!1),r&&(Tj[e]=i),i)}function Oj(e,t,i){return{low:0|e,high:0|t,unsigned:!!i}}function Nj(e,t){if(isNaN(e))return t?Ij:vj;if(t){if(e<0)return Ij;if(e>=Rj)return bj}else{if(e<=-Cj)return yj;if(e+1>=Cj)return Aj}return e<0?t?Ij:vj:Oj(e%gj|0,e/gj|0,t)}function Dj(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}class Pj extends xy{get connectionState(){return this._connectionState}set connectionState(e){if(this._connectionState===e)return;const t=this._connectionState;this._connectionState=e,this.emit(RO.CONNECTION_STATE_CHANGE,e,t)}get quality(){return this._quality}set quality(e){this._quality=e>1?1:e<.1?.1:e,this._qualityTimer&&(window.clearTimeout(this._qualityTimer),this._qualityTimer=null),this._quality>=1||(this._qualityTimer=window.setTimeout((()=>{this.quality=this._quality/this._qualityRatio}),6e4))}constructor(e){var t;super(),Fg(this,\"name\",\"AgoraRTCImageModeration\"),Fg(this,\"_connectionState\",gO.CONNECTING),Fg(this,\"_sequence\",0),Fg(this,\"_moderationStartTime\",void 0),Fg(this,\"_workerConnection\",void 0),Fg(this,\"_workerMessageLengthLimit\",void 0),Fg(this,\"_qualityRatio\",void 0),Fg(this,\"_connectInfo\",void 0),Fg(this,\"_cancelTokenSource\",Lv.CancelToken.source()),Fg(this,\"_retryConfig\",void 0),Fg(this,\"_moderationInterval\",void 0),Fg(this,\"_moderationTimer\",null),Fg(this,\"_moderationMode\",1),Fg(this,\"_quality\",1),Fg(this,\"_qualityTimer\",null),Fg(this,\"_ticket\",void 0),Fg(this,\"_moderationIntervalMinimum\",void 0),Fg(this,\"_uploadFailedNum\",0),Fg(this,\"_uploadNum\",0),Fg(this,\"_uploadTimer\",null),Fg(this,\"_extraInfo\",void 0),Fg(this,\"_vendor\",\"\"),Fg(this,\"_encoder\",new TextEncoder),Fg(this,\"_moderationId\",void 0),Fg(this,\"inspectImage\",(()=>{if(this.connectionState!==gO.CONNECTED)throw new yb(Ry.OPERATION_ABORTED,\"image moderation service connection status is \".concat(this.connectionState));this._moderationTimer&&(window.clearInterval(this._moderationTimer),this._moderationTimer=null),this._moderationTimer=window.setInterval((()=>{this.connectionState===gO.CONNECTED?this.requestToInspectImage():fb.debug(\"[\".concat(this._moderationId,\"] Moderation State is not connected , \"),this.connectionState)}),this._moderationInterval<this._moderationIntervalMinimum?this._moderationIntervalMinimum:this._moderationInterval),this.requestToInspectImage()})),this._moderationId=TA(5,\"image-moderation-\"),this._workerMessageLengthLimit=XA(\"IMAGE_MODERATION_WORKER_MESSAGE_LENGTH_LIMIT\"),this._moderationIntervalMinimum=XA(\"IMAGE_MODERATION_INTERVAL_MINIMUM\"),this._moderationInterval=null!==(t=e.interval)&&void 0!==t?t:1e3,e.extraInfo&&(this._extraInfo=this._encoder.encode(e.extraInfo)),e.vendor&&(this._vendor=e.vendor),this._qualityRatio=XA(\"IMAGE_MODERATION_QUALITY_RATIO\"),this._moderationStartTime=Number(Date.now()),this._workerConnection=new HO(\"worker-\"+this._moderationId,PA),this.on(RO.STATE_CHANGE,((e,t)=>{fb.debug(\"[\".concat(this._moderationId,\"] Moderation operation :\").concat(CO[e],\" \").concat(t||\"\"))})),this.handleWorkerEvents()}async init(e,t){this.emit(RO.STATE_CHANGE,CO.CONNECT_AP),this._connectInfo=e;const i=this._cancelTokenSource.token;return this._retryConfig=t,new Gh(((n,r)=>{this.on(RO.CONNECTION_STATE_CHANGE,((e,t)=>{e===gO.CONNECTED&&n()})),this.requestAP(e,i,t).then((e=>{this.connectWorker(e)})).catch((e=>{r(e)}))}))}updateConfig(e){var t;this._moderationInterval=null!==(t=e.interval)&&void 0!==t?t:1e3,e.extraInfo&&(this._extraInfo=this._encoder.encode(e.extraInfo)),e.vendor&&(this._vendor=e.vendor),fb.debug(\"[\".concat(this._moderationId,\"] updateConfig: \").concat(JSON.stringify(e))),this.connectionState===gO.CONNECTED&&this.inspectImage()}async requestAP(e,t,i){const n=XA(\"WEBCS_DOMAIN\").map((e=>\"https://\".concat(e,\"/api/v1\"))),r=await function(e,t,i,n){let{appId:r,areaCode:o,cname:s,sid:a,token:c,uid:d}=t;Bx++;const l=\"moderation_plugin\",u={service_name:l,json_body:JSON.stringify({appId:r,areaCode:o,cname:s,command:\"allocateEdge\",requestId:Bx,seq:Bx,sid:a,appToken:c,ts:Date.now(),uid:d+\"\"})};let h,p,_=e[0];return kA((async()=>{h=Date.now();const e=await Tx(_,{data:u,cancelToken:i,headers:{\"X-Packet-Service-Type\":\"0\",\"X-Packet-URI\":\"61\"},params:{action:\"wrtc_gateway\"}});if(p=Date.now()-h,0!==e.code){const t=new yb(Ry.UNEXPECTED_RESPONSE,\"moderation plugin ap error, code\"+e.code,{retry:!0,responseTime:p});throw fb.error(t.toString()),t}const t=JSON.parse(e.json_body);if(200!==t.code){const e=new yb(Ry.UNEXPECTED_RESPONSE,\"moderation plugin ap error, code: \".concat(t.code,\", reason: \").concat(t.reason),{code:t.code,responseTime:p});throw fb.error(e.toString()),e}if(!t.servers||!Array.isArray(t.servers)||0===t.servers.length){const e=new yb(Ry.UNEXPECTED_RESPONSE,\"moderation plugin ap empty server\",{code:t.code,responseTime:p});throw fb.error(e.toString()),e}if(!t.servers.some((e=>!!e.wss))){const e=new yb(Ry.UNEXPECTED_RESPONSE,\"moderation plugin ap empty port\",{code:t.code,responseTime:p});throw fb.error(e.toString()),e}const n=XA(\"IMAGE_MODERATION_WORKER_HOST\");return{addressList:t.servers.map((e=>{let{address:t,wss:i}=e;if(t&&i)return\"wss://\".concat(t.replace(/\\./g,\"-\"),\".\").concat(n,\":\").concat(i,\"/moderation\")})).filter((e=>!!e)),workerToken:t.workerToken,vid:t.vid,ticket:t.appTicket,responseTime:p}}),((t,i)=>(vb.apworkerEvent(a,{success:!0,sc:200,serviceName:l,responseDetail:JSON.stringify(t.addressList),firstSuccess:0===i,responseTime:p,serverIp:e[i%e.length]}),!1)),((t,i)=>(vb.apworkerEvent(a,{success:!1,sc:t.data&&t.data.code||200,serviceName:l,responseTime:p,serverIp:e[i%e.length]}),!!(t.code!==Ry.OPERATION_ABORTED&&t.code!==Ry.UNEXPECTED_RESPONSE||t.data&&t.data.retry)&&(_=e[(i+1)%e.length],!0))),n)}(n,e,t,i);this.emit(RO.STATE_CHANGE,CO.AP_CONNECTED);const{addressList:o,ticket:s}=r;return this._ticket=s,o}async connectWorker(e){this.emit(RO.STATE_CHANGE,CO.CONNECT_WORKER),await this._workerConnection.init(e,1e4)}handleWorkerEvents(){this._workerConnection.on(Uw.CONNECTED,(async()=>{this.emit(RO.STATE_CHANGE,CO.WORKER_CONNECTED,this._workerConnection.url),this.connectionState=gO.CONNECTED})),this._workerConnection.on(Uw.CLOSED,(()=>{this.connectionState=gO.CLOSED})),this._workerConnection.on(Uw.FAILED,(()=>{this.connectionState=gO.CLOSED})),this._workerConnection.on(Uw.RECONNECTING,(()=>{this.connectionState=this.connectionState===gO.CONNECTED?gO.RECONNECTING:gO.CONNECTING})),this._workerConnection.on(Uw.ON_MESSAGE,(async e=>{if(e.data instanceof ArrayBuffer){const t=tj(new Uint8Array(e.data));XA(\"SHOW_IMAGE_MODERATION_WORKER_MESSAGE\")&&fb.debug(\"[\".concat(this._moderationId,\"] Response message for worker of image moderation \"),JSON.stringify(t)),this._uploadNum++,void 0===t.code||0===t.code||(this._uploadFailedNum++,fb.error(\"[\".concat(this._moderationId,\"] Error response from worke, code is \").concat(t.code,\", msg is \").concat(t.msg)),this._uploadTimer||(this._uploadTimer=window.setTimeout((()=>{vb.reportApiInvoke(this._connectInfo.sid||null,{name:By.IMAGE_MODERATION_UPLOAD,options:[this._uploadFailedNum,this._uploadNum,t.code],tag:jy.TRACER}).onError(new yb(Ry.IMAGE_MODERATION_UPLOAD_FAILED,t.msg)),this._uploadTimer=null}),XA(\"IMAGE_MODERATION_UPLOAD_REPORT_INTERVAL\"))))}else fb.error(\"[\".concat(this._moderationId,\"] Unexpected message type from worker\"))})),this._workerConnection.on(Uw.WILL_RECONNECT,((e,t,i)=>{\"recover\"===e&&i(e),i(\"tryNext\")})),this._workerConnection.on(Uw.REQUEST_NEW_URLS,((e,t)=>{this.requestAP(this._connectInfo,this._cancelTokenSource.token,this._retryConfig).then(e).catch(t)}))}static intToLong(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}async requestToInspectImage(){const e=eA(this,RO.CLIENT_LOCAL_VIDEO_TRACK),t={appId:this._connectInfo.appId,cname:this._connectInfo.cname,cid:this._connectInfo.cid,sid:this._connectInfo.sid,uid:this._connectInfo.uid,vid:this._connectInfo.vid};if(e){if(!e.isPlaying)return void(XA(\"SHOW_IMAGE_MODERATION_WORKER_MESSAGE\")&&fb.debug(\"Only the track being played can be inspected\"));this._sequence++;const i=await this.generateRequestData(e,t);this._workerConnection.sendMessage(i,!0,!0)}else XA(\"SHOW_IMAGE_MODERATION_WORKER_MESSAGE\")&&fb.debug(\"Only the track being published can be inspected\")}async generateRequestData(e,t){let{appId:i,cname:n,cid:r,vid:o,sid:s,uid:a}=t;const c=Date.now(),d=await e.getCurrentFrameImage(\"image/jpeg\",this.quality),l=await Ok(d,i,n),u=this._sequence+\"-\"+r+\"-\"+a+\"-\"+c+\"-\"+TA(12,\"\"),h={appId:i,cid:r,cname:n,deviceId:\"\",elapse:Pj.intToLong(Number(c-this._moderationStartTime)),fileSize:d.buffer.byteLength,height:d.height,width:d.width,jpg:l,networkType:6,osType:7,requestId:u,sdkVersion:\"4.22.1\",sequence:this._sequence,sid:s,timestamp:Nj(c),uid:a,vid:o,service:this._moderationMode,ticket:this._ticket,callbackData:this._extraInfo,vendorConfigs:this._vendor};void 0===this._extraInfo&&delete h.callbackData;const p=ej(h);if(p.byteLength<this._workerMessageLengthLimit){if(XA(\"SHOW_IMAGE_MODERATION_WORKER_MESSAGE\")){const e=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Dj(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Dj(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},h);delete e.jpg,fb.debug(\"[\".concat(this._moderationId,\"] Request message for worker of image moderation service: \"),JSON.stringify(e))}return p}{const t=this.quality*this._qualityRatio;return this.quality=t,await this.generateRequestData(e,{appId:i,cname:n,cid:r,vid:o,sid:s,uid:a})}}close(){this._cancelTokenSource.cancel(),this._cancelTokenSource=Lv.CancelToken.source(),this._workerConnection&&this._workerConnection.close(),this._moderationTimer&&window.clearInterval(this._moderationTimer),this._moderationTimer=null,this._uploadTimer&&window.clearTimeout(this._uploadTimer),this._uploadTimer=null,this.connectionState=gO.CLOSED,this.emit(RO.STATE_CHANGE,CO.CLOSED)}}function Lj(e){if(yy(e.interval,\"interval\",1e3,1/0),e&&e.extraInfo&&e.extraInfo.length>1024)throw new yb(Ry.INVALID_PARAMS,\"config.extraInfo length cannot exceed 1024 bytes\");if(e&&e.vendor&&e.vendor.length>1024)throw new yb(Ry.INVALID_PARAMS,\"config.vendor length cannot exceed 1024 bytes\")}const kj={name:\"ImageModeration\",create:function(e){let{config:t}=e;return Lj(t),new Pj(t)}};var Mj,Uj,xj,Vj,Fj,Bj,jj,Gj,Wj,Hj,Kj,Yj,qj,zj,Jj,Xj,Qj,Zj,$j,eG,tG,iG,nG,rG,oG,sG,aG,cG,dG,lG,uG,hG,pG,_G,EG,fG,mG,TG,SG,gG,RG;function CG(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function IG(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?CG(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):CG(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}NA.setLogger(fb);let vG=(Mj=Ib(),Uj=Ib({argsMap:(e,t)=>{if(!Array.isArray(t)){if(!(t instanceof HL))return[t];t=[t]}return t.map((e=>e?Object(e).toString():\"null\"))}}),xj=Ib({argsMap:(e,t)=>(t||(t=[]),Array.isArray(t)||t.trackMediaType!==vL.DATA?(Array.isArray(t)||(t=[t]),t.map((e=>e.getTrackId()))):[t.getChannelId()])}),Vj=Ib({argsMap:(e,t,i,n)=>[\"object\"==typeof t?t.uid:t,i,n]}),Fj=Ib({argsMap:(e,t,i)=>[t,i]}),Bj=Ib({argsMap:(e,t)=>t.map((e=>{let{user:t,mediaType:i}=e;return[null==t?void 0:t.uid,i]}))}),jj=Ib({argsMap:(e,t,i,n)=>[\"object\"==typeof t?t.uid:t,i,n]}),Gj=Ib({argsMap:(e,t)=>t.map((e=>{let{user:t,mediaType:i}=e;return{uid:null==t?void 0:t.uid,mediaType:i}}))}),Wj=Ib(),Hj=Ib(),Kj=Ib(),Yj=Ib(),qj=Ib(),zj=Ib(),Jj=Ib(),Xj=Ib(),Qj=Ib(),Zj=Ib(),$j=Ib(),eG=Ib(),tG=Ib(),iG=Ib(),nG=Ib({argsMap:(e,t)=>[t]}),rG=Ib(),oG=Ib(),sG=Ib(),aG=Ib(),cG=Ib(),dG=Ib(),lG=Ib(),uG=Ib(),hG=Ib({argsMap:(e,t)=>(Array.isArray(t)||(t=[t]),[JSON.stringify(t)])}),pG=Ib(),_G=Ib(),EG=Ib(),fG=Ib(),mG=Ib(),TG=Ib(),SG=Ib({reportResult:!0}),gG=Ib(),RG=class extends xy{get connectionState(){return this._gateway.state}get remoteUsers(){return this._users}get localTracks(){return this._p2pChannel.getAllTracks(!0)}get uid(){return this._uid}get channelName(){return this._channelName}get localDataChannels(){return this._p2pChannel.getAllDataChannels()}get mode(){return this._config.mode}get role(){var e;return(null===(e=this._config)||void 0===e?void 0:e.role)||\"audience\"}get codec(){return this._config.codec}get audioCodec(){return this._config.audioCodec||\"opus\"}get isStringUID(){return!!this._joinInfo&&!!this._joinInfo.stringUid}get __className__(){return\"Client\"}constructor(e){let t;if(super(),Fg(this,\"store\",void 0),Fg(this,\"_uid\",void 0),Fg(this,\"_channelName\",void 0),Fg(this,\"_uintUid\",void 0),Fg(this,\"_users\",[]),Fg(this,\"_config\",void 0),Fg(this,\"_clientId\",void 0),Fg(this,\"_appId\",void 0),Fg(this,\"_sessionId\",null),Fg(this,\"_key\",void 0),Fg(this,\"_rtmConfig\",{}),Fg(this,\"_joinInfo\",void 0),Fg(this,\"_gateway\",void 0),Fg(this,\"_statsCollector\",void 0),Fg(this,\"_configDistribute\",void 0),Fg(this,\"_leaveMutex\",new NA(\"client-leave\")),Fg(this,\"_publishMutex\",new NA(\"client-publish\")),Fg(this,\"_renewTokenMutex\",new NA(\"client-renewtoken\")),Fg(this,\"_subscribeMutex\",new NA(\"client-subscribe\")),Fg(this,\"_encryptionMode\",\"none\"),Fg(this,\"_encryptionSecret\",null),Fg(this,\"_encryptionSalt\",null),Fg(this,\"_encryptDataStream\",!1),Fg(this,\"_encryptDataStreamKey\",null),Fg(this,\"_encryptDataStreamIv\",null),Fg(this,\"_proxyServer\",void 0),Fg(this,\"_turnServer\",{servers:[],mode:\"auto\"}),Fg(this,\"_cloudProxyServerMode\",\"disabled\"),Fg(this,\"_isDualStreamEnabled\",!1),Fg(this,\"_defaultStreamFallbackType\",void 0),Fg(this,\"_lowStreamParameter\",void 0),Fg(this,\"_streamFallbackTypeCacheMap\",new Map),Fg(this,\"_remoteStreamTypeCacheMap\",new Map),Fg(this,\"_axiosCancelSource\",Lv.CancelToken.source()),Fg(this,\"_audioVolumeIndicationInterval\",void 0),Fg(this,\"_networkQualityInterval\",void 0),Fg(this,\"_userOfflineTimeout\",void 0),Fg(this,\"_streamRemovedTimeout\",void 0),Fg(this,\"_liveTranscodeStreamingClient\",void 0),Fg(this,\"_liveRawStreamingClient\",void 0),Fg(this,\"_channelMediaRelayClient\",void 0),Fg(this,\"_networkQualitySensitivity\",\"normal\"),Fg(this,\"_p2pChannel\",void 0),Fg(this,\"_useLocalAccessPoint\",!1),Fg(this,\"_setLocalAPVersion\",void 0),Fg(this,\"_joinAndNotLeaveYet\",!1),Fg(this,\"_numberOfJoinCount\",0),Fg(this,\"_remoteDefaultVideoStreamType\",void 0),Fg(this,\"_inspect\",void 0),Fg(this,\"_moderation\",void 0),Fg(this,\"_license\",void 0),Fg(this,\"_pendingPublishedUsers\",[]),Fg(this,\"ntpAlignErrorCount\",0),Fg(this,\"remoteInboundOffset\",0),Fg(this,\"_handleLocalTrackEnable\",((e,t,i)=>{this.publish(e,!1).then(t).catch(i)})),Fg(this,\"_handleLocalTrackDisable\",((e,t,i)=>{this.unpublish(e).then(t).catch(i)})),Fg(this,\"_handleUserOnline\",(e=>{if(XA(\"BLOCK_LOCAL_CLIENT\")&&Ob(e.uid,this.channelName))return void fb.debug(\"[\".concat(e.uid,\"] will be ignored in local\"));this.isStringUID&&\"string\"!=typeof e.uid&&fb.error(\"[\".concat(this._clientId,\"] StringUID is Mixed with UintUID\"));const t=this._users.find((t=>t.uid===e.uid));if(t)t._trust_in_room_=!0,t._is_pre_created&&(t._is_pre_created=!1,this.safeEmit(zy.USER_JOINED,t));else{const t=new cF(e.uid,e.uint_id||e.uid);this._users.push(t),fb.debug(\"[\".concat(this._clientId,\"] user online\"),e.uid),this.safeEmit(zy.USER_JOINED,t)}})),Fg(this,\"_handleUserOffline\",(e=>{if(XA(\"BLOCK_LOCAL_CLIENT\")&&Ob(e.uid,this.channelName))return;const t=this._users.find((t=>t.uid===e.uid));t&&(this._handleRemoveStream(e),this._handleRemoveDataChannels(e),t._audio_pre_subscribed||t._video_pre_subscribed?t._is_pre_created=!0:nA(this._users,t),this._remoteStreamTypeCacheMap.delete(t.uid),this._streamFallbackTypeCacheMap.delete(t.uid),fb.debug(\"[\".concat(this._clientId,\"] user offline\"),e.uid,\"reason:\",e.reason),this.safeEmit(zy.USER_LEAVED,t,e.reason))})),Fg(this,\"_handleAddAudioOrVideoStream\",((e,t,i,n,r,o,s)=>{if(XA(\"BLOCK_LOCAL_CLIENT\")&&Ob(t,this.channelName))return;const a=this._users.find((e=>e.uid===t));if(!a)return void fb.error(\"[\".concat(this._clientId,\"] can not find target user!(on_add_stream)\"));fb.debug(\"[\".concat(this._clientId,\"] stream added with uid \").concat(t,\", type \").concat(e)),this.store.subscribe(a.uid,e,void 0,void 0,void 0,Date.now());const c=\"audio\"===e?a.hasAudio:a.hasVideo;a._uintid||(a._uintid=r||t),\"audio\"===e?a._trust_audio_stream_added_state_=!0:a._trust_video_stream_added_state_=!0,\"audio\"===e?(a._audio_added_=!0,void 0!==i&&(a._audioSSRC=i),void 0!==n&&(a._cname=n),o&&(a._audioOrtc=o)):(a._video_added_=!0,void 0!==i&&(a._videoSSRC=i),void 0!==n&&(a._cname=n),void 0!==s&&(a._rtxSsrcId=s),o&&(a._videoOrtc=o)),(\"audio\"===e?a.hasAudio:a.hasVideo)&&!c&&(fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(a.uid,\" published \").concat(e)),this.safeEmit(zy.USER_PUBLISHED,a,e)),\"video\"===e?vb.onGatewayStream(this._sessionId,gb.ON_ADD_VIDEO_STREAM,Rb.ON_ADD_VIDEO_STREAM,{peer:r||t,ssrc:a._videoSSRC}):vb.onGatewayStream(this._sessionId,gb.ON_ADD_AUDIO_STREAM,Rb.ON_ADD_AUDIO_STREAM,{peer:r||t,ssrc:a._audioSSRC}),this._p2pChannel.remoteMediaSsrcChanged(a,e,i).then((t=>{if(t&&(fb.debug(\"[\".concat(this._clientId,\"] resubscribe \").concat(e,\" for user \").concat(a.uid,\" after rejoin because SSRC id changed.\")),this._p2pChannel instanceof fB))return this._p2pChannel.unsubscribe(a,e,!0).then((()=>this._subscribe(a,e,!0).catch((e=>{fb.error(\"[\".concat(this._clientId,\"] resubscribe error\"),e.toString())}))))})),this._p2pChannel.hasPendingRemoteMedia(a,e)&&(fb.debug(\"[\".concat(this._clientId,\"] resubscribe \").concat(e,\" for user \").concat(a.uid,\" after reconnect.\")),this._subscribe(a,e,!0).catch((e=>{fb.error(\"[\".concat(this._clientId,\"] resubscribe error\"),e.toString())})))})),Fg(this,\"_handleRemoveStream\",(e=>{if(XA(\"BLOCK_LOCAL_CLIENT\")&&Ob(e.uid,this.channelName))return;const t=this._users.find((t=>t.uid===e.uid));if(!t)return void fb.warning(\"[\".concat(this._clientId,\"] can not find target user!(on_remove_stream)\"));fb.debug(\"[\".concat(this._clientId,\"] stream removed with uid \").concat(e.uid));let i=()=>{};t.hasAudio&&t.hasVideo?i=()=>{fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished audio track\")),this.safeEmit(zy.USER_UNPUBLISHED,t,\"audio\"),fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished video track\")),this.safeEmit(zy.USER_UNPUBLISHED,t,\"video\")}:t.hasVideo?i=()=>{fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished video track\")),this.safeEmit(zy.USER_UNPUBLISHED,t,\"video\")}:t.hasAudio&&(i=()=>{fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished audio track\")),this.safeEmit(zy.USER_UNPUBLISHED,t,\"audio\")}),t._video_pre_subscribed||t._audio_pre_subscribed||(t._trust_audio_stream_added_state_=!0,t._trust_video_stream_added_state_=!0,t._audio_added_=!1,t._video_added_=!1,this._p2pChannel instanceof fB&&this._p2pChannel.unsubscribe(t).then((e=>{if(e)return this._gateway.unsubscribe(e,t.uid)})),t._audioSSRC=void 0,t._videoSSRC=void 0,t._audioOrtc=void 0,t._videoOrtc=void 0,t._rtxSsrcId=void 0),vb.onGatewayStream(this._sessionId,gb.ON_REMOVE_STREAM,Rb.ON_REMOVE_STREAM,{peer:e.uint_id||e.uid}),i()})),Fg(this,\"_handleSetStreamLocalEnable\",((e,t,i)=>{if(XA(\"BLOCK_LOCAL_CLIENT\")&&Ob(t,this.channelName))return;const n=this._users.find((e=>e.uid===t));if(!n)return void fb.error(\"[\".concat(this._clientId,\"] can not find target user!(disable_local)\"));fb.debug(\"[\".concat(this._clientId,\"] local \").concat(e,\" \").concat(i?\"enabled\":\"disabled\",\" with uid \").concat(t));const r=\"audio\"===e?n.hasAudio:n.hasVideo;if(\"audio\"===e){n._trust_audio_enabled_state_=!0;const e=n._audio_enabled_;if(n._audio_enabled_=i,n._audio_enabled_===e)return;{const e=n._audio_enabled_?\"enable-local-audio\":\"disable-local-audio\";fb.debug(\"[\".concat(this._clientId,\"] user-info-updated, uid: \").concat(t,\", msg: \").concat(e)),this.safeEmit(zy.USER_INFO_UPDATED,t,e)}}else{n._trust_video_enabled_state_=!0;const e=n._video_enabled_;if(n._video_enabled_=i,n._video_enabled_===e)return;{const e=n._video_enabled_?\"enable-local-video\":\"disable-local-video\";fb.debug(\"[\".concat(this._clientId,\"] user-info-update, uid: \").concat(t,\", msg: \").concat(e)),this.safeEmit(zy.USER_INFO_UPDATED,t,e)}}const o=\"audio\"===e?n.hasAudio:n.hasVideo;return r!==o?!r&&o?(fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(t,\" published \").concat(e)),void this.safeEmit(zy.USER_PUBLISHED,n,e)):(\"video\"===e&&n._videoTrack&&n._videoTrack._destroy(),\"audio\"===e&&n._audioTrack,this._p2pChannel.muteRemote(n,e),fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(t,\" unpublished \").concat(e)),void this.safeEmit(zy.USER_UNPUBLISHED,n,e)):void 0})),Fg(this,\"_handleMuteStream\",((e,t,i)=>{if(XA(\"BLOCK_LOCAL_CLIENT\")&&Ob(e,this.channelName))return;fb.debug(\"[\".concat(this._clientId,\"] receive mute message\"),e,t,i);const n=this._users.find((t=>t.uid===e));if(!n)return void fb.warning(\"[\".concat(this._clientId,\"] can not find remote user, ignore mute event, uid: \").concat(e));const r=\"audio\"===t?n.hasAudio:n.hasVideo;if(\"audio\"===t){n._trust_audio_mute_state_=!0;const t=n._audio_muted_;if(n._audio_muted_=i,n._audio_muted_===t)return;{const t=n._audio_muted_?\"mute-audio\":\"unmute-audio\";fb.debug(\"[\".concat(this._clientId,\"] user-info-update, uid: \").concat(e,\", msg: \").concat(t)),this.safeEmit(zy.USER_INFO_UPDATED,e,t)}}else{n._trust_video_mute_state_=!0;const t=n._video_muted_;if(n._video_muted_=i,n._video_muted_===t)return;{const t=n._video_muted_?\"mute-video\":\"unmute-video\";fb.debug(\"[\".concat(this._clientId,\"] user-info-update, uid: \").concat(e,\", msg: \").concat(t)),this.safeEmit(zy.USER_INFO_UPDATED,e,t)}}const o=\"audio\"===t?n.hasAudio:n.hasVideo;if(r!==o){if(!r&&o){return(\"audio\"===t?n._audioSSRC:n._videoSSRC)?(fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(e,\" published \").concat(t)),void this.safeEmit(zy.USER_PUBLISHED,n,t)):void fb.warning(\"[\".concat(this._clientId,\"] remote user \").concat(e,\" receive \").concat(t,\" unmute message  before add stream message, \").concat(t,\" SSRC doesn't exist yet.\"))}\"video\"===t&&n._videoTrack&&!n._video_pre_subscribed&&n._videoTrack._destroy(),\"audio\"===t&&n._audioTrack,this._p2pChannel.muteRemote(n,t),fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(e,\" unpublished \").concat(t)),this.safeEmit(zy.USER_UNPUBLISHED,n,t)}})),Fg(this,\"_handleP2PLost\",(async e=>{fb.debug(\"[\".concat(this._clientId,\"] receive p2p lost\"),e),parseInt(e.p2pid,10)===this.store.p2pId?await this._p2pChannel.requestReconnect():fb.warning(\"[\".concat(this._clientId,\"] P2PLost stream not found\"),e)})),Fg(this,\"_handleTokenWillExpire\",(()=>{fb.debug(\"[\".concat(this._clientId,\"] received message onTokenPrivilegeWillExpire\")),this.safeEmit(zy.ON_TOKEN_PRIVILEGE_WILL_EXPIRE)})),Fg(this,\"_handleBeforeUnload\",(e=>{\"beforeunload\"===e.type&&void 0!==e.returnValue&&\"\"!==e.returnValue||(this.leave(),fb.info(\"[\".concat(this._clientId,\"] auto leave onbeforeunload or pagehide\")))})),Fg(this,\"_handleUpdateNetworkQuality\",(()=>{if(\"normal\"===this._networkQualitySensitivity)return;if(navigator&&void 0!==navigator.onLine&&!navigator.onLine)return void this.safeEmit(zy.NETWORK_QUALITY,{downlinkNetworkQuality:6,uplinkNetworkQuality:6});const e={downlinkNetworkQuality:0,uplinkNetworkQuality:0};e.uplinkNetworkQuality=this._p2pChannel.getUplinkNetworkQuality(),e.downlinkNetworkQuality=this._p2pChannel.getDownlinkNetworkQuality(),this.safeEmit(zy.NETWORK_QUALITY,e)})),Fg(this,\"_handleP2PAddAudioOrVideoStream\",((e,t,i,n)=>{const r=this._users.find((e=>e.uid===t));if(!r)return void fb.error(\"[\".concat(this._clientId,\"] can not find target user!(on_add_stream)\"));fb.debug(\"[\".concat(this._clientId,\"] stream added with uid \").concat(t,\", type \").concat(e)),this.store.subscribe(r.uid,e,void 0,void 0,void 0,Date.now());const o=\"audio\"===e?r.hasAudio:r.hasVideo;\"audio\"===e?r._trust_audio_stream_added_state_=!0:r._trust_video_stream_added_state_=!0,\"audio\"===e?(r._audio_added_=!0,void 0!==i&&(r._audioSSRC=i),void 0!==n&&(r._audioMid=n)):(r._video_added_=!0,void 0!==i&&(r._videoSSRC=i),void 0!==n&&(r._videoMid=n)),(\"audio\"===e?r.hasAudio:r.hasVideo)&&!o&&(fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(r.uid,\" published \").concat(e)),this.safeEmit(zy.USER_PUBLISHED,r,e)),this._p2pChannel.hasPendingRemoteMedia(r,e)&&(fb.debug(\"[\".concat(this._clientId,\"] resubscribe \").concat(e,\" for user \").concat(r.uid,\" after reconnect.\")),this._subscribe(r,e,!0).catch((e=>{fb.error(\"[\".concat(this._clientId,\"] resubscribe error\"),e.toString())})))})),this._config=e,this._clientId=TA(5,\"client-\"),this.store=new $A(e.codec,e.audioCodec,e.mode,this._clientId),this.store.clientCreated(),e.proxyServer&&this.setProxyServer(e.proxyServer,!0),e.turnServer&&this.setTurnServer(e.turnServer,!0),fb.info(\"[\".concat(this._clientId,\"] Initializing AgoraRTC client v\").concat(GA,\" build: \").concat(qA,\", mode: \").concat(this.mode,\", codec: \").concat(this.codec)),e.clientRoleOptions)try{qy(e.clientRoleOptions),t=Object.assign({},e.clientRoleOptions)}catch(e){fb.warning(\"[\".concat(this._clientId,\"] \").concat(e.toString()))}this._statsCollector=new DF(this.store),this._statsCollector.onStatsException=(e,t,i)=>{fb.debug(\"[\".concat(this._clientId,\"] receive exception msg, code: \").concat(e,\", msg: \").concat(t,\", uid: \").concat(i)),this.safeEmit(zy.EXCEPTION,{code:e,msg:t,uid:i})},this._statsCollector.onUploadPublishDuration=(e,t,i,n)=>{const r=this._users.find((t=>t.uid===e));r&&vb.peerPublishStatus(this._sessionId,{subscribeElapse:n,audioPublishDuration:t,videoPublishDuration:i,peer:r._uintid})},this.store.useP2P=\"p2p\"===e.mode,this._gateway=new Ex(this.store,{clientId:this._clientId,mode:this.mode,codec:this.codec,websocketRetryConfig:e.websocketRetryConfig||PA,httpRetryConfig:e.httpRetryConfig||PA,forceWaitGatewayResponse:void 0===e.forceWaitGatewayResponse||e.forceWaitGatewayResponse,statsCollector:this._statsCollector,role:e.role,clientRoleOptions:t}),this._configDistribute=new tV,this.store.useP2P?(this._p2pChannel=new bF(this.store,this._statsCollector),this._handleP2PEvents()):this._p2pChannel=new fB(this.store,this._statsCollector),this._handleP2PChannelEvents(),this._handleGatewayEvents(),this._handleGatewaySignalEvents()}async joinMeta(e,t,i,n,r){let o=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],s=arguments.length>6&&void 0!==arguments[6]&&arguments[6];JA(\"JOIN_GATEWAY_USE_443PORT_ONLY\",o),JA(\"JOIN_GATEWAY_USE_DUAL_DOMAIN\",s);const a=this._gateway.signal.websocket;return a instanceof WO&&(a.use443PortOnly=o,a.tryDoubleDomain=s),async function(e,t,i){Uv.get(e)||Uv.set(e,[]),xv.get(e)||xv.set(e,t),Vv.get(e)||Vv.set(e,0);const n=Uv.get(e),r=xv.get(e);if(!n||!r)throw new Error(\"concurrent: deferQueue or maxConcurrency is null\");if(Vv.get(e)===r){const e=Mv();n.push(e),await e.promise}Vv.set(e,Vv.get(e)+1);for(var o=arguments.length,s=new Array(o>3?o-3:0),a=3;a<o;a++)s[a-3]=arguments[a];const c=await i(...s);return Vv.set(e,Vv.get(e)-1),Vv.get(e)===r-1&&n.length>0&&(n[0].resolve(),n.shift()),0===Vv.get(e)&&(Uv.set(e,[]),xv.set(e,0),Vv.set(e,0)),c}(\"client.join\",XA(\"JOIN_MAX_CONCURRENCY\"),this.join.bind(this),e,t,i,n,r)}async join(e,t,i,n,r){const o=++this._numberOfJoinCount;this.store.joinStart(),n&&(this.store.uid=n);const s=\"HTTPS\"===(UA||UA||(UA=(window.location.protocol.split(\":\")[0]||\"\").toUpperCase(),UA)),a=jA()?window.isSecureContext:\"Browser Not Support\";if(!jA()&&!s||!window.isSecureContext){const e=\"The website must be running in a secure context (About secure context: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts ), otherwise the media collection will be restricted by the browser\";fb.warning(e)}\"DISCONNECTED\"===this.connectionState&&(this.store.avoidJoinStart=Math.round(Date.now()),fb.debug(\"[\".concat(this._clientId,\"] set avoidJoinStart to \").concat(this.store.avoidJoinStart))),vb.setAppId(e);try{if(!i&&null!==i)throw new yb(Ry.INVALID_PARAMS,\"Invalid token: \".concat(i,\". If you don not use token, set it to null\"));i&&by(i,\"token\",1,2047),by(e,\"appid\",1,2047),xw(t),n&&Vw(n),r&&by(r,\"optionalInfo\",1,2047)}catch(r){throw vb.reportApiInvoke(SA(),{name:By.JOIN,options:[e,t,i,n],states:{isHttps:s,isSecureContext:a},tag:jy.TRACER}).onError(r),r}if(this._leaveMutex.isLocked){fb.debug(\"[\".concat(this._clientId,\"] join: waiting leave operation\"));(await this._leaveMutex.lock())(),fb.debug(\"[\".concat(this._clientId,\"] join: continue\"))}if(this._joinAndNotLeaveYet=!0,\"DISCONNECTED\"!==this.connectionState){const r=new yb(Ry.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already in connecting/connected state\"));throw vb.reportApiInvoke(SA(),{name:By.JOIN,options:[e,t,i,n],states:{isHttps:s,isSecureContext:a},tag:jy.TRACER}).onError(r),r}this._gateway.state=\"CONNECTING\";const c=await YB({appId:e,cname:t,uid:n,stringUid:\"string\"==typeof n?n:void 0,token:i||e,cloudProxyServer:this._cloudProxyServerMode});if(!this._joinAndNotLeaveYet)throw new yb(Ry.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"));const d=(null==c?void 0:c.sid)||SA();fb.info(\"[\".concat(this._clientId,\"] start join channel \").concat(t,\", join number: \").concat(o)),this._sessionId||(this._sessionId=d,this.store.sessionId=this._sessionId);const l=vb.reportApiInvoke(d,{name:By.JOIN,options:[e,t,i,n],states:{isHttps:s,isSecureContext:a},tag:jy.TRACER}),u=IG(IG(IG({},this._rtmConfig),{},{clientId:this._clientId,appId:e,sid:this._sessionId,cname:t,uid:\"string\"!=typeof n?n:null,turnServer:this._turnServer,proxyServer:this._proxyServer,token:i||e,cloudProxyServer:this._cloudProxyServerMode,optionalInfo:r,license:this._license,useLocalAccessPoint:this._useLocalAccessPoint,preload:!!c},void 0!==this._remoteDefaultVideoStreamType&&{defaultVideoStream:this._remoteDefaultVideoStreamType}),{},{apRequestDetail:XA(\"AP_REQUEST_DETAIL\")||void 0});if(this._useLocalAccessPoint&&(u.setLocalAPVersion=this._setLocalAPVersion),\"string\"==typeof n&&(u.stringUid=n,this._uintUid?(u.uid=this._uintUid,this._uintUid=void 0):u.uid=0),\"none\"!==this._encryptionMode&&this._encryptionSecret){if(u.aesmode=this._encryptionMode,u.aespassword=await(async e=>{const t=function(e){const t=window.atob(\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDCMnXAHkKIGAM+x4N22gCI+Wyu\\nSTM9ztkT3uYslTT2PuKmZfPzhH6kVdO7PTjGCOZnAsyb3oTtWat0KcxQ4jxvqQV+\\nHvYl3iI1Yd4vl2c3qRMJPLtRDfNxa2Mcxgq7e9aEUibzdd0st+OJAy3tOj/Y0aVy\\nxQiYDz3vqa6bP29adwIDAQAB\"),i=new Uint8Array(new ArrayBuffer(t.length));for(let e=0;e<t.length;e+=1)i[e]=t.charCodeAt(e);return i}(),i=await window.crypto.subtle.importKey(\"spki\",t,{name:\"RSA-OAEP\",hash:\"SHA-256\"},!0,[\"encrypt\"]),n=ky(e),r=await window.crypto.subtle.encrypt({name:\"RSA-OAEP\"},i,n);return function(e){let t=\"\";for(let i=0;i<e.length;i+=1)t+=String.fromCharCode(e[i]);return window.btoa(t)}(new Uint8Array(r))})(this._encryptionSecret),!this._joinAndNotLeaveYet)throw new yb(Ry.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"));this._encryptionSalt&&(u.aessalt=this._encryptionSalt)}if(this._encryptDataStream&&(\"aes-128-gcm2\"===this._encryptionMode||\"aes-256-gcm2\"===this._encryptionMode))if(this._encryptionSalt&&this._encryptionSecret)if(window.crypto.subtle){const e=new TextEncoder,t=XA(\"USE_PURE_ENCRYPTION_MASTER_KEY\")?e.encode(u.appId+this._encryptionSecret+this._encryptionSecret):e.encode(u.appId+u.cname+this._encryptionSecret);this._encryptDataStreamIv=await async function(e,t,i){const n=await window.crypto.subtle.importKey(\"raw\",t,\"PBKDF2\",!1,[\"deriveBits\",\"deriveKey\"]),r=\"aes-128-gcm2\"===e?128:256,o=await window.crypto.subtle.deriveBits({name:\"PBKDF2\",iterations:nb,hash:\"SHA-256\",salt:i},n,r+ib);return new Uint8Array(o).subarray(r/8)}(this._encryptionMode,t,lA(this._encryptionSalt)),this._encryptDataStreamKey=await async function(e,t,i){const n=await window.crypto.subtle.importKey(\"raw\",t,\"PBKDF2\",!1,[\"deriveBits\",\"deriveKey\"]),r=\"aes-128-gcm2\"===e?128:256;return await window.crypto.subtle.deriveKey({name:\"PBKDF2\",iterations:nb,hash:\"SHA-256\",salt:i},n,{name:\"AES-GCM\",length:r},!0,[\"encrypt\",\"decrypt\"])}(this._encryptionMode,t,lA(this._encryptionSalt))}else a?fb.warning(\"[\".concat(this._clientId,\"] encrypt datastream must be running in a secure context, fallback to plain data stream\")):fb.warning(\"[\".concat(this._clientId,\"] current browser do not support WebCrypto ,fallback to plain data stream\")),this._encryptDataStream=!1;else this._encryptDataStream=!1,fb.debug(\"[\".concat(this._clientId,\"] no salt / secret, cannot support encrypt data stream, fallback to plain data stream\"));this._startSession(this._sessionId,{channel:t,appId:e,stringUid:u.stringUid});const h=this._sessionId;setTimeout((()=>{\"CONNECTING\"===this.connectionState&&h===this._sessionId&&vb.joinChannelTimeout(this._sessionId,5)}),5e3);try{var p;let n;const r=u.cloudProxyServer;if(Dn(p=[\"proxy3\",\"proxy4\",\"proxy5\"]).call(p,r)){const e=XA(\"PROXY_SERVER_TYPE3\");Array.isArray(e)?u.proxyServer=e[0]:u.proxyServer=e}if(vb.setProxyServer(u.proxyServer),fb.setProxyServer(u.proxyServer),this.store.requestAPStart(),c){if(fb.debug(\"[\".concat(this._clientId,\"] get serverInfo Success from Preload Cache \").concat(u.stringUid?\", \".concat(u.stringUid,\" => \").concat(c.intUid):\"\",\" \")),u.stringUid&&!u.uid&&(u.uid=c.intUid),n={gatewayInfo:c.ap.gatewayInfo},XA(\"JOIN_WITH_FALLBACK_MEDIA_PROXY\")&&\"auto\"===u.turnServer.mode)if(0===c.ap.proxyInfo.addresses.length)fb.warning(\"no edge services in ap response of proxy fallback, will not set proxy in iceServers\");else{const e=(await tN(c.ap.proxyInfo,c.ap.gatewayInfo.uid)).map((e=>({turnServerURL:e.address,tcpport:e.tcpport||KA.tcpport,udpport:e.udpport||KA.udpport,username:e.username||KA.username,password:e.password||KA.password,forceturn:!1,security:!0})));u.turnServer={mode:\"manual\",servers:e}}XB(c,u.stringUid)}else{if(u.stringUid&&!u.uid){let e;[e,n]=await Gh.all([Yx(u.stringUid,u,this._axiosCancelSource.token,this._config.httpRetryConfig||PA,this.store),Kx(u,this._axiosCancelSource.token,this._config.httpRetryConfig||PA,!0,this.store)]),fb.debug(\"[\".concat(this._clientId,\"] getUserAccount Success \").concat(u.stringUid,\" => \").concat(e)),u.uid=e,n.gatewayInfo.uid=e,n.gatewayInfo.res.uid=e}else n=await Kx(u,this._axiosCancelSource.token,this._config.httpRetryConfig||PA,!0,this.store);if(!this._joinAndNotLeaveYet)throw new yb(Ry.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"))}this.store.requestAPEnd(),setTimeout((()=>{this._configDistribute.startGetConfigDistribute(u,this._axiosCancelSource.token),this._configDistribute.on(sO.UPDATE_BITRATE_LIMIT,(e=>{this._p2pChannel.updateBitrateLimit(e)}))}),0),this._key=i||e;const o=n.gatewayInfo,s=u.uid?u.uid:o.uid;this._joinInfo=IG(IG({},u),{},{cid:o.cid,uid:s,vid:o.vid,apResponse:o.res,apGatewayAddress:o.apGatewayAddress,uni_lbs_ip:o.uni_lbs_ip,gatewayAddrs:o.gatewayAddrs}),this.store.intUid=s;const a=await this._joinGateway();if(!this._joinAndNotLeaveYet)throw new yb(Ry.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"));l.onSuccess(a),this._appId=e,this._channelName=u.cname,this._uid=a,this.store.uid=a,setTimeout((()=>{this._networkQualityInterval&&window.clearInterval(this._networkQualityInterval),this._networkQualityInterval=window.setInterval(this._handleUpdateNetworkQuality,2e3),window.addEventListener(Xv()?\"beforeunload\":\"pagehide\",this._handleBeforeUnload),this._statsCollector.startUpdateStats()}),0);const d=u.stringUid?\"string uid: \".concat(u.stringUid,\",uid: \").concat(u.uid):\"uid: \".concat(this._uid);return fb.info(\"[\".concat(this._clientId,\"] Joining channel success: channel: \").concat(t,\",\").concat(d)),setTimeout((()=>{fb.startUpload()}),5e3),this.store.joinEnd(),_=this,Dn(wb).call(wb,_)||wb.push(_),\"disabled\"===this._cloudProxyServerMode&&ZP().supportWebCrypto&&XA(\"ENABLE_PRELOAD\")&&zB(this._joinInfo),a}catch(e){const t=Array.isArray(e)?e[0]:e;throw t&&t.code===Ry.OPERATION_ABORTED?fb.warning(\"[\".concat(this._clientId,\"] join number: \").concat(o,\", Joining channel failed, rollback\"),t):fb.error(\"[\".concat(this._clientId,\"] join number: \").concat(o,\", Joining channel failed, rollback\"),t),t.code!==Ry.OPERATION_ABORTED&&this._numberOfJoinCount===o&&(this._gateway.state=\"DISCONNECTED\",this._reset()),l.onError(t),t}var _}_joinGateway(){if(!this._joinInfo||!this._key)throw new yb(Ry.INVALID_OPERATION);return this._gateway.join(this._joinInfo,this._key,!(\"disabled\"!==this._joinInfo.cloudProxyServer||this._joinInfo.proxyServer||!XA(\"JOIN_WITH_FALLBACK_SIGNAL_PROXY\")))}async leave(){fb.info(\"[\".concat(this._clientId,\"] Leaving channel\")),window.removeEventListener(Xv()?\"beforeunload\":\"pagehide\",this._handleBeforeUnload),this._reset(),function(e){const t=wb.indexOf(e);-1!==t&&wb.splice(t,1)}(this),this._statsCollector.stopUpdateStats();const e=await this._leaveMutex.lock();if(\"DISCONNECTED\"===this.connectionState)return fb.info(\"[\".concat(this._clientId,\"] Leaving channel repeated, success\")),void e();await this._gateway.leave(\"CONNECTED\"!==this.connectionState),fb.info(\"[\".concat(this._clientId,\"] Leaving channel success\")),this._joinAndNotLeaveYet=!1,this.store.resetJoinChannelServiceRecords(),e()}async publish(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!Array.isArray(e)){if(!(e instanceof HL))return this._publishDataChannel(e);e=[e]}if(0===e.length)throw new yb(Ry.INVALID_PARAMS,\"param list is empty\");const i=e;if(\"audience\"===this._gateway.role)throw new yb(Ry.INVALID_OPERATION,\"audience can not publish stream\");for(const e of i){if(!(e instanceof HL))throw new yb(Ry.INVALID_PARAMS,\"parameter is not local track\");if(!e._enabled&&t)throw new yb(Ry.TRACK_IS_DISABLED,\"can not publish a disabled track: \".concat(e.getTrackId()))}fb.info(\"[\".concat(this._clientId,\"] Publishing tracks, id \").concat(i.map((e=>\"\".concat(e.getTrackId(),\" \")))));const n=await this._publishMutex.lock();await this._configDistribute.awaitConfigDistributeComplete(),t&&i.forEach((e=>{const t=this._configDistribute.getBitrateLimit();e instanceof aU&&t&&e.setBitrateLimit(t.uplink)}));try{await this._publishHighStream(i),fb.info(\"[\".concat(this._clientId,\"] Publish success, id \").concat(i.map((e=>\"\".concat(e.getTrackId(),\" \")))))}catch(e){throw fb.error(\"[\".concat(this._clientId,\"] publish error\"),e.toString()),e}finally{n()}}async _publishDataChannel(e){yy(e.id,\"id\",0,65535,!0),Iy(e.ordered,\"ordered\"),by(e.metadata,\"metadata\",0,512),fb.info(\"[\".concat(this._clientId,\"] Publishing datachannels, id \").concat(e.id));const t=await this._publishMutex.lock();try{if(-1!==this._p2pChannel.getAllDataChannels().findIndex((t=>t.id===e.id)))throw new yb(Ry.INVALID_PARAMS,\"Invalid id: \".concat(e.id,\". If you want to republish the datachannel, unpublish first\"));if(!this._joinInfo||void 0===this._uid)throw new yb(Ry.INVALID_OPERATION,\"Can't publish datachannel, haven't joined yet!\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new yb(Ry.INVALID_OPERATION,\"can not publish datachannel in \".concat(this.connectionState,\" state\"));if(\"auto\"===this._turnServer.mode&&XA(\"FORCE_TURN\")&&!XA(\"TURN_ENABLE_TCP\")&&!XA(\"TURN_ENABLE_UDP\"))throw new yb(Ry.UNEXPECTED_ERROR,\"force TURN With No TURN Configuration\");const i=function(e){return RB(e,!1)}(e),n=await this._p2pChannel.publishDataChannel([i]);if(n.length>0){if(\"number\"!=typeof i._originDataChannelId)throw fb.error(\"[\".concat(this._clientId,\"] can not publish with mediaType datachannel, cannot get RTCDatachannel id\")),new yb(Ry.CREATE_DATACHANNEL_ERROR);try{await Gh.all(n.map((e=>this._uid&&this._gateway.publishDataChannel(this._uid,e,!0)))),await i._waitTillOpen()}catch(e){if(e.code!==Ry.DISCONNECT_P2P)throw e}}return fb.info(\"[\".concat(this._clientId,\"] Publish dataChannels success, id \").concat(i.id)),i}catch(e){throw fb.error(\"[\".concat(this._clientId,\"] publish datachannels error\"),e.toString()),e}finally{t()}}async unpublish(e){if(!this._joinInfo||void 0===this._uid)throw new yb(Ry.INVALID_OPERATION,\"Can't unpublish stream, haven't joined yet!\");let t=[];if(e)if(Array.isArray(e))t=e;else{if(!(e instanceof HL))return this._unpublishDataChannel([e]);t=[e]}else this.store.useP2P||await this._unpublishDataChannel(),t=this._p2pChannel.getAllTracks(!0);fb.info(\"[\".concat(this._clientId,\"] Unpublish tracks, tracks \").concat(t.map((e=>\"\".concat(e.getTrackId(),\" \"))),\" \"));const i=await this._publishMutex.lock();try{if(this._p2pChannel instanceof bF){const e=await this._p2pChannel.unpublish(t);e&&await this._gateway.sendExtensionMessage(IO.UNPUBLISH,{unpubMsg:e},!0)}else{const e=await this._p2pChannel.unpublish(t);e&&await this._gateway.unpublish(e,this._uid),fb.info(\"[\".concat(this._clientId,\"] Unpublish success,tracks \").concat(t.map((e=>\"\".concat(e.getTrackId())))))}}catch(e){throw fb.error(\"[\".concat(this._clientId,\"] unpublish error\"),e.toString()),e}finally{i&&i()}}async _unpublishDataChannel(e){void 0!==e&&0!==e.length||(e=this._p2pChannel.getAllDataChannels()),fb.info(\"[\".concat(this._clientId,\"] Unpublish datachannels, datachannels \").concat(e.map((e=>\"\".concat(e.id,\" \"))),\" \"));const t=await this._publishMutex.lock();try{const i=await this._p2pChannel.unpublishDataChannel(e);i&&await this._gateway.unpublishDataChannel(i),fb.info(\"[\".concat(this._clientId,\"] Unpublish dataChannel success,dataChannel \").concat(e.map((e=>\"\".concat(e.id)))))}catch(e){throw fb.error(\"[\".concat(this._clientId,\"] unpublish dataChannel error\"),e.toString()),e}finally{t&&t()}}async subscribe(e,t,i){if(!(e instanceof cF)){const t=this.remoteUsers.find((t=>t.uid===e));if(!t)throw new yb(Ry.INVALID_REMOTE_USER,\"user is not in the channel\");e=t}return\"datachannel\"===t?this._subscribeDataChannel(e,i):this._subscribe(e,t)}async presubscribe(e,t){if(vy(t,\"mediaType\",[\"audio\",\"video\"]),this._p2pChannel instanceof bF)throw new yb(Ry.INVALID_OPERATION,\"can't presub at p2p mode\");if(!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"can't presub when not join\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new yb(Ry.INVALID_OPERATION,\"can't presub in \".concat(this.connectionState,\" state\"));const i=t===dO.AUDIO,n=t===dO.VIDEO,r=await this._subscribeMutex.lock();try{const{ssrcId:o,ortc:s,rtxSsrcId:a,cname:c,uint_id:d}=await this._gateway.presubscribe(e,t,!0);if(null==o)throw new yb(Ry.UNEXPECTED_RESPONSE,\"no ssrc id\");let l=this._users.find((t=>t.uid===e));l||(l=new cF(e,d||e),l._is_pre_created=!0,this._users.push(l)),c&&(l._cname=c),l._uintid||(l._uintid=d||e),i&&(l._audioSSRC=o,l._audio_pre_subscribed=!0,s&&(l._audioOrtc=s)),n&&(l._videoSSRC=o,l._video_pre_subscribed=!0,s&&(l._videoOrtc=s),null!=a&&(l._rtxSsrcId=a)),fb.info(\"[\".concat(this._clientId,\"] presub succeed ssrc: \").concat(o)),await this._p2pChannel.subscribe(l,t,o,a,s);const u=i?l._audioTrack:l._videoTrack;if(!u)throw new yb(Ry.UNEXPECTED_ERROR,\"can not find remote track in user\");return i&&(l._trust_audio_stream_added_state_=!0,l._audio_added_=!0),n&&(l._trust_video_stream_added_state_=!0,l._video_added_=!0),u}catch(t){throw fb.error(\"[\".concat(this._clientId,\"] presub user \").concat(e,\" error\"),t),t}finally{r()}}async _subscribeDataChannel(e,t){var i;if(yy(t,\"channelId\",0,65535,!0),!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"Can't subscribe datachannel, not joined\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new yb(Ry.INVALID_OPERATION,\"Can't subscribe datachannel in \".concat(this.connectionState,\" state\"));const n=this._users.find((t=>t===e));if(!n)throw fb.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", this user is not in the channel\")),new yb(Ry.INVALID_REMOTE_USER,\"user is not in the channel\");if(!e.hasAudio&&!e.hasVideo&&0===e._dataChannels.length)throw fb.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", user is not published\")),new yb(Ry.INVALID_REMOTE_USER,\"user is not published\");const r=null===(i=e._dataChannels)||void 0===i?void 0:i.find((e=>e.id===t));if(!r)throw fb.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\" with mediaType datachannel, remote datachannel is not published\")),new yb(Ry.REMOTE_USER_IS_NOT_PUBLISHED);const o=await this._subscribeMutex.lock();fb.info(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\", mediaType: datachannel\"));try{const t=await this._p2pChannel.subscribeDataChannel(e,[r]);if(t&&Dn(t).call(t,r.id))try{var s;if(\"number\"!=typeof r._originDataChannelId)throw fb.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\" with mediaType datachannel, cannot get RTCDatachannel\")),new yb(Ry.CREATE_DATACHANNEL_ERROR);const t={id:r.id,datachannelId:r._originDataChannelId,ordered:r.ordered,maxRetransmits:r.maxRetransmits,metadata:null!==(s=r.metadata)&&void 0!==s?s:\"\"};await this._gateway.subscribeDataChannel(e.uid,t,!0),await r._waitTillOpen()}catch(t){if((null==t?void 0:t.code)!==Ry.WS_ABORT)throw await this._p2pChannel.unsubscribeDataChannel(e,[r]),t;await this._p2pChannel.unsubscribeDataChannel(e,[r]),this._p2pChannel.setPendingRemoteDataChannel(e,r.id)}return fb.info(\"[\".concat(this._clientId,\"] subscribe success user \").concat(e.uid,\", mediaType: datachannel\")),r}finally{o()}}async _p2pSubscribe(e,t,i){if(vy(t,\"mediaType\",[\"audio\",\"video\"]),!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"Can't subscribe stream, not joined\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new yb(Ry.INVALID_OPERATION,\"Can't subscribe stream in \".concat(this.connectionState,\" state\"));const n=this._users.find((t=>t===e));if(!n){const t=new yb(Ry.INVALID_REMOTE_USER,\"user is not in the channel\");throw fb.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", this user is not in the channel\")),t}if(!e.hasAudio&&!e.hasVideo){const t=new yb(Ry.INVALID_REMOTE_USER,\"user is not published\");throw fb.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", user is not published\")),t}if(!i&&(\"audio\"===t&&!e.hasAudio||\"video\"===t&&!e.hasVideo)){const i=new yb(Ry.REMOTE_USER_IS_NOT_PUBLISHED);throw fb.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\" with mediaType \").concat(t,\", remote track is not published\")),i}const r=await this._subscribeMutex.lock();fb.info(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\", mediaType: \").concat(t));try{if(await this._p2pChannel.hasRemoteMediaWithLock(e,t))await this._p2pChannel.unmuteRemote(e,t);else try{const i=\"audio\"===t?e._audioSSRC:e._videoSSRC,n=\"audio\"===t?e._audioMid:e._videoMid;this.store.subscribe(e.uid,t,Date.now()),this._p2pChannel instanceof bF&&await this._p2pChannel.subscribe(e,t,i,n)}catch(e){throw e}fb.info(\"[\".concat(this._clientId,\"] subscribe success user \").concat(e.uid,\", mediaType: \").concat(t)),this._defaultStreamFallbackType&&this.setStreamFallbackOption(e.uid,this._defaultStreamFallbackType).catch((e=>{fb.warning(\"[\".concat(this._clientId,\"] auto set fallback failed\"),e)}));const i=\"audio\"===t?e._audioTrack:e._videoTrack;if(!i)throw new yb(Ry.UNEXPECTED_ERROR,\"can not find remote track in user object\");return i}catch(t){throw fb.error(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\" error\"),t),t}finally{r()}}async _subscribe(e,t,i){if(this._p2pChannel instanceof bF)return this._p2pSubscribe(e,t);if(vy(t,\"mediaType\",[\"audio\",\"video\"]),!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"Can't subscribe stream, not joined\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new yb(Ry.INVALID_OPERATION,\"Can't subscribe stream in \".concat(this.connectionState,\" state\"));const n=this._users.find((t=>t===e));if(!n){const t=new yb(Ry.INVALID_REMOTE_USER,\"user is not in the channel\");throw fb.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", this user is not in the channel\")),t}if(!e.hasAudio&&!e.hasVideo){const t=new yb(Ry.INVALID_REMOTE_USER,\"user is not published\");throw fb.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", user is not published\")),t}if(!(i||(\"audio\"!==t||e.hasAudio&&void 0!==e._audioSSRC)&&(\"video\"!==t||e.hasVideo&&void 0!==e._videoSSRC))){const i=new yb(Ry.REMOTE_USER_IS_NOT_PUBLISHED);throw fb.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\" with mediaType \").concat(t,\", remote track is not published\")),i}let r=\"audio\"===t?e._audioSSRC:e._videoSSRC,o=\"audio\"===t?e._audioOrtc:e._videoOrtc,s=\"video\"===t?e._rtxSsrcId:void 0,a={stream_type:\"audio\"===t?dO.AUDIO:dO.VIDEO,ssrcId:r};const c=await this._subscribeMutex.lock();fb.info(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\", mediaType: \").concat(t));try{if(await this._p2pChannel.hasRemoteMediaWithLock(e,t))await this._p2pChannel.unmuteRemote(e,t);else try{const i=\"audio\"===t?e._audioSSRC:e._videoSSRC;void 0!==i&&i!==r&&(r=i,o=\"audio\"===t?e._audioOrtc:e._videoOrtc,s=\"video\"===t?e._rtxSsrcId:void 0,a={stream_type:\"audio\"===t?dO.AUDIO:dO.VIDEO,ssrcId:r}),rV.markSubscribeStart(this.store.clientId,r),this.store.subscribe(e.uid,t,Date.now()),await this._p2pChannel.subscribe(e,t,r,s,o);try{this._p2pChannel.isPreSubScribe(r)||await this._gateway.subscribe(e.uid,a,!0)}catch(i){if((null==i?void 0:i.code)!==Ry.WS_ABORT)throw await this._p2pChannel.unsubscribe(e,t),i;await this._p2pChannel.unsubscribe(e,t,!0),this._p2pChannel.setPendingRemoteMedia(e,t)}this.store.subscribe(e.uid,t,void 0,Date.now()),this._p2pChannel.reportSubscribeEvent(!0,null,e,t)}catch(i){throw this._p2pChannel.reportSubscribeEvent(!1,null==i?void 0:i.code,e,t),i}fb.info(\"[\".concat(this._clientId,\"] subscribe success user \").concat(e.uid,\", mediaType: \").concat(t)),this._defaultStreamFallbackType&&this.setStreamFallbackOption(e.uid,this._defaultStreamFallbackType).catch((e=>{fb.warning(\"[\".concat(this._clientId,\"] auto set fallback failed\"),e)}));const i=\"audio\"===t?e._audioTrack:e._videoTrack;if(!i)throw new yb(Ry.UNEXPECTED_ERROR,\"can not find remote track in user object\");return i}catch(t){throw fb.error(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\" error\"),t),t}finally{c()}}async massSubscribe(e){if(wy(e,\"subscribeList\"),!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"Can't subscribe stream, not joined\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new yb(Ry.INVALID_OPERATION,\"Can't subscribe stream in \".concat(this.connectionState,\" state\"));const t=Date.now(),i=new Map,n=await this._subscribeMutex.lock();fb.info(\"[\".concat(this._clientId,\"]start massSubscribe user \").concat(e.map((e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i)})).join(\"; \")));const r=(e=[...e]).map((e=>{let{user:t,mediaType:i}=e;return{user:t,mediaType:i}})),o=await this._p2pChannel.globalLock();try{var s;for(let t=e.length-1;t>=0;t--){const n=e[t],{user:o,mediaType:s}=n;if(vy(s,\"mediaType\",[\"audio\",\"video\"]),!o){const e=new yb(Ry.INVALID_PARAMS,\"user property does not exist in subscribeList item\");throw fb.error(\"[\".concat(this._clientId,\"] user property does not exist in subscribeList item\")),e}const a=this._users.find((e=>e===o));if(!a){const i=new yb(Ry.INVALID_REMOTE_USER,\"user is not in the channel\");fb.error(\"[\".concat(this._clientId,\"] can not massSubscribe \").concat(o.uid,\", this user is not in the channel\")),r[t].error=i,e.splice(t,1);continue}if(\"audio\"===s&&(!o.hasAudio||void 0===o._audioSSRC)||\"video\"===s&&(!o.hasVideo||void 0===o._videoSSRC)){const i=new yb(Ry.REMOTE_USER_IS_NOT_PUBLISHED);fb.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(o.uid,\" with mediaType \").concat(s,\", remote user is not published\")),r[t].error=i,e.splice(t,1);continue}const c=tO.Video|tO.LwoVideo,d=i.get(o);if(d){if(\"video\"===s?d&c:d&tO.Audio){e.splice(t,1),fb.warning(\"[\".concat(this._clientId,\"] repeat massSubscribe user:\").concat(o.uid,\", mediaType:\").concat(s,\" twice\"));continue}i.set(o,d|(\"video\"===s?c:tO.Audio))}else i.set(o,\"video\"===s?c:tO.Audio)}for(let t=e.length-1;t>=0;t--){const n=e[t],{user:r,mediaType:o}=n,s=tO.Video|tO.LwoVideo;if(this._p2pChannel.hasRemoteMedia(r,o)){await this._p2pChannel.unmuteRemoteNoLock(r,o);const n=i.get(r);i.set(r,\"video\"===o?n^s:n^tO.Audio),e.splice(t,1)}}this.store.massSubscribe(e.map((e=>({userId:e.user.uid,type:e.mediaType}))),t);let a=Jn(s=Array.from(i.entries())).call(s,((e,t)=>{let[i,n]=t;if(0===n)return e;const r={stream_id:i.uid,stream_type:n};return n&tO.Audio&&(r.audio_ssrc=i._audioSSRC),n&tO.Video&&(r.video_ssrc=i._videoSSRC),e.push(r),e}),[]);try{e.length>0&&await this._p2pChannel.massSubscribeNoLock(e.map((e=>{let{user:t,mediaType:i}=e;return{user:t,mediaType:i,ssrcId:i===dO.VIDEO?t._videoSSRC:t._audioSSRC,rtxSsrcId:i===dO.VIDEO?t._rtxSsrcId:void 0}})));const i=new Map;if(a=a.filter((e=>e.video_ssrc&&!this._p2pChannel.isPreSubScribe(e.video_ssrc)||e.audio_ssrc&&!this._p2pChannel.isPreSubScribe(e.audio_ssrc)||!e.video_ssrc&&!e.audio_ssrc)),a.length>0){const e=await this._gateway.subscribeAll(a,!0);((null==e?void 0:e.users)||[]).forEach((e=>{let{stream_id:t,video_error_code:n,audio_error_code:r,error_code:o}=e;(n||r||o)&&i.set(t,{video_error_code:n,audio_error_code:r,error_code:o})}))}if(Array.from(i.entries()).length>0){const e=[];Array.from(i.entries()).forEach((t=>{let[i,n]=t;const r=this.remoteUsers.find((e=>e.uid===i));if(r){let t;n.error_code||n.video_error_code&&n.audio_error_code?t=void 0:n.video_error_code?t=dO.VIDEO:n.audio_error_code&&(t=dO.AUDIO),e.push({user:r,mediaType:t})}})),e.length>0&&await this._p2pChannel.massUnsubscribeNoLock(e)}for(const e of r){const t=i.get(e.user.uid);if(t){const i=t.error_code||\"audio\"===e.mediaType&&t.audio_error_code||\"video\"===e.mediaType&&t.video_error_code;if(i){const t=NO(i);fb.error(\"user:\".concat(e.user.uid,\" mediaType:\").concat(e.mediaType,\" has massSubscribe error \").concat(t.desc)),e.error=new yb(Ry.SUBSCRIBE_FAILED,\"code \".concat(i,\": \").concat(t.desc))}}e.error||(\"video\"===e.mediaType?e.track=e.user.videoTrack:e.track=e.user.audioTrack)}return this.store.massSubscribe(r.filter((e=>!e.error)).map((e=>({userId:e.user.uid,type:e.mediaType}))),void 0,Date.now()),r.forEach((e=>{var i;vb.subscribe(this.store.sessionId,{succ:!!e.error,ec:(null===(i=e.error)||void 0===i?void 0:i.code)||null,video:e.mediaType===dO.VIDEO,audio:e.mediaType===dO.AUDIO,peerid:e.user.uid,subscribeRequestid:e.mediaType===dO.VIDEO?e.user._videoSSRC:e.user._audioSSRC,p2pid:this.store.p2pId,eventElapse:Math.floor(performance.now()-t),preSsrc:this._p2pChannel.isPreSubScribe(e.user._videoSSRC)},!0)})),fb.info(\"[\".concat(this._clientId,\"] massSubscribe success \").concat(e.map((e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i)})).join(\"; \"))),r}catch(t){throw await this._p2pChannel.massUnsubscribeNoLock(e),t}}finally{o(),n()}}async unsubscribe(e,t,i){if(!(e instanceof cF)){const t=this.remoteUsers.find((t=>t.uid===e));if(!t)throw new yb(Ry.INVALID_REMOTE_USER,\"user is not in the channel\");e=t}if(t||this.store.useP2P){if(\"datachannel\"===t)return this._unsubscribeDataChannel(e,i)}else await this._unsubscribeDataChannel(e,i);if(t&&vy(t,\"mediaType\",[\"audio\",\"video\"]),!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"Can't unsubscribe stream, haven't joined yet!\");const n=this._users.find((t=>t===e));if(!n){const t=new yb(Ry.INVALID_REMOTE_USER,\"user is not in the channel\");throw fb.error(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(e.uid,\", user is not in the channel\")),t}fb.info(\"[\".concat(this._clientId,\"] unsubscribe uid: \").concat(e.uid,\", mediaType: \").concat(t));const r=await this._subscribeMutex.lock();try{if(this._p2pChannel instanceof bF)await this._p2pChannel.unsubscribe(e,t);else{const i=await this._p2pChannel.unsubscribe(e,t);i&&await this._gateway.unsubscribe(i,e.uid),t&&\"audio\"!==t||(e._audio_pre_subscribed=!1),t&&\"video\"!==t||(e._video_pre_subscribed=!1),e._is_pre_created&&nA(this._users,e),fb.info(\"[\".concat(this._clientId,\"] unsubscribe success uid: \").concat(e.uid,\", mediaType: \").concat(t))}}catch(t){if(t.code===Ry.DISCONNECT_P2P)return void fb.warning(\"disconnecting p2p, abort unsubscribe request.\");throw fb.error(\"[\".concat(this._clientId,\"] unsubscribe user \").concat(e.uid,\" error\"),t.toString()),t}finally{r()}}async _unsubscribeDataChannel(e,t){if(t&&yy(t,\"id\",0,65535,!0),!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"Can't unsubscribe datachannel, haven't joined yet!\");const i=this._users.find((t=>t===e));if(!i){const t=new yb(Ry.INVALID_REMOTE_USER,\"user is not in the channel\");throw fb.error(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(e.uid,\", user is not in the channel\")),t}let n;if(\"number\"==typeof t){const i=e._dataChannels.find((e=>e.id===t));i&&(n=[i])}else n=e._dataChannels;if(void 0===n){const i=new yb(Ry.REMOTE_USER_IS_NOT_PUBLISHED);throw fb.error(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(e.uid,\" with channelId \").concat(t,\", remote datachannel is not published\")),i}fb.info(\"[\".concat(this._clientId,\"] unsubscribe uid: \").concat(e.uid,\", mediaType: datachannel, ids: \").concat(n.map((e=>e.id))));try{const t=await this._p2pChannel.unsubscribeDataChannel(e,n);t&&await this._gateway.unsubscribeDataChannel(t,e.uid),fb.info(\"[\".concat(this._clientId,\"] unsubscribe datachannel success uid: \").concat(e.uid,\", mediaType: datachannel, ids: \").concat(t))}catch(t){if(t.code===Ry.DISCONNECT_P2P)return void fb.warning(\"disconnecting p2p, abort unsubscribe request.\");throw fb.error(\"[\".concat(this._clientId,\"] unsubscribe user \").concat(e.uid,\" error\"),t.toString()),t}}async massUnsubscribe(e){if(wy(e,\"unsubscribeList\"),!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"Can't unsubscribeAll stream, haven't joined yet!\");fb.info(\"[\".concat(this._clientId,\"] start massUnsubscribe \").concat(e.map((e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i,\";\")})).join())),e=[...e];const t=new Map;for(let i=e.length-1;i>=0;i--){const{user:n,mediaType:r}=e[i];if(!n){const e=new yb(Ry.INVALID_PARAMS,\"user property does not exist in unsubscribeList item\");throw fb.error(\"[\".concat(this._clientId,\"] user property does not exist in unsubscribeList item\")),e}vy(r,\"mediaType\",[\"video\",\"audio\",void 0]);const o=this._users.find((e=>e===n));if(!o){fb.warning(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(n.uid,\", user is not in the channel\")),e.splice(i,1);continue}const s=tO.Video|tO.LwoVideo;if(t.has(n)){const o=t.get(n);let a;switch(r){case\"video\":a=o&s;break;case\"audio\":a=o&tO.Audio;break;default:a=o&(tO.Audio|s)}if(a){fb.warning(\"[\".concat(this._clientId,\"] repeat massUnsubscribe user:\").concat(n.uid,\",mediaType:\").concat(r,\" twice.\")),e.splice(i,1);continue}r?\"audio\"===r?t.set(n,o|tO.Audio):\"video\"===r&&t.set(n,o|s):t.set(n,o|tO.Audio|s)}else r?\"audio\"===r?t.set(n,tO.Audio):\"video\"===r&&t.set(n,s):t.set(n,tO.Audio|s)}try{const t=await this._p2pChannel.massUnsubscribe(e);t&&await this._gateway.massUnsubscribe(t),fb.info(\"[\".concat(this._clientId,\"] massUnsubscribe success \").concat(e.map((e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i,\";\")})).join()))}catch(e){if(e.code===Ry.DISCONNECT_P2P)return void fb.warning(\"[\".concat(this._clientId,\"] disconnecting p2p, abort unsubscribe request.\"));throw fb.error(\"[\".concat(this._clientId,\"] massUnsubscribe error\"),e.toString()),e}}async setLowStreamParameter(e){!function(e){if(!e)throw new Cy(Ry.INVALID_PARAMS);Oy(e.width)||Ay(e.width,\"streamParameter.width\"),Oy(e.height)||Ay(e.height,\"streamParameter.height\"),Oy(e.framerate)||Ay(e.framerate,\"streamParameter.framerate\"),Oy(e.bitrate)||yy(e.bitrate,\"streamParameter.bitrate\")}(e),(!e.width&&e.height||e.width&&!e.height)&&fb.warning(\"[\".concat(this._clientId,\"] The width and height parameters take effect only when both are set\")),fb.info(\"[\".concat(this._clientId,\"] set low stream parameter to\"),JSON.stringify(e));const t=this._configDistribute.getLowStreamConfigDistribute();if(t&&t.bitrate&&e.bitrate&&t.bitrate<e.bitrate&&(e.bitrate=t.bitrate),this._lowStreamParameter=e,this._isDualStreamEnabled)return this._p2pChannel.updateVideoStreamParameter(e,hO.LocalVideoLowTrack)}async enableDualStream(){if(!ZP().supportDualStream)throw vb.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!1}),new yb(Ry.NOT_SUPPORTED,\"Your browser is not support dual stream\");if(this._isDualStreamEnabled)throw new yb(Ry.INVALID_OPERATION,\"Dual stream is already enabled\");if(this._p2pChannel.canPublishLowStream())try{await this._publishLowStream()}catch(e){throw vb.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!1}),e}this._isDualStreamEnabled=!0,vb.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!0}),fb.info(\"[\".concat(this._clientId,\"] enable dual stream\"))}async disableDualStream(){if(this._isDualStreamEnabled){if(!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"Can't publish stream, haven't joined yet!\");if(this._p2pChannel.getLocalMedia(hO.LocalVideoLowTrack))try{const e=await this._p2pChannel.unpublishLowStream();e&&await this._gateway.unpublish(e,this._joinInfo.stringUid||this._joinInfo.uid)}catch(e){throw vb.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!1,succ:!1}),e}this._isDualStreamEnabled=!1,vb.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!1,succ:!0}),fb.info(\"[\".concat(this._clientId,\"] disable dual stream\"))}}async setClientRole(e,t){if(function(e){vy(e,\"role\",[\"audience\",\"host\"])}(e),t&&qy(t),\"rtc\"===this.mode||\"p2p\"===this.mode)throw fb.warning(\"[\".concat(this._clientId,\"]\").concat(this.mode,\" mode can not use setClientRole\")),new yb(Ry.INVALID_OPERATION,\"\".concat(this.mode,\" mode can not use setClientRole\"));if(t&&t.level&&\"host\"===e)throw new yb(Ry.INVALID_OPERATION,\"host mode can not set audience latency level\");if(\"audience\"===e&&this._p2pChannel.hasLocalMedia())throw new yb(Ry.INVALID_OPERATION,\"can not set client role to audience when publishing stream\");await this._gateway.setClientRole(e,t),this._config.role=e,fb.info(\"[\".concat(this._clientId,\"] set client role to \").concat(e,\", level: \").concat(t&&t.level))}getRemoteInboundOffset(){var e;const t=null===(e=this._p2pChannel.getStats())||void 0===e?void 0:e.audioSend[0];if(!t||!t.timestamp)return 0;const i=t.timestamp-Date.now();return Math.abs(i)>1e3+t.rttMs+100?this.ntpAlignErrorCount+=1:this.ntpAlignErrorCount=0,this.ntpAlignErrorCount>=3?i:0}getNtpWallTimeInMs(){return\"visible\"===document.visibilityState&&(this.remoteInboundOffset=this.getRemoteInboundOffset()),this.remoteInboundOffset+Date.now()+this._gateway.ntpOffset}setProxyServer(e,t){if(by(e,\"proxyServer\"),!t){if(\"DISCONNECTED\"!==this.connectionState)throw new yb(Ry.INVALID_OPERATION,\"Set proxy server before join channel\");if(\"disabled\"!==this._cloudProxyServerMode||this._useLocalAccessPoint)throw new yb(Ry.INVALID_OPERATION,\"You have already set the proxy\")}this._proxyServer=e,vb.setProxyServer(this._proxyServer),fb.setProxyServer(this._proxyServer),fb.info(\"[\".concat(this._clientId,\"] Set proxy server \").concat(t?\"by initialize call\":\"\",\" success.\"))}setTurnServer(e,t){if(Array.isArray(e)||(e=[e]),!t){if(\"DISCONNECTED\"!==this.connectionState)throw new yb(Ry.INVALID_OPERATION,\"Set turn server before join channel\");if(\"disabled\"!==this._cloudProxyServerMode||this._useLocalAccessPoint)throw new yb(Ry.INVALID_OPERATION,\"You have already set the proxy\")}if(Ky(e))return this._turnServer={servers:e,mode:\"original-manual\"},void fb.info(\"[\".concat(this._clientId,\"] Set original turnserver \").concat(t?\"by initialize call\":\"\",\" success: \").concat(e.map((e=>e.urls)).join(\",\"),\".\"));e.forEach((e=>Yy(e))),this._turnServer={servers:e,mode:\"manual\"},fb.info(\"[\".concat(this._clientId,\"] Set turnserver \").concat(t?\"by initialize call\":\"\",\" success.\"))}setLicense(e){if(\"DISCONNECTED\"!==this.connectionState){throw new yb(Ry.INVALID_OPERATION,\"you should set license before join channel\")}if(by(e,\"license\",32,32),!/^[A-Za-z\\d]+$/.test(e))throw new yb(Ry.INVALID_PARAMS,\"license should only contains characters from A-Z a-z 0-9\");this._license=e,fb.info(\"[\".concat(this._clientId,\"] set license success\"),e)}startProxyServer(e){if(\"DISCONNECTED\"!==this.connectionState)throw new yb(Ry.INVALID_OPERATION,\"Start proxy server before join channel\");if(this._proxyServer||\"manual\"===this._turnServer.mode||this._useLocalAccessPoint)throw new yb(Ry.INVALID_OPERATION,\"You have already set the proxy\");const t=[3,4,5];let i;switch(void 0===e&&(e=3),e){case 1:case 2:throw new yb(Ry.NOT_SUPPORTED,\"proxy mode 1/2 has been deprecated and not supported.\");case 3:i=\"proxy3\";break;case 4:i=\"proxy4\";break;case 5:i=\"proxy5\";break;default:throw new yb(Ry.INVALID_PARAMS,\"proxy server mode must be \".concat(t.join(\"|\")))}this._cloudProxyServerMode=i,this.store.cloudProxyServerMode=i,fb.info(\"[\".concat(this._clientId,\"] set cloud proxy server mode to\"),this._cloudProxyServerMode)}stopProxyServer(){if(\"DISCONNECTED\"!==this.connectionState)throw new yb(Ry.INVALID_OPERATION,\"Stop proxy server after leave channel\");vb.setProxyServer(),fb.setProxyServer(),this._cloudProxyServerMode=\"disabled\",this.store.cloudProxyServerMode=\"disabled\",fb.info(\"[\".concat(this._clientId,\"] set cloud proxy server mode to\"),this._cloudProxyServerMode),this._proxyServer=void 0,this._turnServer={mode:\"auto\",servers:[]}}setLocalAccessPointsV2(e){if(!e.accessPoints)throw new yb(Ry.INVALID_PARAMS,\"accessPoints is required.\");wy(e.accessPoints.serverList,\"accessPoints.serverList\"),by(e.accessPoints.domain,\"accessPoints.domain\");const t=(e,t)=>{yy(e,t,0,65535,!0)};let i=443;if(e.accessPoints.port&&(t(e.accessPoints.port,\"accessPoints.port\"),i=e.accessPoints.port),this._proxyServer||\"disabled\"!==this._cloudProxyServerMode)throw new yb(Ry.INVALID_OPERATION,\"set local access point failed, You have already set the cloud proxy\");XA(\"CLOSE_AFB_FOR_LOCAL_AP\")&&(JA(\"JOIN_WITH_FALLBACK_SIGNAL_PROXY\",!1),JA(\"JOIN_WITH_FALLBACK_MEDIA_PROXY\",!1));const n=/^((\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/,r=e.accessPoints.domain,o=e.accessPoints.serverList.map((e=>n.test(e)?\"\".concat(e.replace(/\\./g,\"-\"),\".\").concat(r):e)),s=o.map((e=>\"\".concat(e,\":\").concat(i)));this._useLocalAccessPoint=!0,this._setLocalAPVersion=2,JA(\"WEBCS_DOMAIN\",s),JA(\"WEBCS_DOMAIN_BACKUP_LIST\",s),JA(\"GATEWAY_DOMAINS\",[r]),e.report&&e.report.hostname&&Array.isArray(e.report.hostname)&&e.report.hostname.length?(wy(e.report.hostname,\"report.hostname\"),JA(\"EVENT_REPORT_DOMAIN\",e.report.hostname[0]),JA(\"EVENT_REPORT_BACKUP_DOMAIN\",e.report.hostname[1]||e.report.hostname[0])):(JA(\"EVENT_REPORT_DOMAIN\",o[0]),JA(\"EVENT_REPORT_BACKUP_DOMAIN\",o[1]||o[0]));let a=6443;e.report&&e.report.port&&(t(e.report.port,\"report.port\"),a=e.report.port),JA(\"STATS_COLLECTOR_PORT\",a),e.report?JA(\"ENABLE_EVENT_REPORT\",!0):JA(\"ENABLE_EVENT_REPORT\",!1);let c=\"\";e.log&&e.log.hostname&&Array.isArray(e.log.hostname)&&e.log.hostname.length?(wy(e.log.hostname,\"log.hostname\"),c=e.log.hostname[0]):c=o[0];let d=6444;e.log&&e.log.port&&(t(e.log.port,\"log.port\"),d=e.log.port),JA(\"LOG_UPLOAD_SERVER\",\"\".concat(c,\":\").concat(d));let l=[];e.cds&&e.cds.hostname&&Array.isArray(e.cds.hostname)&&e.cds.hostname.length?(wy(e.cds.hostname,\"cds.hostname\"),l=e.cds.hostname):l=o;let u=443;e.cds&&e.cds.port&&(t(e.cds.port,\"cds.port\"),u=e.cds.port),JA(\"CDS_AP\",l.map((e=>\"\".concat(e,\":\").concat(u)))),e.cds?JA(\"ENABLE_CONFIG_DISTRIBUTE\",!0):JA(\"ENABLE_CONFIG_DISTRIBUTE\",!1),fb.info(\"set local access point v2 success\")}setLocalAccessPoints(e,t){if(wy(e,\"serverList\"),by(t,\"domain\"),this._proxyServer||\"disabled\"!==this._cloudProxyServerMode)throw new yb(Ry.INVALID_OPERATION,\"set local access point failed, You have already set the cloud proxy\");const i=/^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/;e=e.map((e=>i.test(e)?\"\".concat(e.replace(/\\./g,\"-\"),\".\").concat(t):e)),this._useLocalAccessPoint=!0,this._setLocalAPVersion=1,JA(\"WEBCS_DOMAIN\",e),JA(\"WEBCS_DOMAIN_BACKUP_LIST\",e),JA(\"GATEWAY_DOMAINS\",[t]),JA(\"EVENT_REPORT_DOMAIN\",e[0]),JA(\"EVENT_REPORT_BACKUP_DOMAIN\",e[1]||e[0]),JA(\"LOG_UPLOAD_SERVER\",\"\".concat(e[0],\":6444\")),fb.info(\"[\".concat(this._clientId,\"] set local access point success\"))}async setRemoteDefaultVideoStreamType(e){if(vy(e,\"streamType\",[0,1,4,5,6,7,8,9]),this._remoteDefaultVideoStreamType=e,this._joinInfo)try{await this._gateway.setDefaultRemoteVideoStreamType(e),this._joinInfo.defaultVideoStream=this._remoteDefaultVideoStreamType}catch(e){throw fb.error(\"[\".concat(this._clientId,\"] set default remote video stream type error\"),e.toString()),e}else fb.debug(\"[\".concat(this._clientId,\"] haven't joined yet, cache remoteDefaultVideoStreamType \").concat(e))}async setRemoteVideoStreamType(e,t){vy(t,\"streamType\",[0,1,4,5,6,7,8,9]);try{await this._gateway.setRemoteVideoStreamType(e,t),setTimeout((()=>{const t=this._users.find((t=>t.uid===e));t&&t.videoTrack&&t.videoTrack.updateMediaStreamTrackResolution()}),2e3)}catch(e){throw fb.error(\"[\".concat(this._clientId,\"] set remote video stream type error\"),e.toString()),e}fb.info(\"[\".concat(this._clientId,\"] set remote \").concat(e,\" video stream type to \").concat(t)),this._remoteStreamTypeCacheMap.set(e,t)}async setStreamFallbackOption(e,t){vy(t,\"fallbackType\",[0,1,2,3,4,5,6,7,8]);try{await this._gateway.setStreamFallbackOption(e,t)}catch(e){throw fb.error(\"[\".concat(this._clientId,\"] set stream fallback option\"),e.toString()),e}fb.info(\"[\".concat(this._clientId,\"] set remote \").concat(e,\" stream fallback type to \").concat(t)),this._streamFallbackTypeCacheMap.set(e,t)}setEncryptionConfig(e,t,i,n){!function(e){vy(e,\"encryptionMode\",[\"aes-128-xts\",\"aes-256-xts\",\"aes-128-ecb\",\"sm4-128-ecb\",\"aes-128-gcm\",\"aes-256-gcm\",\"aes-128-gcm2\",\"aes-256-gcm2\",\"none\"])}(e),by(t,\"secret\");const r=[\"aes-128-gcm2\",\"aes-256-gcm2\"];if(Dn(r).call(r,e)){if(!i||!(i instanceof Uint8Array&&32===i.length))throw new yb(Ry.INVALID_PARAMS,\"salt must be an Uint8Array and exactly equal to 32 bytes\")}else if(i)throw new yb(Ry.INVALID_PARAMS,\"current encrypt mode does not need salt\");if(n){if(Iy(n,\"encryptDataStream\"),!Dn(r).call(r,e))throw new yb(Ry.INVALID_PARAMS,\"current encrypt mode does not support data stream\");this._encryptDataStream=!0}new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*,.<>?/:;'\\\"|{}\\\\[\\\\]])(?=.{8,})\").test(t)||fb.warning(\"The secret is not strong:\\n      The secret must contain at least 1 lowercase alphabetical character,\\n      The secret must contain at least 1 uppercase alphabetical character,\\n      The secret must contain at least 1 numeric character,\\n      The secret must contain at least one special character,\\n      The secret must be eight characters or longer.\\n      \"),this._encryptionMode=e,this._encryptionSecret=t,i&&(this._encryptionSalt=uA(i))}async renewToken(e){if(by(e,\"token\",1,2047),!this._key||!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"renewToken should not be called before user join\");const t=this._key;this._key=e,this._joinInfo&&(this._joinInfo.token=e);const i=await this._renewTokenMutex.lock();try{if(XA(\"USE_NEW_TOKEN\")){fb.debug(\"[\".concat(this._clientId,\"] start renew token with ticket from unilbs\"));const t=await Zx(this._joinInfo,this._axiosCancelSource.token,this._config.httpRetryConfig||PA);fb.debug(\"[\".concat(this._clientId,\"] get ticket from unilbs success\")),await this._gateway.renewToken({token:e,ticket:t})}else fb.debug(\"[\".concat(this._clientId,\"] start renew token without ticket\")),await this._gateway.renewToken({token:e});fb.debug(\"[\".concat(this._clientId,\"] renewToken success\"))}catch(e){throw this._key=t,this._joinInfo.token=t,fb.error(\"[\".concat(this._clientId,\"] renewToken failed\"),e.toString()),e}finally{i()}}enableAudioVolumeIndicator(){this._audioVolumeIndicationInterval?fb.warning(\"you have already enabled audio volume indicator!\"):this._audioVolumeIndicationInterval=window.setInterval((()=>{const e=this._p2pChannel.getAudioLevels();this.safeEmit(zy.VOLUME_INDICATOR,e)}),XA(\"AUDIO_VOLUME_INDICATION_INTERVAL\")||2e3)}getRTCStats(){const e=this._statsCollector.getRTCStats(),t=this._gateway.getInChannelInfo();return e.Duration=Math.round(t.duration/1e3),e}async startLiveStreaming(e,t){if(!t){if(\"h264\"!==this.codec)throw new yb(Ry.LIVE_STREAMING_INVALID_RAW_STREAM,\"raw streaming is only support h264\");if(!this._p2pChannel.hasLocalMedia())throw new yb(Ry.LIVE_STREAMING_INVALID_RAW_STREAM,\"can not find stream to raw streaming\")}if(this._liveRawStreamingClient&&this._liveRawStreamingClient.hasUrl(e)||this._liveTranscodeStreamingClient&&this._liveTranscodeStreamingClient.hasUrl(e))throw new yb(Ry.LIVE_STREAMING_TASK_CONFLICT);const i=t?Fw.TRANSCODE:Fw.RAW;return this._createLiveStreamingClient(i).startLiveStreamingTask(e,i)}setLiveTranscoding(e){return this._createLiveStreamingClient(Fw.TRANSCODE).setTranscodingConfig(e)}async stopLiveStreaming(e){const t=[this._liveRawStreamingClient,this._liveTranscodeStreamingClient].filter((t=>t&&t.hasUrl(e)));if(!t.length)throw new yb(Ry.INVALID_PARAMS,\"can not find live streaming url to stop\");await Gh.all(t.map((t=>t&&t.stopLiveStreamingTask(e))))}async startChannelMediaRelay(e){LF(e);const t=this._createChannelMediaRelayClient();await t.startChannelMediaRelay(e)}async updateChannelMediaRelay(e){LF(e);const t=this._createChannelMediaRelayClient();await t.updateChannelMediaRelay(e)}async stopChannelMediaRelay(){const e=this._createChannelMediaRelayClient();await e.stopChannelMediaRelay(),this._statsCollector.onStatsChanged&&(this._statsCollector.onStatsChanged=void 0)}async sendStreamMessage(e){var t;let i=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"can not send data stream, not joined\");if((\"string\"==typeof e||e instanceof Uint8Array)&&(e={payload:e}),\"string\"==typeof e.payload){const t=new TextEncoder;e.payload=t.encode(e.payload)}let n=!1;this._encryptDataStream&&this._encryptDataStreamIv&&this._encryptDataStreamKey&&window.crypto.subtle&&Dn(t=[\"aes-128-gcm2\",\"aes-256-gcm2\"]).call(t,this._encryptionMode)&&(n=!0,e.payload=await async function(e,t,i){var n;const r=Jn(n=Array.from(i)).call(n,((e,t)=>e+t),0),o={serverTs:0,seq:ob++,length:i.length,checkSum:r},s=new Uint8Array(yA(r,2)),a=new ArrayBuffer(rb),c=new DataView(a);c.setUint32(0,o.serverTs),c.setUint16(4,o.seq),c.setUint16(6,o.length),c.setUint16(8,o.checkSum);const d=16-i.length%16;i=pA(i,new Uint8Array(d));const l=await window.crypto.subtle.encrypt({name:\"AES-GCM\",iv:e,tagLength:tb,additionalData:s},t,i);return pA(new Uint8Array(a),new Uint8Array(l))}(this._encryptDataStreamIv,this._encryptDataStreamKey,e.payload));if(new Blob([e.payload]).size>1024)throw new yb(Ry.INVALID_PARAMS,n?\"encrypted stream message out of range.\":\"stream message out of range.\");return this._gateway.signal.request(Pw.DATA_STREAM,{payload:uA(e.payload),syncWithAudio:e.syncWithAudio,sendTs:Date.now()-vB},!i)}sendMetadata(e){if(!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"can not send metadata, not joined\");if(new Blob([e]).size>1024)throw new yb(Ry.METADATA_OUT_OF_RANGE);return this._gateway.signal.request(Pw.SEND_METADATA,{session_id:this._joinInfo.sid,metadata:uA(e)})}async sendCustomReportMessage(e){if(Array.isArray(e)||(e=[e]),e.forEach(Tb),!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"can not send custom report, not joined\");await vb.sendCustomReportMessage(this._joinInfo.sid,e)}getLocalAudioStats(){return this._statsCollector.getLocalAudioTrackStats()}getRemoteAudioStats(){return this._statsCollector.getRemoteAudioTrackStats()}getLocalVideoStats(){return this._statsCollector.getLocalVideoTrackStats()}getRemoteVideoStats(){return this._statsCollector.getRemoteVideoTrackStats()}getRemoteNetworkQuality(){return this._statsCollector.getRemoteNetworkQualityStats()}async pickSVCLayer(e,t){vy(t.spatialLayer,\"spatialLayer\",[0,1,2,3]),vy(t.temporalLayer,\"temporalLayer\",[0,1,2,3]);try{await this._gateway.pickSVCLayer(e,t)}catch(e){throw fb.error(\"[\".concat(this._clientId,\"] pick SVC layer failed\"),e.toString()),e}}async setRTMConfig(e){const{apRTM:t=!1,rtmFlag:i}=e;if(Iy(t,\"apRTM\"),yy(i,\"rtmFlag\",0),this._rtmConfig.apRTM=t,this._rtmConfig.rtmFlag=i,fb.debug(\"[\".concat(this._clientId,\"] setRTMconfig \").concat(JSON.stringify(e),\" in \").concat(this.connectionState,\" state\")),(\"CONNECTED\"===this.connectionState||\"RECONNECTING\"===this.connectionState)&&this._joinInfo)return this._joinInfo.apRTM=t,this._joinInfo.rtmFlag=i,this._gateway.setRTM2Flag(i)}_reset(){if(fb.debug(\"[\".concat(this._clientId,\"] reset client\")),this._axiosCancelSource.cancel(),this._axiosCancelSource=Lv.CancelToken.source(),this._streamFallbackTypeCacheMap=new Map,this._remoteStreamTypeCacheMap=new Map,this._configDistribute.stopGetConfigDistribute(),this._joinInfo&&JB(this._joinInfo),this._joinInfo=void 0,this._proxyServer=void 0,this._defaultStreamFallbackType=void 0,this._sessionId&&vb.removeSid(this._sessionId),this._sessionId=null,this.store.sessionId=null,this._statsCollector.reset(),this._key=void 0,this._appId=void 0,this._uid=void 0,this.store.uid=void 0,this._channelName=void 0,this._encryptionMode=\"none\",this._encryptionSecret=null,this._encryptionSalt=null,this._encryptDataStreamKey=null,this._encryptDataStreamIv=null,this._pendingPublishedUsers=[],this._users.forEach((e=>{e._audioTrack&&e._audioTrack._destroy(),e._videoTrack&&e._videoTrack._destroy(),e._dataChannels&&(e._dataChannels.forEach((e=>e._close())),e._dataChannels.length=0)})),this._users=[],this._audioVolumeIndicationInterval&&(window.clearInterval(this._audioVolumeIndicationInterval),this._audioVolumeIndicationInterval=void 0),\"fallback\"===this._cloudProxyServerMode&&(this._cloudProxyServerMode=\"disabled\",this.store.cloudProxyServerMode=\"disabled\"),this._p2pChannel.reset(),this._publishMutex=new NA(\"client-publish\"),this._subscribeMutex=new NA(\"client-subscribe\"),this._networkQualityInterval&&(window.clearInterval(this._networkQualityInterval),this._networkQualityInterval=void 0),this._liveRawStreamingClient&&(this._liveRawStreamingClient.terminate(),this._liveRawStreamingClient.removeAllListeners(),this._liveRawStreamingClient=void 0),this._liveTranscodeStreamingClient&&(this._liveTranscodeStreamingClient.terminate(),this._liveTranscodeStreamingClient.removeAllListeners(),this._liveTranscodeStreamingClient=void 0),this._channelMediaRelayClient&&(this._channelMediaRelayClient.dispose(),this._channelMediaRelayClient=void 0),this._inspect)try{this._inspect.close(),this._inspect=void 0}catch(e){}if(this._moderation)try{this.setImageModeration(!1)}catch(e){}}_startSession(e,t){var i;const n=e||SA();e?fb.debug(\"[\".concat(this._clientId,\"] new Session \").concat(n)):fb.debug(\"[\".concat(this._clientId,\"] renewSession \").concat(this._sessionId,\" => \").concat(n));const r=e?\"\":this._sessionId||\"\";this._sessionId=n,this.store.sessionId=n,vb.addSid(n);const o={lts:(new Date).getTime(),mode:this.mode,buildFormat:2,stringUid:(null==t?void 0:t.stringUid)||(null===(i=this._joinInfo)||void 0===i?void 0:i.stringUid),channelProfile:\"live\"===this.mode?1:0,channelMode:0,isABTestSuccess:Number(this._configDistribute.isSuccess),lsid:r,clientRole:\"audience\"===this.role?2:1};vb.sessionInit(this._sessionId,IG({cname:t.channel,appid:t.appId},o)),this._joinInfo&&(this._joinInfo.sid=n),this._gateway.joinInfo&&(this._gateway.joinInfo.sid=n)}async _publishHighStream(e){if(!this._joinInfo||void 0===this._uid)throw new yb(Ry.INVALID_OPERATION,\"Can't publish stream, haven't joined yet!\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new yb(Ry.INVALID_OPERATION,\"can not publish stream in \".concat(this.connectionState,\" state\"));if(\"auto\"===this._turnServer.mode&&XA(\"FORCE_TURN\")&&!XA(\"TURN_ENABLE_TCP\")&&!XA(\"TURN_ENABLE_UDP\"))throw new yb(Ry.UNEXPECTED_ERROR,\"force TURN With No TURN Configuration\");fb.debug(\"[\".concat(this._clientId,\"] publish high stream\"));try{const i=await this._p2pChannel.publish(e,this._isDualStreamEnabled,this._lowStreamParameter);if(this._p2pChannel instanceof bF){const e=(await i.next()).value;if(e){try{await this._gateway.sendExtensionMessage(IO.PUBLISH,e,!0)}catch(e){throw i.throw(e),e}await i.next()}this._p2pChannel.reportPublishEvent(!0,null)}else{const n=(await i.next()).value;if(n){var t;let e;try{e=await this._gateway.publish(this._uid,n,!0)}catch(e){if(e.code!==Ry.DISCONNECT_P2P)throw i.throw(e),e}await i.next((null===(t=e)||void 0===t?void 0:t.ortc)||[])}this._p2pChannel.reportPublishEvent(!0,null);for(const t of e)t instanceof aU&&t._encoderConfig&&this._gateway.setVideoProfile(t._encoderConfig),!t.muted&&t.enabled||await this._p2pChannel.muteLocalTrack(t)}}catch(t){if(this._p2pChannel.reportPublishEvent(!1,null==t?void 0:t.code,e),(null==t?void 0:t.code)===Ry.WS_ABORT)return;throw t}}async _publishLowStream(){if(!this._joinInfo||void 0===this._uid)throw new yb(Ry.INVALID_OPERATION,\"Can't publish stream, haven't joined yet!\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new yb(Ry.INVALID_OPERATION,\"can not publish stream in \".concat(this.connectionState,\" state\"));fb.debug(\"[\".concat(this._clientId,\"] publish low stream\"));const e=this._configDistribute.getLowStreamConfigDistribute();e&&e.bitrate&&(this._lowStreamParameter||(this._lowStreamParameter={width:160,height:120,framerate:15,bitrate:50}),this._lowStreamParameter&&this._lowStreamParameter.bitrate&&e.bitrate<this._lowStreamParameter.bitrate&&(this._lowStreamParameter.bitrate=e.bitrate));try{const e=await this._p2pChannel.publishLowStream(this._lowStreamParameter),i=(await e.next()).value;if(i){var t;let n;try{n=await this._gateway.publish(this._uid,i,!0)}catch(t){if(t.code!==Ry.DISCONNECT_P2P)throw e.throw(t),t}e.next((null===(t=n)||void 0===t?void 0:t.ortc)||[]),this._p2pChannel.reportPublishEvent(!0,null,void 0,!0)}}catch(e){if(this._p2pChannel.reportPublishEvent(!1,null==e?void 0:e.code,void 0,!0),(null==e?void 0:e.code)===Ry.WS_ABORT)return;throw e}}_createLiveStreamingClient(e){const t=()=>{if(!this._joinInfo||!this._appId){return new yb(Ry.INVALID_OPERATION,\"can not create live streaming client, please join channel first\").throw()}const e=(t={joinInfo:this._joinInfo,appId:this._appId,websocketRetryConfig:this._config.websocketRetryConfig,httpRetryConfig:this._config.httpRetryConfig},gB(\"LiveStreaming\").create(t));var t;return e.onLiveStreamError=(e,t)=>{vb.reportApiInvoke(this._sessionId,{name:By.ON_LIVE_STREAM_ERROR,options:[e,t],tag:jy.TRACER}).onSuccess(),this.safeEmit(zy.LIVE_STREAMING_ERROR,e,t)},e.onLiveStreamWarning=(e,t)=>{vb.reportApiInvoke(this._sessionId,{name:By.ON_LIVE_STREAM_WARNING,options:[e,t],tag:jy.TRACER}).onSuccess(),this.safeEmit(zy.LIVE_STREAMING_WARNING,e,t)},e.on(Kw.REQUEST_WORKER_MANAGER_LIST,((e,t,i)=>{if(!this._joinInfo)return i(new yb(Ry.INVALID_OPERATION,\"can not find join info to get worker manager\"));(async function(e,t,i,n){const r=XA(\"UAP_AP\").slice(0,XA(\"AJAX_REQUEST_CONCURRENT\")).map((e=>t.proxyServer?\"https://\".concat(t.proxyServer,\"/ap/?url=\").concat(e+\"/api/v1?action=uap\"):\"https://\".concat(e,\"/api/v1?action=uap\")));return await Dx(r,e,t,i,n)})(e,this._joinInfo,this._axiosCancelSource.token,PA).then(t).catch(i)})),e};return e===Fw.RAW?(this._liveRawStreamingClient=this._liveRawStreamingClient||t(),this._liveRawStreamingClient):(this._liveTranscodeStreamingClient=this._liveTranscodeStreamingClient||t(),this._liveTranscodeStreamingClient)}_createChannelMediaRelayClient(){if(!this._joinInfo){return new yb(Ry.INVALID_OPERATION,\"can not create channel media relay client, please join channel first\").throw()}if(!this._channelMediaRelayClient){const{sendResolutionWidth:t,sendResolutionHeight:i}=this.getLocalVideoStats(),n=(e={joinInfo:this._joinInfo,clientId:this._clientId,websocketRetryConfig:this._config.websocketRetryConfig,httpRetryConfig:this._config.httpRetryConfig,resolution:{width:t,height:i}},gB(\"ChannelMediaRelay\").create(e));n.on(\"state\",(e=>{e===Xw.RELAY_STATE_FAILURE&&n&&n.dispose(),this.safeEmit(zy.CHANNEL_MEDIA_RELAY_STATE,e)})),n.on(\"event\",(e=>{this.safeEmit(zy.CHANNEL_MEDIA_RELAY_EVENT,e)})),this._channelMediaRelayClient=n,this._statsCollector.onStatsChanged=(e,t)=>{var i;\"resolution\"===e&&(null===(i=this._channelMediaRelayClient)||void 0===i||i.setVideoProfile(t))}}var e;return this._channelMediaRelayClient}_handleUpdateDataChannel(e,t){const{added:i,deleted:n}=e,r=[];if(t){const e=[];this._users.forEach((t=>{t._dataChannels.forEach((n=>{i.every((e=>e.uid!==t._uintid||e.stream_id!==n.id))&&e.push({uid:t._uintid,stream_id:n.id,ordered:n.ordered,max_retrans_times:n.maxRetransmits,metadata:n.metadata})}))})),e.length>0&&this._handleUpdateDataChannel({added:[],deleted:e})}Array.isArray(i)&&i.length>0&&i.forEach((e=>{const{uid:i,stream_id:n,ordered:o,max_retrans_times:s,metadata:a}=e,c=this._users.find((e=>e._uintid===i));if(!c)return void fb.error(\"[\".concat(this._clientId,\"] can not find target user!(on_add_data_channel)\"));fb.debug(\"[\".concat(this._clientId,\"] data_channel added with uid \").concat(i)),Dn(r).call(r,c)||r.push(c),c._uintid||(c._uintid=i);if(!(-1!==c._dataChannels.findIndex((t=>t.id===e.stream_id)))){const e={id:n,ordered:!!o,maxRetransmits:s,metadata:a},i=function(e){return RB(e,!0)}(e);c._dataChannels.push(i),fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(c.uid,\" published datachannel\")),t||this.safeEmit(zy.USER_PUBLISHED,c,\"datachannel\",e)}this._p2pChannel.hasPendingRemoteDataChannel(c,e.stream_id)&&(fb.debug(\"[\".concat(this._clientId,\"] resubscribe datachannel for user \").concat(c.uid,\" after reconnect.\")),this._subscribeDataChannel(c,e.stream_id).catch((e=>{fb.error(\"[\".concat(this._clientId,\"] resubscribe datachannel error\"),e.toString())})))})),t&&(this.safeEmit(zy.PUBLISHED_USER_LIST,this._pendingPublishedUsers),this._pendingPublishedUsers=[]),Array.isArray(n)&&n.length>0&&n.forEach((e=>{const{uid:t,stream_id:i}=e,n=this._users.find((e=>e._uintid===t));if(!n)return void fb.error(\"[\".concat(this._clientId,\"] can not find target user!(on_delete_data_channel)\"));const r=n._dataChannels.find((t=>t.id===e.stream_id));r&&(fb.debug(\"[\".concat(this._clientId,\"] data_stream delete with uid \").concat(t)),this._p2pChannel.unsubscribeDataChannel(n,[r]).then((e=>{if(n._dataChannels=n._dataChannels.filter((e=>e!==r)),e)return this._gateway.unsubscribeDataChannel(e,n.uid)})),fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(t,\" unpublished datachannel ,id:\").concat(r.id)),this.safeEmit(zy.USER_UNPUBLISHED,n,\"datachannel\",r._config))}))}_handleRemoveDataChannels(e){const t=this._users.find((t=>t.uid===e.uid));if(t){if(void 0!==t._dataChannels&&t._dataChannels.length>0){fb.debug(\"[\".concat(this._clientId,\"] datachannel removed with uid \").concat(e.uid));const i=()=>{fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished datachannel\")),t._dataChannels.forEach((e=>{this.safeEmit(zy.USER_UNPUBLISHED,t,\"datachannel\",e._config)}))};this._p2pChannel.unsubscribeDataChannel(t,t._dataChannels).then((e=>{if(e)return this._gateway.unsubscribeDataChannel(e,t.uid)})),i()}}else fb.warning(\"[\".concat(this._clientId,\"] can not find target user!(on_remove_datachannel)\"))}_handleGatewayEvents(){this._gateway.on($w.DISCONNECT_P2P,(async()=>{await this._p2pChannel.disconnectForReconnect()})),this._gateway.on($w.CONNECTION_STATE_CHANGE,((e,t,i)=>{var n;if(i===Hy.FALLBACK)return;const r=()=>{this.safeEmit(zy.CONNECTION_STATE_CHANGE,e,t,i)};if(vb.reportApiInvoke(this._sessionId||(null===(n=this._gateway.joinInfo)||void 0===n?void 0:n.sid)||null,{name:By.CONNECTION_STATE_CHANGE,options:[e,t,i],tag:jy.TRACER}).onSuccess(JSON.stringify({cur:e,prev:t,reason:i})),fb.info(\"[\".concat(this._clientId,\"] connection state change: \").concat(t,\" -> \").concat(e)),\"DISCONNECTED\"===e)return this._reset(),void r();if(\"RECONNECTING\"===e)this._users.forEach((e=>{e._trust_in_room_=!1,e._trust_audio_enabled_state_=!1,e._trust_video_enabled_state_=!1,e._trust_audio_mute_state_=!1,e._trust_video_mute_state_=!1,e._trust_audio_stream_added_state_=!1,e._trust_video_stream_added_state_=!1,e._is_pre_created||(e._audio_pre_subscribed||(e._audioSSRC=void 0,e._audioOrtc=void 0),e._video_pre_subscribed||(e._videoSSRC=void 0,e._videoOrtc=void 0,e._rtxSsrcId=void 0),e._cname=void 0)})),this._userOfflineTimeout&&window.clearTimeout(this._userOfflineTimeout),this._streamRemovedTimeout&&window.clearTimeout(this._streamRemovedTimeout),this._userOfflineTimeout=void 0,this._streamRemovedTimeout=void 0;else if(\"CONNECTED\"===e){var o;this._streamFallbackTypeCacheMap.forEach(((e,t)=>{this._gateway.setStreamFallbackOption(t,e).catch((e=>{fb.warning(\"[\".concat(this._clientId,\"] auto set stream fallback option failed\"),e)}))})),this._remoteStreamTypeCacheMap.forEach(((e,t)=>{this._gateway.setRemoteVideoStreamType(t,e).catch((e=>{fb.warning(\"[\".concat(this._clientId,\"] auto set remote stream type failed\"),e)}))})),void 0!==this._remoteDefaultVideoStreamType&&void 0===(null===(o=this._joinInfo)||void 0===o?void 0:o.defaultVideoStream)&&this.setRemoteDefaultVideoStreamType(this._remoteDefaultVideoStreamType).then((()=>{fb.debug(\"[\".concat(this._clientId,\"] setRemoteDefaultVideoStreamType after gateway connected\"))})).catch((e=>{fb.error(\"[\".concat(this._clientId,\"] setRemoteDefaultVideoStreamType after gateway failed, \").concat(e))})),this.store.useP2P||(this._p2pChannel.republish(),this._userOfflineTimeout=window.setTimeout((()=>{if(\"CONNECTED\"!==this.connectionState)return;this._userOfflineTimeout=void 0;this._users.filter((e=>!e._trust_in_room_)).forEach((e=>{fb.debug(\"[\".concat(this._clientId,\"] user offline timeout, emit user offline \").concat(e.uid)),this._handleUserOffline({uid:e.uid})}))}),3e3),this._streamRemovedTimeout=window.setTimeout((()=>{\"CONNECTED\"===this.connectionState&&(this._streamRemovedTimeout=void 0,this._users.forEach((e=>{e._trust_audio_mute_state_||(fb.debug(\"[\".concat(this._clientId,\"] auto dispatch audio unmute event \").concat(e.uid)),this._handleMuteStream(e.uid,dO.AUDIO,!1)),e._trust_video_mute_state_||(fb.debug(\"[\".concat(this._clientId,\"] auto dispatch video unmute event \").concat(e.uid)),this._handleMuteStream(e.uid,dO.VIDEO,!1)),e._trust_audio_enabled_state_||(fb.debug(\"[\".concat(this._clientId,\"] auto dispatch enable local audio \").concat(e.uid)),this._handleSetStreamLocalEnable(\"audio\",e.uid,!0)),e._trust_video_enabled_state_||(fb.debug(\"[\".concat(this._clientId,\"] auto dispatch enable local video \").concat(e.uid)),this._handleSetStreamLocalEnable(\"video\",e.uid,!0)),e._trust_video_stream_added_state_||(fb.debug(\"[\".concat(this._clientId,\"] auto dispatch reset video stream added \").concat(e.uid)),this._handleResetAddStream(e,\"video\")),e._trust_audio_stream_added_state_||(fb.debug(\"[\".concat(this._clientId,\"] auto dispatch reset audio stream added \").concat(e.uid)),this._handleResetAddStream(e,\"audio\")),e._video_added_||e._audio_added_||(fb.debug(\"[\".concat(this._clientId,\"] auto dispatch stream remove \").concat(e.uid)),this._handleRemoveStream({uid:e.uid,uint_id:e._uintid}))})))}),1e3))}r()})),this._gateway.on($w.REQUEST_NEW_GATEWAY_LIST,(async(e,t)=>{if(!this._joinInfo)return t(new yb(Ry.UNEXPECTED_ERROR,\"can not recover, no join info\"));try{let t;const i=await YB(IG(IG({},this._joinInfo),{},{uid:this._joinInfo.uid,stringUid:void 0}));i?(t=i.ap,XB(i),this._joinInfo.preload=!0):(t=await Hx(this._joinInfo,this._axiosCancelSource.token,this._config.httpRetryConfig||PA,this.store),this._joinInfo.preload=!1),this._joinInfo&&(this._joinInfo.apResponse=t.gatewayInfo.res,this._joinInfo.gatewayAddrs=t.gatewayInfo.gatewayAddrs,this._joinInfo.uni_lbs_ip=t.gatewayInfo.uni_lbs_ip);const n=[];t.gatewayInfo.gatewayAddrs.forEach((e=>{let{address:t}=e;const[i,r]=t.split(\":\");this._joinInfo&&this._joinInfo.proxyServer?n.push({proxy:this._joinInfo.proxyServer,host:i,port:r}):n.push({host:i,port:r})})),e(n)}catch(e){t(e)}})),this._gateway.on($w.NETWORK_QUALITY,(e=>{\"normal\"===this._networkQualitySensitivity&&this.safeEmit(zy.NETWORK_QUALITY,e)})),this._gateway.on($w.STREAM_TYPE_CHANGE,((e,t)=>{this.safeEmit(zy.STREAM_TYPE_CHANGED,e,t);vb.reportApiInvoke(this._sessionId,{name:By.STREAM_TYPE_CHANGE,options:[e,t],tag:jy.TRACER}).onSuccess(JSON.stringify({uid:e,streamType:t}))})),this._gateway.on($w.IS_P2P_DISCONNECTED,(e=>{this._p2pChannel.isP2PDisconnected()?e(!0):this._p2pChannel.hasLocalMedia()||this._p2pChannel.hasRemoteMedia()?e(!1):e(!0)})),this._gateway.on($w.REQUEST_P2P_CONNECTION_PARAMS,(async(e,t,i)=>{try{let i=await this._p2pChannel.getEstablishParams();XA(\"ENABLE_PREALLOC_PC\")&&i||(i=await this._p2pChannel.startP2PConnection(e)),t(i)}catch(e){i(e)}})),this._gateway.on($w.JOIN_RESPONSE,((e,t)=>{if(this.store.useP2P)return;const i=YU(e.ortc,t,e.attributes.userAttributes.preSubSsrcs);this._p2pChannel.connect(i)})),this._gateway.on($w.PRE_CONNECT_PC,(async e=>{const{candidates:t,fingerprint:i}=e;if(this._joinInfo&&t.length>0&&!this._p2pChannel.isPlanB){var n;await this._p2pChannel.startP2PConnection({turnServer:this._joinInfo.turnServer});const{cert:e,cid:r}=this._joinInfo.apResponse;await this._p2pChannel.connect({iceParameters:{iceUfrag:\"\".concat(r,\"_\").concat(e),icePwd:\"\".concat(r,\"_\").concat(e)},dtlsParameters:{fingerprints:[{hashFunction:\"sha-256\",fingerprint:null!==(n=XA(\"FINGERPRINT\"))&&void 0!==n?n:i}]},candidates:t,rtpCapabilities:{send:{audioCodecs:[],videoCodecs:[],audioExtensions:[],videoExtensions:[]},recv:{audioCodecs:[],videoCodecs:[],audioExtensions:[],videoExtensions:[]}},setup:\"active\",cname:\"o/i14u9pJrxRKAsu\",preallocation:!0})}}))}_handleGatewaySignalEvents(){this._gateway.signal.on(kw.ON_USER_ONLINE,this._handleUserOnline),this._gateway.signal.on(kw.ON_USER_OFFLINE,this._handleUserOffline),this._gateway.signal.on(kw.ON_ADD_AUDIO_STREAM,(e=>this._handleAddAudioOrVideoStream(\"audio\",e.uid,e.ssrcId,e.cname,e.uint_id,e.ortc))),this._gateway.signal.on(kw.ON_ADD_VIDEO_STREAM,(e=>this._handleAddAudioOrVideoStream(\"video\",e.uid,e.ssrcId,e.cname,e.uint_id,e.ortc,e.rtxSsrcId))),this._gateway.signal.on(kw.ON_REMOTE_DATASTREAM_UPDATE,(e=>{this._handleUpdateDataChannel(e)})),this._gateway.signal.on(kw.ON_REMOTE_FULL_DATASTREAM_INFO,(e=>{this._handleUpdateDataChannel({added:e.datastreams||[],deleted:[]},!0)})),this._gateway.signal.on(kw.ON_REMOVE_STREAM,this._handleRemoveStream),this._gateway.signal.on(kw.ON_P2P_LOST,this._handleP2PLost),this._gateway.signal.on(kw.MUTE_AUDIO,(e=>this._handleMuteStream(e.uid,dO.AUDIO,!0))),this._gateway.signal.on(kw.UNMUTE_AUDIO,(e=>this._handleMuteStream(e.uid,dO.AUDIO,!1))),this._gateway.signal.on(kw.MUTE_VIDEO,(e=>this._handleMuteStream(e.uid,dO.VIDEO,!0))),this._gateway.signal.on(kw.UNMUTE_VIDEO,(e=>this._handleMuteStream(e.uid,dO.VIDEO,!1))),this._gateway.signal.on(kw.RECEIVE_METADATA,(e=>{const t=lA(e.metadata);this.safeEmit(zy.RECEIVE_METADATA,e.uid,t)})),this._gateway.signal.on(kw.ON_DATA_STREAM,(async e=>{var t;if(!e)return;let i=lA(e.payload);if(this._encryptDataStream&&this._encryptDataStreamIv&&this._encryptDataStreamKey&&window.crypto.subtle&&Dn(t=[\"aes-128-gcm2\",\"aes-256-gcm2\"]).call(t,this._encryptionMode)){if(e.payload.length<rb)throw new yb(Ry.UNEXPECTED_RESPONSE,\"payload length \".concat(e.payload.length,\" is less than header length \").concat(rb));const t=await async function(e,t,i){const n=i.subarray(0,rb),r=n.slice(8,rb),o=(r[0]<<8)+r[1],s=(n[6]<<8)+n[7],a=await window.crypto.subtle.decrypt({name:\"AES-GCM\",iv:e,tagLength:tb,additionalData:new Uint8Array(yA(o,2))},t,i.subarray(rb));return new Uint8Array(a).subarray(0,s)}(this._encryptDataStreamIv,this._encryptDataStreamKey,i);i=t}let n=0;if(e.ordered||e.syncWithAudio){const t=this._p2pChannel.getStats(),i=this.remoteUsers.find((t=>t.uid===e.uid)),r=null==t?void 0:t.audioRecv.find((e=>e.ssrc===(null==i?void 0:i._audioSSRC)));n=null==r?void 0:r.jitterBufferMs}null==n&&(n=0),NB(IG(IG({},e),{},{payload:i}),n,{id:this._clientId,onStreamMessage:\"function\"==typeof this.onStreamMessage?this.onStreamMessage.bind(this):void 0,safeEmit:this.safeEmit.bind(this)})})),this._gateway.signal.on(kw.ON_CRYPT_ERROR,(()=>{dA((()=>{fb.warning(\"[\".concat(this._clientId,\"] on crypt error\")),this.safeEmit(zy.CRYPT_ERROR)}),this._sessionId)})),this._gateway.signal.on(kw.ON_TOKEN_PRIVILEGE_WILL_EXPIRE,this._handleTokenWillExpire),this._gateway.signal.on(kw.ON_TOKEN_PRIVILEGE_DID_EXPIRE,(()=>{fb.warning(\"[\".concat(this._clientId,\"] received message onTokenPrivilegeDidExpire, please get new token and join again\")),this._gateway.leave(!0,Hy.TOKEN_EXPIRE),this.safeEmit(zy.ON_TOKEN_PRIVILEGE_DID_EXPIRE),this._reset()})),this._gateway.signal.on(kw.ON_STREAM_FALLBACK_UPDATE,(e=>{fb.debug(\"[\".concat(this._clientId,\"] stream fallback peerId: \").concat(e.stream_id,\", attr: \").concat(e.stream_type)),this.safeEmit(zy.STREAM_FALLBACK,e.stream_id,1===e.stream_type?\"fallback\":\"recover\")})),this._gateway.signal.on(kw.ON_PUBLISH_STREAM,(e=>{this.uid===this._uid&&(this._p2pChannel.reportPublishEvent(!0,null,void 0,!1,JSON.stringify({proxy:e.proxy})),fb.info(\"[\".concat(this._clientId,\"] on publish stream, \").concat(JSON.stringify(e))))})),this._gateway.signal.on(kw.ENABLE_LOCAL_VIDEO,(e=>{this._handleSetStreamLocalEnable(\"video\",e.uid,!0)})),this._gateway.signal.on(kw.DISABLE_LOCAL_VIDEO,(e=>{this._handleSetStreamLocalEnable(\"video\",e.uid,!1)})),this._gateway.signal.on(Dw.REQUEST_TIMEOUT,((e,t)=>{if(this._joinInfo)switch(e){case Pw.PUBLISH:{if(!t)return;const e=t.ortc;if(e){var i,n;const r=e.some((e=>{let{stream_type:t}=e;return t===Zw.Audio})),o=e.some((e=>{let{stream_type:t}=e;return t!==Zw.Audio})),s=e.some((e=>{let{stream_type:t}=e;return t===Zw.Screen||t===Zw.ScreenLow}));\"offer\"===t.state&&vb.publish(this._joinInfo.sid,{eventElapse:rV.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:!1,ec:Ry.TIMEOUT,audio:r,video:o,p2pid:t.p2p_id,publishRequestid:this.store.pubId,screenshare:s,audioName:r?null===(i=e.find((e=>{let{stream_type:t}=e;return t===Zw.Audio})))||void 0===i||null===(i=i.ssrcs[0])||void 0===i?void 0:i.ssrcId.toString():void 0,videoName:o?null===(n=e.find((e=>{let{stream_type:t}=e;return t!==Zw.Audio})))||void 0===n||null===(n=n.ssrcs[0])||void 0===n?void 0:n.ssrcId.toString():void 0})}break}case Pw.SUBSCRIBE:t&&vb.subscribe(this._joinInfo.sid,{succ:!1,ec:Ry.TIMEOUT,audio:t.stream_type===dO.AUDIO,video:t.stream_type===dO.VIDEO,peerid:t.stream_id,subscribeRequestid:t.ssrcId,p2pid:this.store.p2pId,eventElapse:rV.measureFromSubscribeStart(this.store.clientId,t.ssrcId),preSsrc:this._p2pChannel.isPreSubScribe(t.ssrcId)})}})),this._gateway.signal.on(kw.ON_P2P_OK,(e=>{this.uid,this._uid})),this._gateway.signal.on(kw.ON_PUBLISHED_USER_LIST,(e=>{if(null==e||!e.users)return;XA(\"BLOCK_LOCAL_CLIENT\")&&(e.users=e.users.filter((e=>!Ob(e.string_id||e.stream_id,this.channelName))));const t=[],i=[];for(const n of e.users){let e=this._users.find((e=>e._uintid===n.stream_id));e?e._trust_in_room_=!0:(e=new cF(n.string_id||n.stream_id,n.stream_id),this._users.push(e),0===this.getListeners(zy.PUBLISHED_USER_LIST).length&&(fb.debug(\"[\".concat(this._clientId,\"] user online\"),n.stream_id),this.safeEmit(zy.USER_JOINED,e)));const r=tO.Audio&n.stream_type,o=(tO.Video|tO.LwoVideo)&n.stream_type,s=0!=(65280&n.stream_type),a=r&&e.hasAudio,c=o&&e.hasVideo;o&&(e._trust_video_stream_added_state_=!0,e._video_added_=!0,e._videoSSRC=n.video_ssrc,e._rtxSsrcId=n.video_rtx),r&&(e._trust_audio_stream_added_state_=!0,e._audio_added_=!0,e._audioSSRC=n.audio_ssrc),r&&!a&&0===this.getListeners(zy.PUBLISHED_USER_LIST).length&&(fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(e.uid,\" published audio\")),this.safeEmit(zy.USER_PUBLISHED,e,\"audio\")),o&&!c&&0===this.getListeners(zy.PUBLISHED_USER_LIST).length&&(fb.info(\"[\".concat(this._clientId,\"] remote user \").concat(e.uid,\" published video\")),this.safeEmit(zy.USER_PUBLISHED,e,\"video\")),(r&&!a||o&&!c||s)&&t.push(e),o&&this._p2pChannel.hasPendingRemoteMedia(e,\"video\")&&i.push({user:e,mediaType:\"video\"}),r&&this._p2pChannel.hasPendingRemoteMedia(e,\"audio\")&&i.push({user:e,mediaType:\"audio\"})}i.length>0&&(fb.debug(\"[\".concat(this._clientId,\"] RE massSubscribe after reconnect \").concat(i.map((e=>\"user: \".concat(e.user.uid,\", mediaType: \").concat(e.mediaType))).join(\"; \"),\" \")),this.massSubscribe(i).catch((e=>{fb.error(\"[\".concat(this._clientId,\"] mass resubscribe error\"),e.toString())}))),this.getListeners(zy.PUBLISHED_USER_LIST).length>0?XA(\"ENABLE_DATASTREAM_2\")?this._pendingPublishedUsers=t:(fb.info(\"[\".concat(this._clientId,\"] client emit user-list event, users: \").concat(t.map((e=>e.uid)).join(\", \"))),this.safeEmit(zy.PUBLISHED_USER_LIST,t)):fb.info(\"[\".concat(this._clientId,\"] client not emit user-list event case there is no user-list listener, users: \").concat(t.map((e=>e.uid)).join(\", \")))})),this._gateway.signal.on(kw.ON_RTP_CAPABILITY_CHANGE,(e=>{const{video_codec:t}=e;this._p2pChannel instanceof fB&&this._p2pChannel.updateRemoteRTPCapabilities(t.map((e=>e.toLowerCase())).filter((e=>{var t;return Dn(t=Object.keys(eb)).call(t,e)})))}))}_handleP2PEvents(){this._gateway.signal.on(kw.ON_USER_OFFLINE,(()=>{this._p2pChannel.disconnectForReconnect()})),this._gateway.signal.on(IO.PUBLISH,((e,t,i)=>{const{uid:n}=e;e.forEach((e=>{const{kind:r,ssrcs:o,mid:s,isMuted:a}=e;this._handleP2PAddAudioOrVideoStream(r,n,o[0].ssrcId,s);const c=this._users.find((e=>e.uid===n));return c&&this._p2pChannel instanceof bF?this._p2pChannel.mockSubscribe(c,r,o[0].ssrcId,s).then((()=>{t()})).catch(i):t(),this._handleMuteStream(n,r,!!a)}))})),this._gateway.signal.on(IO.CALL,(async(e,t,i)=>{if(this._p2pChannel instanceof bF)try{var n;t(await this._p2pChannel.startP2P({turnServer:null===(n=this._joinInfo)||void 0===n?void 0:n.turnServer},e))}catch(e){i(e)}})),this._gateway.signal.on(Dw.P2P_CONNECTION,(async e=>{this._p2pChannel instanceof bF&&await this._p2pChannel.p2pConnect(e)})),this._gateway.signal.on(IO.UNPUBLISH,(async(e,t,i)=>{if(this._p2pChannel instanceof bF){const{unpubMsg:n,uid:r}=e,o=this._users.find((e=>e.uid===r));if(!o)return fb.warning(\"[\".concat(this._clientId,\"] can not find remote user, ignore mute event, uid: \").concat(r)),void t();try{n.forEach((async e=>{let{stream_type:t}=e;const i=t===Zw.Audio?dO.AUDIO:dO.VIDEO;await this._p2pChannel.unsubscribe(o,i),this._handleMuteStream(r,i,!0)})),t()}catch(e){i(e)}}})),this._gateway.signal.on(IO.CONTROL,(async(e,t)=>{const{action:i}=e;switch(i){case yO.MUTE_LOCAL_VIDEO:this._handleMuteStream(t,dO.VIDEO,!0);break;case yO.MUTE_LOCAL_AUDIO:this._handleMuteStream(t,dO.AUDIO,!0);break;case yO.UNMUTE_LOCAL_VIDEO:this._handleP2PAddAudioOrVideoStream(\"video\",t),this._handleMuteStream(t,dO.VIDEO,!1);break;case yO.UNMUTE_LOCAL_AUDIO:this._handleP2PAddAudioOrVideoStream(\"audio\",t),this._handleMuteStream(t,dO.AUDIO,!1)}})),this._gateway.signal.on(IO.RESTART_ICE,(async(e,t,i)=>{if(this._p2pChannel instanceof bF)try{const{direction:i,iceParameter:n}=e;if(i!==Mw.SEND_ONLY||n){t(await this._p2pChannel.restartICE(i,n))}else this._p2pChannel.handleDisconnect(i),t()}catch(e){i(e)}})),this._gateway.signal.on(IO.CANDIDATE,(e=>{if(this._p2pChannel instanceof bF){const{candidate:t,direction:i}=e;this._p2pChannel.addRemoteCandidate(t,i)}})),this._p2pChannel.on(_O.RequestP2PRestartICE,(async(e,t,i)=>{try{const{direction:i}=e;t(await this._gateway.sendExtensionMessage(IO.RESTART_ICE,e,i===Mw.SEND_ONLY))}catch(e){i(e)}})),this._p2pChannel.on(_O.LocalCandidate,(e=>{this._gateway.sendExtensionMessage(IO.CANDIDATE,JSON.stringify(e),!0)})),this._p2pChannel.on(_O.RequestP2PMuteLocal,(async(e,t,i)=>{try{await this._gateway.sendExtensionMessage(IO.CONTROL,e,!0),t()}catch(e){i(e)}})),this._p2pChannel.on(_O.RequestP2PUnmuteRemote,(async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.unmuteRemote(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===Ry.DISCONNECT_P2P?t():i(e)}else t()})),this._p2pChannel.on(_O.RequestP2PMuteRemote,(async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.muteRemote(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===Ry.DISCONNECT_P2P?t():i(e)}else t()})),this._p2pChannel.on(_O.StateChange,((e,t)=>{t===pO.Connected&&this._p2pChannel.republish()}))}_handleP2PChannelEvents(){this._p2pChannel.on(_O.RequestMuteLocal,(async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.muteLocal(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===Ry.DISCONNECT_P2P?t():i(e)}else t()})),this._p2pChannel.on(_O.RequestUnmuteLocal,(async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.unmuteLocal(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===Ry.DISCONNECT_P2P?t():i(e)}else t()})),this._p2pChannel.on(_O.RequestRePublish,((e,t,i)=>{this.publish(e,!1).then(t).catch(i)})),this._p2pChannel.on(_O.RequestRePublishDataChannel,((e,t,i)=>{Gh.all(e.map((async e=>{const t=await this._p2pChannel.publishDataChannel([e]);try{t.forEach((e=>{this._uid&&this._gateway.publishDataChannel(this._uid,e,!0)}))}catch(e){if(e.code!==Ry.DISCONNECT_P2P)throw e}}))).then(t).catch(i)})),this._p2pChannel.on(_O.RequestReSubscribe,(async(e,t,i)=>{try{for(const{user:t,kind:i}of e)i===dO.VIDEO?await this.subscribe(t,\"video\"):await this.subscribe(t,\"audio\");t()}catch(e){i(e)}})),this._p2pChannel.on(_O.RequestUpload,((e,t)=>{this._gateway.upload(e,t)})),this._p2pChannel.on(_O.RequestUploadStats,(e=>{this._gateway.uploadWRTCStats(e)})),this._p2pChannel.on(_O.MediaReconnectStart,(e=>{this.safeEmit(zy.MEDIA_RECONNECT_START,e)})),this._p2pChannel.on(_O.MediaReconnectEnd,(e=>{this.safeEmit(zy.MEDIA_RECONNECT_END,e)})),this._p2pChannel.on(_O.NeedSignalRTT,(e=>{e(this._gateway.getSignalRTT())})),this._p2pChannel.on(_O.RequestRestartICE,(async e=>{if(this._p2pChannel instanceof bF)return;const t=await this._p2pChannel.restartICE(e),i=await t.next();if(i.done)return;const n=i.value;let r;try{r=await this._gateway.restartICE({iceParameters:n})}catch(e){return void t.throw(e)}const{iceParameters:o}=function(e){const t=e.iceParameters;return{iceParameters:{iceUfrag:t.iceUfrag,icePwd:t.icePwd}}}(r);await t.next({remoteIceParameters:o})})),this._p2pChannel.on(_O.RequestReconnect,(async()=>{this._gateway.reconnect()})),this._p2pChannel.on(_O.RequestReconnectPC,(async()=>{var e;const{iceParameters:t,dtlsParameters:i,rtpCapabilities:n}=await this._p2pChannel.startP2PConnection({turnServer:null===(e=this._joinInfo)||void 0===e?void 0:e.turnServer}),{gatewayEstablishParams:r,gatewayAddress:o}=await this._gateway.reconnectPC({iceParameters:t,dtlsParameters:i,rtpCapabilities:n}),s=YU(r,o);await this._p2pChannel.connect(s),await this._p2pChannel.republish(),await this._p2pChannel.reSubscribe()})),this._p2pChannel.on(_O.RequestUnpublishForReconnectPC,(async(e,t,i)=>{this._joinInfo&&void 0!==this._uid?(await this._gateway.unpublish(e,this._uid),t()):i()})),this._p2pChannel.on(_O.P2PLost,(()=>{this.safeEmit(zy.P2P_LOST,this.store.uid)})),this._p2pChannel.on(_O.UpdateVideoEncoder,(e=>{e._encoderConfig&&this._gateway.setVideoProfile(e._encoderConfig)})),this._p2pChannel.on(_O.ConnectionTypeChange,(e=>{this.safeEmit(zy.IS_USING_CLOUD_PROXY,e)})),this._p2pChannel.on(_O.RequestLowStreamParameter,(e=>{e(this._lowStreamParameter||{width:160,height:120,framerate:15,bitrate:50})})),this._p2pChannel.on(_O.QueryClientConnectionState,(e=>{e(this.connectionState)}))}getKeyMetrics(){return this.store.keyMetrics}async enableContentInspect(e){if(!this._joinInfo||\"CONNECTED\"!==this.connectionState)throw new yb(Ry.INVALID_OPERATION,\"[\".concat(this._clientId,\"] can not create content inspect, please join channel first\"));if(this._inspect)throw new yb(Ry.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Inspect content service already in connecting/connected state\"));try{const i=(t={config:e},gB(\"ContentInspect\").create(t));this._inspect=i,this.handleVideoInspectEvents(i);const{appId:n,cname:r,sid:o,token:s,uid:a,cid:c,vid:d}=this._joinInfo;await i.init({appId:n,areaCode:\"\",cname:r,sid:o,token:s,uid:a,cid:c,vid:d?Number(d):0},PA)}catch(e){throw Array.isArray(e)?e[0]:e}var t}handleVideoInspectEvents(e){e.on(mO.CONNECTION_STATE_CHANGE,((t,i)=>{if(this.safeEmit(zy.CONTENT_INSPECT_CONNECTION_STATE_CHANGE,t,i),i===EO.CONNECTED){if(\"CONNECTED\"!==this.connectionState)return void this.safeEmit(zy.CONTENT_INSPECT_ERROR,new yb(Ry.OPERATION_ABORTED,\"Content inspect was cancelled because it left the channel\"));e.inspectImage()}})),e.on(mO.INSPECT_RESULT,((e,t)=>{var i;if((null==t?void 0:t.code)===Ry.INVALID_OPERATION&&\"DISCONNECTED\"===this.connectionState)return fb.debug(\"Stop inspect content because that has left channel\"),null==this||null===(i=this._inspect)||void 0===i||i.close(),void(this._inspect=void 0);this.safeEmit(zy.CONTENT_INSPECT_RESULT,e,t)})),e.on(mO.CLIENT_LOCAL_VIDEO_TRACK,(e=>{e(this.localTracks.filter((e=>\"video\"===e.trackMediaType))[0])}))}async disableContentInspect(){if(!this._inspect)throw new yb(Ry.INVALID_OPERATION,\"[\".concat(this._clientId,\"] inspectVideoContent not started\"));try{this._inspect.close(),this._inspect=void 0}catch(e){throw Array.isArray(e)?e[0]:e}}async setImageModeration(e,t){if(Iy(e,\"enabled\"),e){if(!t)throw new yb(Ry.INVALID_PARAMS,\"config is required\");if(Lj(t),!this._joinInfo)throw new yb(Ry.INVALID_OPERATION,\"can not create image moderation, please join channel first\");try{if(this._moderation)this._moderation.updateConfig(t);else{const e=(i={config:t},gB(\"ImageModeration\").create(i));this._moderation=e,this.handleImageModerationEvents(e);const{appId:n,cname:r,sid:o,token:s,uid:a,cid:c,vid:d}=this._joinInfo;await e.init({appId:n,areaCode:\"\",cname:r,sid:o,token:s,uid:a,cid:c,vid:d?Number(d):0},PA)}}catch(e){throw Array.isArray(e)?e[0]:e}}else{var i;if(!this._moderation)throw new yb(Ry.INVALID_OPERATION,\"[\".concat(this._clientId,\"] image moderation not started\"));try{this._moderation.close(),this._moderation.removeAllListeners(),this._moderation=void 0}catch(e){throw Array.isArray(e)?e[0]:e}}}handleImageModerationEvents(e){e.on(RO.CONNECTION_STATE_CHANGE,((t,i)=>{if(this.safeEmit(zy.IMAGE_MODERATION_CONNECTION_STATE_CHANGE,t,i),t===gO.CONNECTED){if(\"CONNECTED\"!==this.connectionState)throw this.setImageModeration(!1),new yb(Ry.OPERATION_ABORTED,\"Image moderation was cancelled because it left the channel\");e.inspectImage()}})),e.on(RO.CLIENT_LOCAL_VIDEO_TRACK,(e=>{e(this.localTracks.filter((e=>\"video\"===e.trackMediaType))[0])}))}setP2PTransport(e){if(function(e){vy(e,\"transport\",[\"default\",\"auto\",\"relay\",\"sd-rtn\"])}(e),\"p2p\"!==this.mode)throw new yb(Ry.INVALID_OPERATION,\"only p2p mode can set p2pTransport\");this.store.p2pTransport=e,fb.info(\"[\".concat(this._clientId,\"] set client p2pTransport to \").concat(e))}getJoinChannelServiceRecords(){return fb.debug(\"getJoinChannelServiceRecords\"),this.store.joinChannelServiceRecords}async setPublishAudioFilterEnabled(e){Iy(e,\"enabled\"),JA(\"ENABLE_PUBLISH_AUDIO_FILTER\",e),this._joinInfo&&await this._gateway.setPublishAudioFilterEnabled(e)}_handleResetAddStream(e,t){switch(t){case\"audio\":e._audio_added_=!1,e._trust_audio_stream_added_state_=!0;break;case\"video\":e._video_added_=!1,e._trust_video_stream_added_state_=!0}}},Cw(RG.prototype,\"leave\",[Mj],Object.getOwnPropertyDescriptor(RG.prototype,\"leave\"),RG.prototype),Cw(RG.prototype,\"publish\",[Uj],Object.getOwnPropertyDescriptor(RG.prototype,\"publish\"),RG.prototype),Cw(RG.prototype,\"unpublish\",[xj],Object.getOwnPropertyDescriptor(RG.prototype,\"unpublish\"),RG.prototype),Cw(RG.prototype,\"subscribe\",[Vj],Object.getOwnPropertyDescriptor(RG.prototype,\"subscribe\"),RG.prototype),Cw(RG.prototype,\"presubscribe\",[Fj],Object.getOwnPropertyDescriptor(RG.prototype,\"presubscribe\"),RG.prototype),Cw(RG.prototype,\"massSubscribe\",[Bj],Object.getOwnPropertyDescriptor(RG.prototype,\"massSubscribe\"),RG.prototype),Cw(RG.prototype,\"unsubscribe\",[jj],Object.getOwnPropertyDescriptor(RG.prototype,\"unsubscribe\"),RG.prototype),Cw(RG.prototype,\"massUnsubscribe\",[Gj],Object.getOwnPropertyDescriptor(RG.prototype,\"massUnsubscribe\"),RG.prototype),Cw(RG.prototype,\"setLowStreamParameter\",[Wj],Object.getOwnPropertyDescriptor(RG.prototype,\"setLowStreamParameter\"),RG.prototype),Cw(RG.prototype,\"enableDualStream\",[Hj],Object.getOwnPropertyDescriptor(RG.prototype,\"enableDualStream\"),RG.prototype),Cw(RG.prototype,\"disableDualStream\",[Kj],Object.getOwnPropertyDescriptor(RG.prototype,\"disableDualStream\"),RG.prototype),Cw(RG.prototype,\"setClientRole\",[Yj],Object.getOwnPropertyDescriptor(RG.prototype,\"setClientRole\"),RG.prototype),Cw(RG.prototype,\"setProxyServer\",[qj],Object.getOwnPropertyDescriptor(RG.prototype,\"setProxyServer\"),RG.prototype),Cw(RG.prototype,\"setTurnServer\",[zj],Object.getOwnPropertyDescriptor(RG.prototype,\"setTurnServer\"),RG.prototype),Cw(RG.prototype,\"setLicense\",[Jj],Object.getOwnPropertyDescriptor(RG.prototype,\"setLicense\"),RG.prototype),Cw(RG.prototype,\"startProxyServer\",[Xj],Object.getOwnPropertyDescriptor(RG.prototype,\"startProxyServer\"),RG.prototype),Cw(RG.prototype,\"stopProxyServer\",[Qj],Object.getOwnPropertyDescriptor(RG.prototype,\"stopProxyServer\"),RG.prototype),Cw(RG.prototype,\"setLocalAccessPointsV2\",[Zj],Object.getOwnPropertyDescriptor(RG.prototype,\"setLocalAccessPointsV2\"),RG.prototype),Cw(RG.prototype,\"setLocalAccessPoints\",[$j],Object.getOwnPropertyDescriptor(RG.prototype,\"setLocalAccessPoints\"),RG.prototype),Cw(RG.prototype,\"setRemoteDefaultVideoStreamType\",[eG],Object.getOwnPropertyDescriptor(RG.prototype,\"setRemoteDefaultVideoStreamType\"),RG.prototype),Cw(RG.prototype,\"setRemoteVideoStreamType\",[tG],Object.getOwnPropertyDescriptor(RG.prototype,\"setRemoteVideoStreamType\"),RG.prototype),Cw(RG.prototype,\"setStreamFallbackOption\",[iG],Object.getOwnPropertyDescriptor(RG.prototype,\"setStreamFallbackOption\"),RG.prototype),Cw(RG.prototype,\"setEncryptionConfig\",[nG],Object.getOwnPropertyDescriptor(RG.prototype,\"setEncryptionConfig\"),RG.prototype),Cw(RG.prototype,\"renewToken\",[rG],Object.getOwnPropertyDescriptor(RG.prototype,\"renewToken\"),RG.prototype),Cw(RG.prototype,\"enableAudioVolumeIndicator\",[oG],Object.getOwnPropertyDescriptor(RG.prototype,\"enableAudioVolumeIndicator\"),RG.prototype),Cw(RG.prototype,\"startLiveStreaming\",[sG],Object.getOwnPropertyDescriptor(RG.prototype,\"startLiveStreaming\"),RG.prototype),Cw(RG.prototype,\"setLiveTranscoding\",[aG],Object.getOwnPropertyDescriptor(RG.prototype,\"setLiveTranscoding\"),RG.prototype),Cw(RG.prototype,\"stopLiveStreaming\",[cG],Object.getOwnPropertyDescriptor(RG.prototype,\"stopLiveStreaming\"),RG.prototype),Cw(RG.prototype,\"startChannelMediaRelay\",[dG],Object.getOwnPropertyDescriptor(RG.prototype,\"startChannelMediaRelay\"),RG.prototype),Cw(RG.prototype,\"updateChannelMediaRelay\",[lG],Object.getOwnPropertyDescriptor(RG.prototype,\"updateChannelMediaRelay\"),RG.prototype),Cw(RG.prototype,\"stopChannelMediaRelay\",[uG],Object.getOwnPropertyDescriptor(RG.prototype,\"stopChannelMediaRelay\"),RG.prototype),Cw(RG.prototype,\"sendCustomReportMessage\",[hG],Object.getOwnPropertyDescriptor(RG.prototype,\"sendCustomReportMessage\"),RG.prototype),Cw(RG.prototype,\"pickSVCLayer\",[pG],Object.getOwnPropertyDescriptor(RG.prototype,\"pickSVCLayer\"),RG.prototype),Cw(RG.prototype,\"setRTMConfig\",[_G],Object.getOwnPropertyDescriptor(RG.prototype,\"setRTMConfig\"),RG.prototype),Cw(RG.prototype,\"enableContentInspect\",[EG],Object.getOwnPropertyDescriptor(RG.prototype,\"enableContentInspect\"),RG.prototype),Cw(RG.prototype,\"disableContentInspect\",[fG],Object.getOwnPropertyDescriptor(RG.prototype,\"disableContentInspect\"),RG.prototype),Cw(RG.prototype,\"setImageModeration\",[mG],Object.getOwnPropertyDescriptor(RG.prototype,\"setImageModeration\"),RG.prototype),Cw(RG.prototype,\"setP2PTransport\",[TG],Object.getOwnPropertyDescriptor(RG.prototype,\"setP2PTransport\"),RG.prototype),Cw(RG.prototype,\"getJoinChannelServiceRecords\",[SG],Object.getOwnPropertyDescriptor(RG.prototype,\"getJoinChannelServiceRecords\"),RG.prototype),Cw(RG.prototype,\"setPublishAudioFilterEnabled\",[gG],Object.getOwnPropertyDescriptor(RG.prototype,\"setPublishAudioFilterEnabled\"),RG.prototype),RG);class yG{constructor(e,t){Fg(this,\"id\",0),Fg(this,\"element\",void 0),Fg(this,\"peerPair\",void 0),Fg(this,\"context\",void 0),Fg(this,\"audioPlayerElement\",void 0),Fg(this,\"audioTrack\",void 0),yG.count+=1,this.id=yG.count,this.element=e,this.context=t}initPeers(){this.peerPair=[new RTCPeerConnection,new RTCPeerConnection],this.peerPair[1].ontrack=e=>{const t=document.createElement(\"audio\");t.srcObject=new MediaStream([e.track]),t.play(),this.audioPlayerElement=t}}async switchSdp(){if(!this.peerPair)return;const e=async(e,t)=>{const i=\"offer\"===t?await e.createOffer():await e.createAnswer();return await e.setLocalDescription(i),\"complete\"===e.iceGatheringState?e.localDescription:new Gh((t=>{e.onicegatheringstatechange=()=>{\"complete\"===e.iceGatheringState&&t(e.localDescription)}}))},t=async(e,t)=>await e.setRemoteDescription(t);try{const i=await e(this.peerPair[0],\"offer\");await t(this.peerPair[1],i);const n=await e(this.peerPair[1],\"answer\");await t(this.peerPair[0],n)}catch(e){throw new yb(Ry.LOCAL_AEC_ERROR,e.toString()).print()}}async getTracksFromMediaElement(e){if(this.audioTrack)return this.audioTrack;let t;try{e instanceof HTMLVideoElement&&(e.captureStream?e.captureStream():e.mozCaptureStream()),t=this.context.createMediaStreamDestination();this.context.createMediaElementSource(e).connect(t)}catch(e){throw new yb(Ry.LOCAL_AEC_ERROR,e.toString()).print()}if(!t){throw new yb(Ry.LOCAL_AEC_ERROR,\"no dest node when local aec\").print()}const i=t.stream.getAudioTracks()[0];return this.audioTrack=i,i}getElement(){return this.element}async startEchoCancellation(){this.context.resume(),this.peerPair&&this.close(),this.initPeers();const e=this.element,t=await this.getTracksFromMediaElement(e);this.peerPair&&this.peerPair[0].addTrack(t),await this.switchSdp()}close(){fb.debug(\"close echo cancellation unit, id is\",this.id),this.audioPlayerElement&&this.audioPlayerElement.pause(),this.peerPair&&this.peerPair.forEach((e=>{e.close()})),this.peerPair=void 0,this.audioPlayerElement=void 0}}var AG,bG;Fg(yG,\"count\",0);const wG=window.AudioContext||window.webkitAudioContext;const OG=new(AG=Ib({report:vb}),Cw((bG=class{constructor(){Fg(this,\"units\",[]),Fg(this,\"context\",void 0)}processExternalMediaAEC(e){if(!this._doesEnvironmentNeedAEC())return fb.debug(\"the system does not need to process local aec\"),-1;this.context||(this.context=new wG);let t=this.units.find((t=>t&&t.getElement()===e));return t||(t=new yG(e,this.context),this.units.push(t)),t.startEchoCancellation(),fb.debug(\"start processing local audio echo cancellation, id is\",t.id),t.id}_doesEnvironmentNeedAEC(){return Hv().name!==Bv.SAFARI}}).prototype,\"processExternalMediaAEC\",[AG],Object.getOwnPropertyDescriptor(bG.prototype,\"processExternalMediaAEC\"),bG.prototype),bG);function NG(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function DG(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?NG(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):NG(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const PG=window||document;function LG(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!PG)return;const i=nq._cspEventHandlerPointer;if(i&&t)return void console.error(i,t);const n=e=>{if(!(e&&e.blockedURI&&(nq.onSecurityPolicyViolation||nq.getListeners(SO.SECURITY_POLICY_VIOLATION).length>0)))return;const t=e.blockedURI;XA(\"CSP_DETECTED_HOSTNAME_LIST\").some((e=>Dn(t).call(t,e)))&&(nq.onSecurityPolicyViolation&&\"function\"==typeof nq.onSecurityPolicyViolation&&nq.onSecurityPolicyViolation(e),nq.getListeners(SO.SECURITY_POLICY_VIOLATION).length>0&&nq.safeEmit(SO.SECURITY_POLICY_VIOLATION,e))};i&&PG.removeEventListener(\"securitypolicyviolation\",i),(t||e&&\"function\"==typeof e||nq.getListeners(SO.SECURITY_POLICY_VIOLATION).length>0)&&PG.addEventListener(\"securitypolicyviolation\",n),nq._cspEventHandlerPointer=n}var kG=l,MG=RC,UG=RegExp.prototype,xG=function(e){return e===UG||kG(UG,e)?MG(e):e.flags},VG=i(xG);function FG(e){let t=e.length;for(;--t>=0;)e[t]=0}const BG=256,jG=286,GG=30,WG=15,HG=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),KG=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),YG=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),qG=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),zG=new Array(576);FG(zG);const JG=new Array(60);FG(JG);const XG=new Array(512);FG(XG);const QG=new Array(256);FG(QG);const ZG=new Array(29);FG(ZG);const $G=new Array(GG);function eW(e,t,i,n,r){this.static_tree=e,this.extra_bits=t,this.extra_base=i,this.elems=n,this.max_length=r,this.has_stree=e&&e.length}let tW,iW,nW;function rW(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}FG($G);const oW=e=>e<256?XG[e]:XG[256+(e>>>7)],sW=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255},aW=(e,t,i)=>{e.bi_valid>16-i?(e.bi_buf|=t<<e.bi_valid&65535,sW(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=i-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=i)},cW=(e,t,i)=>{aW(e,i[2*t],i[2*t+1])},dW=(e,t)=>{let i=0;do{i|=1&e,e>>>=1,i<<=1}while(--t>0);return i>>>1},lW=(e,t,i)=>{const n=new Array(16);let r,o,s=0;for(r=1;r<=WG;r++)s=s+i[r-1]<<1,n[r]=s;for(o=0;o<=t;o++){let t=e[2*o+1];0!==t&&(e[2*o]=dW(n[t]++,t))}},uW=e=>{let t;for(t=0;t<jG;t++)e.dyn_ltree[2*t]=0;for(t=0;t<GG;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.sym_next=e.matches=0},hW=e=>{e.bi_valid>8?sW(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},pW=(e,t,i,n)=>{const r=2*t,o=2*i;return e[r]<e[o]||e[r]===e[o]&&n[t]<=n[i]},_W=(e,t,i)=>{const n=e.heap[i];let r=i<<1;for(;r<=e.heap_len&&(r<e.heap_len&&pW(t,e.heap[r+1],e.heap[r],e.depth)&&r++,!pW(t,n,e.heap[r],e.depth));)e.heap[i]=e.heap[r],i=r,r<<=1;e.heap[i]=n},EW=(e,t,i)=>{let n,r,o,s,a=0;if(0!==e.sym_next)do{n=255&e.pending_buf[e.sym_buf+a++],n+=(255&e.pending_buf[e.sym_buf+a++])<<8,r=e.pending_buf[e.sym_buf+a++],0===n?cW(e,r,t):(o=QG[r],cW(e,o+BG+1,t),s=HG[o],0!==s&&(r-=ZG[o],aW(e,r,s)),n--,o=oW(n),cW(e,o,i),s=KG[o],0!==s&&(n-=$G[o],aW(e,n,s)))}while(a<e.sym_next);cW(e,256,t)},fW=(e,t)=>{const i=t.dyn_tree,n=t.stat_desc.static_tree,r=t.stat_desc.has_stree,o=t.stat_desc.elems;let s,a,c,d=-1;for(e.heap_len=0,e.heap_max=573,s=0;s<o;s++)0!==i[2*s]?(e.heap[++e.heap_len]=d=s,e.depth[s]=0):i[2*s+1]=0;for(;e.heap_len<2;)c=e.heap[++e.heap_len]=d<2?++d:0,i[2*c]=1,e.depth[c]=0,e.opt_len--,r&&(e.static_len-=n[2*c+1]);for(t.max_code=d,s=e.heap_len>>1;s>=1;s--)_W(e,i,s);c=o;do{s=e.heap[1],e.heap[1]=e.heap[e.heap_len--],_W(e,i,1),a=e.heap[1],e.heap[--e.heap_max]=s,e.heap[--e.heap_max]=a,i[2*c]=i[2*s]+i[2*a],e.depth[c]=(e.depth[s]>=e.depth[a]?e.depth[s]:e.depth[a])+1,i[2*s+1]=i[2*a+1]=c,e.heap[1]=c++,_W(e,i,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],((e,t)=>{const i=t.dyn_tree,n=t.max_code,r=t.stat_desc.static_tree,o=t.stat_desc.has_stree,s=t.stat_desc.extra_bits,a=t.stat_desc.extra_base,c=t.stat_desc.max_length;let d,l,u,h,p,_,E=0;for(h=0;h<=WG;h++)e.bl_count[h]=0;for(i[2*e.heap[e.heap_max]+1]=0,d=e.heap_max+1;d<573;d++)l=e.heap[d],h=i[2*i[2*l+1]+1]+1,h>c&&(h=c,E++),i[2*l+1]=h,l>n||(e.bl_count[h]++,p=0,l>=a&&(p=s[l-a]),_=i[2*l],e.opt_len+=_*(h+p),o&&(e.static_len+=_*(r[2*l+1]+p)));if(0!==E){do{for(h=c-1;0===e.bl_count[h];)h--;e.bl_count[h]--,e.bl_count[h+1]+=2,e.bl_count[c]--,E-=2}while(E>0);for(h=c;0!==h;h--)for(l=e.bl_count[h];0!==l;)u=e.heap[--d],u>n||(i[2*u+1]!==h&&(e.opt_len+=(h-i[2*u+1])*i[2*u],i[2*u+1]=h),l--)}})(e,t),lW(i,d,e.bl_count)},mW=(e,t,i)=>{let n,r,o=-1,s=t[1],a=0,c=7,d=4;for(0===s&&(c=138,d=3),t[2*(i+1)+1]=65535,n=0;n<=i;n++)r=s,s=t[2*(n+1)+1],++a<c&&r===s||(a<d?e.bl_tree[2*r]+=a:0!==r?(r!==o&&e.bl_tree[2*r]++,e.bl_tree[32]++):a<=10?e.bl_tree[34]++:e.bl_tree[36]++,a=0,o=r,0===s?(c=138,d=3):r===s?(c=6,d=3):(c=7,d=4))},TW=(e,t,i)=>{let n,r,o=-1,s=t[1],a=0,c=7,d=4;for(0===s&&(c=138,d=3),n=0;n<=i;n++)if(r=s,s=t[2*(n+1)+1],!(++a<c&&r===s)){if(a<d)do{cW(e,r,e.bl_tree)}while(0!=--a);else 0!==r?(r!==o&&(cW(e,r,e.bl_tree),a--),cW(e,16,e.bl_tree),aW(e,a-3,2)):a<=10?(cW(e,17,e.bl_tree),aW(e,a-3,3)):(cW(e,18,e.bl_tree),aW(e,a-11,7));a=0,o=r,0===s?(c=138,d=3):r===s?(c=6,d=3):(c=7,d=4)}};let SW=!1;const gW=(e,t,i,n)=>{aW(e,0+(n?1:0),3),hW(e),sW(e,i),sW(e,~i),i&&e.pending_buf.set(e.window.subarray(t,t+i),e.pending),e.pending+=i};var RW=e=>{SW||((()=>{let e,t,i,n,r;const o=new Array(16);for(i=0,n=0;n<28;n++)for(ZG[n]=i,e=0;e<1<<HG[n];e++)QG[i++]=n;for(QG[i-1]=n,r=0,n=0;n<16;n++)for($G[n]=r,e=0;e<1<<KG[n];e++)XG[r++]=n;for(r>>=7;n<GG;n++)for($G[n]=r<<7,e=0;e<1<<KG[n]-7;e++)XG[256+r++]=n;for(t=0;t<=WG;t++)o[t]=0;for(e=0;e<=143;)zG[2*e+1]=8,e++,o[8]++;for(;e<=255;)zG[2*e+1]=9,e++,o[9]++;for(;e<=279;)zG[2*e+1]=7,e++,o[7]++;for(;e<=287;)zG[2*e+1]=8,e++,o[8]++;for(lW(zG,287,o),e=0;e<GG;e++)JG[2*e+1]=5,JG[2*e]=dW(e,5);tW=new eW(zG,HG,257,jG,WG),iW=new eW(JG,KG,0,GG,WG),nW=new eW(new Array(0),YG,0,19,7)})(),SW=!0),e.l_desc=new rW(e.dyn_ltree,tW),e.d_desc=new rW(e.dyn_dtree,iW),e.bl_desc=new rW(e.bl_tree,nW),e.bi_buf=0,e.bi_valid=0,uW(e)},CW=(e,t,i,n)=>{let r,o,s=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=(e=>{let t,i=4093624447;for(t=0;t<=31;t++,i>>>=1)if(1&i&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<BG;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0})(e)),fW(e,e.l_desc),fW(e,e.d_desc),s=(e=>{let t;for(mW(e,e.dyn_ltree,e.l_desc.max_code),mW(e,e.dyn_dtree,e.d_desc.max_code),fW(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*qG[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t})(e),r=e.opt_len+3+7>>>3,o=e.static_len+3+7>>>3,o<=r&&(r=o)):r=o=i+5,i+4<=r&&-1!==t?gW(e,t,i,n):4===e.strategy||o===r?(aW(e,2+(n?1:0),3),EW(e,zG,JG)):(aW(e,4+(n?1:0),3),((e,t,i,n)=>{let r;for(aW(e,t-257,5),aW(e,i-1,5),aW(e,n-4,4),r=0;r<n;r++)aW(e,e.bl_tree[2*qG[r]+1],3);TW(e,e.dyn_ltree,t-1),TW(e,e.dyn_dtree,i-1)})(e,e.l_desc.max_code+1,e.d_desc.max_code+1,s+1),EW(e,e.dyn_ltree,e.dyn_dtree)),uW(e),n&&hW(e)},IW=(e,t,i)=>(e.pending_buf[e.sym_buf+e.sym_next++]=t,e.pending_buf[e.sym_buf+e.sym_next++]=t>>8,e.pending_buf[e.sym_buf+e.sym_next++]=i,0===t?e.dyn_ltree[2*i]++:(e.matches++,t--,e.dyn_ltree[2*(QG[i]+BG+1)]++,e.dyn_dtree[2*oW(t)]++),e.sym_next===e.sym_end),vW=e=>{aW(e,2,3),cW(e,256,zG),(e=>{16===e.bi_valid?(sW(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(e)},yW={_tr_init:RW,_tr_stored_block:gW,_tr_flush_block:CW,_tr_tally:IW,_tr_align:vW};var AW=(e,t,i,n)=>{let r=65535&e|0,o=e>>>16&65535|0,s=0;for(;0!==i;){s=i>2e3?2e3:i,i-=s;do{r=r+t[n++]|0,o=o+r|0}while(--s);r%=65521,o%=65521}return r|o<<16|0};const bW=new Uint32Array((()=>{let e,t=[];for(var i=0;i<256;i++){e=i;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[i]=e}return t})());var wW=(e,t,i,n)=>{const r=bW,o=n+i;e^=-1;for(let i=n;i<o;i++)e=e>>>8^r[255&(e^t[i])];return-1^e},OW={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"},NW={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:DW,_tr_stored_block:PW,_tr_flush_block:LW,_tr_tally:kW,_tr_align:MW}=yW,{Z_NO_FLUSH:UW,Z_PARTIAL_FLUSH:xW,Z_FULL_FLUSH:VW,Z_FINISH:FW,Z_BLOCK:BW,Z_OK:jW,Z_STREAM_END:GW,Z_STREAM_ERROR:WW,Z_DATA_ERROR:HW,Z_BUF_ERROR:KW,Z_DEFAULT_COMPRESSION:YW,Z_FILTERED:qW,Z_HUFFMAN_ONLY:zW,Z_RLE:JW,Z_FIXED:XW,Z_DEFAULT_STRATEGY:QW,Z_UNKNOWN:ZW,Z_DEFLATED:$W}=NW,eH=286,tH=30,iH=19,nH=2*eH+1,rH=15,oH=258,sH=262,aH=42,cH=113,dH=666,lH=(e,t)=>(e.msg=OW[t],t),uH=e=>2*e-(e>4?9:0),hH=e=>{let t=e.length;for(;--t>=0;)e[t]=0},pH=e=>{let t,i,n,r=e.w_size;t=e.hash_size,n=t;do{i=e.head[--n],e.head[n]=i>=r?i-r:0}while(--t);t=r,n=t;do{i=e.prev[--n],e.prev[n]=i>=r?i-r:0}while(--t)};let _H=(e,t,i)=>(t<<e.hash_shift^i)&e.hash_mask;const EH=e=>{const t=e.state;let i=t.pending;i>e.avail_out&&(i=e.avail_out),0!==i&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+i),e.next_out),e.next_out+=i,t.pending_out+=i,e.total_out+=i,e.avail_out-=i,t.pending-=i,0===t.pending&&(t.pending_out=0))},fH=(e,t)=>{LW(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,EH(e.strm)},mH=(e,t)=>{e.pending_buf[e.pending++]=t},TH=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t},SH=(e,t,i,n)=>{let r=e.avail_in;return r>n&&(r=n),0===r?0:(e.avail_in-=r,t.set(e.input.subarray(e.next_in,e.next_in+r),i),1===e.state.wrap?e.adler=AW(e.adler,t,r,i):2===e.state.wrap&&(e.adler=wW(e.adler,t,r,i)),e.next_in+=r,e.total_in+=r,r)},gH=(e,t)=>{let i,n,r=e.max_chain_length,o=e.strstart,s=e.prev_length,a=e.nice_match;const c=e.strstart>e.w_size-sH?e.strstart-(e.w_size-sH):0,d=e.window,l=e.w_mask,u=e.prev,h=e.strstart+oH;let p=d[o+s-1],_=d[o+s];e.prev_length>=e.good_match&&(r>>=2),a>e.lookahead&&(a=e.lookahead);do{if(i=t,d[i+s]===_&&d[i+s-1]===p&&d[i]===d[o]&&d[++i]===d[o+1]){o+=2,i++;do{}while(d[++o]===d[++i]&&d[++o]===d[++i]&&d[++o]===d[++i]&&d[++o]===d[++i]&&d[++o]===d[++i]&&d[++o]===d[++i]&&d[++o]===d[++i]&&d[++o]===d[++i]&&o<h);if(n=oH-(h-o),o=h-oH,n>s){if(e.match_start=t,s=n,n>=a)break;p=d[o+s-1],_=d[o+s]}}}while((t=u[t&l])>c&&0!=--r);return s<=e.lookahead?s:e.lookahead},RH=e=>{const t=e.w_size;let i,n,r;do{if(n=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-sH)&&(e.window.set(e.window.subarray(t,t+t-n),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,e.insert>e.strstart&&(e.insert=e.strstart),pH(e),n+=t),0===e.strm.avail_in)break;if(i=SH(e.strm,e.window,e.strstart+e.lookahead,n),e.lookahead+=i,e.lookahead+e.insert>=3)for(r=e.strstart-e.insert,e.ins_h=e.window[r],e.ins_h=_H(e,e.ins_h,e.window[r+1]);e.insert&&(e.ins_h=_H(e,e.ins_h,e.window[r+3-1]),e.prev[r&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=r,r++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<sH&&0!==e.strm.avail_in)},CH=(e,t)=>{let i,n,r,o=e.pending_buf_size-5>e.w_size?e.w_size:e.pending_buf_size-5,s=0,a=e.strm.avail_in;do{if(i=65535,r=e.bi_valid+42>>3,e.strm.avail_out<r)break;if(r=e.strm.avail_out-r,n=e.strstart-e.block_start,i>n+e.strm.avail_in&&(i=n+e.strm.avail_in),i>r&&(i=r),i<o&&(0===i&&t!==FW||t===UW||i!==n+e.strm.avail_in))break;s=t===FW&&i===n+e.strm.avail_in?1:0,PW(e,0,0,s),e.pending_buf[e.pending-4]=i,e.pending_buf[e.pending-3]=i>>8,e.pending_buf[e.pending-2]=~i,e.pending_buf[e.pending-1]=~i>>8,EH(e.strm),n&&(n>i&&(n=i),e.strm.output.set(e.window.subarray(e.block_start,e.block_start+n),e.strm.next_out),e.strm.next_out+=n,e.strm.avail_out-=n,e.strm.total_out+=n,e.block_start+=n,i-=n),i&&(SH(e.strm,e.strm.output,e.strm.next_out,i),e.strm.next_out+=i,e.strm.avail_out-=i,e.strm.total_out+=i)}while(0===s);return a-=e.strm.avail_in,a&&(a>=e.w_size?(e.matches=2,e.window.set(e.strm.input.subarray(e.strm.next_in-e.w_size,e.strm.next_in),0),e.strstart=e.w_size,e.insert=e.strstart):(e.window_size-e.strstart<=a&&(e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,e.insert>e.strstart&&(e.insert=e.strstart)),e.window.set(e.strm.input.subarray(e.strm.next_in-a,e.strm.next_in),e.strstart),e.strstart+=a,e.insert+=a>e.w_size-e.insert?e.w_size-e.insert:a),e.block_start=e.strstart),e.high_water<e.strstart&&(e.high_water=e.strstart),s?4:t!==UW&&t!==FW&&0===e.strm.avail_in&&e.strstart===e.block_start?2:(r=e.window_size-e.strstart,e.strm.avail_in>r&&e.block_start>=e.w_size&&(e.block_start-=e.w_size,e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,r+=e.w_size,e.insert>e.strstart&&(e.insert=e.strstart)),r>e.strm.avail_in&&(r=e.strm.avail_in),r&&(SH(e.strm,e.window,e.strstart,r),e.strstart+=r,e.insert+=r>e.w_size-e.insert?e.w_size-e.insert:r),e.high_water<e.strstart&&(e.high_water=e.strstart),r=e.bi_valid+42>>3,r=e.pending_buf_size-r>65535?65535:e.pending_buf_size-r,o=r>e.w_size?e.w_size:r,n=e.strstart-e.block_start,(n>=o||(n||t===FW)&&t!==UW&&0===e.strm.avail_in&&n<=r)&&(i=n>r?r:n,s=t===FW&&0===e.strm.avail_in&&i===n?1:0,PW(e,e.block_start,i,s),e.block_start+=i,EH(e.strm)),s?3:1)},IH=(e,t)=>{let i,n;for(;;){if(e.lookahead<sH){if(RH(e),e.lookahead<sH&&t===UW)return 1;if(0===e.lookahead)break}if(i=0,e.lookahead>=3&&(e.ins_h=_H(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==i&&e.strstart-i<=e.w_size-sH&&(e.match_length=gH(e,i)),e.match_length>=3)if(n=kW(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=_H(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=_H(e,e.ins_h,e.window[e.strstart+1]);else n=kW(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(fH(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,t===FW?(fH(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(fH(e,!1),0===e.strm.avail_out)?1:2},vH=(e,t)=>{let i,n,r;for(;;){if(e.lookahead<sH){if(RH(e),e.lookahead<sH&&t===UW)return 1;if(0===e.lookahead)break}if(i=0,e.lookahead>=3&&(e.ins_h=_H(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==i&&e.prev_length<e.max_lazy_match&&e.strstart-i<=e.w_size-sH&&(e.match_length=gH(e,i),e.match_length<=5&&(e.strategy===qW||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){r=e.strstart+e.lookahead-3,n=kW(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=r&&(e.ins_h=_H(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,n&&(fH(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if(n=kW(e,0,e.window[e.strstart-1]),n&&fH(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=kW(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,t===FW?(fH(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(fH(e,!1),0===e.strm.avail_out)?1:2};function yH(e,t,i,n,r){this.good_length=e,this.max_lazy=t,this.nice_length=i,this.max_chain=n,this.func=r}const AH=[new yH(0,0,0,0,CH),new yH(4,4,8,4,IH),new yH(4,5,16,8,IH),new yH(4,6,32,32,IH),new yH(4,4,16,16,vH),new yH(8,16,32,32,vH),new yH(8,16,128,128,vH),new yH(8,32,128,256,vH),new yH(32,128,258,1024,vH),new yH(32,258,258,4096,vH)];function bH(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$W,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(2*nH),this.dyn_dtree=new Uint16Array(2*(2*tH+1)),this.bl_tree=new Uint16Array(2*(2*iH+1)),hH(this.dyn_ltree),hH(this.dyn_dtree),hH(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(rH+1),this.heap=new Uint16Array(2*eH+1),hH(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(2*eH+1),hH(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const wH=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.status!==aH&&57!==t.status&&69!==t.status&&73!==t.status&&91!==t.status&&103!==t.status&&t.status!==cH&&t.status!==dH?1:0},OH=e=>{if(wH(e))return lH(e,WW);e.total_in=e.total_out=0,e.data_type=ZW;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=2===t.wrap?57:t.wrap?aH:cH,e.adler=2===t.wrap?0:1,t.last_flush=-2,DW(t),jW},NH=e=>{const t=OH(e);return t===jW&&(e=>{e.window_size=2*e.w_size,hH(e.head),e.max_lazy_match=AH[e.level].max_lazy,e.good_match=AH[e.level].good_length,e.nice_match=AH[e.level].nice_length,e.max_chain_length=AH[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=2,e.match_available=0,e.ins_h=0})(e.state),t},DH=(e,t,i,n,r,o)=>{if(!e)return WW;let s=1;if(t===YW&&(t=6),n<0?(s=0,n=-n):n>15&&(s=2,n-=16),r<1||r>9||i!==$W||n<8||n>15||t<0||t>9||o<0||o>XW||8===n&&1!==s)return lH(e,WW);8===n&&(n=9);const a=new bH;return e.state=a,a.strm=e,a.status=aH,a.wrap=s,a.gzhead=null,a.w_bits=n,a.w_size=1<<a.w_bits,a.w_mask=a.w_size-1,a.hash_bits=r+7,a.hash_size=1<<a.hash_bits,a.hash_mask=a.hash_size-1,a.hash_shift=~~((a.hash_bits+3-1)/3),a.window=new Uint8Array(2*a.w_size),a.head=new Uint16Array(a.hash_size),a.prev=new Uint16Array(a.w_size),a.lit_bufsize=1<<r+6,a.pending_buf_size=4*a.lit_bufsize,a.pending_buf=new Uint8Array(a.pending_buf_size),a.sym_buf=a.lit_bufsize,a.sym_end=3*(a.lit_bufsize-1),a.level=t,a.strategy=o,a.method=i,NH(e)};var PH=(e,t)=>{if(wH(e)||t>BW||t<0)return e?lH(e,WW):WW;const i=e.state;if(!e.output||0!==e.avail_in&&!e.input||i.status===dH&&t!==FW)return lH(e,0===e.avail_out?KW:WW);const n=i.last_flush;if(i.last_flush=t,0!==i.pending){if(EH(e),0===e.avail_out)return i.last_flush=-1,jW}else if(0===e.avail_in&&uH(t)<=uH(n)&&t!==FW)return lH(e,KW);if(i.status===dH&&0!==e.avail_in)return lH(e,KW);if(i.status===aH&&0===i.wrap&&(i.status=cH),i.status===aH){let t=$W+(i.w_bits-8<<4)<<8,n=-1;if(n=i.strategy>=zW||i.level<2?0:i.level<6?1:6===i.level?2:3,t|=n<<6,0!==i.strstart&&(t|=32),t+=31-t%31,TH(i,t),0!==i.strstart&&(TH(i,e.adler>>>16),TH(i,65535&e.adler)),e.adler=1,i.status=cH,EH(e),0!==i.pending)return i.last_flush=-1,jW}if(57===i.status)if(e.adler=0,mH(i,31),mH(i,139),mH(i,8),i.gzhead)mH(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),mH(i,255&i.gzhead.time),mH(i,i.gzhead.time>>8&255),mH(i,i.gzhead.time>>16&255),mH(i,i.gzhead.time>>24&255),mH(i,9===i.level?2:i.strategy>=zW||i.level<2?4:0),mH(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(mH(i,255&i.gzhead.extra.length),mH(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(e.adler=wW(e.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=69;else if(mH(i,0),mH(i,0),mH(i,0),mH(i,0),mH(i,0),mH(i,9===i.level?2:i.strategy>=zW||i.level<2?4:0),mH(i,3),i.status=cH,EH(e),0!==i.pending)return i.last_flush=-1,jW;if(69===i.status){if(i.gzhead.extra){let t=i.pending,n=(65535&i.gzhead.extra.length)-i.gzindex;for(;i.pending+n>i.pending_buf_size;){let r=i.pending_buf_size-i.pending;if(i.pending_buf.set(i.gzhead.extra.subarray(i.gzindex,i.gzindex+r),i.pending),i.pending=i.pending_buf_size,i.gzhead.hcrc&&i.pending>t&&(e.adler=wW(e.adler,i.pending_buf,i.pending-t,t)),i.gzindex+=r,EH(e),0!==i.pending)return i.last_flush=-1,jW;t=0,n-=r}let r=new Uint8Array(i.gzhead.extra);i.pending_buf.set(r.subarray(i.gzindex,i.gzindex+n),i.pending),i.pending+=n,i.gzhead.hcrc&&i.pending>t&&(e.adler=wW(e.adler,i.pending_buf,i.pending-t,t)),i.gzindex=0}i.status=73}if(73===i.status){if(i.gzhead.name){let t,n=i.pending;do{if(i.pending===i.pending_buf_size){if(i.gzhead.hcrc&&i.pending>n&&(e.adler=wW(e.adler,i.pending_buf,i.pending-n,n)),EH(e),0!==i.pending)return i.last_flush=-1,jW;n=0}t=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,mH(i,t)}while(0!==t);i.gzhead.hcrc&&i.pending>n&&(e.adler=wW(e.adler,i.pending_buf,i.pending-n,n)),i.gzindex=0}i.status=91}if(91===i.status){if(i.gzhead.comment){let t,n=i.pending;do{if(i.pending===i.pending_buf_size){if(i.gzhead.hcrc&&i.pending>n&&(e.adler=wW(e.adler,i.pending_buf,i.pending-n,n)),EH(e),0!==i.pending)return i.last_flush=-1,jW;n=0}t=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,mH(i,t)}while(0!==t);i.gzhead.hcrc&&i.pending>n&&(e.adler=wW(e.adler,i.pending_buf,i.pending-n,n))}i.status=103}if(103===i.status){if(i.gzhead.hcrc){if(i.pending+2>i.pending_buf_size&&(EH(e),0!==i.pending))return i.last_flush=-1,jW;mH(i,255&e.adler),mH(i,e.adler>>8&255),e.adler=0}if(i.status=cH,EH(e),0!==i.pending)return i.last_flush=-1,jW}if(0!==e.avail_in||0!==i.lookahead||t!==UW&&i.status!==dH){let n=0===i.level?CH(i,t):i.strategy===zW?((e,t)=>{let i;for(;;){if(0===e.lookahead&&(RH(e),0===e.lookahead)){if(t===UW)return 1;break}if(e.match_length=0,i=kW(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,i&&(fH(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===FW?(fH(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(fH(e,!1),0===e.strm.avail_out)?1:2})(i,t):i.strategy===JW?((e,t)=>{let i,n,r,o;const s=e.window;for(;;){if(e.lookahead<=oH){if(RH(e),e.lookahead<=oH&&t===UW)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(r=e.strstart-1,n=s[r],n===s[++r]&&n===s[++r]&&n===s[++r])){o=e.strstart+oH;do{}while(n===s[++r]&&n===s[++r]&&n===s[++r]&&n===s[++r]&&n===s[++r]&&n===s[++r]&&n===s[++r]&&n===s[++r]&&r<o);e.match_length=oH-(o-r),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(i=kW(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(i=kW(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),i&&(fH(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===FW?(fH(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(fH(e,!1),0===e.strm.avail_out)?1:2})(i,t):AH[i.level].func(i,t);if(3!==n&&4!==n||(i.status=dH),1===n||3===n)return 0===e.avail_out&&(i.last_flush=-1),jW;if(2===n&&(t===xW?MW(i):t!==BW&&(PW(i,0,0,!1),t===VW&&(hH(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),EH(e),0===e.avail_out))return i.last_flush=-1,jW}return t!==FW?jW:i.wrap<=0?GW:(2===i.wrap?(mH(i,255&e.adler),mH(i,e.adler>>8&255),mH(i,e.adler>>16&255),mH(i,e.adler>>24&255),mH(i,255&e.total_in),mH(i,e.total_in>>8&255),mH(i,e.total_in>>16&255),mH(i,e.total_in>>24&255)):(TH(i,e.adler>>>16),TH(i,65535&e.adler)),EH(e),i.wrap>0&&(i.wrap=-i.wrap),0!==i.pending?jW:GW)},LH=(e,t)=>{let i=t.length;if(wH(e))return WW;const n=e.state,r=n.wrap;if(2===r||1===r&&n.status!==aH||n.lookahead)return WW;if(1===r&&(e.adler=AW(e.adler,t,i,0)),n.wrap=0,i>=n.w_size){0===r&&(hH(n.head),n.strstart=0,n.block_start=0,n.insert=0);let e=new Uint8Array(n.w_size);e.set(t.subarray(i-n.w_size,i),0),t=e,i=n.w_size}const o=e.avail_in,s=e.next_in,a=e.input;for(e.avail_in=i,e.next_in=0,e.input=t,RH(n);n.lookahead>=3;){let e=n.strstart,t=n.lookahead-2;do{n.ins_h=_H(n,n.ins_h,n.window[e+3-1]),n.prev[e&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=e,e++}while(--t);n.strstart=e,n.lookahead=2,RH(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=2,n.match_available=0,e.next_in=s,e.input=a,e.avail_in=o,n.wrap=r,jW},kH={deflateInit:(e,t)=>DH(e,t,$W,15,8,QW),deflateInit2:DH,deflateReset:NH,deflateResetKeep:OH,deflateSetHeader:(e,t)=>wH(e)||2!==e.state.wrap?WW:(e.state.gzhead=t,jW),deflate:PH,deflateEnd:e=>{if(wH(e))return WW;const t=e.state.status;return e.state=null,t===cH?lH(e,HW):jW},deflateSetDictionary:LH,deflateInfo:\"pako deflate (from Nodeca project)\"};const MH=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var UH={assign:function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const i=t.shift();if(i){if(\"object\"!=typeof i)throw new TypeError(i+\"must be non-object\");for(const t in i)MH(i,t)&&(e[t]=i[t])}}return e},flattenChunks:e=>{let t=0;for(let i=0,n=e.length;i<n;i++)t+=e[i].length;const i=new Uint8Array(t);for(let t=0,n=0,r=e.length;t<r;t++){let r=e[t];i.set(r,n),n+=r.length}return i}};let xH=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){xH=!1}const VH=new Uint8Array(256);for(let e=0;e<256;e++)VH[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;VH[254]=VH[254]=1;var FH={string2buf:e=>{if(\"function\"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,i,n,r,o,s=e.length,a=0;for(r=0;r<s;r++)i=e.charCodeAt(r),55296==(64512&i)&&r+1<s&&(n=e.charCodeAt(r+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),a+=i<128?1:i<2048?2:i<65536?3:4;for(t=new Uint8Array(a),o=0,r=0;o<a;r++)i=e.charCodeAt(r),55296==(64512&i)&&r+1<s&&(n=e.charCodeAt(r+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),i<128?t[o++]=i:i<2048?(t[o++]=192|i>>>6,t[o++]=128|63&i):i<65536?(t[o++]=224|i>>>12,t[o++]=128|i>>>6&63,t[o++]=128|63&i):(t[o++]=240|i>>>18,t[o++]=128|i>>>12&63,t[o++]=128|i>>>6&63,t[o++]=128|63&i);return t},buf2string:(e,t)=>{const i=t||e.length;if(\"function\"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let n,r;const o=new Array(2*i);for(r=0,n=0;n<i;){let t=e[n++];if(t<128){o[r++]=t;continue}let s=VH[t];if(s>4)o[r++]=65533,n+=s-1;else{for(t&=2===s?31:3===s?15:7;s>1&&n<i;)t=t<<6|63&e[n++],s--;s>1?o[r++]=65533:t<65536?o[r++]=t:(t-=65536,o[r++]=55296|t>>10&1023,o[r++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&xH)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let i=\"\";for(let n=0;n<t;n++)i+=String.fromCharCode(e[n]);return i})(o,r)},utf8border:(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let i=t-1;for(;i>=0&&128==(192&e[i]);)i--;return i<0||0===i?t:i+VH[e[i]]>t?i:t}};var BH=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0};const jH=Object.prototype.toString,{Z_NO_FLUSH:GH,Z_SYNC_FLUSH:WH,Z_FULL_FLUSH:HH,Z_FINISH:KH,Z_OK:YH,Z_STREAM_END:qH,Z_DEFAULT_COMPRESSION:zH,Z_DEFAULT_STRATEGY:JH,Z_DEFLATED:XH}=NW;function QH(e){this.options=UH.assign({level:zH,method:XH,chunkSize:16384,windowBits:15,memLevel:8,strategy:JH},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new BH,this.strm.avail_out=0;let i=kH.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(i!==YH)throw new Error(OW[i]);if(t.header&&kH.deflateSetHeader(this.strm,t.header),t.dictionary){let e;if(e=\"string\"==typeof t.dictionary?FH.string2buf(t.dictionary):\"[object ArrayBuffer]\"===jH.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,i=kH.deflateSetDictionary(this.strm,e),i!==YH)throw new Error(OW[i]);this._dict_set=!0}}function ZH(e,t){const i=new QH(t);if(i.push(e,!0),i.err)throw i.msg||OW[i.err];return i.result}QH.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize;let r,o;if(this.ended)return!1;for(o=t===~~t?t:!0===t?KH:GH,\"string\"==typeof e?i.input=FH.string2buf(e):\"[object ArrayBuffer]\"===jH.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;)if(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),(o===WH||o===HH)&&i.avail_out<=6)this.onData(i.output.subarray(0,i.next_out)),i.avail_out=0;else{if(r=kH.deflate(i,o),r===qH)return i.next_out>0&&this.onData(i.output.subarray(0,i.next_out)),r=kH.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===YH;if(0!==i.avail_out){if(o>0&&i.next_out>0)this.onData(i.output.subarray(0,i.next_out)),i.avail_out=0;else if(0===i.avail_in)break}else this.onData(i.output)}return!0},QH.prototype.onData=function(e){this.chunks.push(e)},QH.prototype.onEnd=function(e){e===YH&&(this.result=UH.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var $H={Deflate:QH,deflate:ZH,deflateRaw:function(e,t){return(t=t||{}).raw=!0,ZH(e,t)},gzip:function(e,t){return(t=t||{}).gzip=!0,ZH(e,t)},constants:NW};const eK=16209;var tK=function(e,t){let i,n,r,o,s,a,c,d,l,u,h,p,_,E,f,m,T,S,g,R,C,I,v,y;const A=e.state;i=e.next_in,v=e.input,n=i+(e.avail_in-5),r=e.next_out,y=e.output,o=r-(t-e.avail_out),s=r+(e.avail_out-257),a=A.dmax,c=A.wsize,d=A.whave,l=A.wnext,u=A.window,h=A.hold,p=A.bits,_=A.lencode,E=A.distcode,f=(1<<A.lenbits)-1,m=(1<<A.distbits)-1;e:do{p<15&&(h+=v[i++]<<p,p+=8,h+=v[i++]<<p,p+=8),T=_[h&f];t:for(;;){if(S=T>>>24,h>>>=S,p-=S,S=T>>>16&255,0===S)y[r++]=65535&T;else{if(!(16&S)){if(0==(64&S)){T=_[(65535&T)+(h&(1<<S)-1)];continue t}if(32&S){A.mode=16191;break e}e.msg=\"invalid literal/length code\",A.mode=eK;break e}g=65535&T,S&=15,S&&(p<S&&(h+=v[i++]<<p,p+=8),g+=h&(1<<S)-1,h>>>=S,p-=S),p<15&&(h+=v[i++]<<p,p+=8,h+=v[i++]<<p,p+=8),T=E[h&m];i:for(;;){if(S=T>>>24,h>>>=S,p-=S,S=T>>>16&255,!(16&S)){if(0==(64&S)){T=E[(65535&T)+(h&(1<<S)-1)];continue i}e.msg=\"invalid distance code\",A.mode=eK;break e}if(R=65535&T,S&=15,p<S&&(h+=v[i++]<<p,p+=8,p<S&&(h+=v[i++]<<p,p+=8)),R+=h&(1<<S)-1,R>a){e.msg=\"invalid distance too far back\",A.mode=eK;break e}if(h>>>=S,p-=S,S=r-o,R>S){if(S=R-S,S>d&&A.sane){e.msg=\"invalid distance too far back\",A.mode=eK;break e}if(C=0,I=u,0===l){if(C+=c-S,S<g){g-=S;do{y[r++]=u[C++]}while(--S);C=r-R,I=y}}else if(l<S){if(C+=c+l-S,S-=l,S<g){g-=S;do{y[r++]=u[C++]}while(--S);if(C=0,l<g){S=l,g-=S;do{y[r++]=u[C++]}while(--S);C=r-R,I=y}}}else if(C+=l-S,S<g){g-=S;do{y[r++]=u[C++]}while(--S);C=r-R,I=y}for(;g>2;)y[r++]=I[C++],y[r++]=I[C++],y[r++]=I[C++],g-=3;g&&(y[r++]=I[C++],g>1&&(y[r++]=I[C++]))}else{C=r-R;do{y[r++]=y[C++],y[r++]=y[C++],y[r++]=y[C++],g-=3}while(g>2);g&&(y[r++]=y[C++],g>1&&(y[r++]=y[C++]))}break}}break}}while(i<n&&r<s);g=p>>3,i-=g,p-=g<<3,h&=(1<<p)-1,e.next_in=i,e.next_out=r,e.avail_in=i<n?n-i+5:5-(i-n),e.avail_out=r<s?s-r+257:257-(r-s),A.hold=h,A.bits=p};const iK=15,nK=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),rK=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),oK=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),sK=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var aK=(e,t,i,n,r,o,s,a)=>{const c=a.bits;let d,l,u,h,p,_,E=0,f=0,m=0,T=0,S=0,g=0,R=0,C=0,I=0,v=0,y=null;const A=new Uint16Array(16),b=new Uint16Array(16);let w,O,N,D=null;for(E=0;E<=iK;E++)A[E]=0;for(f=0;f<n;f++)A[t[i+f]]++;for(S=c,T=iK;T>=1&&0===A[T];T--);if(S>T&&(S=T),0===T)return r[o++]=20971520,r[o++]=20971520,a.bits=1,0;for(m=1;m<T&&0===A[m];m++);for(S<m&&(S=m),C=1,E=1;E<=iK;E++)if(C<<=1,C-=A[E],C<0)return-1;if(C>0&&(0===e||1!==T))return-1;for(b[1]=0,E=1;E<iK;E++)b[E+1]=b[E]+A[E];for(f=0;f<n;f++)0!==t[i+f]&&(s[b[t[i+f]]++]=f);if(0===e?(y=D=s,_=20):1===e?(y=nK,D=rK,_=257):(y=oK,D=sK,_=0),v=0,f=0,E=m,p=o,g=S,R=0,u=-1,I=1<<S,h=I-1,1===e&&I>852||2===e&&I>592)return 1;for(;;){w=E-R,s[f]+1<_?(O=0,N=s[f]):s[f]>=_?(O=D[s[f]-_],N=y[s[f]-_]):(O=96,N=0),d=1<<E-R,l=1<<g,m=l;do{l-=d,r[p+(v>>R)+l]=w<<24|O<<16|N|0}while(0!==l);for(d=1<<E-1;v&d;)d>>=1;if(0!==d?(v&=d-1,v+=d):v=0,f++,0==--A[E]){if(E===T)break;E=t[i+s[f]]}if(E>S&&(v&h)!==u){for(0===R&&(R=S),p+=m,g=E-R,C=1<<g;g+R<T&&(C-=A[g+R],!(C<=0));)g++,C<<=1;if(I+=1<<g,1===e&&I>852||2===e&&I>592)return 1;u=v&h,r[u]=S<<24|g<<16|p-o|0}}return 0!==v&&(r[p+v]=E-R<<24|64<<16|0),a.bits=S,0};const{Z_FINISH:cK,Z_BLOCK:dK,Z_TREES:lK,Z_OK:uK,Z_STREAM_END:hK,Z_NEED_DICT:pK,Z_STREAM_ERROR:_K,Z_DATA_ERROR:EK,Z_MEM_ERROR:fK,Z_BUF_ERROR:mK,Z_DEFLATED:TK}=NW,SK=16180,gK=16190,RK=16191,CK=16192,IK=16194,vK=16199,yK=16200,AK=16206,bK=16209,wK=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function OK(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const NK=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.mode<SK||t.mode>16211?1:0},DK=e=>{if(NK(e))return _K;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=SK,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,uK},PK=e=>{if(NK(e))return _K;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,DK(e)},LK=(e,t)=>{let i;if(NK(e))return _K;const n=e.state;return t<0?(i=0,t=-t):(i=5+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?_K:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=i,n.wbits=t,PK(e))},kK=(e,t)=>{if(!e)return _K;const i=new OK;e.state=i,i.strm=e,i.window=null,i.mode=SK;const n=LK(e,t);return n!==uK&&(e.state=null),n};let MK,UK,xK=!0;const VK=e=>{if(xK){MK=new Int32Array(512),UK=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(aK(1,e.lens,0,288,MK,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;aK(2,e.lens,0,32,UK,0,e.work,{bits:5}),xK=!1}e.lencode=MK,e.lenbits=9,e.distcode=UK,e.distbits=5},FK=(e,t,i,n)=>{let r;const o=e.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new Uint8Array(o.wsize)),n>=o.wsize?(o.window.set(t.subarray(i-o.wsize,i),0),o.wnext=0,o.whave=o.wsize):(r=o.wsize-o.wnext,r>n&&(r=n),o.window.set(t.subarray(i-n,i-n+r),o.wnext),(n-=r)?(o.window.set(t.subarray(i-n,i),0),o.wnext=n,o.whave=o.wsize):(o.wnext+=r,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=r))),0};var BK=(e,t)=>{let i,n,r,o,s,a,c,d,l,u,h,p,_,E,f,m,T,S,g,R,C,I,v=0;const y=new Uint8Array(4);let A,b;const w=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(NK(e)||!e.output||!e.input&&0!==e.avail_in)return _K;i=e.state,i.mode===RK&&(i.mode=CK),s=e.next_out,r=e.output,c=e.avail_out,o=e.next_in,n=e.input,a=e.avail_in,d=i.hold,l=i.bits,u=a,h=c,I=uK;e:for(;;)switch(i.mode){case SK:if(0===i.wrap){i.mode=CK;break}for(;l<16;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(2&i.wrap&&35615===d){0===i.wbits&&(i.wbits=15),i.check=0,y[0]=255&d,y[1]=d>>>8&255,i.check=wW(i.check,y,2,0),d=0,l=0,i.mode=16181;break}if(i.head&&(i.head.done=!1),!(1&i.wrap)||(((255&d)<<8)+(d>>8))%31){e.msg=\"incorrect header check\",i.mode=bK;break}if((15&d)!==TK){e.msg=\"unknown compression method\",i.mode=bK;break}if(d>>>=4,l-=4,C=8+(15&d),0===i.wbits&&(i.wbits=C),C>15||C>i.wbits){e.msg=\"invalid window size\",i.mode=bK;break}i.dmax=1<<i.wbits,i.flags=0,e.adler=i.check=1,i.mode=512&d?16189:RK,d=0,l=0;break;case 16181:for(;l<16;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(i.flags=d,(255&VG(i))!==TK){e.msg=\"unknown compression method\",i.mode=bK;break}if(57344&VG(i)){e.msg=\"unknown header flags set\",i.mode=bK;break}i.head&&(i.head.text=d>>8&1),512&VG(i)&&4&i.wrap&&(y[0]=255&d,y[1]=d>>>8&255,i.check=wW(i.check,y,2,0)),d=0,l=0,i.mode=16182;case 16182:for(;l<32;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}i.head&&(i.head.time=d),512&VG(i)&&4&i.wrap&&(y[0]=255&d,y[1]=d>>>8&255,y[2]=d>>>16&255,y[3]=d>>>24&255,i.check=wW(i.check,y,4,0)),d=0,l=0,i.mode=16183;case 16183:for(;l<16;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}i.head&&(i.head.xflags=255&d,i.head.os=d>>8),512&VG(i)&&4&i.wrap&&(y[0]=255&d,y[1]=d>>>8&255,i.check=wW(i.check,y,2,0)),d=0,l=0,i.mode=16184;case 16184:if(1024&VG(i)){for(;l<16;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}i.length=d,i.head&&(i.head.extra_len=d),512&VG(i)&&4&i.wrap&&(y[0]=255&d,y[1]=d>>>8&255,i.check=wW(i.check,y,2,0)),d=0,l=0}else i.head&&(i.head.extra=null);i.mode=16185;case 16185:if(1024&VG(i)&&(p=i.length,p>a&&(p=a),p&&(i.head&&(C=i.head.extra_len-i.length,i.head.extra||(i.head.extra=new Uint8Array(i.head.extra_len)),i.head.extra.set(n.subarray(o,o+p),C)),512&VG(i)&&4&i.wrap&&(i.check=wW(i.check,n,p,o)),a-=p,o+=p,i.length-=p),i.length))break e;i.length=0,i.mode=16186;case 16186:if(2048&VG(i)){if(0===a)break e;p=0;do{C=n[o+p++],i.head&&C&&i.length<65536&&(i.head.name+=String.fromCharCode(C))}while(C&&p<a);if(512&VG(i)&&4&i.wrap&&(i.check=wW(i.check,n,p,o)),a-=p,o+=p,C)break e}else i.head&&(i.head.name=null);i.length=0,i.mode=16187;case 16187:if(4096&VG(i)){if(0===a)break e;p=0;do{C=n[o+p++],i.head&&C&&i.length<65536&&(i.head.comment+=String.fromCharCode(C))}while(C&&p<a);if(512&VG(i)&&4&i.wrap&&(i.check=wW(i.check,n,p,o)),a-=p,o+=p,C)break e}else i.head&&(i.head.comment=null);i.mode=16188;case 16188:if(512&VG(i)){for(;l<16;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(4&i.wrap&&d!==(65535&i.check)){e.msg=\"header crc mismatch\",i.mode=bK;break}d=0,l=0}i.head&&(i.head.hcrc=VG(i)>>9&1,i.head.done=!0),e.adler=i.check=0,i.mode=RK;break;case 16189:for(;l<32;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}e.adler=i.check=wK(d),d=0,l=0,i.mode=gK;case gK:if(0===i.havedict)return e.next_out=s,e.avail_out=c,e.next_in=o,e.avail_in=a,i.hold=d,i.bits=l,pK;e.adler=i.check=1,i.mode=RK;case RK:if(t===dK||t===lK)break e;case CK:if(i.last){d>>>=7&l,l-=7&l,i.mode=AK;break}for(;l<3;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}switch(i.last=1&d,d>>>=1,l-=1,3&d){case 0:i.mode=16193;break;case 1:if(VK(i),i.mode=vK,t===lK){d>>>=2,l-=2;break e}break;case 2:i.mode=16196;break;case 3:e.msg=\"invalid block type\",i.mode=bK}d>>>=2,l-=2;break;case 16193:for(d>>>=7&l,l-=7&l;l<32;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if((65535&d)!=(d>>>16^65535)){e.msg=\"invalid stored block lengths\",i.mode=bK;break}if(i.length=65535&d,d=0,l=0,i.mode=IK,t===lK)break e;case IK:i.mode=16195;case 16195:if(p=i.length,p){if(p>a&&(p=a),p>c&&(p=c),0===p)break e;r.set(n.subarray(o,o+p),s),a-=p,o+=p,c-=p,s+=p,i.length-=p;break}i.mode=RK;break;case 16196:for(;l<14;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(i.nlen=257+(31&d),d>>>=5,l-=5,i.ndist=1+(31&d),d>>>=5,l-=5,i.ncode=4+(15&d),d>>>=4,l-=4,i.nlen>286||i.ndist>30){e.msg=\"too many length or distance symbols\",i.mode=bK;break}i.have=0,i.mode=16197;case 16197:for(;i.have<i.ncode;){for(;l<3;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}i.lens[w[i.have++]]=7&d,d>>>=3,l-=3}for(;i.have<19;)i.lens[w[i.have++]]=0;if(i.lencode=i.lendyn,i.lenbits=7,A={bits:i.lenbits},I=aK(0,i.lens,0,19,i.lencode,0,i.work,A),i.lenbits=A.bits,I){e.msg=\"invalid code lengths set\",i.mode=bK;break}i.have=0,i.mode=16198;case 16198:for(;i.have<i.nlen+i.ndist;){for(;v=i.lencode[d&(1<<i.lenbits)-1],f=v>>>24,m=v>>>16&255,T=65535&v,!(f<=l);){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(T<16)d>>>=f,l-=f,i.lens[i.have++]=T;else{if(16===T){for(b=f+2;l<b;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(d>>>=f,l-=f,0===i.have){e.msg=\"invalid bit length repeat\",i.mode=bK;break}C=i.lens[i.have-1],p=3+(3&d),d>>>=2,l-=2}else if(17===T){for(b=f+3;l<b;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}d>>>=f,l-=f,C=0,p=3+(7&d),d>>>=3,l-=3}else{for(b=f+7;l<b;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}d>>>=f,l-=f,C=0,p=11+(127&d),d>>>=7,l-=7}if(i.have+p>i.nlen+i.ndist){e.msg=\"invalid bit length repeat\",i.mode=bK;break}for(;p--;)i.lens[i.have++]=C}}if(i.mode===bK)break;if(0===i.lens[256]){e.msg=\"invalid code -- missing end-of-block\",i.mode=bK;break}if(i.lenbits=9,A={bits:i.lenbits},I=aK(1,i.lens,0,i.nlen,i.lencode,0,i.work,A),i.lenbits=A.bits,I){e.msg=\"invalid literal/lengths set\",i.mode=bK;break}if(i.distbits=6,i.distcode=i.distdyn,A={bits:i.distbits},I=aK(2,i.lens,i.nlen,i.ndist,i.distcode,0,i.work,A),i.distbits=A.bits,I){e.msg=\"invalid distances set\",i.mode=bK;break}if(i.mode=vK,t===lK)break e;case vK:i.mode=yK;case yK:if(a>=6&&c>=258){e.next_out=s,e.avail_out=c,e.next_in=o,e.avail_in=a,i.hold=d,i.bits=l,tK(e,h),s=e.next_out,r=e.output,c=e.avail_out,o=e.next_in,n=e.input,a=e.avail_in,d=i.hold,l=i.bits,i.mode===RK&&(i.back=-1);break}for(i.back=0;v=i.lencode[d&(1<<i.lenbits)-1],f=v>>>24,m=v>>>16&255,T=65535&v,!(f<=l);){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(m&&0==(240&m)){for(S=f,g=m,R=T;v=i.lencode[R+((d&(1<<S+g)-1)>>S)],f=v>>>24,m=v>>>16&255,T=65535&v,!(S+f<=l);){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}d>>>=S,l-=S,i.back+=S}if(d>>>=f,l-=f,i.back+=f,i.length=T,0===m){i.mode=16205;break}if(32&m){i.back=-1,i.mode=RK;break}if(64&m){e.msg=\"invalid literal/length code\",i.mode=bK;break}i.extra=15&m,i.mode=16201;case 16201:if(i.extra){for(b=i.extra;l<b;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}i.length+=d&(1<<i.extra)-1,d>>>=i.extra,l-=i.extra,i.back+=i.extra}i.was=i.length,i.mode=16202;case 16202:for(;v=i.distcode[d&(1<<i.distbits)-1],f=v>>>24,m=v>>>16&255,T=65535&v,!(f<=l);){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(0==(240&m)){for(S=f,g=m,R=T;v=i.distcode[R+((d&(1<<S+g)-1)>>S)],f=v>>>24,m=v>>>16&255,T=65535&v,!(S+f<=l);){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}d>>>=S,l-=S,i.back+=S}if(d>>>=f,l-=f,i.back+=f,64&m){e.msg=\"invalid distance code\",i.mode=bK;break}i.offset=T,i.extra=15&m,i.mode=16203;case 16203:if(i.extra){for(b=i.extra;l<b;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}i.offset+=d&(1<<i.extra)-1,d>>>=i.extra,l-=i.extra,i.back+=i.extra}if(i.offset>i.dmax){e.msg=\"invalid distance too far back\",i.mode=bK;break}i.mode=16204;case 16204:if(0===c)break e;if(p=h-c,i.offset>p){if(p=i.offset-p,p>i.whave&&i.sane){e.msg=\"invalid distance too far back\",i.mode=bK;break}p>i.wnext?(p-=i.wnext,_=i.wsize-p):_=i.wnext-p,p>i.length&&(p=i.length),E=i.window}else E=r,_=s-i.offset,p=i.length;p>c&&(p=c),c-=p,i.length-=p;do{r[s++]=E[_++]}while(--p);0===i.length&&(i.mode=yK);break;case 16205:if(0===c)break e;r[s++]=i.length,c--,i.mode=yK;break;case AK:if(i.wrap){for(;l<32;){if(0===a)break e;a--,d|=n[o++]<<l,l+=8}if(h-=c,e.total_out+=h,i.total+=h,4&i.wrap&&h&&(e.adler=i.check=VG(i)?wW(i.check,r,h,s-h):AW(i.check,r,h,s-h)),h=c,4&i.wrap&&(VG(i)?d:wK(d))!==i.check){e.msg=\"incorrect data check\",i.mode=bK;break}d=0,l=0}i.mode=16207;case 16207:if(i.wrap&&VG(i)){for(;l<32;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(4&i.wrap&&d!==(4294967295&i.total)){e.msg=\"incorrect length check\",i.mode=bK;break}d=0,l=0}i.mode=16208;case 16208:I=hK;break e;case bK:I=EK;break e;case 16210:return fK;default:return _K}return e.next_out=s,e.avail_out=c,e.next_in=o,e.avail_in=a,i.hold=d,i.bits=l,(i.wsize||h!==e.avail_out&&i.mode<bK&&(i.mode<AK||t!==cK))&&FK(e,e.output,e.next_out,h-e.avail_out),u-=e.avail_in,h-=e.avail_out,e.total_in+=u,e.total_out+=h,i.total+=h,4&i.wrap&&h&&(e.adler=i.check=VG(i)?wW(i.check,r,h,e.next_out-h):AW(i.check,r,h,e.next_out-h)),e.data_type=i.bits+(i.last?64:0)+(i.mode===RK?128:0)+(i.mode===vK||i.mode===IK?256:0),(0===u&&0===h||t===cK)&&I===uK&&(I=mK),I},jK={inflateReset:PK,inflateReset2:LK,inflateResetKeep:DK,inflateInit:e=>kK(e,15),inflateInit2:kK,inflate:BK,inflateEnd:e=>{if(NK(e))return _K;let t=e.state;return t.window&&(t.window=null),e.state=null,uK},inflateGetHeader:(e,t)=>{if(NK(e))return _K;const i=e.state;return 0==(2&i.wrap)?_K:(i.head=t,t.done=!1,uK)},inflateSetDictionary:(e,t)=>{const i=t.length;let n,r,o;return NK(e)?_K:(n=e.state,0!==n.wrap&&n.mode!==gK?_K:n.mode===gK&&(r=1,r=AW(r,t,i,0),r!==n.check)?EK:(o=FK(e,t,i,i),o?(n.mode=16210,fK):(n.havedict=1,uK)))},inflateInfo:\"pako inflate (from Nodeca project)\"};var GK=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1};const WK=Object.prototype.toString,{Z_NO_FLUSH:HK,Z_FINISH:KK,Z_OK:YK,Z_STREAM_END:qK,Z_NEED_DICT:zK,Z_STREAM_ERROR:JK,Z_DATA_ERROR:XK,Z_MEM_ERROR:QK}=NW;function ZK(e){this.options=UH.assign({chunkSize:65536,windowBits:15,to:\"\"},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new BH,this.strm.avail_out=0;let i=jK.inflateInit2(this.strm,t.windowBits);if(i!==YK)throw new Error(OW[i]);if(this.header=new GK,jK.inflateGetHeader(this.strm,this.header),t.dictionary&&(\"string\"==typeof t.dictionary?t.dictionary=FH.string2buf(t.dictionary):\"[object ArrayBuffer]\"===WK.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(i=jK.inflateSetDictionary(this.strm,t.dictionary),i!==YK)))throw new Error(OW[i])}function $K(e,t){const i=new ZK(t);if(i.push(e),i.err)throw i.msg||OW[i.err];return i.result}ZK.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize,r=this.options.dictionary;let o,s,a;if(this.ended)return!1;for(s=t===~~t?t:!0===t?KK:HK,\"[object ArrayBuffer]\"===WK.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;){for(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),o=jK.inflate(i,s),o===zK&&r&&(o=jK.inflateSetDictionary(i,r),o===YK?o=jK.inflate(i,s):o===XK&&(o=zK));i.avail_in>0&&o===qK&&i.state.wrap>0&&0!==e[i.next_in];)jK.inflateReset(i),o=jK.inflate(i,s);switch(o){case JK:case XK:case zK:case QK:return this.onEnd(o),this.ended=!0,!1}if(a=i.avail_out,i.next_out&&(0===i.avail_out||o===qK))if(\"string\"===this.options.to){let e=FH.utf8border(i.output,i.next_out),t=i.next_out-e,r=FH.buf2string(i.output,e);i.next_out=t,i.avail_out=n-t,t&&i.output.set(i.output.subarray(e,e+t),0),this.onData(r)}else this.onData(i.output.length===i.next_out?i.output:i.output.subarray(0,i.next_out));if(o!==YK||0!==a){if(o===qK)return o=jK.inflateEnd(this.strm),this.onEnd(o),this.ended=!0,!0;if(0===i.avail_in)break}}return!0},ZK.prototype.onData=function(e){this.chunks.push(e)},ZK.prototype.onEnd=function(e){e===YK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=UH.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var eY={Inflate:ZK,inflate:$K,inflateRaw:function(e,t){return(t=t||{}).raw=!0,$K(e,t)},ungzip:$K,constants:NW};const{Deflate:tY,deflate:iY,deflateRaw:nY,gzip:rY}=$H,{Inflate:oY,inflate:sY,inflateRaw:aY,ungzip:cY}=eY;var dY=iY,lY=sY,uY=function(e){return e[e.ONE_BYTE=0]=\"ONE_BYTE\",e[e.TWO_BYTE=1]=\"TWO_BYTE\",e}(uY||{});class hY{constructor(){Fg(this,\"_sequence\",0),Fg(this,\"_startTime\",Date.now()),Fg(this,\"isUseOneByte\",!0)}get startTime(){const e=Date.now()-this._startTime;return e<Math.pow(2,16)?e:(this._startTime+=Math.pow(2,16),this.startTime)}get sequence(){return this._sequence<Math.pow(2,32)?this._sequence++:(this._sequence-=Math.pow(2,32),this.sequence)}serialize(e){const t={commonPacketHeader:{length:0,reserved:0,extension:0,sequence:this.sequence},commonStreamHeader:this.startTime,extension:void 0,payload:e};if(e.byteLength>128){const i=new Uint8Array(4);i.set([1,0,0,0]);const n={id:0,length:4,data:i.buffer},r={profile:this.isUseOneByte?0:1,length:this.isUseOneByte?5:6,datas:[n]};t.commonPacketHeader.extension=1,t.extension=r,t.payload=this.compress(e),t.commonPacketHeader.length=8+(t.extension.length+2)+t.payload.byteLength}else t.commonPacketHeader.length=8+t.payload.byteLength;XA(\"SHOW_DATASTREAM2_LOG\")&&fb.debug(\"send data header: \".concat(JSON.stringify(t.commonPacketHeader)));const i=new ArrayBuffer(t.commonPacketHeader.length),n=new Uint8Array(i),r=new DataView(i);let o=0;if(r.setUint16(o,t.commonPacketHeader.extension<<15|t.commonPacketHeader.reserved<<14|t.commonPacketHeader.length,!0),o+=2,r.setUint32(o,t.commonPacketHeader.sequence,!0),o+=4,r.setUint16(o,t.commonStreamHeader,!0),o+=2,t.extension){const e=this.serializeExtension(t.extension);n.set(new Uint8Array(e),o),o+=e.byteLength}if(n.set(new Uint8Array(t.payload),o),o+=t.payload.byteLength,o!==t.commonPacketHeader.length)throw Error(\"serialize error!\");return i}deserialize(e){if(e.byteLength<4)return new ArrayBuffer(0);const t=new DataView(e);let i=0;const n=t.getUint16(i,!0);i+=2;const r={length:16383&n,reserved:(16384&n)>>14,extension:(32768&n)>>15,sequence:t.getUint16(i+2,!0)<<16|t.getUint16(i,!0)};let o,s;if(i+=4,XA(\"SHOW_DATASTREAM2_LOG\")&&fb.debug(\"receive data header: \".concat(JSON.stringify(r))),t.getUint16(i,!0),i+=2,r.extension){s=this.deserializeExtension(e.slice(i)),i+=2+s.length,o=e.slice(i);let t=!1;if(s.datas.length>0){const e=s.datas.find((e=>0===e.id));if(e){t=1==(1&new DataView(e.data).getUint32(0,!0))}}o=t?this.decompress(o):o}else o=e.slice(8);return o}serializeExtension(e){const{profile:t,length:i,datas:n}=e,r=new ArrayBuffer(i+2),o=new Uint8Array(r),s=new DataView(r);let a=0;if(s.setUint8(a++,t),s.setUint8(a++,i),n.forEach((e=>{t?(s.setUint8(a++,e.id),s.setUint8(a++,e.length),o.set(new Uint8Array(e.data),a),a+=e.data.byteLength):(s.setUint8(a++,e.id|e.length<<4),o.set(new Uint8Array(e.data),a),a+=e.data.byteLength)})),a!==i+2)throw Error(\"serialize extension error, is \".concat(a,\"!==\").concat(i+2));return r}deserializeExtension(e){const t=new DataView(e);let i=0;const n=t.getUint8(i);i++;const r=t.getUint8(i);i++;const o=n===uY.TWO_BYTE,s=[],a=new DataView(e,2);let c=0;for(;c<r;){let e=0,t=0,i=new ArrayBuffer(0);o?(e=a.getUint8(c),c++,t=a.getUint8(c),c++):(e=15&a.getUint8(c),t=a.getUint8(c)>>4,c++),t>0&&(i=a.buffer.slice(c+2,c+2+t),c+=i.byteLength),s.push({id:e,length:t,data:i})}if(c!==r)throw Error(\"parse error\");return{profile:n,length:r,datas:s}}decompress(e){return lY(new Uint8Array(e))}compress(e){return dY(new Uint8Array(e))}}const pY={name:\"DataStream\",create:(e,t)=>{const i=t?new bU(e):new wU(e);return i.useDataStream(new hY),i}};class _Y extends xy{constructor(e,t,i){super(),Fg(this,\"ws\",void 0),Fg(this,\"requestId\",1),Fg(this,\"heartBeatTimer\",void 0),Fg(this,\"joinInfo\",void 0),Fg(this,\"clientId\",void 0),Fg(this,\"onOpen\",(()=>{this.emit(\"open\"),this.startHeartBeatCheck()})),Fg(this,\"onClose\",(e=>{this.emit(\"close\"),this.dispose()})),Fg(this,\"onMessage\",(e=>{const t=JSON.parse(e.data);if(!t||\"serverResponse\"!==t.command||!t.requestId)return t&&\"serverStatus\"===t.command&&t.serverStatus&&t.serverStatus.command?(this.emit(\"status\",t.serverStatus),void this.emit(t.serverStatus.command,t.serverStatus)):void 0;this.emit(\"req_\".concat(t.requestId),t)})),this.joinInfo=e,this.clientId=t,this.ws=new HO(\"cross-channel-\".concat(this.clientId),i),this.ws.on(Uw.RECONNECTING,(()=>{this.ws.reconnectMode=\"retry\",this.emit(\"reconnecting\")})),this.ws.on(Uw.CONNECTED,this.onOpen),this.ws.on(Uw.ON_MESSAGE,this.onMessage),this.ws.on(Uw.CLOSED,this.onClose)}isConnect(){return\"connected\"===this.ws.state}sendMessage(e){const t=this.requestId++;return e.requestId=t,e.seq=t,this.ws.sendMessage(e),t}waitStatus(e){return new Gh(((t,i)=>{const n=window.setTimeout((()=>{i(new yb(Ry.TIMEOUT,\"wait status timeout, status: \".concat(e)))}),5e3);this.once(e,(r=>{window.clearTimeout(n),r.state&&0!==r.state?i(new yb(Ry.CROSS_CHANNEL_WAIT_STATUS_ERROR,\"wait status error, status: \".concat(e))):t(void 0)})),this.once(\"dispose\",(()=>{window.clearTimeout(n),i(new yb(Ry.WS_ABORT))}))}))}async request(e){if(\"closed\"===this.ws.state)throw new yb(Ry.WS_DISCONNECT);const t=()=>new Gh(((e,t)=>{this.ws.once(Uw.CLOSED,(()=>t(new yb(Ry.WS_ABORT)))),this.ws.once(Uw.CONNECTED,e)}));\"connected\"!==this.ws.state&&await t();const i=this.sendMessage(e),n=new Gh(((e,t)=>{const n=()=>{t(new yb(Ry.WS_ABORT))};this.ws.once(Uw.RECONNECTING,n),this.ws.once(Uw.CLOSED,n),this.once(\"req_\".concat(i),e),mA(3e3).then((()=>{this.removeAllListeners(\"req_\".concat(i)),this.ws.off(Uw.RECONNECTING,n),this.ws.off(Uw.CLOSED,n),t(new yb(Ry.TIMEOUT,\"cross channel ws request timeout\"))}))})),r=await n;if(!r||200!==r.code)throw new yb(Ry.CROSS_CHANNEL_SERVER_ERROR_RESPONSE,\"response: \".concat(JSON.stringify(r)));return r}async connect(e){this.ws.removeAllListeners(Uw.REQUEST_NEW_URLS),this.ws.on(Uw.REQUEST_NEW_URLS,(t=>{t(e)})),await this.ws.init(e)}dispose(){this.clearHeartBeatCheck(),this.emit(\"dispose\"),this.removeAllListeners(),this.ws.close()}sendPing(e){const t=this.requestId++;return e.requestId=t,this.ws.sendMessage(e),t}startHeartBeatCheck(){this.heartBeatTimer&&window.clearInterval(this.heartBeatTimer),this.heartBeatTimer=window.setInterval((()=>{this.sendPing({command:\"ping\",appId:this.joinInfo.appId,cname:this.joinInfo.cname,uid:this.joinInfo.uid.toString(),sid:this.joinInfo.sid,ts:+new Date,requestId:0})}),3e3)}clearHeartBeatCheck(){window.clearInterval(this.heartBeatTimer),this.heartBeatTimer=void 0}}class EY extends xy{set state(e){e!==this._state&&(e!==Xw.RELAY_STATE_FAILURE&&(this.errorCode=Qw.RELAY_OK),this.emit(\"state\",e,this.errorCode),this._state=e)}get state(){return this._state}constructor(e,t,i,n,r){super(),Fg(this,\"joinInfo\",void 0),Fg(this,\"sid\",void 0),Fg(this,\"clientId\",void 0),Fg(this,\"cancelToken\",Lv.CancelToken.source()),Fg(this,\"workerToken\",void 0),Fg(this,\"requestId\",0),Fg(this,\"signal\",void 0),Fg(this,\"prevChannelMediaConfig\",void 0),Fg(this,\"httpRetryConfig\",void 0),Fg(this,\"_resolution\",void 0),Fg(this,\"_state\",Xw.RELAY_STATE_IDLE),Fg(this,\"errorCode\",Qw.RELAY_OK),Fg(this,\"onStatus\",(e=>{fb.debug(\"[\".concat(this.clientId,\"] ChannelMediaStatus: \").concat(JSON.stringify(e))),e&&e.command&&(\"onAudioPacketReceived\"===e.command&&this.emit(\"event\",Jw.PACKET_RECEIVED_AUDIO_FROM_SRC),\"onVideoPacketReceived\"===e.command&&this.emit(\"event\",Jw.PACKET_RECEIVED_VIDEO_FROM_SRC),\"onSrcTokenPrivilegeDidExpire\"===e.command&&(this.errorCode=Qw.SRC_TOKEN_EXPIRED,this.state=Xw.RELAY_STATE_FAILURE),\"onDestTokenPrivilegeDidExpire\"===e.command&&(this.errorCode=Qw.DEST_TOKEN_EXPIRED,this.state=Xw.RELAY_STATE_FAILURE))})),Fg(this,\"onReconnect\",(async()=>{fb.debug(\"[\".concat(this.clientId,\"] ChannelMediaSocket disconnect, reconnecting\")),this.emit(\"event\",Jw.NETWORK_DISCONNECTED),this.state=Xw.RELAY_STATE_IDLE,this.prevChannelMediaConfig&&this.sendStartRelayMessage(this.prevChannelMediaConfig).catch((e=>{this.state!==Xw.RELAY_STATE_IDLE&&(fb.error(\"auto restart channel media relay failed\",e.toString()),this.errorCode=Qw.SERVER_CONNECTION_LOST,this.state=Xw.RELAY_STATE_FAILURE)}))})),this.joinInfo=e,this.clientId=t,this.sid=SA(),this.signal=new _Y(this.joinInfo,this.clientId,i),this.httpRetryConfig=n,this._resolution=r}async startChannelMediaRelay(e){if(this.state!==Xw.RELAY_STATE_IDLE)throw new yb(Ry.INVALID_OPERATION);this.state=Xw.RELAY_STATE_CONNECTING,await this.connect(),fb.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: connect success\"));try{await this.sendStartRelayMessage(e)}catch(e){if(e.data&&e.data.serverResponse&&\"SetSourceChannel\"===e.data.serverResponse.command)throw new yb(Ry.CROSS_CHANNEL_FAILED_JOIN_SRC);if(e.data&&e.data.serverResponse&&\"SetDestChannelStatus\"===e.serverResponse.command)throw new yb(Ry.CROSS_CHANNEL_FAILED_JOIN_DEST);if(e.data&&e.data.serverResponse&&\"StartPacketTransfer\"===e.serverResponse.command)throw new yb(Ry.CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST);throw e}this.prevChannelMediaConfig=e}async updateChannelMediaRelay(e){if(this.state!==Xw.RELAY_STATE_RUNNING)throw new yb(Ry.INVALID_OPERATION);await this.sendUpdateMessage(e),this.prevChannelMediaConfig=e}async setVideoProfile(e){if(this._resolution=e,this.state!==Xw.RELAY_STATE_RUNNING)throw new yb(Ry.INVALID_OPERATION);const t=this.genMessage(zw.SetVideoProfile);await this.signal.request(t),fb.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: setVideoProfile success\"))}async stopChannelMediaRelay(){await this.sendStopRelayMessage(),fb.debug(\"[\".concat(this.clientId,\"] stopChannelMediaRelay: send stop message success\")),this.state=Xw.RELAY_STATE_IDLE,this.dispose()}dispose(){fb.debug(\"[\".concat(this.clientId,\"] disposeChannelMediaRelay\")),this.cancelToken.cancel(),this.cancelToken=Lv.CancelToken.source(),this.state=Xw.RELAY_STATE_IDLE,this.emit(\"dispose\"),this.signal.dispose(),this.prevChannelMediaConfig=void 0}async connect(){const e=await Qx(this.joinInfo,this.cancelToken.token,this.httpRetryConfig);this.workerToken=e.workerToken,await this.signal.connect(e.addressList),this.emit(\"event\",Jw.NETWORK_CONNECTED),this.signal.on(\"status\",this.onStatus),this.signal.on(\"reconnecting\",this.onReconnect)}async sendStartRelayMessage(e){const t=this.genMessage(zw.StopPacketTransfer);await this.signal.request(t),await this.signal.waitStatus(\"Normal Quit\"),fb.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: StopPacketTransfer success\"));const i=this.genMessage(zw.SetSdkProfile,e);await this.signal.request(i),fb.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetSdkProfile success\"));const n=this.genMessage(zw.SetSourceChannel,e);await this.signal.request(n),await this.signal.waitStatus(\"SetSourceChannelStatus\"),this.emit(\"event\",Jw.PACKET_JOINED_SRC_CHANNEL),fb.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetSourceChannel success\"));const r=this.genMessage(zw.SetSourceUserId,e);await this.signal.request(r),fb.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetSourceUserId success\"));const o=this.genMessage(zw.SetDestChannel,e);await this.signal.request(o),await this.signal.waitStatus(\"SetDestChannelStatus\"),this.emit(\"event\",Jw.PACKET_JOINED_DEST_CHANNEL),fb.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetDestChannel success\"));const s=this.genMessage(zw.StartPacketTransfer,e);await this.signal.request(s),this.emit(\"event\",Jw.PACKET_SENT_TO_DEST_CHANNEL),this.state=Xw.RELAY_STATE_RUNNING,fb.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: StartPacketTransfer success\")),this.setVideoProfile(this._resolution)}async sendUpdateMessage(e){const t=this.genMessage(zw.UpdateDestChannel,e);await this.signal.request(t),this.emit(\"event\",Jw.PACKET_UPDATE_DEST_CHANNEL),fb.debug(\"[\".concat(this.clientId,\"] sendUpdateMessage: UpdateDestChannel success\"))}async sendStopRelayMessage(){const e=this.genMessage(zw.StopPacketTransfer);await this.signal.request(e),fb.debug(\"[\".concat(this.clientId,\"] sendStopRelayMessage: StopPacketTransfer success\"))}genMessage(e,t){const i=[],n=[],r=[];this.requestId+=1;const o={appId:this.joinInfo.appId,cname:this.joinInfo.cname,uid:this.joinInfo.uid.toString(),sdkVersion:GA,sid:this.sid,ts:Date.now(),requestId:this.requestId,seq:this.requestId,allocate:!0,clientRequest:{}};\"4.22.1\"===o.sdkVersion&&(o.sdkVersion=\"0.0.1\");let s=null,a=null;switch(e){case zw.SetSdkProfile:return o.clientRequest={command:\"SetSdkProfile\",type:\"multi_channel\"},o;case zw.SetSourceChannel:if(a=t&&t.getSrcChannelMediaInfo(),!a)throw new yb(Ry.UNEXPECTED_ERROR,\"can not find source config\");return o.clientRequest={command:\"SetSourceChannel\",uid:\"0\",channelName:a.channelName,token:a.token||this.joinInfo.appId},o;case zw.SetSourceUserId:if(a=t&&t.getSrcChannelMediaInfo(),!a)throw new yb(Ry.UNEXPECTED_ERROR,\"can not find source config\");return o.clientRequest={command:\"SetSourceUserId\",uid:a.uid+\"\"},o;case zw.SetDestChannel:if(s=t&&t.getDestChannelMediaInfo(),!s)throw new yb(Ry.UNEXPECTED_ERROR,\"can not find dest config\");return s.forEach((e=>{i.push(e.channelName),n.push(e.uid+\"\"),r.push(e.token||this.joinInfo.appId)})),o.clientRequest={command:\"SetDestChannel\",channelName:i,uid:n,token:r},o;case zw.StartPacketTransfer:return o.clientRequest={command:\"StartPacketTransfer\"},o;case zw.Reconnect:return o.clientRequest={command:\"Reconnect\"},o;case zw.StopPacketTransfer:return o.clientRequest={command:\"StopPacketTransfer\"},o;case zw.UpdateDestChannel:if(s=t&&t.getDestChannelMediaInfo(),!s)throw new yb(Ry.UNEXPECTED_ERROR,\"can not find dest config\");return s.forEach((e=>{i.push(e.channelName),n.push(e.uid+\"\"),r.push(e.token||this.joinInfo.appId)})),o.clientRequest={command:\"UpdateDestChannel\",channelName:i,uid:n,token:r},o;case zw.SetVideoProfile:o.clientRequest={command:\"SetVideoProfile\",width:this._resolution.width,height:this._resolution.height}}return o}}const fY={name:\"ChannelMediaRelay\",create:function(e){return new EY(e.joinInfo,e.clientId,e.websocketRetryConfig||PA,e.httpRetryConfig||PA,e.resolution)}};function mY(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function TY(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?mY(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):mY(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class SY extends xy{constructor(e,t,i,n){super(),Fg(this,\"spec\",void 0),Fg(this,\"token\",void 0),Fg(this,\"websocket\",void 0),Fg(this,\"pingpongTimer\",void 0),Fg(this,\"reconnectMode\",\"retry\"),Fg(this,\"serviceMode\",void 0),Fg(this,\"reqId\",0),Fg(this,\"commandReqId\",0),Fg(this,\"handleWebSocketOpen\",(()=>{this.reconnectMode=\"retry\",this.startPingPong()})),Fg(this,\"handleWebSocketMessage\",(e=>{if(!e.data)return;const t=JSON.parse(e.data);t.requestId?this.emit(\"@\".concat(t.requestId,\"-\").concat(t.sid),t):(vb.workerEvent(this.spec.sid,{actionType:\"status\",serverCode:t.code,workerType:this.serviceMode===Fw.TRANSCODE?1:2}),this.emit(Hw.PUBLISH_STREAM_STATUS,t))})),this.spec=t,this.token=e,this.serviceMode=n,this.websocket=new HO(\"live-streaming\",i),this.websocket.on(Uw.CONNECTED,this.handleWebSocketOpen),this.websocket.on(Uw.ON_MESSAGE,this.handleWebSocketMessage),this.websocket.on(Uw.REQUEST_NEW_URLS,((e,t)=>{Zy(this,Hw.REQUEST_NEW_ADDRESS).then(e).catch(t)})),this.websocket.on(Uw.RECONNECTING,(()=>{this.websocket.reconnectMode=this.reconnectMode}))}init(e){return this.websocket.init(e)}async request(e,t,i,n){this.reqId+=1,\"request\"===e&&(this.commandReqId+=1);const r=this.commandReqId,o=this.reqId;if(!o||!this.websocket)throw new yb(Ry.UNEXPECTED_ERROR);const s=TY({command:e,sdkVersion:\"4.22.1\"===GA?\"0.0.1\":GA,seq:o,requestId:o,allocate:i,cname:this.spec.cname,appId:this.spec.appId,sid:this.spec.sid,uid:this.spec.uid.toString(),ts:Math.floor(Date.now()/1e3)},t);if(\"closed\"===this.websocket.state)throw new yb(Ry.WS_DISCONNECT);const a=()=>new Gh(((e,t)=>{this.websocket.once(Uw.CLOSED,(()=>t(new yb(Ry.WS_ABORT)))),this.websocket.once(Uw.CONNECTED,e)}));\"connected\"!==this.websocket.state&&await a(),s.clientRequest&&(s.clientRequest.workerToken=this.token);const c=new Gh(((e,t)=>{const i=()=>{t(new yb(Ry.WS_ABORT))};this.websocket.once(Uw.RECONNECTING,i),this.websocket.once(Uw.CLOSED,i),this.once(\"@\".concat(o,\"-\").concat(this.spec.sid),(t=>{e(t)}))}));n&&vb.workerEvent(this.spec.sid,TY(TY({},n),{},{requestId:r,actionType:\"request\",payload:JSON.stringify(t.clientRequest),serverCode:0,code:0}));const d=Date.now();this.websocket.sendMessage(s);let l=null;try{l=await c}catch(n){if(\"closed\"===this.websocket.state)throw n;return await a(),await this.request(e,t,i)}return n&&vb.workerEvent(this.spec.sid,TY(TY({},n),{},{requestId:r,actionType:\"response\",payload:JSON.stringify(l.serverResponse),serverCode:l.code,success:200===l.code,responseTime:Date.now()-d})),200!==l.code&&this.handleResponseError(l),l}tryNextAddress(){this.reconnectMode=\"tryNext\",this.websocket.reconnect(\"tryNext\")}close(){const e=\"4.22.1\"===GA?\"0.0.1\":GA;this.reqId+=1,\"connected\"===this.websocket.state?(this.websocket.sendMessage({command:\"request\",appId:this.spec.appId,cname:this.spec.cname,uid:this.spec.uid.toString(),sdkVersion:e,sid:this.spec.sid,seq:this.reqId,ts:Math.floor(Date.now()/1e3),requestId:this.reqId,clientRequest:{command:\"DestroyWorker\"}}),this.websocket.close(!1,!0)):this.websocket.close(!1),this.pingpongTimer&&(window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0)}handleResponseError(e){switch(e.code){case Yw.LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM:return void fb.warning(\"live stream response already exists stream\");case Yw.LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR:case Yw.LIVE_STREAM_RESPONSE_BAD_STREAM:case Yw.LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR:return new yb(Ry.LIVE_STREAMING_INVALID_ARGUMENT,\"\",{code:e.code}).throw();case Yw.LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST:if(\"UnpublishStream\"===e.serverResponse.command)return;throw new yb(Ry.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"live stream response wm worker not exist\",{retry:!0});case Yw.LIVE_STREAM_RESPONSE_NOT_AUTHORIZED:return new yb(Ry.LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED,\"\",{code:e.code}).throw();case Yw.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE:{const t=new yb(Ry.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE);return this.emit(Hw.WARNING,t,e.serverResponse.url)}case Yw.LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN:{const t=new yb(Ry.LIVE_STREAMING_WARN_FREQUENT_REQUEST);return this.emit(Hw.WARNING,t,e.serverResponse.url)}case Yw.LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH:throw new yb(Ry.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"live stream response wm worker not exist\",{retry:!0});case Yw.LIVE_STREAM_RESPONSE_NOT_SUPPORTED:return new yb(Ry.LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED,\"\",{code:e.code}).throw();case Yw.LIVE_STREAM_RESPONSE_MAX_STREAM_NUM:{const t=new yb(Ry.LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT);return this.emit(Hw.WARNING,t,e.serverResponse.url)}case Yw.LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR:return new yb(Ry.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"\",{code:e.code}).throw();case Yw.LIVE_STREAM_RESPONSE_RESOURCE_LIMIT:throw new yb(Ry.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"live stream resource limit\",{retry:!0,changeAddress:!0});case Yw.LIVE_STREAM_RESPONSE_WORKER_LOST:case Yw.LIVE_STREAM_RESPONSE_WORKER_QUIT:if(\"UnpublishStream\"===e.serverResponse.command)return;throw new yb(Ry.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"error fail send message\",{retry:!0,changeAddress:!0});case Yw.ERROR_FAIL_SEND_MESSAGE:if(\"UnpublishStream\"===e.serverResponse.command)return;if(\"UpdateTranscoding\"===e.serverResponse.command||\"ControlStream\"===e.serverResponse.command)return new yb(Ry.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"error fail send message\",{code:e.code}).throw();throw new yb(Ry.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"error fail send message\",{retry:!0,changeAddress:!0});case Yw.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN:case Yw.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT:case Yw.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE:case Yw.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH:return new yb(Ry.LIVE_STREAMING_CDN_ERROR,\"\",{code:e.code}).throw()}}startPingPong(){this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval((()=>{\"connected\"===this.websocket.state&&this.request(\"ping\",{}).catch(gA)}),6e3)}}function gY(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function RY(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?gY(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):gY(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class CY extends xy{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:PA,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:PA;super(),Fg(this,\"onLiveStreamWarning\",void 0),Fg(this,\"onLiveStreamError\",void 0),Fg(this,\"spec\",void 0),Fg(this,\"retryTimeout\",1e4),Fg(this,\"connection\",void 0),Fg(this,\"httpRetryConfig\",void 0),Fg(this,\"wsRetryConfig\",void 0),Fg(this,\"streamingTasks\",new Map),Fg(this,\"isStartingStreamingTask\",!1),Fg(this,\"taskMutex\",new NA(\"live-streaming\")),Fg(this,\"cancelToken\",Lv.CancelToken.source()),Fg(this,\"transcodingConfig\",void 0),Fg(this,\"uapResponse\",void 0),Fg(this,\"lastTaskId\",1),Fg(this,\"statusError\",new Map),this.spec=e,this.httpRetryConfig=i,this.wsRetryConfig=t}async setTranscodingConfig(e){const t=RY(RY({},Ww),e);66!==t.videoCodecProfile&&77!==t.videoCodecProfile&&100!==t.videoCodecProfile&&(fb.debug(\"[\".concat(this.spec.clientId,\"] set transcoding config, fix video codec profile: \").concat(t.videoCodecProfile,\" -> 100\")),t.videoCodecProfile=100),t.transcodingUsers||(t.transcodingUsers=t.userConfigs),t.transcodingUsers&&(t.transcodingUsers=t.transcodingUsers.map((e=>RY(RY(RY({},Bw),e),{},{zOrder:e.zOrder?e.zOrder+1:1})))),function(e){Oy(e.width)||yy(e.width,\"config.width\",0,1e4),Oy(e.height)||yy(e.height,\"config.height\",0,1e4),Oy(e.videoBitrate)||yy(e.videoBitrate,\"config.videoBitrate\",1,1e6),Oy(e.videoFrameRate)||yy(e.videoFrameRate,\"config.videoFrameRate\"),Oy(e.lowLatency)||Iy(e.lowLatency,\"config.lowLatency\"),Oy(e.audioSampleRate)||vy(e.audioSampleRate,\"config.audioSampleRate\",[32e3,44100,48e3]),Oy(e.audioBitrate)||yy(e.audioBitrate,\"config.audioBitrate\",1,128),Oy(e.audioChannels)||vy(e.audioChannels,\"config.audioChannels\",[1,2,3,4,5]),Oy(e.videoGop)||yy(e.videoGop,\"config.videoGop\"),Oy(e.videoCodecProfile)||vy(e.videoCodecProfile,\"config.videoCodecProfile\",[66,77,100]),Oy(e.userCount)||yy(e.userCount,\"config.userCount\",0,17),Oy(e.backgroundColor)||yy(e.backgroundColor,\"config.backgroundColor\",0,16777215),Oy(e.userConfigExtraInfo)||by(e.userConfigExtraInfo,\"config.userConfigExtraInfo\",0,4096,!1),e.transcodingUsers&&!Oy(e.transcodingUsers)&&(wy(e.transcodingUsers,\"config.transcodingUsers\"),e.transcodingUsers.forEach(((e,t)=>{Vw(e.uid),Oy(e.x)||yy(e.x,\"transcodingUser[\".concat(t,\"].x\"),0,1e4),Oy(e.y)||yy(e.y,\"transcodingUser[\".concat(t,\"].y\"),0,1e4),Oy(e.width)||yy(e.width,\"transcodingUser[\".concat(t,\"].width\"),0,1e4),Oy(e.height)||yy(e.height,\"transcodingUser[\".concat(t,\"].height\"),0,1e4),Oy(e.zOrder)||yy(e.zOrder-1,\"transcodingUser[\".concat(t,\"].zOrder\"),0,100),Oy(e.alpha)||yy(e.alpha,\"transcodingUser[\".concat(t,\"].alpha\"),0,1,!1)}))),Oy(e.watermark)||Gw(e.watermark,\"watermark\"),Oy(e.backgroundImage)||Gw(e.backgroundImage,\"backgroundImage\"),e.images&&!Oy(e.images)&&(wy(e.images,\"config.images\"),e.images.forEach(((e,t)=>{Gw(e,\"images[\".concat(t,\"]\"))})))}(t);const i=[];t.images&&i.push(...t.images.map((e=>RY(RY(RY({},jw),e),{},{zOrder:255})))),t.backgroundImage&&(i.push(RY(RY(RY({},jw),t.backgroundImage),{},{zOrder:0})),delete t.backgroundImage),t.watermark&&(i.push(RY(RY(RY({},jw),t.watermark),{},{zOrder:255})),delete t.watermark),t.images=i,t.transcodingUsers&&(t.userConfigs=t.transcodingUsers.map((e=>RY({},e))),t.userCount=t.transcodingUsers.length,delete t.transcodingUsers);const n=(t.userConfigs||[]).map((e=>\"number\"==typeof e.uid?Gh.resolve(e.uid):Yx(e.uid,this.spec,this.cancelToken.token,this.httpRetryConfig)));if((await Gh.all(n)).forEach(((e,i)=>{t.userConfigs&&t.userConfigs[i]&&(t.userConfigs[i].uid=e)})),this.transcodingConfig=t,this.connection)try{var r;const e=await this.connection.request(\"request\",{clientRequest:{command:\"UpdateTranscoding\",transcodingConfig:this.transcodingConfig}},!1,{command:\"UpdateTranscoding\",workerType:1,requestByUser:!0,tid:Array.from(_N(r=this.streamingTasks).call(r)).map((e=>e.taskId)).join(\"#\")});fb.debug(\"[\".concat(this.spec.clientId,\"] update live transcoding config success, code: \").concat(e.code,\", config:\"),JSON.stringify(this.transcodingConfig))}catch(e){if(!e.data||!e.data.retry)throw e;e.data.changeAddress&&this.connection.tryNextAddress(),this.streamingTasks.forEach((t=>{fb.warning(\"[\".concat(this.spec.clientId,\"] live streaming receive error\"),e.toString(),\"try to republish\",t.url),this.startLiveStreamingTask(t.url,t.mode,e).then((()=>{fb.debug(\"[\".concat(this.spec.clientId,\"] live streaming republish \").concat(t.url,\" success\"))})).catch((e=>{fb.error(\"[\".concat(this.spec.clientId,\"] live streaming republish failed\"),t.url,e.toString()),this.onLiveStreamError&&this.onLiveStreamError(t.url,e)}))}))}}async startLiveStreamingTask(e,t,i){if(!this.transcodingConfig&&t===Fw.TRANSCODE)throw new yb(Ry.INVALID_OPERATION,\"[LiveStreaming] no transcoding config found, can not start transcoding streaming task\");const n={command:\"PublishStream\",ts:Date.now(),url:e,uid:this.spec.uid.toString(),autoDestroyTime:100,acceptImageTimeout:!0};fb.debug(\"[\".concat(this.spec.clientId,\"] start live streaming \").concat(e,\", mode: \").concat(t));const r=await this.taskMutex.lock();if(!this.connection&&i)return void r();if(this.streamingTasks.get(e)&&!i)return r(),new yb(Ry.LIVE_STREAMING_TASK_CONFLICT).throw();try{this.connection||(this.connection=await this.connect(t))}catch(e){throw r(),e}switch(t){case Fw.TRANSCODE:n.transcodingConfig=RY({},this.transcodingConfig);case Fw.RAW:}this.uapResponse&&this.uapResponse.vid&&(n.vid=this.uapResponse.vid),this.isStartingStreamingTask=!0;const o=this.lastTaskId++;try{const s=new Gh(((t,n)=>{mA(this.retryTimeout).then((()=>{if(i)return n(i);const t=this.statusError.get(e);return t?(this.statusError.delete(e),n(t)):void 0}))})),a=await Gh.race([this.connection.request(\"request\",{clientRequest:n},!0,{url:e,command:\"PublishStream\",workerType:t===Fw.TRANSCODE?1:2,requestByUser:!i,tid:o.toString()}),s]);this.isStartingStreamingTask=!1,fb.debug(\"[\".concat(this.spec.clientId,\"] live streaming started, code: \").concat(a.code)),this.streamingTasks.set(e,{clientRequest:n,mode:t,url:e,taskId:o}),r()}catch(n){if(r(),this.isStartingStreamingTask=!1,!n.data||!n.data.retry||i)throw n;return n.data.changeAddress?(this.connection.tryNextAddress(),await this.startLiveStreamingTask(e,t,n)):await this.startLiveStreamingTask(e,t,n)}}stopLiveStreamingTask(e){return new Gh(((t,i)=>{const n=this.streamingTasks.get(e);if(!n||!this.connection)return new yb(Ry.UNEXPECTED_ERROR,\"can not find streaming task to stop\").throw();const r=n.mode;n.abortTask=()=>{fb.debug(\"[\".concat(this.spec.clientId,\"] stop live streaming success(worker exception)\")),this.streamingTasks.delete(e),t()},this.connection.request(\"request\",{clientRequest:{command:\"UnpublishStream\",url:n.url}},!1,{url:e,command:\"UnPublishStream\",workerType:r===Fw.TRANSCODE?1:2,requestByUser:!0,tid:(this.lastTaskId++).toString()}).then((i=>{fb.debug(\"[\".concat(this.spec.clientId,\"] stop live streaming success, code: \").concat(i.code)),this.streamingTasks.delete(e),0===this.streamingTasks.size&&(this.connection&&this.connection.close(),this.connection=void 0),t()})).catch(i)}))}resetAllTask(){var e;const t=Array.from(_N(e=this.streamingTasks).call(e));this.terminate();for(const e of t)this.startLiveStreamingTask(e.url,e.mode).catch((t=>{this.onLiveStreamError&&this.onLiveStreamError(e.url,t)}))}terminate(){this.cancelToken&&this.cancelToken.cancel(),this.streamingTasks=new Map,this.isStartingStreamingTask=!1,this.statusError=new Map,this.cancelToken=Lv.CancelToken.source(),this.uapResponse=void 0,this.connection&&this.connection.close(),this.connection=void 0}async connect(e){if(this.connection)throw new yb(Ry.UNEXPECTED_ERROR,\"live streaming connection has already connected\");const t=await Zy(this,Kw.REQUEST_WORKER_MANAGER_LIST,e);return this.uapResponse=t,this.connection=new SY(t.workerToken,this.spec,this.wsRetryConfig,e),this.connection.on(Hw.WARNING,((e,t)=>this.onLiveStreamWarning&&this.onLiveStreamWarning(t,e))),this.connection.on(Hw.PUBLISH_STREAM_STATUS,(e=>this.handlePublishStreamServer(e))),this.connection.on(Hw.REQUEST_NEW_ADDRESS,((t,i)=>{if(!this.connection)return i(new yb(Ry.UNEXPECTED_ERROR,\"can not get new live streaming address list\"));Zy(this,Kw.REQUEST_WORKER_MANAGER_LIST,e).then((e=>{this.uapResponse=e,t(e.addressList)})).catch(i)})),await this.connection.init(t.addressList),this.connection}handlePublishStreamServer(e){const t=e.serverStatus&&e.serverStatus.url||\"empty_url\",i=this.streamingTasks.get(t),n=e.reason;switch(e.code){case Yw.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN:case Yw.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT:case Yw.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE:case Yw.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH:{const n=new yb(Ry.LIVE_STREAMING_CDN_ERROR,\"\",{code:e.code});if(i)return fb.error(n.toString()),this.onLiveStreamError&&this.onLiveStreamError(t,n);if(!this.isStartingStreamingTask)return;this.statusError.set(t,n)}case Yw.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE:{const e=new yb(Ry.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE,n);return this.onLiveStreamWarning&&this.onLiveStreamWarning(t,e)}case Yw.LIVE_STREAM_RESPONSE_WORKER_LOST:case Yw.LIVE_STREAM_RESPONSE_WORKER_QUIT:{var r;if(!this.connection)return;this.connection.tryNextAddress();const t=Array.from(_N(r=this.streamingTasks).call(r));for(const i of t)i.abortTask?i.abortTask():(fb.warning(\"[\".concat(this.spec.clientId,\"] publish stream status code\"),e.code,\"try to republish\",i.url),this.startLiveStreamingTask(i.url,i.mode,new yb(Ry.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"\",{code:e.code})).then((()=>{fb.debug(\"[\".concat(this.spec.clientId,\"] republish live stream success\"),i.url)})).catch((e=>{fb.error(e.toString()),this.onLiveStreamError&&this.onLiveStreamError(i.url,e)})));return}}}hasUrl(e){return this.streamingTasks.has(e)}}const IY={name:\"LiveStreaming\",create:function(e){return new CY(e.joinInfo,e.websocketRetryConfig||PA,e.httpRetryConfig||PA)}};function vY(e){let t=MY();return function(e,t){let i=e.appId;void 0!==i&&(JY(t,10),GY(t,i));let n=e.cid;void 0!==n&&(JY(t,16),JY(t,n));let r=e.cname;void 0!==r&&(JY(t,26),GY(t,r));let o=e.deviceId;void 0!==o&&(JY(t,34),GY(t,o));let s=e.elapse;void 0!==s&&(JY(t,40),XY(t,s));let a=e.fileSize;void 0!==a&&(JY(t,48),XY(t,LY(a)));let c=e.height;void 0!==c&&(JY(t,56),XY(t,LY(c)));let d=e.jpg;void 0!==d&&(JY(t,66),JY(t,d.length),function(e,t){let i=FY(e,t.length);e.bytes.set(t,i)}(t,d));let l=e.networkType;void 0!==l&&(JY(t,72),XY(t,LY(l)));let u=e.osType;void 0!==u&&(JY(t,80),XY(t,LY(u)));let h=e.requestId;void 0!==h&&(JY(t,90),GY(t,h));let p=e.sdkVersion;void 0!==p&&(JY(t,98),GY(t,p));let _=e.sequence;void 0!==_&&(JY(t,104),XY(t,LY(_)));let E=e.sid;void 0!==E&&(JY(t,114),GY(t,E));let f=e.timestamp;void 0!==f&&(JY(t,120),XY(t,f));let m=e.uid;void 0!==m&&(JY(t,128),JY(t,m));let T=e.vid;void 0!==T&&(JY(t,136),JY(t,T));let S=e.width;void 0!==S&&(JY(t,144),XY(t,LY(S)));let g=e.service;void 0!==g&&(JY(t,152),JY(t,g));let R=e.callbackData;void 0!==R&&(JY(t,162),GY(t,R));let C=e.jpgEncryption;void 0!==C&&(JY(t,168),JY(t,C));let I=e.requestType;void 0!==I&&(JY(t,176),JY(t,I));let v=e.scorePorn;void 0!==v&&(JY(t,185),qY(t,v));let y=e.scoreSexy;void 0!==y&&(JY(t,193),qY(t,y));let A=e.scoreNeutral;void 0!==A&&(JY(t,201),qY(t,A));let b=e.scene;void 0!==b&&(JY(t,208),JY(t,b));let w=e.ossFilePrefix;void 0!==w&&(JY(t,218),GY(t,w));let O=e.serviceVendor;if(void 0!==O)for(let e of O){JY(t,226);let i=MY();bY(e,i),JY(t,i.limit),WY(t,i),UY(i)}}(e,t),function(e){let t=e.bytes,i=e.limit;return t.length===i?t:t.subarray(0,i)}(t)}function yY(e){return function(e){let t={};e:for(;!VY(e);){let i=zY(e);switch(i>>>3){case 0:break e;case 1:t.code=zY(e);break;case 2:t.msg=jY(e,zY(e));break;case 3:{let i=wY(e);t.data=AY(e),e.limit=i;break}default:OY(e,7&i)}}return t}({bytes:t=e,offset:0,limit:t.length});var t}function AY(e){let t={};e:for(;!VY(e);){let i=zY(e);switch(i>>>3){case 0:break e;case 1:t.requestId=jY(e,zY(e));break;case 2:t.requestType=zY(e)>>>0;break;case 3:t.scorePorn=YY(e);break;case 4:t.scoreSexy=YY(e);break;case 5:t.scoreNeutral=YY(e);break;case 6:t.requestScene=zY(e)>>>0;break;case 7:t.scene=zY(e)>>>0;break;default:OY(e,7&i)}}return t}function bY(e,t){let i=e.service;void 0!==i&&(JY(t,8),JY(t,i));let n=e.vendor;void 0!==n&&(JY(t,16),JY(t,n));let r=e.token;void 0!==r&&(JY(t,26),GY(t,r));let o=e.callbackUrl;void 0!==o&&(JY(t,34),GY(t,o))}function wY(e){let t=zY(e),i=e.limit;return e.limit=e.offset+t,i}function OY(e,t){switch(t){case 0:for(;128&HY(e););break;case 2:xY(e,zY(e));break;case 5:xY(e,4);break;case 1:xY(e,8);break;default:throw new Error(\"Unimplemented type: \"+t)}}let NY=new Float32Array(1);new Uint8Array(NY.buffer);let DY=new Float64Array(1),PY=new Uint8Array(DY.buffer);function LY(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}let kY=[];function MY(){const e=kY.pop();return e?(e.offset=e.limit=0,e):{bytes:new Uint8Array(64),offset:0,limit:0}}function UY(e){kY.push(e)}function xY(e,t){if(e.offset+t>e.limit)throw new Error(\"Skip past limit\");e.offset+=t}function VY(e){return e.offset>=e.limit}function FY(e,t){let i=e.bytes,n=e.offset,r=e.limit,o=n+t;if(o>i.length){let t=new Uint8Array(2*o);t.set(i),e.bytes=t}return e.offset=o,o>r&&(e.limit=o),n}function BY(e,t){let i=e.offset;if(i+t>e.limit)throw new Error(\"Read past limit\");return e.offset+=t,i}function jY(e,t){let i=BY(e,t),n=String.fromCharCode,r=e.bytes,o=\"ï¿½\",s=\"\";for(let e=0;e<t;e++){let a,c,d,l,u=r[e+i];0==(128&u)?s+=n(u):192==(224&u)?e+1>=t?s+=o:(a=r[e+i+1],128!=(192&a)?s+=o:(l=(31&u)<<6|63&a,l<128?s+=o:(s+=n(l),e++))):224==(240&u)?e+2>=t?s+=o:(a=r[e+i+1],c=r[e+i+2],32896!=(49344&(a|c<<8))?s+=o:(l=(15&u)<<12|(63&a)<<6|63&c,l<2048||l>=55296&&l<=57343?s+=o:(s+=n(l),e+=2))):240==(248&u)?e+3>=t?s+=o:(a=r[e+i+1],c=r[e+i+2],d=r[e+i+3],8421504!=(12632256&(a|c<<8|d<<16))?s+=o:(l=(7&u)<<18|(63&a)<<12|(63&c)<<6|63&d,l<65536||l>1114111?s+=o:(l-=65536,s+=n(55296+(l>>10),56320+(1023&l)),e+=3))):s+=o}return s}function GY(e,t){let i=t.length,n=0;for(let e=0;e<i;e++){let r=t.charCodeAt(e);r>=55296&&r<=56319&&e+1<i&&(r=(r<<10)+t.charCodeAt(++e)-56613888),n+=r<128?1:r<2048?2:r<65536?3:4}JY(e,n);let r=FY(e,n),o=e.bytes;for(let e=0;e<i;e++){let n=t.charCodeAt(e);n>=55296&&n<=56319&&e+1<i&&(n=(n<<10)+t.charCodeAt(++e)-56613888),n<128?o[r++]=n:(n<2048?o[r++]=n>>6&31|192:(n<65536?o[r++]=n>>12&15|224:(o[r++]=n>>18&7|240,o[r++]=n>>12&63|128),o[r++]=n>>6&63|128),o[r++]=63&n|128)}}function WY(e,t){let i=FY(e,t.limit),n=e.bytes,r=t.bytes;for(let e=0,o=t.limit;e<o;e++)n[e+i]=r[e]}function HY(e){return e.bytes[BY(e,1)]}function KY(e,t){let i=FY(e,1);e.bytes[i]=t}function YY(e){let t=BY(e,8),i=e.bytes;return PY[0]=i[t++],PY[1]=i[t++],PY[2]=i[t++],PY[3]=i[t++],PY[4]=i[t++],PY[5]=i[t++],PY[6]=i[t++],PY[7]=i[t++],DY[0]}function qY(e,t){let i=FY(e,8),n=e.bytes;DY[0]=t,n[i++]=PY[0],n[i++]=PY[1],n[i++]=PY[2],n[i++]=PY[3],n[i++]=PY[4],n[i++]=PY[5],n[i++]=PY[6],n[i++]=PY[7]}function zY(e){let t,i=0,n=0;do{t=HY(e),i<32&&(n|=(127&t)<<i),i+=7}while(128&t);return n}function JY(e,t){for(t>>>=0;t>=128;)KY(e,127&t|128),t>>>=7;KY(e,t)}function XY(e,t){let i=t.low>>>0,n=(t.low>>>28|t.high<<4)>>>0,r=t.high>>>24,o=0===r?0===n?i<16384?i<128?1:2:i<1<<21?3:4:n<16384?n<128?5:6:n<1<<21?7:8:r<128?9:10,s=FY(e,o),a=e.bytes;switch(o){case 10:a[s+9]=r>>>7&1;case 9:a[s+8]=9!==o?128|r:127&r;case 8:a[s+7]=8!==o?n>>>21|128:n>>>21&127;case 7:a[s+6]=7!==o?n>>>14|128:n>>>14&127;case 6:a[s+5]=6!==o?n>>>7|128:n>>>7&127;case 5:a[s+4]=5!==o?128|n:127&n;case 4:a[s+3]=4!==o?i>>>21|128:i>>>21&127;case 3:a[s+2]=3!==o?i>>>14|128:i>>>14&127;case 2:a[s+1]=2!==o?i>>>7|128:i>>>7&127;case 1:a[s]=1!==o?128|i:127&i}}function QY(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}const ZY=new Map([[\"moderation\",1],[\"supervise\",2]]);function $Y(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}class eq extends xy{get connectionState(){return this._connectionState}set connectionState(e){if(this._connectionState===e)return;const t=this._connectionState;this._connectionState=e,this.emit(mO.CONNECTION_STATE_CHANGE,t,e)}get inspectType(){return this._inspectType}set inspectType(e){var t;this._inspectMode=Jn(t=e.map((e=>ZY.get(e)||0))).call(t,((e,t)=>e+t)),this._inspectType=e}get quality(){return this._quality}set quality(e){this._quality=e>1?1:e<.1?.1:e,this.qualityTimer&&(window.clearTimeout(this.qualityTimer),this.qualityTimer=null),this._quality>=1||(this.qualityTimer=window.setTimeout((()=>{this.quality=this._quality/this.qualityRatio}),6e4))}constructor(e){super(),Fg(this,\"name\",\"AgoraRTCVideoContentInspect\"),Fg(this,\"_connectionState\",EO.CONNECTING),Fg(this,\"_innerConnectionState\",void 0),Fg(this,\"sequence\",0),Fg(this,\"inspectStartTime\",void 0),Fg(this,\"workerManagerConnection\",void 0),Fg(this,\"workerConnection\",void 0),Fg(this,\"workerMessageLengthLimit\",void 0),Fg(this,\"inspectIntervalMinimum\",void 0),Fg(this,\"qualityRatio\",void 0),Fg(this,\"_connectInfo\",void 0),Fg(this,\"_cancelTokenSource\",Lv.CancelToken.source()),Fg(this,\"_retryConfig\",void 0),Fg(this,\"wmSequence\",0),Fg(this,\"inspectInterval\",void 0),Fg(this,\"inspectTimer\",null),Fg(this,\"ossFilePrefix\",void 0),Fg(this,\"extraInfo\",void 0),Fg(this,\"_inspectType\",void 0),Fg(this,\"_inspectMode\",void 0),Fg(this,\"_quality\",1),Fg(this,\"qualityTimer\",null),Fg(this,\"_inspectId\",void 0),Fg(this,\"_needWorkUrlOnly\",!1),Fg(this,\"inspectImage\",(()=>{if(this.connectionState!==EO.CONNECTED)throw new yb(Ry.OPERATION_ABORTED,\"content inspect service connection status is \".concat(this.connectionState));this.inspectTimer&&(window.clearInterval(this.inspectTimer),this.inspectTimer=null),this.inspectTimer=window.setInterval((()=>{this.connectionState===EO.CONNECTED?this.requestToInspectImage():fb.debug(\"[\".concat(this._inspectId,\"] Inspect State is not connected , \"),this.connectionState)}),this.inspectInterval<this.inspectIntervalMinimum?this.inspectIntervalMinimum:this.inspectInterval),this.requestToInspectImage()})),this._inspectId=TA(5,\"inspect-\"),this.workerMessageLengthLimit=XA(\"VIDEO_INSPECT_WORKER_MESSAGE_LENGTH_LIMIT\"),this.inspectIntervalMinimum=XA(\"VIDEO_INSPECT_INTERVAL_MINIMUM\"),this.qualityRatio=XA(\"VIDEO_INSPECT_QUALITY_RATIO\"),this.inspectInterval=e.interval,this.ossFilePrefix=e.ossFilePrefix,this.extraInfo=e.extraInfo,this.inspectType=e.inspectType,this.inspectStartTime=Number(Date.now()),this.workerManagerConnection=new HO(\"worker-manager-\"+this._inspectId,PA),this.on(mO.STATE_CHANGE,((e,t)=>{this._innerConnectionState=e,fb.debug(\"[\".concat(this._inspectId,\"] Inspect operation :\").concat(fO[e],\" \").concat(t||\"\"))})),this.handleWorkerManagerEvents(),this.workerConnection=new HO(\"worker-\"+this._inspectId,PA),this.handleWorkerEvents()}async init(e,t){this.emit(mO.STATE_CHANGE,fO.CONNECT_AP),this._connectInfo=e;const i=this._cancelTokenSource.token;return this._retryConfig=t,new Gh(((n,r)=>{this.on(mO.CONNECTION_STATE_CHANGE,((e,t)=>{t===EO.CONNECTED&&n()})),this.requestAP(e,i,t).then((e=>{this.connectWorkerManager(e)})).catch((e=>{r(e)}))}))}async requestAP(e,t,i){const n=XA(\"WEBCS_DOMAIN\").map((e=>\"https://\".concat(e,\"/api/v1\"))),r=await function(e,t,i,n){let{appId:r,areaCode:o,cname:s,sid:a,token:c,uid:d}=t;Bx++;const l=\"image_moderation_api\",u={service_name:l,json_body:JSON.stringify({appId:r,areaCode:o,cname:s,command:\"allocateEdge\",requestId:Bx,seq:Bx,sid:a,token:c,ts:Date.now(),uid:d+\"\"})};let h,p,_=e[0];return kA((async()=>{h=Date.now();const e=await Tx(_,{data:u,cancelToken:i,headers:{\"X-Packet-Service-Type\":\"0\",\"X-Packet-URI\":\"61\"},params:{action:\"wrtc_gateway\"}});if(p=Date.now()-h,0!==e.code){const t=new yb(Ry.UNEXPECTED_RESPONSE,\"image inspect ap error, code\"+e.code,{retry:!0,responseTime:p});throw fb.error(t.toString()),t}const t=JSON.parse(e.json_body);if(200!==t.code){const e=new yb(Ry.UNEXPECTED_RESPONSE,\"image inspect ap error, code: \".concat(t.code,\", reason: \").concat(t.reason),{code:t.code,responseTime:p});throw fb.error(e.toString()),e}if(!t.servers||!Array.isArray(t.servers)||0===t.servers.length){const e=new yb(Ry.UNEXPECTED_RESPONSE,\"image inspect ap empty server\",{code:t.code,responseTime:p});throw fb.error(e.toString()),e}const n=XA(\"VIDEO_INSPECT_WORKER_MANAGER_HOST\"),r=XA(\"VIDEO_INSPECT_WORKER_MANAGER_PORT\");return{addressList:t.servers.map((e=>{let{address:t,wss:i}=e;if(t&&i)return\"wss://\".concat(t.replace(/\\./g,\"-\"),\".\").concat(n,\":\").concat(r||i)})).filter((e=>!!e)),workerToken:t.workerToken,vid:t.vid,responseTime:p}}),((t,i)=>(vb.apworkerEvent(a,{success:!0,sc:200,serviceName:l,responseDetail:JSON.stringify(t.addressList),firstSuccess:0===i,responseTime:p,serverIp:e[i%e.length]}),!1)),((t,i)=>(vb.apworkerEvent(a,{success:!1,sc:t.data&&t.data.code||200,serviceName:l,responseTime:p,serverIp:e[i%e.length]}),!!(t.code!==Ry.OPERATION_ABORTED&&t.code!==Ry.UNEXPECTED_RESPONSE||t.data&&t.data.retry)&&(_=e[(i+1)%e.length],!0))),n)}(n,e,t,i);this.emit(mO.STATE_CHANGE,fO.AP_CONNECTED);const{addressList:o}=r;return this.wmSequence++,o}async connectWorkerManager(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._needWorkUrlOnly=t,this.emit(mO.STATE_CHANGE,fO.CONNECT_WORKER_MANAGER),await this.workerManagerConnection.init(e,1e4)}async connectWorker(e){await this.workerConnection.init([e])}handleWorkerManagerEvents(){this.workerManagerConnection.on(Uw.CONNECTED,(async()=>{this.emit(mO.STATE_CHANGE,fO.WORKER_MANAGER_CONNECTED,this.workerManagerConnection.url),this.workerManagerConnection.sendMessage({appId:this._connectInfo.appId,cname:this._connectInfo.cname,uid:this._connectInfo.uid+\"\",sdkVersion:\"4.22.1\",sid:this._connectInfo.sid,seq:this.wmSequence,ts:Number(Date.now()),requestId:Math.floor(1e12*Math.random()),allocate:!0,clientRequest:{command:\"join\"}},!0)})),this.workerManagerConnection.on(Uw.CLOSED,(()=>{this._innerConnectionState<fO.GET_WORKER_MANAGER_RESPONSE&&fb.debug(\"[\".concat(this._inspectId,\"] Inspect worker manager is closed before connecting worker\"))})),this.workerManagerConnection.on(Uw.FAILED,(()=>{this._innerConnectionState<fO.GET_WORKER_MANAGER_RESPONSE&&fb.debug(\"[\".concat(this._inspectId,\"] Connecting inspect worker manager is failed before connecting worker\"))})),this.workerManagerConnection.on(Uw.RECONNECTING,(()=>{this._innerConnectionState<fO.GET_WORKER_MANAGER_RESPONSE&&fb.debug(\"[\".concat(this._inspectId,\"] Inspect worker manager is reconnecting before connecting worker\"))})),this.workerManagerConnection.on(Uw.ON_MESSAGE,(async e=>{this.emit(mO.STATE_CHANGE,fO.GET_WORKER_MANAGER_RESPONSE);const t=this.workerManagerConnection.url;this.workerManagerConnection.close();const i=JSON.parse(e.data);if(200!==i.code)throw fb.error(\"[\".concat(this._inspectId,\"] Unexpected code \").concat(i.code,\" from worker manager\")),new yb(Ry.UNEXPECTED_RESPONSE,\"response code of worker is unexpected\",i);if(!(i.serverResponse&&i.serverResponse.portWss&&t))throw fb.error(\"[\".concat(this._inspectId,\"] Unexpected content from worker manager : \").concat(JSON.stringify(i))),new yb(Ry.UNEXPECTED_RESPONSE,\"response content of worker is unexpected\",i);{const e=XA(\"VIDEO_INSPECT_WORKER_PORT\")||i.serverResponse.portWss,n=t.replace(/:\\d+\\/?$/,\":\".concat(e));this.emit(mO.STATE_CHANGE,fO.CONNECT_WORKER,n),this._needWorkUrlOnly?this.emit(mO.REQUEST_NEW_WORKER_URL,n):await this.connectWorker(n)}})),this.workerManagerConnection.on(Uw.WILL_RECONNECT,((e,t,i)=>{i(e)})),this.workerManagerConnection.on(Uw.REQUEST_NEW_URLS,((e,t)=>{this.requestAP(this._connectInfo,this._cancelTokenSource.token,this._retryConfig).then(e).catch(t)}))}handleWorkerEvents(){this.workerConnection.on(Uw.CONNECTED,(async()=>{this.emit(mO.STATE_CHANGE,fO.WORKER_CONNECTED,this.workerConnection.url),this.connectionState=EO.CONNECTED})),this.workerConnection.on(Uw.ON_MESSAGE,(async e=>{if(e.data instanceof ArrayBuffer){const i=yY(new Uint8Array(e.data));if(XA(\"SHOW_VIDEO_INSPECT_WORKER_MESSAGE\")&&fb.debug(\"[\".concat(this._inspectId,\"] Response message for worker of inspect content \"),JSON.stringify(i)),200===i.code){if(Array.isArray(this.inspectType)&&1===this.inspectType.length&&\"supervise\"===this.inspectType[0])return void this.emit(mO.INSPECT_RESULT,void 0,void 0);if(i.data&&i.data.scorePorn&&i.data.scoreSexy&&i.data.scoreNeutral){var t;const e={porn:i.data.scorePorn,sexy:i.data.scoreSexy,neutral:i.data.scoreNeutral},n=Jn(t=Object.keys(e)).call(t,((t,i)=>e[t]>e[i]?t:i),\"porn\"),r=Object.keys(e).find((e=>e===n));this.emit(mO.INSPECT_RESULT,r)}else this.emit(mO.INSPECT_RESULT,void 0,new yb(Ry.UNEXPECTED_RESPONSE,i.code+\"\",\"There is an unexpected data on message\"))}else this.emit(mO.INSPECT_RESULT,void 0,new yb(Ry.UNEXPECTED_RESPONSE,i.code+\"\",i.msg))}else fb.error(\"[\".concat(this._inspectId,\"] Unexpected message type from worker\")),this.emit(mO.INSPECT_RESULT,void 0,new yb(Ry.UNEXPECTED_RESPONSE,\"invalid worker message type\"))})),this.workerConnection.on(Uw.CLOSED,(()=>{this.connectionState=EO.CLOSED})),this.workerConnection.on(Uw.FAILED,(()=>{this.connectionState=EO.CLOSED})),this.workerConnection.on(Uw.RECONNECTING,(()=>{this.connectionState=this.connectionState===EO.CONNECTED?EO.RECONNECTING:EO.CONNECTING})),this.workerConnection.on(Uw.WILL_RECONNECT,((e,t,i)=>{\"recover\"===e&&i(e),i(\"tryNext\")})),this.workerConnection.on(Uw.REQUEST_NEW_URLS,((e,t)=>{this.workerManagerConnection.close(),this.once(mO.REQUEST_NEW_WORKER_URL,(t=>{e([t])})),this.requestAP(this._connectInfo,this._cancelTokenSource.token,this._retryConfig).then((e=>{this.connectWorkerManager(e,!0)})).catch((e=>{t(e)}))}))}async requestToInspectImage(){this.sequence++;const e=eA(this,mO.CLIENT_LOCAL_VIDEO_TRACK),t={appId:this._connectInfo.appId,cname:this._connectInfo.cname,cid:this._connectInfo.cid,sid:this._connectInfo.sid,uid:this._connectInfo.uid,vid:this._connectInfo.vid};if(e){if(!e.isPlaying)return void this.emit(mO.INSPECT_RESULT,void 0,new yb(Ry.INVALID_OPERATION,\"Only the track being played can be inspected\"));const i=await this.generateRequestData(e,t);this.workerConnection.sendMessage(i,!0,!0)}else this.emit(mO.INSPECT_RESULT,void 0,new yb(Ry.INVALID_OPERATION,\"Only the track being published can be inspected\"))}async generateRequestData(e,t){let{appId:i,cname:n,cid:r,vid:o,sid:s,uid:a}=t;const c=Date.now(),d=await e.getCurrentFrameImage(\"image/jpeg\",this.quality),l=await Ok(d,i,n),u=this.sequence+\"-\"+r+\"-\"+a+\"-\"+c+\"-\"+TA(12,\"\"),h={appId:i,cid:r,cname:n,deviceId:\"\",elapse:$Y(Number(c-this.inspectStartTime)),fileSize:l.byteLength,jpgEncryption:2,height:d.height,width:d.width,jpg:l,networkType:6,osType:7,requestId:u,sdkVersion:\"4.22.1\",sequence:this.sequence,sid:s,timestamp:$Y(c),uid:a,vid:o,service:this._inspectMode,callbackData:this.extraInfo,ossFilePrefix:this.ossFilePrefix};void 0===this.extraInfo&&delete h.callbackData,void 0===this.ossFilePrefix&&delete h.ossFilePrefix;const p=vY(h);if(p.byteLength<this.workerMessageLengthLimit){if(XA(\"SHOW_VIDEO_INSPECT_WORKER_MESSAGE\")){const e=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?QY(Object(i),!0).forEach((function(t){Fg(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):QY(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},h);delete e.jpg,fb.debug(\"[\".concat(this._inspectId,\"] Request message for worker of inspect content \"),JSON.stringify(e))}return p}{const t=this.quality*this.qualityRatio;return this.quality=t,await this.generateRequestData(e,{appId:i,cname:n,cid:r,vid:o,sid:s,uid:a})}}close(){this._cancelTokenSource.cancel(),this._cancelTokenSource=Lv.CancelToken.source(),this.workerManagerConnection&&this.workerManagerConnection.close(),this.workerConnection&&this.workerConnection.close(),this.inspectTimer&&window.clearInterval(this.inspectTimer),this.inspectTimer=null,this.connectionState=EO.CLOSED,this.emit(mO.STATE_CHANGE,fO.CLOSED)}}const tq={name:\"ContentInspect\",create:function(e){let{config:t}=e;return function(e){if(!e)throw new yb(Ry.INVALID_PARAMS,\"inspectConfig is necessary.\");if(!e.inspectType||!Array.isArray(e.inspectType))throw new yb(Ry.INVALID_PARAMS,\"inspectConfig.inspectType is necessary and is an instance of Array.\");{const t=[...new Set(e.inspectType)];t.forEach((e=>{var t;if(!Dn(t=[\"supervise\",\"moderation\"]).call(t,e))throw new yb(Ry.INVALID_PARAMS,\"\".concat(e,\" is not a valid inspect type.\"))})),e.inspectType=t}if(e&&e.extraInfo&&e.extraInfo.length>1024)throw new yb(Ry.INVALID_PARAMS,\"inspectConfig.extraInfo length cannot exceed 1024 bytes\")}(t),new eq(t)}};JA(\"PROCESS_ID\",\"process-\".concat(TA(8,\"\"),\"-\").concat(TA(4,\"\"),\"-\").concat(TA(4,\"\"),\"-\").concat(TA(4,\"\"),\"-\").concat(TA(12,\"\"))),function(){let e;try{e=window.localStorage.getItem(\"websdk_ng_global_parameter\")}catch(e){return void fb.error(\"Error loading sdk config\",e.message)}if(e)try{const t=JSON.parse(window.atob(e)),i=Date.now();fb.debug(\"Loading global parameters from cache\",t),Object.keys(t).forEach((e=>{if(Object.prototype.hasOwnProperty.call(zA,e)){const{value:n,expires:r}=t[e];if(r&&r<=i)return;QA[e]=n,zA[e]=n}}))}catch(t){fb.error(\"Error loading mutableParamsCache: \".concat(e),t.message)}}(),Array.isArray(QA.AREAS)&&QA.AREAS.length>0&&bx(QA.AREAS,!0);const iq=(e,t,i)=>{fb.debug(\"setParameter key:\".concat(e,\", value:\").concat(JSON.stringify(t))),JA(e,t,i)};SB(fY,!1),SB(IY,!1),SB(kj,!1),SB(tq,!1),SB(pY,!1);const nq=function(e){const t=new xy,i=e,n={getListeners:t.getListeners.bind(t),on:(e,i)=>(function(e,t){e===SO.SECURITY_POLICY_VIOLATION&&LG(t,!0)}(e,i),t.on.bind(t)(e,i)),addListener:t.addListener.bind(t),once:t.once.bind(t),off:t.off.bind(t),removeAllListeners:t.removeAllListeners.bind(t),emit:t.emit.bind(t),safeEmit:t.safeEmit.bind(t)};return DG(DG({},i),n)}({__TRACK_LIST__:_L,VERSION:GA,BUILD:qA,ESM_BUNDLER:!1,ESM:!0,UMD:!1,DEV:!1,setParameter:iq,getParameter:XA,getSupportedCodec:async function(){let e={audio:[],video:[]};try{let t=new RTCPeerConnection;const i=await async function(e){let t;return ZP().supportUnifiedPlan?(e.addTransceiver(\"video\",{direction:\"recvonly\"}),e.addTransceiver(\"audio\",{direction:\"recvonly\"}),t=(await e.createOffer()).sdp):t=(await e.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0})).sdp,t}(t);if(!i)return e;t.close(),t=null,e=function(e){const t={video:[],audio:[]};return e.match(/ VP8/i)&&t.video.push(\"VP8\"),e.match(/ VP9/i)&&t.video.push(\"VP9\"),e.match(/ AV1/i)&&t.video.push(\"AV1\"),e.match(/ H264/i)&&t.video.push(\"H264\"),e.match(/ H265/i)&&t.video.push(\"H265\"),e.match(/ opus/i)&&t.audio.push(\"OPUS\"),e.match(/ PCMU/i)&&t.audio.push(\"PCMU\"),e.match(/ PCMA/i)&&t.audio.push(\"PCMA\"),e.match(/ G722/i)&&t.audio.push(\"G722\"),t}(i)}catch(e){throw new yb(Ry.CREATE_OFFER_FAILED,e.toString&&e.toString()).print()}return e},checkSystemRequirements:function(){const e=vb.reportApiInvoke(null,{name:By.CHECK_SYSTEM_REQUIREMENTS,options:[],tag:jy.TRACER});let t=!1;try{const e=window.RTCPeerConnection,i=navigator.mediaDevices&&navigator.mediaDevices.getUserMedia,n=window.WebSocket;t=!!(e&&i&&n),t&&_y()&&ty(75)&&(new e).close()}catch(e){return fb.error(\"check system requirement failed: \",e),!1}let i=!1;const n=Hv();n.name===Bv.CHROME&&Number(n.version)>=58&&(\"WebKit\"!==Gv.engine.name||function(){const e=Hv();if(zv()){if(e.os===Fv.MAC_OS)return!0;if(e.os===Fv.IOS){const e=Gv.os.version&&Gv.os.version.split(\".\");if(e&&14===Number(e[0])&&e[1]&&Number(e[1])>=3)return!0;if(e&&Number(e[0])>14)return!0}}return!1}())&&(i=!0),(n.name===Bv.FIREFOX&&Number(n.version)>=56||n.name===Bv.OPERA&&Number(n.version)>=45||n.name===Bv.SAFARI&&Number(n.version)>=11||\"WebKit\"===n.name&&($v()||uy())&&n.osVersion&&Number(n.osVersion.split(\".\")[0])>=11||hy()||Hv().name===Bv.QQ)&&(i=!0),fb.debug(\"checkSystemRequirements, api:\",t,\"browser\",i);const r=t&&i;return e.onSuccess(r),r},getDevices:function(e){return uk.enumerateDevices(!0,!0,e)},getMicrophones:function(e){return uk.getRecordingDevices(e)},getCameras:function(e){return uk.getCamerasDevices(e)},getElectronScreenSources:nk,getPlaybackDevices:function(e){return uk.getSpeakers(e)},createClient:function(){var e;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{codec:\"vp8\",audioCodec:\"opus\",mode:\"rtc\"};const i=vb.reportApiInvoke(null,{name:By.CREATE_CLIENT,options:[t],tag:jy.TRACER});try{!function(e){vy(e.codec,\"config.codec\",[\"vp8\",\"vp9\",\"av1\",\"h264\",\"h265\"]),vy(e.mode,\"config.mode\",[\"rtc\",\"live\",\"p2p\"]),void 0!==e.audioCodec&&vy(e.audioCodec,\"config.audioCodec\",[\"opus\",\"pcmu\",\"pcma\",\"g722\"]),void 0!==e.proxyServer&&by(e.proxyServer,\"config.proxyServer\",1,1e4),void 0!==e.turnServer&&Yy(e.turnServer),void 0!==e.httpRetryConfig&&Gy(e.httpRetryConfig),void 0!==e.websocketRetryConfig&&Gy(e.websocketRetryConfig)}(t)}catch(e){throw i.onError(e),e}return(ry(16,0,!0)||oy(16,0,!0))&&(\"vp9\"===t.codec&&(t.codec=\"vp8\",fb.debug(\"browser not support vp9, force use vp8\")),JA(\"UNSUPPORTED_VIDEO_CODEC\",[\"vp9\"])),void 0===t.audioCodec&&(t.audioCodec=\"opus\"),i.onSuccess(),new vG(IG(IG({forceWaitGatewayResponse:!0},t),{},{role:Dn(e=[\"rtc\",\"p2p\"]).call(e,t.mode)?\"host\":t.role||\"audience\"}))},createCameraVideoTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=XA(\"CAMERA_CAPTURE_CONFIG\"),i=vb.reportApiInvoke(null,{tag:jy.TRACER,name:By.CREATE_CAM_VIDEO_TRACK,options:[GL({},e),t]});t&&(e.encoderConfig=t);const n=Ak(e),r=TA(8,\"track-cam-\");let o=null;fb.info(\"start create camera video track with config\",JSON.stringify(e),\"trackId\",r);try{o=(await ak({video:n},r)).getVideoTracks()[0]||null}catch(e){throw i.onError(e),e}if(!o){const e=new Cy(Ry.UNEXPECTED_ERROR,\"can not find track in media stream\");return i.onError(e),e.throw(fb)}e.optimizationMode&&dU(r,o,e,dL(e.encoderConfig));const s=new cU(o,e,n,e.scalabiltyMode?uL(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode,r);return i.onSuccess(s.getTrackId()),fb.info(\"create camera video success, trackId:\",r),s},createCustomVideoTrack:function(e){const t=vb.reportApiInvoke(null,{tag:jy.TRACER,name:By.CREATE_CUSTOM_VIDEO_TRACK,options:[e]}),i=new aU(e.mediaStreamTrack,{width:e.width,height:e.height,frameRate:e.frameRate,bitrateMax:e.bitrateMax,bitrateMin:e.bitrateMin},e.scalabiltyMode?uL(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode,TA(8,\"track-cus-\"),[mL.CUSTOM_TRACK]);return t.onSuccess(i.getTrackId()),fb.info(\"create custom video track success with config\",e,\"trackId\",i.getTrackId()),i},createScreenVideoTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"disable\";const i=vb.reportApiInvoke(null,{tag:jy.TRACER,name:By.CREATE_SCREEN_VIDEO_TRACK,options:[GL({},e),t]});e.encoderConfig?\"string\"==typeof e.encoderConfig||e.encoderConfig.width&&e.encoderConfig.height||(e.encoderConfig.width={max:1920},e.encoderConfig.height={max:1080}):e.encoderConfig=\"1080p_2\";const n=function(e){const t={};e.screenSourceType&&(t.mediaSource=e.screenSourceType),e.extensionId&&Jv()&&(t.extensionId=e.extensionId);const{displaySurface:i,selfBrowserSurface:n,surfaceSwitching:r,systemAudio:o}=e;(ey(107)||iy(107)||sy(93))&&(i&&(vy(i,\"displaySurface\",[\"browser\",\"window\",\"monitor\"]),t.displaySurface=i),n?(vy(n,\"selfBrowserSurface\",[\"exclude\",\"include\"]),t.selfBrowserSurface=n):t.selfBrowserSurface=\"include\",r&&(vy(r,\"surfaceSwitching\",[\"exclude\",\"include\"]),t.surfaceSwitching=r)),(ey(105)||iy(105)||sy(91))&&o&&(vy(o,\"systemAudio\",[\"exclude\",\"include\"]),t.systemAudio=o),e.electronScreenSourceId&&(t.sourceId=e.electronScreenSourceId);const s=e.encoderConfig?lL(e.encoderConfig):null;return t.mandatory={chromeMediaSource:\"desktop\",maxWidth:s?s.width:void 0,maxHeight:s?s.height:void 0},s&&(s.frameRate&&(\"number\"==typeof s.frameRate?(t.mandatory.maxFrameRate=s.frameRate,t.mandatory.minFrameRate=s.frameRate):(t.mandatory.maxFrameRate=s.frameRate.max||s.frameRate.ideal||s.frameRate.exact||void 0,t.mandatory.minFrameRate=s.frameRate.min||s.frameRate.ideal||s.frameRate.exact||void 0),t.frameRate=s.frameRate),s.width&&(t.width=s.width),s.height&&(t.height=s.height)),t}(e),r=TA(8,\"track-scr-v-\");let o=null,s=null;const a=ZP();if(!a.supportShareAudio&&\"enable\"===t){const e=new Cy(Ry.NOT_SUPPORTED,\"your browser or platform is not support share-screen with audio\");return i.onError(e),e.throw(fb)}fb.info(\"start create screen video track with config\",e,\"withAudio\",t,\"trackId\",r);try{const e=await ak({screen:n,screenAudio:\"auto\"===t?a.supportShareAudio:\"enable\"===t},r);o=e.getVideoTracks()[0]||null,s=e.getAudioTracks()[0]||null}catch(e){throw i.onError(e),e}if(!o){const e=new Cy(Ry.UNEXPECTED_ERROR,\"can not find track in media stream\");return i.onError(e),e.throw(fb)}if(!s&&\"enable\"===t){o&&o.stop();const e=new Cy(Ry.SHARE_AUDIO_NOT_ALLOWED);return i.onError(e),e.throw(fb)}e.optimizationMode||(e.optimizationMode=\"detail\"),e.optimizationMode&&(dU(r,o,e,e.encoderConfig&&lL(e.encoderConfig)||void 0),e.encoderConfig&&\"string\"!=typeof e.encoderConfig&&(e.encoderConfig.bitrateMin=e.encoderConfig.bitrateMax));const c=new aU(o,e.encoderConfig?lL(e.encoderConfig):{},e.scalabiltyMode?uL(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode,r,[mL.SCREEN_TRACK]);if(!s)return i.onSuccess(c.getTrackId()),fb.info(\"create screen video track success\",\"video:\",c.getTrackId()),c;const d=new TM(s,void 0,TA(8,\"track-scr-a-\"),!1);return i.onSuccess([c.getTrackId(),d.getTrackId()]),fb.info(\"create screen video track success\",\"video:\",c.getTrackId(),\"audio:\",d.getTrackId()),[c,d]},createMicrophoneAndCameraTracks:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=XA(\"CAMERA_CAPTURE_CONFIG\"),n=vb.reportApiInvoke(null,{tag:jy.TRACER,name:By.CREATE_MIC_AND_CAM_TRACKS,options:[e,t,i]});i&&(t.encoderConfig=i);const r=Ak(t),o=bk(e),s=TA(8,\"track-mic-\"),a=TA(8,\"track-cam-\");let c=null,d=null;fb.info(\"start create camera video track(\".concat(a,\") and microphone audio track(\").concat(s,\") with config, audio: \").concat(JSON.stringify(e),\", video: \").concat(JSON.stringify(t)));try{const e=await ak({audio:o,video:r},\"\".concat(s,\"-\").concat(a));c=e.getAudioTracks()[0],d=e.getVideoTracks()[0]}catch(e){throw n.onError(e),e}if(!c||!d){const e=new Cy(Ry.UNEXPECTED_ERROR,\"can not find tracks in media stream\");return n.onError(e),e.throw(fb)}t.optimizationMode&&dU(a,d,t,dL(t.encoderConfig));const l=new SM(c,e,o,s),u=new cU(d,t,r,t.scalabiltyMode?uL(t.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},t.optimizationMode,a);return n.onSuccess([l.getTrackId(),u.getTrackId()]),fb.info(\"create camera video track(\".concat(a,\") and microphone audio track(\").concat(s,\") success\")),[l,u]},createMicrophoneAudioTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=vb.reportApiInvoke(null,{tag:jy.TRACER,name:By.CREATE_MIC_AUDIO_TRACK,options:[e]}),i=bk(e),n=TA(8,\"track-mic-\");let r=null;fb.info(\"start create microphone audio track with config\",JSON.stringify(e),\"trackId\",n);try{r=(await ak({audio:i},n)).getAudioTracks()[0]||null}catch(e){throw t.onError(e),e}if(!r){const e=new Cy(Ry.UNEXPECTED_ERROR,\"can not find track in media stream\");return t.onError(e),e.throw(fb)}const o=new SM(r,e,i,n);return t.onSuccess(o.getTrackId()),fb.info(\"create microphone audio track success, trackId:\",n),o},createCustomAudioTrack:function(e){const t=vb.reportApiInvoke(null,{tag:jy.TRACER,name:By.CREATE_CUSTOM_AUDIO_TRACK,options:[e]}),i=new TM(e.mediaStreamTrack,e.encoderConfig?pL(e.encoderConfig):{},TA(8,\"track-cus-\"),!1);return fb.info(\"create custom audio track success with config\",e,\"trackId\",i.getTrackId()),t.onSuccess(i.getTrackId()),i},createBufferSourceAudioTrack:async function(e){var t;const{cacheOnlineFile:i,encoderConfig:n}=e;let{source:r}=e;const o={source:r instanceof AudioBuffer?\"AudioBuffer\":r instanceof File?null!==(t=File.name)&&void 0!==t?t:\"File\":r,cacheOnlineFile:i,encoderConfig:n},s=vb.reportApiInvoke(null,{tag:jy.TRACER,name:By.CREATE_BUFFER_AUDIO_TRACK,options:[o]});if(XA(\"DISABLE_WEBAUDIO\"))throw new Cy(Ry.NOT_SUPPORTED,\"can not create BufferSourceAudioTrack when WebAudio disabled\");const a=TA(8,\"track-buf-\");fb.info(\"start create buffer source audio track with config\",JSON.stringify(o),\"trackId\",a);const c=r;if(!(r instanceof AudioBuffer))try{r=await async function(e,t){let i=null;if(\"string\"==typeof e){const t=IM.get(e);if(t)return fb.debug(\"use cached audio resource: \",e),t;try{i=(await kA((()=>Lv.get(e,{responseType:\"arraybuffer\"})),void 0,void 0,{maxRetryCount:3})).data}catch(e){throw new Cy(Ry.FETCH_AUDIO_FILE_FAILED,e.toString())}}else{const t=new Gh(((t,i)=>{const n=new FileReader;n.onload=e=>{e.target?t(e.target.result):i(new Cy(Ry.READ_LOCAL_AUDIO_FILE_ERROR))},n.onerror=()=>{i(new Cy(Ry.READ_LOCAL_AUDIO_FILE_ERROR))},n.readAsArrayBuffer(e)}));i=await t}const n=await function(e){const t=zL();return new Gh(((i,n)=>{t.decodeAudioData(e,(e=>{i(e)}),(e=>{n(new Cy(Ry.DECODE_AUDIO_FILE_FAILED,e.toString()))}))}))}(i);return\"string\"==typeof e&&t&&IM.set(e,n),n}(r,i)}catch(e){return s.onError(e),e.throw(fb)}const d=new CM(r),l=new gM(c,d,n?pL(n):{},a);return fb.info(\"create buffer source audio track success, trackId:\",a),s.onSuccess(l.getTrackId()),l},setAppType:function(e){if(fb.debug(\"setAppType: \".concat(e)),!(Number.isInteger(e)&&e>=0))throw fb.debug(\"Invalid appType\"),new yb(Ry.INVALID_PARAMS,\"invalid app type\",e);JA(\"APP_TYPE\",Math.floor(e))},setLogLevel:function(e){fb.setLogLevel(e)},enableLogUpload:function(){XA(\"USE_NEW_LOG\")?JA(\"UPLOAD_LOG\",!0):fb.enableLogUpload()},disableLogUpload:function(){XA(\"USE_NEW_LOG\")?JA(\"UPLOAD_LOG\",!1):fb.disableLogUpload()},createChannelMediaRelayConfiguration:function(){return new PF},checkAudioTrackIsActive:async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;const i=vb.reportApiInvoke(null,{tag:jy.TRACER,name:By.CHECK_AUDIO_TRACK_IS_ACTIVE,options:[t]});if(!(e instanceof TM||e instanceof vU)){const e=new yb(Ry.INVALID_TRACK,\"the parameter is not a audio track\");return i.onError(e),e.throw()}t&&t<1e3&&(t=1e3);const n=e instanceof TM?e.getTrackLabel():\"remote_track\",r=e.getVolumeLevel();let o=r,s=r;const a=Date.now();return new Gh((r=>{const c=setInterval((()=>{const d=e.getVolumeLevel();o=d>o?d:o,s=d<s?d:s;const l=o-s>1e-4,u=Date.now()-a;if(l||u>t){clearInterval(c);const t=l,s={duration:u,deviceLabel:n,maxVolumeLevel:o,result:t};fb.info(\"[track-\".concat(e.getTrackId(),\"] check audio track active completed. \").concat(JSON.stringify(s))),i.onSuccess(s),r(t)}}),200)}))},checkVideoTrackIsActive:async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;const i=vb.reportApiInvoke(null,{tag:jy.TRACER,name:By.CHECK_VIDEO_TRACK_IS_ACTIVE,options:[t]});if(!(e instanceof aU||e instanceof IU)){const e=new yb(Ry.INVALID_TRACK,\"the parameter is not a video track\");return i.onError(e),e.throw()}t&&t<1e3&&(t=1e3);const n=e instanceof aU?e.getTrackLabel():\"remote_track\",r=e.getMediaStreamTrack(!0),o=document.createElement(\"video\");o.style.width=\"1px\",o.style.height=\"1px\",o.setAttribute(\"muted\",\"\"),o.muted=!0,o.setAttribute(\"playsinline\",\"\"),o.controls=!1,(Xv()||zv())&&(o.style.opacity=\"0.01\",o.style.position=\"fixed\",o.style.left=\"0\",o.style.top=\"0\",document.body.appendChild(o)),o.srcObject=new MediaStream([r]),o.play();const s=document.createElement(\"canvas\");s.width=160,s.height=120;let a=0,c=0;try{const e=Date.now();a=await function(e,t,i,n){let r,o=0,s=null;return new Gh(((a,c)=>{function d(){o>n&&r&&(r(),a(o));const t=i.getContext(\"2d\");if(!t){const e=new yb(Ry.UNEXPECTED_ERROR,\"can not get canvas 2d context.\");return fb.error(e.toString()),void c(e)}t.drawImage(e,0,0,160,120);const d=t.getImageData(0,0,i.width,i.height),l=Math.floor(d.data.length/3);if(s){for(let e=0;e<l;e+=3)if(d.data[e]!==s[e])return o+=1,void(s=d.data);s=d.data}else s=d.data}setTimeout((()=>{r&&(r(),a(o))}),t),r=QL((()=>{d()}),30)}))}(o,t,s,4),c=Date.now()-e}catch(e){throw i.onError(e),e}DB===Bv.SAFARI&&(o.pause(),o.remove()),o.srcObject=null;const d=a>4,l={duration:c,changedPicNum:a,deviceLabel:n,result:d};return fb.info(\"[track-\".concat(e.getTrackId(),\"] check video track active completed. \").concat(JSON.stringify(l))),i.onSuccess(l),d},setArea:bx,audioElementPlayCenter:mk,resumeAudioContext:function(){mk.autoResumeAfterInterruption(!0)},processExternalMediaAEC:function(e){OG.processExternalMediaAEC(e)},registerExtensions:function(e){const t=XA(\"PLUGIN_INFO\")||[];e.forEach((e=>{\"name\"in e&&!Dn(t).call(t,e.name)&&t.push(e.name);const i=e;i.__registered__=!0,i.logger.hookLog=fb.extLog,i.reporter.hookApiInvoke=vb.extApiInvoke,i.parameters&&Object.keys(i.parameters).forEach((e=>{i.parameters[e]=XA(e)}))})),iq(\"PLUGIN_INFO\",t)},ChannelMediaRelayError:Qw,ChannelMediaRelayEvent:Jw,ChannelMediaRelayState:Xw,RemoteStreamFallbackType:gL,RemoteStreamType:SL,ConnectionDisconnectedReason:Hy,AudienceLatencyLevelType:Wy,AREAS:iO,preload:async function(e,t,i,n){return KB(e,t,i,n)}});Object.defineProperties(nq,{onAudioAutoplayFailed:{get:()=>pk.onAudioAutoplayFailed,set:e=>{pk.onAudioAutoplayFailed=e}},onAutoplayFailed:{get:()=>pk.onAutoplayFailed,set:e=>{pk.onAutoplayFailed=e}},_onSecurityPolicyViolation:{value:void 0,writable:!0},_cspEventHandlerPointer:{value:void 0,writable:!0},onSecurityPolicyViolation:{get:()=>nq._onSecurityPolicyViolation,set(e){nq._onSecurityPolicyViolation=e,LG(e)}},__CLIENT_LIST__:{get:()=>XA(\"SHOW_GLOBAL_CLIENT_LIST\")?wb:[]}}),uk.on(kL.CAMERA_DEVICE_CHANGED,(e=>{fb.info(\"camera device changed\",JSON.stringify(e)),nq.onCameraChanged&&nq.onCameraChanged(e),nq.safeEmit(SO.CAMERA_CHANGED,e)})),uk.on(kL.RECORDING_DEVICE_CHANGED,(e=>{fb.info(\"microphone device changed\",JSON.stringify(e)),nq.onMicrophoneChanged&&nq.onMicrophoneChanged(e),nq.safeEmit(SO.MICROPHONE_CHANGED,e)})),uk.on(kL.PLAYOUT_DEVICE_CHANGED,(e=>{fb.debug(\"playout device changed\",JSON.stringify(e)),nq.onPlaybackDeviceChanged&&nq.onPlaybackDeviceChanged(e),nq.safeEmit(SO.PLAYBACK_DEVICE_CHANGED,e)})),mk.onAutoplayFailed=()=>{fb.info(\"detect audio element autoplay failed\"),pk.onAudioAutoplayFailed&&pk.onAudioAutoplayFailed()},qL.on(\"autoplay-failed\",(()=>{fb.info(\"detect webaudio autoplay failed\"),pk.onAudioAutoplayFailed&&pk.onAudioAutoplayFailed(),nq.safeEmit(SO.AUTOPLAY_FAILED)})),qL.on(tL.STATE_CHANGE,((e,t)=>{fb.info(\"audio context state changed: \".concat(t,\" => \").concat(e)),nq.onAudioContextStateChanged&&nq.onAudioContextStateChanged(e,t),nq.safeEmit(SO.AUDIO_CONTEXT_STATE_CHANGED,e,t)})),iA.on(Qy.NETWORK_STATE_CHANGE,((e,t)=>{fb.info(\"[network-indicator] network state changed, \".concat(t,\" => \").concat(e))})),window&&(window.__ARTC__=nq);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWdvcmEtcnRjLXNkay1uZy9BZ29yYVJUQ19OLXByb2R1Y3Rpb24uZXNtLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBOztBQUVBLGdCQUFnQiw4QkFBOEIsOEVBQThFLDZCQUE2QiwyQ0FBMkMsbUNBQW1DLDZCQUE2QixhQUFhLEdBQUcsR0FBRyxvQkFBb0IscUpBQXFKLGNBQWMsc0ZBQXNGLGtCQUFrQixJQUFJLFlBQVksU0FBUyxVQUFVLGtCQUFrQixrQkFBa0IsUUFBUSwwREFBMEQsNkVBQTZFLGtCQUFrQiw2QkFBNkIsT0FBTyw4QkFBOEIsMEJBQTBCLHdKQUF3SixZQUFZLGdKQUFnSiw0QkFBNEIsWUFBWSx1Q0FBdUMsb0JBQW9CLHVCQUF1QixpQ0FBaUMsOENBQThDLHdDQUF3QyxvQ0FBb0Msa0NBQWtDLGFBQWEsMkJBQTJCLEtBQUssa0JBQWtCLGtDQUFrQyxJQUFJLGVBQWUsVUFBVSxLQUFLLDBEQUEwRCw0QkFBNEIsS0FBSyxLQUFLLHNFQUFzRSxJQUFJLElBQUksa0JBQWtCLGdCQUFnQix3QkFBd0IsR0FBRyx3QkFBd0IsT0FBTywrREFBK0QsZ0RBQWdELHNDQUFzQyxlQUFlLGtDQUFrQyxpQkFBaUIsZUFBZSwrQkFBK0IsMkNBQTJDLFNBQVMsdUJBQXVCLGVBQWUsMENBQTBDLCtDQUErQyxhQUFhLHVDQUF1QyxNQUFNLGdDQUFnQyxzQkFBc0Isa0JBQWtCLGdGQUFnRix1SkFBdUosaUpBQWlKLG1GQUFtRixlQUFlLHFFQUFxRSxxR0FBcUcseUJBQXlCLGFBQWEsbUJBQW1CLG9DQUFvQywwQkFBMEIsSUFBSSxhQUFhLFNBQVMsZ0JBQWdCLHdDQUF3QyxrQkFBa0IscUNBQXFDLDZCQUE2QixXQUFXLDBCQUEwQixrQ0FBa0MsV0FBVyxnREFBZ0QsSUFBSSxTQUFTLG9DQUFvQyxFQUFFLFNBQVMsUUFBUSxTQUFTLDJDQUEyQyxRQUFRLDBCQUEwQixvQ0FBb0MsRUFBRSx1QkFBdUIsbU1BQW1NLEVB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QWlCLGFBQWEsb0RBQW9ELGtJQUFrSSxPQUFPLEdBQUcsMkNBQTJDLGlFQUFpRSxpQ0FBaUMsOERBQThELEVBQUUsd0NBQXdDLHNFQUFzRSw4QkFBOEIsa0JBQWtCLHVIQUF1SCxzU0FBc1MseUNBQXlDLHlCQUF5QixZQUFZLElBQUksbUJBQW1CLDBCQUEwQixpQkFBaUIsdUJBQXVCLGFBQWEsbUJBQW1CLDJCQUEyQixPQUFPLHFFQUFxRSx3Q0FBd0MsMkJBQTJCLDJFQUEyRSxNQUFNLFlBQVksSUFBSSxvREFBb0QsU0FBUyxjQUFjLGlCQUFpQixjQUFjLGdCQUFnQixJQUFJLE1BQU0sR0FBRyx5QkFBeUIsU0FBUyxxQkFBcUIsd0RBQXdELGVBQWUsbURBQW1ELHFJQUFxSSxvRUFBb0UsbUNBQW1DLHFDQUFxQyw4QkFBOEIsZ0NBQWdDLDhCQUE4QixlQUFlLGtEQUFrRCxVQUFVLDZJQUE2SSxzQkFBc0IsR0FBRyx1QkFBdUIsb09BQW9PLG9CQUFvQixFQUFFLDRCQUE0Qix1QkFBdUIseUNBQXlDLDRCQUE0QixtQkFBbUIsb0NBQW9DLHVCQUF1Qiw2QkFBNkIseUJBQXlCLDBCQUEwQix5QkFBeUIsNEJBQTRCLDZDQUE2Qyx1Q0FBdUMsa0JBQWtCLDZDQUE2QyxzQ0FBc0MsOEhBQThILDBDQUEwQyw4SUFBOEksd0NBQXdDLHlKQUF5Siw0QkFBNEIscUdBQXFHLCtCQUErQixnSUFBZ0ksa0NBQWtDLHNMQUFzTCwwQ0FBMEMsa0ZBQWtGLGdDQUFzRCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hZ29yYS1ydGMtc2RrLW5nL0Fnb3JhUlRDX04tcHJvZHVjdGlvbi5lc20ubWpzP2YxZDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBZ29yYVdlYlNES19OLXY0LjIyLjEtMC1nMWM4ZTI3ZTkgQ29weXJpZ2h0IEFnb3JhSW5jLlxuICovXG5cbmZ1bmN0aW9uIGUoZSx0KXtyZXR1cm4gdC5mb3JFYWNoKChmdW5jdGlvbih0KXt0JiZcInN0cmluZ1wiIT10eXBlb2YgdCYmIUFycmF5LmlzQXJyYXkodCkmJk9iamVjdC5rZXlzKHQpLmZvckVhY2goKGZ1bmN0aW9uKGkpe2lmKFwiZGVmYXVsdFwiIT09aSYmIShpIGluIGUpKXt2YXIgbj1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsaSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsaSxuLmdldD9uOntlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0W2ldfX0pfX0pKX0pKSxPYmplY3QuZnJlZXplKGUpfXZhciB0PVwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWxUaGlzP2dsb2JhbFRoaXM6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbD9nbG9iYWw6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjp7fTtmdW5jdGlvbiBpKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGUmJk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLFwiZGVmYXVsdFwiKT9lLmRlZmF1bHQ6ZX12YXIgbj1mdW5jdGlvbihlKXt0cnl7cmV0dXJuISFlKCl9Y2F0Y2goZSl7cmV0dXJuITB9fSxyPSFuKChmdW5jdGlvbigpe3ZhciBlPWZ1bmN0aW9uKCl7fS5iaW5kKCk7cmV0dXJuXCJmdW5jdGlvblwiIT10eXBlb2YgZXx8ZS5oYXNPd25Qcm9wZXJ0eShcInByb3RvdHlwZVwiKX0pKSxvPXIscz1GdW5jdGlvbi5wcm90b3R5cGUsYT1zLmNhbGwsYz1vJiZzLmJpbmQuYmluZChhLGEpLGQ9bz9jOmZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBhLmFwcGx5KGUsYXJndW1lbnRzKX19LGw9ZCh7fS5pc1Byb3RvdHlwZU9mKSx1PWZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLk1hdGg9PU1hdGgmJmV9LGg9dShcIm9iamVjdFwiPT10eXBlb2YgZ2xvYmFsVGhpcyYmZ2xvYmFsVGhpcyl8fHUoXCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyYmd2luZG93KXx8dShcIm9iamVjdFwiPT10eXBlb2Ygc2VsZiYmc2VsZil8fHUoXCJvYmplY3RcIj09dHlwZW9mIHQmJnQpfHxmdW5jdGlvbigpe3JldHVybiB0aGlzfSgpfHx0fHxGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCkscD1yLF89RnVuY3Rpb24ucHJvdG90eXBlLEU9Xy5hcHBseSxmPV8uY2FsbCxtPVwib2JqZWN0XCI9PXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmFwcGx5fHwocD9mLmJpbmQoRSk6ZnVuY3Rpb24oKXtyZXR1cm4gZi5hcHBseShFLGFyZ3VtZW50cyl9KSxUPWQsUz1UKHt9LnRvU3RyaW5nKSxnPVQoXCJcIi5zbGljZSksUj1mdW5jdGlvbihlKXtyZXR1cm4gZyhTKGUpLDgsLTEpfSxDPVIsST1kLHY9ZnVuY3Rpb24oZSl7aWYoXCJGdW5jdGlvblwiPT09QyhlKSlyZXR1cm4gSShlKX0seT1cIm9iamVjdFwiPT10eXBlb2YgZG9jdW1lbnQmJmRvY3VtZW50LmFsbCxBPXthbGw6eSxJU19IVE1MRERBOnZvaWQgMD09PXkmJnZvaWQgMCE9PXl9LGI9QS5hbGwsdz1BLklTX0hUTUxEREE/ZnVuY3Rpb24oZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZXx8ZT09PWJ9OmZ1bmN0aW9uKGUpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGV9LE89e30sTj0hbigoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LDEse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pWzFdfSkpLEQ9cixQPUZ1bmN0aW9uLnByb3RvdHlwZS5jYWxsLEw9RD9QLmJpbmQoUCk6ZnVuY3Rpb24oKXtyZXR1cm4gUC5hcHBseShQLGFyZ3VtZW50cyl9LGs9e30sTT17fS5wcm9wZXJ0eUlzRW51bWVyYWJsZSxVPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IseD1VJiYhTS5jYWxsKHsxOjJ9LDEpO2suZj14P2Z1bmN0aW9uKGUpe3ZhciB0PVUodGhpcyxlKTtyZXR1cm4hIXQmJnQuZW51bWVyYWJsZX06TTt2YXIgVixGLEI9ZnVuY3Rpb24oZSx0KXtyZXR1cm57ZW51bWVyYWJsZTohKDEmZSksY29uZmlndXJhYmxlOiEoMiZlKSx3cml0YWJsZTohKDQmZSksdmFsdWU6dH19LGo9bixHPVIsVz1PYmplY3QsSD1kKFwiXCIuc3BsaXQpLEs9aigoZnVuY3Rpb24oKXtyZXR1cm4hVyhcInpcIikucHJvcGVydHlJc0VudW1lcmFibGUoMCl9KSk/ZnVuY3Rpb24oZSl7cmV0dXJuXCJTdHJpbmdcIj09RyhlKT9IKGUsXCJcIik6VyhlKX06VyxZPWZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lfSxxPVksej1UeXBlRXJyb3IsSj1mdW5jdGlvbihlKXtpZihxKGUpKXRocm93IHooXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiBcIitlKTtyZXR1cm4gZX0sWD1LLFE9SixaPWZ1bmN0aW9uKGUpe3JldHVybiBYKFEoZSkpfSwkPXcsZWU9QS5hbGwsdGU9QS5JU19IVE1MRERBP2Z1bmN0aW9uKGUpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBlP251bGwhPT1lOiQoZSl8fGU9PT1lZX06ZnVuY3Rpb24oZSl7cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIGU/bnVsbCE9PWU6JChlKX0saWU9e30sbmU9aWUscmU9aCxvZT13LHNlPWZ1bmN0aW9uKGUpe3JldHVybiBvZShlKT9lOnZvaWQgMH0sYWU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aDwyP3NlKG5lW2VdKXx8c2UocmVbZV0pOm5lW2VdJiZuZVtlXVt0XXx8cmVbZV0mJnJlW2VdW3RdfSxjZT1cInVuZGVmaW5lZFwiIT10eXBlb2YgbmF2aWdhdG9yJiZTdHJpbmcobmF2aWdhdG9yLnVzZXJBZ2VudCl8fFwiXCIsZGU9aCxsZT1jZSx1ZT1kZS5wcm9jZXNzLGhlPWRlLkRlbm8scGU9dWUmJnVlLnZlcnNpb25zfHxoZSYmaGUudmVyc2lvbixfZT1wZSYmcGUudjg7X2UmJihGPShWPV9lLnNwbGl0KFwiLlwiKSlbMF0+MCYmVlswXTw0PzE6KyhWWzBdK1ZbMV0pKSwhRiYmbGUmJighKFY9bGUubWF0Y2goL0VkZ2VcXC8oXFxkKykvKSl8fFZbMV0+PTc0KSYmKFY9bGUubWF0Y2goL0Nocm9tZVxcLyhcXGQrKS8pKSYmKEY9K1ZbMV0pO3ZhciBFZT1GLGZlPUVlLG1lPW4sVGU9aC5TdHJpbmcsU2U9ISFPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzJiYhbWUoKGZ1bmN0aW9uKCl7dmFyIGU9U3ltYm9sKCk7cmV0dXJuIVRlKGUpfHwhKE9iamVjdChlKWluc3RhbmNlb2YgU3ltYm9sKXx8IVN5bWJvbC5zaGFtJiZmZSYmZmU8NDF9KSksZ2U9U2UmJiFTeW1ib2wuc2hhbSYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcixSZT1hZSxDZT13LEllPWwsdmU9T2JqZWN0LHllPWdlP2Z1bmN0aW9uKGUpe3JldHVyblwic3ltYm9sXCI9PXR5cGVvZiBlfTpmdW5jdGlvbihlKXt2YXIgdD1SZShcIlN5bWJvbFwiKTtyZXR1cm4gQ2UodCkmJkllKHQucHJvdG90eXBlLHZlKGUpKX0sQWU9U3RyaW5nLGJlPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4gQWUoZSl9Y2F0Y2goZSl7cmV0dXJuXCJPYmplY3RcIn19LHdlPXcsT2U9YmUsTmU9VHlwZUVycm9yLERlPWZ1bmN0aW9uKGUpe2lmKHdlKGUpKXJldHVybiBlO3Rocm93IE5lKE9lKGUpK1wiIGlzIG5vdCBhIGZ1bmN0aW9uXCIpfSxQZT1EZSxMZT1ZLGtlPWZ1bmN0aW9uKGUsdCl7dmFyIGk9ZVt0XTtyZXR1cm4gTGUoaSk/dm9pZCAwOlBlKGkpfSxNZT1MLFVlPXcseGU9dGUsVmU9VHlwZUVycm9yLEZlPXtleHBvcnRzOnt9fSxCZT1oLGplPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxHZT1mdW5jdGlvbihlLHQpe3RyeXtqZShCZSxlLHt2YWx1ZTp0LGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pfWNhdGNoKGkpe0JlW2VdPXR9cmV0dXJuIHR9LFdlPVwiX19jb3JlLWpzX3NoYXJlZF9fXCIsSGU9aFtXZV18fEdlKFdlLHt9KSxLZT1IZTsoRmUuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBLZVtlXXx8KEtlW2VdPXZvaWQgMCE9PXQ/dDp7fSl9KShcInZlcnNpb25zXCIsW10pLnB1c2goe3ZlcnNpb246XCIzLjMxLjFcIixtb2RlOlwicHVyZVwiLGNvcHlyaWdodDpcIsKpIDIwMTQtMjAyMyBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KVwiLGxpY2Vuc2U6XCJodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9ibG9iL3YzLjMxLjEvTElDRU5TRVwiLHNvdXJjZTpcImh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzXCJ9KTt2YXIgWWU9RmUuZXhwb3J0cyxxZT1KLHplPU9iamVjdCxKZT1mdW5jdGlvbihlKXtyZXR1cm4gemUocWUoZSkpfSxYZT1KZSxRZT1kKHt9Lmhhc093blByb3BlcnR5KSxaZT1PYmplY3QuaGFzT3dufHxmdW5jdGlvbihlLHQpe3JldHVybiBRZShYZShlKSx0KX0sJGU9ZCxldD0wLHR0PU1hdGgucmFuZG9tKCksaXQ9JGUoMS4udG9TdHJpbmcpLG50PWZ1bmN0aW9uKGUpe3JldHVyblwiU3ltYm9sKFwiKyh2b2lkIDA9PT1lP1wiXCI6ZSkrXCIpX1wiK2l0KCsrZXQrdHQsMzYpfSxydD1ZZSxvdD1aZSxzdD1udCxhdD1TZSxjdD1nZSxkdD1oLlN5bWJvbCxsdD1ydChcIndrc1wiKSx1dD1jdD9kdC5mb3J8fGR0OmR0JiZkdC53aXRob3V0U2V0dGVyfHxzdCxodD1mdW5jdGlvbihlKXtyZXR1cm4gb3QobHQsZSl8fChsdFtlXT1hdCYmb3QoZHQsZSk/ZHRbZV06dXQoXCJTeW1ib2wuXCIrZSkpLGx0W2VdfSxwdD1MLF90PXRlLEV0PXllLGZ0PWtlLG10PWZ1bmN0aW9uKGUsdCl7dmFyIGksbjtpZihcInN0cmluZ1wiPT09dCYmVWUoaT1lLnRvU3RyaW5nKSYmIXhlKG49TWUoaSxlKSkpcmV0dXJuIG47aWYoVWUoaT1lLnZhbHVlT2YpJiYheGUobj1NZShpLGUpKSlyZXR1cm4gbjtpZihcInN0cmluZ1wiIT09dCYmVWUoaT1lLnRvU3RyaW5nKSYmIXhlKG49TWUoaSxlKSkpcmV0dXJuIG47dGhyb3cgVmUoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIil9LFR0PVR5cGVFcnJvcixTdD1odChcInRvUHJpbWl0aXZlXCIpLGd0PWZ1bmN0aW9uKGUsdCl7aWYoIV90KGUpfHxFdChlKSlyZXR1cm4gZTt2YXIgaSxuPWZ0KGUsU3QpO2lmKG4pe2lmKHZvaWQgMD09PXQmJih0PVwiZGVmYXVsdFwiKSxpPXB0KG4sZSx0KSwhX3QoaSl8fEV0KGkpKXJldHVybiBpO3Rocm93IFR0KFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpfXJldHVybiB2b2lkIDA9PT10JiYodD1cIm51bWJlclwiKSxtdChlLHQpfSxSdD15ZSxDdD1mdW5jdGlvbihlKXt2YXIgdD1ndChlLFwic3RyaW5nXCIpO3JldHVybiBSdCh0KT90OnQrXCJcIn0sSXQ9dGUsdnQ9aC5kb2N1bWVudCx5dD1JdCh2dCkmJkl0KHZ0LmNyZWF0ZUVsZW1lbnQpLEF0PWZ1bmN0aW9uKGUpe3JldHVybiB5dD92dC5jcmVhdGVFbGVtZW50KGUpOnt9fSxidD1BdCx3dD0hTiYmIW4oKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShidChcImRpdlwiKSxcImFcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pKSxPdD1OLE50PUwsRHQ9ayxQdD1CLEx0PVosa3Q9Q3QsTXQ9WmUsVXQ9d3QseHQ9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtPLmY9T3Q/eHQ6ZnVuY3Rpb24oZSx0KXtpZihlPUx0KGUpLHQ9a3QodCksVXQpdHJ5e3JldHVybiB4dChlLHQpfWNhdGNoKGUpe31pZihNdChlLHQpKXJldHVybiBQdCghTnQoRHQuZixlLHQpLGVbdF0pfTt2YXIgVnQ9bixGdD13LEJ0PS8jfFxcLnByb3RvdHlwZVxcLi8sanQ9ZnVuY3Rpb24oZSx0KXt2YXIgaT1XdFtHdChlKV07cmV0dXJuIGk9PUt0fHxpIT1IdCYmKEZ0KHQpP1Z0KHQpOiEhdCl9LEd0PWp0Lm5vcm1hbGl6ZT1mdW5jdGlvbihlKXtyZXR1cm4gU3RyaW5nKGUpLnJlcGxhY2UoQnQsXCIuXCIpLnRvTG93ZXJDYXNlKCl9LFd0PWp0LmRhdGE9e30sSHQ9anQuTkFUSVZFPVwiTlwiLEt0PWp0LlBPTFlGSUxMPVwiUFwiLFl0PWp0LHF0PURlLHp0PXIsSnQ9dih2LmJpbmQpLFh0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHF0KGUpLHZvaWQgMD09PXQ/ZTp6dD9KdChlLHQpOmZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodCxhcmd1bWVudHMpfX0sUXQ9e30sWnQ9TiYmbigoZnVuY3Rpb24oKXtyZXR1cm4gNDIhPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSgoZnVuY3Rpb24oKXt9KSxcInByb3RvdHlwZVwiLHt2YWx1ZTo0Mix3cml0YWJsZTohMX0pLnByb3RvdHlwZX0pKSwkdD10ZSxlaT1TdHJpbmcsdGk9VHlwZUVycm9yLGlpPWZ1bmN0aW9uKGUpe2lmKCR0KGUpKXJldHVybiBlO3Rocm93IHRpKGVpKGUpK1wiIGlzIG5vdCBhbiBvYmplY3RcIil9LG5pPU4scmk9d3Qsb2k9WnQsc2k9aWksYWk9Q3QsY2k9VHlwZUVycm9yLGRpPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxsaT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLHVpPVwiZW51bWVyYWJsZVwiLGhpPVwiY29uZmlndXJhYmxlXCIscGk9XCJ3cml0YWJsZVwiO1F0LmY9bmk/b2k/ZnVuY3Rpb24oZSx0LGkpe2lmKHNpKGUpLHQ9YWkodCksc2koaSksXCJmdW5jdGlvblwiPT10eXBlb2YgZSYmXCJwcm90b3R5cGVcIj09PXQmJlwidmFsdWVcImluIGkmJnBpIGluIGkmJiFpW3BpXSl7dmFyIG49bGkoZSx0KTtuJiZuW3BpXSYmKGVbdF09aS52YWx1ZSxpPXtjb25maWd1cmFibGU6aGkgaW4gaT9pW2hpXTpuW2hpXSxlbnVtZXJhYmxlOnVpIGluIGk/aVt1aV06blt1aV0sd3JpdGFibGU6ITF9KX1yZXR1cm4gZGkoZSx0LGkpfTpkaTpmdW5jdGlvbihlLHQsaSl7aWYoc2koZSksdD1haSh0KSxzaShpKSxyaSl0cnl7cmV0dXJuIGRpKGUsdCxpKX1jYXRjaChlKXt9aWYoXCJnZXRcImluIGl8fFwic2V0XCJpbiBpKXRocm93IGNpKFwiQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWRcIik7cmV0dXJuXCJ2YWx1ZVwiaW4gaSYmKGVbdF09aS52YWx1ZSksZX07dmFyIF9pPVF0LEVpPUIsZmk9Tj9mdW5jdGlvbihlLHQsaSl7cmV0dXJuIF9pLmYoZSx0LEVpKDEsaSkpfTpmdW5jdGlvbihlLHQsaSl7cmV0dXJuIGVbdF09aSxlfSxtaT1oLFRpPW0sU2k9dixnaT13LFJpPU8uZixDaT1ZdCxJaT1pZSx2aT1YdCx5aT1maSxBaT1aZSxiaT1mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbihpLG4scil7aWYodGhpcyBpbnN0YW5jZW9mIHQpe3N3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG5ldyBlO2Nhc2UgMTpyZXR1cm4gbmV3IGUoaSk7Y2FzZSAyOnJldHVybiBuZXcgZShpLG4pfXJldHVybiBuZXcgZShpLG4scil9cmV0dXJuIFRpKGUsdGhpcyxhcmd1bWVudHMpfTtyZXR1cm4gdC5wcm90b3R5cGU9ZS5wcm90b3R5cGUsdH0sd2k9ZnVuY3Rpb24oZSx0KXt2YXIgaSxuLHIsbyxzLGEsYyxkLGwsdT1lLnRhcmdldCxoPWUuZ2xvYmFsLHA9ZS5zdGF0LF89ZS5wcm90byxFPWg/bWk6cD9taVt1XToobWlbdV18fHt9KS5wcm90b3R5cGUsZj1oP0lpOklpW3VdfHx5aShJaSx1LHt9KVt1XSxtPWYucHJvdG90eXBlO2ZvcihvIGluIHQpbj0hKGk9Q2koaD9vOnUrKHA/XCIuXCI6XCIjXCIpK28sZS5mb3JjZWQpKSYmRSYmQWkoRSxvKSxhPWZbb10sbiYmKGM9ZS5kb250Q2FsbEdldFNldD8obD1SaShFLG8pKSYmbC52YWx1ZTpFW29dKSxzPW4mJmM/Yzp0W29dLG4mJnR5cGVvZiBhPT10eXBlb2Ygc3x8KGQ9ZS5iaW5kJiZuP3ZpKHMsbWkpOmUud3JhcCYmbj9iaShzKTpfJiZnaShzKT9TaShzKTpzLChlLnNoYW18fHMmJnMuc2hhbXx8YSYmYS5zaGFtKSYmeWkoZCxcInNoYW1cIiwhMCkseWkoZixvLGQpLF8mJihBaShJaSxyPXUrXCJQcm90b3R5cGVcIil8fHlpKElpLHIse30pLHlpKElpW3JdLG8scyksZS5yZWFsJiZtJiYoaXx8IW1bb10pJiZ5aShtLG8scykpKX0sT2k9TWF0aC5jZWlsLE5pPU1hdGguZmxvb3IsRGk9TWF0aC50cnVuY3x8ZnVuY3Rpb24oZSl7dmFyIHQ9K2U7cmV0dXJuKHQ+MD9OaTpPaSkodCl9LFBpPURpLExpPWZ1bmN0aW9uKGUpe3ZhciB0PStlO3JldHVybiB0IT10fHwwPT09dD8wOlBpKHQpfSxraT1MaSxNaT1NYXRoLm1heCxVaT1NYXRoLm1pbix4aT1mdW5jdGlvbihlLHQpe3ZhciBpPWtpKGUpO3JldHVybiBpPDA/TWkoaSt0LDApOlVpKGksdCl9LFZpPUxpLEZpPU1hdGgubWluLEJpPWZ1bmN0aW9uKGUpe3JldHVybiBlPjA/RmkoVmkoZSksOTAwNzE5OTI1NDc0MDk5MSk6MH0samk9QmksR2k9ZnVuY3Rpb24oZSl7cmV0dXJuIGppKGUubGVuZ3RoKX0sV2k9WixIaT14aSxLaT1HaSxZaT1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCxpLG4pe3ZhciByLG89V2kodCkscz1LaShvKSxhPUhpKG4scyk7aWYoZSYmaSE9aSl7Zm9yKDtzPmE7KWlmKChyPW9bYSsrXSkhPXIpcmV0dXJuITB9ZWxzZSBmb3IoO3M+YTthKyspaWYoKGV8fGEgaW4gbykmJm9bYV09PT1pKXJldHVybiBlfHxhfHwwO3JldHVybiFlJiYtMX19LHFpPXtpbmNsdWRlczpZaSghMCksaW5kZXhPZjpZaSghMSl9LHppPXFpLmluY2x1ZGVzO3dpKHt0YXJnZXQ6XCJBcnJheVwiLHByb3RvOiEwLGZvcmNlZDpuKChmdW5jdGlvbigpe3JldHVybiFBcnJheSgxKS5pbmNsdWRlcygpfSkpfSx7aW5jbHVkZXM6ZnVuY3Rpb24oZSl7cmV0dXJuIHppKHRoaXMsZSxhcmd1bWVudHMubGVuZ3RoPjE/YXJndW1lbnRzWzFdOnZvaWQgMCl9fSk7dmFyIEppPWllLFhpPWZ1bmN0aW9uKGUpe3JldHVybiBKaVtlK1wiUHJvdG90eXBlXCJdfSxRaT1YaShcIkFycmF5XCIpLmluY2x1ZGVzLFppPXRlLCRpPVIsZW49aHQoXCJtYXRjaFwiKSx0bj1mdW5jdGlvbihlKXt2YXIgdDtyZXR1cm4gWmkoZSkmJih2b2lkIDAhPT0odD1lW2VuXSk/ISF0OlwiUmVnRXhwXCI9PSRpKGUpKX0sbm49dG4scm49VHlwZUVycm9yLG9uPXt9O29uW2h0KFwidG9TdHJpbmdUYWdcIildPVwielwiO3ZhciBzbj1cIltvYmplY3Qgel1cIj09PVN0cmluZyhvbiksYW49c24sY249dyxkbj1SLGxuPWh0KFwidG9TdHJpbmdUYWdcIiksdW49T2JqZWN0LGhuPVwiQXJndW1lbnRzXCI9PWRuKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSkscG49YW4/ZG46ZnVuY3Rpb24oZSl7dmFyIHQsaSxuO3JldHVybiB2b2lkIDA9PT1lP1wiVW5kZWZpbmVkXCI6bnVsbD09PWU/XCJOdWxsXCI6XCJzdHJpbmdcIj09dHlwZW9mKGk9ZnVuY3Rpb24oZSx0KXt0cnl7cmV0dXJuIGVbdF19Y2F0Y2goZSl7fX0odD11bihlKSxsbikpP2k6aG4/ZG4odCk6XCJPYmplY3RcIj09KG49ZG4odCkpJiZjbih0LmNhbGxlZSk/XCJBcmd1bWVudHNcIjpufSxfbj1wbixFbj1TdHJpbmcsZm49ZnVuY3Rpb24oZSl7aWYoXCJTeW1ib2xcIj09PV9uKGUpKXRocm93IFR5cGVFcnJvcihcIkNhbm5vdCBjb252ZXJ0IGEgU3ltYm9sIHZhbHVlIHRvIGEgc3RyaW5nXCIpO3JldHVybiBFbihlKX0sbW49aHQoXCJtYXRjaFwiKSxUbj13aSxTbj1mdW5jdGlvbihlKXtpZihubihlKSl0aHJvdyBybihcIlRoZSBtZXRob2QgZG9lc24ndCBhY2NlcHQgcmVndWxhciBleHByZXNzaW9uc1wiKTtyZXR1cm4gZX0sZ249SixSbj1mbixDbj1mdW5jdGlvbihlKXt2YXIgdD0vLi87dHJ5e1wiLy4vXCJbZV0odCl9Y2F0Y2goaSl7dHJ5e3JldHVybiB0W21uXT0hMSxcIi8uL1wiW2VdKHQpfWNhdGNoKGUpe319cmV0dXJuITF9LEluPWQoXCJcIi5pbmRleE9mKTtUbih7dGFyZ2V0OlwiU3RyaW5nXCIscHJvdG86ITAsZm9yY2VkOiFDbihcImluY2x1ZGVzXCIpfSx7aW5jbHVkZXM6ZnVuY3Rpb24oZSl7cmV0dXJuISF+SW4oUm4oZ24odGhpcykpLFJuKFNuKGUpKSxhcmd1bWVudHMubGVuZ3RoPjE/YXJndW1lbnRzWzFdOnZvaWQgMCl9fSk7dmFyIHZuPVhpKFwiU3RyaW5nXCIpLmluY2x1ZGVzLHluPWwsQW49UWksYm49dm4sd249QXJyYXkucHJvdG90eXBlLE9uPVN0cmluZy5wcm90b3R5cGUsTm49ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5pbmNsdWRlcztyZXR1cm4gZT09PXdufHx5bih3bixlKSYmdD09PXduLmluY2x1ZGVzP0FuOlwic3RyaW5nXCI9PXR5cGVvZiBlfHxlPT09T258fHluKE9uLGUpJiZ0PT09T24uaW5jbHVkZXM/Ym46dH0sRG49aShObiksUG49RGUsTG49SmUsa249SyxNbj1HaSxVbj1UeXBlRXJyb3IseG49ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQsaSxuLHIpe1BuKGkpO3ZhciBvPUxuKHQpLHM9a24obyksYT1NbihvKSxjPWU/YS0xOjAsZD1lPy0xOjE7aWYobjwyKWZvcig7Oyl7aWYoYyBpbiBzKXtyPXNbY10sYys9ZDticmVha31pZihjKz1kLGU/YzwwOmE8PWMpdGhyb3cgVW4oXCJSZWR1Y2Ugb2YgZW1wdHkgYXJyYXkgd2l0aCBubyBpbml0aWFsIHZhbHVlXCIpfWZvcig7ZT9jPj0wOmE+YztjKz1kKWMgaW4gcyYmKHI9aShyLHNbY10sYyxvKSk7cmV0dXJuIHJ9fSxWbj17bGVmdDp4bighMSkscmlnaHQ6eG4oITApfSxGbj1uLEJuPWZ1bmN0aW9uKGUsdCl7dmFyIGk9W11bZV07cmV0dXJuISFpJiZGbigoZnVuY3Rpb24oKXtpLmNhbGwobnVsbCx0fHxmdW5jdGlvbigpe3JldHVybiAxfSwxKX0pKX0sam49XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHByb2Nlc3MmJlwicHJvY2Vzc1wiPT1SKHByb2Nlc3MpLEduPVZuLmxlZnQ7d2koe3RhcmdldDpcIkFycmF5XCIscHJvdG86ITAsZm9yY2VkOiFqbiYmRWU+NzkmJkVlPDgzfHwhQm4oXCJyZWR1Y2VcIil9LHtyZWR1Y2U6ZnVuY3Rpb24oZSl7dmFyIHQ9YXJndW1lbnRzLmxlbmd0aDtyZXR1cm4gR24odGhpcyxlLHQsdD4xP2FyZ3VtZW50c1sxXTp2b2lkIDApfX0pO3ZhciBXbj1YaShcIkFycmF5XCIpLnJlZHVjZSxIbj1sLEtuPVduLFluPUFycmF5LnByb3RvdHlwZSxxbj1mdW5jdGlvbihlKXt2YXIgdD1lLnJlZHVjZTtyZXR1cm4gZT09PVlufHxIbihZbixlKSYmdD09PVluLnJlZHVjZT9Lbjp0fSx6bj1xbixKbj1pKHpuKTtsZXQgWG49ITAsUW49ITA7ZnVuY3Rpb24gWm4oZSx0LGkpe2NvbnN0IG49ZS5tYXRjaCh0KTtyZXR1cm4gbiYmbi5sZW5ndGg+PWkmJnBhcnNlSW50KG5baV0sMTApfWZ1bmN0aW9uICRuKGUsdCxpKXtpZighZS5SVENQZWVyQ29ubmVjdGlvbilyZXR1cm47Y29uc3Qgbj1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZSxyPW4uYWRkRXZlbnRMaXN0ZW5lcjtuLmFkZEV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24oZSxuKXtpZihlIT09dClyZXR1cm4gci5hcHBseSh0aGlzLGFyZ3VtZW50cyk7Y29uc3Qgbz1lPT57Y29uc3QgdD1pKGUpO3QmJihuLmhhbmRsZUV2ZW50P24uaGFuZGxlRXZlbnQodCk6bih0KSl9O3JldHVybiB0aGlzLl9ldmVudE1hcD10aGlzLl9ldmVudE1hcHx8e30sdGhpcy5fZXZlbnRNYXBbdF18fCh0aGlzLl9ldmVudE1hcFt0XT1uZXcgTWFwKSx0aGlzLl9ldmVudE1hcFt0XS5zZXQobixvKSxyLmFwcGx5KHRoaXMsW2Usb10pfTtjb25zdCBvPW4ucmVtb3ZlRXZlbnRMaXN0ZW5lcjtuLnJlbW92ZUV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24oZSxpKXtpZihlIT09dHx8IXRoaXMuX2V2ZW50TWFwfHwhdGhpcy5fZXZlbnRNYXBbdF0pcmV0dXJuIG8uYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKCF0aGlzLl9ldmVudE1hcFt0XS5oYXMoaSkpcmV0dXJuIG8uYXBwbHkodGhpcyxhcmd1bWVudHMpO2NvbnN0IG49dGhpcy5fZXZlbnRNYXBbdF0uZ2V0KGkpO3JldHVybiB0aGlzLl9ldmVudE1hcFt0XS5kZWxldGUoaSksMD09PXRoaXMuX2V2ZW50TWFwW3RdLnNpemUmJmRlbGV0ZSB0aGlzLl9ldmVudE1hcFt0XSwwPT09T2JqZWN0LmtleXModGhpcy5fZXZlbnRNYXApLmxlbmd0aCYmZGVsZXRlIHRoaXMuX2V2ZW50TWFwLG8uYXBwbHkodGhpcyxbZSxuXSl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuLFwib25cIit0LHtnZXQoKXtyZXR1cm4gdGhpc1tcIl9vblwiK3RdfSxzZXQoZSl7dGhpc1tcIl9vblwiK3RdJiYodGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKHQsdGhpc1tcIl9vblwiK3RdKSxkZWxldGUgdGhpc1tcIl9vblwiK3RdKSxlJiZ0aGlzLmFkZEV2ZW50TGlzdGVuZXIodCx0aGlzW1wiX29uXCIrdF09ZSl9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSl9ZnVuY3Rpb24gZXIoZSl7cmV0dXJuXCJib29sZWFuXCIhPXR5cGVvZiBlP25ldyBFcnJvcihcIkFyZ3VtZW50IHR5cGU6IFwiK3R5cGVvZiBlK1wiLiBQbGVhc2UgdXNlIGEgYm9vbGVhbi5cIik6KFhuPWUsZT9cImFkYXB0ZXIuanMgbG9nZ2luZyBkaXNhYmxlZFwiOlwiYWRhcHRlci5qcyBsb2dnaW5nIGVuYWJsZWRcIil9ZnVuY3Rpb24gdHIoZSl7cmV0dXJuXCJib29sZWFuXCIhPXR5cGVvZiBlP25ldyBFcnJvcihcIkFyZ3VtZW50IHR5cGU6IFwiK3R5cGVvZiBlK1wiLiBQbGVhc2UgdXNlIGEgYm9vbGVhbi5cIik6KFFuPSFlLFwiYWRhcHRlci5qcyBkZXByZWNhdGlvbiB3YXJuaW5ncyBcIisoZT9cImRpc2FibGVkXCI6XCJlbmFibGVkXCIpKX1mdW5jdGlvbiBpcigpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiB3aW5kb3cpe2lmKFhuKXJldHVybjtcInVuZGVmaW5lZFwiIT10eXBlb2YgY29uc29sZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgY29uc29sZS5sb2cmJmNvbnNvbGUubG9nLmFwcGx5KGNvbnNvbGUsYXJndW1lbnRzKX19ZnVuY3Rpb24gbnIoZSx0KXtRbiYmY29uc29sZS53YXJuKGUrXCIgaXMgZGVwcmVjYXRlZCwgcGxlYXNlIHVzZSBcIit0K1wiIGluc3RlYWQuXCIpfWZ1bmN0aW9uIHJyKGUpe3JldHVyblwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl9ZnVuY3Rpb24gb3IoZSl7dmFyIHQ7cmV0dXJuIHJyKGUpP0puKHQ9T2JqZWN0LmtleXMoZSkpLmNhbGwodCwoZnVuY3Rpb24odCxpKXtjb25zdCBuPXJyKGVbaV0pLHI9bj9vcihlW2ldKTplW2ldLG89biYmIU9iamVjdC5rZXlzKHIpLmxlbmd0aDtyZXR1cm4gdm9pZCAwPT09cnx8bz90Ok9iamVjdC5hc3NpZ24odCx7W2ldOnJ9KX0pLHt9KTplfWZ1bmN0aW9uIHNyKGUsdCxpKXt0JiYhaS5oYXModC5pZCkmJihpLnNldCh0LmlkLHQpLE9iamVjdC5rZXlzKHQpLmZvckVhY2goKG49PntuLmVuZHNXaXRoKFwiSWRcIik/c3IoZSxlLmdldCh0W25dKSxpKTpuLmVuZHNXaXRoKFwiSWRzXCIpJiZ0W25dLmZvckVhY2goKHQ9PntzcihlLGUuZ2V0KHQpLGkpfSkpfSkpKX1mdW5jdGlvbiBhcihlLHQsaSl7Y29uc3Qgbj1pP1wib3V0Ym91bmQtcnRwXCI6XCJpbmJvdW5kLXJ0cFwiLHI9bmV3IE1hcDtpZihudWxsPT09dClyZXR1cm4gcjtjb25zdCBvPVtdO3JldHVybiBlLmZvckVhY2goKGU9PntcInRyYWNrXCI9PT1lLnR5cGUmJmUudHJhY2tJZGVudGlmaWVyPT09dC5pZCYmby5wdXNoKGUpfSkpLG8uZm9yRWFjaCgodD0+e2UuZm9yRWFjaCgoaT0+e2kudHlwZT09PW4mJmkudHJhY2tJZD09PXQuaWQmJnNyKGUsaSxyKX0pKX0pKSxyfXZhciBjcj1udCxkcj1ZZShcImtleXNcIiksbHI9ZnVuY3Rpb24oZSl7cmV0dXJuIGRyW2VdfHwoZHJbZV09Y3IoZSkpfSx1cj0hbigoZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7fXJldHVybiBlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1udWxsLE9iamVjdC5nZXRQcm90b3R5cGVPZihuZXcgZSkhPT1lLnByb3RvdHlwZX0pKSxocj1aZSxwcj13LF9yPUplLEVyPXVyLGZyPWxyKFwiSUVfUFJPVE9cIiksbXI9T2JqZWN0LFRyPW1yLnByb3RvdHlwZSxTcj1Fcj9tci5nZXRQcm90b3R5cGVPZjpmdW5jdGlvbihlKXt2YXIgdD1fcihlKTtpZihocih0LGZyKSlyZXR1cm4gdFtmcl07dmFyIGk9dC5jb25zdHJ1Y3RvcjtyZXR1cm4gcHIoaSkmJnQgaW5zdGFuY2VvZiBpP2kucHJvdG90eXBlOnQgaW5zdGFuY2VvZiBtcj9UcjpudWxsfSxncj1kLFJyPURlLENyPXcsSXI9U3RyaW5nLHZyPVR5cGVFcnJvcix5cj1mdW5jdGlvbihlLHQsaSl7dHJ5e3JldHVybiBncihScihPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdClbaV0pKX1jYXRjaChlKXt9fSxBcj1paSxicj1mdW5jdGlvbihlKXtpZihcIm9iamVjdFwiPT10eXBlb2YgZXx8Q3IoZSkpcmV0dXJuIGU7dGhyb3cgdnIoXCJDYW4ndCBzZXQgXCIrSXIoZSkrXCIgYXMgYSBwcm90b3R5cGVcIil9LHdyPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8KFwiX19wcm90b19fXCJpbnt9P2Z1bmN0aW9uKCl7dmFyIGUsdD0hMSxpPXt9O3RyeXsoZT15cihPYmplY3QucHJvdG90eXBlLFwiX19wcm90b19fXCIsXCJzZXRcIikpKGksW10pLHQ9aSBpbnN0YW5jZW9mIEFycmF5fWNhdGNoKGUpe31yZXR1cm4gZnVuY3Rpb24oaSxuKXtyZXR1cm4gQXIoaSksYnIobiksdD9lKGksbik6aS5fX3Byb3RvX189bixpfX0oKTp2b2lkIDApLE9yPXt9LE5yPXt9LERyPVplLFByPVosTHI9cWkuaW5kZXhPZixrcj1OcixNcj1kKFtdLnB1c2gpLFVyPWZ1bmN0aW9uKGUsdCl7dmFyIGksbj1QcihlKSxyPTAsbz1bXTtmb3IoaSBpbiBuKSFEcihrcixpKSYmRHIobixpKSYmTXIobyxpKTtmb3IoO3QubGVuZ3RoPnI7KURyKG4saT10W3IrK10pJiYofkxyKG8saSl8fE1yKG8saSkpO3JldHVybiBvfSx4cj1bXCJjb25zdHJ1Y3RvclwiLFwiaGFzT3duUHJvcGVydHlcIixcImlzUHJvdG90eXBlT2ZcIixcInByb3BlcnR5SXNFbnVtZXJhYmxlXCIsXCJ0b0xvY2FsZVN0cmluZ1wiLFwidG9TdHJpbmdcIixcInZhbHVlT2ZcIl0sVnI9VXIsRnI9eHIuY29uY2F0KFwibGVuZ3RoXCIsXCJwcm90b3R5cGVcIik7T3IuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc3x8ZnVuY3Rpb24oZSl7cmV0dXJuIFZyKGUsRnIpfTt2YXIgQnI9e307QnIuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO3ZhciBqcj1hZSxHcj1PcixXcj1CcixIcj1paSxLcj1kKFtdLmNvbmNhdCksWXI9anIoXCJSZWZsZWN0XCIsXCJvd25LZXlzXCIpfHxmdW5jdGlvbihlKXt2YXIgdD1Hci5mKEhyKGUpKSxpPVdyLmY7cmV0dXJuIGk/S3IodCxpKGUpKTp0fSxxcj1aZSx6cj1ZcixKcj1PLFhyPVF0LFFyPXt9LFpyPVVyLCRyPXhyLGVvPU9iamVjdC5rZXlzfHxmdW5jdGlvbihlKXtyZXR1cm4gWnIoZSwkcil9LHRvPU4saW89WnQsbm89UXQscm89aWksb289Wixzbz1lbztRci5mPXRvJiYhaW8/T2JqZWN0LmRlZmluZVByb3BlcnRpZXM6ZnVuY3Rpb24oZSx0KXtybyhlKTtmb3IodmFyIGksbj1vbyh0KSxyPXNvKHQpLG89ci5sZW5ndGgscz0wO28+czspbm8uZihlLGk9cltzKytdLG5baV0pO3JldHVybiBlfTt2YXIgYW8sY289YWUoXCJkb2N1bWVudFwiLFwiZG9jdW1lbnRFbGVtZW50XCIpLGxvPWlpLHVvPVFyLGhvPXhyLHBvPU5yLF9vPWNvLEVvPUF0LGZvPVwicHJvdG90eXBlXCIsbW89XCJzY3JpcHRcIixUbz1scihcIklFX1BST1RPXCIpLFNvPWZ1bmN0aW9uKCl7fSxnbz1mdW5jdGlvbihlKXtyZXR1cm5cIjxcIittbytcIj5cIitlK1wiPC9cIittbytcIj5cIn0sUm89ZnVuY3Rpb24oZSl7ZS53cml0ZShnbyhcIlwiKSksZS5jbG9zZSgpO3ZhciB0PWUucGFyZW50V2luZG93Lk9iamVjdDtyZXR1cm4gZT1udWxsLHR9LENvPWZ1bmN0aW9uKCl7dHJ5e2FvPW5ldyBBY3RpdmVYT2JqZWN0KFwiaHRtbGZpbGVcIil9Y2F0Y2goZSl7fXZhciBlLHQsaTtDbz1cInVuZGVmaW5lZFwiIT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQuZG9tYWluJiZhbz9Sbyhhbyk6KHQ9RW8oXCJpZnJhbWVcIiksaT1cImphdmFcIittbytcIjpcIix0LnN0eWxlLmRpc3BsYXk9XCJub25lXCIsX28uYXBwZW5kQ2hpbGQodCksdC5zcmM9U3RyaW5nKGkpLChlPXQuY29udGVudFdpbmRvdy5kb2N1bWVudCkub3BlbigpLGUud3JpdGUoZ28oXCJkb2N1bWVudC5GPU9iamVjdFwiKSksZS5jbG9zZSgpLGUuRik6Um8oYW8pO2Zvcih2YXIgbj1oby5sZW5ndGg7bi0tOylkZWxldGUgQ29bZm9dW2hvW25dXTtyZXR1cm4gQ28oKX07cG9bVG9dPSEwO3ZhciBJbz1PYmplY3QuY3JlYXRlfHxmdW5jdGlvbihlLHQpe3ZhciBpO3JldHVybiBudWxsIT09ZT8oU29bZm9dPWxvKGUpLGk9bmV3IFNvLFNvW2ZvXT1udWxsLGlbVG9dPWUpOmk9Q28oKSx2b2lkIDA9PT10P2k6dW8uZihpLHQpfSx2bz10ZSx5bz1maSxBbz1FcnJvcixibz1kKFwiXCIucmVwbGFjZSksd289U3RyaW5nKEFvKFwienhjYXNkXCIpLnN0YWNrKSxPbz0vXFxuXFxzKmF0IFteOl0qOlteXFxuXSovLE5vPU9vLnRlc3Qod28pLERvPUIsUG89IW4oKGZ1bmN0aW9uKCl7dmFyIGU9RXJyb3IoXCJhXCIpO3JldHVybiEoXCJzdGFja1wiaW4gZSl8fChPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcInN0YWNrXCIsRG8oMSw3KSksNyE9PWUuc3RhY2spfSkpLExvPWZpLGtvPWZ1bmN0aW9uKGUsdCl7aWYoTm8mJlwic3RyaW5nXCI9PXR5cGVvZiBlJiYhQW8ucHJlcGFyZVN0YWNrVHJhY2UpZm9yKDt0LS07KWU9Ym8oZSxPbyxcIlwiKTtyZXR1cm4gZX0sTW89UG8sVW89RXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UseG89e30sVm89eG8sRm89aHQoXCJpdGVyYXRvclwiKSxCbz1BcnJheS5wcm90b3R5cGUsam89ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PWUmJihWby5BcnJheT09PWV8fEJvW0ZvXT09PWUpfSxHbz1wbixXbz1rZSxIbz1ZLEtvPXhvLFlvPWh0KFwiaXRlcmF0b3JcIikscW89ZnVuY3Rpb24oZSl7aWYoIUhvKGUpKXJldHVybiBXbyhlLFlvKXx8V28oZSxcIkBAaXRlcmF0b3JcIil8fEtvW0dvKGUpXX0sem89TCxKbz1EZSxYbz1paSxRbz1iZSxabz1xbywkbz1UeXBlRXJyb3IsZXM9ZnVuY3Rpb24oZSx0KXt2YXIgaT1hcmd1bWVudHMubGVuZ3RoPDI/Wm8oZSk6dDtpZihKbyhpKSlyZXR1cm4gWG8oem8oaSxlKSk7dGhyb3cgJG8oUW8oZSkrXCIgaXMgbm90IGl0ZXJhYmxlXCIpfSx0cz1MLGlzPWlpLG5zPWtlLHJzPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbixyO2lzKGUpO3RyeXtpZighKG49bnMoZSxcInJldHVyblwiKSkpe2lmKFwidGhyb3dcIj09PXQpdGhyb3cgaTtyZXR1cm4gaX1uPXRzKG4sZSl9Y2F0Y2goZSl7cj0hMCxuPWV9aWYoXCJ0aHJvd1wiPT09dCl0aHJvdyBpO2lmKHIpdGhyb3cgbjtyZXR1cm4gaXMobiksaX0sb3M9WHQsc3M9TCxhcz1paSxjcz1iZSxkcz1qbyxscz1HaSx1cz1sLGhzPWVzLHBzPXFvLF9zPXJzLEVzPVR5cGVFcnJvcixmcz1mdW5jdGlvbihlLHQpe3RoaXMuc3RvcHBlZD1lLHRoaXMucmVzdWx0PXR9LG1zPWZzLnByb3RvdHlwZSxUcz1mdW5jdGlvbihlLHQsaSl7dmFyIG4scixvLHMsYSxjLGQsbD1pJiZpLnRoYXQsdT0hKCFpfHwhaS5BU19FTlRSSUVTKSxoPSEoIWl8fCFpLklTX1JFQ09SRCkscD0hKCFpfHwhaS5JU19JVEVSQVRPUiksXz0hKCFpfHwhaS5JTlRFUlJVUFRFRCksRT1vcyh0LGwpLGY9ZnVuY3Rpb24oZSl7cmV0dXJuIG4mJl9zKG4sXCJub3JtYWxcIixlKSxuZXcgZnMoITAsZSl9LG09ZnVuY3Rpb24oZSl7cmV0dXJuIHU/KGFzKGUpLF8/RShlWzBdLGVbMV0sZik6RShlWzBdLGVbMV0pKTpfP0UoZSxmKTpFKGUpfTtpZihoKW49ZS5pdGVyYXRvcjtlbHNlIGlmKHApbj1lO2Vsc2V7aWYoIShyPXBzKGUpKSl0aHJvdyBFcyhjcyhlKStcIiBpcyBub3QgaXRlcmFibGVcIik7aWYoZHMocikpe2ZvcihvPTAscz1scyhlKTtzPm87bysrKWlmKChhPW0oZVtvXSkpJiZ1cyhtcyxhKSlyZXR1cm4gYTtyZXR1cm4gbmV3IGZzKCExKX1uPWhzKGUscil9Zm9yKGM9aD9lLm5leHQ6bi5uZXh0OyEoZD1zcyhjLG4pKS5kb25lOyl7dHJ5e2E9bShkLnZhbHVlKX1jYXRjaChlKXtfcyhuLFwidGhyb3dcIixlKX1pZihcIm9iamVjdFwiPT10eXBlb2YgYSYmYSYmdXMobXMsYSkpcmV0dXJuIGF9cmV0dXJuIG5ldyBmcyghMSl9LFNzPWZuLGdzPXdpLFJzPWwsQ3M9U3IsSXM9d3IsdnM9ZnVuY3Rpb24oZSx0LGkpe2Zvcih2YXIgbj16cih0KSxyPVhyLmYsbz1Kci5mLHM9MDtzPG4ubGVuZ3RoO3MrKyl7dmFyIGE9bltzXTtxcihlLGEpfHxpJiZxcihpLGEpfHxyKGUsYSxvKHQsYSkpfX0seXM9SW8sQXM9ZmksYnM9Qix3cz1mdW5jdGlvbihlLHQpe3ZvKHQpJiZcImNhdXNlXCJpbiB0JiZ5byhlLFwiY2F1c2VcIix0LmNhdXNlKX0sT3M9ZnVuY3Rpb24oZSx0LGksbil7TW8mJihVbz9VbyhlLHQpOkxvKGUsXCJzdGFja1wiLGtvKGksbikpKX0sTnM9VHMsRHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdm9pZCAwPT09ZT9hcmd1bWVudHMubGVuZ3RoPDI/XCJcIjp0OlNzKGUpfSxQcz1odChcInRvU3RyaW5nVGFnXCIpLExzPUVycm9yLGtzPVtdLnB1c2gsTXM9ZnVuY3Rpb24oZSx0KXt2YXIgaSxuPVJzKFVzLHRoaXMpO0lzP2k9SXMoTHMoKSxuP0NzKHRoaXMpOlVzKTooaT1uP3RoaXM6eXMoVXMpLEFzKGksUHMsXCJFcnJvclwiKSksdm9pZCAwIT09dCYmQXMoaSxcIm1lc3NhZ2VcIixEcyh0KSksT3MoaSxNcyxpLnN0YWNrLDEpLGFyZ3VtZW50cy5sZW5ndGg+MiYmd3MoaSxhcmd1bWVudHNbMl0pO3ZhciByPVtdO3JldHVybiBOcyhlLGtzLHt0aGF0OnJ9KSxBcyhpLFwiZXJyb3JzXCIsciksaX07SXM/SXMoTXMsTHMpOnZzKE1zLExzLHtuYW1lOiEwfSk7dmFyIFVzPU1zLnByb3RvdHlwZT15cyhMcy5wcm90b3R5cGUse2NvbnN0cnVjdG9yOmJzKDEsTXMpLG1lc3NhZ2U6YnMoMSxcIlwiKSxuYW1lOmJzKDEsXCJBZ2dyZWdhdGVFcnJvclwiKX0pO2dzKHtnbG9iYWw6ITAsY29uc3RydWN0b3I6ITAsYXJpdHk6Mn0se0FnZ3JlZ2F0ZUVycm9yOk1zfSk7dmFyIHhzLFZzLEZzLEJzPXcsanM9aC5XZWFrTWFwLEdzPUJzKGpzKSYmL25hdGl2ZSBjb2RlLy50ZXN0KFN0cmluZyhqcykpLFdzPWgsSHM9dGUsS3M9ZmksWXM9WmUscXM9SGUsenM9bHIsSnM9TnIsWHM9XCJPYmplY3QgYWxyZWFkeSBpbml0aWFsaXplZFwiLFFzPVdzLlR5cGVFcnJvcixacz1Xcy5XZWFrTWFwO2lmKEdzfHxxcy5zdGF0ZSl7dmFyICRzPXFzLnN0YXRlfHwocXMuc3RhdGU9bmV3IFpzKTskcy5nZXQ9JHMuZ2V0LCRzLmhhcz0kcy5oYXMsJHMuc2V0PSRzLnNldCx4cz1mdW5jdGlvbihlLHQpe2lmKCRzLmhhcyhlKSl0aHJvdyBRcyhYcyk7cmV0dXJuIHQuZmFjYWRlPWUsJHMuc2V0KGUsdCksdH0sVnM9ZnVuY3Rpb24oZSl7cmV0dXJuICRzLmdldChlKXx8e319LEZzPWZ1bmN0aW9uKGUpe3JldHVybiAkcy5oYXMoZSl9fWVsc2V7dmFyIGVhPXpzKFwic3RhdGVcIik7SnNbZWFdPSEwLHhzPWZ1bmN0aW9uKGUsdCl7aWYoWXMoZSxlYSkpdGhyb3cgUXMoWHMpO3JldHVybiB0LmZhY2FkZT1lLEtzKGUsZWEsdCksdH0sVnM9ZnVuY3Rpb24oZSl7cmV0dXJuIFlzKGUsZWEpP2VbZWFdOnt9fSxGcz1mdW5jdGlvbihlKXtyZXR1cm4gWXMoZSxlYSl9fXZhciB0YSxpYSxuYSxyYT17c2V0OnhzLGdldDpWcyxoYXM6RnMsZW5mb3JjZTpmdW5jdGlvbihlKXtyZXR1cm4gRnMoZSk/VnMoZSk6eHMoZSx7fSl9LGdldHRlckZvcjpmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGk7aWYoIUhzKHQpfHwoaT1Wcyh0KSkudHlwZSE9PWUpdGhyb3cgUXMoXCJJbmNvbXBhdGlibGUgcmVjZWl2ZXIsIFwiK2UrXCIgcmVxdWlyZWRcIik7cmV0dXJuIGl9fX0sb2E9TixzYT1aZSxhYT1GdW5jdGlvbi5wcm90b3R5cGUsY2E9b2EmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsZGE9c2EoYWEsXCJuYW1lXCIpLGxhPXtFWElTVFM6ZGEsUFJPUEVSOmRhJiZcInNvbWV0aGluZ1wiPT09ZnVuY3Rpb24oKXt9Lm5hbWUsQ09ORklHVVJBQkxFOmRhJiYoIW9hfHxvYSYmY2EoYWEsXCJuYW1lXCIpLmNvbmZpZ3VyYWJsZSl9LHVhPWZpLGhhPWZ1bmN0aW9uKGUsdCxpLG4pe3JldHVybiBuJiZuLmVudW1lcmFibGU/ZVt0XT1pOnVhKGUsdCxpKSxlfSxwYT1uLF9hPXcsRWE9dGUsZmE9SW8sbWE9U3IsVGE9aGEsU2E9aHQoXCJpdGVyYXRvclwiKSxnYT0hMTtbXS5rZXlzJiYoXCJuZXh0XCJpbihuYT1bXS5rZXlzKCkpPyhpYT1tYShtYShuYSkpKSE9PU9iamVjdC5wcm90b3R5cGUmJih0YT1pYSk6Z2E9ITApO3ZhciBSYT0hRWEodGEpfHxwYSgoZnVuY3Rpb24oKXt2YXIgZT17fTtyZXR1cm4gdGFbU2FdLmNhbGwoZSkhPT1lfSkpO19hKCh0YT1SYT97fTpmYSh0YSkpW1NhXSl8fFRhKHRhLFNhLChmdW5jdGlvbigpe3JldHVybiB0aGlzfSkpO3ZhciBDYT17SXRlcmF0b3JQcm90b3R5cGU6dGEsQlVHR1lfU0FGQVJJX0lURVJBVE9SUzpnYX0sSWE9cG4sdmE9c24/e30udG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm5cIltvYmplY3QgXCIrSWEodGhpcykrXCJdXCJ9LHlhPXNuLEFhPVF0LmYsYmE9Zmksd2E9WmUsT2E9dmEsTmE9aHQoXCJ0b1N0cmluZ1RhZ1wiKSxEYT1mdW5jdGlvbihlLHQsaSxuKXtpZihlKXt2YXIgcj1pP2U6ZS5wcm90b3R5cGU7d2EocixOYSl8fEFhKHIsTmEse2NvbmZpZ3VyYWJsZTohMCx2YWx1ZTp0fSksbiYmIXlhJiZiYShyLFwidG9TdHJpbmdcIixPYSl9fSxQYT1DYS5JdGVyYXRvclByb3RvdHlwZSxMYT1JbyxrYT1CLE1hPURhLFVhPXhvLHhhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LFZhPWZ1bmN0aW9uKGUsdCxpLG4pe3ZhciByPXQrXCIgSXRlcmF0b3JcIjtyZXR1cm4gZS5wcm90b3R5cGU9TGEoUGEse25leHQ6a2EoKyFuLGkpfSksTWEoZSxyLCExLCEwKSxVYVtyXT14YSxlfSxGYT13aSxCYT1MLGphPWxhLEdhPVZhLFdhPVNyLEhhPURhLEthPWhhLFlhPXhvLHFhPUNhLHphPWphLlBST1BFUixKYT1xYS5CVUdHWV9TQUZBUklfSVRFUkFUT1JTLFhhPWh0KFwiaXRlcmF0b3JcIiksUWE9XCJrZXlzXCIsWmE9XCJ2YWx1ZXNcIiwkYT1cImVudHJpZXNcIixlYz1mdW5jdGlvbigpe3JldHVybiB0aGlzfSx0Yz1mdW5jdGlvbihlLHQsaSxuLHIsbyxzKXtHYShpLHQsbik7dmFyIGEsYyxkLGw9ZnVuY3Rpb24oZSl7aWYoZT09PXImJkUpcmV0dXJuIEU7aWYoIUphJiZlIGluIHApcmV0dXJuIHBbZV07c3dpdGNoKGUpe2Nhc2UgUWE6Y2FzZSBaYTpjYXNlICRhOnJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgaSh0aGlzLGUpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGkodGhpcyl9fSx1PXQrXCIgSXRlcmF0b3JcIixoPSExLHA9ZS5wcm90b3R5cGUsXz1wW1hhXXx8cFtcIkBAaXRlcmF0b3JcIl18fHImJnBbcl0sRT0hSmEmJl98fGwociksZj1cIkFycmF5XCI9PXQmJnAuZW50cmllc3x8XztpZihmJiYoYT1XYShmLmNhbGwobmV3IGUpKSkhPT1PYmplY3QucHJvdG90eXBlJiZhLm5leHQmJihIYShhLHUsITAsITApLFlhW3VdPWVjKSx6YSYmcj09WmEmJl8mJl8ubmFtZSE9PVphJiYoaD0hMCxFPWZ1bmN0aW9uKCl7cmV0dXJuIEJhKF8sdGhpcyl9KSxyKWlmKGM9e3ZhbHVlczpsKFphKSxrZXlzOm8/RTpsKFFhKSxlbnRyaWVzOmwoJGEpfSxzKWZvcihkIGluIGMpKEphfHxofHwhKGQgaW4gcCkpJiZLYShwLGQsY1tkXSk7ZWxzZSBGYSh7dGFyZ2V0OnQscHJvdG86ITAsZm9yY2VkOkphfHxofSxjKTtyZXR1cm4gcyYmcFtYYV0hPT1FJiZLYShwLFhhLEUse25hbWU6cn0pLFlhW3RdPUUsY30saWM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57dmFsdWU6ZSxkb25lOnR9fSxuYz1aLHJjPXhvLG9jPXJhO1F0LmY7dmFyIHNjPXRjLGFjPWljLGNjPVwiQXJyYXkgSXRlcmF0b3JcIixkYz1vYy5zZXQsbGM9b2MuZ2V0dGVyRm9yKGNjKTtzYyhBcnJheSxcIkFycmF5XCIsKGZ1bmN0aW9uKGUsdCl7ZGModGhpcyx7dHlwZTpjYyx0YXJnZXQ6bmMoZSksaW5kZXg6MCxraW5kOnR9KX0pLChmdW5jdGlvbigpe3ZhciBlPWxjKHRoaXMpLHQ9ZS50YXJnZXQsaT1lLmtpbmQsbj1lLmluZGV4Kys7cmV0dXJuIXR8fG4+PXQubGVuZ3RoPyhlLnRhcmdldD12b2lkIDAsYWModm9pZCAwLCEwKSk6YWMoXCJrZXlzXCI9PWk/bjpcInZhbHVlc1wiPT1pP3Rbbl06W24sdFtuXV0sITEpfSksXCJ2YWx1ZXNcIikscmMuQXJndW1lbnRzPXJjLkFycmF5O3ZhciB1Yz1RdCxoYz1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIHVjLmYoZSx0LGkpfSxwYz1hZSxfYz1oYyxFYz1OLGZjPWh0KFwic3BlY2llc1wiKSxtYz1sLFRjPVR5cGVFcnJvcixTYz1mdW5jdGlvbihlLHQpe2lmKG1jKHQsZSkpcmV0dXJuIGU7dGhyb3cgVGMoXCJJbmNvcnJlY3QgaW52b2NhdGlvblwiKX0sZ2M9dyxSYz1IZSxDYz1kKEZ1bmN0aW9uLnRvU3RyaW5nKTtnYyhSYy5pbnNwZWN0U291cmNlKXx8KFJjLmluc3BlY3RTb3VyY2U9ZnVuY3Rpb24oZSl7cmV0dXJuIENjKGUpfSk7dmFyIEljPVJjLmluc3BlY3RTb3VyY2UsdmM9ZCx5Yz1uLEFjPXcsYmM9cG4sd2M9SWMsT2M9ZnVuY3Rpb24oKXt9LE5jPVtdLERjPWFlKFwiUmVmbGVjdFwiLFwiY29uc3RydWN0XCIpLFBjPS9eXFxzKig/OmNsYXNzfGZ1bmN0aW9uKVxcYi8sTGM9dmMoUGMuZXhlYyksa2M9IVBjLmV4ZWMoT2MpLE1jPWZ1bmN0aW9uKGUpe2lmKCFBYyhlKSlyZXR1cm4hMTt0cnl7cmV0dXJuIERjKE9jLE5jLGUpLCEwfWNhdGNoKGUpe3JldHVybiExfX0sVWM9ZnVuY3Rpb24oZSl7aWYoIUFjKGUpKXJldHVybiExO3N3aXRjaChiYyhlKSl7Y2FzZVwiQXN5bmNGdW5jdGlvblwiOmNhc2VcIkdlbmVyYXRvckZ1bmN0aW9uXCI6Y2FzZVwiQXN5bmNHZW5lcmF0b3JGdW5jdGlvblwiOnJldHVybiExfXRyeXtyZXR1cm4ga2N8fCEhTGMoUGMsd2MoZSkpfWNhdGNoKGUpe3JldHVybiEwfX07VWMuc2hhbT0hMDt2YXIgeGMsVmMsRmMsQmMsamM9IURjfHx5YygoZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gTWMoTWMuY2FsbCl8fCFNYyhPYmplY3QpfHwhTWMoKGZ1bmN0aW9uKCl7ZT0hMH0pKXx8ZX0pKT9VYzpNYyxHYz1qYyxXYz1iZSxIYz1UeXBlRXJyb3IsS2M9aWksWWM9ZnVuY3Rpb24oZSl7aWYoR2MoZSkpcmV0dXJuIGU7dGhyb3cgSGMoV2MoZSkrXCIgaXMgbm90IGEgY29uc3RydWN0b3JcIil9LHFjPVksemM9aHQoXCJzcGVjaWVzXCIpLEpjPWZ1bmN0aW9uKGUsdCl7dmFyIGksbj1LYyhlKS5jb25zdHJ1Y3RvcjtyZXR1cm4gdm9pZCAwPT09bnx8cWMoaT1LYyhuKVt6Y10pP3Q6WWMoaSl9LFhjPWQoW10uc2xpY2UpLFFjPVR5cGVFcnJvcixaYz1mdW5jdGlvbihlLHQpe2lmKGU8dCl0aHJvdyBRYyhcIk5vdCBlbm91Z2ggYXJndW1lbnRzXCIpO3JldHVybiBlfSwkYz0vKD86aXBhZHxpcGhvbmV8aXBvZCkuKmFwcGxld2Via2l0L2kudGVzdChjZSksZWQ9aCx0ZD1tLGlkPVh0LG5kPXcscmQ9WmUsb2Q9bixzZD1jbyxhZD1YYyxjZD1BdCxkZD1aYyxsZD0kYyx1ZD1qbixoZD1lZC5zZXRJbW1lZGlhdGUscGQ9ZWQuY2xlYXJJbW1lZGlhdGUsX2Q9ZWQucHJvY2VzcyxFZD1lZC5EaXNwYXRjaCxmZD1lZC5GdW5jdGlvbixtZD1lZC5NZXNzYWdlQ2hhbm5lbCxUZD1lZC5TdHJpbmcsU2Q9MCxnZD17fSxSZD1cIm9ucmVhZHlzdGF0ZWNoYW5nZVwiO29kKChmdW5jdGlvbigpe3hjPWVkLmxvY2F0aW9ufSkpO3ZhciBDZD1mdW5jdGlvbihlKXtpZihyZChnZCxlKSl7dmFyIHQ9Z2RbZV07ZGVsZXRlIGdkW2VdLHQoKX19LElkPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe0NkKGUpfX0sdmQ9ZnVuY3Rpb24oZSl7Q2QoZS5kYXRhKX0seWQ9ZnVuY3Rpb24oZSl7ZWQucG9zdE1lc3NhZ2UoVGQoZSkseGMucHJvdG9jb2wrXCIvL1wiK3hjLmhvc3QpfTtoZCYmcGR8fChoZD1mdW5jdGlvbihlKXtkZChhcmd1bWVudHMubGVuZ3RoLDEpO3ZhciB0PW5kKGUpP2U6ZmQoZSksaT1hZChhcmd1bWVudHMsMSk7cmV0dXJuIGdkWysrU2RdPWZ1bmN0aW9uKCl7dGQodCx2b2lkIDAsaSl9LFZjKFNkKSxTZH0scGQ9ZnVuY3Rpb24oZSl7ZGVsZXRlIGdkW2VdfSx1ZD9WYz1mdW5jdGlvbihlKXtfZC5uZXh0VGljayhJZChlKSl9OkVkJiZFZC5ub3c/VmM9ZnVuY3Rpb24oZSl7RWQubm93KElkKGUpKX06bWQmJiFsZD8oQmM9KEZjPW5ldyBtZCkucG9ydDIsRmMucG9ydDEub25tZXNzYWdlPXZkLFZjPWlkKEJjLnBvc3RNZXNzYWdlLEJjKSk6ZWQuYWRkRXZlbnRMaXN0ZW5lciYmbmQoZWQucG9zdE1lc3NhZ2UpJiYhZWQuaW1wb3J0U2NyaXB0cyYmeGMmJlwiZmlsZTpcIiE9PXhjLnByb3RvY29sJiYhb2QoeWQpPyhWYz15ZCxlZC5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLHZkLCExKSk6VmM9UmQgaW4gY2QoXCJzY3JpcHRcIik/ZnVuY3Rpb24oZSl7c2QuYXBwZW5kQ2hpbGQoY2QoXCJzY3JpcHRcIikpW1JkXT1mdW5jdGlvbigpe3NkLnJlbW92ZUNoaWxkKHRoaXMpLENkKGUpfX06ZnVuY3Rpb24oZSl7c2V0VGltZW91dChJZChlKSwwKX0pO3ZhciBBZD17c2V0OmhkLGNsZWFyOnBkfSxiZD1mdW5jdGlvbigpe3RoaXMuaGVhZD1udWxsLHRoaXMudGFpbD1udWxsfTtiZC5wcm90b3R5cGU9e2FkZDpmdW5jdGlvbihlKXt2YXIgdD17aXRlbTplLG5leHQ6bnVsbH0saT10aGlzLnRhaWw7aT9pLm5leHQ9dDp0aGlzLmhlYWQ9dCx0aGlzLnRhaWw9dH0sZ2V0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5oZWFkO2lmKGUpcmV0dXJuIG51bGw9PT0odGhpcy5oZWFkPWUubmV4dCkmJih0aGlzLnRhaWw9bnVsbCksZS5pdGVtfX07dmFyIHdkLE9kLE5kLERkLFBkLExkPWJkLGtkPS9pcGFkfGlwaG9uZXxpcG9kL2kudGVzdChjZSkmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBQZWJibGUsTWQ9L3dlYjBzKD8hLipjaHJvbWUpL2kudGVzdChjZSksVWQ9aCx4ZD1YdCxWZD1PLmYsRmQ9QWQuc2V0LEJkPUxkLGpkPSRjLEdkPWtkLFdkPU1kLEhkPWpuLEtkPVVkLk11dGF0aW9uT2JzZXJ2ZXJ8fFVkLldlYktpdE11dGF0aW9uT2JzZXJ2ZXIsWWQ9VWQuZG9jdW1lbnQscWQ9VWQucHJvY2Vzcyx6ZD1VZC5Qcm9taXNlLEpkPVZkKFVkLFwicXVldWVNaWNyb3Rhc2tcIiksWGQ9SmQmJkpkLnZhbHVlO2lmKCFYZCl7dmFyIFFkPW5ldyBCZCxaZD1mdW5jdGlvbigpe3ZhciBlLHQ7Zm9yKEhkJiYoZT1xZC5kb21haW4pJiZlLmV4aXQoKTt0PVFkLmdldCgpOyl0cnl7dCgpfWNhdGNoKGUpe3Rocm93IFFkLmhlYWQmJndkKCksZX1lJiZlLmVudGVyKCl9O2pkfHxIZHx8V2R8fCFLZHx8IVlkPyFHZCYmemQmJnpkLnJlc29sdmU/KChEZD16ZC5yZXNvbHZlKHZvaWQgMCkpLmNvbnN0cnVjdG9yPXpkLFBkPXhkKERkLnRoZW4sRGQpLHdkPWZ1bmN0aW9uKCl7UGQoWmQpfSk6SGQ/d2Q9ZnVuY3Rpb24oKXtxZC5uZXh0VGljayhaZCl9OihGZD14ZChGZCxVZCksd2Q9ZnVuY3Rpb24oKXtGZChaZCl9KTooT2Q9ITAsTmQ9WWQuY3JlYXRlVGV4dE5vZGUoXCJcIiksbmV3IEtkKFpkKS5vYnNlcnZlKE5kLHtjaGFyYWN0ZXJEYXRhOiEwfSksd2Q9ZnVuY3Rpb24oKXtOZC5kYXRhPU9kPSFPZH0pLFhkPWZ1bmN0aW9uKGUpe1FkLmhlYWR8fHdkKCksUWQuYWRkKGUpfX12YXIgJGQ9WGQsZWw9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybntlcnJvcjohMSx2YWx1ZTplKCl9fWNhdGNoKGUpe3JldHVybntlcnJvcjohMCx2YWx1ZTplfX19LHRsPWguUHJvbWlzZSxpbD1cIm9iamVjdFwiPT10eXBlb2YgRGVubyYmRGVubyYmXCJvYmplY3RcIj09dHlwZW9mIERlbm8udmVyc2lvbixubD0haWwmJiFqbiYmXCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyYmXCJvYmplY3RcIj09dHlwZW9mIGRvY3VtZW50LHJsPWgsb2w9dGwsc2w9dyxhbD1ZdCxjbD1JYyxkbD1odCxsbD1ubCx1bD1pbCxobD1FZSxwbD1vbCYmb2wucHJvdG90eXBlLF9sPWRsKFwic3BlY2llc1wiKSxFbD0hMSxmbD1zbChybC5Qcm9taXNlUmVqZWN0aW9uRXZlbnQpLG1sPWFsKFwiUHJvbWlzZVwiLChmdW5jdGlvbigpe3ZhciBlPWNsKG9sKSx0PWUhPT1TdHJpbmcob2wpO2lmKCF0JiY2Nj09PWhsKXJldHVybiEwO2lmKCFwbC5jYXRjaHx8IXBsLmZpbmFsbHkpcmV0dXJuITA7aWYoIWhsfHxobDw1MXx8IS9uYXRpdmUgY29kZS8udGVzdChlKSl7dmFyIGk9bmV3IG9sKChmdW5jdGlvbihlKXtlKDEpfSkpLG49ZnVuY3Rpb24oZSl7ZSgoZnVuY3Rpb24oKXt9KSwoZnVuY3Rpb24oKXt9KSl9O2lmKChpLmNvbnN0cnVjdG9yPXt9KVtfbF09biwhKEVsPWkudGhlbigoZnVuY3Rpb24oKXt9KSlpbnN0YW5jZW9mIG4pKXJldHVybiEwfXJldHVybiF0JiYobGx8fHVsKSYmIWZsfSkpLFRsPXtDT05TVFJVQ1RPUjptbCxSRUpFQ1RJT05fRVZFTlQ6ZmwsU1VCQ0xBU1NJTkc6RWx9LFNsPXt9LGdsPURlLFJsPVR5cGVFcnJvcixDbD1mdW5jdGlvbihlKXt2YXIgdCxpO3RoaXMucHJvbWlzZT1uZXcgZSgoZnVuY3Rpb24oZSxuKXtpZih2b2lkIDAhPT10fHx2b2lkIDAhPT1pKXRocm93IFJsKFwiQmFkIFByb21pc2UgY29uc3RydWN0b3JcIik7dD1lLGk9bn0pKSx0aGlzLnJlc29sdmU9Z2wodCksdGhpcy5yZWplY3Q9Z2woaSl9O1NsLmY9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBDbChlKX07dmFyIElsLHZsLHlsPXdpLEFsPWpuLGJsPWgsd2w9TCxPbD1oYSxObD1EYSxEbD1mdW5jdGlvbihlKXt2YXIgdD1wYyhlKTtFYyYmdCYmIXRbZmNdJiZfYyh0LGZjLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9fSl9LFBsPURlLExsPXcsa2w9dGUsTWw9U2MsVWw9SmMseGw9QWQuc2V0LFZsPSRkLEZsPWZ1bmN0aW9uKGUsdCl7dHJ5ezE9PWFyZ3VtZW50cy5sZW5ndGg/Y29uc29sZS5lcnJvcihlKTpjb25zb2xlLmVycm9yKGUsdCl9Y2F0Y2goZSl7fX0sQmw9ZWwsamw9TGQsR2w9cmEsV2w9dGwsSGw9VGwsS2w9U2wsWWw9XCJQcm9taXNlXCIscWw9SGwuQ09OU1RSVUNUT1Isemw9SGwuUkVKRUNUSU9OX0VWRU5ULEpsPUdsLmdldHRlckZvcihZbCksWGw9R2wuc2V0LFFsPVdsJiZXbC5wcm90b3R5cGUsWmw9V2wsJGw9UWwsZXU9YmwuVHlwZUVycm9yLHR1PWJsLmRvY3VtZW50LGl1PWJsLnByb2Nlc3MsbnU9S2wuZixydT1udSxvdT0hISh0dSYmdHUuY3JlYXRlRXZlbnQmJmJsLmRpc3BhdGNoRXZlbnQpLHN1PVwidW5oYW5kbGVkcmVqZWN0aW9uXCIsYXU9ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuISgha2woZSl8fCFMbCh0PWUudGhlbikpJiZ0fSxjdT1mdW5jdGlvbihlLHQpe3ZhciBpLG4scixvPXQudmFsdWUscz0xPT10LnN0YXRlLGE9cz9lLm9rOmUuZmFpbCxjPWUucmVzb2x2ZSxkPWUucmVqZWN0LGw9ZS5kb21haW47dHJ5e2E/KHN8fCgyPT09dC5yZWplY3Rpb24mJnB1KHQpLHQucmVqZWN0aW9uPTEpLCEwPT09YT9pPW86KGwmJmwuZW50ZXIoKSxpPWEobyksbCYmKGwuZXhpdCgpLHI9ITApKSxpPT09ZS5wcm9taXNlP2QoZXUoXCJQcm9taXNlLWNoYWluIGN5Y2xlXCIpKToobj1hdShpKSk/d2wobixpLGMsZCk6YyhpKSk6ZChvKX1jYXRjaChlKXtsJiYhciYmbC5leGl0KCksZChlKX19LGR1PWZ1bmN0aW9uKGUsdCl7ZS5ub3RpZmllZHx8KGUubm90aWZpZWQ9ITAsVmwoKGZ1bmN0aW9uKCl7Zm9yKHZhciBpLG49ZS5yZWFjdGlvbnM7aT1uLmdldCgpOyljdShpLGUpO2Uubm90aWZpZWQ9ITEsdCYmIWUucmVqZWN0aW9uJiZ1dShlKX0pKSl9LGx1PWZ1bmN0aW9uKGUsdCxpKXt2YXIgbixyO291Pygobj10dS5jcmVhdGVFdmVudChcIkV2ZW50XCIpKS5wcm9taXNlPXQsbi5yZWFzb249aSxuLmluaXRFdmVudChlLCExLCEwKSxibC5kaXNwYXRjaEV2ZW50KG4pKTpuPXtwcm9taXNlOnQscmVhc29uOml9LCF6bCYmKHI9YmxbXCJvblwiK2VdKT9yKG4pOmU9PT1zdSYmRmwoXCJVbmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb25cIixpKX0sdXU9ZnVuY3Rpb24oZSl7d2woeGwsYmwsKGZ1bmN0aW9uKCl7dmFyIHQsaT1lLmZhY2FkZSxuPWUudmFsdWU7aWYoaHUoZSkmJih0PUJsKChmdW5jdGlvbigpe0FsP2l1LmVtaXQoXCJ1bmhhbmRsZWRSZWplY3Rpb25cIixuLGkpOmx1KHN1LGksbil9KSksZS5yZWplY3Rpb249QWx8fGh1KGUpPzI6MSx0LmVycm9yKSl0aHJvdyB0LnZhbHVlfSkpfSxodT1mdW5jdGlvbihlKXtyZXR1cm4gMSE9PWUucmVqZWN0aW9uJiYhZS5wYXJlbnR9LHB1PWZ1bmN0aW9uKGUpe3dsKHhsLGJsLChmdW5jdGlvbigpe3ZhciB0PWUuZmFjYWRlO0FsP2l1LmVtaXQoXCJyZWplY3Rpb25IYW5kbGVkXCIsdCk6bHUoXCJyZWplY3Rpb25oYW5kbGVkXCIsdCxlLnZhbHVlKX0pKX0sX3U9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBmdW5jdGlvbihuKXtlKHQsbixpKX19LEV1PWZ1bmN0aW9uKGUsdCxpKXtlLmRvbmV8fChlLmRvbmU9ITAsaSYmKGU9aSksZS52YWx1ZT10LGUuc3RhdGU9MixkdShlLCEwKSl9LGZ1PWZ1bmN0aW9uKGUsdCxpKXtpZighZS5kb25lKXtlLmRvbmU9ITAsaSYmKGU9aSk7dHJ5e2lmKGUuZmFjYWRlPT09dCl0aHJvdyBldShcIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmXCIpO3ZhciBuPWF1KHQpO24/VmwoKGZ1bmN0aW9uKCl7dmFyIGk9e2RvbmU6ITF9O3RyeXt3bChuLHQsX3UoZnUsaSxlKSxfdShFdSxpLGUpKX1jYXRjaCh0KXtFdShpLHQsZSl9fSkpOihlLnZhbHVlPXQsZS5zdGF0ZT0xLGR1KGUsITEpKX1jYXRjaCh0KXtFdSh7ZG9uZTohMX0sdCxlKX19fTtxbCYmKCRsPShabD1mdW5jdGlvbihlKXtNbCh0aGlzLCRsKSxQbChlKSx3bChJbCx0aGlzKTt2YXIgdD1KbCh0aGlzKTt0cnl7ZShfdShmdSx0KSxfdShFdSx0KSl9Y2F0Y2goZSl7RXUodCxlKX19KS5wcm90b3R5cGUsKElsPWZ1bmN0aW9uKGUpe1hsKHRoaXMse3R5cGU6WWwsZG9uZTohMSxub3RpZmllZDohMSxwYXJlbnQ6ITEscmVhY3Rpb25zOm5ldyBqbCxyZWplY3Rpb246ITEsc3RhdGU6MCx2YWx1ZTp2b2lkIDB9KX0pLnByb3RvdHlwZT1PbCgkbCxcInRoZW5cIiwoZnVuY3Rpb24oZSx0KXt2YXIgaT1KbCh0aGlzKSxuPW51KFVsKHRoaXMsWmwpKTtyZXR1cm4gaS5wYXJlbnQ9ITAsbi5vaz0hTGwoZSl8fGUsbi5mYWlsPUxsKHQpJiZ0LG4uZG9tYWluPUFsP2l1LmRvbWFpbjp2b2lkIDAsMD09aS5zdGF0ZT9pLnJlYWN0aW9ucy5hZGQobik6VmwoKGZ1bmN0aW9uKCl7Y3UobixpKX0pKSxuLnByb21pc2V9KSksdmw9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgSWwsdD1KbChlKTt0aGlzLnByb21pc2U9ZSx0aGlzLnJlc29sdmU9X3UoZnUsdCksdGhpcy5yZWplY3Q9X3UoRXUsdCl9LEtsLmY9bnU9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT1abHx8dW5kZWZpbmVkPT09ZT9uZXcgdmwoZSk6cnUoZSl9KSx5bCh7Z2xvYmFsOiEwLGNvbnN0cnVjdG9yOiEwLHdyYXA6ITAsZm9yY2VkOnFsfSx7UHJvbWlzZTpabH0pLE5sKFpsLFlsLCExLCEwKSxEbChZbCk7dmFyIG11PWh0KFwiaXRlcmF0b3JcIiksVHU9ITE7dHJ5e3ZhciBTdT0wLGd1PXtuZXh0OmZ1bmN0aW9uKCl7cmV0dXJue2RvbmU6ISFTdSsrfX0scmV0dXJuOmZ1bmN0aW9uKCl7VHU9ITB9fTtndVttdV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sQXJyYXkuZnJvbShndSwoZnVuY3Rpb24oKXt0aHJvdyAyfSkpfWNhdGNoKGUpe312YXIgUnU9dGwsQ3U9ZnVuY3Rpb24oZSx0KXtpZighdCYmIVR1KXJldHVybiExO3ZhciBpPSExO3RyeXt2YXIgbj17fTtuW211XT1mdW5jdGlvbigpe3JldHVybntuZXh0OmZ1bmN0aW9uKCl7cmV0dXJue2RvbmU6aT0hMH19fX0sZShuKX1jYXRjaChlKXt9cmV0dXJuIGl9LEl1PVRsLkNPTlNUUlVDVE9SfHwhQ3UoKGZ1bmN0aW9uKGUpe1J1LmFsbChlKS50aGVuKHZvaWQgMCwoZnVuY3Rpb24oKXt9KSl9KSksdnU9TCx5dT1EZSxBdT1TbCxidT1lbCx3dT1Uczt3aSh7dGFyZ2V0OlwiUHJvbWlzZVwiLHN0YXQ6ITAsZm9yY2VkOkl1fSx7YWxsOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsaT1BdS5mKHQpLG49aS5yZXNvbHZlLHI9aS5yZWplY3Qsbz1idSgoZnVuY3Rpb24oKXt2YXIgaT15dSh0LnJlc29sdmUpLG89W10scz0wLGE9MTt3dShlLChmdW5jdGlvbihlKXt2YXIgYz1zKyssZD0hMTthKyssdnUoaSx0LGUpLnRoZW4oKGZ1bmN0aW9uKGUpe2R8fChkPSEwLG9bY109ZSwtLWF8fG4obykpfSkscil9KSksLS1hfHxuKG8pfSkpO3JldHVybiBvLmVycm9yJiZyKG8udmFsdWUpLGkucHJvbWlzZX19KTt2YXIgT3U9d2ksTnU9VGwuQ09OU1RSVUNUT1I7dGwmJnRsLnByb3RvdHlwZSxPdSh7dGFyZ2V0OlwiUHJvbWlzZVwiLHByb3RvOiEwLGZvcmNlZDpOdSxyZWFsOiEwfSx7Y2F0Y2g6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudGhlbih2b2lkIDAsZSl9fSk7dmFyIER1PUwsUHU9RGUsTHU9U2wsa3U9ZWwsTXU9VHM7d2koe3RhcmdldDpcIlByb21pc2VcIixzdGF0OiEwLGZvcmNlZDpJdX0se3JhY2U6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxpPUx1LmYodCksbj1pLnJlamVjdCxyPWt1KChmdW5jdGlvbigpe3ZhciByPVB1KHQucmVzb2x2ZSk7TXUoZSwoZnVuY3Rpb24oZSl7RHUocix0LGUpLnRoZW4oaS5yZXNvbHZlLG4pfSkpfSkpO3JldHVybiByLmVycm9yJiZuKHIudmFsdWUpLGkucHJvbWlzZX19KTt2YXIgVXU9TCx4dT1TbDt3aSh7dGFyZ2V0OlwiUHJvbWlzZVwiLHN0YXQ6ITAsZm9yY2VkOlRsLkNPTlNUUlVDVE9SfSx7cmVqZWN0OmZ1bmN0aW9uKGUpe3ZhciB0PXh1LmYodGhpcyk7cmV0dXJuIFV1KHQucmVqZWN0LHZvaWQgMCxlKSx0LnByb21pc2V9fSk7dmFyIFZ1PWlpLEZ1PXRlLEJ1PVNsLGp1PWZ1bmN0aW9uKGUsdCl7aWYoVnUoZSksRnUodCkmJnQuY29uc3RydWN0b3I9PT1lKXJldHVybiB0O3ZhciBpPUJ1LmYoZSk7cmV0dXJuKDAsaS5yZXNvbHZlKSh0KSxpLnByb21pc2V9LEd1PXdpLFd1PXRsLEh1PVRsLkNPTlNUUlVDVE9SLEt1PWp1LFl1PWFlKFwiUHJvbWlzZVwiKSxxdT0hSHU7R3Uoe3RhcmdldDpcIlByb21pc2VcIixzdGF0OiEwLGZvcmNlZDp0cnVlfSx7cmVzb2x2ZTpmdW5jdGlvbihlKXtyZXR1cm4gS3UocXUmJnRoaXM9PT1ZdT9XdTp0aGlzLGUpfX0pO3ZhciB6dT1MLEp1PURlLFh1PVNsLFF1PWVsLFp1PVRzO3dpKHt0YXJnZXQ6XCJQcm9taXNlXCIsc3RhdDohMCxmb3JjZWQ6SXV9LHthbGxTZXR0bGVkOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsaT1YdS5mKHQpLG49aS5yZXNvbHZlLHI9aS5yZWplY3Qsbz1RdSgoZnVuY3Rpb24oKXt2YXIgaT1KdSh0LnJlc29sdmUpLHI9W10sbz0wLHM9MTtadShlLChmdW5jdGlvbihlKXt2YXIgYT1vKyssYz0hMTtzKyssenUoaSx0LGUpLnRoZW4oKGZ1bmN0aW9uKGUpe2N8fChjPSEwLHJbYV09e3N0YXR1czpcImZ1bGZpbGxlZFwiLHZhbHVlOmV9LC0tc3x8bihyKSl9KSwoZnVuY3Rpb24oZSl7Y3x8KGM9ITAsclthXT17c3RhdHVzOlwicmVqZWN0ZWRcIixyZWFzb246ZX0sLS1zfHxuKHIpKX0pKX0pKSwtLXN8fG4ocil9KSk7cmV0dXJuIG8uZXJyb3ImJnIoby52YWx1ZSksaS5wcm9taXNlfX0pO3ZhciAkdT1MLGVoPURlLHRoPWFlLGloPVNsLG5oPWVsLHJoPVRzLG9oPVwiTm8gb25lIHByb21pc2UgcmVzb2x2ZWRcIjt3aSh7dGFyZ2V0OlwiUHJvbWlzZVwiLHN0YXQ6ITAsZm9yY2VkOkl1fSx7YW55OmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsaT10aChcIkFnZ3JlZ2F0ZUVycm9yXCIpLG49aWguZih0KSxyPW4ucmVzb2x2ZSxvPW4ucmVqZWN0LHM9bmgoKGZ1bmN0aW9uKCl7dmFyIG49ZWgodC5yZXNvbHZlKSxzPVtdLGE9MCxjPTEsZD0hMTtyaChlLChmdW5jdGlvbihlKXt2YXIgbD1hKyssdT0hMTtjKyssJHUobix0LGUpLnRoZW4oKGZ1bmN0aW9uKGUpe3V8fGR8fChkPSEwLHIoZSkpfSksKGZ1bmN0aW9uKGUpe3V8fGR8fCh1PSEwLHNbbF09ZSwtLWN8fG8obmV3IGkocyxvaCkpKX0pKX0pKSwtLWN8fG8obmV3IGkocyxvaCkpfSkpO3JldHVybiBzLmVycm9yJiZvKHMudmFsdWUpLG4ucHJvbWlzZX19KTt2YXIgc2g9d2ksYWg9dGwsY2g9bixkaD1hZSxsaD13LHVoPUpjLGhoPWp1LHBoPWFoJiZhaC5wcm90b3R5cGU7c2goe3RhcmdldDpcIlByb21pc2VcIixwcm90bzohMCxyZWFsOiEwLGZvcmNlZDohIWFoJiZjaCgoZnVuY3Rpb24oKXtwaC5maW5hbGx5LmNhbGwoe3RoZW46ZnVuY3Rpb24oKXt9fSwoZnVuY3Rpb24oKXt9KSl9KSl9LHtmaW5hbGx5OmZ1bmN0aW9uKGUpe3ZhciB0PXVoKHRoaXMsZGgoXCJQcm9taXNlXCIpKSxpPWxoKGUpO3JldHVybiB0aGlzLnRoZW4oaT9mdW5jdGlvbihpKXtyZXR1cm4gaGgodCxlKCkpLnRoZW4oKGZ1bmN0aW9uKCl7cmV0dXJuIGl9KSl9OmUsaT9mdW5jdGlvbihpKXtyZXR1cm4gaGgodCxlKCkpLnRoZW4oKGZ1bmN0aW9uKCl7dGhyb3cgaX0pKX06ZSl9fSk7dmFyIF9oPWQsRWg9TGksZmg9Zm4sbWg9SixUaD1faChcIlwiLmNoYXJBdCksU2g9X2goXCJcIi5jaGFyQ29kZUF0KSxnaD1faChcIlwiLnNsaWNlKSxSaD1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCxpKXt2YXIgbixyLG89ZmgobWgodCkpLHM9RWgoaSksYT1vLmxlbmd0aDtyZXR1cm4gczwwfHxzPj1hP2U/XCJcIjp2b2lkIDA6KG49U2gobyxzKSk8NTUyOTZ8fG4+NTYzMTl8fHMrMT09PWF8fChyPVNoKG8scysxKSk8NTYzMjB8fHI+NTczNDM/ZT9UaChvLHMpOm46ZT9naChvLHMscysyKTpyLTU2MzIwKyhuLTU1Mjk2PDwxMCkrNjU1MzZ9fSxDaD17Y29kZUF0OlJoKCExKSxjaGFyQXQ6UmgoITApfSxJaD1DaC5jaGFyQXQsdmg9Zm4seWg9cmEsQWg9dGMsYmg9aWMsd2g9XCJTdHJpbmcgSXRlcmF0b3JcIixPaD15aC5zZXQsTmg9eWguZ2V0dGVyRm9yKHdoKTtBaChTdHJpbmcsXCJTdHJpbmdcIiwoZnVuY3Rpb24oZSl7T2godGhpcyx7dHlwZTp3aCxzdHJpbmc6dmgoZSksaW5kZXg6MH0pfSksKGZ1bmN0aW9uKCl7dmFyIGUsdD1OaCh0aGlzKSxpPXQuc3RyaW5nLG49dC5pbmRleDtyZXR1cm4gbj49aS5sZW5ndGg/Ymgodm9pZCAwLCEwKTooZT1JaChpLG4pLHQuaW5kZXgrPWUubGVuZ3RoLGJoKGUsITEpKX0pKTt2YXIgRGg9aWUuUHJvbWlzZSxQaD17Q1NTUnVsZUxpc3Q6MCxDU1NTdHlsZURlY2xhcmF0aW9uOjAsQ1NTVmFsdWVMaXN0OjAsQ2xpZW50UmVjdExpc3Q6MCxET01SZWN0TGlzdDowLERPTVN0cmluZ0xpc3Q6MCxET01Ub2tlbkxpc3Q6MSxEYXRhVHJhbnNmZXJJdGVtTGlzdDowLEZpbGVMaXN0OjAsSFRNTEFsbENvbGxlY3Rpb246MCxIVE1MQ29sbGVjdGlvbjowLEhUTUxGb3JtRWxlbWVudDowLEhUTUxTZWxlY3RFbGVtZW50OjAsTWVkaWFMaXN0OjAsTWltZVR5cGVBcnJheTowLE5hbWVkTm9kZU1hcDowLE5vZGVMaXN0OjEsUGFpbnRSZXF1ZXN0TGlzdDowLFBsdWdpbjowLFBsdWdpbkFycmF5OjAsU1ZHTGVuZ3RoTGlzdDowLFNWR051bWJlckxpc3Q6MCxTVkdQYXRoU2VnTGlzdDowLFNWR1BvaW50TGlzdDowLFNWR1N0cmluZ0xpc3Q6MCxTVkdUcmFuc2Zvcm1MaXN0OjAsU291cmNlQnVmZmVyTGlzdDowLFN0eWxlU2hlZXRMaXN0OjAsVGV4dFRyYWNrQ3VlTGlzdDowLFRleHRUcmFja0xpc3Q6MCxUb3VjaExpc3Q6MH0sTGg9aCxraD1wbixNaD1maSxVaD14byx4aD1odChcInRvU3RyaW5nVGFnXCIpO2Zvcih2YXIgVmggaW4gUGgpe3ZhciBGaD1MaFtWaF0sQmg9RmgmJkZoLnByb3RvdHlwZTtCaCYma2goQmgpIT09eGgmJk1oKEJoLHhoLFZoKSxVaFtWaF09VWguQXJyYXl9dmFyIGpoPURoLEdoPWkoamgpO2NvbnN0IFdoPWlyO2Z1bmN0aW9uIEhoKGUsdCl7Y29uc3QgaT1lJiZlLm5hdmlnYXRvcjtpZighaS5tZWRpYURldmljZXMpcmV0dXJuO2NvbnN0IG49ZnVuY3Rpb24oZSl7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGV8fGUubWFuZGF0b3J5fHxlLm9wdGlvbmFsKXJldHVybiBlO2NvbnN0IHQ9e307cmV0dXJuIE9iamVjdC5rZXlzKGUpLmZvckVhY2goKGk9PntpZihcInJlcXVpcmVcIj09PWl8fFwiYWR2YW5jZWRcIj09PWl8fFwibWVkaWFTb3VyY2VcIj09PWkpcmV0dXJuO2NvbnN0IG49XCJvYmplY3RcIj09dHlwZW9mIGVbaV0/ZVtpXTp7aWRlYWw6ZVtpXX07dm9pZCAwIT09bi5leGFjdCYmXCJudW1iZXJcIj09dHlwZW9mIG4uZXhhY3QmJihuLm1pbj1uLm1heD1uLmV4YWN0KTtjb25zdCByPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU/ZSt0LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK3Quc2xpY2UoMSk6XCJkZXZpY2VJZFwiPT09dD9cInNvdXJjZUlkXCI6dH07aWYodm9pZCAwIT09bi5pZGVhbCl7dC5vcHRpb25hbD10Lm9wdGlvbmFsfHxbXTtsZXQgZT17fTtcIm51bWJlclwiPT10eXBlb2Ygbi5pZGVhbD8oZVtyKFwibWluXCIsaSldPW4uaWRlYWwsdC5vcHRpb25hbC5wdXNoKGUpLGU9e30sZVtyKFwibWF4XCIsaSldPW4uaWRlYWwsdC5vcHRpb25hbC5wdXNoKGUpKTooZVtyKFwiXCIsaSldPW4uaWRlYWwsdC5vcHRpb25hbC5wdXNoKGUpKX12b2lkIDAhPT1uLmV4YWN0JiZcIm51bWJlclwiIT10eXBlb2Ygbi5leGFjdD8odC5tYW5kYXRvcnk9dC5tYW5kYXRvcnl8fHt9LHQubWFuZGF0b3J5W3IoXCJcIixpKV09bi5leGFjdCk6W1wibWluXCIsXCJtYXhcIl0uZm9yRWFjaCgoZT0+e3ZvaWQgMCE9PW5bZV0mJih0Lm1hbmRhdG9yeT10Lm1hbmRhdG9yeXx8e30sdC5tYW5kYXRvcnlbcihlLGkpXT1uW2VdKX0pKX0pKSxlLmFkdmFuY2VkJiYodC5vcHRpb25hbD0odC5vcHRpb25hbHx8W10pLmNvbmNhdChlLmFkdmFuY2VkKSksdH0scj1mdW5jdGlvbihlLHIpe2lmKHQudmVyc2lvbj49NjEpcmV0dXJuIHIoZSk7aWYoKGU9SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShlKSkpJiZcIm9iamVjdFwiPT10eXBlb2YgZS5hdWRpbyl7Y29uc3QgdD1mdW5jdGlvbihlLHQsaSl7dCBpbiBlJiYhKGkgaW4gZSkmJihlW2ldPWVbdF0sZGVsZXRlIGVbdF0pfTt0KChlPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZSkpKS5hdWRpbyxcImF1dG9HYWluQ29udHJvbFwiLFwiZ29vZ0F1dG9HYWluQ29udHJvbFwiKSx0KGUuYXVkaW8sXCJub2lzZVN1cHByZXNzaW9uXCIsXCJnb29nTm9pc2VTdXBwcmVzc2lvblwiKSxlLmF1ZGlvPW4oZS5hdWRpbyl9aWYoZSYmXCJvYmplY3RcIj09dHlwZW9mIGUudmlkZW8pe2xldCBvPWUudmlkZW8uZmFjaW5nTW9kZTtvPW8mJihcIm9iamVjdFwiPT10eXBlb2Ygbz9vOntpZGVhbDpvfSk7Y29uc3Qgcz10LnZlcnNpb248NjY7aWYobyYmKFwidXNlclwiPT09by5leGFjdHx8XCJlbnZpcm9ubWVudFwiPT09by5leGFjdHx8XCJ1c2VyXCI9PT1vLmlkZWFsfHxcImVudmlyb25tZW50XCI9PT1vLmlkZWFsKSYmKCFpLm1lZGlhRGV2aWNlcy5nZXRTdXBwb3J0ZWRDb25zdHJhaW50c3x8IWkubWVkaWFEZXZpY2VzLmdldFN1cHBvcnRlZENvbnN0cmFpbnRzKCkuZmFjaW5nTW9kZXx8cykpe2xldCB0O2lmKGRlbGV0ZSBlLnZpZGVvLmZhY2luZ01vZGUsXCJlbnZpcm9ubWVudFwiPT09by5leGFjdHx8XCJlbnZpcm9ubWVudFwiPT09by5pZGVhbD90PVtcImJhY2tcIixcInJlYXJcIl06XCJ1c2VyXCIhPT1vLmV4YWN0JiZcInVzZXJcIiE9PW8uaWRlYWx8fCh0PVtcImZyb250XCJdKSx0KXJldHVybiBpLm1lZGlhRGV2aWNlcy5lbnVtZXJhdGVEZXZpY2VzKCkudGhlbigoaT0+e2xldCBzPShpPWkuZmlsdGVyKChlPT5cInZpZGVvaW5wdXRcIj09PWUua2luZCkpKS5maW5kKChlPT50LnNvbWUoKHQ9Pnt2YXIgaTtyZXR1cm4gRG4oaT1lLmxhYmVsLnRvTG93ZXJDYXNlKCkpLmNhbGwoaSx0KX0pKSkpO3JldHVybiFzJiZpLmxlbmd0aCYmRG4odCkuY2FsbCh0LFwiYmFja1wiKSYmKHM9aVtpLmxlbmd0aC0xXSkscyYmKGUudmlkZW8uZGV2aWNlSWQ9by5leGFjdD97ZXhhY3Q6cy5kZXZpY2VJZH06e2lkZWFsOnMuZGV2aWNlSWR9KSxlLnZpZGVvPW4oZS52aWRlbyksV2goXCJjaHJvbWU6IFwiK0pTT04uc3RyaW5naWZ5KGUpKSxyKGUpfSkpfWUudmlkZW89bihlLnZpZGVvKX1yZXR1cm4gV2goXCJjaHJvbWU6IFwiK0pTT04uc3RyaW5naWZ5KGUpKSxyKGUpfSxvPWZ1bmN0aW9uKGUpe3JldHVybiB0LnZlcnNpb24+PTY0P2U6e25hbWU6e1Blcm1pc3Npb25EZW5pZWRFcnJvcjpcIk5vdEFsbG93ZWRFcnJvclwiLFBlcm1pc3Npb25EaXNtaXNzZWRFcnJvcjpcIk5vdEFsbG93ZWRFcnJvclwiLEludmFsaWRTdGF0ZUVycm9yOlwiTm90QWxsb3dlZEVycm9yXCIsRGV2aWNlc05vdEZvdW5kRXJyb3I6XCJOb3RGb3VuZEVycm9yXCIsQ29uc3RyYWludE5vdFNhdGlzZmllZEVycm9yOlwiT3ZlcmNvbnN0cmFpbmVkRXJyb3JcIixUcmFja1N0YXJ0RXJyb3I6XCJOb3RSZWFkYWJsZUVycm9yXCIsTWVkaWFEZXZpY2VGYWlsZWREdWVUb1NodXRkb3duOlwiTm90QWxsb3dlZEVycm9yXCIsTWVkaWFEZXZpY2VLaWxsU3dpdGNoT246XCJOb3RBbGxvd2VkRXJyb3JcIixUYWJDYXB0dXJlRXJyb3I6XCJBYm9ydEVycm9yXCIsU2NyZWVuQ2FwdHVyZUVycm9yOlwiQWJvcnRFcnJvclwiLERldmljZUNhcHR1cmVFcnJvcjpcIkFib3J0RXJyb3JcIn1bZS5uYW1lXXx8ZS5uYW1lLG1lc3NhZ2U6ZS5tZXNzYWdlLGNvbnN0cmFpbnQ6ZS5jb25zdHJhaW50fHxlLmNvbnN0cmFpbnROYW1lLHRvU3RyaW5nKCl7cmV0dXJuIHRoaXMubmFtZSsodGhpcy5tZXNzYWdlJiZcIjogXCIpK3RoaXMubWVzc2FnZX19fTtpZihpLmdldFVzZXJNZWRpYT1mdW5jdGlvbihlLHQsbil7cihlLChlPT57aS53ZWJraXRHZXRVc2VyTWVkaWEoZSx0LChlPT57biYmbihvKGUpKX0pKX0pKX0uYmluZChpKSxpLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEpe2NvbnN0IGU9aS5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhLmJpbmQoaS5tZWRpYURldmljZXMpO2kubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYT1mdW5jdGlvbih0KXtyZXR1cm4gcih0LCh0PT5lKHQpLnRoZW4oKGU9PntpZih0LmF1ZGlvJiYhZS5nZXRBdWRpb1RyYWNrcygpLmxlbmd0aHx8dC52aWRlbyYmIWUuZ2V0VmlkZW9UcmFja3MoKS5sZW5ndGgpdGhyb3cgZS5nZXRUcmFja3MoKS5mb3JFYWNoKChlPT57ZS5zdG9wKCl9KSksbmV3IERPTUV4Y2VwdGlvbihcIlwiLFwiTm90Rm91bmRFcnJvclwiKTtyZXR1cm4gZX0pLChlPT5HaC5yZWplY3QobyhlKSkpKSkpfX19ZnVuY3Rpb24gS2goZSl7ZS5NZWRpYVN0cmVhbT1lLk1lZGlhU3RyZWFtfHxlLndlYmtpdE1lZGlhU3RyZWFtfWZ1bmN0aW9uIFloKGUpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLlJUQ1BlZXJDb25uZWN0aW9uJiYhKFwib250cmFja1wiaW4gZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUsXCJvbnRyYWNrXCIse2dldCgpe3JldHVybiB0aGlzLl9vbnRyYWNrfSxzZXQoZSl7dGhpcy5fb250cmFjayYmdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhY2tcIix0aGlzLl9vbnRyYWNrKSx0aGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFja1wiLHRoaXMuX29udHJhY2s9ZSl9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSk7Y29uc3QgdD1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5zZXRSZW1vdGVEZXNjcmlwdGlvbjtlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5zZXRSZW1vdGVEZXNjcmlwdGlvbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9vbnRyYWNrcG9seXx8KHRoaXMuX29udHJhY2twb2x5PXQ9Pnt0LnN0cmVhbS5hZGRFdmVudExpc3RlbmVyKFwiYWRkdHJhY2tcIiwoaT0+e2xldCBuO249ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuZ2V0UmVjZWl2ZXJzP3RoaXMuZ2V0UmVjZWl2ZXJzKCkuZmluZCgoZT0+ZS50cmFjayYmZS50cmFjay5pZD09PWkudHJhY2suaWQpKTp7dHJhY2s6aS50cmFja307Y29uc3Qgcj1uZXcgRXZlbnQoXCJ0cmFja1wiKTtyLnRyYWNrPWkudHJhY2ssci5yZWNlaXZlcj1uLHIudHJhbnNjZWl2ZXI9e3JlY2VpdmVyOm59LHIuc3RyZWFtcz1bdC5zdHJlYW1dLHRoaXMuZGlzcGF0Y2hFdmVudChyKX0pKSx0LnN0cmVhbS5nZXRUcmFja3MoKS5mb3JFYWNoKChpPT57bGV0IG47bj1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5nZXRSZWNlaXZlcnM/dGhpcy5nZXRSZWNlaXZlcnMoKS5maW5kKChlPT5lLnRyYWNrJiZlLnRyYWNrLmlkPT09aS5pZCkpOnt0cmFjazppfTtjb25zdCByPW5ldyBFdmVudChcInRyYWNrXCIpO3IudHJhY2s9aSxyLnJlY2VpdmVyPW4sci50cmFuc2NlaXZlcj17cmVjZWl2ZXI6bn0sci5zdHJlYW1zPVt0LnN0cmVhbV0sdGhpcy5kaXNwYXRjaEV2ZW50KHIpfSkpfSx0aGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJhZGRzdHJlYW1cIix0aGlzLl9vbnRyYWNrcG9seSkpLHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfX1lbHNlICRuKGUsXCJ0cmFja1wiLChlPT4oZS50cmFuc2NlaXZlcnx8T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJ0cmFuc2NlaXZlclwiLHt2YWx1ZTp7cmVjZWl2ZXI6ZS5yZWNlaXZlcn19KSxlKSkpfWZ1bmN0aW9uIHFoKGUpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLlJUQ1BlZXJDb25uZWN0aW9uJiYhKFwiZ2V0U2VuZGVyc1wiaW4gZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUpJiZcImNyZWF0ZURUTUZTZW5kZXJcImluIGUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlKXtjb25zdCB0PWZ1bmN0aW9uKGUsdCl7cmV0dXJue3RyYWNrOnQsZ2V0IGR0bWYoKXtyZXR1cm4gdm9pZCAwPT09dGhpcy5fZHRtZiYmKFwiYXVkaW9cIj09PXQua2luZD90aGlzLl9kdG1mPWUuY3JlYXRlRFRNRlNlbmRlcih0KTp0aGlzLl9kdG1mPW51bGwpLHRoaXMuX2R0bWZ9LF9wYzplfX07aWYoIWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmdldFNlbmRlcnMpe2UuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmdldFNlbmRlcnM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2VuZGVycz10aGlzLl9zZW5kZXJzfHxbXSx0aGlzLl9zZW5kZXJzLnNsaWNlKCl9O2NvbnN0IGk9ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuYWRkVHJhY2s7ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuYWRkVHJhY2s9ZnVuY3Rpb24oZSxuKXtsZXQgcj1pLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gcnx8KHI9dCh0aGlzLGUpLHRoaXMuX3NlbmRlcnMucHVzaChyKSkscn07Y29uc3Qgbj1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5yZW1vdmVUcmFjaztlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5yZW1vdmVUcmFjaz1mdW5jdGlvbihlKXtuLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtjb25zdCB0PXRoaXMuX3NlbmRlcnMuaW5kZXhPZihlKTstMSE9PXQmJnRoaXMuX3NlbmRlcnMuc3BsaWNlKHQsMSl9fWNvbnN0IGk9ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuYWRkU3RyZWFtO2UuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmFkZFN0cmVhbT1mdW5jdGlvbihlKXt0aGlzLl9zZW5kZXJzPXRoaXMuX3NlbmRlcnN8fFtdLGkuYXBwbHkodGhpcyxbZV0pLGUuZ2V0VHJhY2tzKCkuZm9yRWFjaCgoZT0+e3RoaXMuX3NlbmRlcnMucHVzaCh0KHRoaXMsZSkpfSkpfTtjb25zdCBuPWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLnJlbW92ZVN0cmVhbTtlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5yZW1vdmVTdHJlYW09ZnVuY3Rpb24oZSl7dGhpcy5fc2VuZGVycz10aGlzLl9zZW5kZXJzfHxbXSxuLmFwcGx5KHRoaXMsW2VdKSxlLmdldFRyYWNrcygpLmZvckVhY2goKGU9Pntjb25zdCB0PXRoaXMuX3NlbmRlcnMuZmluZCgodD0+dC50cmFjaz09PWUpKTt0JiZ0aGlzLl9zZW5kZXJzLnNwbGljZSh0aGlzLl9zZW5kZXJzLmluZGV4T2YodCksMSl9KSl9fWVsc2UgaWYoXCJvYmplY3RcIj09dHlwZW9mIGUmJmUuUlRDUGVlckNvbm5lY3Rpb24mJlwiZ2V0U2VuZGVyc1wiaW4gZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUmJlwiY3JlYXRlRFRNRlNlbmRlclwiaW4gZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUmJmUuUlRDUnRwU2VuZGVyJiYhKFwiZHRtZlwiaW4gZS5SVENSdHBTZW5kZXIucHJvdG90eXBlKSl7Y29uc3QgdD1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5nZXRTZW5kZXJzO2UuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmdldFNlbmRlcnM9ZnVuY3Rpb24oKXtjb25zdCBlPXQuYXBwbHkodGhpcyxbXSk7cmV0dXJuIGUuZm9yRWFjaCgoZT0+ZS5fcGM9dGhpcykpLGV9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLlJUQ1J0cFNlbmRlci5wcm90b3R5cGUsXCJkdG1mXCIse2dldCgpe3JldHVybiB2b2lkIDA9PT10aGlzLl9kdG1mJiYoXCJhdWRpb1wiPT09dGhpcy50cmFjay5raW5kP3RoaXMuX2R0bWY9dGhpcy5fcGMuY3JlYXRlRFRNRlNlbmRlcih0aGlzLnRyYWNrKTp0aGlzLl9kdG1mPW51bGwpLHRoaXMuX2R0bWZ9fSl9fWZ1bmN0aW9uIHpoKGUpe2lmKCFlLlJUQ1BlZXJDb25uZWN0aW9uKXJldHVybjtjb25zdCB0PWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmdldFN0YXRzO2UuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmdldFN0YXRzPWZ1bmN0aW9uKCl7Y29uc3RbZSxpLG5dPWFyZ3VtZW50cztpZihhcmd1bWVudHMubGVuZ3RoPjAmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGUpcmV0dXJuIHQuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKDA9PT10Lmxlbmd0aCYmKDA9PT1hcmd1bWVudHMubGVuZ3RofHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKSlyZXR1cm4gdC5hcHBseSh0aGlzLFtdKTtjb25zdCByPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9e307cmV0dXJuIGUucmVzdWx0KCkuZm9yRWFjaCgoZT0+e2NvbnN0IGk9e2lkOmUuaWQsdGltZXN0YW1wOmUudGltZXN0YW1wLHR5cGU6e2xvY2FsY2FuZGlkYXRlOlwibG9jYWwtY2FuZGlkYXRlXCIscmVtb3RlY2FuZGlkYXRlOlwicmVtb3RlLWNhbmRpZGF0ZVwifVtlLnR5cGVdfHxlLnR5cGV9O2UubmFtZXMoKS5mb3JFYWNoKCh0PT57aVt0XT1lLnN0YXQodCl9KSksdFtpLmlkXT1pfSkpLHR9LG89ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBNYXAoT2JqZWN0LmtleXMoZSkubWFwKCh0PT5bdCxlW3RdXSkpKX07aWYoYXJndW1lbnRzLmxlbmd0aD49Mil7Y29uc3Qgbj1mdW5jdGlvbihlKXtpKG8ocihlKSkpfTtyZXR1cm4gdC5hcHBseSh0aGlzLFtuLGVdKX1yZXR1cm4gbmV3IEdoKCgoZSxpKT0+e3QuYXBwbHkodGhpcyxbZnVuY3Rpb24odCl7ZShvKHIodCkpKX0saV0pfSkpLnRoZW4oaSxuKX19ZnVuY3Rpb24gSmgoZSl7aWYoIShcIm9iamVjdFwiPT10eXBlb2YgZSYmZS5SVENQZWVyQ29ubmVjdGlvbiYmZS5SVENSdHBTZW5kZXImJmUuUlRDUnRwUmVjZWl2ZXIpKXJldHVybjtpZighKFwiZ2V0U3RhdHNcImluIGUuUlRDUnRwU2VuZGVyLnByb3RvdHlwZSkpe2NvbnN0IHQ9ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuZ2V0U2VuZGVyczt0JiYoZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuZ2V0U2VuZGVycz1mdW5jdGlvbigpe2NvbnN0IGU9dC5hcHBseSh0aGlzLFtdKTtyZXR1cm4gZS5mb3JFYWNoKChlPT5lLl9wYz10aGlzKSksZX0pO2NvbnN0IGk9ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuYWRkVHJhY2s7aSYmKGUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmFkZFRyYWNrPWZ1bmN0aW9uKCl7Y29uc3QgZT1pLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gZS5fcGM9dGhpcyxlfSksZS5SVENSdHBTZW5kZXIucHJvdG90eXBlLmdldFN0YXRzPWZ1bmN0aW9uKCl7Y29uc3QgZT10aGlzO3JldHVybiB0aGlzLl9wYy5nZXRTdGF0cygpLnRoZW4oKHQ9PmFyKHQsZS50cmFjaywhMCkpKX19aWYoIShcImdldFN0YXRzXCJpbiBlLlJUQ1J0cFJlY2VpdmVyLnByb3RvdHlwZSkpe2NvbnN0IHQ9ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuZ2V0UmVjZWl2ZXJzO3QmJihlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5nZXRSZWNlaXZlcnM9ZnVuY3Rpb24oKXtjb25zdCBlPXQuYXBwbHkodGhpcyxbXSk7cmV0dXJuIGUuZm9yRWFjaCgoZT0+ZS5fcGM9dGhpcykpLGV9KSwkbihlLFwidHJhY2tcIiwoZT0+KGUucmVjZWl2ZXIuX3BjPWUuc3JjRWxlbWVudCxlKSkpLGUuUlRDUnRwUmVjZWl2ZXIucHJvdG90eXBlLmdldFN0YXRzPWZ1bmN0aW9uKCl7Y29uc3QgZT10aGlzO3JldHVybiB0aGlzLl9wYy5nZXRTdGF0cygpLnRoZW4oKHQ9PmFyKHQsZS50cmFjaywhMSkpKX19aWYoIShcImdldFN0YXRzXCJpbiBlLlJUQ1J0cFNlbmRlci5wcm90b3R5cGUpfHwhKFwiZ2V0U3RhdHNcImluIGUuUlRDUnRwUmVjZWl2ZXIucHJvdG90eXBlKSlyZXR1cm47Y29uc3QgdD1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5nZXRTdGF0cztlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5nZXRTdGF0cz1mdW5jdGlvbigpe2lmKGFyZ3VtZW50cy5sZW5ndGg+MCYmYXJndW1lbnRzWzBdaW5zdGFuY2VvZiBlLk1lZGlhU3RyZWFtVHJhY2spe2NvbnN0IGU9YXJndW1lbnRzWzBdO2xldCB0LGksbjtyZXR1cm4gdGhpcy5nZXRTZW5kZXJzKCkuZm9yRWFjaCgoaT0+e2kudHJhY2s9PT1lJiYodD9uPSEwOnQ9aSl9KSksdGhpcy5nZXRSZWNlaXZlcnMoKS5mb3JFYWNoKCh0PT4odC50cmFjaz09PWUmJihpP249ITA6aT10KSx0LnRyYWNrPT09ZSkpKSxufHx0JiZpP0doLnJlamVjdChuZXcgRE9NRXhjZXB0aW9uKFwiVGhlcmUgYXJlIG1vcmUgdGhhbiBvbmUgc2VuZGVyIG9yIHJlY2VpdmVyIGZvciB0aGUgdHJhY2suXCIsXCJJbnZhbGlkQWNjZXNzRXJyb3JcIikpOnQ/dC5nZXRTdGF0cygpOmk/aS5nZXRTdGF0cygpOkdoLnJlamVjdChuZXcgRE9NRXhjZXB0aW9uKFwiVGhlcmUgaXMgbm8gc2VuZGVyIG9yIHJlY2VpdmVyIGZvciB0aGUgdHJhY2suXCIsXCJJbnZhbGlkQWNjZXNzRXJyb3JcIikpfXJldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX19ZnVuY3Rpb24gWGgoZSl7ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuZ2V0TG9jYWxTdHJlYW1zPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NoaW1tZWRMb2NhbFN0cmVhbXM9dGhpcy5fc2hpbW1lZExvY2FsU3RyZWFtc3x8e30sT2JqZWN0LmtleXModGhpcy5fc2hpbW1lZExvY2FsU3RyZWFtcykubWFwKChlPT50aGlzLl9zaGltbWVkTG9jYWxTdHJlYW1zW2VdWzBdKSl9O2NvbnN0IHQ9ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuYWRkVHJhY2s7ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuYWRkVHJhY2s9ZnVuY3Rpb24oZSxpKXtpZighaSlyZXR1cm4gdC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5fc2hpbW1lZExvY2FsU3RyZWFtcz10aGlzLl9zaGltbWVkTG9jYWxTdHJlYW1zfHx7fTtjb25zdCBuPXQuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiB0aGlzLl9zaGltbWVkTG9jYWxTdHJlYW1zW2kuaWRdPy0xPT09dGhpcy5fc2hpbW1lZExvY2FsU3RyZWFtc1tpLmlkXS5pbmRleE9mKG4pJiZ0aGlzLl9zaGltbWVkTG9jYWxTdHJlYW1zW2kuaWRdLnB1c2gobik6dGhpcy5fc2hpbW1lZExvY2FsU3RyZWFtc1tpLmlkXT1baSxuXSxufTtjb25zdCBpPWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmFkZFN0cmVhbTtlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5hZGRTdHJlYW09ZnVuY3Rpb24oZSl7dGhpcy5fc2hpbW1lZExvY2FsU3RyZWFtcz10aGlzLl9zaGltbWVkTG9jYWxTdHJlYW1zfHx7fSxlLmdldFRyYWNrcygpLmZvckVhY2goKGU9Pntjb25zdCB0PXRoaXMuZ2V0U2VuZGVycygpLmZpbmQoKHQ9PnQudHJhY2s9PT1lKSk7aWYodCl0aHJvdyBuZXcgRE9NRXhjZXB0aW9uKFwiVHJhY2sgYWxyZWFkeSBleGlzdHMuXCIsXCJJbnZhbGlkQWNjZXNzRXJyb3JcIil9KSk7Y29uc3QgdD10aGlzLmdldFNlbmRlcnMoKTtpLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtjb25zdCBuPXRoaXMuZ2V0U2VuZGVycygpLmZpbHRlcigoZT0+LTE9PT10LmluZGV4T2YoZSkpKTt0aGlzLl9zaGltbWVkTG9jYWxTdHJlYW1zW2UuaWRdPVtlXS5jb25jYXQobil9O2NvbnN0IG49ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUucmVtb3ZlU3RyZWFtO2UuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLnJlbW92ZVN0cmVhbT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fc2hpbW1lZExvY2FsU3RyZWFtcz10aGlzLl9zaGltbWVkTG9jYWxTdHJlYW1zfHx7fSxkZWxldGUgdGhpcy5fc2hpbW1lZExvY2FsU3RyZWFtc1tlLmlkXSxuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07Y29uc3Qgcj1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5yZW1vdmVUcmFjaztlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5yZW1vdmVUcmFjaz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fc2hpbW1lZExvY2FsU3RyZWFtcz10aGlzLl9zaGltbWVkTG9jYWxTdHJlYW1zfHx7fSxlJiZPYmplY3Qua2V5cyh0aGlzLl9zaGltbWVkTG9jYWxTdHJlYW1zKS5mb3JFYWNoKCh0PT57Y29uc3QgaT10aGlzLl9zaGltbWVkTG9jYWxTdHJlYW1zW3RdLmluZGV4T2YoZSk7LTEhPT1pJiZ0aGlzLl9zaGltbWVkTG9jYWxTdHJlYW1zW3RdLnNwbGljZShpLDEpLDE9PT10aGlzLl9zaGltbWVkTG9jYWxTdHJlYW1zW3RdLmxlbmd0aCYmZGVsZXRlIHRoaXMuX3NoaW1tZWRMb2NhbFN0cmVhbXNbdF19KSksci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fWZ1bmN0aW9uIFFoKGUsdCl7aWYoIWUuUlRDUGVlckNvbm5lY3Rpb24pcmV0dXJuO2lmKGUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmFkZFRyYWNrJiZ0LnZlcnNpb24+PTY1KXJldHVybiBYaChlKTtjb25zdCBpPWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmdldExvY2FsU3RyZWFtcztlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5nZXRMb2NhbFN0cmVhbXM9ZnVuY3Rpb24oKXtjb25zdCBlPWkuYXBwbHkodGhpcyk7cmV0dXJuIHRoaXMuX3JldmVyc2VTdHJlYW1zPXRoaXMuX3JldmVyc2VTdHJlYW1zfHx7fSxlLm1hcCgoZT0+dGhpcy5fcmV2ZXJzZVN0cmVhbXNbZS5pZF0pKX07Y29uc3Qgbj1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5hZGRTdHJlYW07ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuYWRkU3RyZWFtPWZ1bmN0aW9uKHQpe2lmKHRoaXMuX3N0cmVhbXM9dGhpcy5fc3RyZWFtc3x8e30sdGhpcy5fcmV2ZXJzZVN0cmVhbXM9dGhpcy5fcmV2ZXJzZVN0cmVhbXN8fHt9LHQuZ2V0VHJhY2tzKCkuZm9yRWFjaCgoZT0+e2NvbnN0IHQ9dGhpcy5nZXRTZW5kZXJzKCkuZmluZCgodD0+dC50cmFjaz09PWUpKTtpZih0KXRocm93IG5ldyBET01FeGNlcHRpb24oXCJUcmFjayBhbHJlYWR5IGV4aXN0cy5cIixcIkludmFsaWRBY2Nlc3NFcnJvclwiKX0pKSwhdGhpcy5fcmV2ZXJzZVN0cmVhbXNbdC5pZF0pe2NvbnN0IGk9bmV3IGUuTWVkaWFTdHJlYW0odC5nZXRUcmFja3MoKSk7dGhpcy5fc3RyZWFtc1t0LmlkXT1pLHRoaXMuX3JldmVyc2VTdHJlYW1zW2kuaWRdPXQsdD1pfW4uYXBwbHkodGhpcyxbdF0pfTtjb25zdCByPWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLnJlbW92ZVN0cmVhbTtmdW5jdGlvbiBvKGUsdCl7bGV0IGk9dC5zZHA7cmV0dXJuIE9iamVjdC5rZXlzKGUuX3JldmVyc2VTdHJlYW1zfHxbXSkuZm9yRWFjaCgodD0+e2NvbnN0IG49ZS5fcmV2ZXJzZVN0cmVhbXNbdF0scj1lLl9zdHJlYW1zW24uaWRdO2k9aS5yZXBsYWNlKG5ldyBSZWdFeHAoci5pZCxcImdcIiksbi5pZCl9KSksbmV3IFJUQ1Nlc3Npb25EZXNjcmlwdGlvbih7dHlwZTp0LnR5cGUsc2RwOml9KX1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5yZW1vdmVTdHJlYW09ZnVuY3Rpb24oZSl7dGhpcy5fc3RyZWFtcz10aGlzLl9zdHJlYW1zfHx7fSx0aGlzLl9yZXZlcnNlU3RyZWFtcz10aGlzLl9yZXZlcnNlU3RyZWFtc3x8e30sci5hcHBseSh0aGlzLFt0aGlzLl9zdHJlYW1zW2UuaWRdfHxlXSksZGVsZXRlIHRoaXMuX3JldmVyc2VTdHJlYW1zW3RoaXMuX3N0cmVhbXNbZS5pZF0/dGhpcy5fc3RyZWFtc1tlLmlkXS5pZDplLmlkXSxkZWxldGUgdGhpcy5fc3RyZWFtc1tlLmlkXX0sZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuYWRkVHJhY2s9ZnVuY3Rpb24odCxpKXtpZihcImNsb3NlZFwiPT09dGhpcy5zaWduYWxpbmdTdGF0ZSl0aHJvdyBuZXcgRE9NRXhjZXB0aW9uKFwiVGhlIFJUQ1BlZXJDb25uZWN0aW9uJ3Mgc2lnbmFsaW5nU3RhdGUgaXMgJ2Nsb3NlZCcuXCIsXCJJbnZhbGlkU3RhdGVFcnJvclwiKTtjb25zdCBuPVtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO2lmKDEhPT1uLmxlbmd0aHx8IW5bMF0uZ2V0VHJhY2tzKCkuZmluZCgoZT0+ZT09PXQpKSl0aHJvdyBuZXcgRE9NRXhjZXB0aW9uKFwiVGhlIGFkYXB0ZXIuanMgYWRkVHJhY2sgcG9seWZpbGwgb25seSBzdXBwb3J0cyBhIHNpbmdsZSAgc3RyZWFtIHdoaWNoIGlzIGFzc29jaWF0ZWQgd2l0aCB0aGUgc3BlY2lmaWVkIHRyYWNrLlwiLFwiTm90U3VwcG9ydGVkRXJyb3JcIik7Y29uc3Qgcj10aGlzLmdldFNlbmRlcnMoKS5maW5kKChlPT5lLnRyYWNrPT09dCkpO2lmKHIpdGhyb3cgbmV3IERPTUV4Y2VwdGlvbihcIlRyYWNrIGFscmVhZHkgZXhpc3RzLlwiLFwiSW52YWxpZEFjY2Vzc0Vycm9yXCIpO3RoaXMuX3N0cmVhbXM9dGhpcy5fc3RyZWFtc3x8e30sdGhpcy5fcmV2ZXJzZVN0cmVhbXM9dGhpcy5fcmV2ZXJzZVN0cmVhbXN8fHt9O2NvbnN0IG89dGhpcy5fc3RyZWFtc1tpLmlkXTtpZihvKW8uYWRkVHJhY2sodCksR2gucmVzb2x2ZSgpLnRoZW4oKCgpPT57dGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChcIm5lZ290aWF0aW9ubmVlZGVkXCIpKX0pKTtlbHNle2NvbnN0IG49bmV3IGUuTWVkaWFTdHJlYW0oW3RdKTt0aGlzLl9zdHJlYW1zW2kuaWRdPW4sdGhpcy5fcmV2ZXJzZVN0cmVhbXNbbi5pZF09aSx0aGlzLmFkZFN0cmVhbShuKX1yZXR1cm4gdGhpcy5nZXRTZW5kZXJzKCkuZmluZCgoZT0+ZS50cmFjaz09PXQpKX0sW1wiY3JlYXRlT2ZmZXJcIixcImNyZWF0ZUFuc3dlclwiXS5mb3JFYWNoKChmdW5jdGlvbih0KXtjb25zdCBpPWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlW3RdLG49e1t0XSgpe2NvbnN0IGU9YXJndW1lbnRzO3JldHVybiBhcmd1bWVudHMubGVuZ3RoJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBhcmd1bWVudHNbMF0/aS5hcHBseSh0aGlzLFt0PT57Y29uc3QgaT1vKHRoaXMsdCk7ZVswXS5hcHBseShudWxsLFtpXSl9LHQ9PntlWzFdJiZlWzFdLmFwcGx5KG51bGwsdCl9LGFyZ3VtZW50c1syXV0pOmkuYXBwbHkodGhpcyxhcmd1bWVudHMpLnRoZW4oKGU9Pm8odGhpcyxlKSkpfX07ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGVbdF09blt0XX0pKTtjb25zdCBzPWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLnNldExvY2FsRGVzY3JpcHRpb247ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuc2V0TG9jYWxEZXNjcmlwdGlvbj1mdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoJiZhcmd1bWVudHNbMF0udHlwZT8oYXJndW1lbnRzWzBdPWZ1bmN0aW9uKGUsdCl7bGV0IGk9dC5zZHA7cmV0dXJuIE9iamVjdC5rZXlzKGUuX3JldmVyc2VTdHJlYW1zfHxbXSkuZm9yRWFjaCgodD0+e2NvbnN0IG49ZS5fcmV2ZXJzZVN0cmVhbXNbdF0scj1lLl9zdHJlYW1zW24uaWRdO2k9aS5yZXBsYWNlKG5ldyBSZWdFeHAobi5pZCxcImdcIiksci5pZCl9KSksbmV3IFJUQ1Nlc3Npb25EZXNjcmlwdGlvbih7dHlwZTp0LnR5cGUsc2RwOml9KX0odGhpcyxhcmd1bWVudHNbMF0pLHMuYXBwbHkodGhpcyxhcmd1bWVudHMpKTpzLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07Y29uc3QgYT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLFwibG9jYWxEZXNjcmlwdGlvblwiKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUsXCJsb2NhbERlc2NyaXB0aW9uXCIse2dldCgpe2NvbnN0IGU9YS5nZXQuYXBwbHkodGhpcyk7cmV0dXJuXCJcIj09PWUudHlwZT9lOm8odGhpcyxlKX19KSxlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5yZW1vdmVUcmFjaz1mdW5jdGlvbihlKXtpZihcImNsb3NlZFwiPT09dGhpcy5zaWduYWxpbmdTdGF0ZSl0aHJvdyBuZXcgRE9NRXhjZXB0aW9uKFwiVGhlIFJUQ1BlZXJDb25uZWN0aW9uJ3Mgc2lnbmFsaW5nU3RhdGUgaXMgJ2Nsb3NlZCcuXCIsXCJJbnZhbGlkU3RhdGVFcnJvclwiKTtpZighZS5fcGMpdGhyb3cgbmV3IERPTUV4Y2VwdGlvbihcIkFyZ3VtZW50IDEgb2YgUlRDUGVlckNvbm5lY3Rpb24ucmVtb3ZlVHJhY2sgZG9lcyBub3QgaW1wbGVtZW50IGludGVyZmFjZSBSVENSdHBTZW5kZXIuXCIsXCJUeXBlRXJyb3JcIik7aWYoIShlLl9wYz09PXRoaXMpKXRocm93IG5ldyBET01FeGNlcHRpb24oXCJTZW5kZXIgd2FzIG5vdCBjcmVhdGVkIGJ5IHRoaXMgY29ubmVjdGlvbi5cIixcIkludmFsaWRBY2Nlc3NFcnJvclwiKTtsZXQgdDt0aGlzLl9zdHJlYW1zPXRoaXMuX3N0cmVhbXN8fHt9LE9iamVjdC5rZXlzKHRoaXMuX3N0cmVhbXMpLmZvckVhY2goKGk9Pnt0aGlzLl9zdHJlYW1zW2ldLmdldFRyYWNrcygpLmZpbmQoKHQ9PmUudHJhY2s9PT10KSkmJih0PXRoaXMuX3N0cmVhbXNbaV0pfSkpLHQmJigxPT09dC5nZXRUcmFja3MoKS5sZW5ndGg/dGhpcy5yZW1vdmVTdHJlYW0odGhpcy5fcmV2ZXJzZVN0cmVhbXNbdC5pZF0pOnQucmVtb3ZlVHJhY2soZS50cmFjayksdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChcIm5lZ290aWF0aW9ubmVlZGVkXCIpKSl9fWZ1bmN0aW9uIFpoKGUsdCl7IWUuUlRDUGVlckNvbm5lY3Rpb24mJmUud2Via2l0UlRDUGVlckNvbm5lY3Rpb24mJihlLlJUQ1BlZXJDb25uZWN0aW9uPWUud2Via2l0UlRDUGVlckNvbm5lY3Rpb24pLGUuUlRDUGVlckNvbm5lY3Rpb24mJnQudmVyc2lvbjw1MyYmW1wic2V0TG9jYWxEZXNjcmlwdGlvblwiLFwic2V0UmVtb3RlRGVzY3JpcHRpb25cIixcImFkZEljZUNhbmRpZGF0ZVwiXS5mb3JFYWNoKChmdW5jdGlvbih0KXtjb25zdCBpPWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlW3RdLG49e1t0XSgpe3JldHVybiBhcmd1bWVudHNbMF09bmV3KFwiYWRkSWNlQ2FuZGlkYXRlXCI9PT10P2UuUlRDSWNlQ2FuZGlkYXRlOmUuUlRDU2Vzc2lvbkRlc2NyaXB0aW9uKShhcmd1bWVudHNbMF0pLGkuYXBwbHkodGhpcyxhcmd1bWVudHMpfX07ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGVbdF09blt0XX0pKX1mdW5jdGlvbiAkaChlLHQpeyRuKGUsXCJuZWdvdGlhdGlvbm5lZWRlZFwiLChlPT57Y29uc3QgaT1lLnRhcmdldDtpZighKHQudmVyc2lvbjw3Mnx8aS5nZXRDb25maWd1cmF0aW9uJiZcInBsYW4tYlwiPT09aS5nZXRDb25maWd1cmF0aW9uKCkuc2RwU2VtYW50aWNzKXx8XCJzdGFibGVcIj09PWkuc2lnbmFsaW5nU3RhdGUpcmV0dXJuIGV9KSl9dmFyIGVwPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGZpeE5lZ290aWF0aW9uTmVlZGVkOiRoLHNoaW1BZGRUcmFja1JlbW92ZVRyYWNrOlFoLHNoaW1BZGRUcmFja1JlbW92ZVRyYWNrV2l0aE5hdGl2ZTpYaCxzaGltR2V0RGlzcGxheU1lZGlhOmZ1bmN0aW9uKGUsdCl7ZS5uYXZpZ2F0b3IubWVkaWFEZXZpY2VzJiZcImdldERpc3BsYXlNZWRpYVwiaW4gZS5uYXZpZ2F0b3IubWVkaWFEZXZpY2VzfHxlLm5hdmlnYXRvci5tZWRpYURldmljZXMmJihcImZ1bmN0aW9uXCI9PXR5cGVvZiB0P2UubmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXREaXNwbGF5TWVkaWE9ZnVuY3Rpb24oaSl7cmV0dXJuIHQoaSkudGhlbigodD0+e2NvbnN0IG49aS52aWRlbyYmaS52aWRlby53aWR0aCxyPWkudmlkZW8mJmkudmlkZW8uaGVpZ2h0LG89aS52aWRlbyYmaS52aWRlby5mcmFtZVJhdGU7cmV0dXJuIGkudmlkZW89e21hbmRhdG9yeTp7Y2hyb21lTWVkaWFTb3VyY2U6XCJkZXNrdG9wXCIsY2hyb21lTWVkaWFTb3VyY2VJZDp0LG1heEZyYW1lUmF0ZTpvfHwzfX0sbiYmKGkudmlkZW8ubWFuZGF0b3J5Lm1heFdpZHRoPW4pLHImJihpLnZpZGVvLm1hbmRhdG9yeS5tYXhIZWlnaHQ9ciksZS5uYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYShpKX0pKX06Y29uc29sZS5lcnJvcihcInNoaW1HZXREaXNwbGF5TWVkaWE6IGdldFNvdXJjZUlkIGFyZ3VtZW50IGlzIG5vdCBhIGZ1bmN0aW9uXCIpKX0sc2hpbUdldFNlbmRlcnNXaXRoRHRtZjpxaCxzaGltR2V0U3RhdHM6emgsc2hpbUdldFVzZXJNZWRpYTpIaCxzaGltTWVkaWFTdHJlYW06S2gsc2hpbU9uVHJhY2s6WWgsc2hpbVBlZXJDb25uZWN0aW9uOlpoLHNoaW1TZW5kZXJSZWNlaXZlckdldFN0YXRzOkpofSk7ZnVuY3Rpb24gdHAoZSx0KXtjb25zdCBpPWUmJmUubmF2aWdhdG9yLG49ZSYmZS5NZWRpYVN0cmVhbVRyYWNrO2lmKGkuZ2V0VXNlck1lZGlhPWZ1bmN0aW9uKGUsdCxuKXtucihcIm5hdmlnYXRvci5nZXRVc2VyTWVkaWFcIixcIm5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhXCIpLGkubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYShlKS50aGVuKHQsbil9LCEodC52ZXJzaW9uPjU1JiZcImF1dG9HYWluQ29udHJvbFwiaW4gaS5tZWRpYURldmljZXMuZ2V0U3VwcG9ydGVkQ29uc3RyYWludHMoKSkpe2NvbnN0IGU9ZnVuY3Rpb24oZSx0LGkpe3QgaW4gZSYmIShpIGluIGUpJiYoZVtpXT1lW3RdLGRlbGV0ZSBlW3RdKX0sdD1pLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEuYmluZChpLm1lZGlhRGV2aWNlcyk7aWYoaS5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhPWZ1bmN0aW9uKGkpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBpJiZcIm9iamVjdFwiPT10eXBlb2YgaS5hdWRpbyYmKGk9SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShpKSksZShpLmF1ZGlvLFwiYXV0b0dhaW5Db250cm9sXCIsXCJtb3pBdXRvR2FpbkNvbnRyb2xcIiksZShpLmF1ZGlvLFwibm9pc2VTdXBwcmVzc2lvblwiLFwibW96Tm9pc2VTdXBwcmVzc2lvblwiKSksdChpKX0sbiYmbi5wcm90b3R5cGUuZ2V0U2V0dGluZ3Mpe2NvbnN0IHQ9bi5wcm90b3R5cGUuZ2V0U2V0dGluZ3M7bi5wcm90b3R5cGUuZ2V0U2V0dGluZ3M9ZnVuY3Rpb24oKXtjb25zdCBpPXQuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiBlKGksXCJtb3pBdXRvR2FpbkNvbnRyb2xcIixcImF1dG9HYWluQ29udHJvbFwiKSxlKGksXCJtb3pOb2lzZVN1cHByZXNzaW9uXCIsXCJub2lzZVN1cHByZXNzaW9uXCIpLGl9fWlmKG4mJm4ucHJvdG90eXBlLmFwcGx5Q29uc3RyYWludHMpe2NvbnN0IHQ9bi5wcm90b3R5cGUuYXBwbHlDb25zdHJhaW50cztuLnByb3RvdHlwZS5hcHBseUNvbnN0cmFpbnRzPWZ1bmN0aW9uKGkpe3JldHVyblwiYXVkaW9cIj09PXRoaXMua2luZCYmXCJvYmplY3RcIj09dHlwZW9mIGkmJihpPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoaSkpLGUoaSxcImF1dG9HYWluQ29udHJvbFwiLFwibW96QXV0b0dhaW5Db250cm9sXCIpLGUoaSxcIm5vaXNlU3VwcHJlc3Npb25cIixcIm1vek5vaXNlU3VwcHJlc3Npb25cIikpLHQuYXBwbHkodGhpcyxbaV0pfX19fWZ1bmN0aW9uIGlwKGUpe1wib2JqZWN0XCI9PXR5cGVvZiBlJiZlLlJUQ1RyYWNrRXZlbnQmJlwicmVjZWl2ZXJcImluIGUuUlRDVHJhY2tFdmVudC5wcm90b3R5cGUmJiEoXCJ0cmFuc2NlaXZlclwiaW4gZS5SVENUcmFja0V2ZW50LnByb3RvdHlwZSkmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLlJUQ1RyYWNrRXZlbnQucHJvdG90eXBlLFwidHJhbnNjZWl2ZXJcIix7Z2V0KCl7cmV0dXJue3JlY2VpdmVyOnRoaXMucmVjZWl2ZXJ9fX0pfWZ1bmN0aW9uIG5wKGUsdCl7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGV8fCFlLlJUQ1BlZXJDb25uZWN0aW9uJiYhZS5tb3pSVENQZWVyQ29ubmVjdGlvbilyZXR1cm47IWUuUlRDUGVlckNvbm5lY3Rpb24mJmUubW96UlRDUGVlckNvbm5lY3Rpb24mJihlLlJUQ1BlZXJDb25uZWN0aW9uPWUubW96UlRDUGVlckNvbm5lY3Rpb24pLHQudmVyc2lvbjw1MyYmW1wic2V0TG9jYWxEZXNjcmlwdGlvblwiLFwic2V0UmVtb3RlRGVzY3JpcHRpb25cIixcImFkZEljZUNhbmRpZGF0ZVwiXS5mb3JFYWNoKChmdW5jdGlvbih0KXtjb25zdCBpPWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlW3RdLG49e1t0XSgpe3JldHVybiBhcmd1bWVudHNbMF09bmV3KFwiYWRkSWNlQ2FuZGlkYXRlXCI9PT10P2UuUlRDSWNlQ2FuZGlkYXRlOmUuUlRDU2Vzc2lvbkRlc2NyaXB0aW9uKShhcmd1bWVudHNbMF0pLGkuYXBwbHkodGhpcyxhcmd1bWVudHMpfX07ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGVbdF09blt0XX0pKTtjb25zdCBpPXtpbmJvdW5kcnRwOlwiaW5ib3VuZC1ydHBcIixvdXRib3VuZHJ0cDpcIm91dGJvdW5kLXJ0cFwiLGNhbmRpZGF0ZXBhaXI6XCJjYW5kaWRhdGUtcGFpclwiLGxvY2FsY2FuZGlkYXRlOlwibG9jYWwtY2FuZGlkYXRlXCIscmVtb3RlY2FuZGlkYXRlOlwicmVtb3RlLWNhbmRpZGF0ZVwifSxuPWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmdldFN0YXRzO2UuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmdldFN0YXRzPWZ1bmN0aW9uKCl7Y29uc3RbZSxyLG9dPWFyZ3VtZW50cztyZXR1cm4gbi5hcHBseSh0aGlzLFtlfHxudWxsXSkudGhlbigoZT0+e2lmKHQudmVyc2lvbjw1MyYmIXIpdHJ5e2UuZm9yRWFjaCgoZT0+e2UudHlwZT1pW2UudHlwZV18fGUudHlwZX0pKX1jYXRjaCh0KXtpZihcIlR5cGVFcnJvclwiIT09dC5uYW1lKXRocm93IHQ7ZS5mb3JFYWNoKCgodCxuKT0+e2Uuc2V0KG4sT2JqZWN0LmFzc2lnbih7fSx0LHt0eXBlOmlbdC50eXBlXXx8dC50eXBlfSkpfSkpfXJldHVybiBlfSkpLnRoZW4ocixvKX19ZnVuY3Rpb24gcnAoZSl7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGV8fCFlLlJUQ1BlZXJDb25uZWN0aW9ufHwhZS5SVENSdHBTZW5kZXIpcmV0dXJuO2lmKGUuUlRDUnRwU2VuZGVyJiZcImdldFN0YXRzXCJpbiBlLlJUQ1J0cFNlbmRlci5wcm90b3R5cGUpcmV0dXJuO2NvbnN0IHQ9ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuZ2V0U2VuZGVyczt0JiYoZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuZ2V0U2VuZGVycz1mdW5jdGlvbigpe2NvbnN0IGU9dC5hcHBseSh0aGlzLFtdKTtyZXR1cm4gZS5mb3JFYWNoKChlPT5lLl9wYz10aGlzKSksZX0pO2NvbnN0IGk9ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuYWRkVHJhY2s7aSYmKGUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmFkZFRyYWNrPWZ1bmN0aW9uKCl7Y29uc3QgZT1pLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gZS5fcGM9dGhpcyxlfSksZS5SVENSdHBTZW5kZXIucHJvdG90eXBlLmdldFN0YXRzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHJhY2s/dGhpcy5fcGMuZ2V0U3RhdHModGhpcy50cmFjayk6R2gucmVzb2x2ZShuZXcgTWFwKX19ZnVuY3Rpb24gb3AoZSl7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGV8fCFlLlJUQ1BlZXJDb25uZWN0aW9ufHwhZS5SVENSdHBTZW5kZXIpcmV0dXJuO2lmKGUuUlRDUnRwU2VuZGVyJiZcImdldFN0YXRzXCJpbiBlLlJUQ1J0cFJlY2VpdmVyLnByb3RvdHlwZSlyZXR1cm47Y29uc3QgdD1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5nZXRSZWNlaXZlcnM7dCYmKGUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmdldFJlY2VpdmVycz1mdW5jdGlvbigpe2NvbnN0IGU9dC5hcHBseSh0aGlzLFtdKTtyZXR1cm4gZS5mb3JFYWNoKChlPT5lLl9wYz10aGlzKSksZX0pLCRuKGUsXCJ0cmFja1wiLChlPT4oZS5yZWNlaXZlci5fcGM9ZS5zcmNFbGVtZW50LGUpKSksZS5SVENSdHBSZWNlaXZlci5wcm90b3R5cGUuZ2V0U3RhdHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcGMuZ2V0U3RhdHModGhpcy50cmFjayl9fWZ1bmN0aW9uIHNwKGUpe2UuUlRDUGVlckNvbm5lY3Rpb24mJiEoXCJyZW1vdmVTdHJlYW1cImluIGUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlKSYmKGUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLnJlbW92ZVN0cmVhbT1mdW5jdGlvbihlKXtucihcInJlbW92ZVN0cmVhbVwiLFwicmVtb3ZlVHJhY2tcIiksdGhpcy5nZXRTZW5kZXJzKCkuZm9yRWFjaCgodD0+e3ZhciBpO3QudHJhY2smJkRuKGk9ZS5nZXRUcmFja3MoKSkuY2FsbChpLHQudHJhY2spJiZ0aGlzLnJlbW92ZVRyYWNrKHQpfSkpfSl9ZnVuY3Rpb24gYXAoZSl7ZS5EYXRhQ2hhbm5lbCYmIWUuUlRDRGF0YUNoYW5uZWwmJihlLlJUQ0RhdGFDaGFubmVsPWUuRGF0YUNoYW5uZWwpfWZ1bmN0aW9uIGNwKGUpe2lmKFwib2JqZWN0XCIhPXR5cGVvZiBlfHwhZS5SVENQZWVyQ29ubmVjdGlvbilyZXR1cm47Y29uc3QgdD1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5hZGRUcmFuc2NlaXZlcjt0JiYoZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuYWRkVHJhbnNjZWl2ZXI9ZnVuY3Rpb24oKXt0aGlzLnNldFBhcmFtZXRlcnNQcm9taXNlcz1bXTtsZXQgZT1hcmd1bWVudHNbMV0mJmFyZ3VtZW50c1sxXS5zZW5kRW5jb2RpbmdzO3ZvaWQgMD09PWUmJihlPVtdKSxlPVsuLi5lXTtjb25zdCBpPWUubGVuZ3RoPjA7aSYmZS5mb3JFYWNoKChlPT57aWYoXCJyaWRcImluIGUpe2lmKCEvXlthLXowLTldezAsMTZ9JC9pLnRlc3QoZS5yaWQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIFJJRCB2YWx1ZSBwcm92aWRlZC5cIil9aWYoXCJzY2FsZVJlc29sdXRpb25Eb3duQnlcImluIGUmJiEocGFyc2VGbG9hdChlLnNjYWxlUmVzb2x1dGlvbkRvd25CeSk+PTEpKXRocm93IG5ldyBSYW5nZUVycm9yKFwic2NhbGVfcmVzb2x1dGlvbl9kb3duX2J5IG11c3QgYmUgPj0gMS4wXCIpO2lmKFwibWF4RnJhbWVyYXRlXCJpbiBlJiYhKHBhcnNlRmxvYXQoZS5tYXhGcmFtZXJhdGUpPj0wKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIm1heF9mcmFtZXJhdGUgbXVzdCBiZSA+PSAwLjBcIil9KSk7Y29uc3Qgbj10LmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihpKXtjb25zdHtzZW5kZXI6dH09bixpPXQuZ2V0UGFyYW1ldGVycygpOyghKFwiZW5jb2RpbmdzXCJpbiBpKXx8MT09PWkuZW5jb2RpbmdzLmxlbmd0aCYmMD09PU9iamVjdC5rZXlzKGkuZW5jb2RpbmdzWzBdKS5sZW5ndGgpJiYoaS5lbmNvZGluZ3M9ZSx0LnNlbmRFbmNvZGluZ3M9ZSx0aGlzLnNldFBhcmFtZXRlcnNQcm9taXNlcy5wdXNoKHQuc2V0UGFyYW1ldGVycyhpKS50aGVuKCgoKT0+e2RlbGV0ZSB0LnNlbmRFbmNvZGluZ3N9KSkuY2F0Y2goKCgpPT57ZGVsZXRlIHQuc2VuZEVuY29kaW5nc30pKSkpfXJldHVybiBufSl9ZnVuY3Rpb24gZHAoZSl7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGV8fCFlLlJUQ1J0cFNlbmRlcilyZXR1cm47Y29uc3QgdD1lLlJUQ1J0cFNlbmRlci5wcm90b3R5cGUuZ2V0UGFyYW1ldGVyczt0JiYoZS5SVENSdHBTZW5kZXIucHJvdG90eXBlLmdldFBhcmFtZXRlcnM9ZnVuY3Rpb24oKXtjb25zdCBlPXQuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVyblwiZW5jb2RpbmdzXCJpbiBlfHwoZS5lbmNvZGluZ3M9W10uY29uY2F0KHRoaXMuc2VuZEVuY29kaW5nc3x8W3t9XSkpLGV9KX1mdW5jdGlvbiBscChlKXtpZihcIm9iamVjdFwiIT10eXBlb2YgZXx8IWUuUlRDUGVlckNvbm5lY3Rpb24pcmV0dXJuO2NvbnN0IHQ9ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuY3JlYXRlT2ZmZXI7ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuY3JlYXRlT2ZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZXRQYXJhbWV0ZXJzUHJvbWlzZXMmJnRoaXMuc2V0UGFyYW1ldGVyc1Byb21pc2VzLmxlbmd0aD9HaC5hbGwodGhpcy5zZXRQYXJhbWV0ZXJzUHJvbWlzZXMpLnRoZW4oKCgpPT50LmFwcGx5KHRoaXMsYXJndW1lbnRzKSkpLmZpbmFsbHkoKCgpPT57dGhpcy5zZXRQYXJhbWV0ZXJzUHJvbWlzZXM9W119KSk6dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fWZ1bmN0aW9uIHVwKGUpe2lmKFwib2JqZWN0XCIhPXR5cGVvZiBlfHwhZS5SVENQZWVyQ29ubmVjdGlvbilyZXR1cm47Y29uc3QgdD1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5jcmVhdGVBbnN3ZXI7ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuY3JlYXRlQW5zd2VyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2V0UGFyYW1ldGVyc1Byb21pc2VzJiZ0aGlzLnNldFBhcmFtZXRlcnNQcm9taXNlcy5sZW5ndGg/R2guYWxsKHRoaXMuc2V0UGFyYW1ldGVyc1Byb21pc2VzKS50aGVuKCgoKT0+dC5hcHBseSh0aGlzLGFyZ3VtZW50cykpKS5maW5hbGx5KCgoKT0+e3RoaXMuc2V0UGFyYW1ldGVyc1Byb21pc2VzPVtdfSkpOnQuYXBwbHkodGhpcyxhcmd1bWVudHMpfX12YXIgaHA9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsc2hpbUFkZFRyYW5zY2VpdmVyOmNwLHNoaW1DcmVhdGVBbnN3ZXI6dXAsc2hpbUNyZWF0ZU9mZmVyOmxwLHNoaW1HZXREaXNwbGF5TWVkaWE6ZnVuY3Rpb24oZSx0KXtlLm5hdmlnYXRvci5tZWRpYURldmljZXMmJlwiZ2V0RGlzcGxheU1lZGlhXCJpbiBlLm5hdmlnYXRvci5tZWRpYURldmljZXN8fGUubmF2aWdhdG9yLm1lZGlhRGV2aWNlcyYmKGUubmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXREaXNwbGF5TWVkaWE9ZnVuY3Rpb24oaSl7aWYoIWl8fCFpLnZpZGVvKXtjb25zdCBlPW5ldyBET01FeGNlcHRpb24oXCJnZXREaXNwbGF5TWVkaWEgd2l0aG91dCB2aWRlbyBjb25zdHJhaW50cyBpcyB1bmRlZmluZWRcIik7cmV0dXJuIGUubmFtZT1cIk5vdEZvdW5kRXJyb3JcIixlLmNvZGU9OCxHaC5yZWplY3QoZSl9cmV0dXJuITA9PT1pLnZpZGVvP2kudmlkZW89e21lZGlhU291cmNlOnR9OmkudmlkZW8ubWVkaWFTb3VyY2U9dCxlLm5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKGkpfSl9LHNoaW1HZXRQYXJhbWV0ZXJzOmRwLHNoaW1HZXRVc2VyTWVkaWE6dHAsc2hpbU9uVHJhY2s6aXAsc2hpbVBlZXJDb25uZWN0aW9uOm5wLHNoaW1SVENEYXRhQ2hhbm5lbDphcCxzaGltUmVjZWl2ZXJHZXRTdGF0czpvcCxzaGltUmVtb3ZlU3RyZWFtOnNwLHNoaW1TZW5kZXJHZXRTdGF0czpycH0pO2Z1bmN0aW9uIHBwKGUpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLlJUQ1BlZXJDb25uZWN0aW9uKXtpZihcImdldExvY2FsU3RyZWFtc1wiaW4gZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGV8fChlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5nZXRMb2NhbFN0cmVhbXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbG9jYWxTdHJlYW1zfHwodGhpcy5fbG9jYWxTdHJlYW1zPVtdKSx0aGlzLl9sb2NhbFN0cmVhbXN9KSwhKFwiYWRkU3RyZWFtXCJpbiBlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZSkpe2NvbnN0IHQ9ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuYWRkVHJhY2s7ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuYWRkU3RyZWFtPWZ1bmN0aW9uKGUpe3ZhciBpO3RoaXMuX2xvY2FsU3RyZWFtc3x8KHRoaXMuX2xvY2FsU3RyZWFtcz1bXSksRG4oaT10aGlzLl9sb2NhbFN0cmVhbXMpLmNhbGwoaSxlKXx8dGhpcy5fbG9jYWxTdHJlYW1zLnB1c2goZSksZS5nZXRBdWRpb1RyYWNrcygpLmZvckVhY2goKGk9PnQuY2FsbCh0aGlzLGksZSkpKSxlLmdldFZpZGVvVHJhY2tzKCkuZm9yRWFjaCgoaT0+dC5jYWxsKHRoaXMsaSxlKSkpfSxlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5hZGRUcmFjaz1mdW5jdGlvbihlKXtmb3IodmFyIGk9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheShpPjE/aS0xOjApLHI9MTtyPGk7cisrKW5bci0xXT1hcmd1bWVudHNbcl07cmV0dXJuIG4mJm4uZm9yRWFjaCgoZT0+e3ZhciB0O3RoaXMuX2xvY2FsU3RyZWFtcz9Ebih0PXRoaXMuX2xvY2FsU3RyZWFtcykuY2FsbCh0LGUpfHx0aGlzLl9sb2NhbFN0cmVhbXMucHVzaChlKTp0aGlzLl9sb2NhbFN0cmVhbXM9W2VdfSkpLHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfX1cInJlbW92ZVN0cmVhbVwiaW4gZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGV8fChlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5yZW1vdmVTdHJlYW09ZnVuY3Rpb24oZSl7dGhpcy5fbG9jYWxTdHJlYW1zfHwodGhpcy5fbG9jYWxTdHJlYW1zPVtdKTtjb25zdCB0PXRoaXMuX2xvY2FsU3RyZWFtcy5pbmRleE9mKGUpO2lmKC0xPT09dClyZXR1cm47dGhpcy5fbG9jYWxTdHJlYW1zLnNwbGljZSh0LDEpO2NvbnN0IGk9ZS5nZXRUcmFja3MoKTt0aGlzLmdldFNlbmRlcnMoKS5mb3JFYWNoKChlPT57RG4oaSkuY2FsbChpLGUudHJhY2spJiZ0aGlzLnJlbW92ZVRyYWNrKGUpfSkpfSl9fWZ1bmN0aW9uIF9wKGUpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLlJUQ1BlZXJDb25uZWN0aW9uJiYoXCJnZXRSZW1vdGVTdHJlYW1zXCJpbiBlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZXx8KGUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmdldFJlbW90ZVN0cmVhbXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVtb3RlU3RyZWFtcz90aGlzLl9yZW1vdGVTdHJlYW1zOltdfSksIShcIm9uYWRkc3RyZWFtXCJpbiBlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZSkpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUsXCJvbmFkZHN0cmVhbVwiLHtnZXQoKXtyZXR1cm4gdGhpcy5fb25hZGRzdHJlYW19LHNldChlKXt0aGlzLl9vbmFkZHN0cmVhbSYmKHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFkZHN0cmVhbVwiLHRoaXMuX29uYWRkc3RyZWFtKSx0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0cmFja1wiLHRoaXMuX29uYWRkc3RyZWFtcG9seSkpLHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcImFkZHN0cmVhbVwiLHRoaXMuX29uYWRkc3RyZWFtPWUpLHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcInRyYWNrXCIsdGhpcy5fb25hZGRzdHJlYW1wb2x5PWU9PntlLnN0cmVhbXMuZm9yRWFjaCgoZT0+e3ZhciB0O2lmKHRoaXMuX3JlbW90ZVN0cmVhbXN8fCh0aGlzLl9yZW1vdGVTdHJlYW1zPVtdKSxEbih0PXRoaXMuX3JlbW90ZVN0cmVhbXMpLmNhbGwodCxlKSlyZXR1cm47dGhpcy5fcmVtb3RlU3RyZWFtcy5wdXNoKGUpO2NvbnN0IGk9bmV3IEV2ZW50KFwiYWRkc3RyZWFtXCIpO2kuc3RyZWFtPWUsdGhpcy5kaXNwYXRjaEV2ZW50KGkpfSkpfSl9fSk7Y29uc3QgdD1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5zZXRSZW1vdGVEZXNjcmlwdGlvbjtlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5zZXRSZW1vdGVEZXNjcmlwdGlvbj1mdW5jdGlvbigpe2NvbnN0IGU9dGhpcztyZXR1cm4gdGhpcy5fb25hZGRzdHJlYW1wb2x5fHx0aGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFja1wiLHRoaXMuX29uYWRkc3RyZWFtcG9seT1mdW5jdGlvbih0KXt0LnN0cmVhbXMuZm9yRWFjaCgodD0+e2lmKGUuX3JlbW90ZVN0cmVhbXN8fChlLl9yZW1vdGVTdHJlYW1zPVtdKSxlLl9yZW1vdGVTdHJlYW1zLmluZGV4T2YodCk+PTApcmV0dXJuO2UuX3JlbW90ZVN0cmVhbXMucHVzaCh0KTtjb25zdCBpPW5ldyBFdmVudChcImFkZHN0cmVhbVwiKTtpLnN0cmVhbT10LGUuZGlzcGF0Y2hFdmVudChpKX0pKX0pLHQuYXBwbHkoZSxhcmd1bWVudHMpfX19ZnVuY3Rpb24gRXAoZSl7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGV8fCFlLlJUQ1BlZXJDb25uZWN0aW9uKXJldHVybjtjb25zdCB0PWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLGk9dC5jcmVhdGVPZmZlcixuPXQuY3JlYXRlQW5zd2VyLHI9dC5zZXRMb2NhbERlc2NyaXB0aW9uLG89dC5zZXRSZW1vdGVEZXNjcmlwdGlvbixzPXQuYWRkSWNlQ2FuZGlkYXRlO3QuY3JlYXRlT2ZmZXI9ZnVuY3Rpb24oZSx0KXtjb25zdCBuPWFyZ3VtZW50cy5sZW5ndGg+PTI/YXJndW1lbnRzWzJdOmFyZ3VtZW50c1swXSxyPWkuYXBwbHkodGhpcyxbbl0pO3JldHVybiB0PyhyLnRoZW4oZSx0KSxHaC5yZXNvbHZlKCkpOnJ9LHQuY3JlYXRlQW5zd2VyPWZ1bmN0aW9uKGUsdCl7Y29uc3QgaT1hcmd1bWVudHMubGVuZ3RoPj0yP2FyZ3VtZW50c1syXTphcmd1bWVudHNbMF0scj1uLmFwcGx5KHRoaXMsW2ldKTtyZXR1cm4gdD8oci50aGVuKGUsdCksR2gucmVzb2x2ZSgpKTpyfTtsZXQgYT1mdW5jdGlvbihlLHQsaSl7Y29uc3Qgbj1yLmFwcGx5KHRoaXMsW2VdKTtyZXR1cm4gaT8obi50aGVuKHQsaSksR2gucmVzb2x2ZSgpKTpufTt0LnNldExvY2FsRGVzY3JpcHRpb249YSxhPWZ1bmN0aW9uKGUsdCxpKXtjb25zdCBuPW8uYXBwbHkodGhpcyxbZV0pO3JldHVybiBpPyhuLnRoZW4odCxpKSxHaC5yZXNvbHZlKCkpOm59LHQuc2V0UmVtb3RlRGVzY3JpcHRpb249YSxhPWZ1bmN0aW9uKGUsdCxpKXtjb25zdCBuPXMuYXBwbHkodGhpcyxbZV0pO3JldHVybiBpPyhuLnRoZW4odCxpKSxHaC5yZXNvbHZlKCkpOm59LHQuYWRkSWNlQ2FuZGlkYXRlPWF9ZnVuY3Rpb24gZnAoZSl7Y29uc3QgdD1lJiZlLm5hdmlnYXRvcjtpZih0Lm1lZGlhRGV2aWNlcyYmdC5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKXtjb25zdCBlPXQubWVkaWFEZXZpY2VzLGk9ZS5nZXRVc2VyTWVkaWEuYmluZChlKTt0Lm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWE9ZT0+aShtcChlKSl9IXQuZ2V0VXNlck1lZGlhJiZ0Lm1lZGlhRGV2aWNlcyYmdC5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhJiYodC5nZXRVc2VyTWVkaWE9ZnVuY3Rpb24oZSxpLG4pe3QubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYShlKS50aGVuKGksbil9LmJpbmQodCkpfWZ1bmN0aW9uIG1wKGUpe3JldHVybiBlJiZ2b2lkIDAhPT1lLnZpZGVvP09iamVjdC5hc3NpZ24oe30sZSx7dmlkZW86b3IoZS52aWRlbyl9KTplfWZ1bmN0aW9uIFRwKGUpe2lmKCFlLlJUQ1BlZXJDb25uZWN0aW9uKXJldHVybjtjb25zdCB0PWUuUlRDUGVlckNvbm5lY3Rpb247ZS5SVENQZWVyQ29ubmVjdGlvbj1mdW5jdGlvbihlLGkpe2lmKGUmJmUuaWNlU2VydmVycyl7Y29uc3QgdD1bXTtmb3IobGV0IGk9MDtpPGUuaWNlU2VydmVycy5sZW5ndGg7aSsrKXtsZXQgbj1lLmljZVNlcnZlcnNbaV07IW4uaGFzT3duUHJvcGVydHkoXCJ1cmxzXCIpJiZuLmhhc093blByb3BlcnR5KFwidXJsXCIpPyhucihcIlJUQ0ljZVNlcnZlci51cmxcIixcIlJUQ0ljZVNlcnZlci51cmxzXCIpLG49SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShuKSksbi51cmxzPW4udXJsLGRlbGV0ZSBuLnVybCx0LnB1c2gobikpOnQucHVzaChlLmljZVNlcnZlcnNbaV0pfWUuaWNlU2VydmVycz10fXJldHVybiBuZXcgdChlLGkpfSxlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZT10LnByb3RvdHlwZSxcImdlbmVyYXRlQ2VydGlmaWNhdGVcImluIHQmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLlJUQ1BlZXJDb25uZWN0aW9uLFwiZ2VuZXJhdGVDZXJ0aWZpY2F0ZVwiLHtnZXQ6KCk9PnQuZ2VuZXJhdGVDZXJ0aWZpY2F0ZX0pfWZ1bmN0aW9uIFNwKGUpe1wib2JqZWN0XCI9PXR5cGVvZiBlJiZlLlJUQ1RyYWNrRXZlbnQmJlwicmVjZWl2ZXJcImluIGUuUlRDVHJhY2tFdmVudC5wcm90b3R5cGUmJiEoXCJ0cmFuc2NlaXZlclwiaW4gZS5SVENUcmFja0V2ZW50LnByb3RvdHlwZSkmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLlJUQ1RyYWNrRXZlbnQucHJvdG90eXBlLFwidHJhbnNjZWl2ZXJcIix7Z2V0KCl7cmV0dXJue3JlY2VpdmVyOnRoaXMucmVjZWl2ZXJ9fX0pfWZ1bmN0aW9uIGdwKGUpe2NvbnN0IHQ9ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuY3JlYXRlT2ZmZXI7ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUuY3JlYXRlT2ZmZXI9ZnVuY3Rpb24oZSl7aWYoZSl7dm9pZCAwIT09ZS5vZmZlclRvUmVjZWl2ZUF1ZGlvJiYoZS5vZmZlclRvUmVjZWl2ZUF1ZGlvPSEhZS5vZmZlclRvUmVjZWl2ZUF1ZGlvKTtjb25zdCB0PXRoaXMuZ2V0VHJhbnNjZWl2ZXJzKCkuZmluZCgoZT0+XCJhdWRpb1wiPT09ZS5yZWNlaXZlci50cmFjay5raW5kKSk7ITE9PT1lLm9mZmVyVG9SZWNlaXZlQXVkaW8mJnQ/XCJzZW5kcmVjdlwiPT09dC5kaXJlY3Rpb24/dC5zZXREaXJlY3Rpb24/dC5zZXREaXJlY3Rpb24oXCJzZW5kb25seVwiKTp0LmRpcmVjdGlvbj1cInNlbmRvbmx5XCI6XCJyZWN2b25seVwiPT09dC5kaXJlY3Rpb24mJih0LnNldERpcmVjdGlvbj90LnNldERpcmVjdGlvbihcImluYWN0aXZlXCIpOnQuZGlyZWN0aW9uPVwiaW5hY3RpdmVcIik6ITAhPT1lLm9mZmVyVG9SZWNlaXZlQXVkaW98fHR8fHRoaXMuYWRkVHJhbnNjZWl2ZXIoXCJhdWRpb1wiLHtkaXJlY3Rpb246XCJyZWN2b25seVwifSksdm9pZCAwIT09ZS5vZmZlclRvUmVjZWl2ZVZpZGVvJiYoZS5vZmZlclRvUmVjZWl2ZVZpZGVvPSEhZS5vZmZlclRvUmVjZWl2ZVZpZGVvKTtjb25zdCBpPXRoaXMuZ2V0VHJhbnNjZWl2ZXJzKCkuZmluZCgoZT0+XCJ2aWRlb1wiPT09ZS5yZWNlaXZlci50cmFjay5raW5kKSk7ITE9PT1lLm9mZmVyVG9SZWNlaXZlVmlkZW8mJmk/XCJzZW5kcmVjdlwiPT09aS5kaXJlY3Rpb24/aS5zZXREaXJlY3Rpb24/aS5zZXREaXJlY3Rpb24oXCJzZW5kb25seVwiKTppLmRpcmVjdGlvbj1cInNlbmRvbmx5XCI6XCJyZWN2b25seVwiPT09aS5kaXJlY3Rpb24mJihpLnNldERpcmVjdGlvbj9pLnNldERpcmVjdGlvbihcImluYWN0aXZlXCIpOmkuZGlyZWN0aW9uPVwiaW5hY3RpdmVcIik6ITAhPT1lLm9mZmVyVG9SZWNlaXZlVmlkZW98fGl8fHRoaXMuYWRkVHJhbnNjZWl2ZXIoXCJ2aWRlb1wiLHtkaXJlY3Rpb246XCJyZWN2b25seVwifSl9cmV0dXJuIHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfX1mdW5jdGlvbiBScChlKXtcIm9iamVjdFwiIT10eXBlb2YgZXx8ZS5BdWRpb0NvbnRleHR8fChlLkF1ZGlvQ29udGV4dD1lLndlYmtpdEF1ZGlvQ29udGV4dCl9dmFyIENwPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLHNoaW1BdWRpb0NvbnRleHQ6UnAsc2hpbUNhbGxiYWNrc0FQSTpFcCxzaGltQ29uc3RyYWludHM6bXAsc2hpbUNyZWF0ZU9mZmVyTGVnYWN5OmdwLHNoaW1HZXRVc2VyTWVkaWE6ZnAsc2hpbUxvY2FsU3RyZWFtc0FQSTpwcCxzaGltUlRDSWNlU2VydmVyVXJsczpUcCxzaGltUmVtb3RlU3RyZWFtc0FQSTpfcCxzaGltVHJhY2tFdmVudFRyYW5zY2VpdmVyOlNwfSksSXA9XCJcXHRcXG5cXHZcXGZcXHIgwqDhmoDigIDigIHigILigIPigITigIXigIbigIfigIjigInigIrigK/igZ/jgIBcXHUyMDI4XFx1MjAyOVxcdWZlZmZcIix2cD1KLHlwPWZuLEFwPUlwLGJwPWQoXCJcIi5yZXBsYWNlKSx3cD1SZWdFeHAoXCJeW1wiK0FwK1wiXStcIiksT3A9UmVnRXhwKFwiKF58W15cIitBcCtcIl0pW1wiK0FwK1wiXSskXCIpLE5wPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0KXt2YXIgaT15cCh2cCh0KSk7cmV0dXJuIDEmZSYmKGk9YnAoaSx3cCxcIlwiKSksMiZlJiYoaT1icChpLE9wLFwiJDFcIikpLGl9fSxEcD17c3RhcnQ6TnAoMSksZW5kOk5wKDIpLHRyaW06TnAoMyl9LFBwPWxhLlBST1BFUixMcD1uLGtwPUlwLE1wPURwLnRyaW07d2koe3RhcmdldDpcIlN0cmluZ1wiLHByb3RvOiEwLGZvcmNlZDpmdW5jdGlvbihlKXtyZXR1cm4gTHAoKGZ1bmN0aW9uKCl7cmV0dXJuISFrcFtlXSgpfHxcIuKAi8KF4aCOXCIhPT1cIuKAi8KF4aCOXCJbZV0oKXx8UHAmJmtwW2VdLm5hbWUhPT1lfSkpfShcInRyaW1cIil9LHt0cmltOmZ1bmN0aW9uKCl7cmV0dXJuIE1wKHRoaXMpfX0pO3ZhciBVcD1YaShcIlN0cmluZ1wiKS50cmltLHhwPWwsVnA9VXAsRnA9U3RyaW5nLnByb3RvdHlwZSxCcD1mdW5jdGlvbihlKXt2YXIgdD1lLnRyaW07cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGV8fGU9PT1GcHx8eHAoRnAsZSkmJnQ9PT1GcC50cmltP1ZwOnR9LGpwPWkoQnApLEdwPXtleHBvcnRzOnt9fTshZnVuY3Rpb24oZSl7Y29uc3QgdD17Z2VuZXJhdGVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZygyLDEyKX19O3QubG9jYWxDTmFtZT10LmdlbmVyYXRlSWRlbnRpZmllcigpLHQuc3BsaXRMaW5lcz1mdW5jdGlvbihlKXtyZXR1cm4gZS50cmltKCkuc3BsaXQoXCJcXG5cIikubWFwKChlPT5lLnRyaW0oKSkpfSx0LnNwbGl0U2VjdGlvbnM9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuc3BsaXQoXCJcXG5tPVwiKS5tYXAoKChlLHQpPT4odD4wP1wibT1cIitlOmUpLnRyaW0oKStcIlxcclxcblwiKSl9LHQuZ2V0RGVzY3JpcHRpb249ZnVuY3Rpb24oZSl7Y29uc3QgaT10LnNwbGl0U2VjdGlvbnMoZSk7cmV0dXJuIGkmJmlbMF19LHQuZ2V0TWVkaWFTZWN0aW9ucz1mdW5jdGlvbihlKXtjb25zdCBpPXQuc3BsaXRTZWN0aW9ucyhlKTtyZXR1cm4gaS5zaGlmdCgpLGl9LHQubWF0Y2hQcmVmaXg9ZnVuY3Rpb24oZSxpKXtyZXR1cm4gdC5zcGxpdExpbmVzKGUpLmZpbHRlcigoZT0+MD09PWUuaW5kZXhPZihpKSkpfSx0LnBhcnNlQ2FuZGlkYXRlPWZ1bmN0aW9uKGUpe2xldCB0O3Q9MD09PWUuaW5kZXhPZihcImE9Y2FuZGlkYXRlOlwiKT9lLnN1YnN0cmluZygxMikuc3BsaXQoXCIgXCIpOmUuc3Vic3RyaW5nKDEwKS5zcGxpdChcIiBcIik7Y29uc3QgaT17Zm91bmRhdGlvbjp0WzBdLGNvbXBvbmVudDp7MTpcInJ0cFwiLDI6XCJydGNwXCJ9W3RbMV1dfHx0WzFdLHByb3RvY29sOnRbMl0udG9Mb3dlckNhc2UoKSxwcmlvcml0eTpwYXJzZUludCh0WzNdLDEwKSxpcDp0WzRdLGFkZHJlc3M6dFs0XSxwb3J0OnBhcnNlSW50KHRbNV0sMTApLHR5cGU6dFs3XX07Zm9yKGxldCBlPTg7ZTx0Lmxlbmd0aDtlKz0yKXN3aXRjaCh0W2VdKXtjYXNlXCJyYWRkclwiOmkucmVsYXRlZEFkZHJlc3M9dFtlKzFdO2JyZWFrO2Nhc2VcInJwb3J0XCI6aS5yZWxhdGVkUG9ydD1wYXJzZUludCh0W2UrMV0sMTApO2JyZWFrO2Nhc2VcInRjcHR5cGVcIjppLnRjcFR5cGU9dFtlKzFdO2JyZWFrO2Nhc2VcInVmcmFnXCI6aS51ZnJhZz10W2UrMV0saS51c2VybmFtZUZyYWdtZW50PXRbZSsxXTticmVhaztkZWZhdWx0OnZvaWQgMD09PWlbdFtlXV0mJihpW3RbZV1dPXRbZSsxXSl9cmV0dXJuIGl9LHQud3JpdGVDYW5kaWRhdGU9ZnVuY3Rpb24oZSl7Y29uc3QgdD1bXTt0LnB1c2goZS5mb3VuZGF0aW9uKTtjb25zdCBpPWUuY29tcG9uZW50O1wicnRwXCI9PT1pP3QucHVzaCgxKTpcInJ0Y3BcIj09PWk/dC5wdXNoKDIpOnQucHVzaChpKSx0LnB1c2goZS5wcm90b2NvbC50b1VwcGVyQ2FzZSgpKSx0LnB1c2goZS5wcmlvcml0eSksdC5wdXNoKGUuYWRkcmVzc3x8ZS5pcCksdC5wdXNoKGUucG9ydCk7Y29uc3Qgbj1lLnR5cGU7cmV0dXJuIHQucHVzaChcInR5cFwiKSx0LnB1c2gobiksXCJob3N0XCIhPT1uJiZlLnJlbGF0ZWRBZGRyZXNzJiZlLnJlbGF0ZWRQb3J0JiYodC5wdXNoKFwicmFkZHJcIiksdC5wdXNoKGUucmVsYXRlZEFkZHJlc3MpLHQucHVzaChcInJwb3J0XCIpLHQucHVzaChlLnJlbGF0ZWRQb3J0KSksZS50Y3BUeXBlJiZcInRjcFwiPT09ZS5wcm90b2NvbC50b0xvd2VyQ2FzZSgpJiYodC5wdXNoKFwidGNwdHlwZVwiKSx0LnB1c2goZS50Y3BUeXBlKSksKGUudXNlcm5hbWVGcmFnbWVudHx8ZS51ZnJhZykmJih0LnB1c2goXCJ1ZnJhZ1wiKSx0LnB1c2goZS51c2VybmFtZUZyYWdtZW50fHxlLnVmcmFnKSksXCJjYW5kaWRhdGU6XCIrdC5qb2luKFwiIFwiKX0sdC5wYXJzZUljZU9wdGlvbnM9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuc3Vic3RyaW5nKDE0KS5zcGxpdChcIiBcIil9LHQucGFyc2VSdHBNYXA9ZnVuY3Rpb24oZSl7bGV0IHQ9ZS5zdWJzdHJpbmcoOSkuc3BsaXQoXCIgXCIpO2NvbnN0IGk9e3BheWxvYWRUeXBlOnBhcnNlSW50KHQuc2hpZnQoKSwxMCl9O3JldHVybiB0PXRbMF0uc3BsaXQoXCIvXCIpLGkubmFtZT10WzBdLGkuY2xvY2tSYXRlPXBhcnNlSW50KHRbMV0sMTApLGkuY2hhbm5lbHM9Mz09PXQubGVuZ3RoP3BhcnNlSW50KHRbMl0sMTApOjEsaS5udW1DaGFubmVscz1pLmNoYW5uZWxzLGl9LHQud3JpdGVSdHBNYXA9ZnVuY3Rpb24oZSl7bGV0IHQ9ZS5wYXlsb2FkVHlwZTt2b2lkIDAhPT1lLnByZWZlcnJlZFBheWxvYWRUeXBlJiYodD1lLnByZWZlcnJlZFBheWxvYWRUeXBlKTtjb25zdCBpPWUuY2hhbm5lbHN8fGUubnVtQ2hhbm5lbHN8fDE7cmV0dXJuXCJhPXJ0cG1hcDpcIit0K1wiIFwiK2UubmFtZStcIi9cIitlLmNsb2NrUmF0ZSsoMSE9PWk/XCIvXCIraTpcIlwiKStcIlxcclxcblwifSx0LnBhcnNlRXh0bWFwPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZS5zdWJzdHJpbmcoOSkuc3BsaXQoXCIgXCIpO3JldHVybntpZDpwYXJzZUludCh0WzBdLDEwKSxkaXJlY3Rpb246dFswXS5pbmRleE9mKFwiL1wiKT4wP3RbMF0uc3BsaXQoXCIvXCIpWzFdOlwic2VuZHJlY3ZcIix1cmk6dFsxXSxhdHRyaWJ1dGVzOnQuc2xpY2UoMikuam9pbihcIiBcIil9fSx0LndyaXRlRXh0bWFwPWZ1bmN0aW9uKGUpe3JldHVyblwiYT1leHRtYXA6XCIrKGUuaWR8fGUucHJlZmVycmVkSWQpKyhlLmRpcmVjdGlvbiYmXCJzZW5kcmVjdlwiIT09ZS5kaXJlY3Rpb24/XCIvXCIrZS5kaXJlY3Rpb246XCJcIikrXCIgXCIrZS51cmkrKGUuYXR0cmlidXRlcz9cIiBcIitlLmF0dHJpYnV0ZXM6XCJcIikrXCJcXHJcXG5cIn0sdC5wYXJzZUZtdHA9ZnVuY3Rpb24oZSl7Y29uc3QgdD17fTtsZXQgaTtjb25zdCBuPWUuc3Vic3RyaW5nKGUuaW5kZXhPZihcIiBcIikrMSkuc3BsaXQoXCI7XCIpO2ZvcihsZXQgZT0wO2U8bi5sZW5ndGg7ZSsrKWk9bltlXS50cmltKCkuc3BsaXQoXCI9XCIpLHRbaVswXS50cmltKCldPWlbMV07cmV0dXJuIHR9LHQud3JpdGVGbXRwPWZ1bmN0aW9uKGUpe2xldCB0PVwiXCIsaT1lLnBheWxvYWRUeXBlO2lmKHZvaWQgMCE9PWUucHJlZmVycmVkUGF5bG9hZFR5cGUmJihpPWUucHJlZmVycmVkUGF5bG9hZFR5cGUpLGUucGFyYW1ldGVycyYmT2JqZWN0LmtleXMoZS5wYXJhbWV0ZXJzKS5sZW5ndGgpe2NvbnN0IG49W107T2JqZWN0LmtleXMoZS5wYXJhbWV0ZXJzKS5mb3JFYWNoKCh0PT57dm9pZCAwIT09ZS5wYXJhbWV0ZXJzW3RdP24ucHVzaCh0K1wiPVwiK2UucGFyYW1ldGVyc1t0XSk6bi5wdXNoKHQpfSkpLHQrPVwiYT1mbXRwOlwiK2krXCIgXCIrbi5qb2luKFwiO1wiKStcIlxcclxcblwifXJldHVybiB0fSx0LnBhcnNlUnRjcEZiPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZS5zdWJzdHJpbmcoZS5pbmRleE9mKFwiIFwiKSsxKS5zcGxpdChcIiBcIik7cmV0dXJue3R5cGU6dC5zaGlmdCgpLHBhcmFtZXRlcjp0LmpvaW4oXCIgXCIpfX0sdC53cml0ZVJ0Y3BGYj1mdW5jdGlvbihlKXtsZXQgdD1cIlwiLGk9ZS5wYXlsb2FkVHlwZTtyZXR1cm4gdm9pZCAwIT09ZS5wcmVmZXJyZWRQYXlsb2FkVHlwZSYmKGk9ZS5wcmVmZXJyZWRQYXlsb2FkVHlwZSksZS5ydGNwRmVlZGJhY2smJmUucnRjcEZlZWRiYWNrLmxlbmd0aCYmZS5ydGNwRmVlZGJhY2suZm9yRWFjaCgoZT0+e3QrPVwiYT1ydGNwLWZiOlwiK2krXCIgXCIrZS50eXBlKyhlLnBhcmFtZXRlciYmZS5wYXJhbWV0ZXIubGVuZ3RoP1wiIFwiK2UucGFyYW1ldGVyOlwiXCIpK1wiXFxyXFxuXCJ9KSksdH0sdC5wYXJzZVNzcmNNZWRpYT1mdW5jdGlvbihlKXtjb25zdCB0PWUuaW5kZXhPZihcIiBcIiksaT17c3NyYzpwYXJzZUludChlLnN1YnN0cmluZyg3LHQpLDEwKX0sbj1lLmluZGV4T2YoXCI6XCIsdCk7cmV0dXJuIG4+LTE/KGkuYXR0cmlidXRlPWUuc3Vic3RyaW5nKHQrMSxuKSxpLnZhbHVlPWUuc3Vic3RyaW5nKG4rMSkpOmkuYXR0cmlidXRlPWUuc3Vic3RyaW5nKHQrMSksaX0sdC5wYXJzZVNzcmNHcm91cD1mdW5jdGlvbihlKXtjb25zdCB0PWUuc3Vic3RyaW5nKDEzKS5zcGxpdChcIiBcIik7cmV0dXJue3NlbWFudGljczp0LnNoaWZ0KCksc3NyY3M6dC5tYXAoKGU9PnBhcnNlSW50KGUsMTApKSl9fSx0LmdldE1pZD1mdW5jdGlvbihlKXtjb25zdCBpPXQubWF0Y2hQcmVmaXgoZSxcImE9bWlkOlwiKVswXTtpZihpKXJldHVybiBpLnN1YnN0cmluZyg2KX0sdC5wYXJzZUZpbmdlcnByaW50PWZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZS5zdWJzdHJpbmcoMTQpLnNwbGl0KFwiIFwiKTtyZXR1cm57YWxnb3JpdGhtOnRbMF0udG9Mb3dlckNhc2UoKSx2YWx1ZTp0WzFdLnRvVXBwZXJDYXNlKCl9fSx0LmdldER0bHNQYXJhbWV0ZXJzPWZ1bmN0aW9uKGUsaSl7cmV0dXJue3JvbGU6XCJhdXRvXCIsZmluZ2VycHJpbnRzOnQubWF0Y2hQcmVmaXgoZStpLFwiYT1maW5nZXJwcmludDpcIikubWFwKHQucGFyc2VGaW5nZXJwcmludCl9fSx0LndyaXRlRHRsc1BhcmFtZXRlcnM9ZnVuY3Rpb24oZSx0KXtsZXQgaT1cImE9c2V0dXA6XCIrdCtcIlxcclxcblwiO3JldHVybiBlLmZpbmdlcnByaW50cy5mb3JFYWNoKChlPT57aSs9XCJhPWZpbmdlcnByaW50OlwiK2UuYWxnb3JpdGhtK1wiIFwiK2UudmFsdWUrXCJcXHJcXG5cIn0pKSxpfSx0LnBhcnNlQ3J5cHRvTGluZT1mdW5jdGlvbihlKXtjb25zdCB0PWUuc3Vic3RyaW5nKDkpLnNwbGl0KFwiIFwiKTtyZXR1cm57dGFnOnBhcnNlSW50KHRbMF0sMTApLGNyeXB0b1N1aXRlOnRbMV0sa2V5UGFyYW1zOnRbMl0sc2Vzc2lvblBhcmFtczp0LnNsaWNlKDMpfX0sdC53cml0ZUNyeXB0b0xpbmU9ZnVuY3Rpb24oZSl7cmV0dXJuXCJhPWNyeXB0bzpcIitlLnRhZytcIiBcIitlLmNyeXB0b1N1aXRlK1wiIFwiKyhcIm9iamVjdFwiPT10eXBlb2YgZS5rZXlQYXJhbXM/dC53cml0ZUNyeXB0b0tleVBhcmFtcyhlLmtleVBhcmFtcyk6ZS5rZXlQYXJhbXMpKyhlLnNlc3Npb25QYXJhbXM/XCIgXCIrZS5zZXNzaW9uUGFyYW1zLmpvaW4oXCIgXCIpOlwiXCIpK1wiXFxyXFxuXCJ9LHQucGFyc2VDcnlwdG9LZXlQYXJhbXM9ZnVuY3Rpb24oZSl7aWYoMCE9PWUuaW5kZXhPZihcImlubGluZTpcIikpcmV0dXJuIG51bGw7Y29uc3QgdD1lLnN1YnN0cmluZyg3KS5zcGxpdChcInxcIik7cmV0dXJue2tleU1ldGhvZDpcImlubGluZVwiLGtleVNhbHQ6dFswXSxsaWZlVGltZTp0WzFdLG1raVZhbHVlOnRbMl0/dFsyXS5zcGxpdChcIjpcIilbMF06dm9pZCAwLG1raUxlbmd0aDp0WzJdP3RbMl0uc3BsaXQoXCI6XCIpWzFdOnZvaWQgMH19LHQud3JpdGVDcnlwdG9LZXlQYXJhbXM9ZnVuY3Rpb24oZSl7cmV0dXJuIGUua2V5TWV0aG9kK1wiOlwiK2Uua2V5U2FsdCsoZS5saWZlVGltZT9cInxcIitlLmxpZmVUaW1lOlwiXCIpKyhlLm1raVZhbHVlJiZlLm1raUxlbmd0aD9cInxcIitlLm1raVZhbHVlK1wiOlwiK2UubWtpTGVuZ3RoOlwiXCIpfSx0LmdldENyeXB0b1BhcmFtZXRlcnM9ZnVuY3Rpb24oZSxpKXtyZXR1cm4gdC5tYXRjaFByZWZpeChlK2ksXCJhPWNyeXB0bzpcIikubWFwKHQucGFyc2VDcnlwdG9MaW5lKX0sdC5nZXRJY2VQYXJhbWV0ZXJzPWZ1bmN0aW9uKGUsaSl7Y29uc3Qgbj10Lm1hdGNoUHJlZml4KGUraSxcImE9aWNlLXVmcmFnOlwiKVswXSxyPXQubWF0Y2hQcmVmaXgoZStpLFwiYT1pY2UtcHdkOlwiKVswXTtyZXR1cm4gbiYmcj97dXNlcm5hbWVGcmFnbWVudDpuLnN1YnN0cmluZygxMikscGFzc3dvcmQ6ci5zdWJzdHJpbmcoMTApfTpudWxsfSx0LndyaXRlSWNlUGFyYW1ldGVycz1mdW5jdGlvbihlKXtsZXQgdD1cImE9aWNlLXVmcmFnOlwiK2UudXNlcm5hbWVGcmFnbWVudCtcIlxcclxcbmE9aWNlLXB3ZDpcIitlLnBhc3N3b3JkK1wiXFxyXFxuXCI7cmV0dXJuIGUuaWNlTGl0ZSYmKHQrPVwiYT1pY2UtbGl0ZVxcclxcblwiKSx0fSx0LnBhcnNlUnRwUGFyYW1ldGVycz1mdW5jdGlvbihlKXtjb25zdCBpPXtjb2RlY3M6W10saGVhZGVyRXh0ZW5zaW9uczpbXSxmZWNNZWNoYW5pc21zOltdLHJ0Y3A6W119LG49dC5zcGxpdExpbmVzKGUpWzBdLnNwbGl0KFwiIFwiKTtpLnByb2ZpbGU9blsyXTtmb3IobGV0IHI9MztyPG4ubGVuZ3RoO3IrKyl7Y29uc3Qgbz1uW3JdLHM9dC5tYXRjaFByZWZpeChlLFwiYT1ydHBtYXA6XCIrbytcIiBcIilbMF07aWYocyl7Y29uc3Qgbj10LnBhcnNlUnRwTWFwKHMpLHI9dC5tYXRjaFByZWZpeChlLFwiYT1mbXRwOlwiK28rXCIgXCIpO3N3aXRjaChuLnBhcmFtZXRlcnM9ci5sZW5ndGg/dC5wYXJzZUZtdHAoclswXSk6e30sbi5ydGNwRmVlZGJhY2s9dC5tYXRjaFByZWZpeChlLFwiYT1ydGNwLWZiOlwiK28rXCIgXCIpLm1hcCh0LnBhcnNlUnRjcEZiKSxpLmNvZGVjcy5wdXNoKG4pLG4ubmFtZS50b1VwcGVyQ2FzZSgpKXtjYXNlXCJSRURcIjpjYXNlXCJVTFBGRUNcIjppLmZlY01lY2hhbmlzbXMucHVzaChuLm5hbWUudG9VcHBlckNhc2UoKSl9fX10Lm1hdGNoUHJlZml4KGUsXCJhPWV4dG1hcDpcIikuZm9yRWFjaCgoZT0+e2kuaGVhZGVyRXh0ZW5zaW9ucy5wdXNoKHQucGFyc2VFeHRtYXAoZSkpfSkpO2NvbnN0IHI9dC5tYXRjaFByZWZpeChlLFwiYT1ydGNwLWZiOiogXCIpLm1hcCh0LnBhcnNlUnRjcEZiKTtyZXR1cm4gaS5jb2RlY3MuZm9yRWFjaCgoZT0+e3IuZm9yRWFjaCgodD0+e2UucnRjcEZlZWRiYWNrLmZpbmQoKGU9PmUudHlwZT09PXQudHlwZSYmZS5wYXJhbWV0ZXI9PT10LnBhcmFtZXRlcikpfHxlLnJ0Y3BGZWVkYmFjay5wdXNoKHQpfSkpfSkpLGl9LHQud3JpdGVSdHBEZXNjcmlwdGlvbj1mdW5jdGlvbihlLGkpe2xldCBuPVwiXCI7bis9XCJtPVwiK2UrXCIgXCIsbis9aS5jb2RlY3MubGVuZ3RoPjA/XCI5XCI6XCIwXCIsbis9XCIgXCIrKGkucHJvZmlsZXx8XCJVRFAvVExTL1JUUC9TQVZQRlwiKStcIiBcIixuKz1pLmNvZGVjcy5tYXAoKGU9PnZvaWQgMCE9PWUucHJlZmVycmVkUGF5bG9hZFR5cGU/ZS5wcmVmZXJyZWRQYXlsb2FkVHlwZTplLnBheWxvYWRUeXBlKSkuam9pbihcIiBcIikrXCJcXHJcXG5cIixuKz1cImM9SU4gSVA0IDAuMC4wLjBcXHJcXG5cIixuKz1cImE9cnRjcDo5IElOIElQNCAwLjAuMC4wXFxyXFxuXCIsaS5jb2RlY3MuZm9yRWFjaCgoZT0+e24rPXQud3JpdGVSdHBNYXAoZSksbis9dC53cml0ZUZtdHAoZSksbis9dC53cml0ZVJ0Y3BGYihlKX0pKTtsZXQgcj0wO3JldHVybiBpLmNvZGVjcy5mb3JFYWNoKChlPT57ZS5tYXhwdGltZT5yJiYocj1lLm1heHB0aW1lKX0pKSxyPjAmJihuKz1cImE9bWF4cHRpbWU6XCIrcitcIlxcclxcblwiKSxpLmhlYWRlckV4dGVuc2lvbnMmJmkuaGVhZGVyRXh0ZW5zaW9ucy5mb3JFYWNoKChlPT57bis9dC53cml0ZUV4dG1hcChlKX0pKSxufSx0LnBhcnNlUnRwRW5jb2RpbmdQYXJhbWV0ZXJzPWZ1bmN0aW9uKGUpe2NvbnN0IGk9W10sbj10LnBhcnNlUnRwUGFyYW1ldGVycyhlKSxyPS0xIT09bi5mZWNNZWNoYW5pc21zLmluZGV4T2YoXCJSRURcIiksbz0tMSE9PW4uZmVjTWVjaGFuaXNtcy5pbmRleE9mKFwiVUxQRkVDXCIpLHM9dC5tYXRjaFByZWZpeChlLFwiYT1zc3JjOlwiKS5tYXAoKGU9PnQucGFyc2VTc3JjTWVkaWEoZSkpKS5maWx0ZXIoKGU9PlwiY25hbWVcIj09PWUuYXR0cmlidXRlKSksYT1zLmxlbmd0aD4wJiZzWzBdLnNzcmM7bGV0IGM7Y29uc3QgZD10Lm1hdGNoUHJlZml4KGUsXCJhPXNzcmMtZ3JvdXA6RklEXCIpLm1hcCgoZT0+ZS5zdWJzdHJpbmcoMTcpLnNwbGl0KFwiIFwiKS5tYXAoKGU9PnBhcnNlSW50KGUsMTApKSkpKTtkLmxlbmd0aD4wJiZkWzBdLmxlbmd0aD4xJiZkWzBdWzBdPT09YSYmKGM9ZFswXVsxXSksbi5jb2RlY3MuZm9yRWFjaCgoZT0+e2lmKFwiUlRYXCI9PT1lLm5hbWUudG9VcHBlckNhc2UoKSYmZS5wYXJhbWV0ZXJzLmFwdCl7bGV0IHQ9e3NzcmM6YSxjb2RlY1BheWxvYWRUeXBlOnBhcnNlSW50KGUucGFyYW1ldGVycy5hcHQsMTApfTthJiZjJiYodC5ydHg9e3NzcmM6Y30pLGkucHVzaCh0KSxyJiYodD1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHQpKSx0LmZlYz17c3NyYzphLG1lY2hhbmlzbTpvP1wicmVkK3VscGZlY1wiOlwicmVkXCJ9LGkucHVzaCh0KSl9fSkpLDA9PT1pLmxlbmd0aCYmYSYmaS5wdXNoKHtzc3JjOmF9KTtsZXQgbD10Lm1hdGNoUHJlZml4KGUsXCJiPVwiKTtyZXR1cm4gbC5sZW5ndGgmJihsPTA9PT1sWzBdLmluZGV4T2YoXCJiPVRJQVM6XCIpP3BhcnNlSW50KGxbMF0uc3Vic3RyaW5nKDcpLDEwKTowPT09bFswXS5pbmRleE9mKFwiYj1BUzpcIik/MWUzKnBhcnNlSW50KGxbMF0uc3Vic3RyaW5nKDUpLDEwKSouOTUtMTZlMzp2b2lkIDAsaS5mb3JFYWNoKChlPT57ZS5tYXhCaXRyYXRlPWx9KSkpLGl9LHQucGFyc2VSdGNwUGFyYW1ldGVycz1mdW5jdGlvbihlKXtjb25zdCBpPXt9LG49dC5tYXRjaFByZWZpeChlLFwiYT1zc3JjOlwiKS5tYXAoKGU9PnQucGFyc2VTc3JjTWVkaWEoZSkpKS5maWx0ZXIoKGU9PlwiY25hbWVcIj09PWUuYXR0cmlidXRlKSlbMF07biYmKGkuY25hbWU9bi52YWx1ZSxpLnNzcmM9bi5zc3JjKTtjb25zdCByPXQubWF0Y2hQcmVmaXgoZSxcImE9cnRjcC1yc2l6ZVwiKTtpLnJlZHVjZWRTaXplPXIubGVuZ3RoPjAsaS5jb21wb3VuZD0wPT09ci5sZW5ndGg7Y29uc3Qgbz10Lm1hdGNoUHJlZml4KGUsXCJhPXJ0Y3AtbXV4XCIpO3JldHVybiBpLm11eD1vLmxlbmd0aD4wLGl9LHQud3JpdGVSdGNwUGFyYW1ldGVycz1mdW5jdGlvbihlKXtsZXQgdD1cIlwiO3JldHVybiBlLnJlZHVjZWRTaXplJiYodCs9XCJhPXJ0Y3AtcnNpemVcXHJcXG5cIiksZS5tdXgmJih0Kz1cImE9cnRjcC1tdXhcXHJcXG5cIiksdm9pZCAwIT09ZS5zc3JjJiZlLmNuYW1lJiYodCs9XCJhPXNzcmM6XCIrZS5zc3JjK1wiIGNuYW1lOlwiK2UuY25hbWUrXCJcXHJcXG5cIiksdH0sdC5wYXJzZU1zaWQ9ZnVuY3Rpb24oZSl7bGV0IGk7Y29uc3Qgbj10Lm1hdGNoUHJlZml4KGUsXCJhPW1zaWQ6XCIpO2lmKDE9PT1uLmxlbmd0aClyZXR1cm4gaT1uWzBdLnN1YnN0cmluZyg3KS5zcGxpdChcIiBcIikse3N0cmVhbTppWzBdLHRyYWNrOmlbMV19O2NvbnN0IHI9dC5tYXRjaFByZWZpeChlLFwiYT1zc3JjOlwiKS5tYXAoKGU9PnQucGFyc2VTc3JjTWVkaWEoZSkpKS5maWx0ZXIoKGU9PlwibXNpZFwiPT09ZS5hdHRyaWJ1dGUpKTtyZXR1cm4gci5sZW5ndGg+MD8oaT1yWzBdLnZhbHVlLnNwbGl0KFwiIFwiKSx7c3RyZWFtOmlbMF0sdHJhY2s6aVsxXX0pOnZvaWQgMH0sdC5wYXJzZVNjdHBEZXNjcmlwdGlvbj1mdW5jdGlvbihlKXtjb25zdCBpPXQucGFyc2VNTGluZShlKSxuPXQubWF0Y2hQcmVmaXgoZSxcImE9bWF4LW1lc3NhZ2Utc2l6ZTpcIik7bGV0IHI7bi5sZW5ndGg+MCYmKHI9cGFyc2VJbnQoblswXS5zdWJzdHJpbmcoMTkpLDEwKSksaXNOYU4ocikmJihyPTY1NTM2KTtjb25zdCBvPXQubWF0Y2hQcmVmaXgoZSxcImE9c2N0cC1wb3J0OlwiKTtpZihvLmxlbmd0aD4wKXJldHVybntwb3J0OnBhcnNlSW50KG9bMF0uc3Vic3RyaW5nKDEyKSwxMCkscHJvdG9jb2w6aS5mbXQsbWF4TWVzc2FnZVNpemU6cn07Y29uc3Qgcz10Lm1hdGNoUHJlZml4KGUsXCJhPXNjdHBtYXA6XCIpO2lmKHMubGVuZ3RoPjApe2NvbnN0IGU9c1swXS5zdWJzdHJpbmcoMTApLnNwbGl0KFwiIFwiKTtyZXR1cm57cG9ydDpwYXJzZUludChlWzBdLDEwKSxwcm90b2NvbDplWzFdLG1heE1lc3NhZ2VTaXplOnJ9fX0sdC53cml0ZVNjdHBEZXNjcmlwdGlvbj1mdW5jdGlvbihlLHQpe2xldCBpPVtdO3JldHVybiBpPVwiRFRMUy9TQ1RQXCIhPT1lLnByb3RvY29sP1tcIm09XCIrZS5raW5kK1wiIDkgXCIrZS5wcm90b2NvbCtcIiBcIit0LnByb3RvY29sK1wiXFxyXFxuXCIsXCJjPUlOIElQNCAwLjAuMC4wXFxyXFxuXCIsXCJhPXNjdHAtcG9ydDpcIit0LnBvcnQrXCJcXHJcXG5cIl06W1wibT1cIitlLmtpbmQrXCIgOSBcIitlLnByb3RvY29sK1wiIFwiK3QucG9ydCtcIlxcclxcblwiLFwiYz1JTiBJUDQgMC4wLjAuMFxcclxcblwiLFwiYT1zY3RwbWFwOlwiK3QucG9ydCtcIiBcIit0LnByb3RvY29sK1wiIDY1NTM1XFxyXFxuXCJdLHZvaWQgMCE9PXQubWF4TWVzc2FnZVNpemUmJmkucHVzaChcImE9bWF4LW1lc3NhZ2Utc2l6ZTpcIit0Lm1heE1lc3NhZ2VTaXplK1wiXFxyXFxuXCIpLGkuam9pbihcIlwiKX0sdC5nZW5lcmF0ZVNlc3Npb25JZD1mdW5jdGlvbigpe3JldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKCkuc3Vic3RyKDIsMjIpfSx0LndyaXRlU2Vzc2lvbkJvaWxlcnBsYXRlPWZ1bmN0aW9uKGUsaSxuKXtsZXQgcjtjb25zdCBvPXZvaWQgMCE9PWk/aToyO3I9ZXx8dC5nZW5lcmF0ZVNlc3Npb25JZCgpO3JldHVyblwidj0wXFxyXFxubz1cIisobnx8XCJ0aGlzaXNhZGFwdGVyb3J0Y1wiKStcIiBcIityK1wiIFwiK28rXCIgSU4gSVA0IDEyNy4wLjAuMVxcclxcbnM9LVxcclxcbnQ9MCAwXFxyXFxuXCJ9LHQuZ2V0RGlyZWN0aW9uPWZ1bmN0aW9uKGUsaSl7Y29uc3Qgbj10LnNwbGl0TGluZXMoZSk7Zm9yKGxldCBlPTA7ZTxuLmxlbmd0aDtlKyspc3dpdGNoKG5bZV0pe2Nhc2VcImE9c2VuZHJlY3ZcIjpjYXNlXCJhPXNlbmRvbmx5XCI6Y2FzZVwiYT1yZWN2b25seVwiOmNhc2VcImE9aW5hY3RpdmVcIjpyZXR1cm4gbltlXS5zdWJzdHJpbmcoMil9cmV0dXJuIGk/dC5nZXREaXJlY3Rpb24oaSk6XCJzZW5kcmVjdlwifSx0LmdldEtpbmQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHQuc3BsaXRMaW5lcyhlKVswXS5zcGxpdChcIiBcIilbMF0uc3Vic3RyaW5nKDIpfSx0LmlzUmVqZWN0ZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuXCIwXCI9PT1lLnNwbGl0KFwiIFwiLDIpWzFdfSx0LnBhcnNlTUxpbmU9ZnVuY3Rpb24oZSl7Y29uc3QgaT10LnNwbGl0TGluZXMoZSlbMF0uc3Vic3RyaW5nKDIpLnNwbGl0KFwiIFwiKTtyZXR1cm57a2luZDppWzBdLHBvcnQ6cGFyc2VJbnQoaVsxXSwxMCkscHJvdG9jb2w6aVsyXSxmbXQ6aS5zbGljZSgzKS5qb2luKFwiIFwiKX19LHQucGFyc2VPTGluZT1mdW5jdGlvbihlKXtjb25zdCBpPXQubWF0Y2hQcmVmaXgoZSxcIm89XCIpWzBdLnN1YnN0cmluZygyKS5zcGxpdChcIiBcIik7cmV0dXJue3VzZXJuYW1lOmlbMF0sc2Vzc2lvbklkOmlbMV0sc2Vzc2lvblZlcnNpb246cGFyc2VJbnQoaVsyXSwxMCksbmV0VHlwZTppWzNdLGFkZHJlc3NUeXBlOmlbNF0sYWRkcmVzczppWzVdfX0sdC5pc1ZhbGlkU0RQPWZ1bmN0aW9uKGUpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlfHwwPT09ZS5sZW5ndGgpcmV0dXJuITE7Y29uc3QgaT10LnNwbGl0TGluZXMoZSk7Zm9yKGxldCBlPTA7ZTxpLmxlbmd0aDtlKyspaWYoaVtlXS5sZW5ndGg8Mnx8XCI9XCIhPT1pW2VdLmNoYXJBdCgxKSlyZXR1cm4hMTtyZXR1cm4hMH0sZS5leHBvcnRzPXR9KEdwKTt2YXIgV3A9R3AuZXhwb3J0cyxIcD1pKFdwKSxLcD1lKHtfX3Byb3RvX186bnVsbCxkZWZhdWx0OkhwfSxbV3BdKTtmdW5jdGlvbiBZcChlKXtpZighZS5SVENJY2VDYW5kaWRhdGV8fGUuUlRDSWNlQ2FuZGlkYXRlJiZcImZvdW5kYXRpb25cImluIGUuUlRDSWNlQ2FuZGlkYXRlLnByb3RvdHlwZSlyZXR1cm47Y29uc3QgdD1lLlJUQ0ljZUNhbmRpZGF0ZTtlLlJUQ0ljZUNhbmRpZGF0ZT1mdW5jdGlvbihlKXtpZihcIm9iamVjdFwiPT10eXBlb2YgZSYmZS5jYW5kaWRhdGUmJjA9PT1lLmNhbmRpZGF0ZS5pbmRleE9mKFwiYT1cIikmJigoZT1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGUpKSkuY2FuZGlkYXRlPWUuY2FuZGlkYXRlLnN1YnN0cigyKSksZS5jYW5kaWRhdGUmJmUuY2FuZGlkYXRlLmxlbmd0aCl7Y29uc3QgaT1uZXcgdChlKSxuPUhwLnBhcnNlQ2FuZGlkYXRlKGUuY2FuZGlkYXRlKSxyPU9iamVjdC5hc3NpZ24oaSxuKTtyZXR1cm4gci50b0pTT049ZnVuY3Rpb24oKXtyZXR1cm57Y2FuZGlkYXRlOnIuY2FuZGlkYXRlLHNkcE1pZDpyLnNkcE1pZCxzZHBNTGluZUluZGV4OnIuc2RwTUxpbmVJbmRleCx1c2VybmFtZUZyYWdtZW50OnIudXNlcm5hbWVGcmFnbWVudH19LHJ9cmV0dXJuIG5ldyB0KGUpfSxlLlJUQ0ljZUNhbmRpZGF0ZS5wcm90b3R5cGU9dC5wcm90b3R5cGUsJG4oZSxcImljZWNhbmRpZGF0ZVwiLCh0PT4odC5jYW5kaWRhdGUmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiY2FuZGlkYXRlXCIse3ZhbHVlOm5ldyBlLlJUQ0ljZUNhbmRpZGF0ZSh0LmNhbmRpZGF0ZSksd3JpdGFibGU6XCJmYWxzZVwifSksdCkpKX1mdW5jdGlvbiBxcChlKXshZS5SVENJY2VDYW5kaWRhdGV8fGUuUlRDSWNlQ2FuZGlkYXRlJiZcInJlbGF5UHJvdG9jb2xcImluIGUuUlRDSWNlQ2FuZGlkYXRlLnByb3RvdHlwZXx8JG4oZSxcImljZWNhbmRpZGF0ZVwiLChlPT57aWYoZS5jYW5kaWRhdGUpe2NvbnN0IHQ9SHAucGFyc2VDYW5kaWRhdGUoZS5jYW5kaWRhdGUuY2FuZGlkYXRlKTtcInJlbGF5XCI9PT10LnR5cGUmJihlLmNhbmRpZGF0ZS5yZWxheVByb3RvY29sPXswOlwidGxzXCIsMTpcInRjcFwiLDI6XCJ1ZHBcIn1bdC5wcmlvcml0eT4+MjRdKX1yZXR1cm4gZX0pKX1mdW5jdGlvbiB6cChlLHQpe2lmKCFlLlJUQ1BlZXJDb25uZWN0aW9uKXJldHVybjtcInNjdHBcImluIGUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUsXCJzY3RwXCIse2dldCgpe3JldHVybiB2b2lkIDA9PT10aGlzLl9zY3RwP251bGw6dGhpcy5fc2N0cH19KTtjb25zdCBpPWZ1bmN0aW9uKGUpe2lmKCFlfHwhZS5zZHApcmV0dXJuITE7Y29uc3QgdD1IcC5zcGxpdFNlY3Rpb25zKGUuc2RwKTtyZXR1cm4gdC5zaGlmdCgpLHQuc29tZSgoZT0+e2NvbnN0IHQ9SHAucGFyc2VNTGluZShlKTtyZXR1cm4gdCYmXCJhcHBsaWNhdGlvblwiPT09dC5raW5kJiYtMSE9PXQucHJvdG9jb2wuaW5kZXhPZihcIlNDVFBcIil9KSl9LG49ZnVuY3Rpb24oZSl7Y29uc3QgdD1lLnNkcC5tYXRjaCgvbW96aWxsYS4uLlRISVNfSVNfU0RQQVJUQS0oXFxkKykvKTtpZihudWxsPT09dHx8dC5sZW5ndGg8MilyZXR1cm4tMTtjb25zdCBpPXBhcnNlSW50KHRbMV0sMTApO3JldHVybiBpIT1pPy0xOml9LHI9ZnVuY3Rpb24oZSl7bGV0IGk9NjU1MzY7cmV0dXJuXCJmaXJlZm94XCI9PT10LmJyb3dzZXImJihpPXQudmVyc2lvbjw1Nz8tMT09PWU/MTYzODQ6MjE0NzQ4MzYzNzp0LnZlcnNpb248NjA/NTc9PT10LnZlcnNpb24/NjU1MzU6NjU1MzY6MjE0NzQ4MzYzNyksaX0sbz1mdW5jdGlvbihlLGkpe2xldCBuPTY1NTM2O1wiZmlyZWZveFwiPT09dC5icm93c2VyJiY1Nz09PXQudmVyc2lvbiYmKG49NjU1MzUpO2NvbnN0IHI9SHAubWF0Y2hQcmVmaXgoZS5zZHAsXCJhPW1heC1tZXNzYWdlLXNpemU6XCIpO3JldHVybiByLmxlbmd0aD4wP249cGFyc2VJbnQoclswXS5zdWJzdHIoMTkpLDEwKTpcImZpcmVmb3hcIj09PXQuYnJvd3NlciYmLTEhPT1pJiYobj0yMTQ3NDgzNjM3KSxufSxzPWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLnNldFJlbW90ZURlc2NyaXB0aW9uO2UuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLnNldFJlbW90ZURlc2NyaXB0aW9uPWZ1bmN0aW9uKCl7aWYodGhpcy5fc2N0cD1udWxsLFwiY2hyb21lXCI9PT10LmJyb3dzZXImJnQudmVyc2lvbj49NzYpe2NvbnN0e3NkcFNlbWFudGljczplfT10aGlzLmdldENvbmZpZ3VyYXRpb24oKTtcInBsYW4tYlwiPT09ZSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJzY3RwXCIse2dldCgpe3JldHVybiB2b2lkIDA9PT10aGlzLl9zY3RwP251bGw6dGhpcy5fc2N0cH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KX1pZihpKGFyZ3VtZW50c1swXSkpe2NvbnN0IGU9bihhcmd1bWVudHNbMF0pLHQ9cihlKSxpPW8oYXJndW1lbnRzWzBdLGUpO2xldCBzO3M9MD09PXQmJjA9PT1pP051bWJlci5QT1NJVElWRV9JTkZJTklUWTowPT09dHx8MD09PWk/TWF0aC5tYXgodCxpKTpNYXRoLm1pbih0LGkpO2NvbnN0IGE9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsXCJtYXhNZXNzYWdlU2l6ZVwiLHtnZXQ6KCk9PnN9KSx0aGlzLl9zY3RwPWF9cmV0dXJuIHMuYXBwbHkodGhpcyxhcmd1bWVudHMpfX1mdW5jdGlvbiBKcChlKXtpZighZS5SVENQZWVyQ29ubmVjdGlvbnx8IShcImNyZWF0ZURhdGFDaGFubmVsXCJpbiBlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZSkpcmV0dXJuO2Z1bmN0aW9uIHQoZSx0KXtjb25zdCBpPWUuc2VuZDtlLnNlbmQ9ZnVuY3Rpb24oKXtjb25zdCBuPWFyZ3VtZW50c1swXSxyPW4ubGVuZ3RofHxuLnNpemV8fG4uYnl0ZUxlbmd0aDtpZihcIm9wZW5cIj09PWUucmVhZHlTdGF0ZSYmdC5zY3RwJiZyPnQuc2N0cC5tYXhNZXNzYWdlU2l6ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiTWVzc2FnZSB0b28gbGFyZ2UgKGNhbiBzZW5kIGEgbWF4aW11bSBvZiBcIit0LnNjdHAubWF4TWVzc2FnZVNpemUrXCIgYnl0ZXMpXCIpO3JldHVybiBpLmFwcGx5KGUsYXJndW1lbnRzKX19Y29uc3QgaT1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5jcmVhdGVEYXRhQ2hhbm5lbDtlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5jcmVhdGVEYXRhQ2hhbm5lbD1mdW5jdGlvbigpe2NvbnN0IGU9aS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIHQoZSx0aGlzKSxlfSwkbihlLFwiZGF0YWNoYW5uZWxcIiwoZT0+KHQoZS5jaGFubmVsLGUudGFyZ2V0KSxlKSkpfWZ1bmN0aW9uIFhwKGUpe2lmKCFlLlJUQ1BlZXJDb25uZWN0aW9ufHxcImNvbm5lY3Rpb25TdGF0ZVwiaW4gZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGUpcmV0dXJuO2NvbnN0IHQ9ZS5SVENQZWVyQ29ubmVjdGlvbi5wcm90b3R5cGU7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJjb25uZWN0aW9uU3RhdGVcIix7Z2V0KCl7cmV0dXJue2NvbXBsZXRlZDpcImNvbm5lY3RlZFwiLGNoZWNraW5nOlwiY29ubmVjdGluZ1wifVt0aGlzLmljZUNvbm5lY3Rpb25TdGF0ZV18fHRoaXMuaWNlQ29ubmVjdGlvblN0YXRlfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwib25jb25uZWN0aW9uc3RhdGVjaGFuZ2VcIix7Z2V0KCl7cmV0dXJuIHRoaXMuX29uY29ubmVjdGlvbnN0YXRlY2hhbmdlfHxudWxsfSxzZXQoZSl7dGhpcy5fb25jb25uZWN0aW9uc3RhdGVjaGFuZ2UmJih0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjb25uZWN0aW9uc3RhdGVjaGFuZ2VcIix0aGlzLl9vbmNvbm5lY3Rpb25zdGF0ZWNoYW5nZSksZGVsZXRlIHRoaXMuX29uY29ubmVjdGlvbnN0YXRlY2hhbmdlKSxlJiZ0aGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJjb25uZWN0aW9uc3RhdGVjaGFuZ2VcIix0aGlzLl9vbmNvbm5lY3Rpb25zdGF0ZWNoYW5nZT1lKX0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxbXCJzZXRMb2NhbERlc2NyaXB0aW9uXCIsXCJzZXRSZW1vdGVEZXNjcmlwdGlvblwiXS5mb3JFYWNoKChlPT57Y29uc3QgaT10W2VdO3RbZV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29ubmVjdGlvbnN0YXRlY2hhbmdlcG9seXx8KHRoaXMuX2Nvbm5lY3Rpb25zdGF0ZWNoYW5nZXBvbHk9ZT0+e2NvbnN0IHQ9ZS50YXJnZXQ7aWYodC5fbGFzdENvbm5lY3Rpb25TdGF0ZSE9PXQuY29ubmVjdGlvblN0YXRlKXt0Ll9sYXN0Q29ubmVjdGlvblN0YXRlPXQuY29ubmVjdGlvblN0YXRlO2NvbnN0IGk9bmV3IEV2ZW50KFwiY29ubmVjdGlvbnN0YXRlY2hhbmdlXCIsZSk7dC5kaXNwYXRjaEV2ZW50KGkpfXJldHVybiBlfSx0aGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJpY2Vjb25uZWN0aW9uc3RhdGVjaGFuZ2VcIix0aGlzLl9jb25uZWN0aW9uc3RhdGVjaGFuZ2Vwb2x5KSksaS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSkpfWZ1bmN0aW9uIFFwKGUsdCl7aWYoIWUuUlRDUGVlckNvbm5lY3Rpb24pcmV0dXJuO2lmKFwiY2hyb21lXCI9PT10LmJyb3dzZXImJnQudmVyc2lvbj49NzEpcmV0dXJuO2lmKFwic2FmYXJpXCI9PT10LmJyb3dzZXImJnQudmVyc2lvbj49NjA1KXJldHVybjtjb25zdCBpPWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLnNldFJlbW90ZURlc2NyaXB0aW9uO2UuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLnNldFJlbW90ZURlc2NyaXB0aW9uPWZ1bmN0aW9uKHQpe2lmKHQmJnQuc2RwJiYtMSE9PXQuc2RwLmluZGV4T2YoXCJcXG5hPWV4dG1hcC1hbGxvdy1taXhlZFwiKSl7Y29uc3QgaT10LnNkcC5zcGxpdChcIlxcblwiKS5maWx0ZXIoKGU9PlwiYT1leHRtYXAtYWxsb3ctbWl4ZWRcIiE9PWpwKGUpLmNhbGwoZSkpKS5qb2luKFwiXFxuXCIpO2UuUlRDU2Vzc2lvbkRlc2NyaXB0aW9uJiZ0IGluc3RhbmNlb2YgZS5SVENTZXNzaW9uRGVzY3JpcHRpb24/YXJndW1lbnRzWzBdPW5ldyBlLlJUQ1Nlc3Npb25EZXNjcmlwdGlvbih7dHlwZTp0LnR5cGUsc2RwOml9KTp0LnNkcD1pfXJldHVybiBpLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19ZnVuY3Rpb24gWnAoZSx0KXtpZighZS5SVENQZWVyQ29ubmVjdGlvbnx8IWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlKXJldHVybjtjb25zdCBpPWUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLmFkZEljZUNhbmRpZGF0ZTtpJiYwIT09aS5sZW5ndGgmJihlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5hZGRJY2VDYW5kaWRhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzWzBdPyhcImNocm9tZVwiPT09dC5icm93c2VyJiZ0LnZlcnNpb248Nzh8fFwiZmlyZWZveFwiPT09dC5icm93c2VyJiZ0LnZlcnNpb248Njh8fFwic2FmYXJpXCI9PT10LmJyb3dzZXIpJiZhcmd1bWVudHNbMF0mJlwiXCI9PT1hcmd1bWVudHNbMF0uY2FuZGlkYXRlP0doLnJlc29sdmUoKTppLmFwcGx5KHRoaXMsYXJndW1lbnRzKTooYXJndW1lbnRzWzFdJiZhcmd1bWVudHNbMV0uYXBwbHkobnVsbCksR2gucmVzb2x2ZSgpKX0pfWZ1bmN0aW9uICRwKGUsdCl7aWYoIWUuUlRDUGVlckNvbm5lY3Rpb258fCFlLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZSlyZXR1cm47Y29uc3QgaT1lLlJUQ1BlZXJDb25uZWN0aW9uLnByb3RvdHlwZS5zZXRMb2NhbERlc2NyaXB0aW9uO2kmJjAhPT1pLmxlbmd0aCYmKGUuUlRDUGVlckNvbm5lY3Rpb24ucHJvdG90eXBlLnNldExvY2FsRGVzY3JpcHRpb249ZnVuY3Rpb24oKXtsZXQgZT1hcmd1bWVudHNbMF18fHt9O2lmKFwib2JqZWN0XCIhPXR5cGVvZiBlfHxlLnR5cGUmJmUuc2RwKXJldHVybiBpLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihlPXt0eXBlOmUudHlwZSxzZHA6ZS5zZHB9LCFlLnR5cGUpc3dpdGNoKHRoaXMuc2lnbmFsaW5nU3RhdGUpe2Nhc2VcInN0YWJsZVwiOmNhc2VcImhhdmUtbG9jYWwtb2ZmZXJcIjpjYXNlXCJoYXZlLXJlbW90ZS1wcmFuc3dlclwiOmUudHlwZT1cIm9mZmVyXCI7YnJlYWs7ZGVmYXVsdDplLnR5cGU9XCJhbnN3ZXJcIn1pZihlLnNkcHx8XCJvZmZlclwiIT09ZS50eXBlJiZcImFuc3dlclwiIT09ZS50eXBlKXJldHVybiBpLmFwcGx5KHRoaXMsW2VdKTtyZXR1cm4oXCJvZmZlclwiPT09ZS50eXBlP3RoaXMuY3JlYXRlT2ZmZXI6dGhpcy5jcmVhdGVBbnN3ZXIpLmFwcGx5KHRoaXMpLnRoZW4oKGU9PmkuYXBwbHkodGhpcyxbZV0pKSl9KX12YXIgZV89T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwscmVtb3ZlRXh0bWFwQWxsb3dNaXhlZDpRcCxzaGltQWRkSWNlQ2FuZGlkYXRlTnVsbE9yRW1wdHk6WnAsc2hpbUNvbm5lY3Rpb25TdGF0ZTpYcCxzaGltTWF4TWVzc2FnZVNpemU6enAsc2hpbVBhcmFtZXRlcmxlc3NTZXRMb2NhbERlc2NyaXB0aW9uOiRwLHNoaW1SVENJY2VDYW5kaWRhdGU6WXAsc2hpbVJUQ0ljZUNhbmRpZGF0ZVJlbGF5UHJvdG9jb2w6cXAsc2hpbVNlbmRUaHJvd1R5cGVFcnJvcjpKcH0pOyFmdW5jdGlvbigpe2xldHt3aW5kb3c6ZX09YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOntzaGltQ2hyb21lOiEwLHNoaW1GaXJlZm94OiEwLHNoaW1TYWZhcmk6ITB9O2NvbnN0IGk9aXIsbj1mdW5jdGlvbihlKXtjb25zdCB0PXticm93c2VyOm51bGwsdmVyc2lvbjpudWxsfTtpZih2b2lkIDA9PT1lfHwhZS5uYXZpZ2F0b3IpcmV0dXJuIHQuYnJvd3Nlcj1cIk5vdCBhIGJyb3dzZXIuXCIsdDtjb25zdHtuYXZpZ2F0b3I6aX09ZTtpZihpLm1vekdldFVzZXJNZWRpYSl0LmJyb3dzZXI9XCJmaXJlZm94XCIsdC52ZXJzaW9uPVpuKGkudXNlckFnZW50LC9GaXJlZm94XFwvKFxcZCspXFwuLywxKTtlbHNlIGlmKGkud2Via2l0R2V0VXNlck1lZGlhfHwhMT09PWUuaXNTZWN1cmVDb250ZXh0JiZlLndlYmtpdFJUQ1BlZXJDb25uZWN0aW9uKXQuYnJvd3Nlcj1cImNocm9tZVwiLHQudmVyc2lvbj1abihpLnVzZXJBZ2VudCwvQ2hyb20oZXxpdW0pXFwvKFxcZCspXFwuLywyKTtlbHNle2lmKCFlLlJUQ1BlZXJDb25uZWN0aW9ufHwhaS51c2VyQWdlbnQubWF0Y2goL0FwcGxlV2ViS2l0XFwvKFxcZCspXFwuLykpcmV0dXJuIHQuYnJvd3Nlcj1cIk5vdCBhIHN1cHBvcnRlZCBicm93c2VyLlwiLHQ7dC5icm93c2VyPVwic2FmYXJpXCIsdC52ZXJzaW9uPVpuKGkudXNlckFnZW50LC9BcHBsZVdlYktpdFxcLyhcXGQrKVxcLi8sMSksdC5zdXBwb3J0c1VuaWZpZWRQbGFuPWUuUlRDUnRwVHJhbnNjZWl2ZXImJlwiY3VycmVudERpcmVjdGlvblwiaW4gZS5SVENSdHBUcmFuc2NlaXZlci5wcm90b3R5cGV9cmV0dXJuIHR9KGUpLHI9e2Jyb3dzZXJEZXRhaWxzOm4sY29tbW9uU2hpbTplXyxleHRyYWN0VmVyc2lvbjpabixkaXNhYmxlTG9nOmVyLGRpc2FibGVXYXJuaW5nczp0cixzZHA6S3B9O3N3aXRjaChuLmJyb3dzZXIpe2Nhc2VcImNocm9tZVwiOmlmKCFlcHx8IVpofHwhdC5zaGltQ2hyb21lKXJldHVybiBpKFwiQ2hyb21lIHNoaW0gaXMgbm90IGluY2x1ZGVkIGluIHRoaXMgYWRhcHRlciByZWxlYXNlLlwiKSxyO2lmKG51bGw9PT1uLnZlcnNpb24pcmV0dXJuIGkoXCJDaHJvbWUgc2hpbSBjYW4gbm90IGRldGVybWluZSB2ZXJzaW9uLCBub3Qgc2hpbW1pbmcuXCIpLHI7aShcImFkYXB0ZXIuanMgc2hpbW1pbmcgY2hyb21lLlwiKSxyLmJyb3dzZXJTaGltPWVwLFpwKGUsbiksJHAoZSksSGgoZSxuKSxLaChlKSxaaChlLG4pLFloKGUpLFFoKGUsbikscWgoZSksemgoZSksSmgoZSksJGgoZSxuKSxZcChlKSxxcChlKSxYcChlKSx6cChlLG4pLEpwKGUpLFFwKGUsbik7YnJlYWs7Y2FzZVwiZmlyZWZveFwiOmlmKCFocHx8IW5wfHwhdC5zaGltRmlyZWZveClyZXR1cm4gaShcIkZpcmVmb3ggc2hpbSBpcyBub3QgaW5jbHVkZWQgaW4gdGhpcyBhZGFwdGVyIHJlbGVhc2UuXCIpLHI7aShcImFkYXB0ZXIuanMgc2hpbW1pbmcgZmlyZWZveC5cIiksci5icm93c2VyU2hpbT1ocCxacChlLG4pLCRwKGUpLHRwKGUsbiksbnAoZSxuKSxpcChlKSxzcChlKSxycChlKSxvcChlKSxhcChlKSxjcChlKSxkcChlKSxscChlKSx1cChlKSxZcChlKSxYcChlKSx6cChlLG4pLEpwKGUpO2JyZWFrO2Nhc2VcInNhZmFyaVwiOmlmKCFDcHx8IXQuc2hpbVNhZmFyaSlyZXR1cm4gaShcIlNhZmFyaSBzaGltIGlzIG5vdCBpbmNsdWRlZCBpbiB0aGlzIGFkYXB0ZXIgcmVsZWFzZS5cIikscjtpKFwiYWRhcHRlci5qcyBzaGltbWluZyBzYWZhcmkuXCIpLHIuYnJvd3NlclNoaW09Q3AsWnAoZSxuKSwkcChlKSxUcChlKSxncChlKSxFcChlKSxwcChlKSxfcChlKSxTcChlKSxmcChlKSxScChlKSxZcChlKSxxcChlKSx6cChlLG4pLEpwKGUpLFFwKGUsbik7YnJlYWs7ZGVmYXVsdDppKFwiVW5zdXBwb3J0ZWQgYnJvd3NlciFcIil9fSh7d2luZG93OlwidW5kZWZpbmVkXCI9PXR5cGVvZiB3aW5kb3c/dm9pZCAwOndpbmRvd30pO3ZhciB0Xz1YaShcIkFycmF5XCIpLmtleXMsaV89cG4sbl89WmUscl89bCxvXz10XyxzXz1BcnJheS5wcm90b3R5cGUsYV89e0RPTVRva2VuTGlzdDohMCxOb2RlTGlzdDohMH0sY189ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5rZXlzO3JldHVybiBlPT09c198fHJfKHNfLGUpJiZ0PT09c18ua2V5c3x8bl8oYV8saV8oZSkpP29fOnR9LGRfPWkoY18pLGxfPWJlLHVfPVR5cGVFcnJvcixoXz1DdCxwXz1RdCxfXz1CLEVfPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj1oXyh0KTtuIGluIGU/cF8uZihlLG4sX18oMCxpKSk6ZVtuXT1pfSxmXz14aSxtXz1HaSxUXz1FXyxTXz1BcnJheSxnXz1NYXRoLm1heCxSXz1mdW5jdGlvbihlLHQsaSl7Zm9yKHZhciBuPW1fKGUpLHI9Zl8odCxuKSxvPWZfKHZvaWQgMD09PWk/bjppLG4pLHM9U18oZ18oby1yLDApKSxhPTA7cjxvO3IrKyxhKyspVF8ocyxhLGVbcl0pO3JldHVybiBzLmxlbmd0aD1hLHN9LENfPVJfLElfPU1hdGguZmxvb3Isdl89ZnVuY3Rpb24oZSx0KXt2YXIgaT1lLmxlbmd0aCxuPUlfKGkvMik7cmV0dXJuIGk8OD95XyhlLHQpOkFfKGUsdl8oQ18oZSwwLG4pLHQpLHZfKENfKGUsbiksdCksdCl9LHlfPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBpLG4scj1lLmxlbmd0aCxvPTE7bzxyOyl7Zm9yKG49byxpPWVbb107biYmdChlW24tMV0saSk+MDspZVtuXT1lWy0tbl07biE9PW8rKyYmKGVbbl09aSl9cmV0dXJuIGV9LEFfPWZ1bmN0aW9uKGUsdCxpLG4pe2Zvcih2YXIgcj10Lmxlbmd0aCxvPWkubGVuZ3RoLHM9MCxhPTA7czxyfHxhPG87KWVbcythXT1zPHImJmE8bz9uKHRbc10saVthXSk8PTA/dFtzKytdOmlbYSsrXTpzPHI/dFtzKytdOmlbYSsrXTtyZXR1cm4gZX0sYl89dl8sd189Y2UubWF0Y2goL2ZpcmVmb3hcXC8oXFxkKykvaSksT189ISF3XyYmK3dfWzFdLE5fPS9NU0lFfFRyaWRlbnQvLnRlc3QoY2UpLERfPWNlLm1hdGNoKC9BcHBsZVdlYktpdFxcLyhcXGQrKVxcLi8pLFBfPSEhRF8mJitEX1sxXSxMXz13aSxrXz1kLE1fPURlLFVfPUplLHhfPUdpLFZfPWZ1bmN0aW9uKGUsdCl7aWYoIWRlbGV0ZSBlW3RdKXRocm93IHVfKFwiQ2Fubm90IGRlbGV0ZSBwcm9wZXJ0eSBcIitsXyh0KStcIiBvZiBcIitsXyhlKSl9LEZfPWZuLEJfPW4sal89Yl8sR189Qm4sV189T18sSF89Tl8sS189RWUsWV89UF8scV89W10sel89a18ocV8uc29ydCksSl89a18ocV8ucHVzaCksWF89Ql8oKGZ1bmN0aW9uKCl7cV8uc29ydCh2b2lkIDApfSkpLFFfPUJfKChmdW5jdGlvbigpe3FfLnNvcnQobnVsbCl9KSksWl89R18oXCJzb3J0XCIpLCRfPSFCXygoZnVuY3Rpb24oKXtpZihLXylyZXR1cm4gS188NzA7aWYoIShXXyYmV18+Mykpe2lmKEhfKXJldHVybiEwO2lmKFlfKXJldHVybiBZXzw2MDM7dmFyIGUsdCxpLG4scj1cIlwiO2ZvcihlPTY1O2U8NzY7ZSsrKXtzd2l0Y2godD1TdHJpbmcuZnJvbUNoYXJDb2RlKGUpLGUpe2Nhc2UgNjY6Y2FzZSA2OTpjYXNlIDcwOmNhc2UgNzI6aT0zO2JyZWFrO2Nhc2UgNjg6Y2FzZSA3MTppPTQ7YnJlYWs7ZGVmYXVsdDppPTJ9Zm9yKG49MDtuPDQ3O24rKylxXy5wdXNoKHtrOnQrbix2Oml9KX1mb3IocV8uc29ydCgoZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC52LWUudn0pKSxuPTA7bjxxXy5sZW5ndGg7bisrKXQ9cV9bbl0uay5jaGFyQXQoMCksci5jaGFyQXQoci5sZW5ndGgtMSkhPT10JiYocis9dCk7cmV0dXJuXCJER0JFRkhBQ0lKS1wiIT09cn19KSk7TF8oe3RhcmdldDpcIkFycmF5XCIscHJvdG86ITAsZm9yY2VkOlhffHwhUV98fCFaX3x8ISRffSx7c29ydDpmdW5jdGlvbihlKXt2b2lkIDAhPT1lJiZNXyhlKTt2YXIgdD1VXyh0aGlzKTtpZigkXylyZXR1cm4gdm9pZCAwPT09ZT96Xyh0KTp6Xyh0LGUpO3ZhciBpLG4scj1bXSxvPXhfKHQpO2ZvcihuPTA7bjxvO24rKyluIGluIHQmJkpfKHIsdFtuXSk7Zm9yKGpfKHIsZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQsaSl7cmV0dXJuIHZvaWQgMD09PWk/LTE6dm9pZCAwPT09dD8xOnZvaWQgMCE9PWU/K2UodCxpKXx8MDpGXyh0KT5GXyhpKT8xOi0xfX0oZSkpLGk9eF8ociksbj0wO248aTspdFtuXT1yW24rK107Zm9yKDtuPG87KVZfKHQsbisrKTtyZXR1cm4gdH19KTt2YXIgZUUsdEUsaUU9WGkoXCJBcnJheVwiKS5zb3J0LG5FPWwsckU9aUUsb0U9QXJyYXkucHJvdG90eXBlLHNFPWZ1bmN0aW9uKGUpe3ZhciB0PWUuc29ydDtyZXR1cm4gZT09PW9FfHxuRShvRSxlKSYmdD09PW9FLnNvcnQ/ckU6dH0sYUU9aShzRSksY0U9e2V4cG9ydHM6e319O2VFPWNFLHRFPWNFLmV4cG9ydHMsZnVuY3Rpb24oZSx0KXt2YXIgaT1cImZ1bmN0aW9uXCIsbj1cInVuZGVmaW5lZFwiLHI9XCJvYmplY3RcIixvPVwic3RyaW5nXCIscz1cIm1ham9yXCIsYT1cIm1vZGVsXCIsYz1cIm5hbWVcIixkPVwidHlwZVwiLGw9XCJ2ZW5kb3JcIix1PVwidmVyc2lvblwiLGg9XCJhcmNoaXRlY3R1cmVcIixwPVwiY29uc29sZVwiLF89XCJtb2JpbGVcIixFPVwidGFibGV0XCIsZj1cInNtYXJ0dHZcIixtPVwid2VhcmFibGVcIixUPVwiZW1iZWRkZWRcIixTPVwiQW1hem9uXCIsZz1cIkFwcGxlXCIsUj1cIkFTVVNcIixDPVwiQmxhY2tCZXJyeVwiLEk9XCJCcm93c2VyXCIsdj1cIkNocm9tZVwiLHk9XCJGaXJlZm94XCIsQT1cIkdvb2dsZVwiLGI9XCJIdWF3ZWlcIix3PVwiTEdcIixPPVwiTWljcm9zb2Z0XCIsTj1cIk1vdG9yb2xhXCIsRD1cIk9wZXJhXCIsUD1cIlNhbXN1bmdcIixMPVwiU2hhcnBcIixrPVwiU29ueVwiLE09XCJYaWFvbWlcIixVPVwiWmVicmFcIix4PVwiRmFjZWJvb2tcIixWPVwiQ2hyb21pdW0gT1NcIixGPVwiTWFjIE9TXCIsQj1mdW5jdGlvbihlKXtmb3IodmFyIHQ9e30saT0wO2k8ZS5sZW5ndGg7aSsrKXRbZVtpXS50b1VwcGVyQ2FzZSgpXT1lW2ldO3JldHVybiB0fSxqPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHR5cGVvZiBlPT09byYmLTEhPT1HKHQpLmluZGV4T2YoRyhlKSl9LEc9ZnVuY3Rpb24oZSl7cmV0dXJuIGUudG9Mb3dlckNhc2UoKX0sVz1mdW5jdGlvbihlLHQpe2lmKHR5cGVvZiBlPT09bylyZXR1cm4gZT1lLnJlcGxhY2UoL15cXHNcXHMqLyxcIlwiKSx0eXBlb2YgdD09PW4/ZTplLnN1YnN0cmluZygwLDM1MCl9LEg9ZnVuY3Rpb24oZSxuKXtmb3IodmFyIG8scyxhLGMsZCxsLHU9MDt1PG4ubGVuZ3RoJiYhZDspe3ZhciBoPW5bdV0scD1uW3UrMV07Zm9yKG89cz0wO288aC5sZW5ndGgmJiFkJiZoW29dOylpZihkPWhbbysrXS5leGVjKGUpKWZvcihhPTA7YTxwLmxlbmd0aDthKyspbD1kWysrc10sdHlwZW9mKGM9cFthXSk9PT1yJiZjLmxlbmd0aD4wPzI9PT1jLmxlbmd0aD90eXBlb2YgY1sxXT09aT90aGlzW2NbMF1dPWNbMV0uY2FsbCh0aGlzLGwpOnRoaXNbY1swXV09Y1sxXTozPT09Yy5sZW5ndGg/dHlwZW9mIGNbMV0hPT1pfHxjWzFdLmV4ZWMmJmNbMV0udGVzdD90aGlzW2NbMF1dPWw/bC5yZXBsYWNlKGNbMV0sY1syXSk6dDp0aGlzW2NbMF1dPWw/Y1sxXS5jYWxsKHRoaXMsbCxjWzJdKTp0OjQ9PT1jLmxlbmd0aCYmKHRoaXNbY1swXV09bD9jWzNdLmNhbGwodGhpcyxsLnJlcGxhY2UoY1sxXSxjWzJdKSk6dCk6dGhpc1tjXT1sfHx0O3UrPTJ9fSxLPWZ1bmN0aW9uKGUsaSl7Zm9yKHZhciBuIGluIGkpaWYodHlwZW9mIGlbbl09PT1yJiZpW25dLmxlbmd0aD4wKXtmb3IodmFyIG89MDtvPGlbbl0ubGVuZ3RoO28rKylpZihqKGlbbl1bb10sZSkpcmV0dXJuXCI/XCI9PT1uP3Q6bn1lbHNlIGlmKGooaVtuXSxlKSlyZXR1cm5cIj9cIj09PW4/dDpuO3JldHVybiBlfSxZPXtNRTpcIjQuOTBcIixcIk5UIDMuMTFcIjpcIk5UMy41MVwiLFwiTlQgNC4wXCI6XCJOVDQuMFwiLDJlMzpcIk5UIDUuMFwiLFhQOltcIk5UIDUuMVwiLFwiTlQgNS4yXCJdLFZpc3RhOlwiTlQgNi4wXCIsNzpcIk5UIDYuMVwiLDg6XCJOVCA2LjJcIiw4LjE6XCJOVCA2LjNcIiwxMDpbXCJOVCA2LjRcIixcIk5UIDEwLjBcIl0sUlQ6XCJBUk1cIn0scT17YnJvd3NlcjpbWy9cXGIoPzpjcm1vfGNyaW9zKVxcLyhbXFx3XFwuXSspL2ldLFt1LFtjLFwiQ2hyb21lXCJdXSxbL2VkZyg/OmV8aW9zfGEpP1xcLyhbXFx3XFwuXSspL2ldLFt1LFtjLFwiRWRnZVwiXV0sWy8ob3BlcmEgbWluaSlcXC8oWy1cXHdcXC5dKykvaSwvKG9wZXJhIFttb2JpbGV0YWJdezMsNn0pXFxiLit2ZXJzaW9uXFwvKFstXFx3XFwuXSspL2ksLyhvcGVyYSkoPzouK3ZlcnNpb25cXC98W1xcLyBdKykoW1xcd1xcLl0rKS9pXSxbYyx1XSxbL29waW9zW1xcLyBdKyhbXFx3XFwuXSspL2ldLFt1LFtjLEQrXCIgTWluaVwiXV0sWy9cXGJvcHJcXC8oW1xcd1xcLl0rKS9pXSxbdSxbYyxEXV0sWy8oa2luZGxlKVxcLyhbXFx3XFwuXSspL2ksLyhsdW5hc2NhcGV8bWF4dGhvbnxuZXRmcm9udHxqYXNtaW5lfGJsYXplcilbXFwvIF0/KFtcXHdcXC5dKikvaSwvKGF2YW50IHxpZW1vYmlsZXxzbGltKSg/OmJyb3dzZXIpP1tcXC8gXT8oW1xcd1xcLl0qKS9pLC8oYmE/aWR1YnJvd3NlcilbXFwvIF0/KFtcXHdcXC5dKykvaSwvKD86bXN8XFwoKShpZSkgKFtcXHdcXC5dKykvaSwvKGZsb2NrfHJvY2ttZWx0fG1pZG9yaXxlcGlwaGFueXxzaWxrfHNreWZpcmV8b3ZpYnJvd3Nlcnxib2x0fGlyb258dml2YWxkaXxpcmlkaXVtfHBoYW50b21qc3xib3dzZXJ8cXVhcmt8cXVwemlsbGF8ZmFsa29ufHJla29ucXxwdWZmaW58YnJhdmV8d2hhbGUoPyEuK25hdmVyKXxxcWJyb3dzZXJsaXRlfHFxfGR1Y2tkdWNrZ28pXFwvKFstXFx3XFwuXSspL2ksLyh3ZWlibylfXyhbXFxkXFwuXSspL2ldLFtjLHVdLFsvKD86XFxidWM/ID9icm93c2VyfCg/Omp1Yy4rKXVjd2ViKVtcXC8gXT8oW1xcd1xcLl0rKS9pXSxbdSxbYyxcIlVDXCIrSV1dLFsvbWljcm9tLitcXGJxYmNvcmVcXC8oW1xcd1xcLl0rKS9pLC9cXGJxYmNvcmVcXC8oW1xcd1xcLl0rKS4rbWljcm9tL2ldLFt1LFtjLFwiV2VDaGF0KFdpbikgRGVza3RvcFwiXV0sWy9taWNyb21lc3NlbmdlclxcLyhbXFx3XFwuXSspL2ldLFt1LFtjLFwiV2VDaGF0XCJdXSxbL2tvbnF1ZXJvclxcLyhbXFx3XFwuXSspL2ldLFt1LFtjLFwiS29ucXVlcm9yXCJdXSxbL3RyaWRlbnQuK3J2WzogXShbXFx3XFwuXXsxLDl9KVxcYi4rbGlrZSBnZWNrby9pXSxbdSxbYyxcIklFXCJdXSxbL3lhYnJvd3NlclxcLyhbXFx3XFwuXSspL2ldLFt1LFtjLFwiWWFuZGV4XCJdXSxbLyhhdmFzdHxhdmcpXFwvKFtcXHdcXC5dKykvaV0sW1tjLC8oLispLyxcIiQxIFNlY3VyZSBcIitJXSx1XSxbL1xcYmZvY3VzXFwvKFtcXHdcXC5dKykvaV0sW3UsW2MseStcIiBGb2N1c1wiXV0sWy9cXGJvcHRcXC8oW1xcd1xcLl0rKS9pXSxbdSxbYyxEK1wiIFRvdWNoXCJdXSxbL2NvY19jb2NcXHcrXFwvKFtcXHdcXC5dKykvaV0sW3UsW2MsXCJDb2MgQ29jXCJdXSxbL2RvbGZpblxcLyhbXFx3XFwuXSspL2ldLFt1LFtjLFwiRG9scGhpblwiXV0sWy9jb2FzdFxcLyhbXFx3XFwuXSspL2ldLFt1LFtjLEQrXCIgQ29hc3RcIl1dLFsvbWl1aWJyb3dzZXJcXC8oW1xcd1xcLl0rKS9pXSxbdSxbYyxcIk1JVUkgXCIrSV1dLFsvZnhpb3NcXC8oWy1cXHdcXC5dKykvaV0sW3UsW2MseV1dLFsvXFxicWlodXwocWk/aG8/bz98MzYwKWJyb3dzZXIvaV0sW1tjLFwiMzYwIFwiK0ldXSxbLyhvY3VsdXN8c2Ftc3VuZ3xzYWlsZmlzaHxodWF3ZWkpYnJvd3NlclxcLyhbXFx3XFwuXSspL2ldLFtbYywvKC4rKS8sXCIkMSBcIitJXSx1XSxbLyhjb21vZG9fZHJhZ29uKVxcLyhbXFx3XFwuXSspL2ldLFtbYywvXy9nLFwiIFwiXSx1XSxbLyhlbGVjdHJvbilcXC8oW1xcd1xcLl0rKSBzYWZhcmkvaSwvKHRlc2xhKSg/OiBxdGNhcmJyb3dzZXJ8XFwvKDIwXFxkXFxkXFwuWy1cXHdcXC5dKykpL2ksL20/KHFxYnJvd3NlcnxiYWlkdWJveGFwcHwyMzQ1RXhwbG9yZXIpW1xcLyBdPyhbXFx3XFwuXSspL2ldLFtjLHVdLFsvKG1ldGFzcilbXFwvIF0/KFtcXHdcXC5dKykvaSwvKGxiYnJvd3NlcikvaSwvXFxbKGxpbmtlZGluKWFwcFxcXS9pXSxbY10sWy8oKD86ZmJhblxcL2ZiaW9zfGZiX2lhYlxcL2ZiNGEpKD8hLitmYmF2KXw7ZmJhdlxcLyhbXFx3XFwuXSspOykvaV0sW1tjLHhdLHVdLFsvKGtha2FvKD86dGFsa3xzdG9yeSkpW1xcLyBdKFtcXHdcXC5dKykvaSwvKG5hdmVyKVxcKC4qPyhcXGQrXFwuW1xcd1xcLl0rKS4qXFwpL2ksL3NhZmFyaSAobGluZSlcXC8oW1xcd1xcLl0rKS9pLC9cXGIobGluZSlcXC8oW1xcd1xcLl0rKVxcL2lhYi9pLC8oY2hyb21pdW18aW5zdGFncmFtKVtcXC8gXShbLVxcd1xcLl0rKS9pXSxbYyx1XSxbL1xcYmdzYVxcLyhbXFx3XFwuXSspIC4qc2FmYXJpXFwvL2ldLFt1LFtjLFwiR1NBXCJdXSxbL2hlYWRsZXNzY2hyb21lKD86XFwvKFtcXHdcXC5dKyl8ICkvaV0sW3UsW2MsditcIiBIZWFkbGVzc1wiXV0sWy8gd3ZcXCkuKyhjaHJvbWUpXFwvKFtcXHdcXC5dKykvaV0sW1tjLHYrXCIgV2ViVmlld1wiXSx1XSxbL2Ryb2lkLisgdmVyc2lvblxcLyhbXFx3XFwuXSspXFxiLisoPzptb2JpbGUgc2FmYXJpfHNhZmFyaSkvaV0sW3UsW2MsXCJBbmRyb2lkIFwiK0ldXSxbLyhjaHJvbWV8b21uaXdlYnxhcm9yYXxbdGl6ZW5va2FdezV9ID9icm93c2VyKVxcL3Y/KFtcXHdcXC5dKykvaV0sW2MsdV0sWy92ZXJzaW9uXFwvKFtcXHdcXC5cXCxdKykgLiptb2JpbGVcXC9cXHcrIChzYWZhcmkpL2ldLFt1LFtjLFwiTW9iaWxlIFNhZmFyaVwiXV0sWy92ZXJzaW9uXFwvKFtcXHcoXFwufFxcLCldKykgLioobW9iaWxlID9zYWZhcml8c2FmYXJpKS9pXSxbdSxjXSxbL3dlYmtpdC4rPyhtb2JpbGUgP3NhZmFyaXxzYWZhcmkpKFxcL1tcXHdcXC5dKykvaV0sW2MsW3UsSyx7XCIxLjBcIjpcIi84XCIsMS4yOlwiLzFcIiwxLjM6XCIvM1wiLFwiMi4wXCI6XCIvNDEyXCIsXCIyLjAuMlwiOlwiLzQxNlwiLFwiMi4wLjNcIjpcIi80MTdcIixcIjIuMC40XCI6XCIvNDE5XCIsXCI/XCI6XCIvXCJ9XV0sWy8od2Via2l0fGtodG1sKVxcLyhbXFx3XFwuXSspL2ldLFtjLHVdLFsvKG5hdmlnYXRvcnxuZXRzY2FwZVxcZD8pXFwvKFstXFx3XFwuXSspL2ldLFtbYyxcIk5ldHNjYXBlXCJdLHVdLFsvbW9iaWxlIHZyOyBydjooW1xcd1xcLl0rKVxcKS4rZmlyZWZveC9pXSxbdSxbYyx5K1wiIFJlYWxpdHlcIl1dLFsvZWtpb2hmLisoZmxvdylcXC8oW1xcd1xcLl0rKS9pLC8oc3dpZnRmb3gpL2ksLyhpY2VkcmFnb258aWNld2Vhc2VsfGNhbWlub3xjaGltZXJhfGZlbm5lY3xtYWVtbyBicm93c2VyfG1pbmltb3xjb25rZXJvcnxrbGFyKVtcXC8gXT8oW1xcd1xcLlxcK10rKS9pLC8oc2VhbW9ua2V5fGstbWVsZW9ufGljZWNhdHxpY2VhcGV8ZmlyZWJpcmR8cGhvZW5peHxwYWxlbW9vbnxiYXNpbGlza3x3YXRlcmZveClcXC8oWy1cXHdcXC5dKykkL2ksLyhmaXJlZm94KVxcLyhbXFx3XFwuXSspL2ksLyhtb3ppbGxhKVxcLyhbXFx3XFwuXSspIC4rcnZcXDouK2dlY2tvXFwvXFxkKy9pLC8ocG9sYXJpc3xseW54fGRpbGxvfGljYWJ8ZG9yaXN8YW1heWF8dzNtfG5ldHN1cmZ8c2xlaXBuaXJ8b2JpZ298bW9zYWljfCg/OmdvfGljZXx1cClbXFwuIF0/YnJvd3NlcilbLVxcLyBdP3Y/KFtcXHdcXC5dKykvaSwvKGxpbmtzKSBcXCgoW1xcd1xcLl0rKS9pLC9wYW5hc29uaWM7KHZpZXJhKS9pXSxbYyx1XSxbLyhjb2JhbHQpXFwvKFtcXHdcXC5dKykvaV0sW2MsW3UsL21hc3Rlci58bHRzLi8sXCJcIl1dXSxjcHU6W1svKD86KGFtZHx4KD86KD86ODZ8NjQpWy1fXSk/fHdvd3x3aW4pNjQpWztcXCldL2ldLFtbaCxcImFtZDY0XCJdXSxbLyhpYTMyKD89OykpL2ldLFtbaCxHXV0sWy8oKD86aVszNDZdfHgpODYpWztcXCldL2ldLFtbaCxcImlhMzJcIl1dLFsvXFxiKGFhcmNoNjR8YXJtKHY/OGU/bD98Xz82NCkpXFxiL2ldLFtbaCxcImFybTY0XCJdXSxbL1xcYihhcm0oPzp2WzY3XSk/aHQ/bj9bZmxdcD8pXFxiL2ldLFtbaCxcImFybWhmXCJdXSxbL3dpbmRvd3MgKGNlfG1vYmlsZSk7IHBwYzsvaV0sW1toLFwiYXJtXCJdXSxbLygoPzpwcGN8cG93ZXJwYykoPzo2NCk/KSg/OiBtYWN8O3xcXCkpL2ldLFtbaCwvb3dlci8sXCJcIixHXV0sWy8oc3VuNFxcdylbO1xcKV0vaV0sW1toLFwic3BhcmNcIl1dLFsvKCg/OmF2cjMyfGlhNjQoPz07KSl8NjhrKD89XFwpKXxcXGJhcm0oPz12KD86WzEtN118WzUtN10xKWw/fDt8ZWFiaSl8KD89YXRtZWwgKWF2cnwoPzppcml4fG1pcHN8c3BhcmMpKD86NjQpP1xcYnxwYS1yaXNjKS9pXSxbW2gsR11dXSxkZXZpY2U6W1svXFxiKHNjaC1pWzg5XTBcXGR8c2h3LW0zODBzfHNtLVtwdHhdXFx3ezIsNH18Z3QtW3BuXVxcZHsyLDR9fHNnaC10OFs1Nl05fG5leHVzIDEwKS9pXSxbYSxbbCxQXSxbZCxFXV0sWy9cXGIoKD86c1tjZ3BdaHxndHxzbSktXFx3K3xzY1tnLV0/W1xcZF0rYT98Z2FsYXh5IG5leHVzKS9pLC9zYW1zdW5nWy0gXShbLVxcd10rKS9pLC9zZWMtKHNnaFxcdyspL2ldLFthLFtsLFBdLFtkLF9dXSxbL1xcKChpcCg/OmhvbmV8b2QpW1xcdyBdKik7L2ldLFthLFtsLGddLFtkLF9dXSxbL1xcKChpcGFkKTtbLVxcd1xcKSw7IF0rYXBwbGUvaSwvYXBwbGVjb3JlbWVkaWFcXC9bXFx3XFwuXSsgXFwoKGlwYWQpL2ksL1xcYihpcGFkKVxcZFxcZD8sXFxkXFxkP1s7XFxdXS4raW9zL2ldLFthLFtsLGddLFtkLEVdXSxbLyhtYWNpbnRvc2gpOy9pXSxbYSxbbCxnXV0sWy9cXGIoc2gtP1thbHR2el0/XFxkXFxkW2EtZWttXT8pL2ldLFthLFtsLExdLFtkLF9dXSxbL1xcYigoPzphZ1tyc11bMjNdP3xiYWgyP3xzaHQ/fGJ0diktYT9bbHddXFxkezJ9KVxcYig/IS4rZFxcL3MpL2ldLFthLFtsLGJdLFtkLEVdXSxbLyg/Omh1YXdlaXxob25vcikoWy1cXHcgXSspWztcXCldL2ksL1xcYihuZXh1cyA2cHxcXHd7Miw0fWU/LVthdHVdP1tsbl1bXFxkeF1bMDEyMzU5Y11bYWRuXT8pXFxiKD8hLitkXFwvcykvaV0sW2EsW2wsYl0sW2QsX11dLFsvXFxiKHBvY29bXFx3IF0rKSg/OiBidWl8XFwpKS9pLC9cXGI7IChcXHcrKSBidWlsZFxcL2htXFwxL2ksL1xcYihobVstXyBdP25vdGU/W18gXT8oPzpcXGRcXHcpPykgYnVpL2ksL1xcYihyZWRtaVtcXC1fIF0/KD86bm90ZXxrKT9bXFx3XyBdKykoPzogYnVpfFxcKSkvaSwvXFxiKG1pWy1fIF0/KD86YVxcZHxvbmV8b25lW18gXXBsdXN8bm90ZSBsdGV8bWF4fGNjKT9bXyBdPyg/OlxcZD9cXHc/KVtfIF0/KD86cGx1c3xzZXxsaXRlKT8pKD86IGJ1aXxcXCkpL2ldLFtbYSwvXy9nLFwiIFwiXSxbbCxNXSxbZCxfXV0sWy9cXGIobWlbLV8gXT8oPzpwYWQpKD86W1xcd18gXSspKSg/OiBidWl8XFwpKS9pXSxbW2EsL18vZyxcIiBcIl0sW2wsTV0sW2QsRV1dLFsvOyAoXFx3KykgYnVpLisgb3Bwby9pLC9cXGIoY3BoWzEyXVxcZHszfXxwKD86YWZ8Y1thbF18ZFxcd3xlW2FyXSlbbXRdXFxkMHx4OTAwN3xhMTAxb3ApXFxiL2ldLFthLFtsLFwiT1BQT1wiXSxbZCxfXV0sWy92aXZvIChcXHcrKSg/OiBidWl8XFwpKS9pLC9cXGIodlsxMl1cXGR7M31cXHc/W2F0XSkoPzogYnVpfDspL2ldLFthLFtsLFwiVml2b1wiXSxbZCxfXV0sWy9cXGIocm14WzEyXVxcZHszfSkoPzogYnVpfDt8XFwpKS9pXSxbYSxbbCxcIlJlYWxtZVwiXSxbZCxfXV0sWy9cXGIobWlsZXN0b25lfGRyb2lkKD86WzItNHhdfCAoPzpiaW9uaWN8eDJ8cHJvfHJhenIpKT86PyggNGcpPylcXGJbXFx3IF0rYnVpbGRcXC8vaSwvXFxibW90KD86b3JvbGEpP1stIF0oXFx3KikvaSwvKCg/Om1vdG9bXFx3XFwoXFwpIF0rfHh0XFxkezMsNH18bmV4dXMgNikoPz0gYnVpfFxcKSkpL2ldLFthLFtsLE5dLFtkLF9dXSxbL1xcYihtejYwXFxkfHhvb21bMiBdezAsMn0pIGJ1aWxkXFwvL2ldLFthLFtsLE5dLFtkLEVdXSxbLygoPz1sZyk/W3ZsXWtcXC0/XFxkezN9KSBidWl8IDNcXC5bLVxcdzsgXXsxMH1sZz8tKFswNmN2OV17Myw0fSkvaV0sW2EsW2wsd10sW2QsRV1dLFsvKGxtKD86LT9mMTAwW252XT98LVtcXHdcXC5dKykoPz0gYnVpfFxcKSl8bmV4dXMgWzQ1XSkvaSwvXFxibGdbLWU7XFwvIF0rKCg/IWJyb3dzZXJ8bmV0Y2FzdHxhbmRyb2lkIHR2KVxcdyspL2ksL1xcYmxnLT8oW1xcZFxcd10rKSBidWkvaV0sW2EsW2wsd10sW2QsX11dLFsvKGlkZWF0YWJbLVxcdyBdKykvaSwvbGVub3ZvID8oc1s1Nl0wMDBbLVxcd10rfHRhYig/OltcXHcgXSspfHl0Wy1cXGRcXHddezZ9fHRiWy1cXGRcXHddezZ9KS9pXSxbYSxbbCxcIkxlbm92b1wiXSxbZCxFXV0sWy8oPzptYWVtb3xub2tpYSkuKihuOTAwfGx1bWlhIFxcZCspL2ksL25va2lhWy1fIF0/KFstXFx3XFwuXSopL2ldLFtbYSwvXy9nLFwiIFwiXSxbbCxcIk5va2lhXCJdLFtkLF9dXSxbLyhwaXhlbCBjKVxcYi9pXSxbYSxbbCxBXSxbZCxFXV0sWy9kcm9pZC4rOyAocGl4ZWxbXFxkYXhsIF17MCw2fSkoPzogYnVpfFxcKSkvaV0sW2EsW2wsQV0sW2QsX11dLFsvZHJvaWQuKyAoYT9cXGRbMC0yXXsyfXNvfFtjLWddXFxkezR9fHNvWy1nbF1cXHcrfHhxLWFcXHdbNC03XVsxMl0pKD89IGJ1aXxcXCkuK2Nocm9tZVxcLyg/IVsxLTZdezAsMX1cXGRcXC4pKS9pXSxbYSxbbCxrXSxbZCxfXV0sWy9zb255IHRhYmxldCBbcHNdL2ksL1xcYig/OnNvbnkpP3NncFxcdysoPzogYnVpfFxcKSkvaV0sW1thLFwiWHBlcmlhIFRhYmxldFwiXSxbbCxrXSxbZCxFXV0sWy8gKGtiMjAwNXxpbjIwWzEyXTV8YmUyMFsxMl1bNTldKVxcYi9pLC8oPzpvbmUpPyg/OnBsdXMpPyAoYVxcZDBcXGRcXGQpKD86IGJ8XFwpKS9pXSxbYSxbbCxcIk9uZVBsdXNcIl0sW2QsX11dLFsvKGFsZXhhKXdlYm0vaSwvKGtmW2Etel17Mn13aSkoIGJ1aXxcXCkpL2ksLyhrZlthLXpdKykoIGJ1aXxcXCkpLitzaWxrXFwvL2ldLFthLFtsLFNdLFtkLEVdXSxbLygoPzpzZHxrZilbMDM0OWhpam9yc3R1d10rKSggYnVpfFxcKSkuK3NpbGtcXC8vaV0sW1thLC8oLispL2csXCJGaXJlIFBob25lICQxXCJdLFtsLFNdLFtkLF9dXSxbLyhwbGF5Ym9vayk7Wy1cXHdcXCksOyBdKyhyaW0pL2ldLFthLGwsW2QsRV1dLFsvXFxiKCg/OmJiW2EtZl18c3RbaHZdKTEwMC1cXGQpL2ksL1xcKGJiMTA7IChcXHcrKS9pXSxbYSxbbCxDXSxbZCxfXV0sWy8oPzpcXGJ8YXN1c18pKHRyYW5zZm9bcHJpbWUgXXs0LDEwfSBcXHcrfGVlZXBjfHNsaWRlciBcXHcrfG5leHVzIDd8cGFkZm9uZXxwMDBbY2pdKS9pXSxbYSxbbCxSXSxbZCxFXV0sWy8gKHpbYmVzXTZbMDI3XVswMTJdW2ttXVtsc118emVuZm9uZSBcXGRcXHc/KVxcYi9pXSxbYSxbbCxSXSxbZCxfXV0sWy8obmV4dXMgOSkvaV0sW2EsW2wsXCJIVENcIl0sW2QsRV1dLFsvKGh0YylbLTtfIF17MSwyfShbXFx3IF0rKD89XFwpfCBidWkpfFxcdyspL2ksLyh6dGUpWy0gXShbXFx3IF0rPykoPzogYnVpfFxcL3xcXCkpL2ksLyhhbGNhdGVsfGdlZWtzcGhvbmV8bmV4aWFufHBhbmFzb25pYyg/ISg/Ojt8XFwuKSl8c29ueSg/IS1icmEpKVstXyBdPyhbLVxcd10qKS9pXSxbbCxbYSwvXy9nLFwiIFwiXSxbZCxfXV0sWy9kcm9pZC4rOyAoW2FiXVsxLTddLT9bMDE3OGFdXFxkXFxkPykvaV0sW2EsW2wsXCJBY2VyXCJdLFtkLEVdXSxbL2Ryb2lkLis7IChtWzEtNV0gbm90ZSkgYnVpL2ksL1xcYm16LShbLVxcd117Mix9KS9pXSxbYSxbbCxcIk1laXp1XCJdLFtkLF9dXSxbLyhibGFja2JlcnJ5fGJlbnF8cGFsbSg/PVxcLSl8c29ueWVyaWNzc29ufGFjZXJ8YXN1c3xkZWxsfG1laXp1fG1vdG9yb2xhfHBvbHl0cm9uKVstXyBdPyhbLVxcd10qKS9pLC8oaHApIChbXFx3IF0rXFx3KS9pLC8oYXN1cyktPyhcXHcrKS9pLC8obWljcm9zb2Z0KTsgKGx1bWlhW1xcdyBdKykvaSwvKGxlbm92bylbLV8gXT8oWy1cXHddKykvaSwvKGpvbGxhKS9pLC8ob3BwbykgPyhbXFx3IF0rKSBidWkvaV0sW2wsYSxbZCxfXV0sWy8oa29ibylcXHMoZXJlYWRlcnx0b3VjaCkvaSwvKGFyY2hvcykgKGdhbWVwYWQyPykvaSwvKGhwKS4rKHRvdWNocGFkKD8hLit0YWJsZXQpfHRhYmxldCkvaSwvKGtpbmRsZSlcXC8oW1xcd1xcLl0rKS9pLC8obm9vaylbXFx3IF0rYnVpbGRcXC8oXFx3KykvaSwvKGRlbGwpIChzdHJlYVtrcHJcXGQgXSpbXFxka29dKS9pLC8obGVbLSBdK3BhbilbLSBdKyhcXHd7MSw5fSkgYnVpL2ksLyh0cmluaXR5KVstIF0qKHRcXGR7M30pIGJ1aS9pLC8oZ2lnYXNldClbLSBdKyhxXFx3ezEsOX0pIGJ1aS9pLC8odm9kYWZvbmUpIChbXFx3IF0rKSg/OlxcKXwgYnVpKS9pXSxbbCxhLFtkLEVdXSxbLyhzdXJmYWNlIGR1bykvaV0sW2EsW2wsT10sW2QsRV1dLFsvZHJvaWQgW1xcZFxcLl0rOyAoZnBcXGR1PykoPzogYnxcXCkpL2ldLFthLFtsLFwiRmFpcnBob25lXCJdLFtkLF9dXSxbLyh1MzA0YWEpL2ldLFthLFtsLFwiQVQmVFwiXSxbZCxfXV0sWy9cXGJzaWUtKFxcdyopL2ldLFthLFtsLFwiU2llbWVuc1wiXSxbZCxfXV0sWy9cXGIocmN0XFx3KykgYi9pXSxbYSxbbCxcIlJDQVwiXSxbZCxFXV0sWy9cXGIodmVudWVbXFxkIF17Miw3fSkgYi9pXSxbYSxbbCxcIkRlbGxcIl0sW2QsRV1dLFsvXFxiKHEoPzptdnx0YSlcXHcrKSBiL2ldLFthLFtsLFwiVmVyaXpvblwiXSxbZCxFXV0sWy9cXGIoPzpiYXJuZXNbJiBdK25vYmxlIHxibltydF0pKFtcXHdcXCsgXSopIGIvaV0sW2EsW2wsXCJCYXJuZXMgJiBOb2JsZVwiXSxbZCxFXV0sWy9cXGIodG1cXGR7M31cXHcrKSBiL2ldLFthLFtsLFwiTnVWaXNpb25cIl0sW2QsRV1dLFsvXFxiKGs4OCkgYi9pXSxbYSxbbCxcIlpURVwiXSxbZCxFXV0sWy9cXGIobnhcXGR7M31qKSBiL2ldLFthLFtsLFwiWlRFXCJdLFtkLF9dXSxbL1xcYihnZW5cXGR7M30pIGIuKzQ5aC9pXSxbYSxbbCxcIlN3aXNzXCJdLFtkLF9dXSxbL1xcYih6dXJcXGR7M30pIGIvaV0sW2EsW2wsXCJTd2lzc1wiXSxbZCxFXV0sWy9cXGIoKHpla2kpP3RiLipcXGIpIGIvaV0sW2EsW2wsXCJaZWtpXCJdLFtkLEVdXSxbL1xcYihbeXJdXFxkezJ9KSBiL2ksL1xcYihkcmFnb25bLSBdK3RvdWNoIHxkdCkoXFx3ezV9KSBiL2ldLFtbbCxcIkRyYWdvbiBUb3VjaFwiXSxhLFtkLEVdXSxbL1xcYihucy0/XFx3ezAsOX0pIGIvaV0sW2EsW2wsXCJJbnNpZ25pYVwiXSxbZCxFXV0sWy9cXGIoKG54YXxuZXh0KS0/XFx3ezAsOX0pIGIvaV0sW2EsW2wsXCJOZXh0Qm9va1wiXSxbZCxFXV0sWy9cXGIoeHRyZW1lXFxfKT8odigxWzA0NV18MlswMTVdfFszNDY5XTB8N1swNV0pKSBiL2ldLFtbbCxcIlZvaWNlXCJdLGEsW2QsX11dLFsvXFxiKGx2dGVsXFwtKT8odjFbMTJdKSBiL2ldLFtbbCxcIkx2VGVsXCJdLGEsW2QsX11dLFsvXFxiKHBoLTEpIC9pXSxbYSxbbCxcIkVzc2VudGlhbFwiXSxbZCxfXV0sWy9cXGIodigxMDBtZHw3MDBuYXw3MDExfDkxN2cpLipcXGIpIGIvaV0sW2EsW2wsXCJFbnZpemVuXCJdLFtkLEVdXSxbL1xcYih0cmlvWy1cXHdcXC4gXSspIGIvaV0sW2EsW2wsXCJNYWNoU3BlZWRcIl0sW2QsRV1dLFsvXFxidHVfKDE0OTEpIGIvaV0sW2EsW2wsXCJSb3RvclwiXSxbZCxFXV0sWy8oc2hpZWxkW1xcdyBdKykgYi9pXSxbYSxbbCxcIk52aWRpYVwiXSxbZCxFXV0sWy8oc3ByaW50KSAoXFx3KykvaV0sW2wsYSxbZCxfXV0sWy8oa2luXFwuW29uZXR3XXszfSkvaV0sW1thLC9cXC4vZyxcIiBcIl0sW2wsT10sW2QsX11dLFsvZHJvaWQuKzsgKGNjNjY2Nj98ZXQ1WzE2XXxtY1syMzldWzIzXXg/fHZjOFswM114PylcXCkvaV0sW2EsW2wsVV0sW2QsRV1dLFsvZHJvaWQuKzsgKGVjMzB8cHMyMHx0Y1syLThdXFxkW2t4XSlcXCkvaV0sW2EsW2wsVV0sW2QsX11dLFsvc21hcnQtdHYuKyhzYW1zdW5nKS9pXSxbbCxbZCxmXV0sWy9oYmJ0di4rbWFwbGU7KFxcZCspL2ldLFtbYSwvXi8sXCJTbWFydFRWXCJdLFtsLFBdLFtkLGZdXSxbLyhudXg7IG5ldGNhc3QuK3NtYXJ0dHZ8bGcgKG5ldGNhc3RcXC50di0yMDFcXGR8YW5kcm9pZCB0dikpL2ldLFtbbCx3XSxbZCxmXV0sWy8oYXBwbGUpID90di9pXSxbbCxbYSxnK1wiIFRWXCJdLFtkLGZdXSxbL2Nya2V5L2ldLFtbYSx2K1wiY2FzdFwiXSxbbCxBXSxbZCxmXV0sWy9kcm9pZC4rYWZ0KFxcdykoIGJ1aXxcXCkpL2ldLFthLFtsLFNdLFtkLGZdXSxbL1xcKGR0dltcXCk7XS4rKGFxdW9zKS9pLC8oYXF1b3MtdHZbXFx3IF0rKVxcKS9pXSxbYSxbbCxMXSxbZCxmXV0sWy8oYnJhdmlhW1xcdyBdKykoIGJ1aXxcXCkpL2ldLFthLFtsLGtdLFtkLGZdXSxbLyhtaXR2LVxcd3s1fSkgYnVpL2ldLFthLFtsLE1dLFtkLGZdXSxbL0hiYnR2LioodGVjaG5pc2F0KSAoLiopOy9pXSxbbCxhLFtkLGZdXSxbL1xcYihyb2t1KVtcXGR4XSpbXFwpXFwvXSgoPzpkdnAtKT9bXFxkXFwuXSopL2ksL2hiYnR2XFwvXFxkK1xcLlxcZCtcXC5cXGQrICtcXChbXFx3XFwrIF0qOyAqKFtcXHdcXGRdW147XSopOyhbXjtdKikvaV0sW1tsLFddLFthLFddLFtkLGZdXSxbL1xcYihhbmRyb2lkIHR2fHNtYXJ0Wy0gXT90dnxvcGVyYSB0dnx0djsgcnY6KVxcYi9pXSxbW2QsZl1dLFsvKG91eWEpL2ksLyhuaW50ZW5kbykgKFt3aWRzM3V0Y2hdKykvaV0sW2wsYSxbZCxwXV0sWy9kcm9pZC4rOyAoc2hpZWxkKSBidWkvaV0sW2EsW2wsXCJOdmlkaWFcIl0sW2QscF1dLFsvKHBsYXlzdGF0aW9uIFszNDVwb3J0YWJsZXZpXSspL2ldLFthLFtsLGtdLFtkLHBdXSxbL1xcYih4Ym94KD86IG9uZSk/KD8hOyB4Ym94KSlbXFwpOyBdL2ldLFthLFtsLE9dLFtkLHBdXSxbLygocGViYmxlKSlhcHAvaV0sW2wsYSxbZCxtXV0sWy8od2F0Y2gpKD86ID9vc1ssXFwvXXxcXGQsXFxkXFwvKVtcXGRcXC5dKy9pXSxbYSxbbCxnXSxbZCxtXV0sWy9kcm9pZC4rOyAoZ2xhc3MpIFxcZC9pXSxbYSxbbCxBXSxbZCxtXV0sWy9kcm9pZC4rOyAod3Q2Mz8wezIsM30pXFwpL2ldLFthLFtsLFVdLFtkLG1dXSxbLyhxdWVzdCggMnwgcHJvKT8pL2ldLFthLFtsLHhdLFtkLG1dXSxbLyh0ZXNsYSkoPzogcXRjYXJicm93c2VyfFxcL1stXFx3XFwuXSspL2ldLFtsLFtkLFRdXSxbL2Ryb2lkIC4rPzsgKFteO10rPykoPzogYnVpfFxcKSBhcHBsZXcpLis/IG1vYmlsZSBzYWZhcmkvaV0sW2EsW2QsX11dLFsvZHJvaWQgLis/OyAoW147XSs/KSg/OiBidWl8XFwpIGFwcGxldykuKz8oPyEgbW9iaWxlKSBzYWZhcmkvaV0sW2EsW2QsRV1dLFsvXFxiKCh0YWJsZXR8dGFiKVs7XFwvXXxmb2N1c1xcL1xcZCg/IS4rbW9iaWxlKSkvaV0sW1tkLEVdXSxbLyhwaG9uZXxtb2JpbGUoPzpbO1xcL118IFsgXFx3XFwvXFwuXSpzYWZhcmkpfHBkYSg/PS4rd2luZG93cyBjZSkpL2ldLFtbZCxfXV0sWy8oYW5kcm9pZFstXFx3XFwuIF17MCw5fSk7LitidWlsL2ldLFthLFtsLFwiR2VuZXJpY1wiXV1dLGVuZ2luZTpbWy93aW5kb3dzLisgZWRnZVxcLyhbXFx3XFwuXSspL2ldLFt1LFtjLFwiRWRnZUhUTUxcIl1dLFsvd2Via2l0XFwvNTM3XFwuMzYuK2Nocm9tZVxcLyg/ITI3KShbXFx3XFwuXSspL2ldLFt1LFtjLFwiQmxpbmtcIl1dLFsvKHByZXN0bylcXC8oW1xcd1xcLl0rKS9pLC8od2Via2l0fHRyaWRlbnR8bmV0ZnJvbnR8bmV0c3VyZnxhbWF5YXxseW54fHczbXxnb2FubmEpXFwvKFtcXHdcXC5dKykvaSwvZWtpb2goZmxvdylcXC8oW1xcd1xcLl0rKS9pLC8oa2h0bWx8dGFzbWFufGxpbmtzKVtcXC8gXVxcKD8oW1xcd1xcLl0rKS9pLC8oaWNhYilbXFwvIF0oWzIzXVxcLltcXGRcXC5dKykvaV0sW2MsdV0sWy9ydlxcOihbXFx3XFwuXXsxLDl9KVxcYi4rKGdlY2tvKS9pXSxbdSxjXV0sb3M6W1svbWljcm9zb2Z0ICh3aW5kb3dzKSAodmlzdGF8eHApL2ldLFtjLHVdLFsvKHdpbmRvd3MpIG50IDZcXC4yOyAoYXJtKS9pLC8od2luZG93cyAoPzpwaG9uZSg/OiBvcyk/fG1vYmlsZSkpW1xcLyBdPyhbXFxkXFwuXFx3IF0qKS9pLC8od2luZG93cylbXFwvIF0/KFtudGNlXFxkXFwuIF0rXFx3KSg/IS4reGJveCkvaV0sW2MsW3UsSyxZXV0sWy8od2luKD89M3w5fG4pfHdpbiA5eCApKFtudFxcZFxcLl0rKS9pXSxbW2MsXCJXaW5kb3dzXCJdLFt1LEssWV1dLFsvaXBbaG9uZWFkXXsyLDR9XFxiKD86LipvcyAoW1xcd10rKSBsaWtlIG1hY3w7IG9wZXJhKS9pLC9jZm5ldHdvcmtcXC8uK2Rhcndpbi9pXSxbW3UsL18vZyxcIi5cIl0sW2MsXCJpT1NcIl1dLFsvKG1hYyBvcyB4KSA/KFtcXHdcXC4gXSopL2ksLyhtYWNpbnRvc2h8bWFjX3Bvd2VycGNcXGIpKD8hLitoYWlrdSkvaV0sW1tjLEZdLFt1LC9fL2csXCIuXCJdXSxbL2Ryb2lkIChbXFx3XFwuXSspXFxiLisoYW5kcm9pZFstIF14ODZ8aGFybW9ueW9zKS9pXSxbdSxjXSxbLyhhbmRyb2lkfHdlYm9zfHFueHxiYWRhfHJpbSB0YWJsZXQgb3N8bWFlbW98bWVlZ298c2FpbGZpc2gpWy1cXC8gXT8oW1xcd1xcLl0qKS9pLC8oYmxhY2tiZXJyeSlcXHcqXFwvKFtcXHdcXC5dKikvaSwvKHRpemVufGthaW9zKVtcXC8gXShbXFx3XFwuXSspL2ksL1xcKChzZXJpZXM0MCk7L2ldLFtjLHVdLFsvXFwoYmIoMTApOy9pXSxbdSxbYyxDXV0sWy8oPzpzeW1iaWFuID9vc3xzeW1ib3N8czYwKD89Oyl8c2VyaWVzNjApWy1cXC8gXT8oW1xcd1xcLl0qKS9pXSxbdSxbYyxcIlN5bWJpYW5cIl1dLFsvbW96aWxsYVxcL1tcXGRcXC5dKyBcXCgoPzptb2JpbGV8dGFibGV0fHR2fG1vYmlsZTsgW1xcdyBdKyk7IHJ2Oi4rIGdlY2tvXFwvKFtcXHdcXC5dKykvaV0sW3UsW2MseStcIiBPU1wiXV0sWy93ZWIwczsuK3J0KHR2KS9pLC9cXGIoPzpocCk/d29zKD86YnJvd3Nlcik/XFwvKFtcXHdcXC5dKykvaV0sW3UsW2MsXCJ3ZWJPU1wiXV0sWy93YXRjaCg/OiA/b3NbLFxcL118XFxkLFxcZFxcLykoW1xcZFxcLl0rKS9pXSxbdSxbYyxcIndhdGNoT1NcIl1dLFsvY3JrZXlcXC8oW1xcZFxcLl0rKS9pXSxbdSxbYyx2K1wiY2FzdFwiXV0sWy8oY3JvcykgW1xcd10rKD86XFwpfCAoW1xcd1xcLl0rKVxcYikvaV0sW1tjLFZdLHVdLFsvcGFuYXNvbmljOyh2aWVyYSkvaSwvKG5ldHJhbmdlKW1taC9pLC8obmV0dHYpXFwvKFxcZCtcXC5bXFx3XFwuXSspL2ksLyhuaW50ZW5kb3xwbGF5c3RhdGlvbikgKFt3aWRzMzQ1cG9ydGFibGV2dWNoXSspL2ksLyh4Ym94KTsgK3hib3ggKFteXFwpO10rKS9pLC9cXGIoam9saXxwYWxtKVxcYiA/KD86b3MpP1xcLz8oW1xcd1xcLl0qKS9pLC8obWludClbXFwvXFwoXFwpIF0/KFxcdyopL2ksLyhtYWdlaWF8dmVjdG9ybGludXgpWzsgXS9pLC8oW2t4bG5dP3VidW50dXxkZWJpYW58c3VzZXxvcGVuc3VzZXxnZW50b298YXJjaCg/PSBsaW51eCl8c2xhY2t3YXJlfGZlZG9yYXxtYW5kcml2YXxjZW50b3N8cGNsaW51eG9zfHJlZCA/aGF0fHplbndhbGt8bGlucHVzfHJhc3BiaWFufHBsYW4gOXxtaW5peHxyaXNjIG9zfGNvbnRpa2l8ZGVlcGlufG1hbmphcm98ZWxlbWVudGFyeSBvc3xzYWJheW9ufGxpbnNwaXJlKSg/OiBnbnVcXC9saW51eCk/KD86IGVudGVycHJpc2UpPyg/OlstIF1saW51eCk/KD86LWdudSk/Wy1cXC8gXT8oPyFjaHJvbXxwYWNrYWdlKShbLVxcd1xcLl0qKS9pLC8oaHVyZHxsaW51eCkgPyhbXFx3XFwuXSopL2ksLyhnbnUpID8oW1xcd1xcLl0qKS9pLC9cXGIoWy1mcmVudG9wY2doc117MCw1fWJzZHxkcmFnb25mbHkpW1xcLyBdPyg/IWFtZHxbaXgzNDZdezEsMn04NikoW1xcd1xcLl0qKS9pLC8oaGFpa3UpIChcXHcrKS9pXSxbYyx1XSxbLyhzdW5vcykgPyhbXFx3XFwuXFxkXSopL2ldLFtbYyxcIlNvbGFyaXNcIl0sdV0sWy8oKD86b3Blbik/c29sYXJpcylbLVxcLyBdPyhbXFx3XFwuXSopL2ksLyhhaXgpICgoXFxkKSg/PVxcLnxcXCl8IClbXFx3XFwuXSkqL2ksL1xcYihiZW9zfG9zXFwvMnxhbWlnYW9zfG1vcnBob3N8b3BlbnZtc3xmdWNoc2lhfGhwLXV4KS9pLC8odW5peCkgPyhbXFx3XFwuXSopL2ldLFtjLHVdXX0sej1mdW5jdGlvbihwLGYpe2lmKHR5cGVvZiBwPT09ciYmKGY9cCxwPXQpLCEodGhpcyBpbnN0YW5jZW9mIHopKXJldHVybiBuZXcgeihwLGYpLmdldFJlc3VsdCgpO3ZhciBtPXR5cGVvZiBlIT09biYmZS5uYXZpZ2F0b3I/ZS5uYXZpZ2F0b3I6dCxUPXB8fChtJiZtLnVzZXJBZ2VudD9tLnVzZXJBZ2VudDpcIlwiKSxTPW0mJm0udXNlckFnZW50RGF0YT9tLnVzZXJBZ2VudERhdGE6dCxnPWY/ZnVuY3Rpb24oZSx0KXt2YXIgaT17fTtmb3IodmFyIG4gaW4gZSl0W25dJiZ0W25dLmxlbmd0aCUyPT0wP2lbbl09dFtuXS5jb25jYXQoZVtuXSk6aVtuXT1lW25dO3JldHVybiBpfShxLGYpOnE7cmV0dXJuIHRoaXMuZ2V0QnJvd3Nlcj1mdW5jdGlvbigpe3ZhciBlPXt9O3JldHVybiBlW2NdPXQsZVt1XT10LEguY2FsbChlLFQsZy5icm93c2VyKSxlW3NdPWZ1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZT09PW8/ZS5yZXBsYWNlKC9bXlxcZFxcLl0vZyxcIlwiKS5zcGxpdChcIi5cIilbMF06dH0oZVt1XSksbSYmbS5icmF2ZSYmdHlwZW9mIG0uYnJhdmUuaXNCcmF2ZT09aSYmKGVbY109XCJCcmF2ZVwiKSxlfSx0aGlzLmdldENQVT1mdW5jdGlvbigpe3ZhciBlPXt9O3JldHVybiBlW2hdPXQsSC5jYWxsKGUsVCxnLmNwdSksZX0sdGhpcy5nZXREZXZpY2U9ZnVuY3Rpb24oKXt2YXIgZT17fTtyZXR1cm4gZVtsXT10LGVbYV09dCxlW2RdPXQsSC5jYWxsKGUsVCxnLmRldmljZSksIWVbZF0mJlMmJlMubW9iaWxlJiYoZVtkXT1fKSxcIk1hY2ludG9zaFwiPT1lW2FdJiZtJiZ0eXBlb2YgbS5zdGFuZGFsb25lIT09biYmbS5tYXhUb3VjaFBvaW50cyYmbS5tYXhUb3VjaFBvaW50cz4yJiYoZVthXT1cImlQYWRcIixlW2RdPUUpLGV9LHRoaXMuZ2V0RW5naW5lPWZ1bmN0aW9uKCl7dmFyIGU9e307cmV0dXJuIGVbY109dCxlW3VdPXQsSC5jYWxsKGUsVCxnLmVuZ2luZSksZX0sdGhpcy5nZXRPUz1mdW5jdGlvbigpe3ZhciBlPXt9O3JldHVybiBlW2NdPXQsZVt1XT10LEguY2FsbChlLFQsZy5vcyksIWVbY10mJlMmJlwiVW5rbm93blwiIT1TLnBsYXRmb3JtJiYoZVtjXT1TLnBsYXRmb3JtLnJlcGxhY2UoL2Nocm9tZSBvcy9pLFYpLnJlcGxhY2UoL21hY29zL2ksRikpLGV9LHRoaXMuZ2V0UmVzdWx0PWZ1bmN0aW9uKCl7cmV0dXJue3VhOnRoaXMuZ2V0VUEoKSxicm93c2VyOnRoaXMuZ2V0QnJvd3NlcigpLGVuZ2luZTp0aGlzLmdldEVuZ2luZSgpLG9zOnRoaXMuZ2V0T1MoKSxkZXZpY2U6dGhpcy5nZXREZXZpY2UoKSxjcHU6dGhpcy5nZXRDUFUoKX19LHRoaXMuZ2V0VUE9ZnVuY3Rpb24oKXtyZXR1cm4gVH0sdGhpcy5zZXRVQT1mdW5jdGlvbihlKXtyZXR1cm4gVD10eXBlb2YgZT09PW8mJmUubGVuZ3RoPjM1MD9XKGUsMzUwKTplLHRoaXN9LHRoaXMuc2V0VUEoVCksdGhpc307ei5WRVJTSU9OPVwiMC43LjM0XCIsei5CUk9XU0VSPUIoW2MsdSxzXSksei5DUFU9QihbaF0pLHouREVWSUNFPUIoW2EsbCxkLHAsXyxmLEUsbSxUXSksei5FTkdJTkU9ei5PUz1CKFtjLHVdKSxlRS5leHBvcnRzJiYodEU9ZUUuZXhwb3J0cz16KSx0RS5VQVBhcnNlcj16O3ZhciBKPXR5cGVvZiBlIT09biYmKGUualF1ZXJ5fHxlLlplcHRvKTtpZihKJiYhSi51YSl7dmFyIFg9bmV3IHo7Si51YT1YLmdldFJlc3VsdCgpLEoudWEuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIFguZ2V0VUEoKX0sSi51YS5zZXQ9ZnVuY3Rpb24oZSl7WC5zZXRVQShlKTt2YXIgdD1YLmdldFJlc3VsdCgpO2Zvcih2YXIgaSBpbiB0KUoudWFbaV09dFtpXX19fShcIm9iamVjdFwiPT10eXBlb2Ygd2luZG93P3dpbmRvdzp0KTt2YXIgZEU9aShjRS5leHBvcnRzKSxsRT1wbix1RT1aZSxoRT1ZLHBFPXhvLF9FPWh0KFwiaXRlcmF0b3JcIiksRUU9T2JqZWN0LGZFPWZ1bmN0aW9uKGUpe2lmKGhFKGUpKXJldHVybiExO3ZhciB0PUVFKGUpO3JldHVybiB2b2lkIDAhPT10W19FXXx8XCJAQGl0ZXJhdG9yXCJpbiB0fHx1RShwRSxsRSh0KSl9LG1FPWkoZkUpLFRFPWg7d2koe2dsb2JhbDohMCxmb3JjZWQ6VEUuZ2xvYmFsVGhpcyE9PVRFfSx7Z2xvYmFsVGhpczpURX0pO3ZhciBTRT1pKGgpLGdFPUFkLmNsZWFyO3dpKHtnbG9iYWw6ITAsYmluZDohMCxlbnVtZXJhYmxlOiEwLGZvcmNlZDpoLmNsZWFySW1tZWRpYXRlIT09Z0V9LHtjbGVhckltbWVkaWF0ZTpnRX0pO3ZhciBSRT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBCdW4mJkJ1biYmXCJzdHJpbmdcIj09dHlwZW9mIEJ1bi52ZXJzaW9uLENFPWgsSUU9bSx2RT13LHlFPVJFLEFFPWNlLGJFPVhjLHdFPVpjLE9FPUNFLkZ1bmN0aW9uLE5FPS9NU0lFIC5cXC4vLnRlc3QoQUUpfHx5RSYmZnVuY3Rpb24oKXt2YXIgZT1DRS5CdW4udmVyc2lvbi5zcGxpdChcIi5cIik7cmV0dXJuIGUubGVuZ3RoPDN8fDA9PWVbMF0mJihlWzFdPDN8fDM9PWVbMV0mJjA9PWVbMl0pfSgpLERFPXdpLFBFPWgsTEU9QWQuc2V0LGtFPWZ1bmN0aW9uKGUsdCl7dmFyIGk9dD8yOjE7cmV0dXJuIE5FP2Z1bmN0aW9uKG4scil7dmFyIG89d0UoYXJndW1lbnRzLmxlbmd0aCwxKT5pLHM9dkUobik/bjpPRShuKSxhPW8/YkUoYXJndW1lbnRzLGkpOltdLGM9bz9mdW5jdGlvbigpe0lFKHMsdGhpcyxhKX06cztyZXR1cm4gdD9lKGMscik6ZShjKX06ZX0sTUU9UEUuc2V0SW1tZWRpYXRlP2tFKExFLCExKTpMRTtERSh7Z2xvYmFsOiEwLGJpbmQ6ITAsZW51bWVyYWJsZTohMCxmb3JjZWQ6UEUuc2V0SW1tZWRpYXRlIT09TUV9LHtzZXRJbW1lZGlhdGU6TUV9KTt2YXIgVUU9aShpZS5zZXRJbW1lZGlhdGUpLHhFPXdpLFZFPSRkLEZFPURlLEJFPVpjLGpFPWpuLEdFPWgucHJvY2Vzczt4RSh7Z2xvYmFsOiEwLGVudW1lcmFibGU6ITAsZG9udENhbGxHZXRTZXQ6ITB9LHtxdWV1ZU1pY3JvdGFzazpmdW5jdGlvbihlKXtCRShhcmd1bWVudHMubGVuZ3RoLDEpLEZFKGUpO3ZhciB0PWpFJiZHRS5kb21haW47VkUodD90LmJpbmQoZSk6ZSl9fSk7dmFyIFdFPWkoaWUucXVldWVNaWNyb3Rhc2spO2Z1bmN0aW9uIEhFKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodCxhcmd1bWVudHMpfX1jb25zdHt0b1N0cmluZzpLRX09T2JqZWN0LnByb3RvdHlwZSx7Z2V0UHJvdG90eXBlT2Y6WUV9PU9iamVjdCxxRT0oekU9T2JqZWN0LmNyZWF0ZShudWxsKSxlPT57Y29uc3QgdD1LRS5jYWxsKGUpO3JldHVybiB6RVt0XXx8KHpFW3RdPXQuc2xpY2UoOCwtMSkudG9Mb3dlckNhc2UoKSl9KTt2YXIgekU7Y29uc3QgSkU9ZT0+KGU9ZS50b0xvd2VyQ2FzZSgpLHQ9PnFFKHQpPT09ZSksWEU9ZT0+dD0+dHlwZW9mIHQ9PT1lLHtpc0FycmF5OlFFfT1BcnJheSxaRT1YRShcInVuZGVmaW5lZFwiKTtjb25zdCAkRT1KRShcIkFycmF5QnVmZmVyXCIpO2NvbnN0IGVmPVhFKFwic3RyaW5nXCIpLHRmPVhFKFwiZnVuY3Rpb25cIiksbmY9WEUoXCJudW1iZXJcIikscmY9ZT0+bnVsbCE9PWUmJlwib2JqZWN0XCI9PXR5cGVvZiBlLG9mPWU9PntpZihcIm9iamVjdFwiIT09cUUoZSkpcmV0dXJuITE7Y29uc3QgdD1ZRShlKTtyZXR1cm4hKG51bGwhPT10JiZ0IT09T2JqZWN0LnByb3RvdHlwZSYmbnVsbCE9PU9iamVjdC5nZXRQcm90b3R5cGVPZih0KXx8U3ltYm9sLnRvU3RyaW5nVGFnIGluIGV8fG1FKGUpKX0sc2Y9SkUoXCJEYXRlXCIpLGFmPUpFKFwiRmlsZVwiKSxjZj1KRShcIkJsb2JcIiksZGY9SkUoXCJGaWxlTGlzdFwiKSxsZj1KRShcIlVSTFNlYXJjaFBhcmFtc1wiKSxbdWYsaGYscGYsX2ZdPVtcIlJlYWRhYmxlU3RyZWFtXCIsXCJSZXF1ZXN0XCIsXCJSZXNwb25zZVwiLFwiSGVhZGVyc1wiXS5tYXAoSkUpO2Z1bmN0aW9uIEVmKGUsdCl7bGV0IGksbix7YWxsT3duS2V5czpyPSExfT1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06e307aWYobnVsbCE9ZSlpZihcIm9iamVjdFwiIT10eXBlb2YgZSYmKGU9W2VdKSxRRShlKSlmb3IoaT0wLG49ZS5sZW5ndGg7aTxuO2krKyl0LmNhbGwobnVsbCxlW2ldLGksZSk7ZWxzZXtjb25zdCBuPXI/T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZSk6T2JqZWN0LmtleXMoZSksbz1uLmxlbmd0aDtsZXQgcztmb3IoaT0wO2k8bztpKyspcz1uW2ldLHQuY2FsbChudWxsLGVbc10scyxlKX19ZnVuY3Rpb24gZmYoZSx0KXt0PXQudG9Mb3dlckNhc2UoKTtjb25zdCBpPU9iamVjdC5rZXlzKGUpO2xldCBuLHI9aS5sZW5ndGg7Zm9yKDtyLS0gPjA7KWlmKG49aVtyXSx0PT09bi50b0xvd2VyQ2FzZSgpKXJldHVybiBuO3JldHVybiBudWxsfWNvbnN0IG1mPXZvaWQgMCE9PVNFP1NFOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmP3NlbGY6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6Z2xvYmFsLFRmPWU9PiFaRShlKSYmZSE9PW1mO2NvbnN0IFNmPShnZj1cInVuZGVmaW5lZFwiIT10eXBlb2YgVWludDhBcnJheSYmWUUoVWludDhBcnJheSksZT0+Z2YmJmUgaW5zdGFuY2VvZiBnZik7dmFyIGdmO2NvbnN0IFJmPUpFKFwiSFRNTEZvcm1FbGVtZW50XCIpLENmPShlPT57bGV0e2hhc093blByb3BlcnR5OnR9PWU7cmV0dXJuKGUsaSk9PnQuY2FsbChlLGkpfSkoT2JqZWN0LnByb3RvdHlwZSksSWY9SkUoXCJSZWdFeHBcIiksdmY9KGUsdCk9Pntjb25zdCBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGUpLG49e307RWYoaSwoKGkscik9PntsZXQgbzshMSE9PShvPXQoaSxyLGUpKSYmKG5bcl09b3x8aSl9KSksT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxuKX0seWY9XCJhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5elwiLEFmPVwiMDEyMzQ1Njc4OVwiLGJmPXtESUdJVDpBZixBTFBIQTp5ZixBTFBIQV9ESUdJVDp5Zit5Zi50b1VwcGVyQ2FzZSgpK0FmfTtjb25zdCB3Zj1KRShcIkFzeW5jRnVuY3Rpb25cIiksT2Y9KE5mPVwiZnVuY3Rpb25cIj09dHlwZW9mIFVFLERmPXRmKG1mLnBvc3RNZXNzYWdlKSxOZj9VRTpEZj8oUGY9XCJheGlvc0BcIi5jb25jYXQoTWF0aC5yYW5kb20oKSksTGY9W10sbWYuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwoZT0+e2xldHtzb3VyY2U6dCxkYXRhOml9PWU7dD09PW1mJiZpPT09UGYmJkxmLmxlbmd0aCYmTGYuc2hpZnQoKSgpfSksITEpLGU9PntMZi5wdXNoKGUpLG1mLnBvc3RNZXNzYWdlKFBmLFwiKlwiKX0pOmU9PnNldFRpbWVvdXQoZSkpO3ZhciBOZixEZixQZixMZjtjb25zdCBrZj12b2lkIDAhPT1XRT9XRS5iaW5kKG1mKTpcInVuZGVmaW5lZFwiIT10eXBlb2YgcHJvY2VzcyYmcHJvY2Vzcy5uZXh0VGlja3x8T2Y7dmFyIE1mPXtpc0FycmF5OlFFLGlzQXJyYXlCdWZmZXI6JEUsaXNCdWZmZXI6ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGwhPT1lJiYhWkUoZSkmJm51bGwhPT1lLmNvbnN0cnVjdG9yJiYhWkUoZS5jb25zdHJ1Y3RvcikmJnRmKGUuY29uc3RydWN0b3IuaXNCdWZmZXIpJiZlLmNvbnN0cnVjdG9yLmlzQnVmZmVyKGUpfSxpc0Zvcm1EYXRhOmU9PntsZXQgdDtyZXR1cm4gZSYmKFwiZnVuY3Rpb25cIj09dHlwZW9mIEZvcm1EYXRhJiZlIGluc3RhbmNlb2YgRm9ybURhdGF8fHRmKGUuYXBwZW5kKSYmKFwiZm9ybWRhdGFcIj09PSh0PXFFKGUpKXx8XCJvYmplY3RcIj09PXQmJnRmKGUudG9TdHJpbmcpJiZcIltvYmplY3QgRm9ybURhdGFdXCI9PT1lLnRvU3RyaW5nKCkpKX0saXNBcnJheUJ1ZmZlclZpZXc6ZnVuY3Rpb24oZSl7bGV0IHQ7cmV0dXJuIHQ9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIEFycmF5QnVmZmVyJiZBcnJheUJ1ZmZlci5pc1ZpZXc/QXJyYXlCdWZmZXIuaXNWaWV3KGUpOmUmJmUuYnVmZmVyJiYkRShlLmJ1ZmZlciksdH0saXNTdHJpbmc6ZWYsaXNOdW1iZXI6bmYsaXNCb29sZWFuOmU9PiEwPT09ZXx8ITE9PT1lLGlzT2JqZWN0OnJmLGlzUGxhaW5PYmplY3Q6b2YsaXNSZWFkYWJsZVN0cmVhbTp1Zixpc1JlcXVlc3Q6aGYsaXNSZXNwb25zZTpwZixpc0hlYWRlcnM6X2YsaXNVbmRlZmluZWQ6WkUsaXNEYXRlOnNmLGlzRmlsZTphZixpc0Jsb2I6Y2YsaXNSZWdFeHA6SWYsaXNGdW5jdGlvbjp0Zixpc1N0cmVhbTplPT5yZihlKSYmdGYoZS5waXBlKSxpc1VSTFNlYXJjaFBhcmFtczpsZixpc1R5cGVkQXJyYXk6U2YsaXNGaWxlTGlzdDpkZixmb3JFYWNoOkVmLG1lcmdlOmZ1bmN0aW9uIGUoKXtjb25zdHtjYXNlbGVzczp0fT1UZih0aGlzKSYmdGhpc3x8e30saT17fSxuPShuLHIpPT57Y29uc3Qgbz10JiZmZihpLHIpfHxyO29mKGlbb10pJiZvZihuKT9pW29dPWUoaVtvXSxuKTpvZihuKT9pW29dPWUoe30sbik6UUUobik/aVtvXT1uLnNsaWNlKCk6aVtvXT1ufTtmb3IobGV0IGU9MCx0PWFyZ3VtZW50cy5sZW5ndGg7ZTx0O2UrKylhcmd1bWVudHNbZV0mJkVmKGFyZ3VtZW50c1tlXSxuKTtyZXR1cm4gaX0sZXh0ZW5kOmZ1bmN0aW9uKGUsdCxpKXtsZXR7YWxsT3duS2V5czpufT1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106e307cmV0dXJuIEVmKHQsKCh0LG4pPT57aSYmdGYodCk/ZVtuXT1IRSh0LGkpOmVbbl09dH0pLHthbGxPd25LZXlzOm59KSxlfSx0cmltOmU9PmpwKGUpP2pwKGUpLmNhbGwoZSk6ZS5yZXBsYWNlKC9eW1xcc1xcdUZFRkZcXHhBMF0rfFtcXHNcXHVGRUZGXFx4QTBdKyQvZyxcIlwiKSxzdHJpcEJPTTplPT4oNjUyNzk9PT1lLmNoYXJDb2RlQXQoMCkmJihlPWUuc2xpY2UoMSkpLGUpLGluaGVyaXRzOihlLHQsaSxuKT0+e2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodC5wcm90b3R5cGUsbiksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcInN1cGVyXCIse3ZhbHVlOnQucHJvdG90eXBlfSksaSYmT2JqZWN0LmFzc2lnbihlLnByb3RvdHlwZSxpKX0sdG9GbGF0T2JqZWN0OihlLHQsaSxuKT0+e2xldCByLG8scztjb25zdCBhPXt9O2lmKHQ9dHx8e30sbnVsbD09ZSlyZXR1cm4gdDtkb3tmb3Iocj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhlKSxvPXIubGVuZ3RoO28tLSA+MDspcz1yW29dLG4mJiFuKHMsZSx0KXx8YVtzXXx8KHRbc109ZVtzXSxhW3NdPSEwKTtlPSExIT09aSYmWUUoZSl9d2hpbGUoZSYmKCFpfHxpKGUsdCkpJiZlIT09T2JqZWN0LnByb3RvdHlwZSk7cmV0dXJuIHR9LGtpbmRPZjpxRSxraW5kT2ZUZXN0OkpFLGVuZHNXaXRoOihlLHQsaSk9PntlPVN0cmluZyhlKSwodm9pZCAwPT09aXx8aT5lLmxlbmd0aCkmJihpPWUubGVuZ3RoKSxpLT10Lmxlbmd0aDtjb25zdCBuPWUuaW5kZXhPZih0LGkpO3JldHVybi0xIT09biYmbj09PWl9LHRvQXJyYXk6ZT0+e2lmKCFlKXJldHVybiBudWxsO2lmKFFFKGUpKXJldHVybiBlO2xldCB0PWUubGVuZ3RoO2lmKCFuZih0KSlyZXR1cm4gbnVsbDtjb25zdCBpPW5ldyBBcnJheSh0KTtmb3IoO3QtLSA+MDspaVt0XT1lW3RdO3JldHVybiBpfSxmb3JFYWNoRW50cnk6KGUsdCk9Pntjb25zdCBpPShlJiZlW1N5bWJvbC5pdGVyYXRvcl0pLmNhbGwoZSk7bGV0IG47Zm9yKDsobj1pLm5leHQoKSkmJiFuLmRvbmU7KXtjb25zdCBpPW4udmFsdWU7dC5jYWxsKGUsaVswXSxpWzFdKX19LG1hdGNoQWxsOihlLHQpPT57bGV0IGk7Y29uc3Qgbj1bXTtmb3IoO251bGwhPT0oaT1lLmV4ZWModCkpOyluLnB1c2goaSk7cmV0dXJuIG59LGlzSFRNTEZvcm06UmYsaGFzT3duUHJvcGVydHk6Q2YsaGFzT3duUHJvcDpDZixyZWR1Y2VEZXNjcmlwdG9yczp2ZixmcmVlemVNZXRob2RzOmU9Pnt2ZihlLCgodCxpKT0+e2lmKHRmKGUpJiYtMSE9PVtcImFyZ3VtZW50c1wiLFwiY2FsbGVyXCIsXCJjYWxsZWVcIl0uaW5kZXhPZihpKSlyZXR1cm4hMTtjb25zdCBuPWVbaV07dGYobikmJih0LmVudW1lcmFibGU9ITEsXCJ3cml0YWJsZVwiaW4gdD90LndyaXRhYmxlPSExOnQuc2V0fHwodC5zZXQ9KCk9Pnt0aHJvdyBFcnJvcihcIkNhbiBub3QgcmV3cml0ZSByZWFkLW9ubHkgbWV0aG9kICdcIitpK1wiJ1wiKX0pKX0pKX0sdG9PYmplY3RTZXQ6KGUsdCk9Pntjb25zdCBpPXt9LG49ZT0+e2UuZm9yRWFjaCgoZT0+e2lbZV09ITB9KSl9O3JldHVybiBRRShlKT9uKGUpOm4oU3RyaW5nKGUpLnNwbGl0KHQpKSxpfSx0b0NhbWVsQ2FzZTplPT5lLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvWy1fXFxzXShbYS16XFxkXSkoXFx3KikvZywoZnVuY3Rpb24oZSx0LGkpe3JldHVybiB0LnRvVXBwZXJDYXNlKCkraX0pKSxub29wOigpPT57fSx0b0Zpbml0ZU51bWJlcjooZSx0KT0+bnVsbCE9ZSYmTnVtYmVyLmlzRmluaXRlKGU9K2UpP2U6dCxmaW5kS2V5OmZmLGdsb2JhbDptZixpc0NvbnRleHREZWZpbmVkOlRmLEFMUEhBQkVUOmJmLGdlbmVyYXRlU3RyaW5nOmZ1bmN0aW9uKCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOjE2LHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOmJmLkFMUEhBX0RJR0lULGk9XCJcIjtjb25zdHtsZW5ndGg6bn09dDtmb3IoO2UtLTspaSs9dFtNYXRoLnJhbmRvbSgpKm58MF07cmV0dXJuIGl9LGlzU3BlY0NvbXBsaWFudEZvcm06ZnVuY3Rpb24oZSl7cmV0dXJuISEoZSYmdGYoZS5hcHBlbmQpJiZcIkZvcm1EYXRhXCI9PT1lW1N5bWJvbC50b1N0cmluZ1RhZ10mJmVbU3ltYm9sLml0ZXJhdG9yXSl9LHRvSlNPTk9iamVjdDplPT57Y29uc3QgdD1uZXcgQXJyYXkoMTApLGk9KGUsbik9PntpZihyZihlKSl7aWYodC5pbmRleE9mKGUpPj0wKXJldHVybjtpZighKFwidG9KU09OXCJpbiBlKSl7dFtuXT1lO2NvbnN0IHI9UUUoZSk/W106e307cmV0dXJuIEVmKGUsKChlLHQpPT57Y29uc3Qgbz1pKGUsbisxKTshWkUobykmJihyW3RdPW8pfSkpLHRbbl09dm9pZCAwLHJ9fXJldHVybiBlfTtyZXR1cm4gaShlLDApfSxpc0FzeW5jRm46d2YsaXNUaGVuYWJsZTplPT5lJiYocmYoZSl8fHRmKGUpKSYmdGYoZS50aGVuKSYmdGYoZS5jYXRjaCksc2V0SW1tZWRpYXRlOk9mLGFzYXA6a2Z9O2Z1bmN0aW9uIFVmKGUsdCxpLG4scil7RXJyb3IuY2FsbCh0aGlzKSxFcnJvci5jYXB0dXJlU3RhY2tUcmFjZT9FcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLHRoaXMuY29uc3RydWN0b3IpOnRoaXMuc3RhY2s9KG5ldyBFcnJvcikuc3RhY2ssdGhpcy5tZXNzYWdlPWUsdGhpcy5uYW1lPVwiQXhpb3NFcnJvclwiLHQmJih0aGlzLmNvZGU9dCksaSYmKHRoaXMuY29uZmlnPWkpLG4mJih0aGlzLnJlcXVlc3Q9biksciYmKHRoaXMucmVzcG9uc2U9cix0aGlzLnN0YXR1cz1yLnN0YXR1cz9yLnN0YXR1czpudWxsKX1NZi5pbmhlcml0cyhVZixFcnJvcix7dG9KU09OOmZ1bmN0aW9uKCl7cmV0dXJue21lc3NhZ2U6dGhpcy5tZXNzYWdlLG5hbWU6dGhpcy5uYW1lLGRlc2NyaXB0aW9uOnRoaXMuZGVzY3JpcHRpb24sbnVtYmVyOnRoaXMubnVtYmVyLGZpbGVOYW1lOnRoaXMuZmlsZU5hbWUsbGluZU51bWJlcjp0aGlzLmxpbmVOdW1iZXIsY29sdW1uTnVtYmVyOnRoaXMuY29sdW1uTnVtYmVyLHN0YWNrOnRoaXMuc3RhY2ssY29uZmlnOk1mLnRvSlNPTk9iamVjdCh0aGlzLmNvbmZpZyksY29kZTp0aGlzLmNvZGUsc3RhdHVzOnRoaXMuc3RhdHVzfX19KTtjb25zdCB4Zj1VZi5wcm90b3R5cGUsVmY9e307W1wiRVJSX0JBRF9PUFRJT05fVkFMVUVcIixcIkVSUl9CQURfT1BUSU9OXCIsXCJFQ09OTkFCT1JURURcIixcIkVUSU1FRE9VVFwiLFwiRVJSX05FVFdPUktcIixcIkVSUl9GUl9UT09fTUFOWV9SRURJUkVDVFNcIixcIkVSUl9ERVBSRUNBVEVEXCIsXCJFUlJfQkFEX1JFU1BPTlNFXCIsXCJFUlJfQkFEX1JFUVVFU1RcIixcIkVSUl9DQU5DRUxFRFwiLFwiRVJSX05PVF9TVVBQT1JUXCIsXCJFUlJfSU5WQUxJRF9VUkxcIl0uZm9yRWFjaCgoZT0+e1ZmW2VdPXt2YWx1ZTplfX0pKSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhVZixWZiksT2JqZWN0LmRlZmluZVByb3BlcnR5KHhmLFwiaXNBeGlvc0Vycm9yXCIse3ZhbHVlOiEwfSksVWYuZnJvbT0oZSx0LGksbixyLG8pPT57Y29uc3Qgcz1PYmplY3QuY3JlYXRlKHhmKTtyZXR1cm4gTWYudG9GbGF0T2JqZWN0KGUscywoZnVuY3Rpb24oZSl7cmV0dXJuIGUhPT1FcnJvci5wcm90b3R5cGV9KSwoZT0+XCJpc0F4aW9zRXJyb3JcIiE9PWUpKSxVZi5jYWxsKHMsZS5tZXNzYWdlLHQsaSxuLHIpLHMuY2F1c2U9ZSxzLm5hbWU9ZS5uYW1lLG8mJk9iamVjdC5hc3NpZ24ocyxvKSxzfTtmdW5jdGlvbiBGZihlKXtyZXR1cm4gTWYuaXNQbGFpbk9iamVjdChlKXx8TWYuaXNBcnJheShlKX1mdW5jdGlvbiBCZihlKXtyZXR1cm4gTWYuZW5kc1dpdGgoZSxcIltdXCIpP2Uuc2xpY2UoMCwtMik6ZX1mdW5jdGlvbiBqZihlLHQsaSl7cmV0dXJuIGU/ZS5jb25jYXQodCkubWFwKChmdW5jdGlvbihlLHQpe3JldHVybiBlPUJmKGUpLCFpJiZ0P1wiW1wiK2UrXCJdXCI6ZX0pKS5qb2luKGk/XCIuXCI6XCJcIik6dH1jb25zdCBHZj1NZi50b0ZsYXRPYmplY3QoTWYse30sbnVsbCwoZnVuY3Rpb24oZSl7cmV0dXJuL15pc1tBLVpdLy50ZXN0KGUpfSkpO2Z1bmN0aW9uIFdmKGUsdCxpKXtpZighTWYuaXNPYmplY3QoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcInRhcmdldCBtdXN0IGJlIGFuIG9iamVjdFwiKTt0PXR8fG5ldyBGb3JtRGF0YTtjb25zdCBuPShpPU1mLnRvRmxhdE9iamVjdChpLHttZXRhVG9rZW5zOiEwLGRvdHM6ITEsaW5kZXhlczohMX0sITEsKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIU1mLmlzVW5kZWZpbmVkKHRbZV0pfSkpKS5tZXRhVG9rZW5zLHI9aS52aXNpdG9yfHxkLG89aS5kb3RzLHM9aS5pbmRleGVzLGE9KGkuQmxvYnx8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIEJsb2ImJkJsb2IpJiZNZi5pc1NwZWNDb21wbGlhbnRGb3JtKHQpO2lmKCFNZi5pc0Z1bmN0aW9uKHIpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJ2aXNpdG9yIG11c3QgYmUgYSBmdW5jdGlvblwiKTtmdW5jdGlvbiBjKGUpe2lmKG51bGw9PT1lKXJldHVyblwiXCI7aWYoTWYuaXNEYXRlKGUpKXJldHVybiBlLnRvSVNPU3RyaW5nKCk7aWYoIWEmJk1mLmlzQmxvYihlKSl0aHJvdyBuZXcgVWYoXCJCbG9iIGlzIG5vdCBzdXBwb3J0ZWQuIFVzZSBhIEJ1ZmZlciBpbnN0ZWFkLlwiKTtyZXR1cm4gTWYuaXNBcnJheUJ1ZmZlcihlKXx8TWYuaXNUeXBlZEFycmF5KGUpP2EmJlwiZnVuY3Rpb25cIj09dHlwZW9mIEJsb2I/bmV3IEJsb2IoW2VdKTpCdWZmZXIuZnJvbShlKTplfWZ1bmN0aW9uIGQoZSxpLHIpe2xldCBhPWU7aWYoZSYmIXImJlwib2JqZWN0XCI9PXR5cGVvZiBlKWlmKE1mLmVuZHNXaXRoKGksXCJ7fVwiKSlpPW4/aTppLnNsaWNlKDAsLTIpLGU9SlNPTi5zdHJpbmdpZnkoZSk7ZWxzZSBpZihNZi5pc0FycmF5KGUpJiZmdW5jdGlvbihlKXtyZXR1cm4gTWYuaXNBcnJheShlKSYmIWUuc29tZShGZil9KGUpfHwoTWYuaXNGaWxlTGlzdChlKXx8TWYuZW5kc1dpdGgoaSxcIltdXCIpKSYmKGE9TWYudG9BcnJheShlKSkpcmV0dXJuIGk9QmYoaSksYS5mb3JFYWNoKChmdW5jdGlvbihlLG4peyFNZi5pc1VuZGVmaW5lZChlKSYmbnVsbCE9PWUmJnQuYXBwZW5kKCEwPT09cz9qZihbaV0sbixvKTpudWxsPT09cz9pOmkrXCJbXVwiLGMoZSkpfSkpLCExO3JldHVybiEhRmYoZSl8fCh0LmFwcGVuZChqZihyLGksbyksYyhlKSksITEpfWNvbnN0IGw9W10sdT1PYmplY3QuYXNzaWduKEdmLHtkZWZhdWx0VmlzaXRvcjpkLGNvbnZlcnRWYWx1ZTpjLGlzVmlzaXRhYmxlOkZmfSk7aWYoIU1mLmlzT2JqZWN0KGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJkYXRhIG11c3QgYmUgYW4gb2JqZWN0XCIpO3JldHVybiBmdW5jdGlvbiBlKGksbil7aWYoIU1mLmlzVW5kZWZpbmVkKGkpKXtpZigtMSE9PWwuaW5kZXhPZihpKSl0aHJvdyBFcnJvcihcIkNpcmN1bGFyIHJlZmVyZW5jZSBkZXRlY3RlZCBpbiBcIituLmpvaW4oXCIuXCIpKTtsLnB1c2goaSksTWYuZm9yRWFjaChpLChmdW5jdGlvbihpLG8peyEwPT09KCEoTWYuaXNVbmRlZmluZWQoaSl8fG51bGw9PT1pKSYmci5jYWxsKHQsaSxNZi5pc1N0cmluZyhvKT9qcChvKS5jYWxsKG8pOm8sbix1KSkmJmUoaSxuP24uY29uY2F0KG8pOltvXSl9KSksbC5wb3AoKX19KGUpLHR9ZnVuY3Rpb24gSGYoZSl7Y29uc3QgdD17XCIhXCI6XCIlMjFcIixcIidcIjpcIiUyN1wiLFwiKFwiOlwiJTI4XCIsXCIpXCI6XCIlMjlcIixcIn5cIjpcIiU3RVwiLFwiJTIwXCI6XCIrXCIsXCIlMDBcIjpcIlxcMFwifTtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KGUpLnJlcGxhY2UoL1shJygpfl18JTIwfCUwMC9nLChmdW5jdGlvbihlKXtyZXR1cm4gdFtlXX0pKX1mdW5jdGlvbiBLZihlLHQpe3RoaXMuX3BhaXJzPVtdLGUmJldmKGUsdGhpcyx0KX1jb25zdCBZZj1LZi5wcm90b3R5cGU7ZnVuY3Rpb24gcWYoZSl7cmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChlKS5yZXBsYWNlKC8lM0EvZ2ksXCI6XCIpLnJlcGxhY2UoLyUyNC9nLFwiJFwiKS5yZXBsYWNlKC8lMkMvZ2ksXCIsXCIpLnJlcGxhY2UoLyUyMC9nLFwiK1wiKS5yZXBsYWNlKC8lNUIvZ2ksXCJbXCIpLnJlcGxhY2UoLyU1RC9naSxcIl1cIil9ZnVuY3Rpb24gemYoZSx0LGkpe2lmKCF0KXJldHVybiBlO2NvbnN0IG49aSYmaS5lbmNvZGV8fHFmLHI9aSYmaS5zZXJpYWxpemU7bGV0IG87aWYobz1yP3IodCxpKTpNZi5pc1VSTFNlYXJjaFBhcmFtcyh0KT90LnRvU3RyaW5nKCk6bmV3IEtmKHQsaSkudG9TdHJpbmcobiksbyl7Y29uc3QgdD1lLmluZGV4T2YoXCIjXCIpOy0xIT09dCYmKGU9ZS5zbGljZSgwLHQpKSxlKz0oLTE9PT1lLmluZGV4T2YoXCI/XCIpP1wiP1wiOlwiJlwiKStvfXJldHVybiBlfVlmLmFwcGVuZD1mdW5jdGlvbihlLHQpe3RoaXMuX3BhaXJzLnB1c2goW2UsdF0pfSxZZi50b1N0cmluZz1mdW5jdGlvbihlKXtjb25zdCB0PWU/ZnVuY3Rpb24odCl7cmV0dXJuIGUuY2FsbCh0aGlzLHQsSGYpfTpIZjtyZXR1cm4gdGhpcy5fcGFpcnMubWFwKChmdW5jdGlvbihlKXtyZXR1cm4gdChlWzBdKStcIj1cIit0KGVbMV0pfSksXCJcIikuam9pbihcIiZcIil9O3ZhciBKZj1jbGFzc3tjb25zdHJ1Y3Rvcigpe3RoaXMuaGFuZGxlcnM9W119dXNlKGUsdCxpKXtyZXR1cm4gdGhpcy5oYW5kbGVycy5wdXNoKHtmdWxmaWxsZWQ6ZSxyZWplY3RlZDp0LHN5bmNocm9ub3VzOiEhaSYmaS5zeW5jaHJvbm91cyxydW5XaGVuOmk/aS5ydW5XaGVuOm51bGx9KSx0aGlzLmhhbmRsZXJzLmxlbmd0aC0xfWVqZWN0KGUpe3RoaXMuaGFuZGxlcnNbZV0mJih0aGlzLmhhbmRsZXJzW2VdPW51bGwpfWNsZWFyKCl7dGhpcy5oYW5kbGVycyYmKHRoaXMuaGFuZGxlcnM9W10pfWZvckVhY2goZSl7TWYuZm9yRWFjaCh0aGlzLmhhbmRsZXJzLChmdW5jdGlvbih0KXtudWxsIT09dCYmZSh0KX0pKX19LFhmPXtzaWxlbnRKU09OUGFyc2luZzohMCxmb3JjZWRKU09OUGFyc2luZzohMCxjbGFyaWZ5VGltZW91dEVycm9yOiExfSxRZj17ZXhwb3J0czp7fX0sWmY9d2ksJGY9TixlbT1RdC5mO1pmKHt0YXJnZXQ6XCJPYmplY3RcIixzdGF0OiEwLGZvcmNlZDpPYmplY3QuZGVmaW5lUHJvcGVydHkhPT1lbSxzaGFtOiEkZn0se2RlZmluZVByb3BlcnR5OmVtfSk7dmFyIHRtPWllLk9iamVjdCxpbT1RZi5leHBvcnRzPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gdG0uZGVmaW5lUHJvcGVydHkoZSx0LGkpfTt0bS5kZWZpbmVQcm9wZXJ0eS5zaGFtJiYoaW0uc2hhbT0hMCk7dmFyIG5tPWkoUWYuZXhwb3J0cykscm09UixvbT1BcnJheS5pc0FycmF5fHxmdW5jdGlvbihlKXtyZXR1cm5cIkFycmF5XCI9PXJtKGUpfSxzbT1UeXBlRXJyb3IsYW09b20sY209amMsZG09dGUsbG09aHQoXCJzcGVjaWVzXCIpLHVtPUFycmF5LGhtPWZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiBhbShlKSYmKHQ9ZS5jb25zdHJ1Y3RvciwoY20odCkmJih0PT09dW18fGFtKHQucHJvdG90eXBlKSl8fGRtKHQpJiZudWxsPT09KHQ9dFtsbV0pKSYmKHQ9dm9pZCAwKSksdm9pZCAwPT09dD91bTp0fSxwbT1mdW5jdGlvbihlLHQpe3JldHVybiBuZXcoaG0oZSkpKDA9PT10PzA6dCl9LF9tPW4sRW09RWUsZm09aHQoXCJzcGVjaWVzXCIpLG1tPWZ1bmN0aW9uKGUpe3JldHVybiBFbT49NTF8fCFfbSgoZnVuY3Rpb24oKXt2YXIgdD1bXTtyZXR1cm4odC5jb25zdHJ1Y3Rvcj17fSlbZm1dPWZ1bmN0aW9uKCl7cmV0dXJue2ZvbzoxfX0sMSE9PXRbZV0oQm9vbGVhbikuZm9vfSkpfSxUbT13aSxTbT1uLGdtPW9tLFJtPXRlLENtPUplLEltPUdpLHZtPWZ1bmN0aW9uKGUpe2lmKGU+OTAwNzE5OTI1NDc0MDk5MSl0aHJvdyBzbShcIk1heGltdW0gYWxsb3dlZCBpbmRleCBleGNlZWRlZFwiKTtyZXR1cm4gZX0seW09RV8sQW09cG0sYm09bW0sd209RWUsT209aHQoXCJpc0NvbmNhdFNwcmVhZGFibGVcIiksTm09d20+PTUxfHwhU20oKGZ1bmN0aW9uKCl7dmFyIGU9W107cmV0dXJuIGVbT21dPSExLGUuY29uY2F0KClbMF0hPT1lfSkpLERtPWZ1bmN0aW9uKGUpe2lmKCFSbShlKSlyZXR1cm4hMTt2YXIgdD1lW09tXTtyZXR1cm4gdm9pZCAwIT09dD8hIXQ6Z20oZSl9O1RtKHt0YXJnZXQ6XCJBcnJheVwiLHByb3RvOiEwLGFyaXR5OjEsZm9yY2VkOiFObXx8IWJtKFwiY29uY2F0XCIpfSx7Y29uY2F0OmZ1bmN0aW9uKGUpe3ZhciB0LGksbixyLG8scz1DbSh0aGlzKSxhPUFtKHMsMCksYz0wO2Zvcih0PS0xLG49YXJndW1lbnRzLmxlbmd0aDt0PG47dCsrKWlmKERtKG89LTE9PT10P3M6YXJndW1lbnRzW3RdKSlmb3Iocj1JbShvKSx2bShjK3IpLGk9MDtpPHI7aSsrLGMrKylpIGluIG8mJnltKGEsYyxvW2ldKTtlbHNlIHZtKGMrMSkseW0oYSxjKyssbyk7cmV0dXJuIGEubGVuZ3RoPWMsYX19KTt2YXIgUG09e30sTG09UixrbT1aLE1tPU9yLmYsVW09Ul8seG09XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyYmd2luZG93JiZPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcz9PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh3aW5kb3cpOltdO1BtLmY9ZnVuY3Rpb24oZSl7cmV0dXJuIHhtJiZcIldpbmRvd1wiPT1MbShlKT9mdW5jdGlvbihlKXt0cnl7cmV0dXJuIE1tKGUpfWNhdGNoKGUpe3JldHVybiBVbSh4bSl9fShlKTpNbShrbShlKSl9O3ZhciBWbT17fSxGbT1odDtWbS5mPUZtO3ZhciBCbT1pZSxqbT1aZSxHbT1WbSxXbT1RdC5mLEhtPWZ1bmN0aW9uKGUpe3ZhciB0PUJtLlN5bWJvbHx8KEJtLlN5bWJvbD17fSk7am0odCxlKXx8V20odCxlLHt2YWx1ZTpHbS5mKGUpfSl9LEttPUwsWW09YWUscW09aHQsem09aGEsSm09ZnVuY3Rpb24oKXt2YXIgZT1ZbShcIlN5bWJvbFwiKSx0PWUmJmUucHJvdG90eXBlLGk9dCYmdC52YWx1ZU9mLG49cW0oXCJ0b1ByaW1pdGl2ZVwiKTt0JiYhdFtuXSYmem0odCxuLChmdW5jdGlvbihlKXtyZXR1cm4gS20oaSx0aGlzKX0pLHthcml0eToxfSl9LFhtPVh0LFFtPUssWm09SmUsJG09R2ksZVQ9cG0sdFQ9ZChbXS5wdXNoKSxpVD1mdW5jdGlvbihlKXt2YXIgdD0xPT1lLGk9Mj09ZSxuPTM9PWUscj00PT1lLG89Nj09ZSxzPTc9PWUsYT01PT1lfHxvO3JldHVybiBmdW5jdGlvbihjLGQsbCx1KXtmb3IodmFyIGgscCxfPVptKGMpLEU9UW0oXyksZj1YbShkLGwpLG09JG0oRSksVD0wLFM9dXx8ZVQsZz10P1MoYyxtKTppfHxzP1MoYywwKTp2b2lkIDA7bT5UO1QrKylpZigoYXx8VCBpbiBFKSYmKHA9ZihoPUVbVF0sVCxfKSxlKSlpZih0KWdbVF09cDtlbHNlIGlmKHApc3dpdGNoKGUpe2Nhc2UgMzpyZXR1cm4hMDtjYXNlIDU6cmV0dXJuIGg7Y2FzZSA2OnJldHVybiBUO2Nhc2UgMjp0VChnLGgpfWVsc2Ugc3dpdGNoKGUpe2Nhc2UgNDpyZXR1cm4hMTtjYXNlIDc6dFQoZyxoKX1yZXR1cm4gbz8tMTpufHxyP3I6Z319LG5UPXtmb3JFYWNoOmlUKDApLG1hcDppVCgxKSxmaWx0ZXI6aVQoMiksc29tZTppVCgzKSxldmVyeTppVCg0KSxmaW5kOmlUKDUpLGZpbmRJbmRleDppVCg2KSxmaWx0ZXJSZWplY3Q6aVQoNyl9LHJUPXdpLG9UPWgsc1Q9TCxhVD1kLGNUPU4sZFQ9U2UsbFQ9bix1VD1aZSxoVD1sLHBUPWlpLF9UPVosRVQ9Q3QsZlQ9Zm4sbVQ9QixUVD1JbyxTVD1lbyxnVD1PcixSVD1QbSxDVD1CcixJVD1PLHZUPVF0LHlUPVFyLEFUPWssYlQ9aGEsd1Q9aGMsT1Q9WWUsTlQ9TnIsRFQ9bnQsUFQ9aHQsTFQ9Vm0sa1Q9SG0sTVQ9Sm0sVVQ9RGEseFQ9cmEsVlQ9blQuZm9yRWFjaCxGVD1scihcImhpZGRlblwiKSxCVD1cIlN5bWJvbFwiLGpUPVwicHJvdG90eXBlXCIsR1Q9eFQuc2V0LFdUPXhULmdldHRlckZvcihCVCksSFQ9T2JqZWN0W2pUXSxLVD1vVC5TeW1ib2wsWVQ9S1QmJktUW2pUXSxxVD1vVC5UeXBlRXJyb3IselQ9b1QuUU9iamVjdCxKVD1JVC5mLFhUPXZULmYsUVQ9UlQuZixaVD1BVC5mLCRUPWFUKFtdLnB1c2gpLGVTPU9UKFwic3ltYm9sc1wiKSx0Uz1PVChcIm9wLXN5bWJvbHNcIiksaVM9T1QoXCJ3a3NcIiksblM9IXpUfHwhelRbalRdfHwhelRbalRdLmZpbmRDaGlsZCxyUz1jVCYmbFQoKGZ1bmN0aW9uKCl7cmV0dXJuIDchPVRUKFhUKHt9LFwiYVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gWFQodGhpcyxcImFcIix7dmFsdWU6N30pLmF9fSkpLmF9KSk/ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPUpUKEhULHQpO24mJmRlbGV0ZSBIVFt0XSxYVChlLHQsaSksbiYmZSE9PUhUJiZYVChIVCx0LG4pfTpYVCxvUz1mdW5jdGlvbihlLHQpe3ZhciBpPWVTW2VdPVRUKFlUKTtyZXR1cm4gR1QoaSx7dHlwZTpCVCx0YWc6ZSxkZXNjcmlwdGlvbjp0fSksY1R8fChpLmRlc2NyaXB0aW9uPXQpLGl9LHNTPWZ1bmN0aW9uKGUsdCxpKXtlPT09SFQmJnNTKHRTLHQsaSkscFQoZSk7dmFyIG49RVQodCk7cmV0dXJuIHBUKGkpLHVUKGVTLG4pPyhpLmVudW1lcmFibGU/KHVUKGUsRlQpJiZlW0ZUXVtuXSYmKGVbRlRdW25dPSExKSxpPVRUKGkse2VudW1lcmFibGU6bVQoMCwhMSl9KSk6KHVUKGUsRlQpfHxYVChlLEZULG1UKDEse30pKSxlW0ZUXVtuXT0hMCksclMoZSxuLGkpKTpYVChlLG4saSl9LGFTPWZ1bmN0aW9uKGUsdCl7cFQoZSk7dmFyIGk9X1QodCksbj1TVChpKS5jb25jYXQodVMoaSkpO3JldHVybiBWVChuLChmdW5jdGlvbih0KXtjVCYmIXNUKGNTLGksdCl8fHNTKGUsdCxpW3RdKX0pKSxlfSxjUz1mdW5jdGlvbihlKXt2YXIgdD1FVChlKSxpPXNUKFpULHRoaXMsdCk7cmV0dXJuISh0aGlzPT09SFQmJnVUKGVTLHQpJiYhdVQodFMsdCkpJiYoIShpfHwhdVQodGhpcyx0KXx8IXVUKGVTLHQpfHx1VCh0aGlzLEZUKSYmdGhpc1tGVF1bdF0pfHxpKX0sZFM9ZnVuY3Rpb24oZSx0KXt2YXIgaT1fVChlKSxuPUVUKHQpO2lmKGkhPT1IVHx8IXVUKGVTLG4pfHx1VCh0UyxuKSl7dmFyIHI9SlQoaSxuKTtyZXR1cm4hcnx8IXVUKGVTLG4pfHx1VChpLEZUKSYmaVtGVF1bbl18fChyLmVudW1lcmFibGU9ITApLHJ9fSxsUz1mdW5jdGlvbihlKXt2YXIgdD1RVChfVChlKSksaT1bXTtyZXR1cm4gVlQodCwoZnVuY3Rpb24oZSl7dVQoZVMsZSl8fHVUKE5ULGUpfHwkVChpLGUpfSkpLGl9LHVTPWZ1bmN0aW9uKGUpe3ZhciB0PWU9PT1IVCxpPVFUKHQ/dFM6X1QoZSkpLG49W107cmV0dXJuIFZUKGksKGZ1bmN0aW9uKGUpeyF1VChlUyxlKXx8dCYmIXVUKEhULGUpfHwkVChuLGVTW2VdKX0pKSxufTtkVHx8KGJUKFlUPShLVD1mdW5jdGlvbigpe2lmKGhUKFlULHRoaXMpKXRocm93IHFUKFwiU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yXCIpO3ZhciBlPWFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9mVChhcmd1bWVudHNbMF0pOnZvaWQgMCx0PURUKGUpLGk9ZnVuY3Rpb24oZSl7dGhpcz09PUhUJiZzVChpLHRTLGUpLHVUKHRoaXMsRlQpJiZ1VCh0aGlzW0ZUXSx0KSYmKHRoaXNbRlRdW3RdPSExKSxyUyh0aGlzLHQsbVQoMSxlKSl9O3JldHVybiBjVCYmblMmJnJTKEhULHQse2NvbmZpZ3VyYWJsZTohMCxzZXQ6aX0pLG9TKHQsZSl9KVtqVF0sXCJ0b1N0cmluZ1wiLChmdW5jdGlvbigpe3JldHVybiBXVCh0aGlzKS50YWd9KSksYlQoS1QsXCJ3aXRob3V0U2V0dGVyXCIsKGZ1bmN0aW9uKGUpe3JldHVybiBvUyhEVChlKSxlKX0pKSxBVC5mPWNTLHZULmY9c1MseVQuZj1hUyxJVC5mPWRTLGdULmY9UlQuZj1sUyxDVC5mPXVTLExULmY9ZnVuY3Rpb24oZSl7cmV0dXJuIG9TKFBUKGUpLGUpfSxjVCYmd1QoWVQsXCJkZXNjcmlwdGlvblwiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFdUKHRoaXMpLmRlc2NyaXB0aW9ufX0pKSxyVCh7Z2xvYmFsOiEwLGNvbnN0cnVjdG9yOiEwLHdyYXA6ITAsZm9yY2VkOiFkVCxzaGFtOiFkVH0se1N5bWJvbDpLVH0pLFZUKFNUKGlTKSwoZnVuY3Rpb24oZSl7a1QoZSl9KSksclQoe3RhcmdldDpCVCxzdGF0OiEwLGZvcmNlZDohZFR9LHt1c2VTZXR0ZXI6ZnVuY3Rpb24oKXtuUz0hMH0sdXNlU2ltcGxlOmZ1bmN0aW9uKCl7blM9ITF9fSksclQoe3RhcmdldDpcIk9iamVjdFwiLHN0YXQ6ITAsZm9yY2VkOiFkVCxzaGFtOiFjVH0se2NyZWF0ZTpmdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10P1RUKGUpOmFTKFRUKGUpLHQpfSxkZWZpbmVQcm9wZXJ0eTpzUyxkZWZpbmVQcm9wZXJ0aWVzOmFTLGdldE93blByb3BlcnR5RGVzY3JpcHRvcjpkU30pLHJUKHt0YXJnZXQ6XCJPYmplY3RcIixzdGF0OiEwLGZvcmNlZDohZFR9LHtnZXRPd25Qcm9wZXJ0eU5hbWVzOmxTfSksTVQoKSxVVChLVCxCVCksTlRbRlRdPSEwO3ZhciBoUz1TZSYmISFTeW1ib2wuZm9yJiYhIVN5bWJvbC5rZXlGb3IscFM9d2ksX1M9YWUsRVM9WmUsZlM9Zm4sbVM9WWUsVFM9aFMsU1M9bVMoXCJzdHJpbmctdG8tc3ltYm9sLXJlZ2lzdHJ5XCIpLGdTPW1TKFwic3ltYm9sLXRvLXN0cmluZy1yZWdpc3RyeVwiKTtwUyh7dGFyZ2V0OlwiU3ltYm9sXCIsc3RhdDohMCxmb3JjZWQ6IVRTfSx7Zm9yOmZ1bmN0aW9uKGUpe3ZhciB0PWZTKGUpO2lmKEVTKFNTLHQpKXJldHVybiBTU1t0XTt2YXIgaT1fUyhcIlN5bWJvbFwiKSh0KTtyZXR1cm4gU1NbdF09aSxnU1tpXT10LGl9fSk7dmFyIFJTPXdpLENTPVplLElTPXllLHZTPWJlLHlTPWhTLEFTPVllKFwic3ltYm9sLXRvLXN0cmluZy1yZWdpc3RyeVwiKTtSUyh7dGFyZ2V0OlwiU3ltYm9sXCIsc3RhdDohMCxmb3JjZWQ6IXlTfSx7a2V5Rm9yOmZ1bmN0aW9uKGUpe2lmKCFJUyhlKSl0aHJvdyBUeXBlRXJyb3IodlMoZSkrXCIgaXMgbm90IGEgc3ltYm9sXCIpO2lmKENTKEFTLGUpKXJldHVybiBBU1tlXX19KTt2YXIgYlM9b20sd1M9dyxPUz1SLE5TPWZuLERTPWQoW10ucHVzaCksUFM9d2ksTFM9YWUsa1M9bSxNUz1MLFVTPWQseFM9bixWUz13LEZTPXllLEJTPVhjLGpTPWZ1bmN0aW9uKGUpe2lmKHdTKGUpKXJldHVybiBlO2lmKGJTKGUpKXtmb3IodmFyIHQ9ZS5sZW5ndGgsaT1bXSxuPTA7bjx0O24rKyl7dmFyIHI9ZVtuXTtcInN0cmluZ1wiPT10eXBlb2Ygcj9EUyhpLHIpOlwibnVtYmVyXCIhPXR5cGVvZiByJiZcIk51bWJlclwiIT1PUyhyKSYmXCJTdHJpbmdcIiE9T1Mocil8fERTKGksTlMocikpfXZhciBvPWkubGVuZ3RoLHM9ITA7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7aWYocylyZXR1cm4gcz0hMSx0O2lmKGJTKHRoaXMpKXJldHVybiB0O2Zvcih2YXIgbj0wO248bztuKyspaWYoaVtuXT09PWUpcmV0dXJuIHR9fX0sR1M9U2UsV1M9U3RyaW5nLEhTPUxTKFwiSlNPTlwiLFwic3RyaW5naWZ5XCIpLEtTPVVTKC8uLy5leGVjKSxZUz1VUyhcIlwiLmNoYXJBdCkscVM9VVMoXCJcIi5jaGFyQ29kZUF0KSx6Uz1VUyhcIlwiLnJlcGxhY2UpLEpTPVVTKDEuLnRvU3RyaW5nKSxYUz0vW1xcdUQ4MDAtXFx1REZGRl0vZyxRUz0vXltcXHVEODAwLVxcdURCRkZdJC8sWlM9L15bXFx1REMwMC1cXHVERkZGXSQvLCRTPSFHU3x8eFMoKGZ1bmN0aW9uKCl7dmFyIGU9TFMoXCJTeW1ib2xcIikoKTtyZXR1cm5cIltudWxsXVwiIT1IUyhbZV0pfHxcInt9XCIhPUhTKHthOmV9KXx8XCJ7fVwiIT1IUyhPYmplY3QoZSkpfSkpLGVnPXhTKChmdW5jdGlvbigpe3JldHVybidcIlxcXFx1ZGYwNlxcXFx1ZDgzNFwiJyE9PUhTKFwiXFx1ZGYwNlxcdWQ4MzRcIil8fCdcIlxcXFx1ZGVhZFwiJyE9PUhTKFwiXFx1ZGVhZFwiKX0pKSx0Zz1mdW5jdGlvbihlLHQpe3ZhciBpPUJTKGFyZ3VtZW50cyksbj1qUyh0KTtpZihWUyhuKXx8dm9pZCAwIT09ZSYmIUZTKGUpKXJldHVybiBpWzFdPWZ1bmN0aW9uKGUsdCl7aWYoVlMobikmJih0PU1TKG4sdGhpcyxXUyhlKSx0KSksIUZTKHQpKXJldHVybiB0fSxrUyhIUyxudWxsLGkpfSxpZz1mdW5jdGlvbihlLHQsaSl7dmFyIG49WVMoaSx0LTEpLHI9WVMoaSx0KzEpO3JldHVybiBLUyhRUyxlKSYmIUtTKFpTLHIpfHxLUyhaUyxlKSYmIUtTKFFTLG4pP1wiXFxcXHVcIitKUyhxUyhlLDApLDE2KTplfTtIUyYmUFMoe3RhcmdldDpcIkpTT05cIixzdGF0OiEwLGFyaXR5OjMsZm9yY2VkOiRTfHxlZ30se3N0cmluZ2lmeTpmdW5jdGlvbihlLHQsaSl7dmFyIG49QlMoYXJndW1lbnRzKSxyPWtTKCRTP3RnOkhTLG51bGwsbik7cmV0dXJuIGVnJiZcInN0cmluZ1wiPT10eXBlb2Ygcj96UyhyLFhTLGlnKTpyfX0pO3ZhciBuZz1CcixyZz1KZTt3aSh7dGFyZ2V0OlwiT2JqZWN0XCIsc3RhdDohMCxmb3JjZWQ6IVNlfHxuKChmdW5jdGlvbigpe25nLmYoMSl9KSl9LHtnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6ZnVuY3Rpb24oZSl7dmFyIHQ9bmcuZjtyZXR1cm4gdD90KHJnKGUpKTpbXX19KSxIbShcImFzeW5jSXRlcmF0b3JcIiksSG0oXCJoYXNJbnN0YW5jZVwiKSxIbShcImlzQ29uY2F0U3ByZWFkYWJsZVwiKSxIbShcIml0ZXJhdG9yXCIpLEhtKFwibWF0Y2hcIiksSG0oXCJtYXRjaEFsbFwiKSxIbShcInJlcGxhY2VcIiksSG0oXCJzZWFyY2hcIiksSG0oXCJzcGVjaWVzXCIpLEhtKFwic3BsaXRcIik7dmFyIG9nPUptO0htKFwidG9QcmltaXRpdmVcIiksb2coKTt2YXIgc2c9YWUsYWc9RGE7SG0oXCJ0b1N0cmluZ1RhZ1wiKSxhZyhzZyhcIlN5bWJvbFwiKSxcIlN5bWJvbFwiKSxIbShcInVuc2NvcGFibGVzXCIpLERhKGguSlNPTixcIkpTT05cIiwhMCk7dmFyIGNnPWllLlN5bWJvbCxkZz1odCxsZz1RdC5mLHVnPWRnKFwibWV0YWRhdGFcIiksaGc9RnVuY3Rpb24ucHJvdG90eXBlO3ZvaWQgMD09PWhnW3VnXSYmbGcoaGcsdWcse3ZhbHVlOm51bGx9KSxIbShcImRpc3Bvc2VcIiksSG0oXCJtZXRhZGF0YVwiKTt2YXIgcGc9Y2c7SG0oXCJhc3luY0Rpc3Bvc2VcIik7dmFyIF9nPWQsRWc9YWUoXCJTeW1ib2xcIiksZmc9RWcua2V5Rm9yLG1nPV9nKEVnLnByb3RvdHlwZS52YWx1ZU9mKSxUZz1FZy5pc1JlZ2lzdGVyZWRTeW1ib2x8fGZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4gdm9pZCAwIT09ZmcobWcoZSkpfWNhdGNoKGUpe3JldHVybiExfX07d2koe3RhcmdldDpcIlN5bWJvbFwiLHN0YXQ6ITB9LHtpc1JlZ2lzdGVyZWRTeW1ib2w6VGd9KTtmb3IodmFyIFNnPVllLGdnPWFlLFJnPWQsQ2c9eWUsSWc9aHQsdmc9Z2coXCJTeW1ib2xcIikseWc9dmcuaXNXZWxsS25vd25TeW1ib2wsQWc9Z2coXCJPYmplY3RcIixcImdldE93blByb3BlcnR5TmFtZXNcIiksYmc9UmcodmcucHJvdG90eXBlLnZhbHVlT2YpLHdnPVNnKFwid2tzXCIpLE9nPTAsTmc9QWcodmcpLERnPU5nLmxlbmd0aDtPZzxEZztPZysrKXRyeXt2YXIgUGc9TmdbT2ddO0NnKHZnW1BnXSkmJklnKFBnKX1jYXRjaChlKXt9dmFyIExnPWZ1bmN0aW9uKGUpe2lmKHlnJiZ5ZyhlKSlyZXR1cm4hMDt0cnl7Zm9yKHZhciB0PWJnKGUpLGk9MCxuPUFnKHdnKSxyPW4ubGVuZ3RoO2k8cjtpKyspaWYod2dbbltpXV09PXQpcmV0dXJuITB9Y2F0Y2goZSl7fXJldHVybiExfTt3aSh7dGFyZ2V0OlwiU3ltYm9sXCIsc3RhdDohMCxmb3JjZWQ6ITB9LHtpc1dlbGxLbm93blN5bWJvbDpMZ30pLEhtKFwibWF0Y2hlclwiKSxIbShcIm9ic2VydmFibGVcIiksd2koe3RhcmdldDpcIlN5bWJvbFwiLHN0YXQ6ITAsbmFtZTpcImlzUmVnaXN0ZXJlZFN5bWJvbFwifSx7aXNSZWdpc3RlcmVkOlRnfSksd2koe3RhcmdldDpcIlN5bWJvbFwiLHN0YXQ6ITAsbmFtZTpcImlzV2VsbEtub3duU3ltYm9sXCIsZm9yY2VkOiEwfSx7aXNXZWxsS25vd246TGd9KSxIbShcIm1ldGFkYXRhS2V5XCIpLEhtKFwicGF0dGVybk1hdGNoXCIpLEhtKFwicmVwbGFjZUFsbFwiKTt2YXIga2c9aShwZyksTWc9aShWbS5mKFwiaXRlcmF0b3JcIikpO2Z1bmN0aW9uIFVnKGUpe3JldHVybiBVZz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBrZyYmXCJzeW1ib2xcIj09dHlwZW9mIE1nP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGtnJiZlLmNvbnN0cnVjdG9yPT09a2cmJmUhPT1rZy5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0sVWcoZSl9dmFyIHhnPWkoVm0uZihcInRvUHJpbWl0aXZlXCIpKTtmdW5jdGlvbiBWZyhlKXt2YXIgdD1mdW5jdGlvbihlLHQpe2lmKFwib2JqZWN0XCIhPT1VZyhlKXx8bnVsbD09PWUpcmV0dXJuIGU7dmFyIGk9ZVt4Z107aWYodm9pZCAwIT09aSl7dmFyIG49aS5jYWxsKGUsdHx8XCJkZWZhdWx0XCIpO2lmKFwib2JqZWN0XCIhPT1VZyhuKSlyZXR1cm4gbjt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIil9cmV0dXJuKFwic3RyaW5nXCI9PT10P1N0cmluZzpOdW1iZXIpKGUpfShlLFwic3RyaW5nXCIpO3JldHVyblwic3ltYm9sXCI9PT1VZyh0KT90OlN0cmluZyh0KX1mdW5jdGlvbiBGZyhlLHQsaSl7cmV0dXJuKHQ9VmcodCkpaW4gZT9ubShlLHQse3ZhbHVlOmksZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTplW3RdPWksZX12YXIgQmc9bixqZz1odChcIml0ZXJhdG9yXCIpLEdnPSFCZygoZnVuY3Rpb24oKXt2YXIgZT1uZXcgVVJMKFwiYj9hPTEmYj0yJmM9M1wiLFwiaHR0cDovL2FcIiksdD1lLnNlYXJjaFBhcmFtcyxpPW5ldyBVUkxTZWFyY2hQYXJhbXMoXCJhPTEmYT0yXCIpLG49XCJcIjtyZXR1cm4gZS5wYXRobmFtZT1cImMlMjBkXCIsdC5mb3JFYWNoKChmdW5jdGlvbihlLGkpe3QuZGVsZXRlKFwiYlwiKSxuKz1pK2V9KSksaS5kZWxldGUoXCJhXCIsMiksIWUudG9KU09OfHwhaS5oYXMoXCJhXCIsMSl8fGkuaGFzKFwiYVwiLDIpfHwhdC5zaXplJiZ0cnVlfHwhdC5zb3J0fHxcImh0dHA6Ly9hL2MlMjBkP2E9MSZjPTNcIiE9PWUuaHJlZnx8XCIzXCIhPT10LmdldChcImNcIil8fFwiYT0xXCIhPT1TdHJpbmcobmV3IFVSTFNlYXJjaFBhcmFtcyhcIj9hPTFcIikpfHwhdFtqZ118fFwiYVwiIT09bmV3IFVSTChcImh0dHBzOi8vYUBiXCIpLnVzZXJuYW1lfHxcImJcIiE9PW5ldyBVUkxTZWFyY2hQYXJhbXMobmV3IFVSTFNlYXJjaFBhcmFtcyhcImE9YlwiKSkuZ2V0KFwiYVwiKXx8XCJ4bi0tZTFheWJjXCIhPT1uZXcgVVJMKFwiaHR0cDovL9GC0LXRgdGCXCIpLmhvc3R8fFwiIyVEMCVCMVwiIT09bmV3IFVSTChcImh0dHA6Ly9hI9CxXCIpLmhhc2h8fFwiYTFjM1wiIT09bnx8XCJ4XCIhPT1uZXcgVVJMKFwiaHR0cDovL3hcIix2b2lkIDApLmhvc3R9KSksV2c9aGEsSGc9d2ksS2c9aCxZZz1MLHFnPWQsemc9TixKZz1HZyxYZz1oYSxRZz1oYyxaZz1mdW5jdGlvbihlLHQsaSl7Zm9yKHZhciBuIGluIHQpaSYmaS51bnNhZmUmJmVbbl0/ZVtuXT10W25dOldnKGUsbix0W25dLGkpO3JldHVybiBlfSwkZz1EYSxlUj1WYSx0Uj1yYSxpUj1TYyxuUj13LHJSPVplLG9SPVh0LHNSPXBuLGFSPWlpLGNSPXRlLGRSPWZuLGxSPUlvLHVSPUIsaFI9ZXMscFI9cW8sX1I9WmMsRVI9Yl8sZlI9aHQoXCJpdGVyYXRvclwiKSxtUj1cIlVSTFNlYXJjaFBhcmFtc1wiLFRSPW1SK1wiSXRlcmF0b3JcIixTUj10Ui5zZXQsZ1I9dFIuZ2V0dGVyRm9yKG1SKSxSUj10Ui5nZXR0ZXJGb3IoVFIpLENSPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsSVI9ZnVuY3Rpb24oZSl7aWYoIXpnKXJldHVybiBLZ1tlXTt2YXIgdD1DUihLZyxlKTtyZXR1cm4gdCYmdC52YWx1ZX0sdlI9SVIoXCJmZXRjaFwiKSx5Uj1JUihcIlJlcXVlc3RcIiksQVI9SVIoXCJIZWFkZXJzXCIpLGJSPXlSJiZ5Ui5wcm90b3R5cGUsd1I9QVImJkFSLnByb3RvdHlwZSxPUj1LZy5SZWdFeHAsTlI9S2cuVHlwZUVycm9yLERSPUtnLmRlY29kZVVSSUNvbXBvbmVudCxQUj1LZy5lbmNvZGVVUklDb21wb25lbnQsTFI9cWcoXCJcIi5jaGFyQXQpLGtSPXFnKFtdLmpvaW4pLE1SPXFnKFtdLnB1c2gpLFVSPXFnKFwiXCIucmVwbGFjZSkseFI9cWcoW10uc2hpZnQpLFZSPXFnKFtdLnNwbGljZSksRlI9cWcoXCJcIi5zcGxpdCksQlI9cWcoXCJcIi5zbGljZSksalI9L1xcKy9nLEdSPUFycmF5KDQpLFdSPWZ1bmN0aW9uKGUpe3JldHVybiBHUltlLTFdfHwoR1JbZS0xXT1PUihcIigoPzolW1xcXFxkYS1mXXsyfSl7XCIrZStcIn0pXCIsXCJnaVwiKSl9LEhSPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4gRFIoZSl9Y2F0Y2godCl7cmV0dXJuIGV9fSxLUj1mdW5jdGlvbihlKXt2YXIgdD1VUihlLGpSLFwiIFwiKSxpPTQ7dHJ5e3JldHVybiBEUih0KX1jYXRjaChlKXtmb3IoO2k7KXQ9VVIodCxXUihpLS0pLEhSKTtyZXR1cm4gdH19LFlSPS9bIScoKX5dfCUyMC9nLHFSPXtcIiFcIjpcIiUyMVwiLFwiJ1wiOlwiJTI3XCIsXCIoXCI6XCIlMjhcIixcIilcIjpcIiUyOVwiLFwiflwiOlwiJTdFXCIsXCIlMjBcIjpcIitcIn0selI9ZnVuY3Rpb24oZSl7cmV0dXJuIHFSW2VdfSxKUj1mdW5jdGlvbihlKXtyZXR1cm4gVVIoUFIoZSksWVIselIpfSxYUj1lUigoZnVuY3Rpb24oZSx0KXtTUih0aGlzLHt0eXBlOlRSLGl0ZXJhdG9yOmhSKGdSKGUpLmVudHJpZXMpLGtpbmQ6dH0pfSksXCJJdGVyYXRvclwiLChmdW5jdGlvbigpe3ZhciBlPVJSKHRoaXMpLHQ9ZS5raW5kLGk9ZS5pdGVyYXRvci5uZXh0KCksbj1pLnZhbHVlO3JldHVybiBpLmRvbmV8fChpLnZhbHVlPVwia2V5c1wiPT09dD9uLmtleTpcInZhbHVlc1wiPT09dD9uLnZhbHVlOltuLmtleSxuLnZhbHVlXSksaX0pLCEwKSxRUj1mdW5jdGlvbihlKXt0aGlzLmVudHJpZXM9W10sdGhpcy51cmw9bnVsbCx2b2lkIDAhPT1lJiYoY1IoZSk/dGhpcy5wYXJzZU9iamVjdChlKTp0aGlzLnBhcnNlUXVlcnkoXCJzdHJpbmdcIj09dHlwZW9mIGU/XCI/XCI9PT1MUihlLDApP0JSKGUsMSk6ZTpkUihlKSkpfTtRUi5wcm90b3R5cGU9e3R5cGU6bVIsYmluZFVSTDpmdW5jdGlvbihlKXt0aGlzLnVybD1lLHRoaXMudXBkYXRlKCl9LHBhcnNlT2JqZWN0OmZ1bmN0aW9uKGUpe3ZhciB0LGksbixyLG8scyxhLGM9cFIoZSk7aWYoYylmb3IoaT0odD1oUihlLGMpKS5uZXh0OyEobj1ZZyhpLHQpKS5kb25lOyl7aWYobz0ocj1oUihhUihuLnZhbHVlKSkpLm5leHQsKHM9WWcobyxyKSkuZG9uZXx8KGE9WWcobyxyKSkuZG9uZXx8IVlnKG8scikuZG9uZSl0aHJvdyBOUihcIkV4cGVjdGVkIHNlcXVlbmNlIHdpdGggbGVuZ3RoIDJcIik7TVIodGhpcy5lbnRyaWVzLHtrZXk6ZFIocy52YWx1ZSksdmFsdWU6ZFIoYS52YWx1ZSl9KX1lbHNlIGZvcih2YXIgZCBpbiBlKXJSKGUsZCkmJk1SKHRoaXMuZW50cmllcyx7a2V5OmQsdmFsdWU6ZFIoZVtkXSl9KX0scGFyc2VRdWVyeTpmdW5jdGlvbihlKXtpZihlKWZvcih2YXIgdCxpLG49RlIoZSxcIiZcIikscj0wO3I8bi5sZW5ndGg7KSh0PW5bcisrXSkubGVuZ3RoJiYoaT1GUih0LFwiPVwiKSxNUih0aGlzLmVudHJpZXMse2tleTpLUih4UihpKSksdmFsdWU6S1Ioa1IoaSxcIj1cIikpfSkpfSxzZXJpYWxpemU6ZnVuY3Rpb24oKXtmb3IodmFyIGUsdD10aGlzLmVudHJpZXMsaT1bXSxuPTA7bjx0Lmxlbmd0aDspZT10W24rK10sTVIoaSxKUihlLmtleSkrXCI9XCIrSlIoZS52YWx1ZSkpO3JldHVybiBrUihpLFwiJlwiKX0sdXBkYXRlOmZ1bmN0aW9uKCl7dGhpcy5lbnRyaWVzLmxlbmd0aD0wLHRoaXMucGFyc2VRdWVyeSh0aGlzLnVybC5xdWVyeSl9LHVwZGF0ZVVSTDpmdW5jdGlvbigpe3RoaXMudXJsJiZ0aGlzLnVybC51cGRhdGUoKX19O3ZhciBaUj1mdW5jdGlvbigpe2lSKHRoaXMsJFIpO3ZhciBlPVNSKHRoaXMsbmV3IFFSKGFyZ3VtZW50cy5sZW5ndGg+MD9hcmd1bWVudHNbMF06dm9pZCAwKSk7emd8fCh0aGlzLnNpemU9ZS5lbnRyaWVzLmxlbmd0aCl9LCRSPVpSLnByb3RvdHlwZTtpZihaZygkUix7YXBwZW5kOmZ1bmN0aW9uKGUsdCl7dmFyIGk9Z1IodGhpcyk7X1IoYXJndW1lbnRzLmxlbmd0aCwyKSxNUihpLmVudHJpZXMse2tleTpkUihlKSx2YWx1ZTpkUih0KX0pLHpnfHx0aGlzLmxlbmd0aCsrLGkudXBkYXRlVVJMKCl9LGRlbGV0ZTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9Z1IodGhpcyksaT1fUihhcmd1bWVudHMubGVuZ3RoLDEpLG49dC5lbnRyaWVzLHI9ZFIoZSksbz1pPDI/dm9pZCAwOmFyZ3VtZW50c1sxXSxzPXZvaWQgMD09PW8/bzpkUihvKSxhPTA7YTxuLmxlbmd0aDspe3ZhciBjPW5bYV07aWYoYy5rZXkhPT1yfHx2b2lkIDAhPT1zJiZjLnZhbHVlIT09cylhKys7ZWxzZSBpZihWUihuLGEsMSksdm9pZCAwIT09cylicmVha316Z3x8KHRoaXMuc2l6ZT1uLmxlbmd0aCksdC51cGRhdGVVUkwoKX0sZ2V0OmZ1bmN0aW9uKGUpe3ZhciB0PWdSKHRoaXMpLmVudHJpZXM7X1IoYXJndW1lbnRzLmxlbmd0aCwxKTtmb3IodmFyIGk9ZFIoZSksbj0wO248dC5sZW5ndGg7bisrKWlmKHRbbl0ua2V5PT09aSlyZXR1cm4gdFtuXS52YWx1ZTtyZXR1cm4gbnVsbH0sZ2V0QWxsOmZ1bmN0aW9uKGUpe3ZhciB0PWdSKHRoaXMpLmVudHJpZXM7X1IoYXJndW1lbnRzLmxlbmd0aCwxKTtmb3IodmFyIGk9ZFIoZSksbj1bXSxyPTA7cjx0Lmxlbmd0aDtyKyspdFtyXS5rZXk9PT1pJiZNUihuLHRbcl0udmFsdWUpO3JldHVybiBufSxoYXM6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWdSKHRoaXMpLmVudHJpZXMsaT1fUihhcmd1bWVudHMubGVuZ3RoLDEpLG49ZFIoZSkscj1pPDI/dm9pZCAwOmFyZ3VtZW50c1sxXSxvPXZvaWQgMD09PXI/cjpkUihyKSxzPTA7czx0Lmxlbmd0aDspe3ZhciBhPXRbcysrXTtpZihhLmtleT09PW4mJih2b2lkIDA9PT1vfHxhLnZhbHVlPT09bykpcmV0dXJuITB9cmV0dXJuITF9LHNldDpmdW5jdGlvbihlLHQpe3ZhciBpPWdSKHRoaXMpO19SKGFyZ3VtZW50cy5sZW5ndGgsMSk7Zm9yKHZhciBuLHI9aS5lbnRyaWVzLG89ITEscz1kUihlKSxhPWRSKHQpLGM9MDtjPHIubGVuZ3RoO2MrKykobj1yW2NdKS5rZXk9PT1zJiYobz9WUihyLGMtLSwxKToobz0hMCxuLnZhbHVlPWEpKTtvfHxNUihyLHtrZXk6cyx2YWx1ZTphfSksemd8fCh0aGlzLnNpemU9ci5sZW5ndGgpLGkudXBkYXRlVVJMKCl9LHNvcnQ6ZnVuY3Rpb24oKXt2YXIgZT1nUih0aGlzKTtFUihlLmVudHJpZXMsKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUua2V5PnQua2V5PzE6LTF9KSksZS51cGRhdGVVUkwoKX0sZm9yRWFjaDpmdW5jdGlvbihlKXtmb3IodmFyIHQsaT1nUih0aGlzKS5lbnRyaWVzLG49b1IoZSxhcmd1bWVudHMubGVuZ3RoPjE/YXJndW1lbnRzWzFdOnZvaWQgMCkscj0wO3I8aS5sZW5ndGg7KW4oKHQ9aVtyKytdKS52YWx1ZSx0LmtleSx0aGlzKX0sa2V5czpmdW5jdGlvbigpe3JldHVybiBuZXcgWFIodGhpcyxcImtleXNcIil9LHZhbHVlczpmdW5jdGlvbigpe3JldHVybiBuZXcgWFIodGhpcyxcInZhbHVlc1wiKX0sZW50cmllczpmdW5jdGlvbigpe3JldHVybiBuZXcgWFIodGhpcyxcImVudHJpZXNcIil9fSx7ZW51bWVyYWJsZTohMH0pLFhnKCRSLGZSLCRSLmVudHJpZXMse25hbWU6XCJlbnRyaWVzXCJ9KSxYZygkUixcInRvU3RyaW5nXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGdSKHRoaXMpLnNlcmlhbGl6ZSgpfSkse2VudW1lcmFibGU6ITB9KSx6ZyYmUWcoJFIsXCJzaXplXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBnUih0aGlzKS5lbnRyaWVzLmxlbmd0aH0sY29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITB9KSwkZyhaUixtUiksSGcoe2dsb2JhbDohMCxjb25zdHJ1Y3RvcjohMCxmb3JjZWQ6IUpnfSx7VVJMU2VhcmNoUGFyYW1zOlpSfSksIUpnJiZuUihBUikpe3ZhciBlQz1xZyh3Ui5oYXMpLHRDPXFnKHdSLnNldCksaUM9ZnVuY3Rpb24oZSl7aWYoY1IoZSkpe3ZhciB0LGk9ZS5ib2R5O2lmKHNSKGkpPT09bVIpcmV0dXJuIHQ9ZS5oZWFkZXJzP25ldyBBUihlLmhlYWRlcnMpOm5ldyBBUixlQyh0LFwiY29udGVudC10eXBlXCIpfHx0Qyh0LFwiY29udGVudC10eXBlXCIsXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD1VVEYtOFwiKSxsUihlLHtib2R5OnVSKDAsZFIoaSkpLGhlYWRlcnM6dVIoMCx0KX0pfXJldHVybiBlfTtpZihuUih2UikmJkhnKHtnbG9iYWw6ITAsZW51bWVyYWJsZTohMCxkb250Q2FsbEdldFNldDohMCxmb3JjZWQ6ITB9LHtmZXRjaDpmdW5jdGlvbihlKXtyZXR1cm4gdlIoZSxhcmd1bWVudHMubGVuZ3RoPjE/aUMoYXJndW1lbnRzWzFdKTp7fSl9fSksblIoeVIpKXt2YXIgbkM9ZnVuY3Rpb24oZSl7cmV0dXJuIGlSKHRoaXMsYlIpLG5ldyB5UihlLGFyZ3VtZW50cy5sZW5ndGg+MT9pQyhhcmd1bWVudHNbMV0pOnt9KX07YlIuY29uc3RydWN0b3I9bkMsbkMucHJvdG90eXBlPWJSLEhnKHtnbG9iYWw6ITAsY29uc3RydWN0b3I6ITAsZG9udENhbGxHZXRTZXQ6ITAsZm9yY2VkOiEwfSx7UmVxdWVzdDpuQ30pfX12YXIgckM9e1VSTFNlYXJjaFBhcmFtczpaUixnZXRTdGF0ZTpnUn0sb0M9aShpZS5VUkxTZWFyY2hQYXJhbXMpLHNDPXtpc0Jyb3dzZXI6ITAsY2xhc3Nlczp7VVJMU2VhcmNoUGFyYW1zOnZvaWQgMCE9PW9DP29DOktmLEZvcm1EYXRhOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBGb3JtRGF0YT9Gb3JtRGF0YTpudWxsLEJsb2I6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIEJsb2I/QmxvYjpudWxsfSxwcm90b2NvbHM6W1wiaHR0cFwiLFwiaHR0cHNcIixcImZpbGVcIixcImJsb2JcIixcInVybFwiLFwiZGF0YVwiXX07Y29uc3QgYUM9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGRvY3VtZW50LGNDPVwib2JqZWN0XCI9PXR5cGVvZiBuYXZpZ2F0b3ImJm5hdmlnYXRvcnx8dm9pZCAwLGRDPWFDJiYoIWNDfHxbXCJSZWFjdE5hdGl2ZVwiLFwiTmF0aXZlU2NyaXB0XCIsXCJOU1wiXS5pbmRleE9mKGNDLnByb2R1Y3QpPDApLGxDPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBXb3JrZXJHbG9iYWxTY29wZSYmc2VsZiBpbnN0YW5jZW9mIFdvcmtlckdsb2JhbFNjb3BlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBzZWxmLmltcG9ydFNjcmlwdHMsdUM9YUMmJndpbmRvdy5sb2NhdGlvbi5ocmVmfHxcImh0dHA6Ly9sb2NhbGhvc3RcIjtmdW5jdGlvbiBoQyhlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gcEMoZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/aEMoT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6aEMoT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9dmFyIF9DPXBDKHBDKHt9LE9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGhhc0Jyb3dzZXJFbnY6YUMsaGFzU3RhbmRhcmRCcm93c2VyRW52OmRDLGhhc1N0YW5kYXJkQnJvd3NlcldlYldvcmtlckVudjpsQyxuYXZpZ2F0b3I6Y0Msb3JpZ2luOnVDfSkpLHNDKTt2YXIgRUM9aWksZkM9TCxtQz1aZSxUQz1sLFNDPWZ1bmN0aW9uKCl7dmFyIGU9RUModGhpcyksdD1cIlwiO3JldHVybiBlLmhhc0luZGljZXMmJih0Kz1cImRcIiksZS5nbG9iYWwmJih0Kz1cImdcIiksZS5pZ25vcmVDYXNlJiYodCs9XCJpXCIpLGUubXVsdGlsaW5lJiYodCs9XCJtXCIpLGUuZG90QWxsJiYodCs9XCJzXCIpLGUudW5pY29kZSYmKHQrPVwidVwiKSxlLnVuaWNvZGVTZXRzJiYodCs9XCJ2XCIpLGUuc3RpY2t5JiYodCs9XCJ5XCIpLHR9LGdDPVJlZ0V4cC5wcm90b3R5cGUsUkM9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5mbGFncztyZXR1cm4gdm9pZCAwIT09dHx8XCJmbGFnc1wiaW4gZ0N8fG1DKGUsXCJmbGFnc1wiKXx8IVRDKGdDLGUpP3Q6ZkMoU0MsZSl9LENDPUNoLmNoYXJBdCxJQz1MLHZDPWlpLHlDPXcsQUM9UixiQz0vLi8uZXhlYyx3Qz1UeXBlRXJyb3IsT0M9d2ksTkM9TCxEQz12LFBDPVZhLExDPWljLGtDPUosTUM9QmksVUM9Zm4seEM9aWksVkM9WSxGQz1SLEJDPXRuLGpDPVJDLEdDPWtlLFdDPW4sSEM9SmMsS0M9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiB0KyhpP0NDKGUsdCkubGVuZ3RoOjEpfSxZQz1mdW5jdGlvbihlLHQpe3ZhciBpPWUuZXhlYztpZih5QyhpKSl7dmFyIG49SUMoaSxlLHQpO3JldHVybiBudWxsIT09biYmdkMobiksbn1pZihcIlJlZ0V4cFwiPT09QUMoZSkpcmV0dXJuIElDKGJDLGUsdCk7dGhyb3cgd0MoXCJSZWdFeHAjZXhlYyBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyXCIpfSxxQz1yYSx6Qz1odChcIm1hdGNoQWxsXCIpLEpDPVwiUmVnRXhwIFN0cmluZ1wiLFhDPUpDK1wiIEl0ZXJhdG9yXCIsUUM9cUMuc2V0LFpDPXFDLmdldHRlckZvcihYQyksJEM9VHlwZUVycm9yLGVJPURDKFwiXCIuaW5kZXhPZiksdEk9REMoXCJcIi5tYXRjaEFsbCksaUk9ISF0SSYmIVdDKChmdW5jdGlvbigpe3RJKFwiYVwiLC8uLyl9KSksbkk9UEMoKGZ1bmN0aW9uKGUsdCxpLG4pe1FDKHRoaXMse3R5cGU6WEMscmVnZXhwOmUsc3RyaW5nOnQsZ2xvYmFsOmksdW5pY29kZTpuLGRvbmU6ITF9KX0pLEpDLChmdW5jdGlvbigpe3ZhciBlPVpDKHRoaXMpO2lmKGUuZG9uZSlyZXR1cm4gTEModm9pZCAwLCEwKTt2YXIgdD1lLnJlZ2V4cCxpPWUuc3RyaW5nLG49WUModCxpKTtyZXR1cm4gbnVsbD09PW4/KGUuZG9uZT0hMCxMQyh2b2lkIDAsITApKTplLmdsb2JhbD8oXCJcIj09PVVDKG5bMF0pJiYodC5sYXN0SW5kZXg9S0MoaSxNQyh0Lmxhc3RJbmRleCksZS51bmljb2RlKSksTEMobiwhMSkpOihlLmRvbmU9ITAsTEMobiwhMSkpfSkpLHJJPWZ1bmN0aW9uKGUpe3ZhciB0LGksbixyPXhDKHRoaXMpLG89VUMoZSkscz1IQyhyLFJlZ0V4cCksYT1VQyhqQyhyKSk7cmV0dXJuIHQ9bmV3IHMocz09PVJlZ0V4cD9yLnNvdXJjZTpyLGEpLGk9ISF+ZUkoYSxcImdcIiksbj0hIX5lSShhLFwidVwiKSx0Lmxhc3RJbmRleD1NQyhyLmxhc3RJbmRleCksbmV3IG5JKHQsbyxpLG4pfTtPQyh7dGFyZ2V0OlwiU3RyaW5nXCIscHJvdG86ITAsZm9yY2VkOmlJfSx7bWF0Y2hBbGw6ZnVuY3Rpb24oZSl7dmFyIHQsaSxuLHIsbz1rQyh0aGlzKTtpZihWQyhlKSl7aWYoaUkpcmV0dXJuIHRJKG8sZSl9ZWxzZXtpZihCQyhlKSYmKHQ9VUMoa0MoakMoZSkpKSwhfmVJKHQsXCJnXCIpKSl0aHJvdyAkQyhcImAubWF0Y2hBbGxgIGRvZXMgbm90IGFsbG93IG5vbi1nbG9iYWwgcmVnZXhlc1wiKTtpZihpSSlyZXR1cm4gdEkobyxlKTtpZih2b2lkIDA9PT0obj1HQyhlLHpDKSkmJlwiUmVnRXhwXCI9PUZDKGUpJiYobj1ySSksbilyZXR1cm4gTkMobixlLG8pfXJldHVybiBpPVVDKG8pLHI9bmV3IFJlZ0V4cChlLFwiZ1wiKSxOQyhySSxyLGkpfX0pO3ZhciBvST1YaShcIlN0cmluZ1wiKS5tYXRjaEFsbCxzST1sLGFJPW9JLGNJPVN0cmluZy5wcm90b3R5cGUsZEk9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5tYXRjaEFsbDtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZXx8ZT09PWNJfHxzSShjSSxlKSYmdD09PWNJLm1hdGNoQWxsP2FJOnR9LGxJPWkoZEkpO2Z1bmN0aW9uIHVJKGUpe2Z1bmN0aW9uIHQoZSxpLG4scil7bGV0IG89ZVtyKytdO2lmKFwiX19wcm90b19fXCI9PT1vKXJldHVybiEwO2NvbnN0IHM9TnVtYmVyLmlzRmluaXRlKCtvKSxhPXI+PWUubGVuZ3RoO2lmKG89IW8mJk1mLmlzQXJyYXkobik/bi5sZW5ndGg6byxhKXJldHVybiBNZi5oYXNPd25Qcm9wKG4sbyk/bltvXT1bbltvXSxpXTpuW29dPWksIXM7bltvXSYmTWYuaXNPYmplY3QobltvXSl8fChuW29dPVtdKTtyZXR1cm4gdChlLGksbltvXSxyKSYmTWYuaXNBcnJheShuW29dKSYmKG5bb109ZnVuY3Rpb24oZSl7Y29uc3QgdD17fSxpPU9iamVjdC5rZXlzKGUpO2xldCBuO2NvbnN0IHI9aS5sZW5ndGg7bGV0IG87Zm9yKG49MDtuPHI7bisrKW89aVtuXSx0W29dPWVbb107cmV0dXJuIHR9KG5bb10pKSwhc31pZihNZi5pc0Zvcm1EYXRhKGUpJiZNZi5pc0Z1bmN0aW9uKGUuZW50cmllcykpe2NvbnN0IGk9e307cmV0dXJuIE1mLmZvckVhY2hFbnRyeShlLCgoZSxuKT0+e3QoZnVuY3Rpb24oZSl7cmV0dXJuIGxJKE1mKS5jYWxsKE1mLC9cXHcrfFxcWyhcXHcqKV0vZyxlKS5tYXAoKGU9PlwiW11cIj09PWVbMF0/XCJcIjplWzFdfHxlWzBdKSl9KGUpLG4saSwwKX0pKSxpfXJldHVybiBudWxsfWNvbnN0IGhJPXt0cmFuc2l0aW9uYWw6WGYsYWRhcHRlcjpbXCJ4aHJcIixcImh0dHBcIixcImZldGNoXCJdLHRyYW5zZm9ybVJlcXVlc3Q6W2Z1bmN0aW9uKGUsdCl7Y29uc3QgaT10LmdldENvbnRlbnRUeXBlKCl8fFwiXCIsbj1pLmluZGV4T2YoXCJhcHBsaWNhdGlvbi9qc29uXCIpPi0xLHI9TWYuaXNPYmplY3QoZSk7ciYmTWYuaXNIVE1MRm9ybShlKSYmKGU9bmV3IEZvcm1EYXRhKGUpKTtpZihNZi5pc0Zvcm1EYXRhKGUpKXJldHVybiBuP0pTT04uc3RyaW5naWZ5KHVJKGUpKTplO2lmKE1mLmlzQXJyYXlCdWZmZXIoZSl8fE1mLmlzQnVmZmVyKGUpfHxNZi5pc1N0cmVhbShlKXx8TWYuaXNGaWxlKGUpfHxNZi5pc0Jsb2IoZSl8fE1mLmlzUmVhZGFibGVTdHJlYW0oZSkpcmV0dXJuIGU7aWYoTWYuaXNBcnJheUJ1ZmZlclZpZXcoZSkpcmV0dXJuIGUuYnVmZmVyO2lmKE1mLmlzVVJMU2VhcmNoUGFyYW1zKGUpKXJldHVybiB0LnNldENvbnRlbnRUeXBlKFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLThcIiwhMSksZS50b1N0cmluZygpO2xldCBvO2lmKHIpe2lmKGkuaW5kZXhPZihcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiKT4tMSlyZXR1cm4gZnVuY3Rpb24oZSx0KXtyZXR1cm4gV2YoZSxuZXcgX0MuY2xhc3Nlcy5VUkxTZWFyY2hQYXJhbXMsT2JqZWN0LmFzc2lnbih7dmlzaXRvcjpmdW5jdGlvbihlLHQsaSxuKXtyZXR1cm4gX0MuaXNOb2RlJiZNZi5pc0J1ZmZlcihlKT8odGhpcy5hcHBlbmQodCxlLnRvU3RyaW5nKFwiYmFzZTY0XCIpKSwhMSk6bi5kZWZhdWx0VmlzaXRvci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSx0KSl9KGUsdGhpcy5mb3JtU2VyaWFsaXplcikudG9TdHJpbmcoKTtpZigobz1NZi5pc0ZpbGVMaXN0KGUpKXx8aS5pbmRleE9mKFwibXVsdGlwYXJ0L2Zvcm0tZGF0YVwiKT4tMSl7Y29uc3QgdD10aGlzLmVudiYmdGhpcy5lbnYuRm9ybURhdGE7cmV0dXJuIFdmKG8/e1wiZmlsZXNbXVwiOmV9OmUsdCYmbmV3IHQsdGhpcy5mb3JtU2VyaWFsaXplcil9fXJldHVybiByfHxuPyh0LnNldENvbnRlbnRUeXBlKFwiYXBwbGljYXRpb24vanNvblwiLCExKSxmdW5jdGlvbihlLHQsaSl7aWYoTWYuaXNTdHJpbmcoZSkpdHJ5e3JldHVybih0fHxKU09OLnBhcnNlKShlKSxqcChNZikuY2FsbChNZixlKX1jYXRjaChlKXtpZihcIlN5bnRheEVycm9yXCIhPT1lLm5hbWUpdGhyb3cgZX1yZXR1cm4oaXx8SlNPTi5zdHJpbmdpZnkpKGUpfShlKSk6ZX1dLHRyYW5zZm9ybVJlc3BvbnNlOltmdW5jdGlvbihlKXtjb25zdCB0PXRoaXMudHJhbnNpdGlvbmFsfHxoSS50cmFuc2l0aW9uYWwsaT10JiZ0LmZvcmNlZEpTT05QYXJzaW5nLG49XCJqc29uXCI9PT10aGlzLnJlc3BvbnNlVHlwZTtpZihNZi5pc1Jlc3BvbnNlKGUpfHxNZi5pc1JlYWRhYmxlU3RyZWFtKGUpKXJldHVybiBlO2lmKGUmJk1mLmlzU3RyaW5nKGUpJiYoaSYmIXRoaXMucmVzcG9uc2VUeXBlfHxuKSl7Y29uc3QgaT0hKHQmJnQuc2lsZW50SlNPTlBhcnNpbmcpJiZuO3RyeXtyZXR1cm4gSlNPTi5wYXJzZShlKX1jYXRjaChlKXtpZihpKXtpZihcIlN5bnRheEVycm9yXCI9PT1lLm5hbWUpdGhyb3cgVWYuZnJvbShlLFVmLkVSUl9CQURfUkVTUE9OU0UsdGhpcyxudWxsLHRoaXMucmVzcG9uc2UpO3Rocm93IGV9fX1yZXR1cm4gZX1dLHRpbWVvdXQ6MCx4c3JmQ29va2llTmFtZTpcIlhTUkYtVE9LRU5cIix4c3JmSGVhZGVyTmFtZTpcIlgtWFNSRi1UT0tFTlwiLG1heENvbnRlbnRMZW5ndGg6LTEsbWF4Qm9keUxlbmd0aDotMSxlbnY6e0Zvcm1EYXRhOl9DLmNsYXNzZXMuRm9ybURhdGEsQmxvYjpfQy5jbGFzc2VzLkJsb2J9LHZhbGlkYXRlU3RhdHVzOmZ1bmN0aW9uKGUpe3JldHVybiBlPj0yMDAmJmU8MzAwfSxoZWFkZXJzOntjb21tb246e0FjY2VwdDpcImFwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKlwiLFwiQ29udGVudC1UeXBlXCI6dm9pZCAwfX19O01mLmZvckVhY2goW1wiZGVsZXRlXCIsXCJnZXRcIixcImhlYWRcIixcInBvc3RcIixcInB1dFwiLFwicGF0Y2hcIl0sKGU9PntoSS5oZWFkZXJzW2VdPXt9fSkpO3ZhciBwST1oSTtjb25zdCBfST1NZi50b09iamVjdFNldChbXCJhZ2VcIixcImF1dGhvcml6YXRpb25cIixcImNvbnRlbnQtbGVuZ3RoXCIsXCJjb250ZW50LXR5cGVcIixcImV0YWdcIixcImV4cGlyZXNcIixcImZyb21cIixcImhvc3RcIixcImlmLW1vZGlmaWVkLXNpbmNlXCIsXCJpZi11bm1vZGlmaWVkLXNpbmNlXCIsXCJsYXN0LW1vZGlmaWVkXCIsXCJsb2NhdGlvblwiLFwibWF4LWZvcndhcmRzXCIsXCJwcm94eS1hdXRob3JpemF0aW9uXCIsXCJyZWZlcmVyXCIsXCJyZXRyeS1hZnRlclwiLFwidXNlci1hZ2VudFwiXSk7Y29uc3QgRUk9U3ltYm9sKFwiaW50ZXJuYWxzXCIpO2Z1bmN0aW9uIGZJKGUpe3ZhciB0O3JldHVybiBlJiZqcCh0PVN0cmluZyhlKSkuY2FsbCh0KS50b0xvd2VyQ2FzZSgpfWZ1bmN0aW9uIG1JKGUpe3JldHVybiExPT09ZXx8bnVsbD09ZT9lOk1mLmlzQXJyYXkoZSk/ZS5tYXAobUkpOlN0cmluZyhlKX1mdW5jdGlvbiBUSShlLHQsaSxuLHIpe3JldHVybiBNZi5pc0Z1bmN0aW9uKG4pP24uY2FsbCh0aGlzLHQsaSk6KHImJih0PWkpLE1mLmlzU3RyaW5nKHQpP01mLmlzU3RyaW5nKG4pPy0xIT09dC5pbmRleE9mKG4pOk1mLmlzUmVnRXhwKG4pP24udGVzdCh0KTp2b2lkIDA6dm9pZCAwKX1jbGFzcyBTSXtjb25zdHJ1Y3RvcihlKXtlJiZ0aGlzLnNldChlKX1zZXQoZSx0LGkpe2NvbnN0IG49dGhpcztmdW5jdGlvbiByKGUsdCxpKXtjb25zdCByPWZJKHQpO2lmKCFyKXRocm93IG5ldyBFcnJvcihcImhlYWRlciBuYW1lIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nXCIpO2NvbnN0IG89TWYuZmluZEtleShuLHIpOyghb3x8dm9pZCAwPT09bltvXXx8ITA9PT1pfHx2b2lkIDA9PT1pJiYhMSE9PW5bb10pJiYobltvfHx0XT1tSShlKSl9Y29uc3Qgbz0oZSx0KT0+TWYuZm9yRWFjaChlLCgoZSxpKT0+cihlLGksdCkpKTtpZihNZi5pc1BsYWluT2JqZWN0KGUpfHxlIGluc3RhbmNlb2YgdGhpcy5jb25zdHJ1Y3RvcilvKGUsdCk7ZWxzZSBpZihNZi5pc1N0cmluZyhlKSYmKGU9anAoZSkuY2FsbChlKSkmJiEvXlstX2EtekEtWjAtOV5gfH4sISMkJSYnKisuXSskLy50ZXN0KGpwKHM9ZSkuY2FsbChzKSkpbygoZT0+e2NvbnN0IHQ9e307bGV0IGksbixyO3JldHVybiBlJiZlLnNwbGl0KFwiXFxuXCIpLmZvckVhY2goKGZ1bmN0aW9uKGUpe3ZhciBvLHM7cj1lLmluZGV4T2YoXCI6XCIpLGk9anAobz1lLnN1YnN0cmluZygwLHIpKS5jYWxsKG8pLnRvTG93ZXJDYXNlKCksbj1qcChzPWUuc3Vic3RyaW5nKHIrMSkpLmNhbGwocyksIWl8fHRbaV0mJl9JW2ldfHwoXCJzZXQtY29va2llXCI9PT1pP3RbaV0/dFtpXS5wdXNoKG4pOnRbaV09W25dOnRbaV09dFtpXT90W2ldK1wiLCBcIituOm4pfSkpLHR9KShlKSx0KTtlbHNlIGlmKE1mLmlzSGVhZGVycyhlKSlmb3IoY29uc3RbdCxuXW9mIGUuZW50cmllcygpKXIobix0LGkpO2Vsc2UgbnVsbCE9ZSYmcih0LGUsaSk7dmFyIHM7cmV0dXJuIHRoaXN9Z2V0KGUsdCl7aWYoZT1mSShlKSl7Y29uc3QgaT1NZi5maW5kS2V5KHRoaXMsZSk7aWYoaSl7Y29uc3QgZT10aGlzW2ldO2lmKCF0KXJldHVybiBlO2lmKCEwPT09dClyZXR1cm4gZnVuY3Rpb24oZSl7Y29uc3QgdD1PYmplY3QuY3JlYXRlKG51bGwpLGk9LyhbXlxccyw7PV0rKVxccyooPzo9XFxzKihbXiw7XSspKT8vZztsZXQgbjtmb3IoO249aS5leGVjKGUpOyl0W25bMV1dPW5bMl07cmV0dXJuIHR9KGUpO2lmKE1mLmlzRnVuY3Rpb24odCkpcmV0dXJuIHQuY2FsbCh0aGlzLGUsaSk7aWYoTWYuaXNSZWdFeHAodCkpcmV0dXJuIHQuZXhlYyhlKTt0aHJvdyBuZXcgVHlwZUVycm9yKFwicGFyc2VyIG11c3QgYmUgYm9vbGVhbnxyZWdleHB8ZnVuY3Rpb25cIil9fX1oYXMoZSx0KXtpZihlPWZJKGUpKXtjb25zdCBpPU1mLmZpbmRLZXkodGhpcyxlKTtyZXR1cm4hKCFpfHx2b2lkIDA9PT10aGlzW2ldfHx0JiYhVEkoMCx0aGlzW2ldLGksdCkpfXJldHVybiExfWRlbGV0ZShlLHQpe2NvbnN0IGk9dGhpcztsZXQgbj0hMTtmdW5jdGlvbiByKGUpe2lmKGU9ZkkoZSkpe2NvbnN0IHI9TWYuZmluZEtleShpLGUpOyFyfHx0JiYhVEkoMCxpW3JdLHIsdCl8fChkZWxldGUgaVtyXSxuPSEwKX19cmV0dXJuIE1mLmlzQXJyYXkoZSk/ZS5mb3JFYWNoKHIpOnIoZSksbn1jbGVhcihlKXtjb25zdCB0PU9iamVjdC5rZXlzKHRoaXMpO2xldCBpPXQubGVuZ3RoLG49ITE7Zm9yKDtpLS07KXtjb25zdCByPXRbaV07ZSYmIVRJKDAsdGhpc1tyXSxyLGUsITApfHwoZGVsZXRlIHRoaXNbcl0sbj0hMCl9cmV0dXJuIG59bm9ybWFsaXplKGUpe2NvbnN0IHQ9dGhpcyxpPXt9O3JldHVybiBNZi5mb3JFYWNoKHRoaXMsKChuLHIpPT57dmFyIG87Y29uc3Qgcz1NZi5maW5kS2V5KGkscik7aWYocylyZXR1cm4gdFtzXT1tSShuKSx2b2lkIGRlbGV0ZSB0W3JdO2NvbnN0IGE9ZT9mdW5jdGlvbihlKXtyZXR1cm4ganAoZSkuY2FsbChlKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoLyhbYS16XFxkXSkoXFx3KikvZywoKGUsdCxpKT0+dC50b1VwcGVyQ2FzZSgpK2kpKX0ocik6anAobz1TdHJpbmcocikpLmNhbGwobyk7YSE9PXImJmRlbGV0ZSB0W3JdLHRbYV09bUkobiksaVthXT0hMH0pKSx0aGlzfWNvbmNhdCgpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLGk9MDtpPGU7aSsrKXRbaV09YXJndW1lbnRzW2ldO3JldHVybiB0aGlzLmNvbnN0cnVjdG9yLmNvbmNhdCh0aGlzLC4uLnQpfXRvSlNPTihlKXtjb25zdCB0PU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIE1mLmZvckVhY2godGhpcywoKGksbik9PntudWxsIT1pJiYhMSE9PWkmJih0W25dPWUmJk1mLmlzQXJyYXkoaSk/aS5qb2luKFwiLCBcIik6aSl9KSksdH1bU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVybiBPYmplY3QuZW50cmllcyh0aGlzLnRvSlNPTigpKVtTeW1ib2wuaXRlcmF0b3JdKCl9dG9TdHJpbmcoKXtyZXR1cm4gT2JqZWN0LmVudHJpZXModGhpcy50b0pTT04oKSkubWFwKChlPT57bGV0W3QsaV09ZTtyZXR1cm4gdCtcIjogXCIraX0pKS5qb2luKFwiXFxuXCIpfWdldFtTeW1ib2wudG9TdHJpbmdUYWddKCl7cmV0dXJuXCJBeGlvc0hlYWRlcnNcIn1zdGF0aWMgZnJvbShlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIHRoaXM/ZTpuZXcgdGhpcyhlKX1zdGF0aWMgY29uY2F0KGUpe2NvbnN0IHQ9bmV3IHRoaXMoZSk7Zm9yKHZhciBpPWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkoaT4xP2ktMTowKSxyPTE7cjxpO3IrKyluW3ItMV09YXJndW1lbnRzW3JdO3JldHVybiBuLmZvckVhY2goKGU9PnQuc2V0KGUpKSksdH1zdGF0aWMgYWNjZXNzb3IoZSl7Y29uc3QgdD0odGhpc1tFSV09dGhpc1tFSV09e2FjY2Vzc29yczp7fX0pLmFjY2Vzc29ycyxpPXRoaXMucHJvdG90eXBlO2Z1bmN0aW9uIG4oZSl7Y29uc3Qgbj1mSShlKTt0W25dfHwoIWZ1bmN0aW9uKGUsdCl7Y29uc3QgaT1NZi50b0NhbWVsQ2FzZShcIiBcIit0KTtbXCJnZXRcIixcInNldFwiLFwiaGFzXCJdLmZvckVhY2goKG49PntPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxuK2kse3ZhbHVlOmZ1bmN0aW9uKGUsaSxyKXtyZXR1cm4gdGhpc1tuXS5jYWxsKHRoaXMsdCxlLGkscil9LGNvbmZpZ3VyYWJsZTohMH0pfSkpfShpLGUpLHRbbl09ITApfXJldHVybiBNZi5pc0FycmF5KGUpP2UuZm9yRWFjaChuKTpuKGUpLHRoaXN9fVNJLmFjY2Vzc29yKFtcIkNvbnRlbnQtVHlwZVwiLFwiQ29udGVudC1MZW5ndGhcIixcIkFjY2VwdFwiLFwiQWNjZXB0LUVuY29kaW5nXCIsXCJVc2VyLUFnZW50XCIsXCJBdXRob3JpemF0aW9uXCJdKSxNZi5yZWR1Y2VEZXNjcmlwdG9ycyhTSS5wcm90b3R5cGUsKChlLHQpPT57bGV0e3ZhbHVlOml9PWUsbj10WzBdLnRvVXBwZXJDYXNlKCkrdC5zbGljZSgxKTtyZXR1cm57Z2V0OigpPT5pLHNldChlKXt0aGlzW25dPWV9fX0pKSxNZi5mcmVlemVNZXRob2RzKFNJKTt2YXIgZ0k9U0k7ZnVuY3Rpb24gUkkoZSx0KXtjb25zdCBpPXRoaXN8fHBJLG49dHx8aSxyPWdJLmZyb20obi5oZWFkZXJzKTtsZXQgbz1uLmRhdGE7cmV0dXJuIE1mLmZvckVhY2goZSwoZnVuY3Rpb24oZSl7bz1lLmNhbGwoaSxvLHIubm9ybWFsaXplKCksdD90LnN0YXR1czp2b2lkIDApfSkpLHIubm9ybWFsaXplKCksb31mdW5jdGlvbiBDSShlKXtyZXR1cm4hKCFlfHwhZS5fX0NBTkNFTF9fKX1mdW5jdGlvbiBJSShlLHQsaSl7VWYuY2FsbCh0aGlzLG51bGw9PWU/XCJjYW5jZWxlZFwiOmUsVWYuRVJSX0NBTkNFTEVELHQsaSksdGhpcy5uYW1lPVwiQ2FuY2VsZWRFcnJvclwifWZ1bmN0aW9uIHZJKGUsdCxpKXtjb25zdCBuPWkuY29uZmlnLnZhbGlkYXRlU3RhdHVzO2kuc3RhdHVzJiZuJiYhbihpLnN0YXR1cyk/dChuZXcgVWYoXCJSZXF1ZXN0IGZhaWxlZCB3aXRoIHN0YXR1cyBjb2RlIFwiK2kuc3RhdHVzLFtVZi5FUlJfQkFEX1JFUVVFU1QsVWYuRVJSX0JBRF9SRVNQT05TRV1bTWF0aC5mbG9vcihpLnN0YXR1cy8xMDApLTRdLGkuY29uZmlnLGkucmVxdWVzdCxpKSk6ZShpKX1NZi5pbmhlcml0cyhJSSxVZix7X19DQU5DRUxfXzohMH0pO2NvbnN0IHlJPWZ1bmN0aW9uKGUsdCl7bGV0IGk9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOjMsbj0wO2NvbnN0IHI9ZnVuY3Rpb24oZSx0KXtlPWV8fDEwO2NvbnN0IGk9bmV3IEFycmF5KGUpLG49bmV3IEFycmF5KGUpO2xldCByLG89MCxzPTA7cmV0dXJuIHQ9dm9pZCAwIT09dD90OjFlMyxmdW5jdGlvbihhKXtjb25zdCBjPURhdGUubm93KCksZD1uW3NdO3J8fChyPWMpLGlbb109YSxuW29dPWM7bGV0IGw9cyx1PTA7Zm9yKDtsIT09bzspdSs9aVtsKytdLGwlPWU7aWYobz0obysxKSVlLG89PT1zJiYocz0ocysxKSVlKSxjLXI8dClyZXR1cm47Y29uc3QgaD1kJiZjLWQ7cmV0dXJuIGg/TWF0aC5yb3VuZCgxZTMqdS9oKTp2b2lkIDB9fSg1MCwyNTApO3JldHVybiBmdW5jdGlvbihlLHQpe2xldCBpLG4scj0wLG89MWUzL3Q7Y29uc3Qgcz1mdW5jdGlvbih0KXtsZXQgbz1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06RGF0ZS5ub3coKTtyPW8saT1udWxsLG4mJihjbGVhclRpbWVvdXQobiksbj1udWxsKSxlLmFwcGx5KG51bGwsdCl9O3JldHVybltmdW5jdGlvbigpe2NvbnN0IGU9RGF0ZS5ub3coKSx0PWUtcjtmb3IodmFyIGE9YXJndW1lbnRzLmxlbmd0aCxjPW5ldyBBcnJheShhKSxkPTA7ZDxhO2QrKyljW2RdPWFyZ3VtZW50c1tkXTt0Pj1vP3MoYyxlKTooaT1jLG58fChuPXNldFRpbWVvdXQoKCgpPT57bj1udWxsLHMoaSl9KSxvLXQpKSl9LCgpPT5pJiZzKGkpXX0oKGk9Pntjb25zdCBvPWkubG9hZGVkLHM9aS5sZW5ndGhDb21wdXRhYmxlP2kudG90YWw6dm9pZCAwLGE9by1uLGM9cihhKTtuPW87ZSh7bG9hZGVkOm8sdG90YWw6cyxwcm9ncmVzczpzP28vczp2b2lkIDAsYnl0ZXM6YSxyYXRlOmN8fHZvaWQgMCxlc3RpbWF0ZWQ6YyYmcyYmbzw9cz8ocy1vKS9jOnZvaWQgMCxldmVudDppLGxlbmd0aENvbXB1dGFibGU6bnVsbCE9cyxbdD9cImRvd25sb2FkXCI6XCJ1cGxvYWRcIl06ITB9KX0pLGkpfSxBST0oZSx0KT0+e2NvbnN0IGk9bnVsbCE9ZTtyZXR1cm5bbj0+dFswXSh7bGVuZ3RoQ29tcHV0YWJsZTppLHRvdGFsOmUsbG9hZGVkOm59KSx0WzFdXX0sYkk9ZT0+ZnVuY3Rpb24oKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxpPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKylpW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4gTWYuYXNhcCgoKCk9PmUoLi4uaSkpKX07dmFyIHdJPV9DLmhhc1N0YW5kYXJkQnJvd3NlckVudj9mdW5jdGlvbigpe2NvbnN0IGU9X0MubmF2aWdhdG9yJiYvKG1zaWV8dHJpZGVudCkvaS50ZXN0KF9DLm5hdmlnYXRvci51c2VyQWdlbnQpLHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7bGV0IGk7ZnVuY3Rpb24gbihpKXtsZXQgbj1pO3JldHVybiBlJiYodC5zZXRBdHRyaWJ1dGUoXCJocmVmXCIsbiksbj10LmhyZWYpLHQuc2V0QXR0cmlidXRlKFwiaHJlZlwiLG4pLHtocmVmOnQuaHJlZixwcm90b2NvbDp0LnByb3RvY29sP3QucHJvdG9jb2wucmVwbGFjZSgvOiQvLFwiXCIpOlwiXCIsaG9zdDp0Lmhvc3Qsc2VhcmNoOnQuc2VhcmNoP3Quc2VhcmNoLnJlcGxhY2UoL15cXD8vLFwiXCIpOlwiXCIsaGFzaDp0Lmhhc2g/dC5oYXNoLnJlcGxhY2UoL14jLyxcIlwiKTpcIlwiLGhvc3RuYW1lOnQuaG9zdG5hbWUscG9ydDp0LnBvcnQscGF0aG5hbWU6XCIvXCI9PT10LnBhdGhuYW1lLmNoYXJBdCgwKT90LnBhdGhuYW1lOlwiL1wiK3QucGF0aG5hbWV9fXJldHVybiBpPW4od2luZG93LmxvY2F0aW9uLmhyZWYpLGZ1bmN0aW9uKGUpe2NvbnN0IHQ9TWYuaXNTdHJpbmcoZSk/bihlKTplO3JldHVybiB0LnByb3RvY29sPT09aS5wcm90b2NvbCYmdC5ob3N0PT09aS5ob3N0fX0oKTpmdW5jdGlvbigpe3JldHVybiEwfSxPST1fQy5oYXNTdGFuZGFyZEJyb3dzZXJFbnY/e3dyaXRlKGUsdCxpLG4scixvKXtjb25zdCBzPVtlK1wiPVwiK2VuY29kZVVSSUNvbXBvbmVudCh0KV07TWYuaXNOdW1iZXIoaSkmJnMucHVzaChcImV4cGlyZXM9XCIrbmV3IERhdGUoaSkudG9HTVRTdHJpbmcoKSksTWYuaXNTdHJpbmcobikmJnMucHVzaChcInBhdGg9XCIrbiksTWYuaXNTdHJpbmcocikmJnMucHVzaChcImRvbWFpbj1cIityKSwhMD09PW8mJnMucHVzaChcInNlY3VyZVwiKSxkb2N1bWVudC5jb29raWU9cy5qb2luKFwiOyBcIil9LHJlYWQoZSl7Y29uc3QgdD1kb2N1bWVudC5jb29raWUubWF0Y2gobmV3IFJlZ0V4cChcIihefDtcXFxccyopKFwiK2UrXCIpPShbXjtdKilcIikpO3JldHVybiB0P2RlY29kZVVSSUNvbXBvbmVudCh0WzNdKTpudWxsfSxyZW1vdmUoZSl7dGhpcy53cml0ZShlLFwiXCIsRGF0ZS5ub3coKS04NjRlNSl9fTp7d3JpdGUoKXt9LHJlYWQ6KCk9Pm51bGwscmVtb3ZlKCl7fX07ZnVuY3Rpb24gTkkoZSx0KXtyZXR1cm4gZSYmIWZ1bmN0aW9uKGUpe3JldHVybi9eKFthLXpdW2EtelxcZCtcXC0uXSo6KT9cXC9cXC8vaS50ZXN0KGUpfSh0KT9mdW5jdGlvbihlLHQpe3JldHVybiB0P2UucmVwbGFjZSgvXFwvP1xcLyQvLFwiXCIpK1wiL1wiK3QucmVwbGFjZSgvXlxcLysvLFwiXCIpOmV9KGUsdCk6dH1mdW5jdGlvbiBESShlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9Y29uc3QgUEk9ZT0+ZSBpbnN0YW5jZW9mIGdJP2Z1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBpPW51bGwhPWFyZ3VtZW50c1t0XT9hcmd1bWVudHNbdF06e307dCUyP0RJKE9iamVjdChpKSwhMCkuZm9yRWFjaCgoZnVuY3Rpb24odCl7RmcoZSx0LGlbdF0pfSkpOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoaSkpOkRJKE9iamVjdChpKSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGksdCkpfSkpfXJldHVybiBlfSh7fSxlKTplO2Z1bmN0aW9uIExJKGUsdCl7dD10fHx7fTtjb25zdCBpPXt9O2Z1bmN0aW9uIG4oZSx0LGkpe3JldHVybiBNZi5pc1BsYWluT2JqZWN0KGUpJiZNZi5pc1BsYWluT2JqZWN0KHQpP01mLm1lcmdlLmNhbGwoe2Nhc2VsZXNzOml9LGUsdCk6TWYuaXNQbGFpbk9iamVjdCh0KT9NZi5tZXJnZSh7fSx0KTpNZi5pc0FycmF5KHQpP3Quc2xpY2UoKTp0fWZ1bmN0aW9uIHIoZSx0LGkpe3JldHVybiBNZi5pc1VuZGVmaW5lZCh0KT9NZi5pc1VuZGVmaW5lZChlKT92b2lkIDA6bih2b2lkIDAsZSxpKTpuKGUsdCxpKX1mdW5jdGlvbiBvKGUsdCl7aWYoIU1mLmlzVW5kZWZpbmVkKHQpKXJldHVybiBuKHZvaWQgMCx0KX1mdW5jdGlvbiBzKGUsdCl7cmV0dXJuIE1mLmlzVW5kZWZpbmVkKHQpP01mLmlzVW5kZWZpbmVkKGUpP3ZvaWQgMDpuKHZvaWQgMCxlKTpuKHZvaWQgMCx0KX1mdW5jdGlvbiBhKGkscixvKXtyZXR1cm4gbyBpbiB0P24oaSxyKTpvIGluIGU/bih2b2lkIDAsaSk6dm9pZCAwfWNvbnN0IGM9e3VybDpvLG1ldGhvZDpvLGRhdGE6byxiYXNlVVJMOnMsdHJhbnNmb3JtUmVxdWVzdDpzLHRyYW5zZm9ybVJlc3BvbnNlOnMscGFyYW1zU2VyaWFsaXplcjpzLHRpbWVvdXQ6cyx0aW1lb3V0TWVzc2FnZTpzLHdpdGhDcmVkZW50aWFsczpzLHdpdGhYU1JGVG9rZW46cyxhZGFwdGVyOnMscmVzcG9uc2VUeXBlOnMseHNyZkNvb2tpZU5hbWU6cyx4c3JmSGVhZGVyTmFtZTpzLG9uVXBsb2FkUHJvZ3Jlc3M6cyxvbkRvd25sb2FkUHJvZ3Jlc3M6cyxkZWNvbXByZXNzOnMsbWF4Q29udGVudExlbmd0aDpzLG1heEJvZHlMZW5ndGg6cyxiZWZvcmVSZWRpcmVjdDpzLHRyYW5zcG9ydDpzLGh0dHBBZ2VudDpzLGh0dHBzQWdlbnQ6cyxjYW5jZWxUb2tlbjpzLHNvY2tldFBhdGg6cyxyZXNwb25zZUVuY29kaW5nOnMsdmFsaWRhdGVTdGF0dXM6YSxoZWFkZXJzOihlLHQpPT5yKFBJKGUpLFBJKHQpLCEwKX07cmV0dXJuIE1mLmZvckVhY2goT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSxlLHQpKSwoZnVuY3Rpb24obil7Y29uc3Qgbz1jW25dfHxyLHM9byhlW25dLHRbbl0sbik7TWYuaXNVbmRlZmluZWQocykmJm8hPT1hfHwoaVtuXT1zKX0pKSxpfXZhciBrST1lPT57Y29uc3QgdD1MSSh7fSxlKTtsZXQgaSx7ZGF0YTpuLHdpdGhYU1JGVG9rZW46cix4c3JmSGVhZGVyTmFtZTpvLHhzcmZDb29raWVOYW1lOnMsaGVhZGVyczphLGF1dGg6Y309dDtpZih0LmhlYWRlcnM9YT1nSS5mcm9tKGEpLHQudXJsPXpmKE5JKHQuYmFzZVVSTCx0LnVybCksZS5wYXJhbXMsZS5wYXJhbXNTZXJpYWxpemVyKSxjJiZhLnNldChcIkF1dGhvcml6YXRpb25cIixcIkJhc2ljIFwiK2J0b2EoKGMudXNlcm5hbWV8fFwiXCIpK1wiOlwiKyhjLnBhc3N3b3JkP3VuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChjLnBhc3N3b3JkKSk6XCJcIikpKSxNZi5pc0Zvcm1EYXRhKG4pKWlmKF9DLmhhc1N0YW5kYXJkQnJvd3NlckVudnx8X0MuaGFzU3RhbmRhcmRCcm93c2VyV2ViV29ya2VyRW52KWEuc2V0Q29udGVudFR5cGUodm9pZCAwKTtlbHNlIGlmKCExIT09KGk9YS5nZXRDb250ZW50VHlwZSgpKSl7Y29uc3RbZSwuLi50XT1pP2kuc3BsaXQoXCI7XCIpLm1hcCgoZT0+anAoZSkuY2FsbChlKSkpLmZpbHRlcihCb29sZWFuKTpbXTthLnNldENvbnRlbnRUeXBlKFtlfHxcIm11bHRpcGFydC9mb3JtLWRhdGFcIiwuLi50XS5qb2luKFwiOyBcIikpfWlmKF9DLmhhc1N0YW5kYXJkQnJvd3NlckVudiYmKHImJk1mLmlzRnVuY3Rpb24ocikmJihyPXIodCkpLHJ8fCExIT09ciYmd0kodC51cmwpKSl7Y29uc3QgZT1vJiZzJiZPSS5yZWFkKHMpO2UmJmEuc2V0KG8sZSl9cmV0dXJuIHR9O3ZhciBNST1cInVuZGVmaW5lZFwiIT10eXBlb2YgWE1MSHR0cFJlcXVlc3QmJmZ1bmN0aW9uKGUpe3JldHVybiBuZXcgR2goKGZ1bmN0aW9uKHQsaSl7Y29uc3Qgbj1rSShlKTtsZXQgcj1uLmRhdGE7Y29uc3Qgbz1nSS5mcm9tKG4uaGVhZGVycykubm9ybWFsaXplKCk7bGV0IHMsYSxjLGQsbCx7cmVzcG9uc2VUeXBlOnUsb25VcGxvYWRQcm9ncmVzczpoLG9uRG93bmxvYWRQcm9ncmVzczpwfT1uO2Z1bmN0aW9uIF8oKXtkJiZkKCksbCYmbCgpLG4uY2FuY2VsVG9rZW4mJm4uY2FuY2VsVG9rZW4udW5zdWJzY3JpYmUocyksbi5zaWduYWwmJm4uc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLHMpfWxldCBFPW5ldyBYTUxIdHRwUmVxdWVzdDtmdW5jdGlvbiBmKCl7aWYoIUUpcmV0dXJuO2NvbnN0IG49Z0kuZnJvbShcImdldEFsbFJlc3BvbnNlSGVhZGVyc1wiaW4gRSYmRS5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSk7dkkoKGZ1bmN0aW9uKGUpe3QoZSksXygpfSksKGZ1bmN0aW9uKGUpe2koZSksXygpfSkse2RhdGE6dSYmXCJ0ZXh0XCIhPT11JiZcImpzb25cIiE9PXU/RS5yZXNwb25zZTpFLnJlc3BvbnNlVGV4dCxzdGF0dXM6RS5zdGF0dXMsc3RhdHVzVGV4dDpFLnN0YXR1c1RleHQsaGVhZGVyczpuLGNvbmZpZzplLHJlcXVlc3Q6RX0pLEU9bnVsbH1FLm9wZW4obi5tZXRob2QudG9VcHBlckNhc2UoKSxuLnVybCwhMCksRS50aW1lb3V0PW4udGltZW91dCxcIm9ubG9hZGVuZFwiaW4gRT9FLm9ubG9hZGVuZD1mOkUub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7RSYmND09PUUucmVhZHlTdGF0ZSYmKDAhPT1FLnN0YXR1c3x8RS5yZXNwb25zZVVSTCYmMD09PUUucmVzcG9uc2VVUkwuaW5kZXhPZihcImZpbGU6XCIpKSYmc2V0VGltZW91dChmKX0sRS5vbmFib3J0PWZ1bmN0aW9uKCl7RSYmKGkobmV3IFVmKFwiUmVxdWVzdCBhYm9ydGVkXCIsVWYuRUNPTk5BQk9SVEVELGUsRSkpLEU9bnVsbCl9LEUub25lcnJvcj1mdW5jdGlvbigpe2kobmV3IFVmKFwiTmV0d29yayBFcnJvclwiLFVmLkVSUl9ORVRXT1JLLGUsRSkpLEU9bnVsbH0sRS5vbnRpbWVvdXQ9ZnVuY3Rpb24oKXtsZXQgdD1uLnRpbWVvdXQ/XCJ0aW1lb3V0IG9mIFwiK24udGltZW91dCtcIm1zIGV4Y2VlZGVkXCI6XCJ0aW1lb3V0IGV4Y2VlZGVkXCI7Y29uc3Qgcj1uLnRyYW5zaXRpb25hbHx8WGY7bi50aW1lb3V0RXJyb3JNZXNzYWdlJiYodD1uLnRpbWVvdXRFcnJvck1lc3NhZ2UpLGkobmV3IFVmKHQsci5jbGFyaWZ5VGltZW91dEVycm9yP1VmLkVUSU1FRE9VVDpVZi5FQ09OTkFCT1JURUQsZSxFKSksRT1udWxsfSx2b2lkIDA9PT1yJiZvLnNldENvbnRlbnRUeXBlKG51bGwpLFwic2V0UmVxdWVzdEhlYWRlclwiaW4gRSYmTWYuZm9yRWFjaChvLnRvSlNPTigpLChmdW5jdGlvbihlLHQpe0Uuc2V0UmVxdWVzdEhlYWRlcih0LGUpfSkpLE1mLmlzVW5kZWZpbmVkKG4ud2l0aENyZWRlbnRpYWxzKXx8KEUud2l0aENyZWRlbnRpYWxzPSEhbi53aXRoQ3JlZGVudGlhbHMpLHUmJlwianNvblwiIT09dSYmKEUucmVzcG9uc2VUeXBlPW4ucmVzcG9uc2VUeXBlKSxwJiYoW2MsbF09eUkocCwhMCksRS5hZGRFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIixjKSksaCYmRS51cGxvYWQmJihbYSxkXT15SShoKSxFLnVwbG9hZC5hZGRFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIixhKSxFLnVwbG9hZC5hZGRFdmVudExpc3RlbmVyKFwibG9hZGVuZFwiLGQpKSwobi5jYW5jZWxUb2tlbnx8bi5zaWduYWwpJiYocz10PT57RSYmKGkoIXR8fHQudHlwZT9uZXcgSUkobnVsbCxlLEUpOnQpLEUuYWJvcnQoKSxFPW51bGwpfSxuLmNhbmNlbFRva2VuJiZuLmNhbmNlbFRva2VuLnN1YnNjcmliZShzKSxuLnNpZ25hbCYmKG4uc2lnbmFsLmFib3J0ZWQ/cygpOm4uc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLHMpKSk7Y29uc3QgbT1mdW5jdGlvbihlKXtjb25zdCB0PS9eKFstK1xcd117MSwyNX0pKDo/XFwvXFwvfDopLy5leGVjKGUpO3JldHVybiB0JiZ0WzFdfHxcIlwifShuLnVybCk7bSYmLTE9PT1fQy5wcm90b2NvbHMuaW5kZXhPZihtKT9pKG5ldyBVZihcIlVuc3VwcG9ydGVkIHByb3RvY29sIFwiK20rXCI6XCIsVWYuRVJSX0JBRF9SRVFVRVNULGUpKTpFLnNlbmQocnx8bnVsbCl9KSl9O3ZhciBVST0oZSx0KT0+e2NvbnN0e2xlbmd0aDppfT1lPWU/ZS5maWx0ZXIoQm9vbGVhbik6W107aWYodHx8aSl7bGV0IGksbj1uZXcgQWJvcnRDb250cm9sbGVyO2NvbnN0IHI9ZnVuY3Rpb24oZSl7aWYoIWkpe2k9ITAscygpO2NvbnN0IHQ9ZSBpbnN0YW5jZW9mIEVycm9yP2U6dGhpcy5yZWFzb247bi5hYm9ydCh0IGluc3RhbmNlb2YgVWY/dDpuZXcgSUkodCBpbnN0YW5jZW9mIEVycm9yP3QubWVzc2FnZTp0KSl9fTtsZXQgbz10JiZzZXRUaW1lb3V0KCgoKT0+e289bnVsbCxyKG5ldyBVZihcInRpbWVvdXQgXCIuY29uY2F0KHQsXCIgb2YgbXMgZXhjZWVkZWRcIiksVWYuRVRJTUVET1VUKSl9KSx0KTtjb25zdCBzPSgpPT57ZSYmKG8mJmNsZWFyVGltZW91dChvKSxvPW51bGwsZS5mb3JFYWNoKChlPT57ZS51bnN1YnNjcmliZT9lLnVuc3Vic2NyaWJlKHIpOmUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFib3J0XCIscil9KSksZT1udWxsKX07ZS5mb3JFYWNoKChlPT5lLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLHIpKSk7Y29uc3R7c2lnbmFsOmF9PW47cmV0dXJuIGEudW5zdWJzY3JpYmU9KCk9Pk1mLmFzYXAocyksYX19LHhJPWpoLFZJPVNsO3dpKHt0YXJnZXQ6XCJQcm9taXNlXCIsc3RhdDohMCxmb3JjZWQ6ITB9LHt3aXRoUmVzb2x2ZXJzOmZ1bmN0aW9uKCl7dmFyIGU9VkkuZih0aGlzKTtyZXR1cm57cHJvbWlzZTplLnByb21pc2UscmVzb2x2ZTplLnJlc29sdmUscmVqZWN0OmUucmVqZWN0fX19KTt2YXIgRkk9U2wsQkk9ZWw7d2koe3RhcmdldDpcIlByb21pc2VcIixzdGF0OiEwLGZvcmNlZDohMH0se3RyeTpmdW5jdGlvbihlKXt2YXIgdD1GSS5mKHRoaXMpLGk9QkkoZSk7cmV0dXJuKGkuZXJyb3I/dC5yZWplY3Q6dC5yZXNvbHZlKShpLnZhbHVlKSx0LnByb21pc2V9fSk7dmFyIGpJPWkoeEkpLEdJPVZtLmYoXCJhc3luY0l0ZXJhdG9yXCIpLFdJPWkoR0kpO2Z1bmN0aW9uIEhJKGUsdCl7dGhpcy52PWUsdGhpcy5rPXR9ZnVuY3Rpb24gS0koZSl7dmFyIHQsaTtmdW5jdGlvbiBuKHQsaSl7dHJ5e3ZhciBvPWVbdF0oaSkscz1vLnZhbHVlLGE9cyBpbnN0YW5jZW9mIEhJO2pJLnJlc29sdmUoYT9zLnY6cykudGhlbigoZnVuY3Rpb24oaSl7aWYoYSl7dmFyIGM9XCJyZXR1cm5cIj09PXQ/XCJyZXR1cm5cIjpcIm5leHRcIjtpZighcy5rfHxpLmRvbmUpcmV0dXJuIG4oYyxpKTtpPWVbY10oaSkudmFsdWV9cihvLmRvbmU/XCJyZXR1cm5cIjpcIm5vcm1hbFwiLGkpfSksKGZ1bmN0aW9uKGUpe24oXCJ0aHJvd1wiLGUpfSkpfWNhdGNoKGUpe3IoXCJ0aHJvd1wiLGUpfX1mdW5jdGlvbiByKGUscil7c3dpdGNoKGUpe2Nhc2VcInJldHVyblwiOnQucmVzb2x2ZSh7dmFsdWU6cixkb25lOiEwfSk7YnJlYWs7Y2FzZVwidGhyb3dcIjp0LnJlamVjdChyKTticmVhaztkZWZhdWx0OnQucmVzb2x2ZSh7dmFsdWU6cixkb25lOiExfSl9KHQ9dC5uZXh0KT9uKHQua2V5LHQuYXJnKTppPW51bGx9dGhpcy5faW52b2tlPWZ1bmN0aW9uKGUscil7cmV0dXJuIG5ldyBqSSgoZnVuY3Rpb24obyxzKXt2YXIgYT17a2V5OmUsYXJnOnIscmVzb2x2ZTpvLHJlamVjdDpzLG5leHQ6bnVsbH07aT9pPWkubmV4dD1hOih0PWk9YSxuKGUscikpfSkpfSxcImZ1bmN0aW9uXCIhPXR5cGVvZiBlLnJldHVybiYmKHRoaXMucmV0dXJuPXZvaWQgMCl9ZnVuY3Rpb24gWUkoZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBLSShlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9fWZ1bmN0aW9uIHFJKGUpe3JldHVybiBuZXcgSEkoZSwwKX1mdW5jdGlvbiB6SShlKXt2YXIgdD17fSxpPSExO2Z1bmN0aW9uIG4odCxuKXtyZXR1cm4gaT0hMCx7ZG9uZTohMSx2YWx1ZTpuZXcgSEkobj1uZXcgakkoKGZ1bmN0aW9uKGkpe2koZVt0XShuKSl9KSksMSl9fXJldHVybiB0W3ZvaWQgMCE9PWtnJiZNZ3x8XCJAQGl0ZXJhdG9yXCJdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LHQubmV4dD1mdW5jdGlvbihlKXtyZXR1cm4gaT8oaT0hMSxlKTpuKFwibmV4dFwiLGUpfSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLnRocm93JiYodC50aHJvdz1mdW5jdGlvbihlKXtpZihpKXRocm93IGk9ITEsZTtyZXR1cm4gbihcInRocm93XCIsZSl9KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLnJldHVybiYmKHQucmV0dXJuPWZ1bmN0aW9uKGUpe3JldHVybiBpPyhpPSExLGUpOm4oXCJyZXR1cm5cIixlKX0pLHR9S0kucHJvdG90eXBlW1wiZnVuY3Rpb25cIj09dHlwZW9mIGtnJiZXSXx8XCJAQGFzeW5jSXRlcmF0b3JcIl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sS0kucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2ludm9rZShcIm5leHRcIixlKX0sS0kucHJvdG90eXBlLnRocm93PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9pbnZva2UoXCJ0aHJvd1wiLGUpfSxLSS5wcm90b3R5cGUucmV0dXJuPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9pbnZva2UoXCJyZXR1cm5cIixlKX07dmFyIEpJPWkoR0kpO2Z1bmN0aW9uIFhJKGUpe3ZhciB0LGksbixyPTI7Zm9yKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJihpPUpJLG49U3ltYm9sLml0ZXJhdG9yKTtyLS07KXtpZihpJiZudWxsIT0odD1lW2ldKSlyZXR1cm4gdC5jYWxsKGUpO2lmKG4mJm51bGwhPSh0PWVbbl0pKXJldHVybiBuZXcgUUkodC5jYWxsKGUpKTtpPVwiQEBhc3luY0l0ZXJhdG9yXCIsbj1cIkBAaXRlcmF0b3JcIn10aHJvdyBuZXcgVHlwZUVycm9yKFwiT2JqZWN0IGlzIG5vdCBhc3luYyBpdGVyYWJsZVwiKX1mdW5jdGlvbiBRSShlKXtmdW5jdGlvbiB0KGUpe2lmKE9iamVjdChlKSE9PWUpcmV0dXJuIEdoLnJlamVjdChuZXcgVHlwZUVycm9yKGUrXCIgaXMgbm90IGFuIG9iamVjdC5cIikpO3ZhciB0PWUuZG9uZTtyZXR1cm4gR2gucmVzb2x2ZShlLnZhbHVlKS50aGVuKChmdW5jdGlvbihlKXtyZXR1cm57dmFsdWU6ZSxkb25lOnR9fSkpfXJldHVybiBRST1mdW5jdGlvbihlKXt0aGlzLnM9ZSx0aGlzLm49ZS5uZXh0fSxRSS5wcm90b3R5cGU9e3M6bnVsbCxuOm51bGwsbmV4dDpmdW5jdGlvbigpe3JldHVybiB0KHRoaXMubi5hcHBseSh0aGlzLnMsYXJndW1lbnRzKSl9LHJldHVybjpmdW5jdGlvbihlKXt2YXIgaT10aGlzLnMucmV0dXJuO3JldHVybiB2b2lkIDA9PT1pP0doLnJlc29sdmUoe3ZhbHVlOmUsZG9uZTohMH0pOnQoaS5hcHBseSh0aGlzLnMsYXJndW1lbnRzKSl9LHRocm93OmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMucy5yZXR1cm47cmV0dXJuIHZvaWQgMD09PWk/R2gucmVqZWN0KGUpOnQoaS5hcHBseSh0aGlzLnMsYXJndW1lbnRzKSl9fSxuZXcgUUkoZSl9Y29uc3QgWkk9ZnVuY3Rpb24qKGUsdCl7bGV0IGk9ZS5ieXRlTGVuZ3RoO2lmKCF0fHxpPHQpcmV0dXJuIHZvaWQoeWllbGQgZSk7bGV0IG4scj0wO2Zvcig7cjxpOyluPXIrdCx5aWVsZCBlLnNsaWNlKHIsbikscj1ufSwkST1mdW5jdGlvbigpe3ZhciBlPVlJKChmdW5jdGlvbiooZSx0KXt2YXIgaSxuPSExLHI9ITE7dHJ5e2Zvcih2YXIgbyxzPVhJKGV2KGUpKTtuPSEobz15aWVsZCBxSShzLm5leHQoKSkpLmRvbmU7bj0hMSl7Y29uc3QgZT1vLnZhbHVlO3lpZWxkKnpJKFhJKFpJKGUsdCkpKX19Y2F0Y2goZSl7cj0hMCxpPWV9ZmluYWxseXt0cnl7biYmbnVsbCE9cy5yZXR1cm4mJih5aWVsZCBxSShzLnJldHVybigpKSl9ZmluYWxseXtpZihyKXRocm93IGl9fX0pKTtyZXR1cm4gZnVuY3Rpb24odCxpKXtyZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSgpLGV2PWZ1bmN0aW9uKCl7dmFyIGU9WUkoKGZ1bmN0aW9uKihlKXtpZihlW0pJXSlyZXR1cm4gdm9pZCh5aWVsZCp6SShYSShlKSkpO2NvbnN0IHQ9ZS5nZXRSZWFkZXIoKTt0cnl7Zm9yKDs7KXtjb25zdHtkb25lOmUsdmFsdWU6aX09eWllbGQgcUkodC5yZWFkKCkpO2lmKGUpYnJlYWs7eWllbGQgaX19ZmluYWxseXt5aWVsZCBxSSh0LmNhbmNlbCgpKX19KSk7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19KCksdHY9KGUsdCxpLG4pPT57Y29uc3Qgcj0kSShlLHQpO2xldCBvLHM9MCxhPWU9PntvfHwobz0hMCxuJiZuKGUpKX07cmV0dXJuIG5ldyBSZWFkYWJsZVN0cmVhbSh7YXN5bmMgcHVsbChlKXt0cnl7Y29uc3R7ZG9uZTp0LHZhbHVlOm59PWF3YWl0IHIubmV4dCgpO2lmKHQpcmV0dXJuIGEoKSx2b2lkIGUuY2xvc2UoKTtsZXQgbz1uLmJ5dGVMZW5ndGg7aWYoaSl7bGV0IGU9cys9bztpKGUpfWUuZW5xdWV1ZShuZXcgVWludDhBcnJheShuKSl9Y2F0Y2goZSl7dGhyb3cgYShlKSxlfX0sY2FuY2VsOmU9PihhKGUpLHIucmV0dXJuKCkpfSx7aGlnaFdhdGVyTWFyazoyfSl9O2Z1bmN0aW9uIGl2KGUsdCl7dmFyIGk9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYobj1uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxpLnB1c2guYXBwbHkoaSxuKX1yZXR1cm4gaX1mdW5jdGlvbiBudihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgaT1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj9pdihPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0ZnKGUsdCxpW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGkpKTppdihPYmplY3QoaSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLHQpKX0pKX1yZXR1cm4gZX1jb25zdCBydj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBmZXRjaCYmXCJmdW5jdGlvblwiPT10eXBlb2YgUmVxdWVzdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgUmVzcG9uc2Usb3Y9cnYmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFJlYWRhYmxlU3RyZWFtLHN2PXJ2JiYoXCJmdW5jdGlvblwiPT10eXBlb2YgVGV4dEVuY29kZXI/KGF2PW5ldyBUZXh0RW5jb2RlcixlPT5hdi5lbmNvZGUoZSkpOmFzeW5jIGU9Pm5ldyBVaW50OEFycmF5KGF3YWl0IG5ldyBSZXNwb25zZShlKS5hcnJheUJ1ZmZlcigpKSk7dmFyIGF2O2NvbnN0IGN2PWZ1bmN0aW9uKGUpe3RyeXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxpPW5ldyBBcnJheSh0PjE/dC0xOjApLG49MTtuPHQ7bisrKWlbbi0xXT1hcmd1bWVudHNbbl07cmV0dXJuISFlKC4uLmkpfWNhdGNoKGUpe3JldHVybiExfX0sZHY9b3YmJmN2KCgoKT0+e2xldCBlPSExO2NvbnN0IHQ9bmV3IFJlcXVlc3QoX0Mub3JpZ2luLHtib2R5Om5ldyBSZWFkYWJsZVN0cmVhbSxtZXRob2Q6XCJQT1NUXCIsZ2V0IGR1cGxleCgpe3JldHVybiBlPSEwLFwiaGFsZlwifX0pLmhlYWRlcnMuaGFzKFwiQ29udGVudC1UeXBlXCIpO3JldHVybiBlJiYhdH0pKSxsdj1vdiYmY3YoKCgpPT5NZi5pc1JlYWRhYmxlU3RyZWFtKG5ldyBSZXNwb25zZShcIlwiKS5ib2R5KSkpLHV2PXtzdHJlYW06bHYmJihlPT5lLmJvZHkpfTt2YXIgaHY7cnYmJihodj1uZXcgUmVzcG9uc2UsW1widGV4dFwiLFwiYXJyYXlCdWZmZXJcIixcImJsb2JcIixcImZvcm1EYXRhXCIsXCJzdHJlYW1cIl0uZm9yRWFjaCgoZT0+eyF1dltlXSYmKHV2W2VdPU1mLmlzRnVuY3Rpb24oaHZbZV0pP3Q9PnRbZV0oKToodCxpKT0+e3Rocm93IG5ldyBVZihcIlJlc3BvbnNlIHR5cGUgJ1wiLmNvbmNhdChlLFwiJyBpcyBub3Qgc3VwcG9ydGVkXCIpLFVmLkVSUl9OT1RfU1VQUE9SVCxpKX0pfSkpKTtjb25zdCBwdj1hc3luYyhlLHQpPT57Y29uc3QgaT1NZi50b0Zpbml0ZU51bWJlcihlLmdldENvbnRlbnRMZW5ndGgoKSk7cmV0dXJuIG51bGw9PWk/KGFzeW5jIGU9PntpZihudWxsPT1lKXJldHVybiAwO2lmKE1mLmlzQmxvYihlKSlyZXR1cm4gZS5zaXplO2lmKE1mLmlzU3BlY0NvbXBsaWFudEZvcm0oZSkpe2NvbnN0IHQ9bmV3IFJlcXVlc3QoX0Mub3JpZ2luLHttZXRob2Q6XCJQT1NUXCIsYm9keTplfSk7cmV0dXJuKGF3YWl0IHQuYXJyYXlCdWZmZXIoKSkuYnl0ZUxlbmd0aH1yZXR1cm4gTWYuaXNBcnJheUJ1ZmZlclZpZXcoZSl8fE1mLmlzQXJyYXlCdWZmZXIoZSk/ZS5ieXRlTGVuZ3RoOihNZi5pc1VSTFNlYXJjaFBhcmFtcyhlKSYmKGUrPVwiXCIpLE1mLmlzU3RyaW5nKGUpPyhhd2FpdCBzdihlKSkuYnl0ZUxlbmd0aDp2b2lkIDApfSkodCk6aX07dmFyIF92PXJ2JiYoYXN5bmMgZT0+e2xldHt1cmw6dCxtZXRob2Q6aSxkYXRhOm4sc2lnbmFsOnIsY2FuY2VsVG9rZW46byx0aW1lb3V0OnMsb25Eb3dubG9hZFByb2dyZXNzOmEsb25VcGxvYWRQcm9ncmVzczpjLHJlc3BvbnNlVHlwZTpkLGhlYWRlcnM6bCx3aXRoQ3JlZGVudGlhbHM6dT1cInNhbWUtb3JpZ2luXCIsZmV0Y2hPcHRpb25zOmh9PWtJKGUpO2Q9ZD8oZCtcIlwiKS50b0xvd2VyQ2FzZSgpOlwidGV4dFwiO2xldCBwLF89VUkoW3IsbyYmby50b0Fib3J0U2lnbmFsKCldLHMpO2NvbnN0IEU9XyYmXy51bnN1YnNjcmliZSYmKCgpPT57Xy51bnN1YnNjcmliZSgpfSk7bGV0IGY7dHJ5e2lmKGMmJmR2JiZcImdldFwiIT09aSYmXCJoZWFkXCIhPT1pJiYwIT09KGY9YXdhaXQgcHYobCxuKSkpe2xldCBlLGk9bmV3IFJlcXVlc3QodCx7bWV0aG9kOlwiUE9TVFwiLGJvZHk6bixkdXBsZXg6XCJoYWxmXCJ9KTtpZihNZi5pc0Zvcm1EYXRhKG4pJiYoZT1pLmhlYWRlcnMuZ2V0KFwiY29udGVudC10eXBlXCIpKSYmbC5zZXRDb250ZW50VHlwZShlKSxpLmJvZHkpe2NvbnN0W2UsdF09QUkoZix5SShiSShjKSkpO249dHYoaS5ib2R5LDY1NTM2LGUsdCl9fU1mLmlzU3RyaW5nKHUpfHwodT11P1wiaW5jbHVkZVwiOlwib21pdFwiKTtjb25zdCByPVwiY3JlZGVudGlhbHNcImluIFJlcXVlc3QucHJvdG90eXBlO3A9bmV3IFJlcXVlc3QodCxudihudih7fSxoKSx7fSx7c2lnbmFsOl8sbWV0aG9kOmkudG9VcHBlckNhc2UoKSxoZWFkZXJzOmwubm9ybWFsaXplKCkudG9KU09OKCksYm9keTpuLGR1cGxleDpcImhhbGZcIixjcmVkZW50aWFsczpyP3U6dm9pZCAwfSkpO2xldCBvPWF3YWl0IGZldGNoKHApO2NvbnN0IHM9bHYmJihcInN0cmVhbVwiPT09ZHx8XCJyZXNwb25zZVwiPT09ZCk7aWYobHYmJihhfHxzJiZFKSl7Y29uc3QgZT17fTtbXCJzdGF0dXNcIixcInN0YXR1c1RleHRcIixcImhlYWRlcnNcIl0uZm9yRWFjaCgodD0+e2VbdF09b1t0XX0pKTtjb25zdCB0PU1mLnRvRmluaXRlTnVtYmVyKG8uaGVhZGVycy5nZXQoXCJjb250ZW50LWxlbmd0aFwiKSksW2ksbl09YSYmQUkodCx5SShiSShhKSwhMCkpfHxbXTtvPW5ldyBSZXNwb25zZSh0dihvLmJvZHksNjU1MzYsaSwoKCk9PntuJiZuKCksRSYmRSgpfSkpLGUpfWQ9ZHx8XCJ0ZXh0XCI7bGV0IG09YXdhaXQgdXZbTWYuZmluZEtleSh1dixkKXx8XCJ0ZXh0XCJdKG8sZSk7cmV0dXJuIXMmJkUmJkUoKSxhd2FpdCBuZXcgR2goKCh0LGkpPT57dkkodCxpLHtkYXRhOm0saGVhZGVyczpnSS5mcm9tKG8uaGVhZGVycyksc3RhdHVzOm8uc3RhdHVzLHN0YXR1c1RleHQ6by5zdGF0dXNUZXh0LGNvbmZpZzplLHJlcXVlc3Q6cH0pfSkpfWNhdGNoKHQpe2lmKEUmJkUoKSx0JiZcIlR5cGVFcnJvclwiPT09dC5uYW1lJiYvZmV0Y2gvaS50ZXN0KHQubWVzc2FnZSkpdGhyb3cgT2JqZWN0LmFzc2lnbihuZXcgVWYoXCJOZXR3b3JrIEVycm9yXCIsVWYuRVJSX05FVFdPUkssZSxwKSx7Y2F1c2U6dC5jYXVzZXx8dH0pO3Rocm93IFVmLmZyb20odCx0JiZ0LmNvZGUsZSxwKX19KTtjb25zdCBFdj17aHR0cDpudWxsLHhocjpNSSxmZXRjaDpfdn07TWYuZm9yRWFjaChFdiwoKGUsdCk9PntpZihlKXt0cnl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJuYW1lXCIse3ZhbHVlOnR9KX1jYXRjaChlKXt9T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJhZGFwdGVyTmFtZVwiLHt2YWx1ZTp0fSl9fSkpO2NvbnN0IGZ2PWU9PlwiLSBcIi5jb25jYXQoZSksbXY9ZT0+TWYuaXNGdW5jdGlvbihlKXx8bnVsbD09PWV8fCExPT09ZTt2YXIgVHY9e2dldEFkYXB0ZXI6ZT0+e2U9TWYuaXNBcnJheShlKT9lOltlXTtjb25zdHtsZW5ndGg6dH09ZTtsZXQgaSxuO2NvbnN0IHI9e307Zm9yKGxldCBvPTA7bzx0O28rKyl7bGV0IHQ7aWYoaT1lW29dLG49aSwhbXYoaSkmJihuPUV2Wyh0PVN0cmluZyhpKSkudG9Mb3dlckNhc2UoKV0sdm9pZCAwPT09bikpdGhyb3cgbmV3IFVmKFwiVW5rbm93biBhZGFwdGVyICdcIi5jb25jYXQodCxcIidcIikpO2lmKG4pYnJlYWs7clt0fHxcIiNcIitvXT1ufWlmKCFuKXtjb25zdCBlPU9iamVjdC5lbnRyaWVzKHIpLm1hcCgoZT0+e2xldFt0LGldPWU7cmV0dXJuXCJhZGFwdGVyIFwiLmNvbmNhdCh0LFwiIFwiKSsoITE9PT1pP1wiaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgZW52aXJvbm1lbnRcIjpcImlzIG5vdCBhdmFpbGFibGUgaW4gdGhlIGJ1aWxkXCIpfSkpO3Rocm93IG5ldyBVZihcIlRoZXJlIGlzIG5vIHN1aXRhYmxlIGFkYXB0ZXIgdG8gZGlzcGF0Y2ggdGhlIHJlcXVlc3QgXCIrKHQ/ZS5sZW5ndGg+MT9cInNpbmNlIDpcXG5cIitlLm1hcChmdikuam9pbihcIlxcblwiKTpcIiBcIitmdihlWzBdKTpcImFzIG5vIGFkYXB0ZXIgc3BlY2lmaWVkXCIpLFwiRVJSX05PVF9TVVBQT1JUXCIpfXJldHVybiBufSxhZGFwdGVyczpFdn07ZnVuY3Rpb24gU3YoZSl7aWYoZS5jYW5jZWxUb2tlbiYmZS5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCksZS5zaWduYWwmJmUuc2lnbmFsLmFib3J0ZWQpdGhyb3cgbmV3IElJKG51bGwsZSl9ZnVuY3Rpb24gZ3YoZSl7U3YoZSksZS5oZWFkZXJzPWdJLmZyb20oZS5oZWFkZXJzKSxlLmRhdGE9UkkuY2FsbChlLGUudHJhbnNmb3JtUmVxdWVzdCksLTEhPT1bXCJwb3N0XCIsXCJwdXRcIixcInBhdGNoXCJdLmluZGV4T2YoZS5tZXRob2QpJiZlLmhlYWRlcnMuc2V0Q29udGVudFR5cGUoXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIiwhMSk7cmV0dXJuIFR2LmdldEFkYXB0ZXIoZS5hZGFwdGVyfHxwSS5hZGFwdGVyKShlKS50aGVuKChmdW5jdGlvbih0KXtyZXR1cm4gU3YoZSksdC5kYXRhPVJJLmNhbGwoZSxlLnRyYW5zZm9ybVJlc3BvbnNlLHQpLHQuaGVhZGVycz1nSS5mcm9tKHQuaGVhZGVycyksdH0pLChmdW5jdGlvbih0KXtyZXR1cm4gQ0kodCl8fChTdihlKSx0JiZ0LnJlc3BvbnNlJiYodC5yZXNwb25zZS5kYXRhPVJJLmNhbGwoZSxlLnRyYW5zZm9ybVJlc3BvbnNlLHQucmVzcG9uc2UpLHQucmVzcG9uc2UuaGVhZGVycz1nSS5mcm9tKHQucmVzcG9uc2UuaGVhZGVycykpKSxHaC5yZWplY3QodCl9KSl9Y29uc3QgUnY9XCIxLjcuN1wiLEN2PXt9O1tcIm9iamVjdFwiLFwiYm9vbGVhblwiLFwibnVtYmVyXCIsXCJmdW5jdGlvblwiLFwic3RyaW5nXCIsXCJzeW1ib2xcIl0uZm9yRWFjaCgoKGUsdCk9PntDdltlXT1mdW5jdGlvbihpKXtyZXR1cm4gdHlwZW9mIGk9PT1lfHxcImFcIisodDwxP1wibiBcIjpcIiBcIikrZX19KSk7Y29uc3QgSXY9e307Q3YudHJhbnNpdGlvbmFsPWZ1bmN0aW9uKGUsdCxpKXtmdW5jdGlvbiBuKGUsdCl7cmV0dXJuXCJbQXhpb3MgdlwiK1J2K1wiXSBUcmFuc2l0aW9uYWwgb3B0aW9uICdcIitlK1wiJ1wiK3QrKGk/XCIuIFwiK2k6XCJcIil9cmV0dXJuKGkscixvKT0+e2lmKCExPT09ZSl0aHJvdyBuZXcgVWYobihyLFwiIGhhcyBiZWVuIHJlbW92ZWRcIisodD9cIiBpbiBcIit0OlwiXCIpKSxVZi5FUlJfREVQUkVDQVRFRCk7cmV0dXJuIHQmJiFJdltyXSYmKEl2W3JdPSEwLGNvbnNvbGUud2FybihuKHIsXCIgaGFzIGJlZW4gZGVwcmVjYXRlZCBzaW5jZSB2XCIrdCtcIiBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZWFyIGZ1dHVyZVwiKSkpLCFlfHxlKGkscixvKX19O3ZhciB2dj17YXNzZXJ0T3B0aW9uczpmdW5jdGlvbihlLHQsaSl7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFVmKFwib3B0aW9ucyBtdXN0IGJlIGFuIG9iamVjdFwiLFVmLkVSUl9CQURfT1BUSU9OX1ZBTFVFKTtjb25zdCBuPU9iamVjdC5rZXlzKGUpO2xldCByPW4ubGVuZ3RoO2Zvcig7ci0tID4wOyl7Y29uc3Qgbz1uW3JdLHM9dFtvXTtpZihzKXtjb25zdCB0PWVbb10saT12b2lkIDA9PT10fHxzKHQsbyxlKTtpZighMCE9PWkpdGhyb3cgbmV3IFVmKFwib3B0aW9uIFwiK28rXCIgbXVzdCBiZSBcIitpLFVmLkVSUl9CQURfT1BUSU9OX1ZBTFVFKX1lbHNlIGlmKCEwIT09aSl0aHJvdyBuZXcgVWYoXCJVbmtub3duIG9wdGlvbiBcIitvLFVmLkVSUl9CQURfT1BUSU9OKX19LHZhbGlkYXRvcnM6Q3Z9O2NvbnN0IHl2PXZ2LnZhbGlkYXRvcnM7bGV0IEF2PWNsYXNze2NvbnN0cnVjdG9yKGUpe3RoaXMuZGVmYXVsdHM9ZSx0aGlzLmludGVyY2VwdG9ycz17cmVxdWVzdDpuZXcgSmYscmVzcG9uc2U6bmV3IEpmfX1hc3luYyByZXF1ZXN0KGUsdCl7dHJ5e3JldHVybiBhd2FpdCB0aGlzLl9yZXF1ZXN0KGUsdCl9Y2F0Y2goZSl7aWYoZSBpbnN0YW5jZW9mIEVycm9yKXtsZXQgdDtFcnJvci5jYXB0dXJlU3RhY2tUcmFjZT9FcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0PXt9KTp0PW5ldyBFcnJvcjtjb25zdCBpPXQuc3RhY2s/dC5zdGFjay5yZXBsYWNlKC9eLitcXG4vLFwiXCIpOlwiXCI7dHJ5e2Uuc3RhY2s/aSYmIVN0cmluZyhlLnN0YWNrKS5lbmRzV2l0aChpLnJlcGxhY2UoL14uK1xcbi4rXFxuLyxcIlwiKSkmJihlLnN0YWNrKz1cIlxcblwiK2kpOmUuc3RhY2s9aX1jYXRjaChlKXt9fXRocm93IGV9fV9yZXF1ZXN0KGUsdCl7XCJzdHJpbmdcIj09dHlwZW9mIGU/KHQ9dHx8e30pLnVybD1lOnQ9ZXx8e30sdD1MSSh0aGlzLmRlZmF1bHRzLHQpO2NvbnN0e3RyYW5zaXRpb25hbDppLHBhcmFtc1NlcmlhbGl6ZXI6bixoZWFkZXJzOnJ9PXQ7dm9pZCAwIT09aSYmdnYuYXNzZXJ0T3B0aW9ucyhpLHtzaWxlbnRKU09OUGFyc2luZzp5di50cmFuc2l0aW9uYWwoeXYuYm9vbGVhbiksZm9yY2VkSlNPTlBhcnNpbmc6eXYudHJhbnNpdGlvbmFsKHl2LmJvb2xlYW4pLGNsYXJpZnlUaW1lb3V0RXJyb3I6eXYudHJhbnNpdGlvbmFsKHl2LmJvb2xlYW4pfSwhMSksbnVsbCE9biYmKE1mLmlzRnVuY3Rpb24obik/dC5wYXJhbXNTZXJpYWxpemVyPXtzZXJpYWxpemU6bn06dnYuYXNzZXJ0T3B0aW9ucyhuLHtlbmNvZGU6eXYuZnVuY3Rpb24sc2VyaWFsaXplOnl2LmZ1bmN0aW9ufSwhMCkpLHQubWV0aG9kPSh0Lm1ldGhvZHx8dGhpcy5kZWZhdWx0cy5tZXRob2R8fFwiZ2V0XCIpLnRvTG93ZXJDYXNlKCk7bGV0IG89ciYmTWYubWVyZ2Uoci5jb21tb24sclt0Lm1ldGhvZF0pO3ImJk1mLmZvckVhY2goW1wiZGVsZXRlXCIsXCJnZXRcIixcImhlYWRcIixcInBvc3RcIixcInB1dFwiLFwicGF0Y2hcIixcImNvbW1vblwiXSwoZT0+e2RlbGV0ZSByW2VdfSkpLHQuaGVhZGVycz1nSS5jb25jYXQobyxyKTtjb25zdCBzPVtdO2xldCBhPSEwO3RoaXMuaW50ZXJjZXB0b3JzLnJlcXVlc3QuZm9yRWFjaCgoZnVuY3Rpb24oZSl7XCJmdW5jdGlvblwiPT10eXBlb2YgZS5ydW5XaGVuJiYhMT09PWUucnVuV2hlbih0KXx8KGE9YSYmZS5zeW5jaHJvbm91cyxzLnVuc2hpZnQoZS5mdWxmaWxsZWQsZS5yZWplY3RlZCkpfSkpO2NvbnN0IGM9W107bGV0IGQ7dGhpcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UuZm9yRWFjaCgoZnVuY3Rpb24oZSl7Yy5wdXNoKGUuZnVsZmlsbGVkLGUucmVqZWN0ZWQpfSkpO2xldCBsLHU9MDtpZighYSl7Y29uc3QgZT1bZ3YuYmluZCh0aGlzKSx2b2lkIDBdO2ZvcihlLnVuc2hpZnQuYXBwbHkoZSxzKSxlLnB1c2guYXBwbHkoZSxjKSxsPWUubGVuZ3RoLGQ9R2gucmVzb2x2ZSh0KTt1PGw7KWQ9ZC50aGVuKGVbdSsrXSxlW3UrK10pO3JldHVybiBkfWw9cy5sZW5ndGg7bGV0IGg9dDtmb3IodT0wO3U8bDspe2NvbnN0IGU9c1t1KytdLHQ9c1t1KytdO3RyeXtoPWUoaCl9Y2F0Y2goZSl7dC5jYWxsKHRoaXMsZSk7YnJlYWt9fXRyeXtkPWd2LmNhbGwodGhpcyxoKX1jYXRjaChlKXtyZXR1cm4gR2gucmVqZWN0KGUpfWZvcih1PTAsbD1jLmxlbmd0aDt1PGw7KWQ9ZC50aGVuKGNbdSsrXSxjW3UrK10pO3JldHVybiBkfWdldFVyaShlKXtyZXR1cm4gemYoTkkoKGU9TEkodGhpcy5kZWZhdWx0cyxlKSkuYmFzZVVSTCxlLnVybCksZS5wYXJhbXMsZS5wYXJhbXNTZXJpYWxpemVyKX19O01mLmZvckVhY2goW1wiZGVsZXRlXCIsXCJnZXRcIixcImhlYWRcIixcIm9wdGlvbnNcIl0sKGZ1bmN0aW9uKGUpe0F2LnByb3RvdHlwZVtlXT1mdW5jdGlvbih0LGkpe3JldHVybiB0aGlzLnJlcXVlc3QoTEkoaXx8e30se21ldGhvZDplLHVybDp0LGRhdGE6KGl8fHt9KS5kYXRhfSkpfX0pKSxNZi5mb3JFYWNoKFtcInBvc3RcIixcInB1dFwiLFwicGF0Y2hcIl0sKGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCl7cmV0dXJuIGZ1bmN0aW9uKGksbixyKXtyZXR1cm4gdGhpcy5yZXF1ZXN0KExJKHJ8fHt9LHttZXRob2Q6ZSxoZWFkZXJzOnQ/e1wiQ29udGVudC1UeXBlXCI6XCJtdWx0aXBhcnQvZm9ybS1kYXRhXCJ9Ont9LHVybDppLGRhdGE6bn0pKX19QXYucHJvdG90eXBlW2VdPXQoKSxBdi5wcm90b3R5cGVbZStcIkZvcm1cIl09dCghMCl9KSk7dmFyIGJ2PUF2O2NsYXNzIHd2e2NvbnN0cnVjdG9yKGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcihcImV4ZWN1dG9yIG11c3QgYmUgYSBmdW5jdGlvbi5cIik7bGV0IHQ7dGhpcy5wcm9taXNlPW5ldyBHaCgoZnVuY3Rpb24oZSl7dD1lfSkpO2NvbnN0IGk9dGhpczt0aGlzLnByb21pc2UudGhlbigoZT0+e2lmKCFpLl9saXN0ZW5lcnMpcmV0dXJuO2xldCB0PWkuX2xpc3RlbmVycy5sZW5ndGg7Zm9yKDt0LS0gPjA7KWkuX2xpc3RlbmVyc1t0XShlKTtpLl9saXN0ZW5lcnM9bnVsbH0pKSx0aGlzLnByb21pc2UudGhlbj1lPT57bGV0IHQ7Y29uc3Qgbj1uZXcgR2goKGU9PntpLnN1YnNjcmliZShlKSx0PWV9KSkudGhlbihlKTtyZXR1cm4gbi5jYW5jZWw9ZnVuY3Rpb24oKXtpLnVuc3Vic2NyaWJlKHQpfSxufSxlKChmdW5jdGlvbihlLG4scil7aS5yZWFzb258fChpLnJlYXNvbj1uZXcgSUkoZSxuLHIpLHQoaS5yZWFzb24pKX0pKX10aHJvd0lmUmVxdWVzdGVkKCl7aWYodGhpcy5yZWFzb24pdGhyb3cgdGhpcy5yZWFzb259c3Vic2NyaWJlKGUpe3RoaXMucmVhc29uP2UodGhpcy5yZWFzb24pOnRoaXMuX2xpc3RlbmVycz90aGlzLl9saXN0ZW5lcnMucHVzaChlKTp0aGlzLl9saXN0ZW5lcnM9W2VdfXVuc3Vic2NyaWJlKGUpe2lmKCF0aGlzLl9saXN0ZW5lcnMpcmV0dXJuO2NvbnN0IHQ9dGhpcy5fbGlzdGVuZXJzLmluZGV4T2YoZSk7LTEhPT10JiZ0aGlzLl9saXN0ZW5lcnMuc3BsaWNlKHQsMSl9dG9BYm9ydFNpZ25hbCgpe2NvbnN0IGU9bmV3IEFib3J0Q29udHJvbGxlcix0PXQ9PntlLmFib3J0KHQpfTtyZXR1cm4gdGhpcy5zdWJzY3JpYmUodCksZS5zaWduYWwudW5zdWJzY3JpYmU9KCk9PnRoaXMudW5zdWJzY3JpYmUodCksZS5zaWduYWx9c3RhdGljIHNvdXJjZSgpe2xldCBlO3JldHVybnt0b2tlbjpuZXcgd3YoKGZ1bmN0aW9uKHQpe2U9dH0pKSxjYW5jZWw6ZX19fXZhciBPdj13djtjb25zdCBOdj17Q29udGludWU6MTAwLFN3aXRjaGluZ1Byb3RvY29sczoxMDEsUHJvY2Vzc2luZzoxMDIsRWFybHlIaW50czoxMDMsT2s6MjAwLENyZWF0ZWQ6MjAxLEFjY2VwdGVkOjIwMixOb25BdXRob3JpdGF0aXZlSW5mb3JtYXRpb246MjAzLE5vQ29udGVudDoyMDQsUmVzZXRDb250ZW50OjIwNSxQYXJ0aWFsQ29udGVudDoyMDYsTXVsdGlTdGF0dXM6MjA3LEFscmVhZHlSZXBvcnRlZDoyMDgsSW1Vc2VkOjIyNixNdWx0aXBsZUNob2ljZXM6MzAwLE1vdmVkUGVybWFuZW50bHk6MzAxLEZvdW5kOjMwMixTZWVPdGhlcjozMDMsTm90TW9kaWZpZWQ6MzA0LFVzZVByb3h5OjMwNSxVbnVzZWQ6MzA2LFRlbXBvcmFyeVJlZGlyZWN0OjMwNyxQZXJtYW5lbnRSZWRpcmVjdDozMDgsQmFkUmVxdWVzdDo0MDAsVW5hdXRob3JpemVkOjQwMSxQYXltZW50UmVxdWlyZWQ6NDAyLEZvcmJpZGRlbjo0MDMsTm90Rm91bmQ6NDA0LE1ldGhvZE5vdEFsbG93ZWQ6NDA1LE5vdEFjY2VwdGFibGU6NDA2LFByb3h5QXV0aGVudGljYXRpb25SZXF1aXJlZDo0MDcsUmVxdWVzdFRpbWVvdXQ6NDA4LENvbmZsaWN0OjQwOSxHb25lOjQxMCxMZW5ndGhSZXF1aXJlZDo0MTEsUHJlY29uZGl0aW9uRmFpbGVkOjQxMixQYXlsb2FkVG9vTGFyZ2U6NDEzLFVyaVRvb0xvbmc6NDE0LFVuc3VwcG9ydGVkTWVkaWFUeXBlOjQxNSxSYW5nZU5vdFNhdGlzZmlhYmxlOjQxNixFeHBlY3RhdGlvbkZhaWxlZDo0MTcsSW1BVGVhcG90OjQxOCxNaXNkaXJlY3RlZFJlcXVlc3Q6NDIxLFVucHJvY2Vzc2FibGVFbnRpdHk6NDIyLExvY2tlZDo0MjMsRmFpbGVkRGVwZW5kZW5jeTo0MjQsVG9vRWFybHk6NDI1LFVwZ3JhZGVSZXF1aXJlZDo0MjYsUHJlY29uZGl0aW9uUmVxdWlyZWQ6NDI4LFRvb01hbnlSZXF1ZXN0czo0MjksUmVxdWVzdEhlYWRlckZpZWxkc1Rvb0xhcmdlOjQzMSxVbmF2YWlsYWJsZUZvckxlZ2FsUmVhc29uczo0NTEsSW50ZXJuYWxTZXJ2ZXJFcnJvcjo1MDAsTm90SW1wbGVtZW50ZWQ6NTAxLEJhZEdhdGV3YXk6NTAyLFNlcnZpY2VVbmF2YWlsYWJsZTo1MDMsR2F0ZXdheVRpbWVvdXQ6NTA0LEh0dHBWZXJzaW9uTm90U3VwcG9ydGVkOjUwNSxWYXJpYW50QWxzb05lZ290aWF0ZXM6NTA2LEluc3VmZmljaWVudFN0b3JhZ2U6NTA3LExvb3BEZXRlY3RlZDo1MDgsTm90RXh0ZW5kZWQ6NTEwLE5ldHdvcmtBdXRoZW50aWNhdGlvblJlcXVpcmVkOjUxMX07T2JqZWN0LmVudHJpZXMoTnYpLmZvckVhY2goKGU9PntsZXRbdCxpXT1lO052W2ldPXR9KSk7dmFyIER2PU52O2NvbnN0IFB2PWZ1bmN0aW9uIGUodCl7Y29uc3QgaT1uZXcgYnYodCksbj1IRShidi5wcm90b3R5cGUucmVxdWVzdCxpKTtyZXR1cm4gTWYuZXh0ZW5kKG4sYnYucHJvdG90eXBlLGkse2FsbE93bktleXM6ITB9KSxNZi5leHRlbmQobixpLG51bGwse2FsbE93bktleXM6ITB9KSxuLmNyZWF0ZT1mdW5jdGlvbihpKXtyZXR1cm4gZShMSSh0LGkpKX0sbn0ocEkpO1B2LkF4aW9zPWJ2LFB2LkNhbmNlbGVkRXJyb3I9SUksUHYuQ2FuY2VsVG9rZW49T3YsUHYuaXNDYW5jZWw9Q0ksUHYuVkVSU0lPTj1SdixQdi50b0Zvcm1EYXRhPVdmLFB2LkF4aW9zRXJyb3I9VWYsUHYuQ2FuY2VsPVB2LkNhbmNlbGVkRXJyb3IsUHYuYWxsPWZ1bmN0aW9uKGUpe3JldHVybiBHaC5hbGwoZSl9LFB2LnNwcmVhZD1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIGUuYXBwbHkobnVsbCx0KX19LFB2LmlzQXhpb3NFcnJvcj1mdW5jdGlvbihlKXtyZXR1cm4gTWYuaXNPYmplY3QoZSkmJiEwPT09ZS5pc0F4aW9zRXJyb3J9LFB2Lm1lcmdlQ29uZmlnPUxJLFB2LkF4aW9zSGVhZGVycz1nSSxQdi5mb3JtVG9KU09OPWU9PnVJKE1mLmlzSFRNTEZvcm0oZSk/bmV3IEZvcm1EYXRhKGUpOmUpLFB2LmdldEFkYXB0ZXI9VHYuZ2V0QWRhcHRlcixQdi5IdHRwU3RhdHVzQ29kZT1EdixQdi5kZWZhdWx0PVB2O3ZhciBMdj1Qdjtjb25zdCBrdj0oKT0+e307ZnVuY3Rpb24gTXYoKXtjb25zdCBlPXtwcm9taXNlOnZvaWQgMCxpc1Jlc29sdmVkOiExLGlzUmVqZWN0ZWQ6ITEsaXNGaW5pc2hlZDohMSxyZXNvbHZlOnZvaWQgMCxyZWplY3Q6dm9pZCAwLGNhbmNlbDprdn07cmV0dXJuIGUucHJvbWlzZT1uZXcgR2goKCh0LGkpPT57ZS5yZXNvbHZlPWk9PntlLmlzRmluaXNoZWR8fChlLmlzUmVzb2x2ZWQ9ITAsZS5pc0ZpbmlzaGVkPSEwLHQoaSksZS52YWx1ZT1pKX0sZS5yZWplY3Q9dD0+e2UuaXNGaW5pc2hlZHx8KGUuaXNSZWplY3RlZD0hMCxlLmlzRmluaXNoZWQ9ITAsaSh0KSl9fSkpLGV9Y29uc3QgVXY9bmV3IE1hcCx4dj1uZXcgTWFwLFZ2PW5ldyBNYXA7bGV0IEZ2PWZ1bmN0aW9uKGUpe3JldHVybiBlLldJTl8xMD1cIldpbmRvd3MgMTBcIixlLldJTl84MT1cIldpbmRvd3MgOC4xXCIsZS5XSU5fOD1cIldpbmRvd3MgOFwiLGUuV0lOXzc9XCJXaW5kb3dzIDdcIixlLldJTl9WSVNUQT1cIldpbmRvd3MgVmlzdGFcIixlLldJTl9TRVJWRVJfMjAwMz1cIldpbmRvd3MgU2VydmVyIDIwMDNcIixlLldJTl9YUD1cIldpbmRvd3MgWFBcIixlLldJTl8yMDAwPVwiV2luZG93cyAyMDAwXCIsZS5BTkRST0lEPVwiQW5kcm9pZFwiLGUuSEFSTU9OWV9PUz1cIkhhcm1vbnlPU1wiLGUuT1BFTl9CU0Q9XCJPcGVuIEJTRFwiLGUuU1VOX09TPVwiU3VuIE9TXCIsZS5MSU5VWD1cIkxpbnV4XCIsZS5JT1M9XCJpT1NcIixlLk1BQ19PUz1cIk1hYyBPU1wiLGUuQ0hST01JVU1fT1M9XCJDaHJvbWl1bSBPU1wiLGUuUU5YPVwiUU5YXCIsZS5VTklYPVwiVU5JWFwiLGUuQkVPUz1cIkJlT1NcIixlLk9TXzI9XCJPUy8yXCIsZS5TRUFSQ0hfQk9UPVwiU2VhcmNoIEJvdFwiLGV9KHt9KSxCdj1mdW5jdGlvbihlKXtyZXR1cm4gZS5DSFJPTUU9XCJDaHJvbWVcIixlLlNBRkFSST1cIlNhZmFyaVwiLGUuRURHRT1cIkVkZ2VcIixlLkZJUkVGT1g9XCJGaXJlZm94XCIsZS5PUEVSQT1cIk9QUlwiLGUuUVE9XCJRUUJyb3dzZXJcIixlLldFQ0hBVD1cIk1pY3JvTWVzc2VuZ2VyXCIsZX0oe30pO2NvbnN0IGp2PW5ldyBkRTtsZXQgR3Y9anYuZ2V0UmVzdWx0KCksV3Y9bnVsbDtmdW5jdGlvbiBIdihlKXtpZighV3Ype2UmJmp2LnNldFVBKGUpLEd2PWp2LmdldFJlc3VsdCgpO2NvbnN0IHQ9ZnVuY3Rpb24oZSl7aWYoXCJCbGlua1wiPT09ZS5lbmdpbmUubmFtZSYmXCJXZUNoYXRcIiE9PWUuYnJvd3Nlci5uYW1lKXJldHVybiBCdi5DSFJPTUU7c3dpdGNoKGUuYnJvd3Nlci5uYW1lKXtjYXNlXCJDaHJvbWUgSGVhZGxlc3NcIjpjYXNlXCJDaHJvbWVcIjpjYXNlXCJDaHJvbWl1bVwiOnJldHVybiBCdi5DSFJPTUU7Y2FzZVwiU2FmYXJpXCI6Y2FzZVwiTW9iaWxlIFNhZmFyaVwiOnJldHVybiBCdi5TQUZBUkk7Y2FzZVwiRWRnZVwiOnJldHVybiBCdi5FREdFO2Nhc2VcIkZpcmVmb3hcIjpyZXR1cm4gQnYuRklSRUZPWDtjYXNlXCJRUVwiOmNhc2VcIlFRQnJvd3NlclwiOnJldHVybiBCdi5RUTtjYXNlXCJPcGVyYVwiOnJldHVybiBCdi5PUEVSQTtjYXNlXCJXZUNoYXRcIjpyZXR1cm4gQnYuV0VDSEFUO2RlZmF1bHQ6cmV0dXJuIGUuYnJvd3Nlci5uYW1lfHxcIlwifX0oR3YpLGk9S3YoR3YpLG49ZnVuY3Rpb24oZSl7cmV0dXJuXCJXaW5kb3dzXCI9PT1lLm9zLm5hbWU/ZS5vcy52ZXJzaW9uP2Uub3MubmFtZStcIiBcIitlLm9zLnZlcnNpb246ZS5vcy5uYW1lOmUub3MubmFtZXx8XCJcIn0oR3YpLHI9R3Yub3MudmVyc2lvbixvPUt2KEd2LCExKSxzPUd2LmRldmljZS50eXBlO2lmKCEodCYmaSYmbiYmcikpcmV0dXJue25hbWU6dCx2ZXJzaW9uOmksb3M6bixvc1ZlcnNpb246cixicm93c2VyVmVyc2lvbjpvLGRldmljZVR5cGU6c307V3Y9e25hbWU6dCx2ZXJzaW9uOmksb3M6bixvc1ZlcnNpb246cixicm93c2VyVmVyc2lvbjpvLGRldmljZVR5cGU6c319cmV0dXJuIFd2fWZ1bmN0aW9uIEt2KGUpe2xldCB0LGk9IShhcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXSl8fGFyZ3VtZW50c1sxXTtyZXR1cm4gdD1cIkJsaW5rXCI9PT1lLmVuZ2luZS5uYW1lP2UuZW5naW5lLnZlcnNpb258fFwiXCI6ZS5icm93c2VyLnZlcnNpb258fFwiXCIsaT90LnNwbGl0KFwiLlwiKVswXTp0fWZ1bmN0aW9uIFl2KCl7cmV0dXJuIEh2KCkub3N9ZnVuY3Rpb24gcXYoKXtjb25zdCBlPUh2KCk7cmV0dXJuXCJcIi5jb25jYXQoZS5vcyxcIiBcIikuY29uY2F0KGUub3NWZXJzaW9uKX1mdW5jdGlvbiB6digpe2NvbnN0IGU9SHYoKTtyZXR1cm4hIShcIldlYktpdFwiPT09R3YuZW5naW5lLm5hbWUmJmUub3M9PT1Gdi5NQUNfT1MmJm5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyYmbmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzPjAmJmUubmFtZSE9PUJ2LlNBRkFSSXx8JHYoKSYmZS5uYW1lIT09QnYuU0FGQVJJKX1mdW5jdGlvbiBKdigpe3JldHVybiBIdigpLm5hbWU9PT1Cdi5DSFJPTUV9ZnVuY3Rpb24gWHYoKXtyZXR1cm4gSHYoKS5uYW1lPT09QnYuU0FGQVJJfWZ1bmN0aW9uIFF2KCl7cmV0dXJuIEh2KCkubmFtZT09PUJ2LkVER0V9ZnVuY3Rpb24gWnYoKXtyZXR1cm4gSHYoKS5uYW1lPT09QnYuRklSRUZPWH1mdW5jdGlvbiAkdigpe3JldHVybiBIdigpLm9zPT09RnYuSU9TfWZ1bmN0aW9uIGV5KGUpe2NvbnN0IHQ9SHYoKTtyZXR1cm4hKHQubmFtZSE9PUJ2LkNIUk9NRXx8IXQub3NWZXJzaW9uKSYmTnVtYmVyKHQudmVyc2lvbik+PWV9ZnVuY3Rpb24gdHkoZSl7Y29uc3QgdD1IdigpO3JldHVybiEodC5uYW1lIT09QnYuQ0hST01FfHwhdC5vc1ZlcnNpb24pJiZOdW1iZXIodC52ZXJzaW9uKTxlfWZ1bmN0aW9uIGl5KGUpe2NvbnN0IHQ9SHYoKTtyZXR1cm4hKHQubmFtZSE9PUJ2LkVER0V8fCF0Lm9zVmVyc2lvbikmJk51bWJlcih0LnZlcnNpb24pPj1lfWZ1bmN0aW9uIG55KGUpe2NvbnN0IHQ9SHYoKTtyZXR1cm4hKHQubmFtZSE9PUJ2LlNBRkFSSXx8IXQub3NWZXJzaW9uKSYmTnVtYmVyKHQudmVyc2lvbik+PWV9ZnVuY3Rpb24gcnkoZSx0LGkpe2NvbnN0IG49SHYoKTtpZihuLm9zIT09RnYuSU9TfHwhbi5vc1ZlcnNpb24pcmV0dXJuITE7Y29uc3Qgcj1uLm9zVmVyc2lvbi5zcGxpdChcIi5cIik7cmV0dXJuIGk/dCYmTnVtYmVyKHJbMF0pPT09ZSYmTnVtYmVyKHJbMV0pPHR8fE51bWJlcihyWzBdKTxlOnQ/TnVtYmVyKHJbMF0pPT09ZSYmTnVtYmVyKHJbMV0pPD10fHxOdW1iZXIoclswXSk8ZTpOdW1iZXIoclswXSk8PWV9ZnVuY3Rpb24gb3koZSx0LGkpe2NvbnN0IG49SHYoKTtpZihuLm5hbWUhPT1Cdi5TQUZBUkl8fCFuLm9zVmVyc2lvbnx8IW4uYnJvd3NlclZlcnNpb24pcmV0dXJuITE7Y29uc3Qgcj1uLmJyb3dzZXJWZXJzaW9uLnNwbGl0KFwiLlwiKTtyZXR1cm4gaT90JiZOdW1iZXIoclswXSk9PT1lJiZOdW1iZXIoclsxXSk8dHx8TnVtYmVyKHJbMF0pPGU6dD9OdW1iZXIoclswXSk9PT1lJiZOdW1iZXIoclsxXSk8PXR8fE51bWJlcihyWzBdKTxlOk51bWJlcihyWzBdKTw9ZX1mdW5jdGlvbiBzeShlKXtjb25zdCB0PUh2KCk7cmV0dXJuISh0Lm5hbWUhPT1Cdi5PUEVSQXx8IXQub3NWZXJzaW9uKSYmTnVtYmVyKHQudmVyc2lvbik+PWV9ZnVuY3Rpb24gYXkoKXtjb25zdCBlPUh2KCk7aWYoZS5vcyE9PUZ2LklPU3x8IWUub3NWZXJzaW9uKXJldHVybiExO2NvbnN0IHQ9ZS5vc1ZlcnNpb24uc3BsaXQoXCIuXCIpO3JldHVybiBOdW1iZXIodFswXSk8MTR8fDE0PT09TnVtYmVyKHRbMF0pJiZOdW1iZXIodFsxXSk8PTZ9ZnVuY3Rpb24gY3koKXtjb25zdCBlPUh2KCk7aWYoZS5vcyE9PUZ2LklPU3x8IWUub3NWZXJzaW9uKXJldHVybiExO2NvbnN0IHQ9ZS5vc1ZlcnNpb24uc3BsaXQoXCIuXCIpO3JldHVybiAxNT09PU51bWJlcih0WzBdKX1mdW5jdGlvbiBkeSgpe2NvbnN0IGU9SHYoKTtpZihlLm9zIT09RnYuSU9TfHwhZS5vc1ZlcnNpb24pcmV0dXJuITE7Y29uc3QgdD1lLm9zVmVyc2lvbi5zcGxpdChcIi5cIik7cmV0dXJuIDE2PT09TnVtYmVyKHRbMF0pfWZ1bmN0aW9uIGx5KCl7Y29uc3QgZT1IdigpO2lmKGUub3MhPT1Gdi5JT1N8fCFlLm9zVmVyc2lvbilyZXR1cm4hMTtjb25zdCB0PWUub3NWZXJzaW9uLnNwbGl0KFwiLlwiKTtyZXR1cm4gMTU9PT1OdW1iZXIodFswXSkmJk51bWJlcih0WzFdKT49MX1mdW5jdGlvbiB1eSgpe3JldHVybiBYdigpJiZuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHM+MH1mdW5jdGlvbiBoeSgpe3JldHVybiBIdigpLm5hbWU9PT1Cdi5XRUNIQVR9ZnVuY3Rpb24gcHkoKXtyZXR1cm4gd2luZG93Lm5hdmlnYXRvci5hcHBWZXJzaW9uJiZudWxsIT09d2luZG93Lm5hdmlnYXRvci5hcHBWZXJzaW9uLm1hdGNoKC9DaHJvbWVcXC8oW1xcd1xcV10qPylcXC4vKSYmd2luZG93Lm5hdmlnYXRvci5hcHBWZXJzaW9uLm1hdGNoKC9DaHJvbWVcXC8oW1xcd1xcV10qPylcXC4vKVsxXTw9MzV9ZnVuY3Rpb24gX3koKXtjb25zdCBlPVl2KCk7cmV0dXJuIGZ1bmN0aW9uKCl7Y29uc3R7ZGV2aWNlVHlwZTplfT1IdigpO3JldHVyblwibW9iaWxlXCI9PT1lfHxcInRhYmxldFwiPT09ZX0oKXx8ZT09PUZ2LkFORFJPSUR8fGU9PT1Gdi5JT1N8fGU9PT1Gdi5IQVJNT05ZX09TfWZ1bmN0aW9uIEV5KCl7Y29uc3QgZT1IdigpO3JldHVybiBlLm5hbWUhPT1Cdi5FREdFJiZlLm5hbWUhPT1Cdi5TQUZBUkkmJiEhbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvY2FsZUxvd2VyQ2FzZSgpLm1hdGNoKC9jaHJvbWVcXC9bXFxkXS4vaSl9ZnVuY3Rpb24gZnkoKXtyZXR1cm4gWXYoKT09PUZ2LkFORFJPSUR9ZnVuY3Rpb24gbXkoKXtjb25zdCBlPUh2KCk7cmV0dXJuIGZ5KCkmJihlLm5hbWU9PT1Cdi5DSFJPTUV8fGUubmFtZT09PUJ2LldFQ0hBVHx8L2Nocm9tZXxjaHJvbWl1bS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpfWZ1bmN0aW9uIFR5KGUsdCxpKXtyZXR1cm4odD1mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbihlLHQpe2lmKFwib2JqZWN0XCIhPXR5cGVvZiBlfHwhZSlyZXR1cm4gZTt2YXIgaT1lW1N5bWJvbC50b1ByaW1pdGl2ZV07aWYodm9pZCAwIT09aSl7dmFyIG49aS5jYWxsKGUsXCJzdHJpbmdcIik7aWYoXCJvYmplY3RcIiE9dHlwZW9mIG4pcmV0dXJuIG47dGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpfXJldHVybiBTdHJpbmcoZSl9KGUpO3JldHVyblwic3ltYm9sXCI9PXR5cGVvZiB0P3Q6dCtcIlwifSh0KSlpbiBlP09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse3ZhbHVlOmksZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTplW3RdPWksZX1mdW5jdGlvbiBTeShlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gZ3koZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/U3koT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtUeShlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6U3koT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9bGV0IFJ5PWZ1bmN0aW9uKGUpe3JldHVybiBlLlVORVhQRUNURURfRVJST1I9XCJVTkVYUEVDVEVEX0VSUk9SXCIsZS5VTkVYUEVDVEVEX1JFU1BPTlNFPVwiVU5FWFBFQ1RFRF9SRVNQT05TRVwiLGUuVElNRU9VVD1cIlRJTUVPVVRcIixlLklOVkFMSURfUEFSQU1TPVwiSU5WQUxJRF9QQVJBTVNcIixlLk5PVF9SRUFEQUJMRT1cIk5PVF9SRUFEQUJMRVwiLGUuTk9UX1NVUFBPUlRFRD1cIk5PVF9TVVBQT1JURURcIixlLklOVkFMSURfT1BFUkFUSU9OPVwiSU5WQUxJRF9PUEVSQVRJT05cIixlLk9QRVJBVElPTl9BQk9SVEVEPVwiT1BFUkFUSU9OX0FCT1JURURcIixlLldFQl9TRUNVUklUWV9SRVNUUklDVD1cIldFQl9TRUNVUklUWV9SRVNUUklDVFwiLGUuRVhDSEFOR0VfU0RQX0ZBSUxFRD1cIkVYQ0hBTkdFX1NEUF9GQUlMRURcIixlLkFERF9DQU5ESURBVEVfRkFJTEVEPVwiQUREX0NBTkRJREFURV9GQUlMRURcIixlLkRBVEFDSEFOTkVMX0ZBSUxFRD1cIkRBVEFDSEFOTkVMX0ZBSUxFRFwiLGUuTkVUV09SS19FUlJPUj1cIk5FVFdPUktfRVJST1JcIixlLk5FVFdPUktfVElNRU9VVD1cIk5FVFdPUktfVElNRU9VVFwiLGUuTkVUV09SS19SRVNQT05TRV9FUlJPUj1cIk5FVFdPUktfUkVTUE9OU0VfRVJST1JcIixlLkFQSV9JTlZPS0VfVElNRU9VVD1cIkFQSV9JTlZPS0VfVElNRU9VVFwiLGUuRU5VTUVSQVRFX0RFVklDRVNfRkFJTEVEPVwiRU5VTUVSQVRFX0RFVklDRVNfRkFJTEVEXCIsZS5ERVZJQ0VfTk9UX0ZPVU5EPVwiREVWSUNFX05PVF9GT1VORFwiLGUuRUxFQ1RST05fSVNfTlVMTD1cIkVMRUNUUk9OX0lTX05VTExcIixlLkVMRUNUUk9OX0RFU0tUT1BfQ0FQVFVSRVJfR0VUX1NPVVJDRVNfRVJST1I9XCJFTEVDVFJPTl9ERVNLVE9QX0NBUFRVUkVSX0dFVF9TT1VSQ0VTX0VSUk9SXCIsZS5DSFJPTUVfUExVR0lOX05PX1JFU1BPTlNFPVwiQ0hST01FX1BMVUdJTl9OT19SRVNQT05TRVwiLGUuQ0hST01FX1BMVUdJTl9OT1RfSU5TVEFMTD1cIkNIUk9NRV9QTFVHSU5fTk9UX0lOU1RBTExcIixlLk1FRElBX09QVElPTl9JTlZBTElEPVwiTUVESUFfT1BUSU9OX0lOVkFMSURcIixlLlBFUk1JU1NJT05fREVOSUVEPVwiUEVSTUlTU0lPTl9ERU5JRURcIixlLkNPTlNUUkFJTlRfTk9UX1NBVElTRklFRD1cIkNPTlNUUkFJTlRfTk9UX1NBVElTRklFRFwiLGUuVFJBQ0tfSVNfRElTQUJMRUQ9XCJUUkFDS19JU19ESVNBQkxFRFwiLGUuR0VUX1ZJREVPX0VMRU1FTlRfVklTSUJMRV9FUlJPUj1cIkdFVF9WSURFT19FTEVNRU5UX1ZJU0lCTEVfRVJST1JcIixlLlNIQVJFX0FVRElPX05PVF9BTExPV0VEPVwiU0hBUkVfQVVESU9fTk9UX0FMTE9XRURcIixlLkxPV19TVFJFQU1fRU5DT0RJTkdfRVJST1I9XCJMT1dfU1RSRUFNX0VOQ09ESU5HX0VSUk9SXCIsZS5TRVRfRU5DT0RJTkdfUEFSQU1FVEVSX0VSUk9SPVwiU0VUX0VOQ09ESU5HX1BBUkFNRVRFUl9FUlJPUlwiLGUuVFJBQ0tfU1RBVEVfVU5SRUFDSEFCTEU9XCJUUkFDS19TVEFURV9VTlJFQUNIQUJMRVwiLGUuSU5WQUxJRF9VSU5UX1VJRF9GUk9NX1NUUklOR19VSUQ9XCJJTlZBTElEX1VJTlRfVUlEX0ZST01fU1RSSU5HX1VJRFwiLGUuQ0FOX05PVF9HRVRfUFJPWFlfU0VSVkVSPVwiQ0FOX05PVF9HRVRfUFJPWFlfU0VSVkVSXCIsZS5DQU5fTk9UX0dFVF9HQVRFV0FZX1NFUlZFUj1cIkNBTl9OT1RfR0VUX0dBVEVXQVlfU0VSVkVSXCIsZS5WT0lEX0dBVEVXQVlfQUREUkVTUz1cIlZPSURfR0FURVdBWV9BRERSRVNTXCIsZS5VSURfQ09ORkxJQ1Q9XCJVSURfQ09ORkxJQ1RcIixlLk1VTFRJX1VOSUxCU19SRVNQT05TRV9FUlJPUj1cIk1VTFRJX1VOSUxCU19SRVNQT05TRV9FUlJPUlwiLGUuVVBEQVRFX1RJQ0tFVF9GQUlMRUQ9XCJVUERBVEVfVElDS0VUX0ZBSUxFRFwiLGUuSU5WQUxJRF9MT0NBTF9UUkFDSz1cIklOVkFMSURfTE9DQUxfVFJBQ0tcIixlLklOVkFMSURfVFJBQ0s9XCJJTlZBTElEX1RSQUNLXCIsZS5TRU5ERVJfTk9UX0ZPVU5EPVwiU0VOREVSX05PVF9GT1VORFwiLGUuQ1JFQVRFX09GRkVSX0ZBSUxFRD1cIkNSRUFURV9PRkZFUl9GQUlMRURcIixlLlNFVF9BTlNXRVJfRkFJTEVEPVwiU0VUX0FOU1dFUl9GQUlMRURcIixlLklDRV9GQUlMRUQ9XCJJQ0VfRkFJTEVEXCIsZS5QQ19DTE9TRUQ9XCJQQ19DTE9TRURcIixlLlNFTkRFUl9SRVBMQUNFX0ZBSUxFRD1cIlNFTkRFUl9SRVBMQUNFX0ZBSUxFRFwiLGUuR0VUX0xPQ0FMX0NBUEFCSUxJVElFU19GQUlMRUQ9XCJHRVRfTE9DQUxfQ0FQQUJJTElUSUVTX0ZBSUxFRFwiLGUuR0VUX0xPQ0FMX0NPTk5FQ1RJT05fUEFSQU1TX0ZBSUxFRD1cIkdFVF9MT0NBTF9DT05ORUNUSU9OX1BBUkFNU19GQUlMRURcIixlLlNVQlNDUklCRV9GQUlMRUQ9XCJTVUJTQ1JJQkVfRkFJTEVEXCIsZS5VTlNVQlNDUklCRV9GQUlMRUQ9XCJVTlNVQlNDUklCRV9GQUlMRURcIixlLkdBVEVXQVlfUDJQX0xPU1Q9XCJHQVRFV0FZX1AyUF9MT1NUXCIsZS5OT19JQ0VfQ0FORElEQVRFPVwiTk9fSUNFX0NBTkRJREFURVwiLGUuQ0FOX05PVF9QVUJMSVNIX01VTFRJUExFX1ZJREVPX1RSQUNLUz1cIkNBTl9OT1RfUFVCTElTSF9NVUxUSVBMRV9WSURFT19UUkFDS1NcIixlLkVYSVNUX0RJU0FCTEVEX1ZJREVPX1RSQUNLPVwiRVhJU1RfRElTQUJMRURfVklERU9fVFJBQ0tcIixlLklOVkFMSURfUkVNT1RFX1VTRVI9XCJJTlZBTElEX1JFTU9URV9VU0VSXCIsZS5SRU1PVEVfVVNFUl9JU19OT1RfUFVCTElTSEVEPVwiUkVNT1RFX1VTRVJfSVNfTk9UX1BVQkxJU0hFRFwiLGUuQ1VTVE9NX1JFUE9SVF9TRU5EX0ZBSUxFRD1cIkNVU1RPTV9SRVBPUlRfU0VORF9GQUlMRURcIixlLkNVU1RPTV9SRVBPUlRfRlJFUVVFTkNZX1RPT19ISUdIPVwiQ1VTVE9NX1JFUE9SVF9GUkVRVUVOQ1lfVE9PX0hJR0hcIixlLkZFVENIX0FVRElPX0ZJTEVfRkFJTEVEPVwiRkVUQ0hfQVVESU9fRklMRV9GQUlMRURcIixlLlJFQURfTE9DQUxfQVVESU9fRklMRV9FUlJPUj1cIlJFQURfTE9DQUxfQVVESU9fRklMRV9FUlJPUlwiLGUuREVDT0RFX0FVRElPX0ZJTEVfRkFJTEVEPVwiREVDT0RFX0FVRElPX0ZJTEVfRkFJTEVEXCIsZS5XU19BQk9SVD1cIldTX0FCT1JUXCIsZS5XU19ESVNDT05ORUNUPVwiV1NfRElTQ09OTkVDVFwiLGUuV1NfRVJSPVwiV1NfRVJSXCIsZS5FWFRFUk5BTF9TSUdOQUxfQUJPUlQ9XCJFWFRFUk5BTF9TSUdOQUxfQUJPUlRcIixlLkxJVkVfU1RSRUFNSU5HX1RBU0tfQ09ORkxJQ1Q9XCJMSVZFX1NUUkVBTUlOR19UQVNLX0NPTkZMSUNUXCIsZS5MSVZFX1NUUkVBTUlOR19JTlZBTElEX0FSR1VNRU5UPVwiTElWRV9TVFJFQU1JTkdfSU5WQUxJRF9BUkdVTUVOVFwiLGUuTElWRV9TVFJFQU1JTkdfSU5URVJOQUxfU0VSVkVSX0VSUk9SPVwiTElWRV9TVFJFQU1JTkdfSU5URVJOQUxfU0VSVkVSX0VSUk9SXCIsZS5MSVZFX1NUUkVBTUlOR19QVUJMSVNIX1NUUkVBTV9OT1RfQVVUSE9SSVpFRD1cIkxJVkVfU1RSRUFNSU5HX1BVQkxJU0hfU1RSRUFNX05PVF9BVVRIT1JJWkVEXCIsZS5MSVZFX1NUUkVBTUlOR19UUkFOU0NPRElOR19OT1RfU1VQUE9SVEVEPVwiTElWRV9TVFJFQU1JTkdfVFJBTlNDT0RJTkdfTk9UX1NVUFBPUlRFRFwiLGUuTElWRV9TVFJFQU1JTkdfQ0ROX0VSUk9SPVwiTElWRV9TVFJFQU1JTkdfQ0ROX0VSUk9SXCIsZS5MSVZFX1NUUkVBTUlOR19JTlZBTElEX1JBV19TVFJFQU09XCJMSVZFX1NUUkVBTUlOR19JTlZBTElEX1JBV19TVFJFQU1cIixlLkxJVkVfU1RSRUFNSU5HX1dBUk5fU1RSRUFNX05VTV9SRUFDSF9MSU1JVD1cIkxJVkVfU1RSRUFNSU5HX1dBUk5fU1RSRUFNX05VTV9SRUFDSF9MSU1JVFwiLGUuTElWRV9TVFJFQU1JTkdfV0FSTl9GQUlMRURfTE9BRF9JTUFHRT1cIkxJVkVfU1RSRUFNSU5HX1dBUk5fRkFJTEVEX0xPQURfSU1BR0VcIixlLkxJVkVfU1RSRUFNSU5HX1dBUk5fRlJFUVVFTlRfUkVRVUVTVD1cIkxJVkVfU1RSRUFNSU5HX1dBUk5fRlJFUVVFTlRfUkVRVUVTVFwiLGUuV0VCR0xfSU5URVJOQUxfRVJST1I9XCJXRUJHTF9JTlRFUk5BTF9FUlJPUlwiLGUuQkVBVVRZX1BST0NFU1NPUl9JTlRFUk5BTF9FUlJPUj1cIkJFQVVUWV9QUk9DRVNTT1JfSU5URVJOQUxfRVJST1JcIixlLkNST1NTX0NIQU5ORUxfV0FJVF9TVEFUVVNfRVJST1I9XCJDUk9TU19DSEFOTkVMX1dBSVRfU1RBVFVTX0VSUk9SXCIsZS5DUk9TU19DSEFOTkVMX0ZBSUxFRF9KT0lOX1NSQz1cIkNST1NTX0NIQU5ORUxfRkFJTEVEX0pPSU5fU0VDXCIsZS5DUk9TU19DSEFOTkVMX0ZBSUxFRF9KT0lOX0RFU1Q9XCJDUk9TU19DSEFOTkVMX0ZBSUxFRF9KT0lOX0RFU1RcIixlLkNST1NTX0NIQU5ORUxfRkFJTEVEX1BBQ0tFVF9TRU5UX1RPX0RFU1Q9XCJDUk9TU19DSEFOTkVMX0ZBSUxFRF9QQUNLRVRfU0VOVF9UT19ERVNUXCIsZS5DUk9TU19DSEFOTkVMX1NFUlZFUl9FUlJPUl9SRVNQT05TRT1cIkNST1NTX0NIQU5ORUxfU0VSVkVSX0VSUk9SX1JFU1BPTlNFXCIsZS5NRVRBREFUQV9PVVRfT0ZfUkFOR0U9XCJNRVRBREFUQV9PVVRfT0ZfUkFOR0VcIixlLkxPQ0FMX0FFQ19FUlJPUj1cIkxPQ0FMX0FFQ19FUlJPUlwiLGUuSU5WQUxJRF9QTFVHSU49XCJJTlZBTElEX1BMVUdJTlwiLGUuRElTQ09OTkVDVF9QMlA9XCJESVNDT05ORUNUX1AyUFwiLGUuQ09OVkVSVElOR19JTUFHRURBVEFfVE9fQkxPQl9GQUlMRUQ9XCJDT05WRVJUSU5HX0lNQUdFREFUQV9UT19CTE9CX0ZBSUxFRFwiLGUuQ09OVkVSVElOR19WSURFT19GUkFNRV9UT19CTE9CX0ZBSUxFRD1cIkNPTlZFUlRJTkdfVklERU9fRlJBTUVfVE9fQkxPQl9GQUlMRURcIixlLklOSVRfREFUQUNIQU5ORUxfVElNRU9VVD1cIklOSVRfREFUQUNIQU5ORUxfVElNRU9VVFwiLGUuQ1JFQVRFX0RBVEFDSEFOTkVMX0VSUk9SPVwiQ1JFQVRFX0RBVEFDSEFOTkVMX0VSUk9SXCIsZS5EQVRBQ0hBTk5FTF9DT05ORUNUSU9OX1RJTUVPVVQ9XCJEQVRBQ0hBTk5FTF9DT05ORUNUSU9OX1RJTUVPVVRcIixlLlBST0hJQklURURfT1BFUkFUSU9OPVwiUFJPSElCSVRFRF9PUEVSQVRJT05cIixlLklNQUdFX01PREVSQVRJT05fVVBMT0FEX0ZBSUxFRD1cIklNQUdFX01PREVSQVRJT05fVVBMT0FEX0ZBSUxFRFwiLGUuUDJQX01FU1NBR0VfRkFJTEVEPVwiUDJQX01FU1NBR0VfRkFJTEVEXCIsZX0oe30pLEN5PWNsYXNzIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoZSl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOlwiXCIsaT1hcmd1bWVudHMubGVuZ3RoPjI/YXJndW1lbnRzWzJdOnZvaWQgMDtzdXBlcih0KSxUeSh0aGlzLFwiY29kZVwiLHZvaWQgMCksVHkodGhpcyxcIm1lc3NhZ2VcIix2b2lkIDApLFR5KHRoaXMsXCJkYXRhXCIsdm9pZCAwKSxUeSh0aGlzLFwibmFtZVwiLFwiQWdvcmFSVENFeGNlcHRpb25cIiksdGhpcy5jb2RlPWUsdGhpcy5tZXNzYWdlPVwiQWdvcmFSVENFcnJvciBcIi5jb25jYXQodGhpcy5jb2RlLFwiOiBcIikuY29uY2F0KHQpLHRoaXMuZGF0YT1pfXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMuZGF0YT9cImRhdGE6IFwiLmNvbmNhdChKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEpLFwiXFxuXCIpLmNvbmNhdCh0aGlzLnN0YWNrKTpcIlwiLmNvbmNhdCh0aGlzLnN0YWNrKX1wcmludCgpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpcImVycm9yXCIsdD1hcmd1bWVudHMubGVuZ3RoPjE/YXJndW1lbnRzWzFdOnZvaWQgMDtyZXR1cm5cImVycm9yXCI9PT1lJiYodHx8Y29uc29sZSkuZXJyb3IodGhpcy50b1N0cmluZygpKSxcIndhcm5pbmdcIj09PWUmJih0fHxjb25zb2xlKS53YXJuKHRoaXMudG9TdHJpbmcoKSksdGhpc310aHJvdyhlKXt0aHJvdyB0aGlzLnByaW50KFwiZXJyb3JcIixlKSx0aGlzfX07ZnVuY3Rpb24gSXkoZSx0KXtpZihcImJvb2xlYW5cIiE9dHlwZW9mIGUpdGhyb3cgbmV3IEN5KFJ5LklOVkFMSURfUEFSQU1TLFwiSW52YWxpZCBcIi5jb25jYXQodCxcIjogVGhlIHZhbHVlIGlzIG9mIHRoZSBib29sZWFuIHR5cGUuXCIpKX1mdW5jdGlvbiB2eShlLHQsaSl7aWYoIURuKGkpLmNhbGwoaSxlKSl0aHJvdyBuZXcgQ3koUnkuSU5WQUxJRF9QQVJBTVMsXCJcIi5jb25jYXQodCxcIiBjYW4gb25seSBiZSBzZXQgYXMgXCIpLmNvbmNhdChKU09OLnN0cmluZ2lmeShpKSkpfWZ1bmN0aW9uIHl5KGUsdCl7bGV0IGk9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOjEsbj1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106MWU0O2lmKGU8aXx8ZT5ufHwoIShhcmd1bWVudHMubGVuZ3RoPjQmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XSl8fGFyZ3VtZW50c1s0XSkmJiFmdW5jdGlvbihlKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgZSYmZSUxPT0wfShlKSl0aHJvdyBuZXcgQ3koUnkuSU5WQUxJRF9QQVJBTVMsXCJpbnZhbGlkIFwiLmNvbmNhdCh0LFwiOiB0aGUgdmFsdWUgcmFuZ2UgaXMgW1wiKS5jb25jYXQoaSxcIiwgXCIpLmNvbmNhdChuLFwiXS4gaW50ZWdlciBvbmx5XCIpKX1mdW5jdGlvbiBBeShlLHQpe2lmKFwibnVtYmVyXCIhPXR5cGVvZiBlKXtpZighKGUubWlufHxlLm1heHx8ZS5pZGVhbHx8ZS5leGFjdCkpdGhyb3cgbmV3IEN5KFJ5LklOVkFMSURfUEFSQU1TLFwiXCIuY29uY2F0KHQsXCIgaXMgbm90IGEgdmFsaWQgQ29uc3RyYWluTG9uZ1wiKSk7dm9pZCAwIT09ZS5taW4mJnl5KGUubWluLFwiXCIuY29uY2F0KHQsXCIubWluXCIpLDAsMS8wKSx2b2lkIDAhPT1lLm1heCYmeXkoZS5tYXgsXCJcIi5jb25jYXQodCxcIi5tYXhcIiksMSwxLzApLHZvaWQgMCE9PWUuZXhhY3QmJnl5KGUuZXhhY3QsXCJcIi5jb25jYXQodCxcIi5leGFjdFwiKSwxLDEvMCksdm9pZCAwIT09ZS5pZGVhbCYmeXkoZS5pZGVhbCxcIlwiLmNvbmNhdCh0LFwiLmlkZWFsXCIpLDEsMS8wKX1lbHNlIHl5KGUsdCwxLDEvMCl9ZnVuY3Rpb24gYnkoZSx0KXtsZXQgaT1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06MSxuPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXToyNTUscj0hKGFyZ3VtZW50cy5sZW5ndGg+NCYmdm9pZCAwIT09YXJndW1lbnRzWzRdKXx8YXJndW1lbnRzWzRdO2lmKG51bGw9PWUpdGhyb3cgbmV3IEN5KFJ5LklOVkFMSURfUEFSQU1TLFwiXCIuY29uY2F0KHR8fFwicGFyYW1cIixcIiBjYW5ub3QgYmUgZW1wdHlcIikpO2lmKCFOeShlLGksbixyKSl0aHJvdyBuZXcgQ3koUnkuSU5WQUxJRF9QQVJBTVMsXCJJbnZhbGlkIFwiLmNvbmNhdCh0fHxcInN0cmluZyBwYXJhbVwiLFwiOiBMZW5ndGggb2YgdGhlIHN0cmluZzogW1wiKS5jb25jYXQoaSxcIixcIikuY29uY2F0KG4sXCJdLlwiKS5jb25jYXQocj9cIiBBU0NJSSBjaGFyYWN0ZXJzIG9ubHkuXCI6XCJcIikpfWZ1bmN0aW9uIHd5KGUsdCl7aWYoIUFycmF5LmlzQXJyYXkoZSkpdGhyb3cgbmV3IEN5KFJ5LklOVkFMSURfUEFSQU1TLFwiXCIuY29uY2F0KHQsXCIgc2hvdWxkIGJlIGFuIGFycmF5XCIpKX1mdW5jdGlvbiBPeShlKXtyZXR1cm4gbnVsbD09ZX1mdW5jdGlvbiBOeShlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06MSxpPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXToyNTUsbj0hKGFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdKXx8YXJndW1lbnRzWzNdO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlJiZlLmxlbmd0aDw9aSYmZS5sZW5ndGg+PXQmJighbnx8ZnVuY3Rpb24oZSl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGUpcmV0dXJuITE7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kz0xKXtjb25zdCBpPWUuY2hhckNvZGVBdCh0KTtpZihpPDB8fGk+MjU1KXJldHVybiExfXJldHVybiEwfShlKSl9dmFyIER5PWZ1bmN0aW9uKGUpe3JldHVybiBlLkNPVkVSRUQ9XCJDT1ZFUkVEXCIsZS5QT1NJVElPTj1cIlBPU0lUSU9OXCIsZS5TSVpFPVwiU0laRVwiLGUuU1RZTEU9XCJTVFlMRVwiLGV9KER5fHx7fSksUHk9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuVU5NT1VOVEVEPVwiVU5NT1VOVEVEXCIsZS5JTlZBTElEX0hUTUxfRUxFTUVOVD1cIklOVkFMSURfSFRNTF9FTEVNRU5UXCIsZX0oUHl8fHt9KTtjb25zdCBMeT1uZXcgY2xhc3N7Y29uc3RydWN0b3IoKXtUeSh0aGlzLFwiX2NsaWVudFNpemVcIixudWxsKSxUeSh0aGlzLFwiZ2V0Q2xpZW50V2lkdGhcIiwoKCk9PmRvY3VtZW50LmRvY3VtZW50RWxlbWVudD9kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg6ZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aCkpLFR5KHRoaXMsXCJnZXRDbGllbnRIZWlnaHRcIiwoKCk9PmRvY3VtZW50LmRvY3VtZW50RWxlbWVudD9kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0OmRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0KSksVHkodGhpcyxcImdldFN0eWxlXCIsKGU9PndpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGUsbnVsbCkpKSxUeSh0aGlzLFwiY2hlY2tDc3NWaXNpYmxlUHJvcGVydHlcIiwoZT0+e3ZhciB0O2xldCBpPSEwO2NvbnN0IG49dGhpcy5nZXRTdHlsZShlKSx7ZGlzcGxheTpyLHZpc2liaWxpdHk6byxvcGFjaXR5OnMsZmlsdGVyOmF9PW47cmV0dXJuKFwibm9uZVwiPT09cnx8RG4odD1bXCJoaWRkZW5cIixcImNvbGxhcHNlXCJdKS5jYWxsKHQsbyl8fE51bWJlcihzKTwuMSkmJihpPSExKSwhIWkmJihhJiZhLnNwbGl0KFwiIFwiKS5maWx0ZXIoKGU9Pnt2YXIgdDtjb25zdCBpPWUuc3BsaXQoXCIoXCIpWzBdO3JldHVybiBEbih0PVtcImJyaWdodG5lc3NcIixcImJsdXJcIixcIm9wYWNpdHlcIl0pLmNhbGwodCxpKX0pKS5tYXAoKGU9Pntjb25zdFt0LGldPWUuc3BsaXQoL1xcKHxcXCkvKTtyZXR1cm5bdCxOdW1iZXIoaS5tYXRjaCgvXlswLTlcXC5dKy8pKV19KSkuZm9yRWFjaCgoZT0+e2NvbnN0W3Qsbl09ZTtzd2l0Y2godCl7Y2FzZVwiYnJpZ2h0bmVzc1wiOihuPC4xfHxuPjMpJiYoaT0hMSk7YnJlYWs7Y2FzZVwiYmx1clwiOm4+MyYmKGk9ITEpO2JyZWFrO2Nhc2VcIm9wYWNpdHlcIjpuPC4xJiYoaT0hMSl9fSkpLGkpfSkpLFR5KHRoaXMsXCJjaGVja1Byb3BlcnR5VXBUb0FsbFBhcmVudE5vZGVzXCIsKChlLHQpPT57bGV0IGk9ITAsbj0hMDtjb25zdCByPWU9PnQoZSk7bGV0IG89ZTtmb3IoO28mJm47KXIobyl8fChpPSExLG49ITEpLG89by5wYXJlbnRFbGVtZW50LG98fChuPSExKTtyZXR1cm4gaX0pKSxUeSh0aGlzLFwiY2hlY2tBY3R1YWxDc3NWaXNpYmxlSW5jbHVkZUluaGVyaXRcIiwoZT0+dGhpcy5jaGVja1Byb3BlcnR5VXBUb0FsbFBhcmVudE5vZGVzKGUsdGhpcy5jaGVja0Nzc1Zpc2libGVQcm9wZXJ0eSkpKSxUeSh0aGlzLFwiZ2V0U2l6ZUFib3V0Q2xpZW50XCIsKGU9Pntjb25zdHt3aWR0aDp0LGhlaWdodDppLGxlZnQ6bixyaWdodDpyLHRvcDpvLGJvdHRvbTpzfT1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLGE9dGhpcy5nZXRDbGllbnRXaWR0aCgpLGM9dGhpcy5nZXRDbGllbnRIZWlnaHQoKTtyZXR1cm57d2lkdGg6dCxoZWlnaHQ6aSxsZWZ0Om4scmlnaHQ6cix0b3A6byxib3R0b206cyxjbGllbnRXaWR0aDphLGNsaWVudEhlaWdodDpjLGNsaWVudE1pbjpNYXRoLm1pbihhLGMpfX0pKSxUeSh0aGlzLFwiY2hlY2tBY3R1YWxTaXplXCIsKCgpPT57Y29uc3R7d2lkdGg6ZSxoZWlnaHQ6dCxjbGllbnRNaW46aX09dGhpcy5fY2xpZW50U2l6ZTtyZXR1cm4gdGhpcy5jaGVja1NpemVJc1Zpc2libGUoZSx0LGkpfSkpLFR5KHRoaXMsXCJlbGVtZW50RnJvbVBvaW50XCIsKChlLHQpPT5kb2N1bWVudC5lbGVtZW50RnJvbVBvaW50P2RvY3VtZW50LmVsZW1lbnRGcm9tUG9pbnQoZSx0KTpudWxsKSksVHkodGhpcyxcImNoZWNrQ292ZXJGb3JBUG9pbnRcIiwoKGUsdCxpKT0+e2NvbnN0IG49dGhpcy5lbGVtZW50RnJvbVBvaW50KGUsdCk7cmV0dXJuIG51bGwhPT1uJiZuIT09aX0pKSxUeSh0aGlzLFwiZ2V0UG9pbnRQb3NpdGlvbkxpc3RcIiwoKCk9Pntjb25zdHt3aWR0aDplLGhlaWdodDp0LGxlZnQ6aSx0b3A6bn09dGhpcy5fY2xpZW50U2l6ZSxyPWUvNixvPXQvNixzPVtdLGE9MTAqKjY7Zm9yKGxldCBlPTA7ZTw1O2UrKylmb3IobGV0IHQ9MDt0PDU7dCsrKXtjb25zdCBjPShpKmErKDA9PT1lPy4xOjQ9PT1lPyhyKmUqYS0xZTUpL2E6ciplKSphKS9hLGQ9KG4qYSsoMD09PXQ/LjE6ND09PXQ/KG8qdCphLTFlNSkvYTpvKnQpKmEpL2E7cy5wdXNoKHt4OmMseTpkfSl9cmV0dXJuWy4uLnNdfSkpLFR5KHRoaXMsXCJjaGVja0VsZW1lbnRDb3ZlclwiLChlPT50aGlzLmdldFBvaW50UG9zaXRpb25MaXN0KCkubWFwKCh0PT50aGlzLmNoZWNrQ292ZXJGb3JBUG9pbnQodC54LHQueSxlKSkpLmZpbHRlcigoZT0+ISFlKSkubGVuZ3RoPjYpKSxUeSh0aGlzLFwiY2hlY2tTaXplSXNWaXNpYmxlXCIsKChlLHQsaSk9PihlPjUwfHxpL2U8PTEwKSYmKHQ+NTB8fGkvdDw9MTApKSksVHkodGhpcyxcImNoZWNrU2l6ZU9mUGFydEluQ2xpZW50XCIsKCgpPT57Y29uc3R7bGVmdDplLHJpZ2h0OnQsdG9wOmksYm90dG9tOm4sY2xpZW50SGVpZ2h0OnIsY2xpZW50V2lkdGg6byxjbGllbnRNaW46c309dGhpcy5fY2xpZW50U2l6ZTtsZXQgYSxjLGQsbDtpZihlPDApYT0wO2Vsc2V7aWYoIShlPG8pKXJldHVybiExO2E9ZX1pZih0PDApcmV0dXJuITE7aWYoYz10PG8/dDpvLGk8MClkPTA7ZWxzZXtpZighKGk8cikpcmV0dXJuITE7ZD1pfWlmKG48MClyZXR1cm4hMTtsPW48cj9uOnI7Y29uc3QgdT1jLWEsaD1sLWQ7cmV0dXJuIHRoaXMuY2hlY2tTaXplSXNWaXNpYmxlKHUsaCxzKX0pKSxUeSh0aGlzLFwicmV0dXJuSGlkZGVuUmVzdWx0XCIsKGU9Pih0aGlzLl9jbGllbnRTaXplPW51bGwse3Zpc2libGU6ITEscmVhc29uOmV9KSkpLFR5KHRoaXMsXCJjaGVja09uZUVsZW1lbnRWaXNpYmxlXCIsKGU9PntpZihlIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpe2lmKHRoaXMuY2hlY2tFbGVtZW50SXNNb3VudGVkT25Eb20oZSkpe2lmKHRoaXMuY2hlY2tBY3R1YWxDc3NWaXNpYmxlSW5jbHVkZUluaGVyaXQoZSkpe2lmKHRoaXMuX2NsaWVudFNpemU9dGhpcy5nZXRTaXplQWJvdXRDbGllbnQoZSksdGhpcy5jaGVja0VsZW1lbnRDb3ZlcihlKSlyZXR1cm4gdGhpcy5yZXR1cm5IaWRkZW5SZXN1bHQoRHkuQ09WRVJFRCk7e2NvbnN0IGU9dGhpcy5jaGVja0FjdHVhbFNpemUoKSx0PXRoaXMuY2hlY2tTaXplT2ZQYXJ0SW5DbGllbnQoKTtyZXR1cm4gZSYmIXQ/dGhpcy5yZXR1cm5IaWRkZW5SZXN1bHQoRHkuUE9TSVRJT04pOmU/KHRoaXMuX2NsaWVudFNpemU9bnVsbCx7dmlzaWJsZTohMH0pOnRoaXMucmV0dXJuSGlkZGVuUmVzdWx0KER5LlNJWkUpfX1yZXR1cm4gdGhpcy5yZXR1cm5IaWRkZW5SZXN1bHQoRHkuU1RZTEUpfXJldHVybiB0aGlzLnJldHVybkhpZGRlblJlc3VsdChQeS5VTk1PVU5URUQpfXJldHVybiB0aGlzLnJldHVybkhpZGRlblJlc3VsdChQeS5JTlZBTElEX0hUTUxfRUxFTUVOVCl9KSksVHkodGhpcyxcImNoZWNrRWxlbWVudElzTW91bnRlZE9uRG9tXCIsKGU9PnRoaXMuY2hlY2tQcm9wZXJ0eVVwVG9BbGxQYXJlbnROb2RlcyhlLChlPT5cIkhUTUxcIiE9PWUubm9kZU5hbWUudG9VcHBlckNhc2UoKT9udWxsIT09ZS5wYXJlbnRFbGVtZW50OiEhZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSkpKX19O2Z1bmN0aW9uIGt5KGUpe3JldHVybihuZXcgVGV4dEVuY29kZXIpLmVuY29kZShlKX1jb25zdCBNeT1mdW5jdGlvbihlLHQpe2NvbnN0IGk9bmV3IFVpbnQ4QXJyYXkoZS5ieXRlTGVuZ3RoK3QuYnl0ZUxlbmd0aCk7cmV0dXJuIGkuc2V0KG5ldyBVaW50OEFycmF5KGUpLDApLGkuc2V0KG5ldyBVaW50OEFycmF5KHQpLGUuYnl0ZUxlbmd0aCksaX07Y29uc3QgVXk9YXN5bmMgZT0+ZnVuY3Rpb24oZSx0KXtsZXQgaT1cIlwiO3JldHVybiBuZXcgVWludDhBcnJheShlKS5mb3JFYWNoKChlPT57aSs9ZS50b1N0cmluZyh0KS5wYWRTdGFydCgyLFwiMFwiKX0pKSxpfShhd2FpdCBjcnlwdG8uc3VidGxlLmRpZ2VzdChcIlNIQS0yNTZcIixreShlKSksMTYpO2NsYXNzIHh5e2NvbnN0cnVjdG9yKCl7VHkodGhpcyxcIl9ldmVudHNcIix7fSksVHkodGhpcyxcImFkZExpc3RlbmVyXCIsdGhpcy5vbil9Z2V0TGlzdGVuZXJzKGUpe3JldHVybiB0aGlzLl9ldmVudHNbZV0/dGhpcy5fZXZlbnRzW2VdLm1hcCgoZT0+ZS5saXN0ZW5lcikpOltdfW9uKGUsdCl7dGhpcy5fZXZlbnRzW2VdfHwodGhpcy5fZXZlbnRzW2VdPVtdKTtjb25zdCBpPXRoaXMuX2V2ZW50c1tlXTstMT09PXRoaXMuX2luZGV4T2ZMaXN0ZW5lcihpLHQpJiZpLnB1c2goe2xpc3RlbmVyOnQsb25jZTohMX0pfW9uY2UoZSx0KXt0aGlzLl9ldmVudHNbZV18fCh0aGlzLl9ldmVudHNbZV09W10pO2NvbnN0IGk9dGhpcy5fZXZlbnRzW2VdOy0xPT09dGhpcy5faW5kZXhPZkxpc3RlbmVyKGksdCkmJmkucHVzaCh7bGlzdGVuZXI6dCxvbmNlOiEwfSl9b2ZmKGUsdCl7aWYoIXRoaXMuX2V2ZW50c1tlXSlyZXR1cm47Y29uc3QgaT10aGlzLl9ldmVudHNbZV0sbj10aGlzLl9pbmRleE9mTGlzdGVuZXIoaSx0KTstMSE9PW4mJmkuc3BsaWNlKG4sMSksMD09PXRoaXMuX2V2ZW50c1tlXS5sZW5ndGgmJmRlbGV0ZSB0aGlzLl9ldmVudHNbZV19cmVtb3ZlQWxsTGlzdGVuZXJzKGUpe2U/ZGVsZXRlIHRoaXMuX2V2ZW50c1tlXTp0aGlzLl9ldmVudHM9e319ZW1pdChlKXt0aGlzLl9ldmVudHNbZV18fCh0aGlzLl9ldmVudHNbZV09W10pO2NvbnN0IHQ9dGhpcy5fZXZlbnRzW2VdLm1hcCgoZT0+ZSkpO2Zvcih2YXIgaT1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KGk+MT9pLTE6MCkscj0xO3I8aTtyKyspbltyLTFdPWFyZ3VtZW50c1tyXTtmb3IobGV0IGk9MDtpPHQubGVuZ3RoO2krPTEpe2NvbnN0IHI9dFtpXTtyLm9uY2UmJnRoaXMub2ZmKGUsci5saXN0ZW5lciksci5saXN0ZW5lci5hcHBseSh0aGlzLG58fFtdKX19c2FmZUVtaXQoZSl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsaT1uZXcgQXJyYXkodD4xP3QtMTowKSxuPTE7bjx0O24rKylpW24tMV09YXJndW1lbnRzW25dO1suLi50aGlzLl9ldmVudHNbZV18fFtdXS5mb3JFYWNoKCh0PT57dC5vbmNlJiZ0aGlzLm9mZihlLHQubGlzdGVuZXIpO3RyeXt0Lmxpc3RlbmVyLmFwcGx5KHRoaXMsaSl9Y2F0Y2godCl7Y29uc29sZS5lcnJvcihcInNhZmVFbWl0IGV2ZW50OlwiLmNvbmNhdChlLFwiIGVycm9yIFwiKS5jb25jYXQobnVsbD09dD92b2lkIDA6dC50b1N0cmluZygpKSl9fSkpfV9pbmRleE9mTGlzdGVuZXIoZSx0KXtsZXQgaT1lLmxlbmd0aDtmb3IoO2ktLTspaWYoZVtpXS5saXN0ZW5lcj09PXQpcmV0dXJuIGk7cmV0dXJuLTF9fWxldCBWeT1udWxsO2Z1bmN0aW9uIEZ5KCl7aWYoVnkpcmV0dXJuIFZ5O2lmKHdpbmRvdy5lbGVjdHJvbilyZXR1cm4gVnk9d2luZG93LmVsZWN0cm9uO2lmKCF3aW5kb3cucmVxdWlyZSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIFZ5PXdpbmRvdy5yZXF1aXJlKFwiZWxlY3Ryb25cIiksVnl9Y2F0Y2goZSl7cmV0dXJuIG51bGx9fWxldCBCeT1mdW5jdGlvbihlKXtyZXR1cm4gZS5DUkVBVEVfQ0xJRU5UPVwiY3JlYXRlQ2xpZW50XCIsZS5DSEVDS19TWVNURU1fUkVRVUlSRU1FTlRTPVwiY2hlY2tTeXN0ZW1SZXF1aXJlbWVudHNcIixlLlNFVF9BUkVBPVwic2V0QXJlYVwiLGUuUFJFTE9BRD1cIlBSRUxPQURcIixlLkNIRUNLX1ZJREVPX1RSQUNLX0lTX0FDVElWRT1cImNoZWNrVmlkZW9UcmFja0lzQWN0aXZlXCIsZS5DSEVDS19BVURJT19UUkFDS19JU19BQ1RJVkU9XCJjaGVja0F1ZGlvVHJhY2tJc0FjdGl2ZVwiLGUuQ1JFQVRFX01JQ19BVURJT19UUkFDSz1cImNyZWF0ZU1pY3JvcGhvbmVBdWRpb1RyYWNrXCIsZS5DUkVBVEVfQ1VTVE9NX0FVRElPX1RSQUNLPVwiY3JlYXRlQ3VzdG9tQXVkaW9UcmFja1wiLGUuQ1JFQVRFX0JVRkZFUl9BVURJT19UUkFDSz1cImNyZWF0ZUJ1ZmZlclNvdXJjZUF1ZGlvVHJhY2tcIixlLkNSRUFURV9DQU1fVklERU9fVFJBQ0s9XCJjcmVhdGVDYW1lcmFWaWRlb1RyYWNrXCIsZS5DUkVBVEVfQ1VTVE9NX1ZJREVPX1RSQUNLPVwiY3JlYXRlQ3VzdG9tVmlkZW9UcmFja1wiLGUuQ1JFQVRFX01JQ19BTkRfQ0FNX1RSQUNLUz1cImNyZWF0ZU1pY3JvcGhvbmVBbmRDYW1lcmFUcmFja3NcIixlLkNSRUFURV9TQ1JFRU5fVklERU9fVFJBQ0s9XCJjcmVhdGVTY3JlZW5WaWRlb1RyYWNrXCIsZS5TRVRfRU5DUllQVElPTl9DT05GSUc9XCJDbGllbnQuc2V0RW5jcnlwdGlvbkNvbmZpZ1wiLGUuU1RBUlRfUFJPWFlfU0VSVkVSPVwiQ2xpZW50LnN0YXJ0UHJveHlTZXJ2ZXJcIixlLlNUT1BfUFJPWFlfU0VSVkVSPVwiQ2xpZW50LnN0b3BQcm94eVNlcnZlclwiLGUuU0VUX1BST1hZX1NFUlZFUj1cIkNsaWVudC5zZXRQcm94eVNlcnZlclwiLGUuU0VUX1RVUk5fU0VSVkVSPVwiQ2xpZW50LnNldFR1cm5TZXJ2ZXJcIixlLlNFVF9DTElFTlRfUk9MRT1cIkNsaWVudC5zZXRDbGllbnRSb2xlXCIsZS5TRVRfTE9XX1NUUkVBTV9QQVJBTUVURVI9XCJDbGllbnQuc2V0TG93U3RyZWFtUGFyYW1ldGVyXCIsZS5FTkFCTEVfRFVBTF9TVFJFQU09XCJDbGllbnQuZW5hYmxlRHVhbFN0cmVhbVwiLGUuRElTQUJMRV9EVUFMX1NUUkVBTT1cIkNsaWVudC5kaXNhYmxlRHVhbFN0cmVhbVwiLGUuSk9JTj1cIkNsaWVudC5qb2luXCIsZS5MRUFWRT1cIkNsaWVudC5sZWF2ZVwiLGUuUFVCTElTSD1cIkNsaWVudC5wdWJsaXNoXCIsZS5VTlBVQkxJU0g9XCJDbGllbnQudW5wdWJsaXNoXCIsZS5TVUJTQ1JJQkU9XCJDbGllbnQuc3Vic2NyaWJlXCIsZS5NQVNTX1NVQlNDUklCRT1cIkNsaWVudC5tYXNzU3Vic2NyaWJlXCIsZS5NQVNTX1VOU1VCU0NSSUJFPVwiQ2xpZW50Lm1hc3NVbnN1YnNjcmliZVwiLGUuVU5TVUJTQ1JJQkU9XCJDbGllbnQudW5zdWJzY3JpYmVcIixlLlJFTkVXX1RPS0VOPVwiQ2xpZW50LnJlbmV3VG9rZW5cIixlLlNFVF9SRU1PVEVfVklERU9fU1RSRUFNX1RZUEU9XCJDbGllbnQuc2V0UmVtb3RlVmlkZW9TdHJlYW1UeXBlXCIsZS5TRVRfU1RSRUFNX0ZBTExCQUNLX09QVElPTj1cIkNsaWVudC5zZXRTdHJlYW1GYWxsYmFja09wdGlvblwiLGUuRU5BQkxFX0FVRElPX1ZPTFVNRV9JTkRJQ0FUT1I9XCJDbGllbnQuZW5hYmxlQXVkaW9Wb2x1bWVJbmRpY2F0b3JcIixlLlNFTkRfQ1VTVE9NX1JFUE9SVF9NRVNTQUdFPVwiQ2xpZW50LnNlbmRDdXN0b21SZXBvcnRNZXNzYWdlXCIsZS5JTlNQRUNUX1ZJREVPX0NPTlRFTlQ9XCJDbGllbnQuaW5zcGVjdFZpZGVvQ29udGVudFwiLGUuU1RPUF9JTlNQRUNUX1ZJREVPX0NPTlRFTlQ9XCJDbGllbnQuc3RvcEluc3BlY3RWaWRlb0NvbnRlbnRcIixlLkpPSU5fRkFMTEJBQ0tfVE9fUFJPWFk9XCJDbGllbnQuX2pvaW5GYWxsYmFja1RvUHJveHlcIixlLk9OX0xJVkVfU1RSRUFNX1dBUk5JTkc9XCJDbGllbnQub25MaXZlU3RyZWFtV2FybmluZ1wiLGUuT05fTElWRV9TVFJFQU1fRVJST1I9XCJDbGllbnQub25MaXZlU3RyZWFtaW5nRXJyb3JcIixlLlNUQVJUX0xJVkVfU1RSRUFNSU5HPVwiQ2xpZW50LnN0YXJ0TGl2ZVN0cmVhbWluZ1wiLGUuU0VUX0xJVkVfVFJBTlNDT0RJTkc9XCJDbGllbnQuc2V0TGl2ZVRyYW5zY29kaW5nXCIsZS5TVE9QX0xJVkVfU1RSRUFNSU5HPVwiQ2xpZW50LnN0b3BMaXZlU3RyZWFtaW5nXCIsZS5TVEFSVF9DSEFOTkVMX01FRElBX1JFTEFZPVwiQ2xpZW50LnN0YXJ0Q2hhbm5lbE1lZGlhUmVsYXlcIixlLlVQREFURV9DSEFOTkVMX01FRElBX1JFTEFZPVwiQ2xpZW50LnVwZGF0ZUNoYW5uZWxNZWRpYVJlbGF5XCIsZS5TVE9QX0NIQU5ORUxfTUVESUFfUkVMQVk9XCJDbGllbnQuc3RvcENoYW5uZWxNZWRpYVJlbGF5XCIsZS5SRVFVRVNUX0NPTkZJR19ESVNUUklCVVRFPVwiX2NvbmZpZy1kaXN0cmlidXRlLXJlcXVlc3RcIixlLlNFVF9DT05GSUdfRElTVFJJQlVURT1cIl9jb25maWdEaXN0cmlidXRlXCIsZS5MT0NBTF9UUkFDS19TRVRfTVVURUQ9XCJMb2NhbFRyYWNrLnNldE11dGVcIixlLkxPQ0FMX0FVRElPX1RSQUNLX1BMQVk9XCJMb2NhbEF1ZGlvVHJhY2sucGxheVwiLGUuTE9DQUxfQVVESU9fVFJBQ0tfUExBWV9JTl9FTEVNRU5UPVwiTG9jYWxBdWRpb1RyYWNrLnBsYXlJbkVsZW1lbnRcIixlLkxPQ0FMX0FVRElPX1RSQUNLX1NUT1A9XCJMb2NhbEF1ZGlvVHJhY2suc3RvcFwiLGUuTE9DQUxfQVVESU9fVFJBQ0tfU0VUX1ZPTFVNRT1cIkxvY2FsQXVkaW9UcmFjay5zZXRWb2x1bWVcIixlLk1JQ19BVURJT19UUkFDS19TRVRfREVWSUNFPVwiTWljcm9waG9uZUF1ZGlvVHJhY2suc2V0RGV2aWNlXCIsZS5CVUZGRVJfQVVESU9fVFJBQ0tfU1RBUlQ9XCJCdWZmZXJTb3VyY2VBdWRpb1RyYWNrLnN0YXJ0UHJvY2Vzc0F1ZGlvQnVmZmVyXCIsZS5CVUZGRVJfQVVESU9fVFJBQ0tfU1RPUD1cIkJ1ZmZlclNvdXJjZUF1ZGlvVHJhY2suc3RvcFByb2Nlc3NBdWRpb0J1ZmZlclwiLGUuQlVGRkVSX0FVRElPX1RSQUNLX1BBVVNFPVwiQnVmZmVyU291cmNlQXVkaW9UcmFjay5wYXVzZVByb2Nlc3NBdWRpb0J1ZmZlclwiLGUuQlVGRkVSX0FVRElPX1RSQUNLX1JFU1VNRT1cIkJ1ZmZlclNvdXJjZUF1ZGlvVHJhY2sucmVzdW1lUHJvY2Vzc0F1ZGlvQnVmZmVyXCIsZS5CVUZGRVJfQVVESU9fVFJBQ0tfU0VFSz1cIkJ1ZmZlclNvdXJjZUF1ZGlvVHJhY2suc2Vla0F1ZGlvQnVmZmVyXCIsZS5MT0NBTF9WSURFT19UUkFDS19QTEFZPVwiTG9jYWxWaWRlb1RyYWNrLnBsYXlcIixlLkxPQ0FMX1ZJREVPX1RSQUNLX1NUT1A9XCJMb2NhbFZpZGVvVHJhY2suc3RvcFwiLGUuTE9DQUxfVklERU9fVFJBQ0tfR0VUX1ZJREVPX1ZJU0lCTEU9XCJMb2NhbFZpZGVvVHJhY2suZ2V0VmlkZW9FbGVtZW50VmlzaWJsZVN0YXR1c1wiLGUuTE9DQUxfVklERU9fVFJBQ0tfQkVBVVRZPVwiTG9jYWxWaWRlb1RyYWNrLnNldEJlYXV0eUVmZmVjdFwiLGUuTE9DQUxfVklERU9fU0VORF9TRUlfREFUQT1cIkxvY2FsVmlkZW9UcmFjay5zZW5kU2VpRGF0YVwiLGUuQ0FNX1ZJREVPX1RSQUNLX1NFVF9ERVZJQ0U9XCJDYW1lcmFWaWRlb1RyYWNrLnNldERldmljZVwiLGUuQ0FNX1ZJREVPX1RSQUNLX1NFVF9FTkNPREVSX0NPTkZJRz1cIkNhbWVyYVZpZGVvVHJhY2suc2V0RW5jb2RlckNvbmZpZ3VyYXRpb25cIixlLlJFTU9URV9WSURFT19UUkFDS19QTEFZPVwiUmVtb3RlVmlkZW9UcmFjay5wbGF5XCIsZS5SRU1PVEVfVklERU9fVFJBQ0tfU1RPUD1cIlJlbW90ZVZpZGVvVHJhY2suc3RvcFwiLGUuUkVNT1RFX1ZJREVPX1RSQUNLX0dFVF9WSURFT19WSVNJQkxFPVwiUmVtb3RlVmlkZW9UcmFjay5nZXRWaWRlb0VsZW1lbnRWaXNpYmxlU3RhdHVzXCIsZS5SRU1PVEVfQVVESU9fVFJBQ0tfUExBWT1cIlJlbW90ZUF1ZGlvVHJhY2sucGxheVwiLGUuUkVNT1RFX0FVRElPX1RSQUNLX1NUT1A9XCJSZW1vdGVBdWRpb1RyYWNrLnN0b3BcIixlLlJFTU9URV9BVURJT19TRVRfVk9MVU1FPVwiUmVtb3RlQXVkaW9UcmFjay5zZXRWb2x1bWVcIixlLlJFTU9URV9BVURJT19TRVRfT1VUUFVUX0RFVklDRT1cIlJlbW90ZUF1ZGlvVHJhY2suc2V0T3V0cHV0RGV2aWNlXCIsZS5HRVRfTUVESUFfU1RSRUFNX1RSQUNLPVwiVHJhY2suZ2V0TWVkaWFTdHJlYW1UcmFja1wiLGUuU1RSRUFNX1RZUEVfQ0hBTkdFPVwic3RyZWFtVHlwZUNoYW5nZVwiLGUuQ09OTkVDVElPTl9TVEFURV9DSEFOR0U9XCJjb25uZWN0aW9uU3RhdGVDaGFuZ2VcIixlLkxPQURfQ09ORklHX0ZST01fTE9DQUxTVE9SQUdFPVwibG9hZENvbmZpZ0Zyb21Mb2NhbFN0b3JhZ2VcIixlLklNQUdFX01PREVSQVRJT05fVVBMT0FEPVwiaW1hZ2VNb2RlcmF0aW9uVXBsb2FkXCIsZX0oe30pLGp5PWZ1bmN0aW9uKGUpe3JldHVybiBlLlRSQUNFUj1cInRyYWNlclwiLGV9KHt9KTtmdW5jdGlvbiBHeShlKXtyZXR1cm4geXkoZS50aW1lb3V0LFwiY29uZmlnLnRpbWVvdXRcIiwwLDFlNSkseXkoZS50aW1lb3V0RmFjdG9yLFwiY29uZmlnLnRpbWVvdXRGYWN0b3JcIiwwLDEwMCwhMSkseXkoZS5tYXhSZXRyeUNvdW50LFwiY29uZmlnLm1heFJldHJ5Q29uZmlnXCIsMCwxLzApLHl5KGUubWF4UmV0cnlUaW1lb3V0LFwiY29uZmlnLm1heFJldHJ5VGltZW91dFwiLDAsMS8wKSwhMH1sZXQgV3k9ZnVuY3Rpb24oZSl7cmV0dXJuIGVbZS5BVURJRU5DRV9MRVZFTF9MT1dfTEFURU5DWT0xXT1cIkFVRElFTkNFX0xFVkVMX0xPV19MQVRFTkNZXCIsZVtlLkFVRElFTkNFX0xFVkVMX1VMVFJBX0xPV19MQVRFTkNZPTJdPVwiQVVESUVOQ0VfTEVWRUxfVUxUUkFfTE9XX0xBVEVOQ1lcIixlW2UuQVVESUVOQ0VfTEVWRUxfU1lOQ19MQVRFTkNZPTNdPVwiQVVESUVOQ0VfTEVWRUxfU1lOQ19MQVRFTkNZXCIsZX0oe30pLEh5PWZ1bmN0aW9uKGUpe3JldHVybiBlLkxFQVZFPVwiTEVBVkVcIixlLk5FVFdPUktfRVJST1I9XCJORVRXT1JLX0VSUk9SXCIsZS5TRVJWRVJfRVJST1I9XCJTRVJWRVJfRVJST1JcIixlLlVJRF9CQU5ORUQ9XCJVSURfQkFOTkVEXCIsZS5GQUxMQkFDSz1cIkZBTExCQUNLXCIsZS5JUF9CQU5ORUQ9XCJJUF9CQU5ORURcIixlLkNIQU5ORUxfQkFOTkVEPVwiQ0hBTk5FTF9CQU5ORURcIixlLkxJQ0VOU0VfTUlTU0lORz1cIkxJQ0VOU0VfTUlTU0lOR1wiLGUuTElDRU5TRV9FWFBJUkVEPVwiTElDRU5TRV9FWFBJUkVEXCIsZS5MSUNFTlNFX01JTlVURVNfRVhDRUVERUQ9XCJMSUNFTlNFX01JTlVURVNfRVhDRUVERURcIixlLkxJQ0VOU0VfUEVSSU9EX0lOVkFMSUQ9XCJMSUNFTlNFX1BFUklPRF9JTlZBTElEXCIsZS5MSUNFTlNFX01VTFRJUExFX1NES19TRVJWSUNFPVwiTElDRU5TRV9NVUxUSVBMRV9TREtfU0VSVklDRVwiLGUuTElDRU5TRV9JTExFR0FMPVwiTElDRU5TRV9JTExFR0FMXCIsZS5UT0tFTl9FWFBJUkU9XCJUT0tFTl9FWFBJUkVcIixlfSh7fSk7ZnVuY3Rpb24gS3koZSl7aWYoIUFycmF5LmlzQXJyYXkoZSl8fGUubGVuZ3RoPDEpcmV0dXJuITE7dHJ5e2UuZm9yRWFjaCgoZT0+e2lmKCFlLnVybHMpdGhyb3cgRXJyb3IoKX0pKX1jYXRjaChlKXtyZXR1cm4hMX1yZXR1cm4hMH1mdW5jdGlvbiBZeShlKXtyZXR1cm4gYnkoZS50dXJuU2VydmVyVVJMLFwidHVyblNlcnZlclVSTFwiKSxieShlLnVzZXJuYW1lLFwidXNlcm5hbWVcIiksYnkoZS5wYXNzd29yZCxcInBhc3N3b3JkXCIpLGUudWRwcG9ydCYmeXkoZS51ZHBwb3J0LFwidWRwcG9ydFwiLDEsOTk5OTksITApLGUuZm9yY2V0dXJuJiZJeShlLmZvcmNldHVybixcImZvcmNldHVyblwiKSxlLnNlY3VyaXR5JiZJeShlLnNlY3VyaXR5LFwic2VjdXJpdHlcIiksZS50Y3Bwb3J0JiZ5eShlLnRjcHBvcnQsXCJ0Y3Bwb3J0XCIsMSw5OTk5OSwhMCksITB9ZnVuY3Rpb24gcXkoZSl7cmV0dXJuIHZvaWQgMCE9PWUubGV2ZWwmJnZ5KGUubGV2ZWwsXCJsZXZlbFwiLFsxLDIsM10pLHZvaWQgMCE9PWUuZGVsYXkmJnl5KGUuZGVsYXksXCJkZWxheVwiLDAsM2UzLCEwKSwhMH1sZXQgenk9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuQ09OTkVDVElPTl9TVEFURV9DSEFOR0U9XCJjb25uZWN0aW9uLXN0YXRlLWNoYW5nZVwiLGUuTUVESUFfUkVDT05ORUNUX1NUQVJUPVwibWVkaWEtcmVjb25uZWN0LXN0YXJ0XCIsZS5NRURJQV9SRUNPTk5FQ1RfRU5EPVwibWVkaWEtcmVjb25uZWN0LWVuZFwiLGUuSVNfVVNJTkdfQ0xPVURfUFJPWFk9XCJpcy11c2luZy1jbG91ZC1wcm94eVwiLGUuVVNFUl9KT0lORUQ9XCJ1c2VyLWpvaW5lZFwiLGUuVVNFUl9MRUFWRUQ9XCJ1c2VyLWxlZnRcIixlLlVTRVJfUFVCTElTSEVEPVwidXNlci1wdWJsaXNoZWRcIixlLlVTRVJfVU5QVUJMSVNIRUQ9XCJ1c2VyLXVucHVibGlzaGVkXCIsZS5VU0VSX0lORk9fVVBEQVRFRD1cInVzZXItaW5mby11cGRhdGVkXCIsZS5DTElFTlRfQkFOTkVEPVwiY2xpZW50LWJhbm5lZFwiLGUuQ0hBTk5FTF9NRURJQV9SRUxBWV9TVEFURT1cImNoYW5uZWwtbWVkaWEtcmVsYXktc3RhdGVcIixlLkNIQU5ORUxfTUVESUFfUkVMQVlfRVZFTlQ9XCJjaGFubmVsLW1lZGlhLXJlbGF5LWV2ZW50XCIsZS5WT0xVTUVfSU5ESUNBVE9SPVwidm9sdW1lLWluZGljYXRvclwiLGUuQ1JZUFRfRVJST1I9XCJjcnlwdC1lcnJvclwiLGUuT05fVE9LRU5fUFJJVklMRUdFX1dJTExfRVhQSVJFPVwidG9rZW4tcHJpdmlsZWdlLXdpbGwtZXhwaXJlXCIsZS5PTl9UT0tFTl9QUklWSUxFR0VfRElEX0VYUElSRT1cInRva2VuLXByaXZpbGVnZS1kaWQtZXhwaXJlXCIsZS5ORVRXT1JLX1FVQUxJVFk9XCJuZXR3b3JrLXF1YWxpdHlcIixlLlNUUkVBTV9UWVBFX0NIQU5HRUQ9XCJzdHJlYW0tdHlwZS1jaGFuZ2VkXCIsZS5TVFJFQU1fRkFMTEJBQ0s9XCJzdHJlYW0tZmFsbGJhY2tcIixlLlJFQ0VJVkVfTUVUQURBVEE9XCJyZWNlaXZlLW1ldGFkYXRhXCIsZS5TVFJFQU1fTUVTU0FHRT1cInN0cmVhbS1tZXNzYWdlXCIsZS5MSVZFX1NUUkVBTUlOR19FUlJPUj1cImxpdmUtc3RyZWFtaW5nLWVycm9yXCIsZS5MSVZFX1NUUkVBTUlOR19XQVJOSU5HPVwibGl2ZS1zdHJlYW1pbmctd2FybmluZ1wiLGUuRVhDRVBUSU9OPVwiZXhjZXB0aW9uXCIsZS5FUlJPUj1cImVycm9yXCIsZS5QMlBfTE9TVD1cInAycF9sb3N0XCIsZS5KT0lOX0ZBTExCQUNLX1RPX1BST1hZPVwiam9pbi1mYWxsYmFjay10by1wcm94eVwiLGUuQ0hBTk5FTF9GQUxMQkFDS19UT19XRUJTT0NLRVQ9XCJjaGFubmVsLWZhbGxiYWNrLXRvLXdlYnNvY2tldFwiLGUuTUVESUFfQ09OTkVDVElPTl9UWVBFX0NIQU5HRT1cIm1lZGlhLWNvbm5lY3Rpb24tdHlwZS1jaGFuZ2VcIixlLlBVQkxJU0hFRF9VU0VSX0xJU1Q9XCJwdWJsaXNoZWQtdXNlci1saXN0XCIsZS5DT05URU5UX0lOU1BFQ1RfQ09OTkVDVElPTl9TVEFURV9DSEFOR0U9XCJjb250ZW50LWluc3BlY3QtY29ubmVjdGlvbi1zdGF0ZS1jaGFuZ2VcIixlLkNPTlRFTlRfSU5TUEVDVF9FUlJPUj1cImNvbnRlbnQtaW5zcGVjdC1lcnJvclwiLGUuQ09OVEVOVF9JTlNQRUNUX1JFU1VMVD1cImNvbnRlbnQtaW5zcGVjdC1yZXN1bHRcIixlLklNQUdFX01PREVSQVRJT05fQ09OTkVDVElPTl9TVEFURV9DSEFOR0U9XCJpbWFnZS1tb2RlcmF0aW9uLWNvbm5lY3Rpb24tc3RhdGUtY2hhbmdlXCIsZX0oe30pLEp5PWZ1bmN0aW9uKGUpe3JldHVybiBlLk5FVFdPUktfRVJST1I9XCJORVRXT1JLX0VSUk9SXCIsZS5TRVJWRVJfRVJST1I9XCJTRVJWRVJfRVJST1JcIixlLk1VTFRJX0lQPVwiTVVMVElfSVBcIixlLlRJTUVPVVQ9XCJUSU1FT1VUXCIsZS5PRkZMSU5FPVwiT0ZGTElORVwiLGUuTEVBVkU9XCJMRUFWRVwiLGUuUDJQX0ZBSUxFRD1cIlAyUF9GQUlMRURcIixlLkZBTExCQUNLPVwiRkFMTEJBQ0tcIixlfSh7fSksWHk9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuT05MSU5FPVwiT05MSU5FXCIsZS5PRkZMSU5FPVwiT0ZGTElORVwiLGV9KHt9KSxReT1mdW5jdGlvbihlKXtyZXR1cm4gZS5ORVRXT1JLX1NUQVRFX0NIQU5HRT1cIk5FVFdPUktfU1RBVEVfQ0hBTkdFXCIsZS5PTkxJTkU9XCJPTkxJTkVcIixlLk9GRkxJTkU9XCJPRkZMSU5FXCIsZX0oe30pO2Z1bmN0aW9uIFp5KGUsdCl7Zm9yKHZhciBpPWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkoaT4yP2ktMjowKSxyPTI7cjxpO3IrKyluW3ItMl09YXJndW1lbnRzW3JdO3JldHVybiAwPT09ZS5nZXRMaXN0ZW5lcnModCkubGVuZ3RoP0doLnJlamVjdChuZXcgQ3koUnkuVU5FWFBFQ1RFRF9FUlJPUixcImNhbiBub3QgZW1pdCBwcm9taXNlXCIpKTpuZXcgR2goKChpLHIpPT57ZS5lbWl0KHQsLi4ubixpLHIpfSkpfWZ1bmN0aW9uICR5KGUsdCl7aWYoMD09PWUuZ2V0TGlzdGVuZXJzKHQpLmxlbmd0aClyZXR1cm4gR2gucmVzb2x2ZSgpO2Zvcih2YXIgaT1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KGk+Mj9pLTI6MCkscj0yO3I8aTtyKyspbltyLTJdPWFyZ3VtZW50c1tyXTtyZXR1cm4gWnkoZSx0LC4uLm4pfWZ1bmN0aW9uIGVBKGUsdCl7aWYoMD09PWUuZ2V0TGlzdGVuZXJzKHQpLmxlbmd0aClyZXR1cm4gbnVsbDtmb3IodmFyIGk9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheShpPjI/aS0yOjApLHI9MjtyPGk7cisrKW5bci0yXT1hcmd1bWVudHNbcl07cmV0dXJuIHRBKGUsdCwuLi5uKX1mdW5jdGlvbiB0QShlLHQpe2xldCBpPW51bGwsbj1udWxsO2Zvcih2YXIgcj1hcmd1bWVudHMubGVuZ3RoLG89bmV3IEFycmF5KHI+Mj9yLTI6MCkscz0yO3M8cjtzKyspb1tzLTJdPWFyZ3VtZW50c1tzXTtpZihlLmVtaXQodCwuLi5vLChlPT57aT1lfSksKGU9PntuPWV9KSksbnVsbCE9PW4pdGhyb3cgbjtpZihudWxsPT09aSl0aHJvdyBuZXcgQ3koUnkuVU5FWFBFQ1RFRF9FUlJPUixcImhhbmRsZXIgaXMgbm90IHN5bmNcIik7cmV0dXJuIGl9Y29uc3QgaUE9bmV3IGNsYXNzIGV4dGVuZHMgeHl7c2V0IG5ldHdvcmtTdGF0ZShlKXt0aGlzLmVtaXQoUXkuTkVUV09SS19TVEFURV9DSEFOR0UsZSx0aGlzLl9uZXR3b3JrU3RhdGUpLGU9PT1YeS5PTkxJTkU/dGhpcy5lbWl0KFF5Lk9OTElORSk6ZT09PVh5Lk9GRkxJTkUmJih0aGlzLm9ubGluZVdhaXRlcj1uZXcgR2goKGU9Pnt0aGlzLm9uY2UoUXkuT05MSU5FLCgoKT0+e3RoaXMub25saW5lV2FpdGVyPXZvaWQgMCxlKFh5Lk9OTElORSl9KSl9KSksdGhpcy5lbWl0KFF5Lk9GRkxJTkUpKSx0aGlzLl9uZXR3b3JrU3RhdGU9ZX1nZXQgbmV0d29ya1N0YXRlKCl7cmV0dXJuIHRoaXMuX25ldHdvcmtTdGF0ZX1nZXQgaXNPbmxpbmUoKXtyZXR1cm4gdGhpcy5fbmV0d29ya1N0YXRlPT09WHkuT05MSU5FfWNvbnN0cnVjdG9yKCl7c3VwZXIoKSxUeSh0aGlzLFwiX21vZHVsZU5hbWVcIixcIm5ldHdvcmstaW5kaWNhdG9yXCIpLFR5KHRoaXMsXCJfbmV0d29ya1N0YXRlXCIsWHkuT05MSU5FKSxUeSh0aGlzLFwib25saW5lV2FpdGVyXCIsdm9pZCAwKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9ubGluZVwiLCgoKT0+e3RoaXMubmV0d29ya1N0YXRlPVh5Lk9OTElORX0pKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwoKCk9Pnt0aGlzLm5ldHdvcmtTdGF0ZT1YeS5PRkZMSU5FfSkpfX07ZnVuY3Rpb24gbkEoZSx0KXtjb25zdCBpPWUuaW5kZXhPZih0KTstMSE9PWkmJmUuc3BsaWNlKGksMSl9ZnVuY3Rpb24gckEoZSl7Y29uc3QgdD1bXTtyZXR1cm4gZS5mb3JFYWNoKChlPT57LTE9PT10LmluZGV4T2YoZSkmJnQucHVzaChlKX0pKSx0fWZ1bmN0aW9uIG9BKGUpe3ZvaWQgMCE9PUdoP0doLnJlc29sdmUoKS50aGVuKGUpOnNldFRpbWVvdXQoZSwwKX1mdW5jdGlvbiBzQShlKXtyZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShlKSl9ZnVuY3Rpb24gYUEoZSl7dHJ5e3JldHVybiBzQShlKX1jYXRjaCh0KXtyZXR1cm4gZX19Y29uc3QgY0E9e307ZnVuY3Rpb24gZEEoZSx0KXtjQVt0XXx8KGNBW3RdPSEwLGUoKSl9ZnVuY3Rpb24gbEEoZSl7Y29uc3QgdD13aW5kb3cuYXRvYihlKSxpPW5ldyBVaW50OEFycmF5KG5ldyBBcnJheUJ1ZmZlcih0Lmxlbmd0aCkpO2ZvcihsZXQgZT0wO2U8dC5sZW5ndGg7ZSs9MSlpW2VdPXQuY2hhckNvZGVBdChlKTtyZXR1cm4gaX1mdW5jdGlvbiB1QShlKXtsZXQgdD1cIlwiO2ZvcihsZXQgaT0wO2k8ZS5sZW5ndGg7aSs9MSl0Kz1TdHJpbmcuZnJvbUNoYXJDb2RlKGVbaV0pO3JldHVybiB3aW5kb3cuYnRvYSh0KX1mdW5jdGlvbiBoQShlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06MTYsaT0obmV3IFRleHRFbmNvZGVyKS5lbmNvZGUoZSk7aWYoaS5sZW5ndGg+dClpPWkuc2xpY2UoMCx0KTtlbHNlIGlmKGkubGVuZ3RoPHQpe2NvbnN0IGU9bmV3IFVpbnQ4QXJyYXkodCk7ZS5zZXQoaSksaT1lfXJldHVybiBpfWZ1bmN0aW9uIHBBKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSksaT0wO2k8ZTtpKyspdFtpXT1hcmd1bWVudHNbaV07Y29uc3Qgbj1Kbih0KS5jYWxsKHQsKChlLHQpPT5lK3QubGVuZ3RoKSwwKSxyPW5ldyBVaW50OEFycmF5KG5ldyBBcnJheUJ1ZmZlcihuKSk7bGV0IG89MDtyZXR1cm4gdC5mb3JFYWNoKChlPT57ci5zZXQoZSxvKSxvKz1lLmxlbmd0aH0pKSxyfWZ1bmN0aW9uIF9BKGUpe3JldHVybiB3aW5kb3cuVGV4dEVuY29kZXI/KG5ldyBUZXh0RW5jb2RlcikuZW5jb2RlKGUpLmxlbmd0aDplLmxlbmd0aH1mdW5jdGlvbiBFQShlKXtsZXQgdD0wO3JldHVybigvRGluZ1RhbGsvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfHwvQWxpQXBwL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSkmJmUucmVhbEZvcm1EYXRhJiYoZT1lLnJlYWxGb3JtRGF0YSksZS5mb3JFYWNoKChlPT57dCs9XCJzdHJpbmdcIj09dHlwZW9mIGU/X0EoZSk6ZS5zaXplfSkpLHQrMTM4fWZ1bmN0aW9uIGZBKGUpe2NvbnN0IHQ9bmV3IEN5KFJ5LlRJTUVPVVQsXCJ0aW1lb3V0XCIpO3JldHVybiBuZXcgR2goKChpLG4pPT57d2luZG93LnNldFRpbWVvdXQoKCgpPT5uKHQpKSxlKX0pKX1mdW5jdGlvbiBtQShlKXtyZXR1cm4gbmV3IEdoKCh0PT57d2luZG93LnNldFRpbWVvdXQodCxlKX0pKX1mdW5jdGlvbiBUQSgpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTo3LHQ9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDA7Y29uc3QgaT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDE2KS5zdWJzdHIoMixlKS50b0xvd2VyQ2FzZSgpO3JldHVybiBpLmxlbmd0aD09PWU/XCJcIi5jb25jYXQodCkuY29uY2F0KGkpOlwiXCIuY29uY2F0KHQpLmNvbmNhdChpKStUQShlLWkubGVuZ3RoLFwiXCIpfWZ1bmN0aW9uIFNBKCl7cmV0dXJuIFRBKDMyLFwiXCIpLnRvVXBwZXJDYXNlKCl9Y29uc3QgZ0E9KCk9Pnt9LFJBPW5ldyBjbGFzc3tjb25zdHJ1Y3Rvcigpe1R5KHRoaXMsXCJmbk1hcFwiLG5ldyBNYXApfXRocm90dGxlQnlLZXkoZSx0LGksbil7Zm9yKHZhciByPWFyZ3VtZW50cy5sZW5ndGgsbz1uZXcgQXJyYXkocj40P3ItNDowKSxzPTQ7czxyO3MrKylvW3MtNF09YXJndW1lbnRzW3NdO2lmKHRoaXMuZm5NYXAuaGFzKHQpKXtjb25zdCByPXRoaXMuZm5NYXAuZ2V0KHQpO2lmKHIudGhyZXNob2xkIT09aSl7ci5mbiguLi5yLmFyZ3MpLGNsZWFyVGltZW91dChyLnRpbWVyKTtjb25zdCBzPXdpbmRvdy5zZXRUaW1lb3V0KCgoKT0+e2NvbnN0IGU9dGhpcy5mbk1hcC5nZXQodCk7ZSYmZS5mbiguLi5lLmFyZ3MpLHRoaXMuZm5NYXAuZGVsZXRlKHQpfSksaSk7dGhpcy5mbk1hcC5zZXQodCx7Zm46ZSx0aHJlc2hvbGQ6aSx0aW1lcjpzLGFyZ3M6byxza2lwRm46bn0pfWVsc2Ugci5za2lwRm4mJnIuc2tpcEZuKC4uLnIuYXJncyksdGhpcy5mbk1hcC5zZXQodCxneShneSh7fSxyKSx7fSx7Zm46ZSxhcmdzOm8sc2tpcEZuOm59KSl9ZWxzZXtjb25zdCByPXdpbmRvdy5zZXRUaW1lb3V0KCgoKT0+e2NvbnN0IGU9dGhpcy5mbk1hcC5nZXQodCk7ZSYmZS5mbiguLi5lLmFyZ3MpLHRoaXMuZm5NYXAuZGVsZXRlKHQpfSksaSk7dGhpcy5mbk1hcC5zZXQodCx7Zm46ZSx0aHJlc2hvbGQ6aSx0aW1lcjpyLGFyZ3M6byxza2lwRm46bn0pfX19LENBPVJBLnRocm90dGxlQnlLZXkuYmluZChSQSk7ZnVuY3Rpb24gSUEoZSl7cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIGUmJm51bGwhPT1lJiYhKGUgaW5zdGFuY2VvZiBSZWdFeHApfWZ1bmN0aW9uIHZBKGUsdCl7aWYoIUlBKGUpfHwhSUEodCkpcmV0dXJuIHQ7aWYoQXJyYXkuaXNBcnJheShlKSYmIUFycmF5LmlzQXJyYXkodCl8fCFBcnJheS5pc0FycmF5KGUpJiZBcnJheS5pc0FycmF5KHQpKXJldHVybiB0O2lmKEFycmF5LmlzQXJyYXkodCkmJkFycmF5LmlzQXJyYXkoZSkpe2NvbnN0IGk9Wy4uLmVdO2ZvcihsZXQgbj0wO248dC5sZW5ndGg7bisrKWlbbl09dkEoZVtuXSx0W25dKTtyZXR1cm4gaX17Y29uc3QgaT1neSh7fSxlKTtmb3IoY29uc3QgbiBpbiB0KU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LG4pJiYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbik/aVtuXT12QShlW25dLHRbbl0pOmlbbl09dFtuXSk7cmV0dXJuIGl9fWZ1bmN0aW9uIHlBKGUsdCl7bGV0IGk9WzBdO2lmKHQmJihpPW5ldyBBcnJheSh0KS5maWxsKDApKSwwPT09ZSlyZXR1cm4gaTtsZXQgbj0wO2Zvcig7ZT4wJiYoaVtuXT0yNTUmZSxlPj49OCxuKyssIXR8fG4hPT10KTspO3JldHVybiBpfWZ1bmN0aW9uIEFBKGUpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiBlP2U6ZS5leGFjdHx8ZS5pZGVhbHx8ZS5tYXh8fGUubWlufHwwfWZ1bmN0aW9uIGJBKGUpe2NvbnN0IHQ9XCIwMTIzNDU2Nzg5YWJjZGVmXCI7ZnVuY3Rpb24gaShlKXtsZXQgaSxuPVwiXCI7Zm9yKGk9MDtpPD0zO2krKyluKz10LmNoYXJBdChlPj44KmkrNCYxNSkrdC5jaGFyQXQoZT4+OCppJjE1KTtyZXR1cm4gbn1mdW5jdGlvbiBuKGUsdCl7Y29uc3QgaT0oNjU1MzUmZSkrKDY1NTM1JnQpO3JldHVybihlPj4xNikrKHQ+PjE2KSsoaT4+MTYpPDwxNnw2NTUzNSZpfWZ1bmN0aW9uIHIoZSx0LGkscixvLHMpe3JldHVybiBuKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU8PHR8ZT4+PjMyLXR9KG4obih0LGUpLG4ocixzKSksbyksaSl9ZnVuY3Rpb24gbyhlLHQsaSxuLG8scyxhKXtyZXR1cm4gcih0Jml8fnQmbixlLHQsbyxzLGEpfWZ1bmN0aW9uIHMoZSx0LGksbixvLHMsYSl7cmV0dXJuIHIodCZufGkmfm4sZSx0LG8scyxhKX1mdW5jdGlvbiBhKGUsdCxpLG4sbyxzLGEpe3JldHVybiByKHReaV5uLGUsdCxvLHMsYSl9ZnVuY3Rpb24gYyhlLHQsaSxuLG8scyxhKXtyZXR1cm4gcihpXih0fH5uKSxlLHQsbyxzLGEpfWNvbnN0IGQ9ZnVuY3Rpb24oZSl7bGV0IHQ7Y29uc3QgaT0xKyhlLmxlbmd0aCs4Pj42KSxuPW5ldyBBcnJheSgxNippKTtmb3IodD0wO3Q8MTYqaTt0Kyspblt0XT0wO2Zvcih0PTA7dDxlLmxlbmd0aDt0Kyspblt0Pj4yXXw9ZS5jaGFyQ29kZUF0KHQpPDx0JTQqODtyZXR1cm4gblt0Pj4yXXw9MTI4PDx0JTQqOCxuWzE2KmktMl09OCplLmxlbmd0aCxufShlKTtsZXQgbCx1LGgscCxfLEU9MTczMjU4NDE5MyxmPS0yNzE3MzM4NzksbT0tMTczMjU4NDE5NCxUPTI3MTczMzg3ODtmb3IobD0wO2w8ZC5sZW5ndGg7bCs9MTYpdT1FLGg9ZixwPW0sXz1ULEU9byhFLGYsbSxULGRbbCswXSw3LC02ODA4NzY5MzYpLFQ9byhULEUsZixtLGRbbCsxXSwxMiwtMzg5NTY0NTg2KSxtPW8obSxULEUsZixkW2wrMl0sMTcsNjA2MTA1ODE5KSxmPW8oZixtLFQsRSxkW2wrM10sMjIsLTEwNDQ1MjUzMzApLEU9byhFLGYsbSxULGRbbCs0XSw3LC0xNzY0MTg4OTcpLFQ9byhULEUsZixtLGRbbCs1XSwxMiwxMjAwMDgwNDI2KSxtPW8obSxULEUsZixkW2wrNl0sMTcsLTE0NzMyMzEzNDEpLGY9byhmLG0sVCxFLGRbbCs3XSwyMiwtNDU3MDU5ODMpLEU9byhFLGYsbSxULGRbbCs4XSw3LDE3NzAwMzU0MTYpLFQ9byhULEUsZixtLGRbbCs5XSwxMiwtMTk1ODQxNDQxNyksbT1vKG0sVCxFLGYsZFtsKzEwXSwxNywtNDIwNjMpLGY9byhmLG0sVCxFLGRbbCsxMV0sMjIsLTE5OTA0MDQxNjIpLEU9byhFLGYsbSxULGRbbCsxMl0sNywxODA0NjAzNjgyKSxUPW8oVCxFLGYsbSxkW2wrMTNdLDEyLC00MDM0MTEwMSksbT1vKG0sVCxFLGYsZFtsKzE0XSwxNywtMTUwMjAwMjI5MCksZj1vKGYsbSxULEUsZFtsKzE1XSwyMiwxMjM2NTM1MzI5KSxFPXMoRSxmLG0sVCxkW2wrMV0sNSwtMTY1Nzk2NTEwKSxUPXMoVCxFLGYsbSxkW2wrNl0sOSwtMTA2OTUwMTYzMiksbT1zKG0sVCxFLGYsZFtsKzExXSwxNCw2NDM3MTc3MTMpLGY9cyhmLG0sVCxFLGRbbCswXSwyMCwtMzczODk3MzAyKSxFPXMoRSxmLG0sVCxkW2wrNV0sNSwtNzAxNTU4NjkxKSxUPXMoVCxFLGYsbSxkW2wrMTBdLDksMzgwMTYwODMpLG09cyhtLFQsRSxmLGRbbCsxNV0sMTQsLTY2MDQ3ODMzNSksZj1zKGYsbSxULEUsZFtsKzRdLDIwLC00MDU1Mzc4NDgpLEU9cyhFLGYsbSxULGRbbCs5XSw1LDU2ODQ0NjQzOCksVD1zKFQsRSxmLG0sZFtsKzE0XSw5LC0xMDE5ODAzNjkwKSxtPXMobSxULEUsZixkW2wrM10sMTQsLTE4NzM2Mzk2MSksZj1zKGYsbSxULEUsZFtsKzhdLDIwLDExNjM1MzE1MDEpLEU9cyhFLGYsbSxULGRbbCsxM10sNSwtMTQ0NDY4MTQ2NyksVD1zKFQsRSxmLG0sZFtsKzJdLDksLTUxNDAzNzg0KSxtPXMobSxULEUsZixkW2wrN10sMTQsMTczNTMyODQ3MyksZj1zKGYsbSxULEUsZFtsKzEyXSwyMCwtMTkyNjYwNzczNCksRT1hKEUsZixtLFQsZFtsKzVdLDQsLTM3ODU1OCksVD1hKFQsRSxmLG0sZFtsKzhdLDExLC0yMDIyNTc0NDYzKSxtPWEobSxULEUsZixkW2wrMTFdLDE2LDE4MzkwMzA1NjIpLGY9YShmLG0sVCxFLGRbbCsxNF0sMjMsLTM1MzA5NTU2KSxFPWEoRSxmLG0sVCxkW2wrMV0sNCwtMTUzMDk5MjA2MCksVD1hKFQsRSxmLG0sZFtsKzRdLDExLDEyNzI4OTMzNTMpLG09YShtLFQsRSxmLGRbbCs3XSwxNiwtMTU1NDk3NjMyKSxmPWEoZixtLFQsRSxkW2wrMTBdLDIzLC0xMDk0NzMwNjQwKSxFPWEoRSxmLG0sVCxkW2wrMTNdLDQsNjgxMjc5MTc0KSxUPWEoVCxFLGYsbSxkW2wrMF0sMTEsLTM1ODUzNzIyMiksbT1hKG0sVCxFLGYsZFtsKzNdLDE2LC03MjI1MjE5NzkpLGY9YShmLG0sVCxFLGRbbCs2XSwyMyw3NjAyOTE4OSksRT1hKEUsZixtLFQsZFtsKzldLDQsLTY0MDM2NDQ4NyksVD1hKFQsRSxmLG0sZFtsKzEyXSwxMSwtNDIxODE1ODM1KSxtPWEobSxULEUsZixkW2wrMTVdLDE2LDUzMDc0MjUyMCksZj1hKGYsbSxULEUsZFtsKzJdLDIzLC05OTUzMzg2NTEpLEU9YyhFLGYsbSxULGRbbCswXSw2LC0xOTg2MzA4NDQpLFQ9YyhULEUsZixtLGRbbCs3XSwxMCwxMTI2ODkxNDE1KSxtPWMobSxULEUsZixkW2wrMTRdLDE1LC0xNDE2MzU0OTA1KSxmPWMoZixtLFQsRSxkW2wrNV0sMjEsLTU3NDM0MDU1KSxFPWMoRSxmLG0sVCxkW2wrMTJdLDYsMTcwMDQ4NTU3MSksVD1jKFQsRSxmLG0sZFtsKzNdLDEwLC0xODk0OTg2NjA2KSxtPWMobSxULEUsZixkW2wrMTBdLDE1LC0xMDUxNTIzKSxmPWMoZixtLFQsRSxkW2wrMV0sMjEsLTIwNTQ5MjI3OTkpLEU9YyhFLGYsbSxULGRbbCs4XSw2LDE4NzMzMTMzNTkpLFQ9YyhULEUsZixtLGRbbCsxNV0sMTAsLTMwNjExNzQ0KSxtPWMobSxULEUsZixkW2wrNl0sMTUsLTE1NjAxOTgzODApLGY9YyhmLG0sVCxFLGRbbCsxM10sMjEsMTMwOTE1MTY0OSksRT1jKEUsZixtLFQsZFtsKzRdLDYsLTE0NTUyMzA3MCksVD1jKFQsRSxmLG0sZFtsKzExXSwxMCwtMTEyMDIxMDM3OSksbT1jKG0sVCxFLGYsZFtsKzJdLDE1LDcxODc4NzI1OSksZj1jKGYsbSxULEUsZFtsKzldLDIxLC0zNDM0ODU1NTEpLEU9bihFLHUpLGY9bihmLGgpLG09bihtLHApLFQ9bihULF8pO3JldHVybiBpKEUpK2koZikraShtKStpKFQpfWxldCB3QT0xLE9BPWNvbnNvbGUsTkE9Y2xhc3N7c3RhdGljIHNldExvZ2dlcihlKXtPQT1lfWNvbnN0cnVjdG9yKGUpe1R5KHRoaXMsXCJsb2NraW5nUHJvbWlzZVwiLEdoLnJlc29sdmUoKSksVHkodGhpcyxcImxvY2tzXCIsMCksVHkodGhpcyxcIm5hbWVcIixcIlwiKSxUeSh0aGlzLFwibG9ja0lkXCIsdm9pZCAwKSx0aGlzLmxvY2tJZD13QSsrLGUmJih0aGlzLm5hbWU9ZSksT0EuZGVidWcoXCJbbG9jay1cIi5jb25jYXQodGhpcy5uYW1lLFwiLVwiKS5jb25jYXQodGhpcy5sb2NrSWQsXCJdIGlzIGNyZWF0ZWQuXCIpKX1nZXQgaXNMb2NrZWQoKXtyZXR1cm4gdGhpcy5sb2Nrcz4wfWxvY2soZSl7bGV0IHQ7dGhpcy5sb2Nrcys9MSxPQS5kZWJ1ZyhcIltsb2NrLVwiLmNvbmNhdCh0aGlzLm5hbWUsXCItXCIpLmNvbmNhdCh0aGlzLmxvY2tJZCxcIl0gaXMgbG9ja2VkLCBjdXJyZW50IHF1ZXVlIFwiKS5jb25jYXQodGhpcy5sb2NrcyxcIi4gXCIpLmNvbmNhdChcInN0cmluZ1wiPT10eXBlb2YgZT9lOlwiXCIpKTtjb25zdCBpPW5ldyBHaCgoaT0+e3Q9KCk9Pnt0aGlzLmxvY2tzLT0xLE9BLmRlYnVnKFwiW2xvY2stXCIuY29uY2F0KHRoaXMubmFtZSxcIi1cIikuY29uY2F0KHRoaXMubG9ja0lkLFwiXSBpcyBub3QgbG9ja2VkLCBjdXJyZW50IHF1ZXVlIFwiKS5jb25jYXQodGhpcy5sb2NrcyxcIi4gXCIpLmNvbmNhdChcInN0cmluZ1wiPT10eXBlb2YgZT9lOlwiXCIpKSxpKCl9fSkpLG49dGhpcy5sb2NraW5nUHJvbWlzZS50aGVuKCgoKT0+dCkpO3JldHVybiB0aGlzLmxvY2tpbmdQcm9taXNlPXRoaXMubG9ja2luZ1Byb21pc2UudGhlbigoKCk9PmkpKSxufX07ZnVuY3Rpb24gREEoZSx0KXtyZXR1cm4gZnVuY3Rpb24oaSxuLHIpe2NvbnN0IG89ci52YWx1ZTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBvKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCB1c2UgbXV0ZXggb24gb2JqZWN0IHByb3BlcnR5LlwiKTtyZXR1cm4gci52YWx1ZT1hc3luYyBmdW5jdGlvbigpe2NvbnN0IGk9dGhpc1t0XTtpZighaSl0aHJvdyBuZXcgRXJyb3IoXCJtdXRleCBwcm9wZXJ0eSBrZXkgXCIuY29uY2F0KHQsXCIgZG9lc24ndCBleGlzdCBvbiBcIikuY29uY2F0KGUpKTtjb25zdCByPWF3YWl0IGkubG9jayhcIkZyb20gXCIuY29uY2F0KGUsXCIuXCIpLmNvbmNhdChuKSk7dHJ5e2Zvcih2YXIgcz1hcmd1bWVudHMubGVuZ3RoLGE9bmV3IEFycmF5KHMpLGM9MDtjPHM7YysrKWFbY109YXJndW1lbnRzW2NdO3JldHVybiBhd2FpdCBvLmFwcGx5KHRoaXMsYSl9ZmluYWxseXtyKCl9fSxyfX1jb25zdCBQQT17dGltZW91dDo1MDAsdGltZW91dEZhY3RvcjoxLjUsbWF4UmV0cnlDb3VudDoxLzAsbWF4UmV0cnlUaW1lb3V0OjFlNH07ZnVuY3Rpb24gTEEoZSx0KXtjb25zdCBpPU1hdGguZmxvb3IodC50aW1lb3V0Kk1hdGgucG93KHQudGltZW91dEZhY3RvcixlKSk7cmV0dXJuIE1hdGgubWluKHQubWF4UmV0cnlUaW1lb3V0LGkpfWZ1bmN0aW9uIGtBKGUsdCxpLG4pe2NvbnN0IHI9T2JqZWN0LmFzc2lnbih7fSxQQSxuKTtsZXQgbz1yLnRpbWVvdXQ7Y29uc3Qgcz1hc3luYygpPT57YXdhaXQgZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBHaCgodD0+e3dpbmRvdy5zZXRUaW1lb3V0KHQsZSl9KSl9KG8pLG8qPXIudGltZW91dEZhY3RvcixvPU1hdGgubWluKHIubWF4UmV0cnlUaW1lb3V0LG8pfTtsZXQgYT0hMTtjb25zdCBjPW5ldyBHaCgoYXN5bmMobixvKT0+e3Q9dHx8KCgpPT4hMSksaT1pfHwoKCk9PiEwKTtmb3IobGV0IGM9MDtjPHIubWF4UmV0cnlDb3VudDtjKz0xKXtpZihhKXJldHVybiBvKG5ldyBDeShSeS5PUEVSQVRJT05fQUJPUlRFRCkpO3RyeXtjb25zdCBpPWF3YWl0IGUoKTtpZighdChpLGMpKXJldHVybiBuKGkpO2lmKGMrMT09PXIubWF4UmV0cnlDb3VudClyZXR1cm4gbihpKTthd2FpdCBzKCl9Y2F0Y2goZSl7aWYoIWkoZSxjKSlyZXR1cm4gbyhlKTtpZihjKzE9PT1yLm1heFJldHJ5Q291bnQpcmV0dXJuIG8oZSk7YXdhaXQgcygpfX19KSk7cmV0dXJuIGMuY2FuY2VsPSgpPT5hPSEwLGN9Y2xhc3MgTUF7Y29uc3RydWN0b3IoZSl7VHkodGhpcyxcImlucHV0XCIsW10pLFR5KHRoaXMsXCJzaXplXCIsdm9pZCAwKSx0aGlzLnNpemU9ZX1hZGQoZSl7dGhpcy5pbnB1dC5wdXNoKGUpLHRoaXMuaW5wdXQubGVuZ3RoPnRoaXMuc2l6ZSYmdGhpcy5pbnB1dC5zcGxpY2UoMCwxKX1tZWFuKCl7dmFyIGU7cmV0dXJuIDA9PT10aGlzLmlucHV0Lmxlbmd0aD8wOkpuKGU9dGhpcy5pbnB1dCkuY2FsbChlLCgoZSx0KT0+ZSt0KSkvdGhpcy5pbnB1dC5sZW5ndGh9fWxldCBVQSx4QT0wLFZBPTA7ZnVuY3Rpb24gRkEoZSx0LGksbil7cmV0dXJuIG5ldyBHaCgoKHIsbyk9Pnt0LnJlc3BvbnNlVHlwZT10LnJlc3BvbnNlVHlwZXx8XCJqc29uXCIsdC5kYXRhJiYhaT8odC5kYXRhPUpTT04uc3RyaW5naWZ5KHQuZGF0YSkseEErPV9BKHQuZGF0YSkpOmkmJih0LmRhdGEuc2l6ZT94QSs9dC5kYXRhLnNpemU6dC5kYXRhIGluc3RhbmNlb2YgRm9ybURhdGE/eEErPUVBKHQuZGF0YSk6eEErPV9BKEpTT04uc3RyaW5naWZ5KHQuZGF0YSkpKSx0LmhlYWRlcnM9dC5oZWFkZXJzfHx7fSx0LmhlYWRlcnNbXCJDb250ZW50LVR5cGVcIl09dC5oZWFkZXJzW1wiQ29udGVudC1UeXBlXCJdfHxcImFwcGxpY2F0aW9uL2pzb25cIix0Lm1ldGhvZD1cIlBPU1RcIix0LnVybD1lLEx2LnJlcXVlc3QodCkudGhlbigoZT0+e1wic3RyaW5nXCI9PXR5cGVvZiBlLmRhdGE/VkErPV9BKGUuZGF0YSk6ZS5kYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXJ8fGUuZGF0YSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXk/VkErPWUuZGF0YS5ieXRlTGVuZ3RoOlZBKz1fQShKU09OLnN0cmluZ2lmeShlLmRhdGEpKSxuJiZyKHtkYXRhOmUuZGF0YSxoZWFkZXJzOmUuaGVhZGVyc30pLHIoZS5kYXRhKX0pKS5jYXRjaCgoZT0+e0x2LmlzQ2FuY2VsKGUpP28obmV3IEN5KFJ5Lk9QRVJBVElPTl9BQk9SVEVELFwiY2FuY2VsIHRva2VuIGNhbmNlbGVkXCIpKTpcIkVDT05OQUJPUlRFRFwiPT09ZS5jb2RlP28obmV3IEN5KFJ5Lk5FVFdPUktfVElNRU9VVCxlLm1lc3NhZ2UpKTplLnJlc3BvbnNlP28obmV3IEN5KFJ5Lk5FVFdPUktfUkVTUE9OU0VfRVJST1IsZS5yZXNwb25zZS5zdGF0dXMpKTpvKG5ldyBDeShSeS5ORVRXT1JLX0VSUk9SLGUubWVzc2FnZSkpfSkpfSkpfWFzeW5jIGZ1bmN0aW9uIEJBKGUsdCl7Y29uc3QgaT1uZXcgQmxvYihbdC5kYXRhXSx7dHlwZTpcImJ1ZmZlclwifSk7cmV0dXJuIGF3YWl0IEZBKGUsZ3koZ3koe30sdCkse30se2RhdGE6aSxoZWFkZXJzOntcIkNvbnRlbnQtVHlwZVwiOlwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCJ9fSksITApfWNvbnN0IGpBPSgpPT52b2lkIDAhPT13aW5kb3cuaXNTZWN1cmVDb250ZXh0O2NvbnN0IEdBPWZ1bmN0aW9uKGUpe2lmKGUubWF0Y2goL1swLTldK1xcLlswLTldK1xcLlswLTldKyQvKSlyZXR1cm4gZTtjb25zdCB0PWUubWF0Y2goLyhbMC05XStcXC5bMC05XStcXC5bMC05XSspXFwtKFswLTldKykvKTtpZih0JiZ0WzFdJiZ0WzJdKXtjb25zdCBlPXRbMV0saT10WzJdO3JldHVyblwiXCIuY29uY2F0KGUsXCIuXCIpLmNvbmNhdChpKX1yZXR1cm5cIjQuMC4wLjk5OVwifShcIjQuMjIuMVwiKSxXQT1mdW5jdGlvbigpe3RyeXtyZXR1cm4hMD09PUpTT04ucGFyc2UoXCJ0cnVlXCIpfWNhdGNoKGUpe3JldHVybiEwfX0oKTtsZXQgSEE9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuRGVmYXVsdD1cImRlZmF1bHRcIixlLkF1dG89XCJhdXRvXCIsZS5SZWxheT1cInJlbGF5XCIsZS5TZFJ0bj1cInNkLXJ0blwiLGV9KHt9KTtjb25zdCBLQT1mdW5jdGlvbigpe2NvbnN0IGU9XCJ1c1wiLmNvbmNhdChcImVybmFcIixcIm1lXCIpLHQ9XCJwYVwiLmNvbmNhdChcInNzd29cIixcInJkXCIpLGk9W1widFwiLFwic1wiLFwidFwiXTtpLnNwbGljZSgxLDAsXCJlXCIpO2NvbnN0IG49aS5qb2luKFwiXCIpLHI9W107Zm9yKGxldCBlPTA7ZTw2O2UrKylyLnB1c2goXCIxXCIpO2NvbnN0IG89ci5qb2luKFwiXCIpLHM9e307cmV0dXJuIHNbZV09bixzW3RdPW8sT2JqZWN0LmFzc2lnbihzLHt0dXJuU2VydmVyVVJMOlwiXCIsdGNwcG9ydDozNDMzLHVkcHBvcnQ6MzQ3OCxmb3JjZXR1cm46ITF9KX0oKTt3aW5kb3cuREVGQVVMVF9UVVJOX0NPTkZJRz1LQTtjb25zdCBZQT17TUlOX0ZSQU1FX1JBVEU6MSxNQVhfRlJBTUVfUkFURTozMCxNQVhfVEhSRVNIT0xEX0ZSQU1FUkFURTozMCxCSVRSQVRFX01JTl9USFJFU0hPTEQ6MTAwLEJJVFJBVEVfTUFYX1RIUkVTSE9MRDoxMDAsTUFYX1NDQUxFOjUsQldFX1NDQUxFX1VQX1RIUkVTSE9MRDouNixCV0VfU0NBTEVfRE9XTl9USFJFU0hPTEQ6LjYsUEVSRl9TQ0FMRV9VUF9USFJFU0hPTEQ6LjcsUEVSRl9TQ0FMRV9ET1dOX1RIUkVTSE9MRDouNixNT1RJT05fUkVTT0xVVElPTl9GQUNUT1I6LjgsTU9USU9OX0JJVFJBVEVfRkFDVE9SOi42LERFVEFJTF9GUkFNRVJBVEVfRkFDVE9SOi44LERFVEFJTF9CSVRSQVRFX0ZBQ1RPUjouNixCQUxBTkNFX1JFU09MVVRJT05fRkFDVE9SOi45LEJBTEFOQ0VfRlJBTUVSQVRFX0ZBQ1RPUjouOSxCQUxBTkNFX0JJVFJBVEVfRkFDVE9SOi42LE9WRVJVU0VfVElNRVNfVEhSRVNIT0xEOjEwLFVOREVSVVNFX1RJTUVTX1RIUkVTSE9MRDo0MH0scUE9XCJ2NC4yMi4xLTAtZzFjOGUyN2U5KDkvMTkvMjAyNCwgMjoyMzozMCBQTSlcIix6QT1neShneSh7UFJPQ0VTU19JRDpcIlwiLEVOQ1JZUFRfQUVTOiEwLEFSRUFTOltcIkNISU5BXCIsXCJHTE9CQUxcIl0sV0VCQ1NfRE9NQUlOOltcIndlYnJ0YzItYXAtd2ViLTEuYWdvcmEuaW9cIixcIndlYnJ0YzItMi5hcC5zZC1ydG4uY29tXCJdLFdFQkNTX0RPTUFJTl9CQUNLVVBfTElTVDpbXCJ3ZWJydGMyLWFwLXdlYi0zLmFnb3JhLmlvXCIsXCJ3ZWJydGMyLTQuYXAuc2QtcnRuLmNvbVwiXSxQUk9YWV9DUzpbXCJhcC1wcm94eS0xLmFnb3JhLmlvXCIsXCJhcC1wcm94eS0yLmFnb3JhLmlvXCJdLENEU19BUDpbXCJjZHMtYXAtd2ViLTEuYWdvcmEuaW9cIixcImNkcy13ZWItMi5hcC5zZC1ydG4uY29tXCIsXCJjZHMtYXAtd2ViLTMuYWdvcmEuaW9cIixcImNkcy13ZWItNC5hcC5zZC1ydG4uY29tXCJdLEFDQ09VTlRfUkVHSVNURVI6W1wic3VhLWFwLXdlYi0xLmFnb3JhLmlvXCIsXCJzdWEtd2ViLTIuYXAuc2QtcnRuLmNvbVwiLFwic3VhLWFwLXdlYi0zLmFnb3JhLmlvXCIsXCJzdWEtd2ViLTQuYXAuc2QtcnRuLmNvbVwiXSxVQVBfQVA6W1widWFwLWFwLXdlYi0xLmFnb3JhLmlvXCIsXCJ1YXAtd2ViLTIuYXAuc2QtcnRuLmNvbVwiLFwidWFwLWFwLXdlYi0zLmFnb3JhLmlvXCIsXCJ1YXAtd2ViLTQuYXAuc2QtcnRuLmNvbVwiXSxMT0dfVVBMT0FEX1NFUlZFUjpcImxvZ3NlcnZpY2UuYWdvcmEuaW9cIixFVkVOVF9SRVBPUlRfRE9NQUlOOlwic3RhdHNjb2xsZWN0b3ItMS5hZ29yYS5pb1wiLEVWRU5UX1JFUE9SVF9CQUNLVVBfRE9NQUlOOlwid2ViLTIuc3RhdHNjb2xsZWN0b3Iuc2QtcnRuLmNvbVwiLEVOQUJMRV9FVkVOVF9SRVBPUlQ6ITAsR0FURVdBWV9BRERSRVNTOltdLEdBVEVXQVlfV1NTX0FERFJFU1M6XCJcIixMSVZFX1NUUkVBTUlOR19BRERSRVNTOlwiXCIsSFRUUF9DT05ORUNUX1RJTUVPVVQ6NWUzLFNJR05BTF9SRVFVRVNUX1RJTUVPVVQ6MWU0LFJFUE9SVF9TVEFUUzohMCxVUExPQURfTE9HOiExLE5PVF9SRVBPUlRfRVZFTlQ6W10sUElOR19QT05HX1RJTUVfT1VUOjEwLFdFQlNPQ0tFVF9USU1FT1VUX01JTjoxZTQsRVZFTlRfUkVQT1JUX1NFTkRfSU5URVJWQUw6M2UzLENPTkZJR19ESVNUUklCVVRFX0lOVEVSVkFMOjNlNSxFTkFCTEVfQ09ORklHX0RJU1RSSUJVVEU6ITAsQ0FORElEQVRFX1RJTUVPVVQ6NWUzLFNIT1dfUkVQT1JUX0lOVk9LRVJfTE9HOiExLEpPSU5fRVhURU5EOlwiXCIsUFVCX0VYVEVORDpcIlwiLFNVQl9FWFRFTkQ6XCJcIixGT1JDRV9UVVJOOiExLFRVUk5fRU5BQkxFX1RDUDohMCxUVVJOX0VOQUJMRV9VRFA6ITAsTUFYX1VQTE9BRF9DQUNIRTo1MCxVUExPQURfQ0FDSEVfSU5URVJWQUw6MmUzLEFKQVhfUkVRVUVTVF9DT05DVVJSRU5UOjMsUkVQT1JUX0FQUF9TQ0VOQVJJTzp2b2lkIDAsR0FURVdBWV9ET01BSU5TOltcImVkZ2UuYWdvcmEuaW9cIixcImVkZ2Uuc2QtcnRuLmNvbVwiXSxDT05ORUNUX0dBVEVXQVlfV0lUSE9VVF9ET01BSU46ITEsV09SS0VSX0RPTUFJTjpcImVkZ2UuYWdvcmEuaW9cIixUVVJOX0RPTUFJTjpcImVkZ2UuYWdvcmEuaW9cIixFVkVOVF9SRVBPUlRfUkVUUlk6ITAsQ0hST01FX0ZPUkNFX1BMQU5fQjohMSxBVURJT19TT1VSQ0VfVk9MVU1FX1VQREFURV9JTlRFUlZBTDo0MDAsQVVESU9fU09VUkNFX0FWR19WT0xVTUVfRFVSQVRJT046M2UzLEFVRElPX1ZPTFVNRV9JTkRJQ0FUSU9OX0lOVEVSVkFMOjJlMyxWT0xVTUVfVk9JQ0VfV0VJR0hUOjEwLEdFVF9WT0xVTUVfT0ZfTVVURURfQVVESU9fVFJBQ0s6ITEsU1RBVFNfVVBEQVRFX0lOVEVSVkFMOjI1MCxOT1JNQUxfRVZFTlRfUVVFVUVfQ0FQQUNJVFk6MTAwLENVU1RPTV9SRVBPUlQ6ITAsQ1VTVE9NX1JFUE9SVF9MSU1JVDoyMCxQUk9YWV9TRVJWRVJfVFlQRTI6XCJ3ZWJuZ2lueC1wcm94eS5hZ29yYS5pb1wiLFBST1hZX1NFUlZFUl9UWVBFMzpbXCJ3ZWJydGMtY2xvdWQtcHJveHkuc2QtcnRuLmNvbVwiLFwid2VicnRjLWNsb3VkLXByb3h5LmFnb3JhLmlvXCJdLENVU1RPTV9QVUJfQU5TV0VSX01PRElGSUVSOm51bGwsQ1VTVE9NX1NVQl9BTlNXRVJfTU9ESUZJRVI6bnVsbCxDVVNUT01fUFVCX09GRkVSX01PRElGSUVSOm51bGwsQ1VTVE9NX1NVQl9PRkZFUl9NT0RJRklFUjpudWxsLERTQ1BfVFlQRTpcImhpZ2hcIixSRU1PVkVfTkVXX0NPREVDUzohMCxGUkFHRU1FTlRfTEVOR1RIOjMsV0VCU09DS0VUX0NPTVBSRVNTOiExLFNJTVVMQ0FTVDohMSxQUkVMT0FEX01FRElBX0NPVU5UOjAsQ0hFQ0tfVklERU9fVklTSUJMRV9JTlRFUlZBTDozZTQsQ0hFQ0tfTE9DQUxfU1RBVFNfSU5URVJWQUw6MjUwLFBST0ZJTEVfU1dJVENIX0lOVEVSVkFMOjJlMyxVTlNVUFBPUlRFRF9WSURFT19DT0RFQzpbXSxFTlVNRVJBVEVfREVWSUNFU19JTlRFUlZBTDohMSxFTlVNRVJBVEVfREVWSUNFU19JTlRFUlZBTF9USU1FOjFlNCxVU0VfTkVXX1RPS0VOOiExLENMT1NFX0FGQl9GT1JfTE9DQUxfQVA6ITAsSk9JTl9NQVhfQ09OQ1VSUkVOQ1k6NixKT0lOX1dJVEhfRkFMTEJBQ0tfU0lHTkFMX1BST1hZOiEwLEpPSU5fV0lUSF9GQUxMQkFDS19NRURJQV9QUk9YWTohMCxKT0lOX1dJVEhfRkFMTEJBQ0tfTUVESUFfUFJPWFlfRk9SQ0U6ITEsSk9JTl9HQVRFV0FZX1RSWV80NDNQT1JUX0RVUkFUSU9OOjJlMyxKT0lOX0dBVEVXQVlfVVNFXzQ0M1BPUlRfT05MWTohMSxKT0lOX0dBVEVXQVlfVVNFX0RVQUxfRE9NQUlOOiEwLEpPSU5fR0FURVdBWV9GQUxMQkFDS19QT1JUOjQ0MyxVU0VfVFVSTl9TRVJWRVJfT0ZfR0FURVdBWTohMSxIMjY0X1BST0ZJTEVfTEVWRUxfSUQ6XCJcIixVU0VfTkVXX0xPRzohMSxMT0dfVkVSU0lPTjozLE1FRElBX0RFVklDRV9DT05TVFJBSU5UUzpudWxsLEVOQ1JZUFRfUFJPWFlfVVNFUk5BTUVfQU5EX1BTVzohMCxTRFBfTE9HR0lORzohMSxDU1BfREVURUNURURfSE9TVE5BTUVfTElTVDpbXCJhZ29yYS5pb1wiLFwic2QtcnRuLmNvbVwiXSxSRU1PVEVfQVVESU9fVFJBQ0tfVVNFU19XRUJfQVVESU86ITEsTE9DQUxfQVVESU9fVFJBQ0tfVVNFU19XRUJfQVVESU86ITEsQklUUkFURV9BREFQVEVSX1RZUEU6XCJTVEFOREFSRF9CSVRSQVRFXCIsQUlfREVOT0lTRVJfUEFSQU1FVEVSUzp7ZXhjbHVkZWRMaW5rczpbXX0sQURKVVNUXzNBX0ZST01fUExVR0lOUzohMCxSQUlTRV9IMjY0X0JBU0VMSU5FX1BSSU9SSVRZOiEwLEZJTFRFUl9TRU5EX0gyNjRfQkFTRUxJTkU6ITEsWF9HT09HTEVfU1RBUlRfQklUUkFURTp2b2lkIDAsTkVXX1JFUE9SVF9TRVJWRVI6ITEsTkVXX1JFUE9SVF9TRVJWRVJfRE9NQUlOUzpbXCJkYXRhLXJlcG9ydGluZy5hZ29yYS5pb1wiLFwiZGF0YS1yZXBvcnRpbmcuYWdvcmEuaW9cIl0sVklERU9fSU5TUEVDVF9XT1JLRVJfTUVTU0FHRV9MRU5HVEhfTElNSVQ6M2U1LFZJREVPX0lOU1BFQ1RfSU5URVJWQUxfTUlOSU1VTToxZTMsVklERU9fSU5TUEVDVF9RVUFMSVRZX1JBVElPOi45LFZJREVPX0lOU1BFQ1RfV09SS0VSX01BTkFHRVJfSE9TVDpcImVkZ2UuYWdvcmEuaW9cIixWSURFT19JTlNQRUNUX1dPUktFUl9NQU5BR0VSX1BPUlQ6XCJcIixWSURFT19JTlNQRUNUX1dPUktFUl9QT1JUOlwiXCIsU0hPV19WSURFT19JTlNQRUNUX1dPUktFUl9NRVNTQUdFOiExLFNUQVRTX0NPTExFQ1RPUl9QT1JUOjQ0MyxGT1JDRV9UVVJOX1RDUDohMSxXRUJBVURJT19JTklUX09QVElPTlM6dm9pZCAwLEZJTFRFUl9WSURFT19GRUM6ITAsRklMVEVSX0FVRElPX0ZFQzohMSxDSFJPTUVfRFVBTF9TVFJFQU1fVVNFX0VOQ09ESU5HOiEwLERJU0FCTEVfRFVBTF9TVFJFQU1fVVNFX0VOQ09ESU5HOiExLEVYVEVOU0lPTl9VU0FHRV9VUExPQURfSU5URVJWQUw6MWU0LElDRV9SRVNUQVJUOiEwLElDRV9SRVNUQVJUX0lOVEVSVkFMOjFlNCxORVdfSUNFX1JFU1RBUlQ6ITEsVFJBTlNNSVRURVJfSU5JVElBTF9SVFQ6MzAsVFJBTlNNSVRURVJfSU5JVElBTF9SVE86MzAsVFJBTlNNSVRURVJfTUFYX0JBVENIX0FDS19DT1VOVDoyLFRSQU5TTUlUVEVSX01BWF9SVE86NTAwLERBVEFDSEFOTkVMX0NPTVBSRVNTOiExLEZJTkdFUlBSSU5UOm51bGwsRENfSk9JTl9XSVRIX0ZBSUxCQUNLOjVlMyxFTkFCTEVfVklERU9fRlJBTUVfQ0FMTEJBQ0s6ITAsVklERU9fRlJFRVpFX0RVUkFUSU9OOjUwMCxTUEFUSUFMSVpFUl9QQVJBTUVURVJTOnt9LFVQTE9BRF9MT0dfSU5URVJWQUw6M2UzLFVQTE9BRF9MT0dfUkVRVUVTVF9SRVRSWV9JTlRFUlZBTDoyZTMsVVBMT0FEX0xPR19SRVFVRVNUX01BWF9SRVRSWV9JTlRFUlZBTDoyZTQsVVBMT0FEX0xPR19UUllfSU5URVJWQUxfV0hJTEVfT0ZGOjVlMyxVUExPQURfTE9HX1JFVFJZX0lOVEVSVkFMX1YxOjFlNCxVUExPQURfTE9HX1RXSUNFX1JFVFJZX0lOVEVSVkFMX1YxOjIwMCxVUExPQURfTE9HX0xFTkdUSF9FQUNIX1RJTUU6MTAsQVBQX1RZUEU6MCxESVNBQkxFX1dFQkFVRElPOiExLENIQU5ORUxfTUVESUFfUkVMQVlfU0VSVkVSUzp2b2lkIDAsS0VFUF9MQVNUX0ZSQU1FOiEwLEZPUldBUkRfUDJQX0NSRUFUSU9OOiEwLFNZTkNfR1JPVVA6ITAsQkxPQ0tfTE9DQUxfQ0xJRU5UOiExLEFQX0FSRUE6ITAsRU5BQkxFX0VOQ09ERURfVFJBTlNGT1JNOiExLEVOQUJMRV9WSURFT19TRUk6ITEsSU1BR0VfTU9ERVJBVElPTl9XT1JLRVJfSE9TVDpcImVkZ2UuYWdvcmEuaW9cIixJTUFHRV9NT0RFUkFUSU9OX1dPUktFUl9NRVNTQUdFX0xFTkdUSF9MSU1JVDozZTUsSU1BR0VfTU9ERVJBVElPTl9JTlRFUlZBTF9NSU5JTVVNOjFlMyxTSE9XX0lNQUdFX01PREVSQVRJT05fV09SS0VSX01FU1NBR0U6ITEsSU1BR0VfTU9ERVJBVElPTl9RVUFMSVRZX1JBVElPOi45LElNQUdFX01PREVSQVRJT05fVVBMT0FEX1JFUE9SVF9JTlRFUlZBTDo1ZTMsU0hPV19HTE9CQUxfQ0xJRU5UX0xJU1Q6ITEsREFUQVNUUkVBTV9NQVhfUkVUUkFOU01JVFM6MTAsVENQX0NBTkRJREFURV9PTkxZOiExLEVYVEVSTkFMX1NJR05BTF9SRVFVRVNUX1RJTUVPVVQ6M2UzLFNIT1dfUDJQX0xPRzohMSxNQVhfUDJQX1RJTUVPVVQ6M2U0LFAyUF9UT0tFTl9JTlRFUlZBTDoxZTMsU0hPV19EQVRBU1RSRUFNMl9MT0c6ITEsUkVTVFJJQ1RJT05fU0VUX1BMQVlCQUNLX0RFVklDRTohMCxVU0VfUFVSRV9FTkNSWVBUSU9OX01BU1RFUl9LRVk6ITEsQUNDT1VOVF9SRUdJU1RFUl9SRVRSWV9USU1FT1VUOjEsQUNDT1VOVF9SRUdJU1RFUl9SRVRSWV9SQVRJTzoyLEFDQ09VTlRfUkVHSVNURVJfUkVUUllfVElNRU9VVF9NQVg6NmU0LEFDQ09VTlRfUkVHSVNURVJfUkVUUllfQ09VTlRfTUFYOjFlNSxBVURJT19DT05URVhUOm51bGwsV0VCQ1NfQkFDS1VQX0NPTk5FQ1RfVElNRU9VVDo2ZTMsUExBWUVSX1NUQVRFX0RFRkVSOjJlMyxTSUdOQUxfUkVRVUVTVF9XQVRDSF9JTlRFUlZBTDoxZTMsRklMRVBBVEhfTEVOTUFYOjI1NSxEVUFMU1RSRUFNX09QRVJBVElPTl9DSEVDSzohMCxNRURJQV9FTEVNRU5UX0VYSVNUU19ERVBUSDozLFNISU1fQ0FORElEQVRFOiExLExFQVZFX01TR19USU1FT1VUOjJlMyxTVEFUU19GSUxURVI6e3RyYW5zcG9ydElkOiEwLGdvb2dUcmFja0lkOiEwfSxGSUxURVJfVklERU9fQ09ERUM6W10sVVNFX05FV19ORVRXT1JLX0NPTkZJRzohMSxBVVRPX1JFU0VUX0FVRElPX1JPVVRFOiExLFBMVUdJTl9JTkZPOltdLE9WRVJVU0VfREVURUNUT1JfUEFSQU1TOllBLEVOQUJMRV9BR19BREFQVEFUSU9OOiEwLEZPUkNFX0FHX0hJR0hfRlJBTUVSQVRFOiExLEZPUkNFX1NVUFBPUlRfQUdfQURBUFRBVElPTjohMSxDVVNUT01fQURBUFRBVElPTl9ERUZBVUxUX01PREU6XCJcIixFTkNPREVSX0NPTkZJR19MSU1JVDp7fSxDQU1FUkFfQ0FQVFVSRV9DT05GSUc6dm9pZCAwLEhJREVfTk9fUE9TVEVSOiExLEFQX0NBQ0hFX05VTToxMCxBUF9VUERBVEVfSU5URVJWQUw6MTJlNCxBUF9DQUNIRV9MSUZFVElNRToxMmU0LE1BWF9QUkVMT0FEX0FTWU5DX0xFTkdUSDozLEVOQUJMRV9QUkVMT0FEOiEwLERJU0FCTEVfU0NSRUVOX1NIQVJFX1JFTUI6ITF9LHtFTkFCTEVfUFVCTElTSEVEX1VTRVJfTElTVDohMCxNQVhfU1VCU0NSSVBUSU9OOjUwLFNVQlNDUklCRV9BVURJT19GSUxURVJfVE9QTjp2b2lkIDAsRU5BQkxFX1BVQkxJU0hfQVVESU9fRklMVEVSOnZvaWQgMCxFTkFCTEVfVVNFUl9MSUNFTlNFX0NIRUNLOiEwLFVTRV9QVUJfUlRYOiEwLFVTRV9TVUJfUlRYOiEwLERJU0FCTEVfRkVDOnZvaWQgMCxFTkFCTEVfTlRQX1JFUE9SVDohMSxFTkFCTEVfSU5TVEFOVF9WSURFTzohMSxFTkFCTEVfREFUQVNUUkVBTV8yOiExLEVOQUJMRV9VU0VSX0FVVE9fUkVCQUxBTkNFX0NIRUNLOiEwLFVTRV9YUjohMCxFTkFCTEVfTE9TU0JBU0VEX0JXRTohMCxFTkFCTEVfQVVUX0NDOiExLEVOQUJMRV9DQ19GQUxMQkFDSzp2b2lkIDAsRU5BQkxFX1BSRUFMTE9DX1BDOiExLFNVQlNDUklCRV9UV0NDOiEwLFBVQkxJU0hfVFdDQzohMSxFTkFCTEVfU1ZDOiExLEVOQUJMRV9TVkNfREVGQVVMVF9DT0RFQ1M6W1wiSDI2NFwiLFwiVlA4XCIsXCJWUDlcIixcIkFWMVwiXSxTVkM6W10sRU5BQkxFX0ZVTExfTElOS19BVl9TWU5DOiExLFNWQ19NT0RFOm51bGwsUFJFX1NVQl9OVU06MixFTkFCTEVfUFJFX1NVQjohMSxFTkFCTEVfQVVUX0ZFRURCQUNLOiExfSkse30se1VTRV9DQU5ESURBVEVfRlJPTV9BUF9ERVRBSUw6ITEsQVBfUkVRVUVTVF9ERVRBSUw6dm9pZCAwfSk7ZnVuY3Rpb24gSkEoZSx0LGkpe3ZhciBuLHIsbztEbihuPU9iamVjdC5rZXlzKHpBKSkuY2FsbChuLGUpJiYoIWkmJkRuKHI9T2JqZWN0LmtleXMoUUEpKS5jYWxsKHIsZSl8fCh6QVtlXT10LFwiRU5BQkxFX1ZJREVPX1NFSVwiPT09ZSYmITA9PT10JiYoekEuRU5BQkxFX0VOQ09ERURfVFJBTlNGT1JNPSEwKSxcIlVTRV9ORVdfTkVUV09SS19DT05GSUdcIj09PWUmJnQmJihvPSEhdCx6QS5VU0VfTkVXX05FVFdPUktfQ09ORklHPW8sbyYmKHpBLldFQkNTX0RPTUFJTj1bXCJ3ZWJydGMyLTIuYXAuc2QtcnRuLmNvbVwiXSx6QS5XRUJDU19ET01BSU5fQkFDS1VQX0xJU1Q9W1wid2VicnRjMi00LmFwLnNkLXJ0bi5jb21cIl0sekEuQ0RTX0FQPVtcImNkcy13ZWItMi5hcC5zZC1ydG4uY29tXCIsXCJjZHMtd2ViLTQuYXAuc2QtcnRuLmNvbVwiXSx6QS5BQ0NPVU5UX1JFR0lTVEVSPVtcInN1YS13ZWItMi5hcC5zZC1ydG4uY29tXCIsXCJzdWEtd2ViLTQuYXAuc2QtcnRuLmNvbVwiXSx6QS5FVkVOVF9SRVBPUlRfRE9NQUlOPVwid2ViLTIuc3RhdHNjb2xsZWN0b3Iuc2QtcnRuLmNvbVwiLHpBLkVWRU5UX1JFUE9SVF9CQUNLVVBfRE9NQUlOPVwic3RhdHNjb2xsZWN0b3ItMS5hZ29yYS5pb1wiLHpBLkdBVEVXQVlfRE9NQUlOUz1bXCJlZGdlLnNkLXJ0bi5jb21cIl0pKSxcIkVOQUJMRV9QUkVfU1VCXCI9PT1lJiZ0JiYoekEuRU5BQkxFX0lOU1RBTlRfVklERU89ITAsekEuRU5BQkxFX1BSRUFMTE9DX1BDPSEwKSxcIkVOQUJMRV9TVkNcIj09PWUmJnQmJih6QS5FTkFCTEVfQVVUX0NDPSEwKSkpfWZ1bmN0aW9uIFhBKGUpe3JldHVybiB6QVtlXX1XQXx8KHpBLldFQkNTX0RPTUFJTj1bXCJhcC13ZWItMS1vdmVyc2VhLmFnb3JhLmlvXCIsXCJhcC13ZWItMS1ub3J0aC1hbWVyaWNhLmFnb3JhLmlvXCJdLHpBLldFQkNTX0RPTUFJTl9CQUNLVVBfTElTVD1bXCJhcC13ZWItMi1vdmVyc2VhLmFnb3JhLmlvXCIsXCJhcC13ZWItMi1ub3J0aC1hbWVyaWNhLmFnb3JhLmlvXCJdLHpBLlBST1hZX0NTPVtcInByb3h5LWFwLXdlYi1vdmVyc2VhLmFnb3JhLmlvXCIsXCJwcm94eS1hcC13ZWItYW1lcmljYS5hZ29yYS5pb1wiXSx6QS5DRFNfQVA9W1wiY2RzLWFwLXdlYi1vdmVyc2VhLmFnb3JhLmlvXCIsXCJjZHMtYXAtd2ViLWFtZXJpY2EuYWdvcmEuaW9cIixcImNkcy1hcC13ZWItYW1lcmljYTIuYWdvcmEuaW9cIl0sekEuQUNDT1VOVF9SRUdJU1RFUj1bXCJzdWEtYXAtd2ViLW92ZXJzZWEuYWdvcmEuaW9cIixcInN1YS1hcC13ZWItYW1lcmljYS5hZ29yYS5pb1wiLFwic3VhLWFwLXdlYi1hbWVyaWNhMi5hZ29yYS5pb1wiXSx6QS5VQVBfQVA9W1widWFwLWFwLXdlYi1vdmVyc2VhLmFnb3JhLmlvXCIsXCJ1YXAtYXAtd2ViLWFtZXJpY2EuYWdvcmEuaW9cIixcInVhcC1hcC13ZWItYW1lcmljYTIuYWdvcmEuaW9cIl0sekEuTE9HX1VQTE9BRF9TRVJWRVI9XCJsb2dzZXJ2aWNlLW92ZXJzZWEuYWdvcmEuaW9cIix6QS5FVkVOVF9SRVBPUlRfRE9NQUlOPVwic3RhdHNjb2xsZWN0b3ItMS1vdmVyc2VhLmFnb3JhLmlvXCIsekEuRVZFTlRfUkVQT1JUX0JBQ0tVUF9ET01BSU49XCJzdGF0c2NvbGxlY3Rvci0yLW92ZXJzZWEuYWdvcmEuaW9cIix6QS5QUk9YWV9TRVJWRVJfVFlQRTM9XCJ3ZWJydGMtY2xvdWQtcHJveHkuYWdvcmEuaW9cIix6QS5BUkVBUz1bXCJOT1JUSF9BTUVSSUNBXCIsXCJPVkVSU0VBXCJdKTtjb25zdCBRQT17fTt2YXIgWkE9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuU0VUX1NFU1NJT05fSUQ9XCJTRVRfU0VTU0lPTl9JRFwiLGUuU0VUX1AyUF9JRD1cIlNFVF9QMlBfaWRcIixlLlNFVF9EQ19JRD1cIlNFVF9EQ19pZFwiLGUuU0VUX1VJRD1cIlNFVF9VSURcIixlLlNFVF9JTlRfVUlEPVwiU0VUX0lOVF9VSURcIixlLlNFVF9QVUJfSUQ9XCJTRVRfUFVCX0lEXCIsZS5TRVRfQ0xPVURfUFJPWFlfU0VSVkVSX01PREU9XCJTRVRfQ0xPVURfUFJPWFlfU0VSVkVSX01PREVcIixlLktFWV9NRVRSSUNfQ0xJRU5UX0NSRUFURUQ9XCJLRVlfTUVUUklDX0NMSUVOVF9DUkVBVEVEXCIsZS5LRVlfTUVUUklDX0pPSU5fU1RBUlQ9XCJLRVlfTUVUUklDX0pPSU5fU1RBUlRcIixlLkFWT0lEX0pPSU5fU1RBUlQ9XCJBVk9JRF9KT0lOX1NUQVJUXCIsZS5LRVlfTUVUUklDX0pPSU5fRU5EPVwiS0VZX01FVFJJQ19KT0lOX0VORFwiLGUuS0VZX01FVFJJQ19SRVFVRVNUX0FQX1NUQVJUPVwiS0VZX01FVFJJQ19SRVFVRVNUX0FQX1NUQVJUXCIsZS5LRVlfTUVUUklDX1JFUVVFU1RfQVBfRU5EPVwiS0VZX01FVFJJQ19SRVFVRVNUX0FQX0VORFwiLGUuS0VZX01FVFJJQ19KT0lOX0dBVEVXQVlfU1RBUlQ9XCJLRVlfTUVUUklDX0pPSU5fR0FURVdBWV9TVEFSVFwiLGUuS0VZX01FVFJJQ19KT0lOX0dBVEVXQVlfRU5EPVwiS0VZX01FVFJJQ19KT0lOX0dBVEVXQVlfRU5EXCIsZS5LRVlfTUVUUklDX1BFRVJfQ09OTkVDVElPTl9TVEFSVD1cIktFWV9NRVRSSUNfUEVFUl9DT05ORUNUSU9OX1NUQVJUXCIsZS5LRVlfTUVUUklDX1BFRVJfQ09OTkVDVElPTl9FTkQ9XCJLRVlfTUVUUklDX1BFRVJfQ09OTkVDVElPTl9FTkRcIixlLktFWV9NRVRSSUNfREVTQ1JJUFRJT05fU1RBUlQ9XCJLRVlfTUVUUklDX0RFU0NSSVBUSU9OX1NUQVJUXCIsZS5LRVlfTUVUUklDX0lDRV9DT05ORUNUSU9OX0VORD1cIktFWV9NRVRSSUNfSUNFX0NPTk5FQ1RJT05fRU5EXCIsZS5LRVlfTUVUUklDX1NJR05BTF9DSEFOTkVMX09QRU49XCJLRVlfTUVUUklDX1NJR05BTF9DSEFOTkVMX09QRU5cIixlLktFWV9NRVRSSUNfUFVCTElTSD1cIktFWV9NRVRSSUNfUFVCTElTSFwiLGUuS0VZX01FVFJJQ19TVUJTQ1JJQkU9XCJLRVlfTUVUUklDX1NVQlNDUklCRVwiLGUuUkVDT1JEX0pPSU5fQ0hBTk5FTF9TRVJWSUNFPVwiUkVDT1JEX0pPSU5fQ0hBTk5FTF9TRVJWSUNFXCIsZS5SRVNFVF9KT0lOX0NIQU5ORUxfU0VSVklDRV9SRUNPUkRTPVwiUkVTRVRfSk9JTl9DSEFOTkVMX1NFUlZJQ0VfUkVDT1JEU1wiLGUuUkVTRVRfS0VZX01FVFJJQ1M9XCJSRVNFVF9LRVlfTUVUUklDU1wiLGUuU0VUX1VTRV9QMlA9XCJTRVRfVVNFX1AyUFwiLGUuU0VUX1RSQU5TUE9SVF9UWVBFPVwiU0VUX1RSQU5TUE9SVF9UWVBFXCIsZX0oWkF8fHt9KTtjbGFzcyAkQXtjb25zdHJ1Y3RvcihlLHQsaSxuKXtUeSh0aGlzLFwic3RhdGVcIix2b2lkIDApLHRoaXMuc3RhdGU9e2NvZGVjOmUsYXVkaW9Db2RlYzp0LG1vZGU6aSxjbGllbnRJZDpuLHNlc3Npb25JZDpudWxsLHAycElkOjAsZGNJZDowLHB1YklkOjAsc3ViSWQ6MCxhdm9pZEpvaW5TdGFydDowLGtleU1ldHJpY3M6e3B1Ymxpc2g6W10sc3Vic2NyaWJlOltdfSxqb2luQ2hhbm5lbFNlcnZpY2VSZWNvcmRzOltdLGNsb3VkUHJveHlTZXJ2ZXJNb2RlOlwiZGlzYWJsZWRcIix1c2VQMlA6ITEscDJwVHJhbnNwb3J0OkhBLkRlZmF1bHR9fWRpc3BhdGNoKGUpe3RoaXMuc3RhdGU9ZnVuY3Rpb24oZSx0KXtzd2l0Y2godC50eXBlKXtjYXNlIFpBLlNFVF9TRVNTSU9OX0lEOnJldHVybiBneShneSh7fSxlKSx7fSx7c2Vzc2lvbklkOnQuc2Vzc2lvbklkfSk7Y2FzZSBaQS5TRVRfUDJQX0lEOnJldHVybiBneShneSh7fSxlKSx7fSx7cDJwSWQ6dC5wMnBJZH0pO2Nhc2UgWkEuU0VUX1VJRDpyZXR1cm4gZ3koZ3koe30sZSkse30se3VpZDp0LnVpZH0pO2Nhc2UgWkEuU0VUX0lOVF9VSUQ6cmV0dXJuIGd5KGd5KHt9LGUpLHt9LHtpbnRVaWQ6dC5pbnRVaWR9KTtjYXNlIFpBLlNFVF9QVUJfSUQ6cmV0dXJuIGd5KGd5KHt9LGUpLHt9LHtwdWJJZDp0LnB1YklkfSk7Y2FzZSBaQS5LRVlfTUVUUklDX0NMSUVOVF9DUkVBVEVEOnJldHVybiBneShneSh7fSxlKSx7fSx7a2V5TWV0cmljczpneShneSh7fSxlLmtleU1ldHJpY3MpLHt9LHtjbGllbnRDcmVhdGVkOnQubWV0cmljfSl9KTtjYXNlIFpBLktFWV9NRVRSSUNfSk9JTl9TVEFSVDpyZXR1cm4gZ3koZ3koe30sZSkse30se2tleU1ldHJpY3M6Z3koZ3koe30sZS5rZXlNZXRyaWNzKSx7fSx7am9pblN0YXJ0OnQubWV0cmljfSl9KTtjYXNlIFpBLkFWT0lEX0pPSU5fU1RBUlQ6cmV0dXJuIGd5KGd5KHt9LGUpLHt9LHthdm9pZEpvaW5TdGFydDp0LmF2b2lkSm9pblN0YXJ0fSk7Y2FzZSBaQS5LRVlfTUVUUklDX0pPSU5fRU5EOnJldHVybiBneShneSh7fSxlKSx7fSx7a2V5TWV0cmljczpneShneSh7fSxlLmtleU1ldHJpY3MpLHt9LHtqb2luRW5kOnQubWV0cmljfSl9KTtjYXNlIFpBLktFWV9NRVRSSUNfUkVRVUVTVF9BUF9TVEFSVDpyZXR1cm4gZ3koZ3koe30sZSkse30se2tleU1ldHJpY3M6Z3koZ3koe30sZS5rZXlNZXRyaWNzKSx7fSx7cmVxdWVzdEFQU3RhcnQ6dC5tZXRyaWN9KX0pO2Nhc2UgWkEuS0VZX01FVFJJQ19SRVFVRVNUX0FQX0VORDpyZXR1cm4gZ3koZ3koe30sZSkse30se2tleU1ldHJpY3M6Z3koZ3koe30sZS5rZXlNZXRyaWNzKSx7fSx7cmVxdWVzdEFQRW5kOnQubWV0cmljfSl9KTtjYXNlIFpBLktFWV9NRVRSSUNfSk9JTl9HQVRFV0FZX1NUQVJUOnJldHVybiBneShneSh7fSxlKSx7fSx7a2V5TWV0cmljczpneShneSh7fSxlLmtleU1ldHJpY3MpLHt9LHtqb2luR2F0ZXdheVN0YXJ0OnQubWV0cmljfSl9KTtjYXNlIFpBLktFWV9NRVRSSUNfSk9JTl9HQVRFV0FZX0VORDpyZXR1cm4gZ3koZ3koe30sZSkse30se2tleU1ldHJpY3M6Z3koZ3koe30sZS5rZXlNZXRyaWNzKSx7fSx7am9pbkdhdGV3YXlFbmQ6dC5tZXRyaWN9KX0pO2Nhc2UgWkEuS0VZX01FVFJJQ19QRUVSX0NPTk5FQ1RJT05fU1RBUlQ6cmV0dXJuIGd5KGd5KHt9LGUpLHt9LHtrZXlNZXRyaWNzOmd5KGd5KHt9LGUua2V5TWV0cmljcykse30se3BlZXJDb25uZWN0aW9uU3RhcnQ6dC5tZXRyaWN9KX0pO2Nhc2UgWkEuS0VZX01FVFJJQ19QRUVSX0NPTk5FQ1RJT05fRU5EOnJldHVybiBneShneSh7fSxlKSx7fSx7a2V5TWV0cmljczpneShneSh7fSxlLmtleU1ldHJpY3MpLHt9LHtwZWVyQ29ubmVjdGlvbkVuZDp0Lm1ldHJpY30pfSk7Y2FzZSBaQS5LRVlfTUVUUklDX0RFU0NSSVBUSU9OX1NUQVJUOnJldHVybiBneShneSh7fSxlKSx7fSx7a2V5TWV0cmljczpneShneSh7fSxlLmtleU1ldHJpY3MpLHt9LHtkZXNjcmlwdGlvblN0YXJ0OnQubWV0cmljfSl9KTtjYXNlIFpBLktFWV9NRVRSSUNfU0lHTkFMX0NIQU5ORUxfT1BFTjpyZXR1cm4gZ3koZ3koe30sZSkse30se2tleU1ldHJpY3M6Z3koZ3koe30sZS5rZXlNZXRyaWNzKSx7fSx7c2lnbmFsQ2hhbm5lbE9wZW46dC5tZXRyaWN9KX0pO2Nhc2UgWkEuS0VZX01FVFJJQ19JQ0VfQ09OTkVDVElPTl9FTkQ6cmV0dXJuIGd5KGd5KHt9LGUpLHt9LHtrZXlNZXRyaWNzOmd5KGd5KHt9LGUua2V5TWV0cmljcykse30se2ljZUNvbm5lY3Rpb25FbmQ6dC5tZXRyaWN9KX0pO2Nhc2UgWkEuS0VZX01FVFJJQ19QVUJMSVNIOntjb25zdCBpPWUua2V5TWV0cmljcy5wdWJsaXNoLG49aS5maW5kSW5kZXgoKGU9PmUudHJhY2tJZD09PXQubWV0cmljLnRyYWNrSWQpKTtyZXR1cm4tMSE9PW4/KGlbbl09Z3koZ3koe30saVtuXSksdC5tZXRyaWMpLGd5KGd5KHt9LGUpLHt9LHtrZXlNZXRyaWNzOmd5KGd5KHt9LGUua2V5TWV0cmljcykse30se3B1Ymxpc2g6Wy4uLmldfSl9KSk6Z3koZ3koe30sZSkse30se2tleU1ldHJpY3M6Z3koZ3koe30sZS5rZXlNZXRyaWNzKSx7fSx7cHVibGlzaDpbLi4uZS5rZXlNZXRyaWNzLnB1Ymxpc2gsdC5tZXRyaWNdfSl9KX1jYXNlIFpBLktFWV9NRVRSSUNfU1VCU0NSSUJFOntjb25zdCBpPWUua2V5TWV0cmljcy5zdWJzY3JpYmUsbj1pLmZpbmRJbmRleCgoZT0+ZS51c2VySWQ9PT10Lm1ldHJpYy51c2VySWQmJmUudHlwZT09PXQubWV0cmljLnR5cGUpKTtyZXR1cm4tMSE9PW4/KGlbbl09Z3koZ3koe30saVtuXSksdC5tZXRyaWMpLGd5KGd5KHt9LGUpLHt9LHtrZXlNZXRyaWNzOmd5KGd5KHt9LGUua2V5TWV0cmljcykse30se3N1YnNjcmliZTpbLi4uaV19KX0pKTpneShneSh7fSxlKSx7fSx7a2V5TWV0cmljczpneShneSh7fSxlLmtleU1ldHJpY3MpLHt9LHtzdWJzY3JpYmU6Wy4uLmUua2V5TWV0cmljcy5zdWJzY3JpYmUsdC5tZXRyaWNdfSl9KX1jYXNlIFpBLlNFVF9DTE9VRF9QUk9YWV9TRVJWRVJfTU9ERTpyZXR1cm4gZS5jbG91ZFByb3h5U2VydmVyTW9kZT10Lm1vZGUsZTtjYXNlIFpBLlJFQ09SRF9KT0lOX0NIQU5ORUxfU0VSVklDRTpyZXR1cm5cIm51bWJlclwiIT10eXBlb2YgdC5pbmRleD9lLmpvaW5DaGFubmVsU2VydmljZVJlY29yZHM9Wy4uLmUuam9pbkNoYW5uZWxTZXJ2aWNlUmVjb3Jkcyx0LnJlY29yZF06KGUuam9pbkNoYW5uZWxTZXJ2aWNlUmVjb3Jkc1t0LmluZGV4XT1neShneSh7fSxlLmpvaW5DaGFubmVsU2VydmljZVJlY29yZHNbdC5pbmRleF0pLHQucmVjb3JkKSxlLmpvaW5DaGFubmVsU2VydmljZVJlY29yZHM9Wy4uLmUuam9pbkNoYW5uZWxTZXJ2aWNlUmVjb3Jkc10pLGU7Y2FzZSBaQS5SRVNFVF9KT0lOX0NIQU5ORUxfU0VSVklDRV9SRUNPUkRTOnJldHVybiBlLmpvaW5DaGFubmVsU2VydmljZVJlY29yZHM9W10sZTtjYXNlIFpBLlJFU0VUX0tFWV9NRVRSSUNTOnJldHVybiBlLmtleU1ldHJpY3M9e3B1Ymxpc2g6W10sc3Vic2NyaWJlOltdfSxlO2Nhc2UgWkEuU0VUX1VTRV9QMlA6cmV0dXJuIGd5KGd5KHt9LGUpLHt9LHt1c2VQMlA6dC52YWx9KTtjYXNlIFpBLlNFVF9UUkFOU1BPUlRfVFlQRTpyZXR1cm4gZ3koZ3koe30sZSkse30se3AycFRyYW5zcG9ydDp0LnZhbH0pO2RlZmF1bHQ6cmV0dXJuIGV9fSh0aGlzLnN0YXRlLGUpfXNldCBzZXNzaW9uSWQoZSl7dGhpcy5kaXNwYXRjaCh7dHlwZTpaQS5TRVRfU0VTU0lPTl9JRCxzZXNzaW9uSWQ6ZX0pfWdldCBzZXNzaW9uSWQoKXtyZXR1cm4gdGhpcy5zdGF0ZS5zZXNzaW9uSWR9c2V0IGNvZGVjKGUpe3RoaXMuc3RhdGUuY29kZWM9ZX1nZXQgY29kZWMoKXtyZXR1cm4gdGhpcy5zdGF0ZS5jb2RlY31nZXQgbW9kZSgpe3JldHVybiB0aGlzLnN0YXRlLm1vZGV9Z2V0IGF1ZGlvQ29kZWMoKXtyZXR1cm4gdGhpcy5zdGF0ZS5hdWRpb0NvZGVjfWdldCBjbGllbnRJZCgpe3JldHVybiB0aGlzLnN0YXRlLmNsaWVudElkfXNldCBwMnBJZChlKXt0aGlzLmRpc3BhdGNoKHt0eXBlOlpBLlNFVF9QMlBfSUQscDJwSWQ6ZX0pfWdldCBwMnBJZCgpe3JldHVybiB0aGlzLnN0YXRlLnAycElkfXNldCBkY0lkKGUpe3RoaXMuZGlzcGF0Y2goe3R5cGU6WkEuU0VUX0RDX0lELGRjSWQ6ZX0pfWdldCBkY0lkKCl7cmV0dXJuIHRoaXMuc3RhdGUuZGNJZH1zZXQgdWlkKGUpe3RoaXMuZGlzcGF0Y2goe3R5cGU6WkEuU0VUX1VJRCx1aWQ6ZX0pfWdldCB1aWQoKXtyZXR1cm4gdGhpcy5zdGF0ZS51aWR9c2V0IGludFVpZChlKXt0aGlzLmRpc3BhdGNoKHt0eXBlOlpBLlNFVF9JTlRfVUlELGludFVpZDplfSl9Z2V0IGludFVpZCgpe3JldHVybiB0aGlzLnN0YXRlLmludFVpZH1zZXQgcHViSWQoZSl7dGhpcy5kaXNwYXRjaCh7dHlwZTpaQS5TRVRfUFVCX0lELHB1YklkOmV9KX1nZXQgcHViSWQoKXtyZXR1cm4gdGhpcy5zdGF0ZS5wdWJJZH1zZXQgY2xvdWRQcm94eVNlcnZlck1vZGUoZSl7dGhpcy5kaXNwYXRjaCh7dHlwZTpaQS5TRVRfQ0xPVURfUFJPWFlfU0VSVkVSX01PREUsbW9kZTplfSl9Z2V0IGNsb3VkUHJveHlTZXJ2ZXJNb2RlKCl7cmV0dXJuIHRoaXMuc3RhdGUuY2xvdWRQcm94eVNlcnZlck1vZGV9c2V0IHVzZVAyUChlKXt0aGlzLmRpc3BhdGNoKHt0eXBlOlpBLlNFVF9VU0VfUDJQLHZhbDplfSl9Z2V0IHVzZVAyUCgpe3JldHVybiB0aGlzLnN0YXRlLnVzZVAyUH1zZXQgcDJwVHJhbnNwb3J0KGUpe3RoaXMuZGlzcGF0Y2goe3R5cGU6WkEuU0VUX1RSQU5TUE9SVF9UWVBFLHZhbDplfSl9Z2V0IHAycFRyYW5zcG9ydCgpe3JldHVybiB0aGlzLnN0YXRlLnAycFRyYW5zcG9ydH1jbGllbnRDcmVhdGVkKCl7dGhpcy5kaXNwYXRjaCh7dHlwZTpaQS5LRVlfTUVUUklDX0NMSUVOVF9DUkVBVEVELG1ldHJpYzpEYXRlLm5vdygpfSl9am9pblN0YXJ0KCl7dGhpcy5kaXNwYXRjaCh7dHlwZTpaQS5LRVlfTUVUUklDX0pPSU5fU1RBUlQsbWV0cmljOkRhdGUubm93KCl9KX1qb2luRW5kKCl7dGhpcy5kaXNwYXRjaCh7dHlwZTpaQS5LRVlfTUVUUklDX0pPSU5fRU5ELG1ldHJpYzpEYXRlLm5vdygpfSl9cmVxdWVzdEFQU3RhcnQoKXt0aGlzLmRpc3BhdGNoKHt0eXBlOlpBLktFWV9NRVRSSUNfUkVRVUVTVF9BUF9TVEFSVCxtZXRyaWM6RGF0ZS5ub3coKX0pfXJlcXVlc3RBUEVuZCgpe3RoaXMuZGlzcGF0Y2goe3R5cGU6WkEuS0VZX01FVFJJQ19SRVFVRVNUX0FQX0VORCxtZXRyaWM6RGF0ZS5ub3coKX0pfWpvaW5HYXRld2F5U3RhcnQoKXt0aGlzLmRpc3BhdGNoKHt0eXBlOlpBLktFWV9NRVRSSUNfSk9JTl9HQVRFV0FZX1NUQVJULG1ldHJpYzpEYXRlLm5vdygpfSl9am9pbkdhdGV3YXlFbmQoKXt0aGlzLmRpc3BhdGNoKHt0eXBlOlpBLktFWV9NRVRSSUNfSk9JTl9HQVRFV0FZX0VORCxtZXRyaWM6RGF0ZS5ub3coKX0pfXBlZXJDb25uZWN0aW9uU3RhcnQoKXt0aGlzLmRpc3BhdGNoKHt0eXBlOlpBLktFWV9NRVRSSUNfUEVFUl9DT05ORUNUSU9OX1NUQVJULG1ldHJpYzpEYXRlLm5vdygpfSl9cGVlckNvbm5lY3Rpb25FbmQoKXt0aGlzLmRpc3BhdGNoKHt0eXBlOlpBLktFWV9NRVRSSUNfUEVFUl9DT05ORUNUSU9OX0VORCxtZXRyaWM6RGF0ZS5ub3coKX0pfWRlc2NyaXB0aW9uU3RhcnQoKXt0aGlzLmRpc3BhdGNoKHt0eXBlOlpBLktFWV9NRVRSSUNfREVTQ1JJUFRJT05fU1RBUlQsbWV0cmljOkRhdGUubm93KCl9KX1zaWduYWxDaGFubmVsT3Blbigpe3RoaXMuZGlzcGF0Y2goe3R5cGU6WkEuS0VZX01FVFJJQ19TSUdOQUxfQ0hBTk5FTF9PUEVOLG1ldHJpYzpEYXRlLm5vdygpfSl9aWNlQ29ubmVjdGlvbkVuZCgpe3RoaXMuZGlzcGF0Y2goe3R5cGU6WkEuS0VZX01FVFJJQ19JQ0VfQ09OTkVDVElPTl9FTkQsbWV0cmljOkRhdGUubm93KCl9KX1wdWJsaXNoKGUsdCxpLG4pe3RoaXMuZGlzcGF0Y2goe3R5cGU6WkEuS0VZX01FVFJJQ19QVUJMSVNILG1ldHJpYzpneShneSh7dHJhY2tJZDplLHR5cGU6dH0saSYme3B1Ymxpc2hTdGFydDppfSksbiYme3B1Ymxpc2hFbmQ6bn0pfSl9c3Vic2NyaWJlKGUsdCxpLG4scixvLHMpe3RoaXMuZGlzcGF0Y2goe3R5cGU6WkEuS0VZX01FVFJJQ19TVUJTQ1JJQkUsbWV0cmljOmd5KGd5KGd5KGd5KGd5KHt1c2VySWQ6ZSx0eXBlOnR9LGkmJntzdWJzY3JpYmVTdGFydDppfSksbiYme3N1YnNjcmliZUVuZDpufSksciYme2ZpcnN0RnJhbWU6cn0pLG8mJntzdHJlYW1BZGRlZDpvfSkscyYme2ZpcnN0RGVjb2RlZDpzfSl9KX1tYXNzU3Vic2NyaWJlKGUsdCxpLG4pe2UuZm9yRWFjaCgoZT0+e3RoaXMuZGlzcGF0Y2goe3R5cGU6WkEuS0VZX01FVFJJQ19TVUJTQ1JJQkUsbWV0cmljOmd5KGd5KGd5KHt1c2VySWQ6ZS51c2VySWQsdHlwZTplLnR5cGV9LHQmJntzdWJzY3JpYmVTdGFydDp0fSksaSYme3N1YnNjcmliZUVuZDppfSksbiYme2ZpcnN0RnJhbWU6bn0pfSl9KSl9Z2V0IGtleU1ldHJpY3MoKXtyZXR1cm4gdGhpcy5zdGF0ZS5rZXlNZXRyaWNzfXJlY29yZEpvaW5DaGFubmVsU2VydmljZShlLHQpe1wiZ2F0ZXdheVwiPT09ZS5zZXJ2aWNlJiZBcnJheS5pc0FycmF5KGUudXJscykmJihlLnVybHM9ZS51cmxzLm1hcCgoZT0+ZS5yZXBsYWNlKC8oXFxkKyktXFxkKy1cXGQrLShcXGQrKS8sXCIkMS0qLSotJDJcIikpKSk7dHJ5e3JldHVyblwibnVtYmVyXCIhPXR5cGVvZiB0Pyh0aGlzLmRpc3BhdGNoKHt0eXBlOlpBLlJFQ09SRF9KT0lOX0NIQU5ORUxfU0VSVklDRSxyZWNvcmQ6Z3koZ3koe30sZSkse30se3Nlc3Npb25JZDp0aGlzLnNlc3Npb25JZCxjbG91ZFByb3h5TW9kZTp0aGlzLmNsb3VkUHJveHlTZXJ2ZXJNb2RlLHVpZDp0aGlzLnVpZH0pfSksdGhpcy5zdGF0ZS5qb2luQ2hhbm5lbFNlcnZpY2VSZWNvcmRzLmxlbmd0aC0xKToodDwwfHx0Pj10aGlzLnN0YXRlLmpvaW5DaGFubmVsU2VydmljZVJlY29yZHMubGVuZ3RofHx0aGlzLmRpc3BhdGNoKHt0eXBlOlpBLlJFQ09SRF9KT0lOX0NIQU5ORUxfU0VSVklDRSxyZWNvcmQ6ZSxpbmRleDp0fSksdCl9Y2F0Y2goZSl7cmV0dXJuIDB9fXJlc2V0Sm9pbkNoYW5uZWxTZXJ2aWNlUmVjb3Jkcygpe3RoaXMuZGlzcGF0Y2goe3R5cGU6WkEuUkVTRVRfSk9JTl9DSEFOTkVMX1NFUlZJQ0VfUkVDT1JEU30pfXJlc2V0S2V5TWV0cmljcygpe3RoaXMuZGlzcGF0Y2goe3R5cGU6WkEuUkVTRVRfS0VZX01FVFJJQ1N9KX1nZXQgam9pbkNoYW5uZWxTZXJ2aWNlUmVjb3Jkcygpe3RyeXtyZXR1cm4gdGhpcy5zdGF0ZS5qb2luQ2hhbm5lbFNlcnZpY2VSZWNvcmRzfWNhdGNoKGUpe3JldHVybltdfX1nZXQgYXZvaWRKb2luU3RhcnQoKXtyZXR1cm4gdGhpcy5zdGF0ZS5hdm9pZEpvaW5TdGFydH1zZXQgYXZvaWRKb2luU3RhcnQoZSl7dGhpcy5kaXNwYXRjaCh7dHlwZTpaQS5BVk9JRF9KT0lOX1NUQVJULGF2b2lkSm9pblN0YXJ0OmV9KX19bGV0IGViPWZ1bmN0aW9uKGUpe3JldHVybiBlLmgyNjQ9XCJoMjY0XCIsZS5oMjY1PVwiaDI2NVwiLGUudnA4PVwidnA4XCIsZS52cDk9XCJ2cDlcIixlLmF2MT1cImF2MVwiLGV9KHt9KTshZnVuY3Rpb24oZSl7ZS5vcHVzPVwib3B1c1wiLGUucGNtYT1cInBjbWFcIixlLnBjbXU9XCJwY211XCIsZS5nNzIyPVwiZzcyMlwifSh7fSk7Y29uc3QgdGI9MTI4LGliPTk2LG5iPTFlMyxyYj0xMDtsZXQgb2I9MDtmdW5jdGlvbiBzYihlLHQsaSl7cmV0dXJuKHQ9ZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24oZSx0KXtpZihcIm9iamVjdFwiIT10eXBlb2YgZXx8IWUpcmV0dXJuIGU7dmFyIGk9ZVtTeW1ib2wudG9QcmltaXRpdmVdO2lmKHZvaWQgMCE9PWkpe3ZhciBuPWkuY2FsbChlLFwic3RyaW5nXCIpO2lmKFwib2JqZWN0XCIhPXR5cGVvZiBuKXJldHVybiBuO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKX1yZXR1cm4gU3RyaW5nKGUpfShlKTtyZXR1cm5cInN5bWJvbFwiPT10eXBlb2YgdD90OnQrXCJcIn0odCkpaW4gZT9PYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHt2YWx1ZTppLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6ZVt0XT1pLGV9ZnVuY3Rpb24gYWIoZSx0KXt2YXIgaT1PYmplY3Qua2V5cyhlKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgbj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO3QmJihuPW4uZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHQpLmVudW1lcmFibGV9KSkpLGkucHVzaC5hcHBseShpLG4pfXJldHVybiBpfWZ1bmN0aW9uIGNiKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBpPW51bGwhPWFyZ3VtZW50c1t0XT9hcmd1bWVudHNbdF06e307dCUyP2FiKE9iamVjdChpKSwhMCkuZm9yRWFjaCgoZnVuY3Rpb24odCl7c2IoZSx0LGlbdF0pfSkpOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoaSkpOmFiKE9iamVjdChpKSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGksdCkpfSkpfXJldHVybiBlfWNvbnN0IGRiPW5ldyBjbGFzcyBleHRlbmRzIHh5e2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSxzYih0aGlzLFwiY3VycmVudFVwbG9hZExvZ0lEXCIsMCl9cmVwb3J0TG9nVXBsb2FkRXJyb3IoZSl7Y29uc3R7ZXJyb3JSYW5nZTp0fT1lO3RbdC5sZW5ndGgtMV0mJnRbdC5sZW5ndGgtMV0+dGhpcy5jdXJyZW50VXBsb2FkTG9nSUQmJih0aGlzLmN1cnJlbnRVcGxvYWRMb2dJRD10W3QubGVuZ3RoLTFdLHRoaXMuZW1pdChcIlJFUE9SVF9MT0dfVVBMT0FEXCIsZSkpfX07Y2xhc3MgbGJ7Y29uc3RydWN0b3IoZSl7c2IodGhpcyxcImxvZ2dlclwiLHZvaWQgMCksc2IodGhpcyxcInByZWZpeExpc3RzXCIsW10pLHRoaXMubG9nZ2VyPWV9ZGVidWcoKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxpPTA7aTxlO2krKyl0W2ldPWFyZ3VtZW50c1tpXTt0aGlzLmxvZ2dlci5kZWJ1ZyguLi50aGlzLnByZWZpeExpc3RzLC4uLnQpfWluZm8oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxpPTA7aTxlO2krKyl0W2ldPWFyZ3VtZW50c1tpXTt0aGlzLmxvZ2dlci5pbmZvKC4uLnRoaXMucHJlZml4TGlzdHMsLi4udCl9d2FybmluZygpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLGk9MDtpPGU7aSsrKXRbaV09YXJndW1lbnRzW2ldO3RoaXMubG9nZ2VyLndhcm5pbmcoLi4udGhpcy5wcmVmaXhMaXN0cywuLi50KX1lcnJvcigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLGk9MDtpPGU7aSsrKXRbaV09YXJndW1lbnRzW2ldO3RoaXMubG9nZ2VyLmVycm9yKC4uLnRoaXMucHJlZml4TGlzdHMsLi4udCl9cHJlZml4KGUpe3JldHVybiB0aGlzLnByZWZpeExpc3RzLnB1c2goZSksdGhpc31wb3BQcmVmaXgoKXtyZXR1cm4gdGhpcy5wcmVmaXhMaXN0cy5wb3AoKSx0aGlzfX1mdW5jdGlvbiB1Yigpe2NvbnN0IGU9bmV3IERhdGU7cmV0dXJuIGUudG9UaW1lU3RyaW5nKCkuc3BsaXQoXCIgXCIpWzBdK1wiOlwiK2UuZ2V0TWlsbGlzZWNvbmRzKCl9ZnVuY3Rpb24gaGIoKXtjb25zdCBlPW5ldyBEYXRlLHQ9LygoXFxkKzopezJ9XFxkKykvLmV4ZWMoKG5ldyBEYXRlKS50b1VUQ1N0cmluZygpKTtyZXR1cm4gdD8obnVsbD09dD92b2lkIDA6dFswXSkrXCI6XCIrZS5nZXRVVENNaWxsaXNlY29uZHMoKTplLnRvVGltZVN0cmluZygpLnNwbGl0KFwiIFwiKVswXStcIjpcIitlLmdldE1pbGxpc2Vjb25kcygpfWNvbnN0IHBiPXtERUJVRzowLElORk86MSxXQVJOSU5HOjIsRVJST1I6MyxOT05FOjR9LF9iPURhdGUubm93KCksRWI9ZT0+e2Zvcihjb25zdCB0IGluIHBiKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChwYix0KSYmcGJbdF09PT1lKXJldHVybiB0O3JldHVyblwiREVGQVVMVFwifTtjb25zdCBmYj1uZXcgY2xhc3N7Y29uc3RydWN0b3IoKXtzYih0aGlzLFwicHJveHlTZXJ2ZXJVUkxcIix2b2lkIDApLHNiKHRoaXMsXCJsb2dMZXZlbFwiLHBiLkRFQlVHKSxzYih0aGlzLFwidXBsb2FkU3RhdGVcIixcImNvbGxlY3RpbmdcIiksc2IodGhpcyxcInVwbG9hZExvZ1dhaXRpbmdMaXN0XCIsW10pLHNiKHRoaXMsXCJ1cGxvYWRMb2dVcGxvYWRpbmdMaXN0XCIsW10pLHNiKHRoaXMsXCJ1cGxvYWRFcnJvckNvdW50XCIsMCksc2IodGhpcyxcImN1cnJlbnRMb2dJRFwiLDApLHNiKHRoaXMsXCJ1cmxcIix2b2lkIDApLHNiKHRoaXMsXCJleHRMb2dcIiwoKGUsdCk9Pnt0aGlzLmFwcGVuZExvZ1RvV2FpdGluZ0xpc3QoZSwuLi50KX0pKX1kZWJ1Zygpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLGk9MDtpPGU7aSsrKXRbaV09YXJndW1lbnRzW2ldO2NvbnN0IG49W3BiLkRFQlVHXS5jb25jYXQodCk7dGhpcy5sb2cuYXBwbHkodGhpcyxuKX1pbmZvKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSksaT0wO2k8ZTtpKyspdFtpXT1hcmd1bWVudHNbaV07Y29uc3Qgbj1bcGIuSU5GT10uY29uY2F0KHQpO3RoaXMubG9nLmFwcGx5KHRoaXMsbil9d2FybmluZygpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLGk9MDtpPGU7aSsrKXRbaV09YXJndW1lbnRzW2ldO2NvbnN0IG49W3BiLldBUk5JTkddLmNvbmNhdCh0KTt0aGlzLmxvZy5hcHBseSh0aGlzLG4pfXdhcm4oKXt0aGlzLndhcm5pbmcoLi4uYXJndW1lbnRzKX1lcnJvcigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLGk9MDtpPGU7aSsrKXRbaV09YXJndW1lbnRzW2ldO2NvbnN0IG49W3BiLkVSUk9SXS5jb25jYXQodCk7dGhpcy5sb2cuYXBwbHkodGhpcyxuKX11cGxvYWQoKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxpPTA7aTxlO2krKyl0W2ldPWFyZ3VtZW50c1tpXTtjb25zdCBuPVtwYi5ERUJVR10uY29uY2F0KHQpO3RoaXMudXBsb2FkTG9nLmFwcGx5KHRoaXMsbil9c2V0TG9nTGV2ZWwoZSl7ZT1NYXRoLm1pbihNYXRoLm1heCgwLGUpLDQpLHRoaXMubG9nTGV2ZWw9ZX1lbmFibGVMb2dVcGxvYWQoKXtKQShcIlVQTE9BRF9MT0dcIiwhMCl9ZGlzYWJsZUxvZ1VwbG9hZCgpe0pBKFwiVVBMT0FEX0xPR1wiLCExKSx0aGlzLnVwbG9hZExvZ1VwbG9hZGluZ0xpc3Q9W10sdGhpcy51cGxvYWRMb2dXYWl0aW5nTGlzdD1bXX1zZXRQcm94eVNlcnZlcihlKXt0aGlzLnByb3h5U2VydmVyVVJMPWV9cHJlZml4KGUpe3JldHVybiBuZXcgbGIodGhpcykucHJlZml4KGUpfWxvZygpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLGk9MDtpPGU7aSsrKXRbaV09YXJndW1lbnRzW2ldO2lmKERhdGUubm93KCktX2I8MTAwKXJldHVybiB2b2lkIHNldFRpbWVvdXQoKCgpPT57dGhpcy5sb2coLi4udCl9KSxEYXRlLm5vdygpLV9iKTtjb25zdCBuPU1hdGgubWF4KDAsTWF0aC5taW4oNCx0WzBdKSk7aWYodFswXT11YigpK1wiIEFnb3JhLVNESyBbXCIuY29uY2F0KEViKG4pLFwiXTpcIiksdGhpcy5hcHBlbmRMb2dUb1dhaXRpbmdMaXN0KG4sLi4udCksbjx0aGlzLmxvZ0xldmVsKXJldHVybjtjb25zdCByPXViKCkrXCIgJWNBZ29yYS1TREsgW1wiLmNvbmNhdChFYihuKSxcIl06XCIpO2xldCBvPVtdO2lmKCFYQShcIlVTRV9ORVdfTE9HXCIpKXN3aXRjaChuKXtjYXNlIHBiLkRFQlVHOm89W3IsXCJjb2xvcjogIzY0QjVGNjtcIl0uY29uY2F0KHQuc2xpY2UoMSkpLGNvbnNvbGUubG9nLmFwcGx5KGNvbnNvbGUsbyk7YnJlYWs7Y2FzZSBwYi5JTkZPOm89W3IsXCJjb2xvcjogIzFFODhFNTsgZm9udC13ZWlnaHQ6IGJvbGQ7XCJdLmNvbmNhdCh0LnNsaWNlKDEpKSxjb25zb2xlLmxvZy5hcHBseShjb25zb2xlLG8pO2JyZWFrO2Nhc2UgcGIuV0FSTklORzpvPVtyLFwiY29sb3I6ICNGQjhDMDA7IGZvbnQtd2VpZ2h0OiBib2xkO1wiXS5jb25jYXQodC5zbGljZSgxKSksY29uc29sZS53YXJuLmFwcGx5KGNvbnNvbGUsbyk7YnJlYWs7Y2FzZSBwYi5FUlJPUjpvPVtyLFwiY29sb3I6ICNCMDAwMjA7IGZvbnQtd2VpZ2h0OiBib2xkO1wiXS5jb25jYXQodC5zbGljZSgxKSksY29uc29sZS5lcnJvci5hcHBseShjb25zb2xlLG8pfX11cGxvYWRMb2coKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxpPTA7aTxlO2krKyl0W2ldPWFyZ3VtZW50c1tpXTtpZihEYXRlLm5vdygpLV9iPDEwMClyZXR1cm4gdm9pZCBzZXRUaW1lb3V0KCgoKT0+e3RoaXMudXBsb2FkTG9nKC4uLnQpfSksRGF0ZS5ub3coKS1fYik7Y29uc3Qgbj1NYXRoLm1heCgwLE1hdGgubWluKDQsdFswXSkpO3RbMF09dWIoKStcIiBBZ29yYS1TREsgW1wiLmNvbmNhdChFYihuKSxcIl06XCIpLHRoaXMuYXBwZW5kTG9nVG9XYWl0aW5nTGlzdChuLC4uLnQpfWFwcGVuZExvZ1RvV2FpdGluZ0xpc3QoZSl7aWYoIVhBKFwiVVBMT0FEX0xPR1wiKSlyZXR1cm47Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsaT1uZXcgQXJyYXkodD4xP3QtMTowKSxuPTE7bjx0O24rKylpW24tMV09YXJndW1lbnRzW25dO0FycmF5LmlzQXJyYXkoaVswXSk/aVswXVswXT1oYigpK1wiIEFnb3JhLVNESyBbXCIuY29uY2F0KEViKGUpLFwiXTpcIik6aVswXT1oYigpK1wiIEFnb3JhLVNESyBbXCIuY29uY2F0KEViKGUpLFwiXTpcIik7bGV0IHI9XCJcIjtpLmZvckVhY2goKGU9PntcIm9iamVjdFwiPT10eXBlb2YgZSYmKGU9SlNPTi5zdHJpbmdpZnkoZSkpLHIrPVwiXCIuY29uY2F0KGUsXCIgXCIpfSkpLHRoaXMudXBsb2FkTG9nV2FpdGluZ0xpc3QucHVzaCh7cGF5bG9hZF9zdHI6cixsb2dfbGV2ZWw6ZSxsb2dfaXRlbV9pZDp0aGlzLmN1cnJlbnRMb2dJRCsrfSksXCJ1cGxvYWRpbmdcIj09PXRoaXMudXBsb2FkU3RhdGUmJjA9PT10aGlzLnVwbG9hZExvZ1VwbG9hZGluZ0xpc3QubGVuZ3RoJiZ0aGlzLnVwbG9hZExvZ0ludGVydmFsKCl9c3RhcnRVcGxvYWQoKXt0aGlzLnVwbG9hZFN0YXRlPVwidXBsb2FkaW5nXCIsMD09PXRoaXMudXBsb2FkTG9nVXBsb2FkaW5nTGlzdC5sZW5ndGgmJnRoaXMudXBsb2FkTG9nSW50ZXJ2YWwoKX1hc3luYyB1cGxvYWRMb2dzKCl7Y29uc3QgZT10aGlzLnVwbG9hZExvZ1VwbG9hZGluZ0xpc3QsdD17c2RrX3ZlcnNpb246R0EscHJvY2Vzc19pZDpYQShcIlBST0NFU1NfSURcIikscGF5bG9hZDpKU09OLnN0cmluZ2lmeShlKX07cmV0dXJuIGtBKChhc3luYygpPT57Y29uc3QgZT1hd2FpdCBMdi5wb3N0KHRoaXMudXJsfHwodGhpcy5wcm94eVNlcnZlclVSTD9cImh0dHBzOi8vXCIuY29uY2F0KHRoaXMucHJveHlTZXJ2ZXJVUkwsXCIvbHMvP2g9XCIpLmNvbmNhdChYQShcIkxPR19VUExPQURfU0VSVkVSXCIpLFwiJnA9NDQzJmQ9dXBsb2FkL3YxXCIpOlwiaHR0cHM6Ly9cIi5jb25jYXQoWEEoXCJMT0dfVVBMT0FEX1NFUlZFUlwiKSxcIi91cGxvYWQvdjFcIikpLHQse3Jlc3BvbnNlVHlwZTpcInRleHRcIn0pO2lmKFwiT0tcIiE9PWUuZGF0YSl7Y29uc3QgdD1uZXcgRXJyb3IoXCJ1bmV4cGVjdGVkIHVwbG9hZCBsb2cgcmVzcG9uc2VcIik7dGhyb3cgdC5yZXNwb25zZT1lLHR9fSksKCgpPT4odGhpcy51cGxvYWRMb2dVcGxvYWRpbmdMaXN0PVtdLCExKSksKHQ9Pntjb25zdCBpPXtzdGF0dXM6LTEsbWVzc2FnZTp0Lm1lc3NhZ2UsZXJyb3JSYW5nZTplLm1hcCgoZT0+ZS5sb2dfaXRlbV9pZCkpfTtyZXR1cm4gdC5yZXNwb25zZT8oaS5zdGF0dXM9dC5yZXNwb25zZS5zdGF0dXMsaS5kYXRhPXQucmVzcG9uc2UuZGF0YSxpLmhlYWRlcnM9dC5yZXNwb25zZS5oZWFkZXJzKTp0LnJlcXVlc3QmJihpLnN0YXR1cz10LnJlcXVlc3Quc3RhdHVzKSxkYi5yZXBvcnRMb2dVcGxvYWRFcnJvcihpKSwhMH0pLHt0aW1lb3V0OlhBKFwiVVBMT0FEX0xPR19SRVFVRVNUX1JFVFJZX0lOVEVSVkFMXCIpLG1heFJldHJ5VGltZW91dDpYQShcIlVQTE9BRF9MT0dfUkVRVUVTVF9NQVhfUkVUUllfSU5URVJWQUxcIil9KX11cGxvYWRMb2dJbnRlcnZhbCgpezA9PT10aGlzLnVwbG9hZExvZ1VwbG9hZGluZ0xpc3QubGVuZ3RoJiYwPT09dGhpcy51cGxvYWRMb2dXYWl0aW5nTGlzdC5sZW5ndGh8fCgwPT09dGhpcy51cGxvYWRMb2dVcGxvYWRpbmdMaXN0Lmxlbmd0aCYmKHRoaXMudXBsb2FkTG9nVXBsb2FkaW5nTGlzdD10aGlzLnVwbG9hZExvZ1dhaXRpbmdMaXN0LnNwbGljZSgwLFhBKFwiVVBMT0FEX0xPR19MRU5HVEhfRUFDSF9USU1FXCIpKSksdGhpcy51cGxvYWRMb2dzKCkudGhlbigoKCk9Pnt0aGlzLnVwbG9hZEVycm9yQ291bnQ9MCx0aGlzLnVwbG9hZExvZ1dhaXRpbmdMaXN0Lmxlbmd0aD4wJiZ3aW5kb3cuc2V0VGltZW91dCgoKCk9PnRoaXMudXBsb2FkTG9nSW50ZXJ2YWwoKSksWEEoXCJVUExPQURfTE9HX0lOVEVSVkFMXCIpKX0pKS5jYXRjaCgoZT0+e3RoaXMudXBsb2FkRXJyb3JDb3VudCs9MSx0aGlzLnVwbG9hZEVycm9yQ291bnQ8Mj93aW5kb3cuc2V0VGltZW91dCgoKCk9PnRoaXMudXBsb2FkTG9nSW50ZXJ2YWwoKSksWEEoXCJVUExPQURfTE9HX1RXSUNFX1JFVFJZX0lOVEVSVkFMX1YxXCIpKTp3aW5kb3cuc2V0VGltZW91dCgoKCk9PnRoaXMudXBsb2FkTG9nSW50ZXJ2YWwoKSksWEEoXCJVUExPQURfTE9HX1JFVFJZX0lOVEVSVkFMX1YxXCIpKX0pKSl9fTt2YXIgbWI7ZnVuY3Rpb24gVGIoZSl7cmV0dXJuIGJ5KGUucmVwb3J0SWQsXCJwYXJhbXMucmVwb3J0SWRcIiwwLDEwMCwhMSksYnkoZS5jYXRlZ29yeSxcInBhcmFtcy5jYXRlZ29yeVwiLDAsMTAwLCExKSxieShlLmV2ZW50LFwicGFyYW1zLmV2ZW50XCIsMCwxMDAsITEpLGJ5KGUubGFiZWwsXCJwYXJhbXMubGFiZWxcIiwwLDEwMCwhMSkseXkoZS52YWx1ZSxcInBhcmFtcy52YWx1ZVwiLE51bWJlci5NSU5fU0FGRV9JTlRFR0VSLE51bWJlci5NQVhfU0FGRV9JTlRFR0VSLCExKSwhMH0obWI9e30pLkZSRUU9XCJmcmVlXCIsbWIuVVBMT0FESU5HPVwidXBsb2FkaW5nXCIsZnVuY3Rpb24oZSl7ZVtlLk1JU0M9MF09XCJNSVNDXCIsZVtlLklOVEVSTkFMX0VWRU5UPTFdPVwiSU5URVJOQUxfRVZFTlRcIixlW2UuUFVCTElDX0VWRU5UPTJdPVwiUFVCTElDX0VWRU5UXCIsZVtlLldFQl9FVkVOVD0zXT1cIldFQl9FVkVOVFwiLGVbZS5JTlRFUk5BTF9BUEk9NF09XCJJTlRFUk5BTF9BUElcIixlW2UuV0VCX0FQST01XT1cIldFQl9BUElcIixlW2UuUFVCTElDX0FQST02XT1cIlBVQkxJQ19BUElcIn0oe30pO2NvbnN0IFNiPXtzaWQ6XCJcIixsdHM6MCxzdWNjZXNzOm51bGwsY25hbWU6bnVsbCx1aWQ6bnVsbCxwZWVyOm51bGwsY2lkOm51bGwsZWxhcHNlOm51bGwsZXh0ZW5kOm51bGwsdmlkOjB9O2xldCBnYj1mdW5jdGlvbihlKXtyZXR1cm4gZS5QVUJMSVNIPVwicHVibGlzaFwiLGUuU1VCU0NSSUJFPVwic3Vic2NyaWJlXCIsZS5XU19DT01QUkVTU09SX0lOSVQ9XCJ3c19jb21wcmVzc29yX2luaXRcIixlLlNFU1NJT05fSU5JVD1cInNlc3Npb25faW5pdFwiLGUuSk9JTl9DSE9PU0VfU0VSVkVSPVwiam9pbl9jaG9vc2Vfc2VydmVyXCIsZS5SRVFfVVNFUl9BQ0NPVU5UPVwicmVxX3VzZXJfYWNjb3VudFwiLGUuSk9JTl9HQVRFV0FZPVwiam9pbl9nYXRld2F5XCIsZS5SRUpPSU5fR0FURVdBWT1cInJlam9pbl9nYXRld2F5XCIsZS5TVFJFQU1fU1dJVENIPVwic3RyZWFtX3N3aXRjaFwiLGUuUkVRVUVTVF9QUk9YWV9XT1JLRVJfTUFOQUdFUj1cInJlcXVlc3RfcHJveHlfd29ya2VyX21hbmFnZXJcIixlLlJFUVVFU1RfUFJPWFlfQVBQQ0VOVEVSPVwicmVxdWVzdF9wcm94eV9hcHBjZW50ZXJcIixlLkZJUlNUX1ZJREVPX1JFQ0VJVkVEPVwiZmlyc3RfdmlkZW9fcmVjZWl2ZWRcIixlLkZJUlNUX0FVRElPX1JFQ0VJVkVEPVwiZmlyc3RfYXVkaW9fcmVjZWl2ZWRcIixlLkZJUlNUX1ZJREVPX0RFQ09ERT1cImZpcnN0X3ZpZGVvX2RlY29kZVwiLGUuRklSU1RfQVVESU9fREVDT0RFPVwiZmlyc3RfYXVkaW9fZGVjb2RlXCIsZS5PTl9BRERfQVVESU9fU1RSRUFNPVwib25fYWRkX2F1ZGlvX3N0cmVhbVwiLGUuT05fQUREX1ZJREVPX1NUUkVBTT1cIm9uX2FkZF92aWRlb19zdHJlYW1cIixlLk9OX1VQREFURV9TVFJFQU09XCJvbl91cGRhdGVfc3RyZWFtXCIsZS5PTl9SRU1PVkVfU1RSRUFNPVwib25fcmVtb3ZlX3N0cmVhbVwiLGUuVVNFUl9BTkFMWVRJQ1M9XCJyZXFfdXNlcl9hbmFseXRpY3NcIixlLlBDX1NUQVRTPVwicGNfc3RhdHNcIixlLlVQREFURV9SRU1PVEVfUlRQQ0FQQUJJTElUSUVTPVwidXBkYXRlX3JlbW90ZV9ydHBDYXBhYmlsaXRpZXNcIixlfSh7fSksUmI9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuU0VTU0lPTj1cImlvLmFnb3JhLnBiLldydGMuU2Vzc2lvblwiLGUuSk9JTl9DSE9PU0VfU0VSVkVSPVwiaW8uYWdvcmEucGIuV3J0Yy5Kb2luQ2hvb3NlU2VydmVyXCIsZS5SRVFfVVNFUl9BQ0NPVU5UPVwiaW8uYWdvcmEucGIuV3J0Yy5SZXFVc2VyQWNjb3VudFwiLGUuSk9JTl9HQVRFV0FZPVwiaW8uYWdvcmEucGIuV3J0Yy5Kb2luR2F0ZXdheVwiLGUuUkVfSk9JTl9HQVRFV0FZPVwiaW8uYWdvcmEucGIuV3J0Yy5SZUpvaW5HYXRld2F5XCIsZS5QVUJMSVNIPVwiaW8uYWdvcmEucGIuV3J0Yy5QdWJsaXNoXCIsZS5TVUJTQ1JJQkU9XCJpby5hZ29yYS5wYi5XcnRjLlN1YnNjcmliZVwiLGUuV1NfQ09NUFJFU1NPUl9JTklUPVwiaW8uYWdvcmEucGIuV3J0Yy5Xc0NvbXByZXNzb3JJbml0XCIsZS5TVFJFQU1fU1dJVENIPVwiaW8uYWdvcmEucGIuV3J0Yy5TdHJlYW1Td2l0Y2hcIixlLkFVRElPX1NFTkRJTkdfU1RPUFBFRD1cImlvLmFnb3JhLnBiLldydGMuQXVkaW9TZW5kaW5nU3RvcHBlZFwiLGUuVklERU9fU0VORElOR19TVE9QUEVEPVwiaW8uYWdvcmEucGIuV3J0Yy5WaWRlb1NlbmRpbmdTdG9wcGVkXCIsZS5SRVFVRVNUX1BST1hZX0FQUENFTlRFUj1cImlvLmFnb3JhLnBiLldydGMuUmVxdWVzdFByb3h5QXBwQ2VudGVyXCIsZS5SRVFVRVNUX1BST1hZX1dPUktFUl9NQU5BR0VSPVwiaW8uYWdvcmEucGIuV3J0Yy5SZXF1ZXN0UHJveHlXb3JrZXJNYW5hZ2VyXCIsZS5BUElfSU5WT0tFPVwiaW8uYWdvcmEucGIuV3J0Yy5BcGlJbnZva2VcIixlLkZJUlNUX1ZJREVPX1JFQ0VJVkVEPVwiaW8uYWdvcmEucGIuV3J0Yy5GaXJzdFZpZGVvUmVjZWl2ZWRcIixlLkZJUlNUX0FVRElPX1JFQ0VJVkVEPVwiaW8uYWdvcmEucGIuV3J0Yy5GaXJzdEF1ZGlvUmVjZWl2ZWRcIixlLkZJUlNUX1ZJREVPX0RFQ09ERT1cImlvLmFnb3JhLnBiLldydGMuRmlyc3RWaWRlb0RlY29kZVwiLGUuRklSU1RfQVVESU9fREVDT0RFPVwiaW8uYWdvcmEucGIuV3J0Yy5GaXJzdEF1ZGlvRGVjb2RlXCIsZS5PTl9BRERfQVVESU9fU1RSRUFNPVwiaW8uYWdvcmEucGIuV3J0Yy5PbkFkZEF1ZGlvU3RyZWFtXCIsZS5PTl9BRERfVklERU9fU1RSRUFNPVwiaW8uYWdvcmEucGIuV3J0Yy5PbkFkZFZpZGVvU3RyZWFtXCIsZS5PTl9VUERBVEVfU1RSRUFNPVwiaW8uYWdvcmEucGIuV3J0Yy5PblVwZGF0ZVN0cmVhbVwiLGUuT05fUkVNT1ZFX1NUUkVBTT1cImlvLmFnb3JhLnBiLldydGMuT25SZW1vdmVTdHJlYW1cIixlLkpPSU5fQ0hBTk5FTF9USU1FT1VUPVwiaW8uYWdvcmEucGIuV3J0Yy5Kb2luQ2hhbm5lbFRpbWVvdXRcIixlLlBFRVJfUFVCTElTSF9TVEFUVVM9XCJpby5hZ29yYS5wYi5XcnRjLlBlZXJQdWJsaXNoU3RhdHVzXCIsZS5XT1JLRVJfRVZFTlQ9XCJpby5hZ29yYS5wYi5XcnRjLldvcmtlckV2ZW50XCIsZS5BUF9XT1JLRVJfRVZFTlQ9XCJpby5hZ29yYS5wYi5XcnRjLkFQV29ya2VyRXZlbnRcIixlLkpPSU5fV0VCX1BST1hZX0FQPVwiaW8uYWdvcmEucGIuV3J0Yy5Kb2luV2ViUHJveHlBUFwiLGUuV0VCU09DS0VUX1FVSVQ9XCJpby5hZ29yYS5wYi5XcnRjLldlYlNvY2tldFF1aXRcIixlLlVTRVJfQU5BTFlUSUNTPVwiaW8uYWdvcmEucGIuV3J0Yy5Vc2VyQW5hbHl0aWNzXCIsZS5BVVRPUExBWV9GQUlMRUQ9XCJpby5hZ29yYS5wYi5XcnRjLkF1dG9wbGF5RmFpbGVkXCIsZS5QQ19TVEFUUz1cImlvLmFnb3JhLnBiLldydGMuUENTdGF0c1wiLGUuVVBEQVRFX1JFTU9URV9SVFBDQVBBQklMSVRJRVM9XCJpby5hZ29yYS5wYi5XcnRjLlVwZGF0ZVJlbW90ZVJUUENhcGFiaWxpdGllc1wiLGV9KHt9KTshZnVuY3Rpb24oZSl7ZVtlLldPUktFUl9FVkVOVD0xNTZdPVwiV09SS0VSX0VWRU5UXCIsZVtlLkFQX1dPUktFUl9FVkVOVD0xNjBdPVwiQVBfV09SS0VSX0VWRU5UXCJ9KHt9KTtsZXQgQ2I9ZnVuY3Rpb24oZSl7cmV0dXJuIGVbZS5TRVNTSU9OPTI2XT1cIlNFU1NJT05cIixlW2UuSk9JTl9DSE9PU0VfU0VSVkVSPTI3XT1cIkpPSU5fQ0hPT1NFX1NFUlZFUlwiLGVbZS5SRVFfVVNFUl9BQ0NPVU5UPTE5Nl09XCJSRVFfVVNFUl9BQ0NPVU5UXCIsZVtlLkpPSU5fR0FURVdBWT0yOF09XCJKT0lOX0dBVEVXQVlcIixlW2UuUFVCTElTSD0zMF09XCJQVUJMSVNIXCIsZVtlLlNVQlNDUklCRT0yOV09XCJTVUJTQ1JJQkVcIixlW2UuV1NfQ09NUFJFU1NPUl9JTklUPTk0MzBdPVwiV1NfQ09NUFJFU1NPUl9JTklUXCIsZVtlLlNUUkVBTV9TV0lUQ0g9MzJdPVwiU1RSRUFNX1NXSVRDSFwiLGVbZS5BVURJT19TRU5ESU5HX1NUT1BQRUQ9MzNdPVwiQVVESU9fU0VORElOR19TVE9QUEVEXCIsZVtlLlZJREVPX1NFTkRJTkdfU1RPUFBFRD0zNF09XCJWSURFT19TRU5ESU5HX1NUT1BQRURcIixlW2UuUkVRVUVTVF9QUk9YWV9BUFBDRU5URVI9MzVdPVwiUkVRVUVTVF9QUk9YWV9BUFBDRU5URVJcIixlW2UuUkVRVUVTVF9QUk9YWV9XT1JLRVJfTUFOQUdFUj0zNl09XCJSRVFVRVNUX1BST1hZX1dPUktFUl9NQU5BR0VSXCIsZVtlLkFQSV9JTlZPS0U9NDFdPVwiQVBJX0lOVk9LRVwiLGVbZS5GSVJTVF9WSURFT19SRUNFSVZFRD0zNDhdPVwiRklSU1RfVklERU9fUkVDRUlWRURcIixlW2UuRklSU1RfQVVESU9fUkVDRUlWRUQ9MzQ5XT1cIkZJUlNUX0FVRElPX1JFQ0VJVkVEXCIsZVtlLkZJUlNUX1ZJREVPX0RFQ09ERT0zNTBdPVwiRklSU1RfVklERU9fREVDT0RFXCIsZVtlLkZJUlNUX0FVRElPX0RFQ09ERT0zNTFdPVwiRklSU1RfQVVESU9fREVDT0RFXCIsZVtlLk9OX0FERF9BVURJT19TVFJFQU09MzUyXT1cIk9OX0FERF9BVURJT19TVFJFQU1cIixlW2UuT05fQUREX1ZJREVPX1NUUkVBTT0zNTNdPVwiT05fQUREX1ZJREVPX1NUUkVBTVwiLGVbZS5PTl9VUERBVEVfU1RSRUFNPTM1Nl09XCJPTl9VUERBVEVfU1RSRUFNXCIsZVtlLk9OX1JFTU9WRV9TVFJFQU09MzU1XT1cIk9OX1JFTU9WRV9TVFJFQU1cIixlW2UuSk9JTl9DSEFOTkVMX1RJTUVPVVQ9NDA3XT1cIkpPSU5fQ0hBTk5FTF9USU1FT1VUXCIsZVtlLlBFRVJfUFVCTElTSF9TVEFUVVM9NDA4XT1cIlBFRVJfUFVCTElTSF9TVEFUVVNcIixlW2UuV09SS0VSX0VWRU5UPTE1Nl09XCJXT1JLRVJfRVZFTlRcIixlW2UuQVBfV09SS0VSX0VWRU5UPTE2MF09XCJBUF9XT1JLRVJfRVZFTlRcIixlW2UuSk9JTl9XRUJfUFJPWFlfQVA9NzAwXT1cIkpPSU5fV0VCX1BST1hZX0FQXCIsZVtlLldFQlNPQ0tFVF9RVUlUPTY3MV09XCJXRUJTT0NLRVRfUVVJVFwiLGVbZS5VU0VSX0FOQUxZVElDUz0xZTRdPVwiVVNFUl9BTkFMWVRJQ1NcIixlW2UuQVVUT1BMQVlfRkFJTEVEPTkxNzhdPVwiQVVUT1BMQVlfRkFJTEVEXCIsZX0oe30pO2Z1bmN0aW9uIEliKCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9O3JldHVybiBmdW5jdGlvbih0LGksbil7Y29uc3Qgcj1uLnZhbHVlO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHIpe2NvbnN0IG89ZS5jbGFzc05hbWV8fHQuX19jbGFzc05hbWVfX3x8KFwiQWdvcmFSVENDbGllbnRcIj09PXQuY29uc3RydWN0b3IubmFtZT9cIkNsaWVudFwiOnQuY29uc3RydWN0b3IubmFtZSk7bi52YWx1ZT1mdW5jdGlvbigpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KHQpLHM9MDtzPHQ7cysrKW5bc109YXJndW1lbnRzW3NdO2xldCBhPW47aWYoZS5hcmdzTWFwKXRyeXthPWUuYXJnc01hcCh0aGlzLC4uLm4pfWNhdGNoKGUpe2ZiLndhcm5pbmcoZSksYT1bXX10cnl7SlNPTi5zdHJpbmdpZnkoYSl9Y2F0Y2goZSl7ZmIud2FybmluZyhcImFyZ3VtZW50cyBmb3IgbWV0aG9kIFwiLmNvbmNhdChvLFwiLlwiKS5jb25jYXQoU3RyaW5nKGkpLFwiIG5vdCBzZXJpYWxpemFibGUgZm9yIGFwaUludm9rZS5cIikpLGE9W119Y29uc3QgYz0oZS5yZXBvcnR8fHZiKS5yZXBvcnRBcGlJbnZva2UodGhpcy5fc2Vzc2lvbklkfHxudWxsLHtuYW1lOlwiXCIuY29uY2F0KG8sXCIuXCIpLmNvbmNhdChTdHJpbmcoaSkpLG9wdGlvbnM6YSx0YWc6ankuVFJBQ0VSLHJlcG9ydFJlc3VsdDplLnJlcG9ydFJlc3VsdH0sZS50aHJvdHRsZVRpbWUpO3RyeXtjb25zdCB0PXIuYXBwbHkodGhpcyxuKTtyZXR1cm4gdCBpbnN0YW5jZW9mIEdoP3QudGhlbigodD0+KGMub25TdWNjZXNzKGUucmVwb3J0UmVzdWx0JiZ0KSx0KSkpLmNhdGNoKChlPT57dGhyb3cgYy5vbkVycm9yKGUpLGV9KSk6KGMub25TdWNjZXNzKGUucmVwb3J0UmVzdWx0JiZ0KSx0KX1jYXRjaChlKXt0aHJvdyBjLm9uRXJyb3IoZSksZX19fXJldHVybiBufX1jb25zdCB2Yj1uZXcgY2xhc3N7Y29uc3RydWN0b3IoKXtzYih0aGlzLFwiYmFzZUluZm9NYXBcIixuZXcgTWFwKSxzYih0aGlzLFwicHJveHlTZXJ2ZXJcIix2b2lkIDApLHNiKHRoaXMsXCJldmVudFVwbG9hZFRpbWVyXCIsdm9pZCAwKSxzYih0aGlzLFwic2V0U2Vzc2lvbklkVGltZXJcIix2b2lkIDApLHNiKHRoaXMsXCJ1cmxcIix2b2lkIDApLHNiKHRoaXMsXCJzaWRzXCIsbmV3IFNldCksc2IodGhpcyxcImJhY2t1cFVybFwiLHZvaWQgMCksc2IodGhpcyxcIl9hcHBJZFwiLHZvaWQgMCksc2IodGhpcyxcImtleUV2ZW50VXBsb2FkUGVuZGluZ0l0ZW1zXCIsW10pLHNiKHRoaXMsXCJub3JtYWxFdmVudFVwbG9hZFBlbmRpbmdJdGVtc1wiLFtdKSxzYih0aGlzLFwiYXBpSW52b2tlVXBsb2FkUGVuZGluZ0l0ZW1zXCIsW10pLHNiKHRoaXMsXCJhcGlJbnZva2VDb3VudFwiLDApLHNiKHRoaXMsXCJsdHNMaXN0XCIsW10pLHNiKHRoaXMsXCJsYXN0U2VuZE5vcm1hbEV2ZW50VGltZVwiLERhdGUubm93KCkpLHNiKHRoaXMsXCJjdXN0b21SZXBvcnRDb3VudGVyVGltZXJcIix2b2lkIDApLHNiKHRoaXMsXCJjdXN0b21SZXBvcnRDb3VudFwiLDApLHNiKHRoaXMsXCJleHRBcGlJbnZva2VcIiwoYXN5bmMgZT0+e2Zvcihjb25zdCB0IG9mIGUpe2NvbnN0IGU9Y2IoY2Ioe30sdCkse30se3NpZDpudWxsLGludm9rZUlkOisrdGhpcy5hcGlJbnZva2VDb3VudCx0YWc6ankuVFJBQ0VSfSk7dGhpcy5zZW5kQXBpSW52b2tlKGUpfX0pKSx0aGlzLmV2ZW50VXBsb2FkVGltZXI9d2luZG93LnNldEludGVydmFsKHRoaXMuZG9TZW5kLmJpbmQodGhpcyksWEEoXCJFVkVOVF9SRVBPUlRfU0VORF9JTlRFUlZBTFwiKSksdGhpcy5zZXRTZXNzaW9uSWRUaW1lcj13aW5kb3cuc2V0SW50ZXJ2YWwodGhpcy5hcHBlbmRTZXNzaW9uSWQuYmluZCh0aGlzKSxYQShcIkVWRU5UX1JFUE9SVF9TRU5EX0lOVEVSVkFMXCIpKX1nZXRCYXNlSW5mb0J5U2Vzc2lvbklkKGUpe3JldHVybiB0aGlzLmJhc2VJbmZvTWFwLmdldChlKX1hZGp1c3RTZXNzaW9uU3RhcnRUaW1lKGUpe2lmKCF0aGlzLmJhc2VJbmZvTWFwLmhhcyhlKSYmIXRoaXMuYmFzZUluZm9NYXAuZ2V0KGUpKXJldHVybiB2b2lkIGZiLmVycm9yKFwiYWRqdXN0IHNlc3Npb24gXCIuY29uY2F0KGUsXCIgc3RhcnQgdGltZSwgc2lkIGlzIG5vdCBleGlzdCBvciBpbmZvIGlzIHVuZGVmaW5lZFwiKSk7Y29uc3QgdD10aGlzLmJhc2VJbmZvTWFwLmdldChlKSxpPURhdGUubm93KCksbj10LnN0YXJ0VGltZTt0LnN0YXJ0VGltZT1pLGZiLmRlYnVnKFwicmV3cml0ZSBzZXNzaW9uIFwiLmNvbmNhdChlLFwiIHN0YXJ0VGltZTogXCIpLmNvbmNhdChpLFwiICwgXCIpLmNvbmNhdChpLW4sXCJtc1wiKSksdGhpcy5iYXNlSW5mb01hcC5zZXQoZSx0KX1zZXRBcHBJZChlKXt0aGlzLl9hcHBJZD1lfXJlcG9ydEFwaUludm9rZShlLHQsaSl7dC50aW1lb3V0PXQudGltZW91dHx8NmU0LHQucmVwb3J0UmVzdWx0PXZvaWQgMD09PXQucmVwb3J0UmVzdWx0fHx0LnJlcG9ydFJlc3VsdDtjb25zdCBuPURhdGUubm93KCk7dGhpcy5hcGlJbnZva2VDb3VudCs9MTtjb25zdCByPXRoaXMuYXBpSW52b2tlQ291bnQsbz0oKT0+KHt0YWc6dC50YWcsaW52b2tlSWQ6cixzaWQ6ZSxuYW1lOnQubmFtZSxhcGlJbnZva2VUaW1lOm4sb3B0aW9uczp0Lm9wdGlvbnMsc3RhdGVzOnQuc3RhdGVzfHxudWxsfSkscz0hIVhBKFwiU0hPV19SRVBPUlRfSU5WT0tFUl9MT0dcIik7cyYmZmIuaW5mbyhcIlwiLmNvbmNhdCh0Lm5hbWUsXCIgc3RhcnRcIiksdC5vcHRpb25zKTtsZXQgYT0hMTttQSh0LnRpbWVvdXQpLnRoZW4oKCgpPT57YXx8KHRoaXMuc2VuZEFwaUludm9rZShjYihjYih7fSxvKCkpLHt9LHtlcnJvcjpSeS5BUElfSU5WT0tFX1RJTUVPVVQsc3VjY2VzczohMX0pKSxmYi5kZWJ1ZyhcIlwiLmNvbmNhdCh0Lm5hbWUsXCIgdGltZW91dFwiKSkpfSkpO2NvbnN0IGM9bmV3IEN5KFJ5LlVORVhQRUNURURfRVJST1IsXCJcIi5jb25jYXQodC5uYW1lLFwiOiB0aGlzIGFwaSBpbnZva2UgaXMgZW5kXCIpKTtyZXR1cm57b25TdWNjZXNzOmU9Pntjb25zdCBuPSgpPT57aWYoYSl0aHJvdyBjO3JldHVybiBhPSEwLHRoaXMuc2VuZEFwaUludm9rZShjYihjYih7fSxvKCkpLHt9LHtzdWNjZXNzOiEwfSx0LnJlcG9ydFJlc3VsdCYme3Jlc3VsdDplfSkpLHMmJmZiLmluZm8oXCJcIi5jb25jYXQodC5uYW1lLFwiIG9uU3VjY2Vzc1wiKSksZX07cmV0dXJuIGk/Q0Eobix0Lm5hbWUrXCJTdWNjZXNzXCIsaSwoKCk9PmE9ITApKTpuKCl9LG9uRXJyb3I6ZT0+e2NvbnN0IG49KCk9PntpZihhKXRocm93IGU7YT0hMCx0aGlzLnNlbmRBcGlJbnZva2UoY2IoY2Ioe30sbygpKSx7fSx7c3VjY2VzczohMSxlcnJvcjplfSkpLHMmJmZiLmluZm8oXCJcIi5jb25jYXQodC5uYW1lLFwiIG9uRmFpbHVyZVwiKSxlLnRvU3RyaW5nKCkpfTtyZXR1cm4gaT9DQShuLHQubmFtZStcIkVycm9yXCIsaSwoKCk9PmE9ITApKTpuKCl9fX1zZXNzaW9uSW5pdChlLHQpe2lmKHRoaXMuYmFzZUluZm9NYXAuaGFzKGUpKXJldHVybjtjb25zdCBpPURhdGUubm93KCksbj10aGlzLmNyZWF0ZUJhc2VJbmZvKGUsaSk7bi5jbmFtZT10LmNuYW1lO2NvbnN0IHI9T2JqZWN0LmFzc2lnbih7fSx7d2lsbFVwbG9hZENvbnNvbGVMb2c6WEEoXCJVUExPQURfTE9HXCIpLG1heFRvdWNoUG9pbnRzOm5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyxhcmVhVmVyc2lvbjpXQT9cImdsb2JhbFwiOlwib3ZlcnNlYVwiLGFyZWFzOlhBKFwiQVJFQVNcIikmJlhBKFwiQVJFQVNcIikuam9pbihcIixcIil9LHQuZXh0ZW5kKSx7c3RyaW5nVWlkOm8sY2hhbm5lbFByb2ZpbGU6cyxjaGFubmVsTW9kZTphLGlzQUJUZXN0U3VjY2VzczpjLGxzaWQ6ZCxjbGllbnRSb2xlOmx9PXQsdT1EYXRlLm5vdygpLGg9Y2IoY2Ioe30sbikse30se2V2ZW50VHlwZTpnYi5TRVNTSU9OX0lOSVQsYXBwaWQ6dC5hcHBpZCxicm93c2VyOm5hdmlnYXRvci51c2VyQWdlbnQsYnVpbGRGb3JtYXQ6dC5idWlsZEZvcm1hdCxidWlsZDpxQSxsdHM6dSxlbGFwc2U6dS1pLGV4dGVuZDpKU09OLnN0cmluZ2lmeShyKSxtb2RlOnQubW9kZSxwcm9jZXNzOlhBKFwiUFJPQ0VTU19JRFwiKSxhcHBUeXBlOlhBKFwiQVBQX1RZUEVcIiksc3VjY2VzczohMCx2ZXJzaW9uOkdBLHN0cmluZ1VpZDpvLGNoYW5uZWxQcm9maWxlOnMsY2hhbm5lbE1vZGU6YSxpc0FCVGVzdFN1Y2Nlc3M6Yyxsc2lkOmQsY2xpZW50VHlwZTpEbihwPXdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KS5jYWxsKHAsXCJBZ29yYVdlYlZpZXdcIik/NDI6MjAsY2xpZW50Um9sZTpsLHNlcnZpY2VJZDpYQShcIlBST0NFU1NfSURcIiksZXh0ZW5zaW9uSUQ6WEEoXCJQTFVHSU5fSU5GT1wiKS5qb2luKFwiLFwiKXx8XCJcIn0pO3ZhciBwO3RoaXMuc2VuZCh7dHlwZTpSYi5TRVNTSU9OLGRhdGE6aH0sITApfWpvaW5DaG9vc2VTZXJ2ZXIoZSx0KXtjb25zdCBpPXRoaXMuYmFzZUluZm9NYXAuZ2V0KGUpO2lmKCFpKXJldHVybjtjb25zdCBuPWkuaW5mbyxyPURhdGUubm93KCksbz1jYihjYih7fSxuKSx7fSx7ZXZlbnRUeXBlOmdiLkpPSU5fQ0hPT1NFX1NFUlZFUixsdHM6cixldmVudEVsYXBzZTp0LmVsYXBzZXx8ci10Lmx0cyxjaG9vc2VTZXJ2ZXJBZGRyOnQuY3NBZGRyLGVycm9yQ29kZTp0LmVjLGVsYXBzZTpyLWkuc3RhcnRUaW1lLHN1Y2Nlc3M6dC5zdWNjLGNob29zZVNlcnZlckFkZHJMaXN0OkpTT04uc3RyaW5naWZ5KHQuc2VydmVyTGlzdCksdWlkOnQudWlkP3BhcnNlSW50KHQudWlkKTpudWxsLGNpZDp0LmNpZD9wYXJzZUludCh0LmNpZCk6bnVsbCxjaG9vc2VTZXJ2ZXJJcDp0LmNzSXB8fFwiXCIsb3BpZDp0Lm9waWQsdW5pbGJzU2VydmVySWRzOnQudW5pbGJzU2VydmVySWRzLGV4dGVuZDp0LmV4dGVuZHx8dm9pZCAwLGlzSHR0cDM6dC5pc0h0dHAzLGNvcnNzUmVnaW9uVGFnUmVxOnQuY29yc3NSZWdpb25UYWdSZXF8fHZvaWQgMCxjb3Jzc1JlZ2lvblRhZ1Jlczp0LmNvcnNzUmVnaW9uVGFnUmVzfHx2b2lkIDB9KTt0aGlzLnNlbmQoe3R5cGU6UmIuSk9JTl9DSE9PU0VfU0VSVkVSLGRhdGE6b30sITApfXJlcVVzZXJBY2NvdW50KGUsdCl7Y29uc3QgaT10aGlzLmJhc2VJbmZvTWFwLmdldChlKTtpZighaSlyZXR1cm47Y29uc3Qgbj1pLmluZm8scj1EYXRlLm5vdygpLG89Y2IoY2Ioe30sbikse30se2V2ZW50VHlwZTpnYi5SRVFfVVNFUl9BQ0NPVU5ULGx0czpyLHN1Y2Nlc3M6dC5zdWNjZXNzLHNlcnZlckFkZHJlc3M6dC5zZXJ2ZXJBZGRyLHN0cmluZ1VpZDp0LnN0cmluZ1VpZCx1aWQ6dC51aWQsZXJyb3JDb2RlOnQuZXJyb3JDb2RlLGVsYXBzZTp0LmVsYXBzZXx8ci1pLnN0YXJ0VGltZSxldmVudEVsYXBzZTpyLXQubHRzLGV4dGVuZDpKU09OLnN0cmluZ2lmeSh0LmV4dGVuZCl9KTt0aGlzLnNlbmQoe3R5cGU6UmIuUkVRX1VTRVJfQUNDT1VOVCxkYXRhOm99LCEwKX1qb2luR2F0ZXdheShlLHQpe2NvbnN0IGk9dGhpcy5iYXNlSW5mb01hcC5nZXQoZSk7aWYoIWkpcmV0dXJuO2NvbnN0IG49aS5pbmZvO3QudmlkJiYobi52aWQ9dC52aWQpLG4udWlkPXQudWlkLG4uY2lkPXQuY2lkO2NvbnN0IHI9RGF0ZS5ub3coKSx7Zmlyc3RTdWNjZXNzOm8sYXZvaWRKb2luU3RhcnRUaW1lOnN9PXQsYT1yLShvJiZzP3M6aS5zdGFydFRpbWUpLGM9Y2IoY2Ioe30sbikse30se2V2ZW50VHlwZTpnYi5KT0lOX0dBVEVXQVksbHRzOnIsZ2F0ZXdheUFkZHI6dC5hZGRyLHN1Y2Nlc3M6dC5zdWNjLGVycm9yQ29kZTp0LmVjLGVycm9yTXNnOnQuZXJyb3JNc2d8fFwiXCIsZWxhcHNlOmEsZXZlbnRFbGFwc2U6ci10Lmx0cyxmaXJzdFN1Y2Nlc3M6byxzaWduYWxDaGFubmVsOnQuc2lnbmFsQ2hhbm5lbCxwcmVsb2FkOnQucHJlbG9hZD8xOjB9KTt0LnN1Y2MmJihpLmxhc3RKb2luU3VjY2Vzc1RpbWU9ciksdGhpcy5zZW5kKHt0eXBlOlJiLkpPSU5fR0FURVdBWSxkYXRhOmN9LCEwKX1qb2luQ2hhbm5lbFRpbWVvdXQoZSx0KXtjb25zdCBpPXRoaXMuYmFzZUluZm9NYXAuZ2V0KGUpO2lmKCFpKXJldHVybjtjb25zdCBuPURhdGUubm93KCkscj1jYihjYih7fSxpLmluZm8pLHt9LHtsdHM6bix0aW1lb3V0OnQsZWxhcHNlOm4taS5zdGFydFRpbWV9KTt0aGlzLnNlbmQoe3R5cGU6UmIuSk9JTl9DSEFOTkVMX1RJTUVPVVQsZGF0YTpyfSwhMCl9cHVibGlzaChlLHQpe2NvbnN0IGk9dGhpcy5iYXNlSW5mb01hcC5nZXQoZSk7aWYoIWkpcmV0dXJuO2NvbnN0IG49aS5pbmZvLHI9RGF0ZS5ub3coKSxvPWNiKGNiKHt9LG4pLHt9LHtldmVudFR5cGU6Z2IuUFVCTElTSCxsdHM6cixldmVudEVsYXBzZTp0LmV2ZW50RWxhcHNlLGVsYXBzZTpyLWkuc3RhcnRUaW1lLHN1Y2Nlc3M6dC5zdWNjLGVycm9yQ29kZTp0LmVjLHZpZGVvTmFtZTp0LnZpZGVvTmFtZSxhdWRpb05hbWU6dC5hdWRpb05hbWUsc2NyZWVuTmFtZTp0LnNjcmVlbk5hbWUsc2NyZWVuc2hhcmU6dC5zY3JlZW5zaGFyZSxhdWRpbzp0LmF1ZGlvLHZpZGVvOnQudmlkZW8scDJwaWQ6dC5wMnBpZCxwdWJsaXNoUmVxdWVzdGlkOnQucHVibGlzaFJlcXVlc3RpZH0pO3RoaXMuc2VuZCh7dHlwZTpSYi5QVUJMSVNILGRhdGE6b30sITApfXN1YnNjcmliZShlLHQsaSl7Y29uc3Qgbj10aGlzLmJhc2VJbmZvTWFwLmdldChlKTtpZighbilyZXR1cm47Y29uc3Qgcj1uLmluZm8sbz1EYXRlLm5vdygpLHM9Y2IoY2Ioe30scikse30se2V2ZW50VHlwZTpnYi5TVUJTQ1JJQkUsbHRzOm8sZXZlbnRFbGFwc2U6dC5ldmVudEVsYXBzZSxlbGFwc2U6by1uLnN0YXJ0VGltZSxzdWNjZXNzOnQuc3VjYyxlcnJvckNvZGU6dC5lYyx2aWRlbzp0LnZpZGVvLGF1ZGlvOnQuYXVkaW8sc3Vic2NyaWJlUmVxdWVzdGlkOnQuc3Vic2NyaWJlUmVxdWVzdGlkLHAycGlkOnQucDJwaWQscHJlU3NyYzp0LnByZVNzcmM/MTowfSxpJiZ7ZXh0ZW5kOkpTT04uc3RyaW5naWZ5KHtpc01hc3NTdWJzY3JpYmU6ITB9KX0pO1wic3RyaW5nXCI9PXR5cGVvZiB0LnBlZXJpZD9zLnBlZXJTdWlkPXQucGVlcmlkOnMucGVlcj10LnBlZXJpZCx0aGlzLnNlbmQoe3R5cGU6UmIuU1VCU0NSSUJFLGRhdGE6c30sITApfXdzQ29tcHJlc3NvckluaXQoZSl7dmFyIHQ7Y29uc3QgaT1bLi4uZF8odD10aGlzLmJhc2VJbmZvTWFwKS5jYWxsKHQpXSxuPWkubGVuZ3RoP2lbMF06XCJVbmFibGVUb0dldFNpZFwiLHI9dGhpcy5iYXNlSW5mb01hcC5nZXQobik7aWYoIXIpcmV0dXJuO2NvbnN0IG89ci5pbmZvLHM9RGF0ZS5ub3coKSxhPWNiKGNiKHt9LG8pLHt9LHtldmVudFR5cGU6Z2IuV1NfQ09NUFJFU1NPUl9JTklULGx0czpzLGV2ZW50RWxhcHNlOmUuZXZlbnRFbGFwc2UsZWxhcHNlOnMtci5zdGFydFRpbWUsc3RhdHVzOmUuc3RhdHVzPzE6Mn0pO3RoaXMuc2VuZCh7dHlwZTpSYi5XU19DT01QUkVTU09SX0lOSVQsZGF0YTphfSwhMCl9Zmlyc3RSZW1vdGVWaWRlb0RlY29kZShlLHQsaSxuKXtjb25zdCByPXRoaXMuYmFzZUluZm9NYXAuZ2V0KGUpO2lmKCFyKXJldHVybjtjb25zdCBvPXIuaW5mbyxzPURhdGUubm93KCksYT1jYihjYihjYih7fSxvKSxuKSx7fSx7ZWxhcHNlOnMtci5zdGFydFRpbWUsZXZlbnRUeXBlOnQsbHRzOnMsZmlyc3REZWNvZGVGcmFtZTpNYXRoLm1heCgobi5maXJzdEZyYW1lfHxzKS1yLnN0YXJ0VGltZSwwKSxhcEVuZDpNYXRoLm1heChuLmFwRW5kLXIuc3RhcnRUaW1lLDApLGFwU3RhcnQ6TWF0aC5tYXgobi5hcFN0YXJ0LXIuc3RhcnRUaW1lLDApLGpvaW5Hd0VuZDpNYXRoLm1heChuLmpvaW5Hd0VuZC1yLnN0YXJ0VGltZSwwKSxqb2luR3dTdGFydDpNYXRoLm1heChuLmpvaW5Hd1N0YXJ0LXIuc3RhcnRUaW1lLDApLHBjRW5kOk1hdGgubWF4KG4ucGNFbmQtci5zdGFydFRpbWUsMCkscGNTdGFydDpNYXRoLm1heChuLnBjU3RhcnQtci5zdGFydFRpbWUsMCksc3Vic2NyaWJlckVuZDpNYXRoLm1heChuLnN1YnNjcmliZXJFbmQtci5zdGFydFRpbWUsMCksc3Vic2NyaWJlclN0YXJ0Ok1hdGgubWF4KG4uc3Vic2NyaWJlclN0YXJ0LXIuc3RhcnRUaW1lLDApLHZpZGVvQWRkTm90aWZ5Ok1hdGgubWF4KG4udmlkZW9BZGROb3RpZnktci5zdGFydFRpbWUsMCl9KTt0aGlzLnNlbmQoe3R5cGU6aSxkYXRhOmF9LCEwKX1maXJzdFJlbW90ZUZyYW1lKGUsdCxpLG4pe2NvbnN0IHI9dGhpcy5iYXNlSW5mb01hcC5nZXQoZSk7aWYoIXIpcmV0dXJuO2NvbnN0IG89ci5pbmZvLHM9RGF0ZS5ub3coKSxhPWNiKGNiKGNiKHt9LG8pLG4pLHt9LHtlbGFwc2U6cy1yLnN0YXJ0VGltZSxldmVudFR5cGU6dCxsdHM6c30pO3RoaXMuc2VuZCh7dHlwZTppLGRhdGE6YX0sITApfXBjU3RhdHMoZSx0KXtjb25zdCBpPXRoaXMuYmFzZUluZm9NYXAuZ2V0KGUpO2lmKCFpKXJldHVybjtjb25zdCBuPWkuaW5mbyxyPURhdGUubm93KCksbz1jYihjYihjYih7fSxuKSx0KSx7fSx7dmlkOnZvaWQgMD09PW4udmlkPzA6TnVtYmVyKG4udmlkKSxlbGFwc2U6ci1pLnN0YXJ0VGltZSxldmVudFR5cGU6Z2IuUENfU1RBVFMsbHRzOnIscHJlYWxsb2NhdGlvbjp0LnByZWFsbG9jYXRpb24/MTowfSk7dGhpcy5zZW5kKHt0eXBlOlJiLlBDX1NUQVRTLGRhdGE6b30sITApfXVwZGF0ZVJlbW90ZVJUUENhcGFiaWxpdGllcyhlLHQpe2lmKGUpe2NvbnN0IGk9dGhpcy5iYXNlSW5mb01hcC5nZXQoZSk7aWYoIWkpcmV0dXJuO2NvbnN0IG49aS5pbmZvLHI9RGF0ZS5ub3coKSxvPWNiKGNiKGNiKHt9LG4pLHQpLHt9LHt2aWQ6dm9pZCAwPT09bi52aWQ/MDpOdW1iZXIobi52aWQpLGV2ZW50VHlwZTpnYi5VUERBVEVfUkVNT1RFX1JUUENBUEFCSUxJVElFUyxsdHM6cn0pO3RoaXMuc2VuZCh7dHlwZTpSYi5VUERBVEVfUkVNT1RFX1JUUENBUEFCSUxJVElFUyxkYXRhOm99LCEwKX19b25HYXRld2F5U3RyZWFtKGUsdCxpLG4pe2NvbnN0IHI9dGhpcy5iYXNlSW5mb01hcC5nZXQoZSk7aWYoIXIpcmV0dXJuO2NvbnN0IG89ci5pbmZvLHM9RGF0ZS5ub3coKSxhPWNiKGNiKGNiKHt9LG8pLG4pLHt9LHtldmVudFR5cGU6dCxsdHM6c30pO3RoaXMuc2VuZCh7dHlwZTppLGRhdGE6YX0sITApfXN0cmVhbVN3aXRjaChlLHQpe2NvbnN0IGk9dGhpcy5iYXNlSW5mb01hcC5nZXQoZSk7aWYoIWkpcmV0dXJuO2NvbnN0IG49aS5pbmZvLHI9RGF0ZS5ub3coKSxvPWNiKGNiKHt9LG4pLHt9LHtldmVudFR5cGU6Z2IuU1RSRUFNX1NXSVRDSCxsdHM6cixpc0R1YWw6dC5pc2R1YWwsZWxhcHNlOnItaS5zdGFydFRpbWUsc3VjY2Vzczp0LnN1Y2N9KTt0aGlzLnNlbmQoe3R5cGU6UmIuU1RSRUFNX1NXSVRDSCxkYXRhOm99LCEwKX1yZXF1ZXN0UHJveHlBcHBDZW50ZXIoZSx0KXtjb25zdCBpPXRoaXMuYmFzZUluZm9NYXAuZ2V0KGUpO2lmKCFpKXJldHVybjtjb25zdCBuPWkuaW5mbyxyPURhdGUubm93KCksbz1jYihjYih7fSxuKSx7fSx7ZXZlbnRUeXBlOmdiLlJFUVVFU1RfUFJPWFlfQVBQQ0VOVEVSLGx0czpyLGV2ZW50RWxhcHNlOnItdC5sdHMsZWxhcHNlOnItaS5zdGFydFRpbWUsQVBBZGRyOnQuQVBBZGRyLHdvcmtlck1hbmFnZXJMaXN0OnQud29ya2VyTWFuYWdlckxpc3QscmVzcG9uc2U6dC5yZXNwb25zZSxlcnJvckNvZGU6dC5lYyxzdWNjZXNzOnQuc3VjY30pO3RoaXMuc2VuZCh7dHlwZTpSYi5SRVFVRVNUX1BST1hZX0FQUENFTlRFUixkYXRhOm99LCEwKX1yZXF1ZXN0UHJveHlXb3JrZXJNYW5hZ2VyKGUsdCl7Y29uc3QgaT10aGlzLmJhc2VJbmZvTWFwLmdldChlKTtpZighaSlyZXR1cm47Y29uc3Qgbj1pLmluZm8scj1EYXRlLm5vdygpLG89Y2IoY2Ioe30sbikse30se2V2ZW50VHlwZTpnYi5SRVFVRVNUX1BST1hZX1dPUktFUl9NQU5BR0VSLGx0czpyLGV2ZW50RWxhcHNlOnItdC5sdHMsZWxhcHNlOnItaS5zdGFydFRpbWUsd29ya2VyTWFuYWdlckFkZHI6dC53b3JrZXJNYW5hZ2VyQWRkcixyZXNwb25zZTp0LnJlc3BvbnNlLGVycm9yQ29kZTp0LmVjLHN1Y2Nlc3M6dC5zdWNjfSk7dGhpcy5zZW5kKHt0eXBlOlJiLlJFUVVFU1RfUFJPWFlfV09SS0VSX01BTkFHRVIsZGF0YTpvfSwhMCl9c2V0UHJveHlTZXJ2ZXIoZSl7dGhpcy5wcm94eVNlcnZlcj1lLGU/ZmIuZGVidWcoXCJyZXBvcnRQcm94eVNlcnZlcnVybDogXCIuY29uY2F0KGUpKTpmYi5kZWJ1ZyhcImRpc2FibGUgcmVwb3J0UHJveHlTZXJ2ZXJ1cmw6IFwiLmNvbmNhdChlKSl9cGVlclB1Ymxpc2hTdGF0dXMoZSx0KXtjb25zdCBpPXRoaXMuYmFzZUluZm9NYXAuZ2V0KGUpO2lmKCFpKXJldHVybjtjb25zdCBuPWkuaW5mbyxyPURhdGUubm93KCksbz1jYihjYih7fSxuKSx7fSx7c3Vic2NyaWJlRWxhcHNlOnQuc3Vic2NyaWJlRWxhcHNlLHBlZXI6dC5wZWVyLHBlZXJQdWJsaXNoRHVyYXRpb246TWF0aC5tYXgodC5hdWRpb1B1Ymxpc2hEdXJhdGlvbix0LnZpZGVvUHVibGlzaER1cmF0aW9uKSxhdWRpb3RhZzp0LmF1ZGlvUHVibGlzaER1cmF0aW9uPjA/MTotMSx2aWRlb3RhZzp0LnZpZGVvUHVibGlzaER1cmF0aW9uPjA/MTotMSxsdHM6cixlbGFwc2U6ci1pLnN0YXJ0VGltZSxqb2luQ2hhbm5lbFN1Y2Nlc3NFbGFwc2U6ci0oaS5sYXN0Sm9pblN1Y2Nlc3NUaW1lfHxyKSxwZWVyUHVibGlzaER1cmF0aW9uVmlkZW86dC52aWRlb1B1Ymxpc2hEdXJhdGlvbixwZWVyUHVibGlzaER1cmF0aW9uQXVkaW86dC5hdWRpb1B1Ymxpc2hEdXJhdGlvbn0pO3RoaXMuc2VuZCh7dHlwZTpSYi5QRUVSX1BVQkxJU0hfU1RBVFVTLGRhdGE6b30sITApfXdvcmtlckV2ZW50KGUsdCl7Y29uc3QgaT10aGlzLmJhc2VJbmZvTWFwLmdldChlKTtpZighaSlyZXR1cm47Y29uc3Qgbj1pLmluZm8scj1EYXRlLm5vdygpOyhmdW5jdGlvbihlLHQsaSl7Y29uc3Qgbj1lW3RdO2lmKCFufHxcInN0cmluZ1wiIT10eXBlb2YgbilyZXR1cm5bZV07ZVt0XT1cIlwiO2NvbnN0IHI9X0EoSlNPTi5zdHJpbmdpZnkoZSkpO2xldCBvPTA7Y29uc3Qgcz1bXTtsZXQgYT0wO2ZvcihsZXQgYz0wO2M8bi5sZW5ndGg7YysrKWErPW4uY2hhckNvZGVBdChjKTw9MTI3PzE6MyxhPD1pLXJ8fChzW3MubGVuZ3RoXT1neShneSh7fSxlKSx7fSx7W3RdOm4uc3Vic3RyaW5nKG8sYyl9KSxvPWMsYT1uLmNoYXJDb2RlQXQoYyk8PTEyNz8xOjMpO3JldHVybiBvIT09bi5sZW5ndGgtMSYmKHNbcy5sZW5ndGhdPWd5KGd5KHt9LGUpLHt9LHtbdF06bi5zdWJzdHJpbmcobyl9KSksc30pKGNiKGNiKGNiKHt9LG4pLHQpLHt9LHtlbGFwc2U6ci1pLnN0YXJ0VGltZSxsdHM6cixwcm9kdWN0VHlwZTpcIldlYlJUQ1wifSksXCJwYXlsb2FkXCIsMTMwMCkuZm9yRWFjaCgoZT0+dGhpcy5zZW5kKHt0eXBlOlJiLldPUktFUl9FVkVOVCxkYXRhOmV9LCEwKSkpfWFwd29ya2VyRXZlbnQoZSx0KXtjb25zdCBpPXRoaXMuYmFzZUluZm9NYXAuZ2V0KGUpO2lmKCFpKXJldHVybjtjb25zdCBuPWkuaW5mbyxyPURhdGUubm93KCksbz1jYihjYihjYih7fSxuKSx0KSx7fSx7ZWxhcHNlOnItaS5zdGFydFRpbWUsbHRzOnJ9KTt0aGlzLnNlbmQoe3R5cGU6UmIuQVBfV09SS0VSX0VWRU5ULGRhdGE6b30sITApfWpvaW5XZWJQcm94eUFQKGUsdCl7Y29uc3QgaT10aGlzLmJhc2VJbmZvTWFwLmdldChlKTtpZighaSlyZXR1cm47Y29uc3Qgbj1pLmluZm8scj1EYXRlLm5vdygpLG89Y2IoY2IoY2Ioe30sbiksdCkse30se2VsYXBzZTpyLWkuc3RhcnRUaW1lLGx0czpyLGV4dGVuZDp0LmV4dGVuZHx8dm9pZCAwfSk7dGhpcy5zZW5kKHt0eXBlOlJiLkpPSU5fV0VCX1BST1hZX0FQLGRhdGE6b30sITApfVdlYlNvY2tldFF1aXQoZSx0KXtjb25zdCBpPXRoaXMuYmFzZUluZm9NYXAuZ2V0KGUpO2lmKCFpKXJldHVybjtjb25zdCBuPWkuaW5mbyxyPURhdGUubm93KCksbz1jYihjYihjYih7fSxuKSx0KSx7fSx7ZWxhcHNlOnItaS5zdGFydFRpbWUsbHRzOnJ9KTt0aGlzLnNlbmQoe3R5cGU6UmIuV0VCU09DS0VUX1FVSVQsZGF0YTpvfSwhMCl9YXN5bmMgc2VuZEN1c3RvbVJlcG9ydE1lc3NhZ2UoZSx0KXtpZih0aGlzLmN1c3RvbVJlcG9ydENvdW50Kz10Lmxlbmd0aCx0aGlzLmN1c3RvbVJlcG9ydENvdW50PlhBKFwiQ1VTVE9NX1JFUE9SVF9MSU1JVFwiKSl0aHJvdyBuZXcgQ3koUnkuQ1VTVE9NX1JFUE9SVF9GUkVRVUVOQ1lfVE9PX0hJR0gpO3RoaXMuY3VzdG9tUmVwb3J0Q291bnRlclRpbWVyfHwodGhpcy5jdXN0b21SZXBvcnRDb3VudGVyVGltZXI9d2luZG93LnNldEludGVydmFsKCgoKT0+e3RoaXMuY3VzdG9tUmVwb3J0Q291bnQ9MH0pLDVlMykpO2NvbnN0IGk9RGF0ZS5ub3coKSxuPXQubWFwKCh0PT4oe3R5cGU6UmIuVVNFUl9BTkFMWVRJQ1MsZGF0YTpjYihjYih7c2lkOmV9LHQpLHt9LHtsdHM6aX0pfSkpKTt0cnl7WEEoXCJORVdfUkVQT1JUX1NFUlZFUlwiKT9hd2FpdCB0aGlzLnBvc3REYXRhVG9TdGF0c0NvbGxlY3RvcjIobik6YXdhaXQgdGhpcy5wb3N0RGF0YVRvU3RhdHNDb2xsZWN0b3Iobil9Y2F0Y2goZSl7dGhyb3cgZmIuZXJyb3IoXCJzZW5kIGN1c3RvbSByZXBvcnQgbWVzc2FnZSBmYWlsZWRcIixlLnRvU3RyaW5nKCkpLG5ldyBDeShSeS5DVVNUT01fUkVQT1JUX1NFTkRfRkFJTEVELGUubWVzc2FnZSl9fXNlbmRBcGlJbnZva2UoZSl7Y29uc3QgdD1YQShcIk5PVF9SRVBPUlRfRVZFTlRcIik7aWYoZS50YWcmJkRuKHQpJiZEbih0KS5jYWxsKHQsZS50YWcpKXJldHVybiExO2lmKG51bGw9PT1lLnNpZClyZXR1cm4gdGhpcy5hcGlJbnZva2VVcGxvYWRQZW5kaW5nSXRlbXMucHVzaChlKSwhMTtjb25zdCBpPXRoaXMuYmFzZUluZm9NYXAuZ2V0KGUuc2lkKTtpZighaSlyZXR1cm4gdGhpcy5hcGlJbnZva2VVcGxvYWRQZW5kaW5nSXRlbXMucHVzaChlKSwhMTtjb25zdHtjbmFtZTpuLHVpZDpyLGNpZDpvfT1pLmluZm87bGV0IHM7aWYoZS5sdHM9ZS5sdHN8fERhdGUubm93KCksZS5lcnJvcilpZihlLmVycm9yIGluc3RhbmNlb2YgQ3kpe2NvbnN0e2NvZGU6dCxtZXNzYWdlOml9PWUuZXJyb3I7cz10fHxpfHxlLmVycm9yLnRvU3RyaW5nKCl9ZWxzZSBzPWUuZXJyb3IudG9TdHJpbmcoKTtjb25zdCBhPXtpbnZva2VJZDplLmludm9rZUlkLHNpZDplLnNpZCxjbmFtZTpuLGNpZDpvLHVpZDpyLGx0czplLmx0cyxzdWNjZXNzOmUuc3VjY2VzcyxlbGFwc2U6ZS5sdHMtaS5zdGFydFRpbWUsZXhlY0VsYXBzZTplLmx0cy1lLmFwaUludm9rZVRpbWUsYXBpTmFtZTplLm5hbWUsb3B0aW9uczplLm9wdGlvbnM/SlNPTi5zdHJpbmdpZnkoZS5vcHRpb25zKTp2b2lkIDAsZXhlY1N0YXRlczplLnN0YXRlcz9KU09OLnN0cmluZ2lmeShlLnN0YXRlcyk6dm9pZCAwLGV4ZWNSZXN1bHQ6ZS5yZXN1bHQ/SlNPTi5zdHJpbmdpZnkoZS5yZXN1bHQpOnZvaWQgMCxlcnJvckNvZGU6ZS5lcnJvcj9zOnZvaWQgMCxlcnJvck1zZzplLmVycm9yP0pTT04uc3RyaW5naWZ5KGUuZXJyb3IpOnZvaWQgMH07cmV0dXJuIHRoaXMuc2VuZCh7dHlwZTpSYi5BUElfSU5WT0tFLGRhdGE6YX0sITEpLCEwfWFkZFNpZChlKXt0aGlzLnNpZHMuYWRkKGUpfXJlbW92ZVNpZChlKXt0aGlzLnNpZHMuZGVsZXRlKGUpfWFwcGVuZFNlc3Npb25JZCgpe2NvbnN0IGU9dGhpcy5hcGlJbnZva2VVcGxvYWRQZW5kaW5nSXRlbXM7aWYoMD09PWUubGVuZ3RoKXJldHVybjtjb25zdCB0PUFycmF5LmZyb20odGhpcy5zaWRzKS5maW5kKChlPT5udWxsIT09ZSkpO3QmJmUuZm9yRWFjaCgoZT0+e2UmJihlLnNpZD10LHRoaXMuc2VuZEFwaUludm9rZShPYmplY3QuYXNzaWduKHt9LGUpKSl9KSksZS5sZW5ndGg9MH1zZW5kKGUsdCl7aWYodClyZXR1cm4gdGhpcy5rZXlFdmVudFVwbG9hZFBlbmRpbmdJdGVtcy5wdXNoKGUpLHZvaWQgdGhpcy5zZW5kSXRlbXModGhpcy5rZXlFdmVudFVwbG9hZFBlbmRpbmdJdGVtcywhMCk7dGhpcy5ub3JtYWxFdmVudFVwbG9hZFBlbmRpbmdJdGVtcy5wdXNoKGUpLHRoaXMubm9ybWFsRXZlbnRVcGxvYWRQZW5kaW5nSXRlbXMubGVuZ3RoPlhBKFwiTk9STUFMX0VWRU5UX1FVRVVFX0NBUEFDSVRZXCIpJiZ0aGlzLm5vcm1hbEV2ZW50VXBsb2FkUGVuZGluZ0l0ZW1zLnNwbGljZSgwLDEpLHRoaXMubm9ybWFsRXZlbnRVcGxvYWRQZW5kaW5nSXRlbXMubGVuZ3RoPj0xMCYmdGhpcy5zZW5kSXRlbXModGhpcy5ub3JtYWxFdmVudFVwbG9hZFBlbmRpbmdJdGVtcywhMSl9ZG9TZW5kKCl7dGhpcy5rZXlFdmVudFVwbG9hZFBlbmRpbmdJdGVtcy5sZW5ndGg+MCYmdGhpcy5zZW5kSXRlbXModGhpcy5rZXlFdmVudFVwbG9hZFBlbmRpbmdJdGVtcywhMCksdGhpcy5ub3JtYWxFdmVudFVwbG9hZFBlbmRpbmdJdGVtcy5sZW5ndGg+MCYmRGF0ZS5ub3coKS10aGlzLmxhc3RTZW5kTm9ybWFsRXZlbnRUaW1lPj01ZTMmJnRoaXMuc2VuZEl0ZW1zKHRoaXMubm9ybWFsRXZlbnRVcGxvYWRQZW5kaW5nSXRlbXMsITEpfXNlbmRJdGVtcyhlLHQpe2NvbnN0IGk9W10sbj1bXTtmb3IoO2UubGVuZ3RoOyl7Y29uc3QgdD1lLnNoaWZ0KCk7aS5sZW5ndGg8MjA/aS5wdXNoKHQpOm4ucHVzaCh0KX1lLnB1c2goLi4ubik7Zm9yKGNvbnN0IGUgb2ZbLi4uaV0pe3ZhciByOy0xIT09dGhpcy5sdHNMaXN0LmluZGV4T2YoZS5kYXRhLmx0cyk/KGUuZGF0YS5sdHM9dGhpcy5sdHNMaXN0W3RoaXMubHRzTGlzdC5sZW5ndGgtMV0rMSx0aGlzLmx0c0xpc3QucHVzaChlLmRhdGEubHRzKSk6KHRoaXMubHRzTGlzdC5wdXNoKGUuZGF0YS5sdHMpLGFFKHI9dGhpcy5sdHNMaXN0KS5jYWxsKHIsKChlLHQpPT5lLXQpKSl9cmV0dXJuIHR8fCh0aGlzLmxhc3RTZW5kTm9ybWFsRXZlbnRUaW1lPURhdGUubm93KCkpLFhBKFwiRU5BQkxFX0VWRU5UX1JFUE9SVFwiKT8oaS5sZW5ndGgmJihYQShcIk5FV19SRVBPUlRfU0VSVkVSXCIpP3RoaXMucG9zdERhdGFUb1N0YXRzQ29sbGVjdG9yMihpKTp0aGlzLnBvc3REYXRhVG9TdGF0c0NvbGxlY3RvcihpKSkuY2F0Y2goKGU9Pmk9PntYQShcIkVWRU5UX1JFUE9SVF9SRVRSWVwiKSYmKHQ/dGhpcy5rZXlFdmVudFVwbG9hZFBlbmRpbmdJdGVtcz10aGlzLmtleUV2ZW50VXBsb2FkUGVuZGluZ0l0ZW1zLmNvbmNhdChlKToodGhpcy5ub3JtYWxFdmVudFVwbG9hZFBlbmRpbmdJdGVtcz10aGlzLm5vcm1hbEV2ZW50VXBsb2FkUGVuZGluZ0l0ZW1zLmNvbmNhdChlKSx0aGlzLm5vcm1hbEV2ZW50VXBsb2FkUGVuZGluZ0l0ZW1zLmxlbmd0aD5YQShcIk5PUk1BTF9FVkVOVF9RVUVVRV9DQVBBQ0lUWVwiKSYmKHRoaXMubm9ybWFsRXZlbnRVcGxvYWRQZW5kaW5nSXRlbXMuc3BsaWNlKDAsdGhpcy5ub3JtYWxFdmVudFVwbG9hZFBlbmRpbmdJdGVtcy5sZW5ndGgtWEEoXCJOT1JNQUxfRVZFTlRfUVVFVUVfQ0FQQUNJVFlcIikpLGZiLndhcm5pbmcoXCJyZXBvcnQ6IGRyb3Agbm9ybWFsIGV2ZW50c1wiKSkpKX0pKGkpKSxlKTplfWFzeW5jIHBvc3REYXRhVG9TdGF0c0NvbGxlY3RvcjIoZSl7aUEubmV0d29ya1N0YXRlPT09WHkuT0ZGTElORSYmYXdhaXQgR2gucmFjZShbaUEub25saW5lV2FpdGVyLG1BKDIqUEEubWF4UmV0cnlUaW1lb3V0KV0pO2NvbnN0IHQ9ZT0+e2xldCB0PW5ldyBVaW50OEFycmF5O3JldHVybiBlLmZvckVhY2goKGU9Pntjb25zdCBpPWt5KEpTT04uc3RyaW5naWZ5KGUuZGF0YSkpLG49bmV3IEFycmF5QnVmZmVyKDUpLHI9KGU9PntsZXQgdD0wO3JldHVybiBPYmplY3QuZW50cmllcyhSYikuZm9yRWFjaCgoaT0+e2xldFtuLHJdPWk7cj09PWUudHlwZSYmKHQ9Q2Jbbl0pfSkpLHR9KShlKSxvPW5ldyBEYXRhVmlldyhuKTtvLnNldFVpbnQxNigwLGkuYnl0ZUxlbmd0aCwhMCksby5zZXRVaW50OCgyLDI1NSZyKSxvLnNldFVpbnQ4KDMscj4+PjgmMjU1KSxvLnNldFVpbnQ4KDQscj4+PjE2JjI1NSksdD1NeSh0LG5ldyBVaW50OEFycmF5KG4pKSx0PU15KHQsaSl9KSksdH0saT1cImV2ZW50XCI7bGV0IG49dGhpcy5wcm94eVNlcnZlcj9cImh0dHBzOi8vXCIuY29uY2F0KHRoaXMucHJveHlTZXJ2ZXIsXCIvcnMvP2g9XCIpLmNvbmNhdChYQShcIk5FV19SRVBPUlRfU0VSVkVSX0RPTUFJTlNcIilbMF0sXCImcD00NDMmZD1cIikuY29uY2F0KGkpOlwiaHR0cHM6Ly9cIi5jb25jYXQoWEEoXCJORVdfUkVQT1JUX1NFUlZFUl9ET01BSU5TXCIpWzBdLFwiL1wiKS5jb25jYXQoaSk7Zm9yKGxldCByPTA7cjwyO3IrPTEpezE9PT1yJiYobj10aGlzLnByb3h5U2VydmVyP1wiaHR0cHM6Ly9cIi5jb25jYXQodGhpcy5wcm94eVNlcnZlcixcIi9ycy8/aD1cIikuY29uY2F0KFhBKFwiTkVXX1JFUE9SVF9TRVJWRVJfRE9NQUlOU1wiKVsxXSxcIiZwPTQ0MyZkPVwiKS5jb25jYXQoaSk6XCJodHRwczovL1wiLmNvbmNhdChYQShcIk5FV19SRVBPUlRfU0VSVkVSX0RPTUFJTlNcIilbMV0sXCIvXCIpLmNvbmNhdChpKSk7dHJ5e2F3YWl0IEZBKG4se3RpbWVvdXQ6MWU0LGRhdGE6dChlKSxoZWFkZXJzOmNiKGNiKHtiaXo6XCJ3ZWJydGNcIixzZW5kdHM6TWF0aC5yb3VuZChEYXRlLm5vdygpLzFlMyksZGVidWc6XCJmYWxzZVwifSx0aGlzLl9hcHBJZCYme2FwcGlkOnRoaXMuX2FwcElkfSkse30se1wiQ29udGVudC1UeXBlXCI6XCJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW1cIn0pfSwhMCl9Y2F0Y2goZSl7aWYoMT09PXIpdGhyb3cgZTtjb250aW51ZX1yZXR1cm59fWFzeW5jIHBvc3REYXRhVG9TdGF0c0NvbGxlY3RvcihlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXSYmYXJndW1lbnRzWzFdO2NvbnN0IGk9e21zZ1R5cGU6XCJFdmVudE1lc3NhZ2VzXCIsc2VudFRzOk1hdGgucm91bmQoRGF0ZS5ub3coKS8xZTMpLHBheWxvYWRzOmUubWFwKChlPT5KU09OLnN0cmluZ2lmeShlKSkpLHZpZDooZT0+e2NvbnN0IHQ9ZSYmZS5kYXRhLnNpZCYmdGhpcy5iYXNlSW5mb01hcC5nZXQoZS5kYXRhLnNpZCk7cmV0dXJuIHQmJnQuaW5mby52aWQmJit0LmluZm8udmlkfHwwfSkoZVswXSl9O2lBLm5ldHdvcmtTdGF0ZT09PVh5Lk9GRkxJTkUmJmF3YWl0IEdoLnJhY2UoW2lBLm9ubGluZVdhaXRlcixtQSgyKlBBLm1heFJldHJ5VGltZW91dCldKTtjb25zdCBuPXQ/XCIvZXZlbnRzL3Byb3RvLXJhd3NcIjpcIi9ldmVudHMvbWVzc2FnZXNcIjtsZXQgcj10aGlzLnVybHx8KHRoaXMucHJveHlTZXJ2ZXI/XCJodHRwczovL1wiLmNvbmNhdCh0aGlzLnByb3h5U2VydmVyLFwiL3JzLz9oPVwiKS5jb25jYXQoWEEoXCJFVkVOVF9SRVBPUlRfRE9NQUlOXCIpLFwiJnA9XCIpLmNvbmNhdChYQShcIlNUQVRTX0NPTExFQ1RPUl9QT1JUXCIpLFwiJmQ9XCIpLmNvbmNhdChuKTpcImh0dHBzOi8vXCIuY29uY2F0KFhBKFwiRVZFTlRfUkVQT1JUX0RPTUFJTlwiKSxcIjpcIikuY29uY2F0KFhBKFwiU1RBVFNfQ09MTEVDVE9SX1BPUlRcIikpLmNvbmNhdChuKSk7Zm9yKGxldCBlPTA7ZTwyO2UrPTEpezE9PT1lJiYocj10aGlzLmJhY2t1cFVybHx8KHRoaXMucHJveHlTZXJ2ZXI/XCJodHRwczovL1wiLmNvbmNhdCh0aGlzLnByb3h5U2VydmVyLFwiL3JzLz9oPVwiKS5jb25jYXQoWEEoXCJFVkVOVF9SRVBPUlRfQkFDS1VQX0RPTUFJTlwiKSxcIiZwPVwiKS5jb25jYXQoWEEoXCJTVEFUU19DT0xMRUNUT1JfUE9SVFwiKSxcIiZkPVwiKS5jb25jYXQobik6XCJodHRwczovL1wiLmNvbmNhdChYQShcIkVWRU5UX1JFUE9SVF9CQUNLVVBfRE9NQUlOXCIpLFwiOlwiKS5jb25jYXQoWEEoXCJTVEFUU19DT0xMRUNUT1JfUE9SVFwiKSkuY29uY2F0KG4pKSk7dHJ5e3Q/YXdhaXQgQkEocix7dGltZW91dDoxZTQsZGF0YTppfSk6YXdhaXQgRkEocix7dGltZW91dDoxZTQsZGF0YTppfSl9Y2F0Y2godCl7aWYoMT09PWUpdGhyb3cgdDtjb250aW51ZX1yZXR1cm59fWNyZWF0ZUJhc2VJbmZvKGUsdCl7Y29uc3QgaT1PYmplY3QuYXNzaWduKHt9LFNiKTtyZXR1cm4gaS5zaWQ9ZSx0aGlzLmJhc2VJbmZvTWFwLnNldChlLHtpbmZvOmksc3RhcnRUaW1lOnR9KSxpfXJlcG9ydFJlc291cmNlVGltaW5nKGUsdCl7Y29uc3QgaT1wZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlOYW1lKGUpLG49aVtpLmxlbmd0aC0xXTtuJiZ0aGlzLnJlcG9ydEFwaUludm9rZSh0LHtuYW1lOlwiQ2xpZW50LnJlc291cmNlVGltaW5nXCIsb3B0aW9uczpuLHRhZzpqeS5UUkFDRVJ9KS5vblN1Y2Nlc3MoKX19O2RiLm9uKFwiUkVQT1JUX0xPR19VUExPQURcIiwoZT0+e2UubmV0d29ya1N0YXRlPWlBLm5ldHdvcmtTdGF0ZSx2Yi5yZXBvcnRBcGlJbnZva2UobnVsbCx7bmFtZTpcImxvZ1VwbG9hZEVycm9yXCIsb3B0aW9uczplLHRhZzpqeS5UUkFDRVJ9KS5vblN1Y2Nlc3MoXCJsb2dVcGxvYWRFcnJvclwiKX0pKTtjbGFzcyB5YiBleHRlbmRzIEN5e2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUsYXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOlwiXCIsYXJndW1lbnRzLmxlbmd0aD4yP2FyZ3VtZW50c1syXTp2b2lkIDApLHNiKHRoaXMsXCJuYW1lXCIsXCJBZ29yYVJUQ0V4Y2VwdGlvblwiKX1wcmludCgpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpcImVycm9yXCI7cmV0dXJuIHN1cGVyLnByaW50KGUsZmIpfXRocm93KCl7c3VwZXIudGhyb3coZmIpfX1jb25zdCBBYj1bXCJDSElOQVwiLFwiR0xPQkFMXCJdO2NvbnN0IGJiPVtbMCwxLDIsMyw0LDUsNV0sWzAsMiwyLDMsNCw1LDVdLFswLDMsMywzLDQsNSw1XSxbMCw0LDQsNCw0LDUsNV0sWzAsNSw1LDUsNSw1LDVdXSx3Yj1bXTtmdW5jdGlvbiBPYihlLHQpe3JldHVybiEhdCYmd2Iuc29tZSgoaT0+aS51aWQ9PT1lJiZpLmNoYW5uZWxOYW1lPT09dCkpfXZhciBOYj1uVC5mb3JFYWNoLERiPUJuKFwiZm9yRWFjaFwiKT9bXS5mb3JFYWNoOmZ1bmN0aW9uKGUpe3JldHVybiBOYih0aGlzLGUsYXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDApfTt3aSh7dGFyZ2V0OlwiQXJyYXlcIixwcm90bzohMCxmb3JjZWQ6W10uZm9yRWFjaCE9RGJ9LHtmb3JFYWNoOkRifSk7dmFyIFBiPVhpKFwiQXJyYXlcIikuZm9yRWFjaCxMYj1wbixrYj1aZSxNYj1sLFViPVBiLHhiPUFycmF5LnByb3RvdHlwZSxWYj17RE9NVG9rZW5MaXN0OiEwLE5vZGVMaXN0OiEwfSxGYj1mdW5jdGlvbihlKXt2YXIgdD1lLmZvckVhY2g7cmV0dXJuIGU9PT14Ynx8TWIoeGIsZSkmJnQ9PT14Yi5mb3JFYWNofHxrYihWYixMYihlKSk/VWI6dH0sQmI9aShGYiksamI9SmUsR2I9ZW87d2koe3RhcmdldDpcIk9iamVjdFwiLHN0YXQ6ITAsZm9yY2VkOm4oKGZ1bmN0aW9uKCl7R2IoMSl9KSl9LHtrZXlzOmZ1bmN0aW9uKGUpe3JldHVybiBHYihqYihlKSl9fSk7dmFyIFdiPWkoaWUuT2JqZWN0LmtleXMpLEhiPWkoem4pLEtiPXdpLFliPW9tLHFiPWQoW10ucmV2ZXJzZSksemI9WzEsMl07S2Ioe3RhcmdldDpcIkFycmF5XCIscHJvdG86ITAsZm9yY2VkOlN0cmluZyh6Yik9PT1TdHJpbmcoemIucmV2ZXJzZSgpKX0se3JldmVyc2U6ZnVuY3Rpb24oKXtyZXR1cm4gWWIodGhpcykmJih0aGlzLmxlbmd0aD10aGlzLmxlbmd0aCkscWIodGhpcyl9fSk7dmFyIEpiPVhpKFwiQXJyYXlcIikucmV2ZXJzZSxYYj1sLFFiPUpiLFpiPUFycmF5LnByb3RvdHlwZSwkYj1mdW5jdGlvbihlKXt2YXIgdD1lLnJldmVyc2U7cmV0dXJuIGU9PT1aYnx8WGIoWmIsZSkmJnQ9PT1aYi5yZXZlcnNlP1FiOnR9LGV3PSRiLHR3PWkoZXcpLGl3PXdpLG53PW9tLHJ3PWpjLG93PXRlLHN3PXhpLGF3PUdpLGN3PVosZHc9RV8sbHc9aHQsdXc9WGMsaHc9bW0oXCJzbGljZVwiKSxwdz1sdyhcInNwZWNpZXNcIiksX3c9QXJyYXksRXc9TWF0aC5tYXg7aXcoe3RhcmdldDpcIkFycmF5XCIscHJvdG86ITAsZm9yY2VkOiFod30se3NsaWNlOmZ1bmN0aW9uKGUsdCl7dmFyIGksbixyLG89Y3codGhpcykscz1hdyhvKSxhPXN3KGUscyksYz1zdyh2b2lkIDA9PT10P3M6dCxzKTtpZihudyhvKSYmKGk9by5jb25zdHJ1Y3RvciwocncoaSkmJihpPT09X3d8fG53KGkucHJvdG90eXBlKSl8fG93KGkpJiZudWxsPT09KGk9aVtwd10pKSYmKGk9dm9pZCAwKSxpPT09X3d8fHZvaWQgMD09PWkpKXJldHVybiB1dyhvLGEsYyk7Zm9yKG49bmV3KHZvaWQgMD09PWk/X3c6aSkoRXcoYy1hLDApKSxyPTA7YTxjO2ErKyxyKyspYSBpbiBvJiZkdyhuLHIsb1thXSk7cmV0dXJuIG4ubGVuZ3RoPXIsbn19KTt2YXIgZnc9WGkoXCJBcnJheVwiKS5zbGljZSxtdz1sLFR3PWZ3LFN3PUFycmF5LnByb3RvdHlwZSxndz1mdW5jdGlvbihlKXt2YXIgdD1lLnNsaWNlO3JldHVybiBlPT09U3d8fG13KFN3LGUpJiZ0PT09U3cuc2xpY2U/VHc6dH0sUnc9aShndyk7ZnVuY3Rpb24gQ3coZSx0LGksbixyKXt2YXIgbyxzLGEsYz17fTtyZXR1cm4gQmIobz1XYihuKSkuY2FsbChvLChmdW5jdGlvbihlKXtjW2VdPW5bZV19KSksYy5lbnVtZXJhYmxlPSEhYy5lbnVtZXJhYmxlLGMuY29uZmlndXJhYmxlPSEhYy5jb25maWd1cmFibGUsKFwidmFsdWVcImluIGN8fGMuaW5pdGlhbGl6ZXIpJiYoYy53cml0YWJsZT0hMCksYz1IYihzPXR3KGE9UncoaSkuY2FsbChpKSkuY2FsbChhKSkuY2FsbChzLChmdW5jdGlvbihpLG4pe3JldHVybiBuKGUsdCxpKXx8aX0pLGMpLHImJnZvaWQgMCE9PWMuaW5pdGlhbGl6ZXImJihjLnZhbHVlPWMuaW5pdGlhbGl6ZXI/Yy5pbml0aWFsaXplci5jYWxsKHIpOnZvaWQgMCxjLmluaXRpYWxpemVyPXZvaWQgMCksdm9pZCAwPT09Yy5pbml0aWFsaXplciYmKG5tKGUsdCxjKSxjPW51bGwpLGN9bGV0IEl3PWZ1bmN0aW9uKGUpe3JldHVybiBlLkwxVDE9XCJMMVQxXCIsZS5MMVQyPVwiTDFUMlwiLGUuTDFUMz1cIkwxVDNcIixlLkwxVDNfS0VZPVwiTDFUM19LRVlcIixlLkwyVDFfS0VZPVwiTDJUMV9LRVlcIixlLkwyVDJfS0VZPVwiTDJUMl9LRVlcIixlLkwyVDNfS0VZPVwiTDJUM19LRVlcIixlLkwzVDFfS0VZPVwiTDNUMV9LRVlcIixlLkwzVDJfS0VZPVwiTDNUMl9LRVlcIixlLkwzVDNfS0VZPVwiTDNUM19LRVlcIixlfSh7fSksdnc9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuQ0VSVElGSUNBVEU9XCJjZXJ0aWZpY2F0ZVwiLGUuQ09ERUM9XCJjb2RlY1wiLGUuQ0FORElEQVRFX1BBSVI9XCJjYW5kaWRhdGUtcGFpclwiLGUuTE9DQUxfQ0FORElEQVRFPVwibG9jYWwtY2FuZGlkYXRlXCIsZS5SRU1PVEVfQ0FORElEQVRFPVwicmVtb3RlLWNhbmRpZGF0ZVwiLGUuSU5CT1VORD1cImluYm91bmQtcnRwXCIsZS5UUkFDSz1cInRyYWNrXCIsZS5PVVRCT1VORD1cIm91dGJvdW5kLXJ0cFwiLGUuUEM9XCJwZWVyLWNvbm5lY3Rpb25cIixlLlJFTU9URV9JTkJPVU5EPVwicmVtb3RlLWluYm91bmQtcnRwXCIsZS5SRU1PVEVfT1VUQk9VTkQ9XCJyZW1vdGUtb3V0Ym91bmQtcnRwXCIsZS5UUkFOU1BPUlQ9XCJ0cmFuc3BvcnRcIixlLkNTUkM9XCJjc3JjXCIsZS5EQVRBX0NIQU5ORUw9XCJkYXRhLWNoYW5uZWxcIixlLlNUUkVBTT1cInN0cmVhbVwiLGUuU0VOREVSPVwic2VuZGVyXCIsZS5SRUNFSVZFUj1cInJlY2VpdmVyXCIsZX0oe30pLHl3PWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuQUNDRVNTX1BPSU5UPTEwMV09XCJBQ0NFU1NfUE9JTlRcIixlW2UuVU5JTEJTPTIwMV09XCJVTklMQlNcIixlW2UuU1RSSU5HX1VJRF9BTExPQ0FUT1I9OTAxXT1cIlNUUklOR19VSURfQUxMT0NBVE9SXCIsZX0oe30pLEF3PWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuSUlJRUdBTF9BUFBJRD0xXT1cIklJSUVHQUxfQVBQSURcIixlW2UuSUlJRUdBTF9VSUQ9Ml09XCJJSUlFR0FMX1VJRFwiLGVbZS5JTlRFUk5BTF9FUlJPUj0zXT1cIklOVEVSTkFMX0VSUk9SXCIsZX0oe30pLGJ3PWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuSU5WQUxJRF9WRU5ET1JfS0VZPTVdPVwiSU5WQUxJRF9WRU5ET1JfS0VZXCIsZVtlLklOVkFMSURfQ0hBTk5FTF9OQU1FPTddPVwiSU5WQUxJRF9DSEFOTkVMX05BTUVcIixlW2UuSU5URVJOQUxfRVJST1I9OF09XCJJTlRFUk5BTF9FUlJPUlwiLGVbZS5OT19BVVRIT1JJWkVEPTldPVwiTk9fQVVUSE9SSVpFRFwiLGVbZS5EWU5BTUlDX0tFWV9USU1FT1VUPTEwXT1cIkRZTkFNSUNfS0VZX1RJTUVPVVRcIixlW2UuTk9fQUNUSVZFX1NUQVRVUz0xMV09XCJOT19BQ1RJVkVfU1RBVFVTXCIsZVtlLkRZTkFNSUNfS0VZX0VYUElSRUQ9MTNdPVwiRFlOQU1JQ19LRVlfRVhQSVJFRFwiLGVbZS5TVEFUSUNfVVNFX0RZTkFNSUNfS0VZPTE0XT1cIlNUQVRJQ19VU0VfRFlOQU1JQ19LRVlcIixlW2UuRFlOQU1JQ19VU0VfU1RBVElDX0tFWT0xNV09XCJEWU5BTUlDX1VTRV9TVEFUSUNfS0VZXCIsZVtlLlVTRVJfT1ZFUkxPQUQ9MTZdPVwiVVNFUl9PVkVSTE9BRFwiLGVbZS5GT1JCSURERU5fUkVHSU9OPTE4XT1cIkZPUkJJRERFTl9SRUdJT05cIixlW2UuQ0FOTk9UX01FRVRfQVJFQV9ERU1BTkQ9MTldPVwiQ0FOTk9UX01FRVRfQVJFQV9ERU1BTkRcIixlfSh7fSksd3c9ZnVuY3Rpb24oZSl7cmV0dXJuIGVbZS5OT19GTEFHX1NFVD0xMDBdPVwiTk9fRkxBR19TRVRcIixlW2UuRkxBR19TRVRfQlVUX0VNUFRZPTEwMV09XCJGTEFHX1NFVF9CVVRfRU1QVFlcIixlW2UuSU5WQUxJRF9GQUxHX1NFVD0xMDJdPVwiSU5WQUxJRF9GQUxHX1NFVFwiLGVbZS5GTEFHX1NFVF9CVVRfTk9fUkU9MTAzXT1cIkZMQUdfU0VUX0JVVF9OT19SRVwiLGVbZS5JTlZBTElEX1NFUlZJQ0VfSUQ9MTA0XT1cIklOVkFMSURfU0VSVklDRV9JRFwiLGVbZS5OT19TRVJWSUNFX0FWQUlMQUJMRT0yMDBdPVwiTk9fU0VSVklDRV9BVkFJTEFCTEVcIixlW2UuTk9fU0VSVklDRV9BVkFJTEFCTEVfUDJQPTIwMV09XCJOT19TRVJWSUNFX0FWQUlMQUJMRV9QMlBcIixlW2UuTk9fU0VSVklDRV9BVkFJTEFCTEVfVk9JQ0U9MjAyXT1cIk5PX1NFUlZJQ0VfQVZBSUxBQkxFX1ZPSUNFXCIsZVtlLk5PX1NFUlZJQ0VfQVZBSUxBQkxFX1dFQlJUQz0yMDNdPVwiTk9fU0VSVklDRV9BVkFJTEFCTEVfV0VCUlRDXCIsZVtlLk5PX1NFUlZJQ0VfQVZBSUxBQkxFX0NEUz0yMDRdPVwiTk9fU0VSVklDRV9BVkFJTEFCTEVfQ0RTXCIsZVtlLk5PX1NFUlZJQ0VfQVZBSUxBQkxFX0NETj0yMDVdPVwiTk9fU0VSVklDRV9BVkFJTEFCTEVfQ0ROXCIsZVtlLk5PX1NFUlZJQ0VfQVZBSUxBQkxFX1REUz0yMDZdPVwiTk9fU0VSVklDRV9BVkFJTEFCTEVfVERTXCIsZVtlLk5PX1NFUlZJQ0VfQVZBSUxBQkxFX1JFUE9SVD0yMDddPVwiTk9fU0VSVklDRV9BVkFJTEFCTEVfUkVQT1JUXCIsZVtlLk5PX1NFUlZJQ0VfQVZBSUxBQkxFX0FQUF9DRU5URVI9MjA4XT1cIk5PX1NFUlZJQ0VfQVZBSUxBQkxFX0FQUF9DRU5URVJcIixlW2UuTk9fU0VSVklDRV9BVkFJTEFCTEVfRU5WMD0yMDldPVwiTk9fU0VSVklDRV9BVkFJTEFCTEVfRU5WMFwiLGVbZS5OT19TRVJWSUNFX0FWQUlMQUJMRV9WT0VUPTIxMF09XCJOT19TRVJWSUNFX0FWQUlMQUJMRV9WT0VUXCIsZVtlLk5PX1NFUlZJQ0VfQVZBSUxBQkxFX1NUUklOR19VSUQ9MjExXT1cIk5PX1NFUlZJQ0VfQVZBSUxBQkxFX1NUUklOR19VSURcIixlW2UuTk9fU0VSVklDRV9BVkFJTEFCTEVfV0VCUlRDX1VOSUxCUz0yMTJdPVwiTk9fU0VSVklDRV9BVkFJTEFCTEVfV0VCUlRDX1VOSUxCU1wiLGVbZS5OT19TRVJWSUNFX0FWQUlMQUJMRV9VTklMQlNfRkxWPTIxM109XCJOT19TRVJWSUNFX0FWQUlMQUJMRV9VTklMQlNfRkxWXCIsZX0oe30pLE93PWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuS19USU1FU1RBTVBfRVhQSVJFRD0yXT1cIktfVElNRVNUQU1QX0VYUElSRURcIixlW2UuS19DSEFOTkVMX1BFUk1JU1NJT05fSU5WQUxJRD0zXT1cIktfQ0hBTk5FTF9QRVJNSVNTSU9OX0lOVkFMSURcIixlW2UuS19DRVJUSUZJQ0FURV9JTlZBTElEPTRdPVwiS19DRVJUSUZJQ0FURV9JTlZBTElEXCIsZVtlLktfQ0hBTk5FTF9OQU1FX0VNUFRZPTVdPVwiS19DSEFOTkVMX05BTUVfRU1QVFlcIixlW2UuS19DSEFOTkVMX05PVF9GT1VORD02XT1cIktfQ0hBTk5FTF9OT1RfRk9VTkRcIixlW2UuS19USUNLRVRfSU5WQUxJRD03XT1cIktfVElDS0VUX0lOVkFMSURcIixlW2UuS19DSEFOTkVMX0NPTkZMSUNURUQ9OF09XCJLX0NIQU5ORUxfQ09ORkxJQ1RFRFwiLGVbZS5LX1NFUlZJQ0VfTk9UX1JFQURZPTldPVwiS19TRVJWSUNFX05PVF9SRUFEWVwiLGVbZS5LX1NFUlZJQ0VfVE9PX0hFQVZZPTEwXT1cIktfU0VSVklDRV9UT09fSEVBVllcIixlW2UuS19VSURfQkFOTkVEPTE0XT1cIktfVUlEX0JBTk5FRFwiLGVbZS5LX0lQX0JBTk5FRD0xNV09XCJLX0lQX0JBTk5FRFwiLGVbZS5LX0NIQU5ORUxfQkFOTkVEPTE2XT1cIktfQ0hBTk5FTF9CQU5ORURcIixlW2UuS19BVVRPX1JFQkFMQU5DRT0yOF09XCJLX0FVVE9fUkVCQUxBTkNFXCIsZVtlLldBUk5fTk9fQVZBSUxBQkxFX0NIQU5ORUw9MTAzXT1cIldBUk5fTk9fQVZBSUxBQkxFX0NIQU5ORUxcIixlW2UuV0FSTl9MT09LVVBfQ0hBTk5FTF9USU1FT1VUPTEwNF09XCJXQVJOX0xPT0tVUF9DSEFOTkVMX1RJTUVPVVRcIixlW2UuV0FSTl9MT09LVVBfQ0hBTk5FTF9SRUpFQ1RFRD0xMDVdPVwiV0FSTl9MT09LVVBfQ0hBTk5FTF9SRUpFQ1RFRFwiLGVbZS5XQVJOX09QRU5fQ0hBTk5FTF9USU1FT1VUPTEwNl09XCJXQVJOX09QRU5fQ0hBTk5FTF9USU1FT1VUXCIsZVtlLldBUk5fT1BFTl9DSEFOTkVMX1JFSkVDVEVEPTEwN109XCJXQVJOX09QRU5fQ0hBTk5FTF9SRUpFQ1RFRFwiLGVbZS5XQVJOX1JFUVVFU1RfREVGRVJSRUQ9MTA4XT1cIldBUk5fUkVRVUVTVF9ERUZFUlJFRFwiLGVbZS5FUlJfRFlOQU1JQ19LRVlfVElNRU9VVD0xMDldPVwiRVJSX0RZTkFNSUNfS0VZX1RJTUVPVVRcIixlW2UuRVJSX05PX0FVVEhPUklaRUQ9MTEwXT1cIkVSUl9OT19BVVRIT1JJWkVEXCIsZVtlLkVSUl9WT01fU0VSVklDRV9VTkFWQUlMQUJMRT0xMTFdPVwiRVJSX1ZPTV9TRVJWSUNFX1VOQVZBSUxBQkxFXCIsZVtlLkVSUl9OT19DSEFOTkVMX0FWQUlMQUJMRV9DT0RFPTExMl09XCJFUlJfTk9fQ0hBTk5FTF9BVkFJTEFCTEVfQ09ERVwiLGVbZS5FUlJfTUFTVEVSX1ZPQ1NfVU5BVkFJTEFCTEU9MTE0XT1cIkVSUl9NQVNURVJfVk9DU19VTkFWQUlMQUJMRVwiLGVbZS5FUlJfSU5URVJOQUxfRVJST1I9MTE1XT1cIkVSUl9JTlRFUk5BTF9FUlJPUlwiLGVbZS5FUlJfTk9fQUNUSVZFX1NUQVRVUz0xMTZdPVwiRVJSX05PX0FDVElWRV9TVEFUVVNcIixlW2UuRVJSX0lOVkFMSURfVUlEPTExN109XCJFUlJfSU5WQUxJRF9VSURcIixlW2UuRVJSX0RZTkFNSUNfS0VZX0VYUElSRUQ9MTE4XT1cIkVSUl9EWU5BTUlDX0tFWV9FWFBJUkVEXCIsZVtlLkVSUl9TVEFUSUNfVVNFX0RZQU5NSUNfS0U9MTE5XT1cIkVSUl9TVEFUSUNfVVNFX0RZQU5NSUNfS0VcIixlW2UuRVJSX0RZTkFNSUNfVVNFX1NUQVRJQ19LRT0xMjBdPVwiRVJSX0RZTkFNSUNfVVNFX1NUQVRJQ19LRVwiLGVbZS5FUlJfTk9fVk9DU19BVkFJTEFCTEU9MmUzXT1cIkVSUl9OT19WT0NTX0FWQUlMQUJMRVwiLGVbZS5FUlJfTk9fVk9TX0FWQUlMQUJMRT0yMDAxXT1cIkVSUl9OT19WT1NfQVZBSUxBQkxFXCIsZVtlLkVSUl9KT0lOX0NIQU5ORUxfVElNRU9VVD0yMDAyXT1cIkVSUl9KT0lOX0NIQU5ORUxfVElNRU9VVFwiLGVbZS5FUlJfUkVQRUFUX0pPSU5fQ0hBTk5FTD0yMDAzXT1cIkVSUl9SRVBFQVRfSk9JTl9DSEFOTkVMXCIsZVtlLkVSUl9KT0lOX0JZX01VTFRJX0lQPTIwMDRdPVwiRVJSX0pPSU5fQllfTVVMVElfSVBcIixlW2UuRVJSX05PVF9KT0lORUQ9MjAxMV09XCJFUlJfTk9UX0pPSU5FRFwiLGVbZS5FUlJfUkVQRUFUX0pPSU5fUkVRVUVTVD0yMDEyXT1cIkVSUl9SRVBFQVRfSk9JTl9SRVFVRVNUXCIsZVtlLkVSUl9JTlZBTElEX1ZFTkRPUl9LRVk9MjAxM109XCJFUlJfSU5WQUxJRF9WRU5ET1JfS0VZXCIsZVtlLkVSUl9JTlZBTElEX0NIQU5ORUxfTkFNRT0yMDE0XT1cIkVSUl9JTlZBTElEX0NIQU5ORUxfTkFNRVwiLGVbZS5FUlJfSU5WQUxJRF9TVFJJTkdVSUQ9MjAxNV09XCJFUlJfSU5WQUxJRF9TVFJJTkdVSURcIixlW2UuRVJSX1RPT19NQU5ZX1VTRVJTPTIwMTZdPVwiRVJSX1RPT19NQU5ZX1VTRVJTXCIsZVtlLkVSUl9TRVRfQ0xJRU5UX1JPTEVfVElNRU9VVD0yMDE3XT1cIkVSUl9TRVRfQ0xJRU5UX1JPTEVfVElNRU9VVFwiLGVbZS5FUlJfU0VUX0NMSUVOVF9ST0xFX05PX1BFUk1JU1NJT049MjAxOF09XCJFUlJfU0VUX0NMSUVOVF9ST0xFX05PX1BFUk1JU1NJT05cIixlW2UuRVJSX1NFVF9DTElFTlRfUk9MRV9BTFJFQURZX0lOX1VTRT0yMDE5XT1cIkVSUl9TRVRfQ0xJRU5UX1JPTEVfQUxSRUFEWV9JTl9VU0VcIixlW2UuRVJSX1BVQkxJU0hfUkVRVUVTVF9JTlZBTElEPTIwMjBdPVwiRVJSX1BVQkxJU0hfUkVRVUVTVF9JTlZBTElEXCIsZVtlLkVSUl9TVUJTQ1JJQkVfUkVRVUVTVF9JTlZBTElEPTIwMjFdPVwiRVJSX1NVQlNDUklCRV9SRVFVRVNUX0lOVkFMSURcIixlW2UuRVJSX05PVF9TVVBQT1JURURfTUVTU0FHRT0yMDIyXT1cIkVSUl9OT1RfU1VQUE9SVEVEX01FU1NBR0VcIixlW2UuRVJSX0lMTEVBR0FMX1BMVUdJTj0yMDIzXT1cIkVSUl9JTExFQUdBTF9QTFVHSU5cIixlW2UuRVJSX1JFSk9JTl9UT0tFTl9JTlZBTElEPTIwMjRdPVwiRVJSX1JFSk9JTl9UT0tFTl9JTlZBTElEXCIsZVtlLkVSUl9SRUpPSU5fVVNFUl9OT1RfSk9JTkVEPTIwMjVdPVwiRVJSX1JFSk9JTl9VU0VSX05PVF9KT0lORURcIixlW2UuRVJSX0lOVkFMSURfT1BUSU9OQUxfSU5GTz0yMDI3XT1cIkVSUl9JTlZBTElEX09QVElPTkFMX0lORk9cIixlW2UuSUxMRUdBTF9BRVNfUEFTU1dPUkQ9MjAyOF09XCJJTExFR0FMX0FFU19QQVNTV09SRFwiLGVbZS5JTExFR0FMX0NMSUVOVF9ST0xFX0xFVkVMPTIwMjldPVwiSUxMRUdBTF9DTElFTlRfUk9MRV9MRVZFTFwiLGVbZS5FUlJfVE9PX01BTllfQlJPQURDQVNURVJTPTIwMzFdPVwiRVJSX1RPT19NQU5ZX0JST0FEQ0FTVEVSU1wiLGVbZS5FUlJfVE9PX01BTllfU1VCU0NSSUJFUlM9MjAzMl09XCJFUlJfVE9PX01BTllfU1VCU0NSSUJFUlNcIixlW2UuRVJSX0xJQ0VOU0VfTUlTU0lORz0zMjc2OV09XCJFUlJfTElDRU5TRV9NSVNTSU5HXCIsZVtlLkVSUl9MSUNFTlNFX0VYUElSRUQ9MzI3NzFdPVwiRVJSX0xJQ0VOU0VfRVhQSVJFRFwiLGVbZS5FUlJfTElDRU5TRV9NSU5VVEVTX0VYQ0VFREVEPTMyNzczXT1cIkVSUl9MSUNFTlNFX01JTlVURVNfRVhDRUVERURcIixlW2UuRVJSX0xJQ0VOU0VfUEVSSU9EX0lOVkFMSUQ9MzI3NzRdPVwiRVJSX0xJQ0VOU0VfUEVSSU9EX0lOVkFMSURcIixlW2UuRVJSX0xJQ0VOU0VfTVVMVElQTEVfU0RLX1NFUlZJQ0U9MzI3NzhdPVwiRVJSX0xJQ0VOU0VfTVVMVElQTEVfU0RLX1NFUlZJQ0VcIixlW2UuRVJSX0xJQ0VOU0VfSUxMRUdBTD0zMjc4M109XCJFUlJfTElDRU5TRV9JTExFR0FMXCIsZVtlLkVSUl9URVNUX1JFQ09WRVI9OWUzXT1cIkVSUl9URVNUX1JFQ09WRVJcIixlW2UuRVJSX1RFU1RfVFJZTkVYVD05MDAxXT1cIkVSUl9URVNUX1RSWU5FWFRcIixlW2UuRVJSX1RFU1RfUkVUUlk9OTAwMl09XCJFUlJfVEVTVF9SRVRSWVwiLGV9KHt9KSxOdz1mdW5jdGlvbihlKXtyZXR1cm4gZS5DT05ORUNUSU5HPVwiY29ubmVjdGluZ1wiLGUuQ09OTkVDVEVEPVwiY29ubmVjdGVkXCIsZS5SRUNPTk5FQ1RJTkc9XCJyZWNvbm5lY3RpbmdcIixlLkNMT1NFRD1cImNsb3NlZFwiLGV9KHt9KSxEdz1mdW5jdGlvbihlKXtyZXR1cm4gZS5XU19DT05ORUNURUQ9XCJ3c19jb25uZWN0ZWRcIixlLldTX1JFQ09OTkVDVElORz1cIndzX3JlY29ubmVjdGluZ1wiLGUuV1NfQ0xPU0VEPVwid3NfY2xvc2VkXCIsZS5XU19SRUNPTk5FQ1RfV0FJVFRJTkdfRklOSVNIPVwid3NfcmVjb25uZWN0X3dhaXR0aW5nX2ZpbmlzaFwiLGUuV1NfUkVDT05ORUNUX0NSRUFURV9DT05ORUNUSU9OPVwid3NfcmVjb25uZWN0X2NyZWF0ZV9jb25uZWN0aW9uXCIsZS5PTl9CSU5BUllfREFUQT1cIm9uX2JpbmFyeV9kYXRhXCIsZS5SRVFVRVNUX1JFQ09WRVI9XCJyZXF1ZXN0X3JlY292ZXJcIixlLlJFUVVFU1RfSk9JTl9JTkZPPVwicmVxdWVzdF9qb2luX2luZm9cIixlLlJFUVVFU1RfUkVKT0lOX0lORk89XCJyZXFfcmVqb2luX2luZm9cIixlLklTX1AyUF9ESVNDT05ORUNURUQ9XCJpc19wMnBfZGlzXCIsZS5ESVNDT05ORUNUX1AyUD1cImRpc19wMnBcIixlLkFCT1JUX1AyUF9FWEVDVVRJT049XCJhYm9ydF9wMnBfZXhlY3V0aW9uXCIsZS5ORUVEX1JFTkVXX1NFU1NJT049XCJuZWVkLXNpZFwiLGUuUkVQT1JUX0pPSU5fR0FURVdBWT1cInJlcG9ydF9qb2luX2dhdGV3YXlcIixlLlJFUVVFU1RfVElNRU9VVD1cInJlcXVlc3RfdGltZW91dFwiLGUuUkVRVUVTVF9TVUNDRVNTPVwicmVxdWVzdF9zdWNjZXNzXCIsZS5KT0lOX1JFU1BPTlNFPVwiam9pbl9yZXNwb25zZVwiLGUuUFJFX0NPTk5FQ1RfUEM9XCJwcmVfY29ubmVjdF9wY1wiLGUuUDJQX0NPTk5FQ1RJT049XCJwMnBfY29ubmVjdGlvblwiLGUuUDJQX1JFTU9URV9DQU5ESURBVEVfVVBEQVRFPVwicDJwX3JlbW90ZV9jYW5kaWRhdGVfdXBkYXRlXCIsZS5QMlBfU1VCU0NSSUJFPVwicDJwX3N1YnNjcmliZVwiLGUuUDJQX1VOU1VCU0NSSUJFPVwicDJwX3Vuc3Vic2NyaWJlXCIsZS5QMlBfRVhDSEFOR0VfU0RQPVwicDJwX2V4Y2hhbmdlX3NkcFwiLGUuUDJQX09OX0FERF9WSURFT19TVFJFQU09XCJwMnBfb25fYWRkX3ZpZGVvX3N0cmVhbVwiLGUuUDJQX09OX0FERF9BVURJT19TVFJFQU09XCJwMnBfb25fYWRkX2F1ZGlvX3N0cmVhbVwiLGUuUkVDT1ZFUl9OT1RJRklDQVRJT049XCJyZWNvdmVyX25vdGlmaWNhdGlvblwiLGV9KHt9KSxQdz1mdW5jdGlvbihlKXtyZXR1cm4gZS5QSU5HPVwicGluZ1wiLGUuUElOR19CQUNLPVwicGluZ19iYWNrXCIsZS5KT0lOPVwiam9pbl92M1wiLGUuUkVKT0lOPVwicmVqb2luX3YzXCIsZS5MRUFWRT1cImxlYXZlXCIsZS5TRVRfQ0xJRU5UX1JPTEU9XCJzZXRfY2xpZW50X3JvbGVcIixlLlBVQkxJU0g9XCJwdWJsaXNoXCIsZS5QVUJMSVNIX0RBVEFTVFJFQU09XCJwdWJsaXNoX2RhdGFzdHJlYW1cIixlLlVOUFVCTElTSD1cInVucHVibGlzaFwiLGUuVU5QVUJMSVNIX0RBVEFTVFJFQU09XCJ1bnB1Ymxpc2hfZGF0YXN0cmVhbVwiLGUuU1VCU0NSSUJFPVwic3Vic2NyaWJlXCIsZS5QUkVfU1VCU0NSSUJFPVwicHJlX3N1YnNjcmliZVwiLGUuU1VCU0NSSUJFX0RBVEFTVFJFQU09XCJzdWJzY3JpYmVfZGF0YXN0cmVhbVwiLGUuU1VCU0NSSUJFX1NUUkVBTVM9XCJzdWJzY3JpYmVfc3RyZWFtc1wiLGUuVU5TVUJTQ1JJQkU9XCJ1bnN1YnNjcmliZVwiLGUuVU5TVUJTQ1JJQkVfREFUQVNUUkVBTT1cInVuc3Vic2NyaWJlX2RhdGFzdHJlYW1cIixlLlVOU1VCU0NSSUJFX1NUUkVBTVM9XCJ1bnN1YnNjcmliZV9zdHJlYW1zXCIsZS5TVUJTQ1JJQkVfQ0hBTkdFPVwic3Vic2NyaWJlX2NoYW5nZVwiLGUuVFJBRkZJQ19TVEFUUz1cInRyYWZmaWNfc3RhdHNcIixlLlJFTkVXX1RPS0VOPVwicmVuZXdfdG9rZW5cIixlLlNXSVRDSF9WSURFT19TVFJFQU09XCJzd2l0Y2hfdmlkZW9fc3RyZWFtXCIsZS5ERUZBVUxUX1ZJREVPX1NUUkVBTT1cImRlZmF1bHRfdmlkZW9fc3RyZWFtXCIsZS5TRVRfRkFMTEJBQ0tfT1BUSU9OPVwic2V0X2ZhbGxiYWNrX29wdGlvblwiLGUuR0FURVdBWV9JTkZPPVwiZ2F0ZXdheV9pbmZvXCIsZS5DT05UUk9MPVwiY29udHJvbFwiLGUuU0VORF9NRVRBREFUQT1cInNlbmRfbWV0YWRhdGFcIixlLkRBVEFfU1RSRUFNPVwiZGF0YV9zdHJlYW1cIixlLlBJQ0tfU1ZDX0xBWUVSPVwicGlja19zdmNfbGF5ZXJcIixlLlJFU1RBUlRfSUNFPVwicmVzdGFydF9pY2VcIixlLkNPTk5FQ1RfUEM9XCJjb25uZWN0X3BjXCIsZS5TRVRfVklERU9fUFJPRklMRT1cInNldF92aWRlb19wcm9maWxlXCIsZS5TRVRfUEFSQU1FVEVSPVwic2V0X3BhcmFtZXRlclwiLGUuU0VUX1JUTTJfRkxBRz1cInNldF9ydG0yX2ZsYWdcIixlfSh7fSksTHc9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuV1JUQ19TVEFUUz1cIndydGNfc3RhdHNcIixlLldTX0lORkxBVEVfREFUQV9MRU5HVEg9XCJ3c19pbmZsYXRlX2RhdGFfbGVuZ3RoXCIsZS5ERU5PSVNFUl9TVEFUUz1cImRlbm9pc2VyX3N0YXRzXCIsZS5FWFRFTlNJT05fVVNBR0VfU1RBVFM9XCJleHRlbnNpb25fdXNhZ2Vfc3RhdHNcIixlfSh7fSksa3c9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuT05fVVNFUl9PTkxJTkU9XCJvbl91c2VyX29ubGluZVwiLGUuT05fVVNFUl9PRkZMSU5FPVwib25fdXNlcl9vZmZsaW5lXCIsZS5PTl9TVFJFQU1fRkFMTEJBQ0tfVVBEQVRFPVwib25fc3RyZWFtX2ZhbGxiYWNrX3VwZGF0ZVwiLGUuT05fUFVCTElTSF9TVFJFQU09XCJvbl9wdWJsaXNoX3N0cmVhbVwiLGUuT05fVVBMSU5LX1NUQVRTPVwib25fdXBsaW5rX3N0YXRzXCIsZS5PTl9QMlBfTE9TVD1cIm9uX3AycF9sb3N0XCIsZS5PTl9SRU1PVkVfU1RSRUFNPVwib25fcmVtb3ZlX3N0cmVhbVwiLGUuT05fQUREX0FVRElPX1NUUkVBTT1cIm9uX2FkZF9hdWRpb19zdHJlYW1cIixlLk9OX0FERF9WSURFT19TVFJFQU09XCJvbl9hZGRfdmlkZW9fc3RyZWFtXCIsZS5PTl9UT0tFTl9QUklWSUxFR0VfV0lMTF9FWFBJUkU9XCJvbl90b2tlbl9wcml2aWxlZ2Vfd2lsbF9leHBpcmVcIixlLk9OX1RPS0VOX1BSSVZJTEVHRV9ESURfRVhQSVJFPVwib25fdG9rZW5fcHJpdmlsZWdlX2RpZF9leHBpcmVcIixlLk9OX1VTRVJfQkFOTkVEPVwib25fdXNlcl9iYW5uZWRcIixlLk9OX1VTRVJfTElDRU5TRV9CQU5ORUQ9XCJvbl91c2VyX2xpY2Vuc2VfYmFubmVkXCIsZS5PTl9OT1RJRklDQVRJT049XCJvbl9ub3RpZmljYXRpb25cIixlLk9OX0NSWVBUX0VSUk9SPVwib25fY3J5cHRfZXJyb3JcIixlLk1VVEVfQVVESU89XCJtdXRlX2F1ZGlvXCIsZS5NVVRFX1ZJREVPPVwibXV0ZV92aWRlb1wiLGUuVU5NVVRFX0FVRElPPVwidW5tdXRlX2F1ZGlvXCIsZS5VTk1VVEVfVklERU89XCJ1bm11dGVfdmlkZW9cIixlLk9OX1AyUF9PSz1cIm9uX3AycF9va1wiLGUuUkVDRUlWRV9NRVRBREFUQT1cInJlY2VpdmVfbWV0YWRhdGFcIixlLk9OX0RBVEFfU1RSRUFNPVwib25fZGF0YV9zdHJlYW1cIixlLk9OX1JUUF9DQVBBQklMSVRZX0NIQU5HRT1cIm9uX3J0cF9jYXBhYmlsaXR5X2NoYW5nZVwiLGUuT05fUkVNT1RFX0RBVEFTVFJFQU1fVVBEQVRFPVwib25fcmVtb3RlX2RhdGFzdHJlYW1fdXBkYXRlXCIsZS5PTl9SRU1PVEVfRlVMTF9EQVRBU1RSRUFNX0lORk89XCJvbl9yZW1vdGVfZnVsbF9kYXRhc3RyZWFtX2luZm9cIixlLkVOQUJMRV9MT0NBTF9WSURFTz1cImVuYWJsZV9sb2NhbF92aWRlb1wiLGUuRElTQUJMRV9MT0NBTF9WSURFTz1cImRpc2FibGVfbG9jYWxfdmlkZW9cIixlLkVOQUJMRV9MT0NBTF9BVURJTz1cImVuYWJsZV9sb2NhbF9hdWRpb1wiLGUuRElTQUJMRV9MT0NBTF9BVURJTz1cImRpc2FibGVfbG9jYWxfYXVkaW9cIixlLk9OX1BVQkxJU0hFRF9VU0VSX0xJU1Q9XCJvbl9wdWJsaXNoZWRfdXNlcl9saXN0XCIsZX0oe30pLE13PWZ1bmN0aW9uKGUpe3JldHVybiBlLlNFTkRfT05MWT1cIlNFTkRfT05MWVwiLGUuUkVDRUlWRV9PTkxZPVwiUkVDRUlWRV9PTkxZXCIsZX0oe30pLFV3PWZ1bmN0aW9uKGUpe3JldHVybiBlLkNPTk5FQ1RFRD1cIndlYnNvY2tldDpjb25uZWN0ZWRcIixlLlJFQ09OTkVDVElORz1cIndlYnNvY2tldDpyZWNvbm5lY3RpbmdcIixlLldJTExfUkVDT05ORUNUPVwid2Vic29ja2V0OndpbGxfcmVjb25uZWN0XCIsZS5DTE9TRUQ9XCJ3ZWJzb2NrZXQ6Y2xvc2VkXCIsZS5GQUlMRUQ9XCJ3ZWJzb2NrZXQ6ZmFpbGVkXCIsZS5PTl9NRVNTQUdFPVwid2Vic29ja2V0Om9uX21lc3NhZ2VcIixlLlJFUVVFU1RfTkVXX1VSTFM9XCJ3ZWJzb2NrZXQ6cmVxdWVzdF9uZXdfdXJsc1wiLGUuUkVDT05ORUNUX1dBSVRUSU5HX0ZJTklTSD1cIndlYnNvY2tldDpyZWNvbm5lY3Rfd2FpdHRpbmdfZmluaXNoXCIsZS5SRUNPTk5FQ1RfQ1JFQVRFX0NPTk5FQ1RJT049XCJ3ZWJzb2NrZXQ6cmVjb25uZWN0X2NyZWF0ZV9jb25uZWN0aW9uXCIsZS5PTl9UT0tFTl9QUklWSUxFR0VfRElEX0VYUElSRT1cIndlYnNvY2tldDpvbl90b2tlbl9wcml2aWxlZ2VfZGlkX2V4cGlyZVwiLGV9KHt9KTtmdW5jdGlvbiB4dyhlKXtpZihcInN0cmluZ1wiIT10eXBlb2YgZXx8IS9eW2EtekEtWjAtOSBcXCFcXCNcXCRcXCVcXCZcXChcXClcXCtcXC1cXDpcXDtcXDxcXD1cXC5cXD5cXD9cXEBcXFtcXF1cXF5cXF9cXHtcXH1cXHxcXH5cXCxdezEsNjR9JC8udGVzdChlKSl0aHJvdyBmYi5lcnJvcihcIkludmFsaWQgQ2hhbm5lbCBOYW1lIFwiLmNvbmNhdChlKSksbmV3IHliKFJ5LklOVkFMSURfUEFSQU1TLFwiVGhlIGxlbmd0aCBtdXN0IGJlIHdpdGhpbiA2NCBieXRlcy4gVGhlIHN1cHBvcnRlZCBjaGFyYWN0ZXJzOiBhLXosQS1aLDAtOSxzcGFjZSwhLCAjLCAkLCAlLCAmLCAoLCApLCArLCAtLCA6LCA7LCA8LCA9LCAuLCA+LCA/LCBALCBbLCBdLCBeLCBfLCAgeywgfSwgfCwgfiwgLFwiKX1mdW5jdGlvbiBWdyhlKXtpZighZnVuY3Rpb24oZSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGUmJk1hdGguZmxvb3IoZSk9PT1lJiYwPD1lJiZlPD00Mjk0OTY3Mjk1fShlKSYmIU55KGUsMSwyNTUpKXRocm93IG5ldyB5YihSeS5JTlZBTElEX1BBUkFNUyxcIltTdHJpbmcgdWlkXSBMZW5ndGggb2YgdGhlIHN0cmluZzogWzEsMjU1XS4gQVNDSUkgY2hhcmFjdGVycyBvbmx5LiBbTnVtYmVyIHVpZF0gVGhlIHZhbHVlIHJhbmdlIGlzIFswLDEwMDAwXVwiKTtcInN0cmluZ1wiPT10eXBlb2YgZSYmZmIud2FybihcIllvdSBpbnB1dCBhIHN0cmluZyBhcyB0aGUgdXNlciBJRCwgdG8gZW5zdXJlIGJldHRlciBlbmQtdXNlciBleHBlcmllbmNlLCBBZ29yYSBoaWdobHkgc3VnZ2VzdHMgbm90IHVzaW5nIGEgc3RyaW5nIGFzIHRoZSB1c2VyIElELlwiKX1sZXQgRnc9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuVFJBTlNDT0RFPVwibWl4X3N0cmVhbWluZ1wiLGUuUkFXPVwicmF3X3N0cmVhbWluZ1wiLGV9KHt9KTtjb25zdCBCdz17YWxwaGE6MSxoZWlnaHQ6NjQwLHdpZHRoOjM2MCx4OjAseTowLHpPcmRlcjowLGF1ZGlvQ2hhbm5lbDowfSxqdz17eDowLHk6MCx3aWR0aDoxNjAsaGVpZ2h0OjE2MCx6T3JkZXI6MjU1LGFscGhhOjF9O2Z1bmN0aW9uIEd3KGUsdCl7YnkoZS51cmwsXCJcIi5jb25jYXQodCxcIi51cmxcIiksMSwxZTMsITEpLE95KGUueCl8fHl5KGUueCxcIlwiLmNvbmNhdCh0LFwiLnhcIiksMCwxZTQpLE95KGUueSl8fHl5KGUueSxcIlwiLmNvbmNhdCh0LFwiLnlcIiksMCwxZTQpLE95KGUud2lkdGgpfHx5eShlLndpZHRoLFwiXCIuY29uY2F0KHQsXCIud2lkdGhcIiksMCwxZTQpLE95KGUuaGVpZ2h0KXx8eXkoZS5oZWlnaHQsXCJcIi5jb25jYXQodCxcIi5oZWlnaHRcIiksMCwxZTQpLE95KGUuek9yZGVyKXx8eXkoZS56T3JkZXIsXCJcIi5jb25jYXQodCxcIi56T3JkZXJcIiksMCwyNTUpLE95KGUuYWxwaGEpfHx5eShlLmFscGhhLFwiXCIuY29uY2F0KHQsXCIuYWxwaGFcIiksMCwxLCExKX1jb25zdCBXdz17YXVkaW9CaXRyYXRlOjQ4LGF1ZGlvQ2hhbm5lbHM6MSxhdWRpb1NhbXBsZVJhdGU6NDhlMyxiYWNrZ3JvdW5kQ29sb3I6MCxoZWlnaHQ6MzYwLGxvd0xhdGVuY3k6ITEsdmlkZW9CaXRyYXRlOjQwMCx2aWRlb0NvZGVjUHJvZmlsZToxMDAsdmlkZW9Db2RlY1R5cGU6MSx2aWRlb0ZyYW1lUmF0ZToxNSx2aWRlb0dvcDozMCx3aWR0aDo2NDAsaW1hZ2VzOltdLHVzZXJDb25maWdzOltdLHVzZXJDb25maWdFeHRyYUluZm86XCJcIn07bGV0IEh3PWZ1bmN0aW9uKGUpe3JldHVybiBlLldBUk5JTkc9XCJAbGl2ZV91YXAtd2FybmluZ1wiLGUuRVJST1I9XCJAbGluZV91YXAtZXJyb3JcIixlLlBVQkxJU0hfU1RSRUFNX1NUQVRVUz1cIkBsaXZlX3VhcC1wdWJsaXNoLXN0YXR1c1wiLGUuV09SS0VSX1NUQVRVUz1cIkBsaXZlX3VhcC13b3JrZXItc3RhdHVzXCIsZS5SRVFVRVNUX05FV19BRERSRVNTPVwiQGxpdmVfdWFwLXJlcXVlc3QtYWRkcmVzc1wiLGV9KHt9KSxLdz1mdW5jdGlvbihlKXtyZXR1cm4gZS5SRVFVRVNUX1dPUktFUl9NQU5BR0VSX0xJU1Q9XCJAbGl2ZV9yZXFfd29ya2VyX21hbmFnZXJcIixlfSh7fSksWXc9ZnVuY3Rpb24oZSl7cmV0dXJuIGVbZS5MSVZFX1NUUkVBTV9SRVNQT05TRV9TVUNDRUVEPTIwMF09XCJMSVZFX1NUUkVBTV9SRVNQT05TRV9TVUNDRUVEXCIsZVtlLkxJVkVfU1RSRUFNX1JFU1BPTlNFX0FMUkVBRFlfRVhJU1RTX1NUUkVBTT00NTRdPVwiTElWRV9TVFJFQU1fUkVTUE9OU0VfQUxSRUFEWV9FWElTVFNfU1RSRUFNXCIsZVtlLkxJVkVfU1RSRUFNX1JFU1BPTlNFX1RSQU5TQ09ESU5HX1BBUkFNRVRFUl9FUlJPUj00NTBdPVwiTElWRV9TVFJFQU1fUkVTUE9OU0VfVFJBTlNDT0RJTkdfUEFSQU1FVEVSX0VSUk9SXCIsZVtlLkxJVkVfU1RSRUFNX1JFU1BPTlNFX0JBRF9TVFJFQU09NDUxXT1cIkxJVkVfU1RSRUFNX1JFU1BPTlNFX0JBRF9TVFJFQU1cIixlW2UuTElWRV9TVFJFQU1fUkVTUE9OU0VfV01fUEFSQU1FVEVSX0VSUk9SPTQwMF09XCJMSVZFX1NUUkVBTV9SRVNQT05TRV9XTV9QQVJBTUVURVJfRVJST1JcIixlW2UuTElWRV9TVFJFQU1fUkVTUE9OU0VfV01fV09SS0VSX05PVF9FWElTVD00MDRdPVwiTElWRV9TVFJFQU1fUkVTUE9OU0VfV01fV09SS0VSX05PVF9FWElTVFwiLGVbZS5MSVZFX1NUUkVBTV9SRVNQT05TRV9OT1RfQVVUSE9SSVpFRD00NTZdPVwiTElWRV9TVFJFQU1fUkVTUE9OU0VfTk9UX0FVVEhPUklaRURcIixlW2UuTElWRV9TVFJFQU1fUkVTUE9OU0VfRkFJTEVEX0xPQURfSU1BR0U9NDU3XT1cIkxJVkVfU1RSRUFNX1JFU1BPTlNFX0ZBSUxFRF9MT0FEX0lNQUdFXCIsZVtlLkxJVkVfU1RSRUFNX1JFU1BPTlNFX1JFUVVFU1RfVE9PX09GVEVOPTQyOV09XCJMSVZFX1NUUkVBTV9SRVNQT05TRV9SRVFVRVNUX1RPT19PRlRFTlwiLGVbZS5MSVZFX1NUUkVBTV9SRVNQT05TRV9OT1RfRk9VTkRfUFVCTElTSD00NTJdPVwiTElWRV9TVFJFQU1fUkVTUE9OU0VfTk9UX0ZPVU5EX1BVQkxJU0hcIixlW2UuTElWRV9TVFJFQU1fUkVTUE9OU0VfTk9UX1NVUFBPUlRFRD00NTNdPVwiTElWRV9TVFJFQU1fUkVTUE9OU0VfTk9UX1NVUFBPUlRFRFwiLGVbZS5MSVZFX1NUUkVBTV9SRVNQT05TRV9NQVhfU1RSRUFNX05VTT00NTVdPVwiTElWRV9TVFJFQU1fUkVTUE9OU0VfTUFYX1NUUkVBTV9OVU1cIixlW2UuTElWRV9TVFJFQU1fUkVTUE9OU0VfSU5URVJOQUxfU0VSVkVSX0VSUk9SPTUwMF09XCJMSVZFX1NUUkVBTV9SRVNQT05TRV9JTlRFUk5BTF9TRVJWRVJfRVJST1JcIixlW2UuTElWRV9TVFJFQU1fUkVTUE9OU0VfV09SS0VSX0xPU1Q9NTAxXT1cIkxJVkVfU1RSRUFNX1JFU1BPTlNFX1dPUktFUl9MT1NUXCIsZVtlLkxJVkVfU1RSRUFNX1JFU1BPTlNFX1JFU09VUkNFX0xJTUlUPTUwMl09XCJMSVZFX1NUUkVBTV9SRVNQT05TRV9SRVNPVVJDRV9MSU1JVFwiLGVbZS5MSVZFX1NUUkVBTV9SRVNQT05TRV9XT1JLRVJfUVVJVD01MDNdPVwiTElWRV9TVFJFQU1fUkVTUE9OU0VfV09SS0VSX1FVSVRcIixlW2UuRVJST1JfRkFJTF9TRU5EX01FU1NBR0U9NTA0XT1cIkVSUk9SX0ZBSUxfU0VORF9NRVNTQUdFXCIsZVtlLlBVQkxJU0hfU1RSRUFNX1NUQVRVU19FUlJPUl9SVE1QX0hBTkRTSEFLRT0zMF09XCJQVUJMSVNIX1NUUkVBTV9TVEFUVVNfRVJST1JfUlRNUF9IQU5EU0hBS0VcIixlW2UuUFVCTElTSF9TVFJFQU1fU1RBVFVTX0VSUk9SX1JUTVBfQ09OTkVDVD0zMV09XCJQVUJMSVNIX1NUUkVBTV9TVEFUVVNfRVJST1JfUlRNUF9DT05ORUNUXCIsZVtlLlBVQkxJU0hfU1RSRUFNX1NUQVRVU19FUlJPUl9SVE1QX1BVQkxJU0g9MzJdPVwiUFVCTElTSF9TVFJFQU1fU1RBVFVTX0VSUk9SX1JUTVBfUFVCTElTSFwiLGVbZS5QVUJMSVNIX1NUUkVBTV9TVEFUVVNfRVJST1JfUFVCTElTSF9CUk9LRU49MzNdPVwiUFVCTElTSF9TVFJFQU1fU1RBVFVTX0VSUk9SX1BVQkxJU0hfQlJPS0VOXCIsZX0oe30pO2Z1bmN0aW9uIHF3KGUpe2lmKCFlLmNoYW5uZWxOYW1lKXRocm93IG5ldyB5YihSeS5JTlZBTElEX1BBUkFNUyxcImludmFsaWQgY2hhbm5lbE5hbWUgaW4gaW5mb1wiKTtpZihcIm51bWJlclwiIT10eXBlb2YgZS51aWQpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfUEFSQU1TLFwiaW52YWxpZCB1aWQgaW4gaW5mbywgdWlkIG11c3QgYmUgYSBudW1iZXJcIik7cmV0dXJuIGUudG9rZW4mJmJ5KGUudG9rZW4sXCJpbmZvLnRva2VuXCIsMSwyMDQ3KSxWdyhlLnVpZCkseHcoZS5jaGFubmVsTmFtZSksITB9bGV0IHp3PWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuU2V0U2RrUHJvZmlsZT0wXT1cIlNldFNka1Byb2ZpbGVcIixlW2UuU2V0U291cmNlQ2hhbm5lbD0xXT1cIlNldFNvdXJjZUNoYW5uZWxcIixlW2UuU2V0U291cmNlVXNlcklkPTJdPVwiU2V0U291cmNlVXNlcklkXCIsZVtlLlNldERlc3RDaGFubmVsPTNdPVwiU2V0RGVzdENoYW5uZWxcIixlW2UuU3RhcnRQYWNrZXRUcmFuc2Zlcj00XT1cIlN0YXJ0UGFja2V0VHJhbnNmZXJcIixlW2UuU3RvcFBhY2tldFRyYW5zZmVyPTVdPVwiU3RvcFBhY2tldFRyYW5zZmVyXCIsZVtlLlVwZGF0ZURlc3RDaGFubmVsPTZdPVwiVXBkYXRlRGVzdENoYW5uZWxcIixlW2UuUmVjb25uZWN0PTddPVwiUmVjb25uZWN0XCIsZVtlLlNldFZpZGVvUHJvZmlsZT04XT1cIlNldFZpZGVvUHJvZmlsZVwiLGV9KHt9KSxKdz1mdW5jdGlvbihlKXtyZXR1cm4gZS5ORVRXT1JLX0RJU0NPTk5FQ1RFRD1cIk5FVFdPUktfRElTQ09OTkVDVEVEXCIsZS5ORVRXT1JLX0NPTk5FQ1RFRD1cIk5FVFdPUktfQ09OTkVDVEVEXCIsZS5QQUNLRVRfSk9JTkVEX1NSQ19DSEFOTkVMPVwiUEFDS0VUX0pPSU5FRF9TUkNfQ0hBTk5FTFwiLGUuUEFDS0VUX0pPSU5FRF9ERVNUX0NIQU5ORUw9XCJQQUNLRVRfSk9JTkVEX0RFU1RfQ0hBTk5FTFwiLGUuUEFDS0VUX1NFTlRfVE9fREVTVF9DSEFOTkVMPVwiUEFDS0VUX1NFTlRfVE9fREVTVF9DSEFOTkVMXCIsZS5QQUNLRVRfUkVDRUlWRURfVklERU9fRlJPTV9TUkM9XCJQQUNLRVRfUkVDRUlWRURfVklERU9fRlJPTV9TUkNcIixlLlBBQ0tFVF9SRUNFSVZFRF9BVURJT19GUk9NX1NSQz1cIlBBQ0tFVF9SRUNFSVZFRF9BVURJT19GUk9NX1NSQ1wiLGUuUEFDS0VUX1VQREFURV9ERVNUX0NIQU5ORUw9XCJQQUNLRVRfVVBEQVRFX0RFU1RfQ0hBTk5FTFwiLGUuUEFDS0VUX1VQREFURV9ERVNUX0NIQU5ORUxfUkVGVVNFRD1cIlBBQ0tFVF9VUERBVEVfREVTVF9DSEFOTkVMX1JFRlVTRURcIixlLlBBQ0tFVF9VUERBVEVfREVTVF9DSEFOTkVMX05PVF9DSEFOR0U9XCJQQUNLRVRfVVBEQVRFX0RFU1RfQ0hBTk5FTF9OT1RfQ0hBTkdFXCIsZX0oe30pLFh3PWZ1bmN0aW9uKGUpe3JldHVybiBlLlJFTEFZX1NUQVRFX0lETEU9XCJSRUxBWV9TVEFURV9JRExFXCIsZS5SRUxBWV9TVEFURV9DT05ORUNUSU5HPVwiUkVMQVlfU1RBVEVfQ09OTkVDVElOR1wiLGUuUkVMQVlfU1RBVEVfUlVOTklORz1cIlJFTEFZX1NUQVRFX1JVTk5JTkdcIixlLlJFTEFZX1NUQVRFX0ZBSUxVUkU9XCJSRUxBWV9TVEFURV9GQUlMVVJFXCIsZX0oe30pLFF3PWZ1bmN0aW9uKGUpe3JldHVybiBlLlJFTEFZX09LPVwiUkVMQVlfT0tcIixlLlNFUlZFUl9DT05ORUNUSU9OX0xPU1Q9XCJTRVJWRVJfQ09OTkVDVElPTl9MT1NUXCIsZS5TUkNfVE9LRU5fRVhQSVJFRD1cIlNSQ19UT0tFTl9FWFBJUkVEXCIsZS5ERVNUX1RPS0VOX0VYUElSRUQ9XCJERVNUX1RPS0VOX0VYUElSRURcIixlfSh7fSksWnc9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuSGlnaD1cImhpZ2hcIixlLkxvdz1cImxvd1wiLGUuQXVkaW89XCJhdWRpb1wiLGUuU2NyZWVuPVwic2NyZWVuXCIsZS5TY3JlZW5Mb3c9XCJzY3JlZW5fbG93XCIsZX0oe30pLCR3PWZ1bmN0aW9uKGUpe3JldHVybiBlLkRJU0NPTk5FQ1Q9XCJkaXNjb25uZWN0XCIsZS5DT05ORUNUSU9OX1NUQVRFX0NIQU5HRT1cImNvbm5lY3Rpb24tc3RhdGUtY2hhbmdlXCIsZS5ORVRXT1JLX1FVQUxJVFk9XCJuZXR3b3JrLXF1YWxpdHlcIixlLlNUUkVBTV9UWVBFX0NIQU5HRT1cInN0cmVhbS10eXBlLWNoYW5nZVwiLGUuSVNfUDJQX0RJU0NPTk5FQ1RFRD1cImlzLXAycC1kaXNcIixlLkRJU0NPTk5FQ1RfUDJQPVwiZGlzLXAycFwiLGUuUkVRVUVTVF9ORVdfR0FURVdBWV9MSVNUPVwicmVxLWdhdGUtdXJsXCIsZS5ORUVEX1JFTkVXX1NFU1NJT049XCJuZWVkLXNpZFwiLGUuUkVRVUVTVF9QMlBfQ09OTkVDVElPTl9QQVJBTVM9XCJyZXF1ZXN0LXAycC1jb25uZWN0aW9uLXBhcmFtc1wiLGUuSk9JTl9SRVNQT05TRT1cImpvaW4tcmVzcG9uc2VcIixlLlJFU0VUX0NPTk5FQ1RJT05fRVZFTlRTPVwicmVzZXQtY29ubmVjdGlvbi1ldmVudHNcIixlLlBSRV9DT05ORUNUX1BDPVwicHJlLWNvbm5lY3RfcGNcIixlfSh7fSksZU89ZnVuY3Rpb24oZSl7cmV0dXJuIGUuUDJQX0RJU0NPTk5FQ1RFRD1cIlAyUF9ESVNDT05ORUNURURcIixlLkFfUk9VTkRfV1NfRkFJTEVEPVwiQV9ST1VORF9XU19GQUlMRURcIixlLlRJTUVPVVQ9XCJUSU1FT1VUXCIsZS5VTktOT1dOX1JFQVNPTj1cIlVOS05PV05fUkVBU09OXCIsZX0oe30pLHRPPWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuTm90aGluZz0wXT1cIk5vdGhpbmdcIixlW2UuQXVkaW89MV09XCJBdWRpb1wiLGVbZS5Md29WaWRlbz0yXT1cIkx3b1ZpZGVvXCIsZVtlLlZpZGVvPTRdPVwiVmlkZW9cIixlW2UuRGF0YT04XT1cIkRhdGFcIixlW2UuRGF0YVN0cmVhbTA9MjU2XT1cIkRhdGFTdHJlYW0wXCIsZVtlLkRhdGFTdHJlYW0xPTUxMl09XCJEYXRhU3RyZWFtMVwiLGVbZS5EYXRhU3RyZWFtMj0xMDI0XT1cIkRhdGFTdHJlYW0yXCIsZVtlLkRhdGFTdHJlYW0zPTIwNDhdPVwiRGF0YVN0cmVhbTNcIixlW2UuRGF0YVN0cmVhbTQ9NDA5Nl09XCJEYXRhU3RyZWFtNFwiLGVbZS5EYXRhU3RyZWFtNT04MTkyXT1cIkRhdGFTdHJlYW01XCIsZVtlLkRhdGFTdHJlYW02PTE2Mzg0XT1cIkRhdGFTdHJlYW02XCIsZVtlLkRhdGFTdHJlYW03PTMyNzY4XT1cIkRhdGFTdHJlYW03XCIsZX0oe30pLGlPPWZ1bmN0aW9uKGUpe3JldHVybiBlLkNISU5BPVwiQ0hJTkFcIixlLkFTSUE9XCJBU0lBXCIsZS5OT1JUSF9BTUVSSUNBPVwiTk9SVEhfQU1FUklDQVwiLGUuRVVST1BFPVwiRVVST1BFXCIsZS5KQVBBTj1cIkpBUEFOXCIsZS5JTkRJQT1cIklORElBXCIsZS5LT1JFQT1cIktPUkVBXCIsZS5IS01DPVwiSEtNQ1wiLGUuVVM9XCJVU1wiLGUuT0NFQU5JQT1cIk9DRUFOSUFcIixlLlNPVVRIX0FNRVJJQ0E9XCJTT1VUSF9BTUVSSUNBXCIsZS5BRlJJQ0E9XCJBRlJJQ0FcIixlLk9WRVJTRUE9XCJPVkVSU0VBXCIsZS5HTE9CQUw9XCJHTE9CQUxcIixlLkVYVEVOU0lPTlM9XCJFWFRFTlNJT05TXCIsZX0oe30pO2NvbnN0IG5PPVtpTy5BRlJJQ0EsaU8uQVNJQSxpTy5DSElOQSxpTy5FVVJPUEUsaU8uR0xPQkFMLGlPLklORElBLGlPLkpBUEFOLGlPLk5PUlRIX0FNRVJJQ0EsaU8uT0NFQU5JQSxpTy5PVkVSU0VBLGlPLlNPVVRIX0FNRVJJQ0FdO2xldCByTz1mdW5jdGlvbihlKXtyZXR1cm4gZS5DSElOQT1cIkNOXCIsZS5BU0lBPVwiQVNcIixlLk5PUlRIX0FNRVJJQ0E9XCJOQVwiLGUuRVVST1BFPVwiRVVcIixlLkpBUEFOPVwiSlBcIixlLklORElBPVwiSU5cIixlLktPUkVBPVwiS1JcIixlLkhLTUM9XCJIS1wiLGUuVVM9XCJVU1wiLGUuT0NFQU5JQT1cIk9DXCIsZS5TT1VUSF9BTUVSSUNBPVwiU0FcIixlLkFGUklDQT1cIkFGXCIsZS5PVkVSU0VBPVwiT1ZFUlNFQVwiLGUuR0xPQkFMPVwiR0xPQkFMXCIsZS5FWFRFTlNJT05TPVwiR0xPQkFMXCIsZX0oe30pO2NvbnN0IG9PPXtDSElOQTp7fSxBU0lBOntDT0RFOnJPLkFTSUEsV0VCQ1NfRE9NQUlOOltcImFwLXdlYi0xLWFzaWEuYWdvcmEuaW9cIl0sV0VCQ1NfRE9NQUlOX0JBQ0tVUF9MSVNUOltcImFwLXdlYi0yLWFzaWEuYWdvcmEuaW9cIl0sUFJPWFlfQ1M6W1wicHJveHktYXAtd2ViLWFzaWEuYWdvcmEuaW9cIl0sQ0RTX0FQOltcImNkcy1hcC13ZWItYXNpYS5hZ29yYS5pb1wiLFwiY2RzLWFwLXdlYi1hc2lhMi5hZ29yYS5pb1wiXSxBQ0NPVU5UX1JFR0lTVEVSOltcInN1YS1hcC13ZWItYXNpYS5hZ29yYS5pb1wiLFwic3VhLWFwLXdlYi1hc2lhMi5hZ29yYS5pb1wiXSxVQVBfQVA6W1widWFwLWFwLXdlYi1hc2lhLmFnb3JhLmlvXCIsXCJ1YXAtYXAtd2ViLWFzaWEyLmFnb3JhLmlvXCJdLEVWRU5UX1JFUE9SVF9ET01BSU46W1wic3RhdHNjb2xsZWN0b3ItMS1hc2lhLmFnb3JhLmlvXCJdLEVWRU5UX1JFUE9SVF9CQUNLVVBfRE9NQUlOOltcInN0YXRzY29sbGVjdG9yLTItYXNpYS5hZ29yYS5pb1wiXSxMT0dfVVBMT0FEX1NFUlZFUjpbXCJsb2dzZXJ2aWNlLWFzaWEuYWdvcmEuaW9cIl0sUFJPWFlfU0VSVkVSX1RZUEUzOltcInNvdXRoZWFzdC1hc2lhLndlYnJ0Yy1jbG91ZC1wcm94eS5zZC1ydG4uY29tXCJdfSxOT1JUSF9BTUVSSUNBOntDT0RFOnJPLk5PUlRIX0FNRVJJQ0EsV0VCQ1NfRE9NQUlOOltcImFwLXdlYi0xLW5vcnRoLWFtZXJpY2EuYWdvcmEuaW9cIl0sV0VCQ1NfRE9NQUlOX0JBQ0tVUF9MSVNUOltcImFwLXdlYi0yLW5vcnRoLWFtZXJpY2EuYWdvcmEuaW9cIl0sUFJPWFlfQ1M6W1wicHJveHktYXAtd2ViLWFtZXJpY2EuYWdvcmEuaW9cIl0sQ0RTX0FQOltcImNkcy1hcC13ZWItYW1lcmljYS5hZ29yYS5pb1wiLFwiY2RzLWFwLXdlYi1hbWVyaWNhMi5hZ29yYS5pb1wiXSxBQ0NPVU5UX1JFR0lTVEVSOltcInN1YS1hcC13ZWItYW1lcmljYS5hZ29yYS5pb1wiLFwic3VhLWFwLXdlYi1hbWVyaWNhMi5hZ29yYS5pb1wiXSxVQVBfQVA6W1widWFwLWFwLXdlYi1hbWVyaWNhLmFnb3JhLmlvXCIsXCJ1YXAtYXAtd2ViLWFtZXJpY2EyLmFnb3JhLmlvXCJdLEVWRU5UX1JFUE9SVF9ET01BSU46W1wic3RhdHNjb2xsZWN0b3ItMS1ub3J0aC1hbWVyaWNhLmFnb3JhLmlvXCJdLEVWRU5UX1JFUE9SVF9CQUNLVVBfRE9NQUlOOltcInN0YXRzY29sbGVjdG9yLTItbm9ydGgtYW1lcmljYS5hZ29yYS5pb1wiXSxMT0dfVVBMT0FEX1NFUlZFUjpbXCJsb2dzZXJ2aWNlLW5vcnRoLWFtZXJpY2EuYWdvcmEuaW9cIl0sUFJPWFlfU0VSVkVSX1RZUEUzOltcImVhc3QtdXNhLndlYnJ0Yy1jbG91ZC1wcm94eS5zZC1ydG4uY29tXCJdfSxFVVJPUEU6e0NPREU6ck8uRVVST1BFLFdFQkNTX0RPTUFJTjpbXCJhcC13ZWItMS1ldXJvcGUuYWdvcmEuaW9cIl0sV0VCQ1NfRE9NQUlOX0JBQ0tVUF9MSVNUOltcImFwLXdlYi0yLWV1cm9wZS5hZ29yYS5pb1wiXSxQUk9YWV9DUzpbXCJwcm94eS1hcC13ZWItZXVyb3BlLmFnb3JhLmlvXCJdLENEU19BUDpbXCJjZHMtYXAtd2ViLWV1cm9wZS5hZ29yYS5pb1wiLFwiY2RzLWFwLXdlYi1ldXJvcGUyLmFnb3JhLmlvXCJdLEFDQ09VTlRfUkVHSVNURVI6W1wic3VhLWFwLXdlYi1ldXJvcGUuYWdvcmEuaW9cIixcInN1YS1hcC13ZWItZXVyb3BlLmFnb3JhLmlvXCJdLFVBUF9BUDpbXCJ1YXAtYXAtd2ViLWV1cm9wZS5hZ29yYS5pb1wiLFwidWFwLWFwLXdlYi1ldXJvcGUyLmFnb3JhLmlvXCJdLEVWRU5UX1JFUE9SVF9ET01BSU46W1wic3RhdHNjb2xsZWN0b3ItMS1ldXJvcGUuYWdvcmEuaW9cIl0sRVZFTlRfUkVQT1JUX0JBQ0tVUF9ET01BSU46W1wic3RhdHNjb2xsZWN0b3ItMi1ldXJvcGUuYWdvcmEuaW9cIl0sTE9HX1VQTE9BRF9TRVJWRVI6W1wibG9nc2VydmljZS1ldXJvcGUuYWdvcmEuaW9cIl0sUFJPWFlfU0VSVkVSX1RZUEUzOltcImV1cm9wZS53ZWJydGMtY2xvdWQtcHJveHkuc2QtcnRuLmNvbVwiXX0sSkFQQU46e0NPREU6ck8uSkFQQU4sV0VCQ1NfRE9NQUlOOltcImFwLXdlYi0xLWphcGFuLmFnb3JhLmlvXCJdLFdFQkNTX0RPTUFJTl9CQUNLVVBfTElTVDpbXCJhcC13ZWItMi1qYXBhbi5hZ29yYS5pb1wiXSxQUk9YWV9DUzpbXCJwcm94eS1hcC13ZWItamFwYW4uYWdvcmEuaW9cIl0sQ0RTX0FQOltcImNkcy1hcC13ZWItamFwYW4uYWdvcmEuaW9cIixcImNkcy1hcC13ZWItamFwYW4yLmFnb3JhLmlvXCJdLEFDQ09VTlRfUkVHSVNURVI6W1wic3VhLWFwLXdlYi1qYXBhbi5hZ29yYS5pb1wiLFwic3VhLWFwLXdlYi1qYXBhbjIuYWdvcmEuaW9cIl0sVUFQX0FQOltcInVhcC1hcC13ZWItamFwYW4uYWdvcmEuaW9cIixcInVhcC1hcC13ZWItamFwYW4yLmFnb3JhLmlvXCJdLEVWRU5UX1JFUE9SVF9ET01BSU46W1wic3RhdHNjb2xsZWN0b3ItMS1qYXBhbi5hZ29yYS5pb1wiXSxFVkVOVF9SRVBPUlRfQkFDS1VQX0RPTUFJTjpbXCJzdGF0c2NvbGxlY3Rvci0yLWphcGFuLmFnb3JhLmlvXCJdLExPR19VUExPQURfU0VSVkVSOltcImxvZ3NlcnZpY2UtamFwYW4uYWdvcmEuaW9cIl0sUFJPWFlfU0VSVkVSX1RZUEUzOltcImphcGFuLndlYnJ0Yy1jbG91ZC1wcm94eS5zZC1ydG4uY29tXCJdfSxJTkRJQTp7Q09ERTpyTy5JTkRJQSxXRUJDU19ET01BSU46W1wiYXAtd2ViLTEtaW5kaWEuYWdvcmEuaW9cIl0sV0VCQ1NfRE9NQUlOX0JBQ0tVUF9MSVNUOltcImFwLXdlYi0yLWluZGlhLmFnb3JhLmlvXCJdLFBST1hZX0NTOltcInByb3h5LWFwLXdlYi1pbmRpYS5hZ29yYS5pb1wiXSxDRFNfQVA6W1wiY2RzLWFwLXdlYi1pbmRpYS5hZ29yYS5pb1wiLFwiY2RzLWFwLXdlYi1pbmRpYTIuYWdvcmEuaW9cIl0sQUNDT1VOVF9SRUdJU1RFUjpbXCJzdWEtYXAtd2ViLWluZGlhLmFnb3JhLmlvXCIsXCJzdWEtYXAtd2ViLWluZGlhMi5hZ29yYS5pb1wiXSxVQVBfQVA6W1widWFwLWFwLXdlYi1pbmRpYS5hZ29yYS5pb1wiLFwidWFwLWFwLXdlYi1pbmRpYTIuYWdvcmEuaW9cIl0sRVZFTlRfUkVQT1JUX0RPTUFJTjpbXCJzdGF0c2NvbGxlY3Rvci0xLWluZGlhLmFnb3JhLmlvXCJdLEVWRU5UX1JFUE9SVF9CQUNLVVBfRE9NQUlOOltcInN0YXRzY29sbGVjdG9yLTItaW5kaWEuYWdvcmEuaW9cIl0sTE9HX1VQTE9BRF9TRVJWRVI6W1wibG9nc2VydmljZS1pbmRpYS5hZ29yYS5pb1wiXSxQUk9YWV9TRVJWRVJfVFlQRTM6W1wiaW5kaWEud2VicnRjLWNsb3VkLXByb3h5LnNkLXJ0bi5jb21cIl19LEtPUkVBOntDT0RFOnJPLktPUkVBLFdFQkNTX0RPTUFJTjpbXCJhcC13ZWItMS1rb3JlYS5hZ29yYS5pb1wiXSxXRUJDU19ET01BSU5fQkFDS1VQX0xJU1Q6W1wiYXAtd2ViLTIta29yZWEuYWdvcmEuaW9cIl0sUFJPWFlfQ1M6W1wicHJveHktYXAtd2ViLWtvcmVhLmFnb3JhLmlvXCJdLENEU19BUDpbXCJjZHMtYXAtd2ViLWtvcmVhLmFnb3JhLmlvXCIsXCJjZHMtYXAtd2ViLWtvcmVhMi5hZ29yYS5pb1wiXSxBQ0NPVU5UX1JFR0lTVEVSOltcInN1YS1hcC13ZWIta29yZWEuYWdvcmEuaW9cIixcInN1YS1hcC13ZWIta29yZWEyLmFnb3JhLmlvXCJdLFVBUF9BUDpbXCJ1YXAtYXAtd2ViLWtvcmVhLmFnb3JhLmlvXCIsXCJ1YXAtYXAtd2ViLWtvcmVhMi5hZ29yYS5pb1wiXSxFVkVOVF9SRVBPUlRfRE9NQUlOOltcInN0YXRzY29sbGVjdG9yLTEta29yZWEuYWdvcmEuaW9cIl0sRVZFTlRfUkVQT1JUX0JBQ0tVUF9ET01BSU46W1wic3RhdHNjb2xsZWN0b3ItMi1rb3JlYS5hZ29yYS5pb1wiXSxMT0dfVVBMT0FEX1NFUlZFUjpbXCJsb2dzZXJ2aWNlLWtvcmVhLmFnb3JhLmlvXCJdLFBST1hZX1NFUlZFUl9UWVBFMzpbXCJrb3JlYS53ZWJydGMtY2xvdWQtcHJveHkuc2QtcnRuLmNvbVwiXX0sSEtNQzp7Q09ERTpyTy5IS01DLFdFQkNTX0RPTUFJTjpbXCJhcC13ZWItMS1oa21jLmFnb3JhLmlvXCJdLFdFQkNTX0RPTUFJTl9CQUNLVVBfTElTVDpbXCJhcC13ZWItMi1oa21jLmFnb3JhLmlvXCJdLFBST1hZX0NTOltcInByb3h5LWFwLXdlYi1oa21jLmFnb3JhLmlvXCJdLENEU19BUDpbXCJjZHMtYXAtd2ViLWhrbWMuYWdvcmEuaW9cIixcImNkcy1hcC13ZWItaGttYzIuYWdvcmEuaW9cIl0sQUNDT1VOVF9SRUdJU1RFUjpbXCJzdWEtYXAtd2ViLWhrbWMuYWdvcmEuaW9cIixcInN1YS1hcC13ZWItaGttYzIuYWdvcmEuaW9cIl0sVUFQX0FQOltcInVhcC1hcC13ZWItaGttYy5hZ29yYS5pb1wiLFwidWFwLWFwLXdlYi1oa21jMi5hZ29yYS5pb1wiXSxFVkVOVF9SRVBPUlRfRE9NQUlOOltcInN0YXRzY29sbGVjdG9yLTEtaGttYy5hZ29yYS5pb1wiXSxFVkVOVF9SRVBPUlRfQkFDS1VQX0RPTUFJTjpbXCJzdGF0c2NvbGxlY3Rvci0yLWhrbWMuYWdvcmEuaW9cIl0sTE9HX1VQTE9BRF9TRVJWRVI6W1wibG9nc2VydmljZS1oa21jLmFnb3JhLmlvXCJdLFBST1hZX1NFUlZFUl9UWVBFMzpbXCJoa21jLndlYnJ0Yy1jbG91ZC1wcm94eS5zZC1ydG4uY29tXCJdfSxVUzp7Q09ERTpyTy5VUyxXRUJDU19ET01BSU46W1wiYXAtd2ViLTEtdXMuYWdvcmEuaW9cIl0sV0VCQ1NfRE9NQUlOX0JBQ0tVUF9MSVNUOltcImFwLXdlYi0yLXVzLmFnb3JhLmlvXCJdLFBST1hZX0NTOltcInByb3h5LWFwLXdlYi11cy5hZ29yYS5pb1wiXSxDRFNfQVA6W1wiY2RzLWFwLXdlYi11cy5hZ29yYS5pb1wiLFwiY2RzLWFwLXdlYi11czIuYWdvcmEuaW9cIl0sQUNDT1VOVF9SRUdJU1RFUjpbXCJzdWEtYXAtd2ViLXVzLmFnb3JhLmlvXCIsXCJzdWEtYXAtd2ViLXVzMi5hZ29yYS5pb1wiXSxVQVBfQVA6W1widWFwLWFwLXdlYi11cy5hZ29yYS5pb1wiLFwidWFwLWFwLXdlYi11czIuYWdvcmEuaW9cIl0sRVZFTlRfUkVQT1JUX0RPTUFJTjpbXCJzdGF0c2NvbGxlY3Rvci0xLXVzLmFnb3JhLmlvXCJdLEVWRU5UX1JFUE9SVF9CQUNLVVBfRE9NQUlOOltcInN0YXRzY29sbGVjdG9yLTItdXMuYWdvcmEuaW9cIl0sTE9HX1VQTE9BRF9TRVJWRVI6W1wibG9nc2VydmljZS11cy5hZ29yYS5pb1wiXSxQUk9YWV9TRVJWRVJfVFlQRTM6W1widXMud2VicnRjLWNsb3VkLXByb3h5LnNkLXJ0bi5jb21cIl19LE9WRVJTRUE6e0NPREU6ck8uT1ZFUlNFQSxXRUJDU19ET01BSU46W1wiYXAtd2ViLTEtb3ZlcnNlYS5hZ29yYS5pb1wiXSxXRUJDU19ET01BSU5fQkFDS1VQX0xJU1Q6W1wiYXAtd2ViLTItb3ZlcnNlYS5hZ29yYS5pb1wiXSxQUk9YWV9DUzpbXCJwcm94eS1hcC13ZWItb3ZlcnNlYS5hZ29yYS5pb1wiXSxDRFNfQVA6W1wiY2RzLWFwLXdlYi1vdmVyc2VhLmFnb3JhLmlvXCJdLEFDQ09VTlRfUkVHSVNURVI6W1wic3VhLWFwLXdlYi1vdmVyc2VhLmFnb3JhLmlvXCJdLFVBUF9BUDpbXCJ1YXAtYXAtd2ViLW92ZXJzZWEuYWdvcmEuaW9cIl0sRVZFTlRfUkVQT1JUX0RPTUFJTjpbXCJzdGF0c2NvbGxlY3Rvci0xLW92ZXJzZWEuYWdvcmEuaW9cIl0sRVZFTlRfUkVQT1JUX0JBQ0tVUF9ET01BSU46W1wic3RhdHNjb2xsZWN0b3ItMi1vdmVyc2VhLmFnb3JhLmlvXCJdLExPR19VUExPQURfU0VSVkVSOltcImxvZ3NlcnZpY2Utb3ZlcnNlYS5hZ29yYS5pb1wiXSxQUk9YWV9TRVJWRVJfVFlQRTM6W1wid2VicnRjLWNsb3VkLXByb3h5LmFnb3JhLmlvXCJdfSxHTE9CQUw6e0NPREU6ck8uR0xPQkFMLFdFQkNTX0RPTUFJTjpbXCJ3ZWJydGMyLWFwLXdlYi0xLmFnb3JhLmlvXCJdLFdFQkNTX0RPTUFJTl9CQUNLVVBfTElTVDpbXCJ3ZWJydGMyLWFwLXdlYi0zLmFnb3JhLmlvXCJdLFBST1hZX0NTOltcImFwLXByb3h5LTEuYWdvcmEuaW9cIixcImFwLXByb3h5LTIuYWdvcmEuaW9cIl0sQ0RTX0FQOltcImNkcy1hcC13ZWItMS5hZ29yYS5pb1wiLFwiY2RzLWFwLXdlYi0zLmFnb3JhLmlvXCJdLEFDQ09VTlRfUkVHSVNURVI6W1wic3VhLWFwLXdlYi0xLmFnb3JhLmlvXCIsXCJzdWEtYXAtd2ViLTMuYWdvcmEuaW9cIl0sVUFQX0FQOltcInVhcC1hcC13ZWItMS5hZ29yYS5pb1wiLFwidWFwLWFwLXdlYi0zLmFnb3JhLmlvXCJdLEVWRU5UX1JFUE9SVF9ET01BSU46W1wic3RhdHNjb2xsZWN0b3ItMS5hZ29yYS5pb1wiXSxFVkVOVF9SRVBPUlRfQkFDS1VQX0RPTUFJTjpbXCJzdGF0c2NvbGxlY3Rvci0yLmFnb3JhLmlvXCJdLExPR19VUExPQURfU0VSVkVSOltcImxvZ3NlcnZpY2UuYWdvcmEuaW9cIl0sUFJPWFlfU0VSVkVSX1RZUEUzOltcIndlYnJ0Yy1jbG91ZC1wcm94eS5zZC1ydG4uY29tXCJdfSxPQ0VBTklBOntDT0RFOnJPLk9DRUFOSUEsV0VCQ1NfRE9NQUlOOltcImFwLXdlYi0xLW9jZWFuaWEuYWdvcmEuaW9cIl0sV0VCQ1NfRE9NQUlOX0JBQ0tVUF9MSVNUOltcImFwLXdlYi0yLW9jZWFuaWEuYWdvcmEuaW9cIl0sUFJPWFlfQ1M6W1wicHJveHktYXAtd2ViLW9jZWFuaWEuYWdvcmEuaW9cIl0sQ0RTX0FQOltcImNkcy1hcC13ZWItb2NlYW5pYS5hZ29yYS5pb1wiLFwiY2RzLWFwLXdlYi1vY2VhbmlhMi5hZ29yYS5pb1wiXSxBQ0NPVU5UX1JFR0lTVEVSOltcInN1YS1hcC13ZWItb2NlYW5pYS5hZ29yYS5pb1wiLFwic3VhLWFwLXdlYi1vY2VhbmlhMi5hZ29yYS5pb1wiXSxVQVBfQVA6W1widWFwLWFwLXdlYi1vY2VhbmlhLmFnb3JhLmlvXCIsXCJ1YXAtYXAtd2ViLW9jZWFuaWEyLmFnb3JhLmlvXCJdLEVWRU5UX1JFUE9SVF9ET01BSU46W1wic3RhdHNjb2xsZWN0b3ItMS1vY2VhbmlhLmFnb3JhLmlvXCJdLEVWRU5UX1JFUE9SVF9CQUNLVVBfRE9NQUlOOltcInN0YXRzY29sbGVjdG9yLTItb2NlYW5pYS5hZ29yYS5pb1wiXSxMT0dfVVBMT0FEX1NFUlZFUjpbXCJsb2dzZXJ2aWNlLW9jZWFuaWEuYWdvcmEuaW9cIl0sUFJPWFlfU0VSVkVSX1RZUEUzOltcIm9jZWFuaWEud2VicnRjLWNsb3VkLXByb3h5LnNkLXJ0bi5jb21cIl19LFNPVVRIX0FNRVJJQ0E6e0NPREU6ck8uU09VVEhfQU1FUklDQSxXRUJDU19ET01BSU46W1wiYXAtd2ViLTEtc291dGgtYW1lcmljYS5hZ29yYS5pb1wiXSxXRUJDU19ET01BSU5fQkFDS1VQX0xJU1Q6W1wiYXAtd2ViLTItc291dGgtYW1lcmljYS5hZ29yYS5pb1wiXSxQUk9YWV9DUzpbXCJwcm94eS1hcC13ZWItc291dGgtYW1lcmljYS5hZ29yYS5pb1wiXSxDRFNfQVA6W1wiY2RzLWFwLXdlYi1zb3V0aC1hbWVyaWNhLmFnb3JhLmlvXCIsXCJjZHMtYXAtd2ViLXNvdXRoLWFtZXJpY2EyLmFnb3JhLmlvXCJdLEFDQ09VTlRfUkVHSVNURVI6W1wic3VhLWFwLXdlYi1zb3V0aC1hbWVyaWNhLmFnb3JhLmlvXCIsXCJzdWEtYXAtd2ViLXNvdXRoLWFtZXJpY2EyLmFnb3JhLmlvXCJdLFVBUF9BUDpbXCJ1YXAtYXAtd2ViLXNvdXRoLWFtZXJpY2EuYWdvcmEuaW9cIixcInVhcC1hcC13ZWItc291dGgtYW1lcmljYTIuYWdvcmEuaW9cIl0sRVZFTlRfUkVQT1JUX0RPTUFJTjpbXCJzdGF0c2NvbGxlY3Rvci0xLXNvdXRoLWFtZXJpY2EuYWdvcmEuaW9cIl0sRVZFTlRfUkVQT1JUX0JBQ0tVUF9ET01BSU46W1wic3RhdHNjb2xsZWN0b3ItMi1zb3V0aC1hbWVyaWNhLmFnb3JhLmlvXCJdLExPR19VUExPQURfU0VSVkVSOltcImxvZ3NlcnZpY2Utc291dGgtYW1lcmljYS5hZ29yYS5pb1wiXSxQUk9YWV9TRVJWRVJfVFlQRTM6W1wic291dGgtYW1lcmljYS53ZWJydGMtY2xvdWQtcHJveHkuc2QtcnRuLmNvbVwiXX0sQUZSSUNBOntDT0RFOnJPLkFGUklDQSxXRUJDU19ET01BSU46W1wiYXAtd2ViLTEtYWZyaWNhLmFnb3JhLmlvXCJdLFdFQkNTX0RPTUFJTl9CQUNLVVBfTElTVDpbXCJhcC13ZWItMi1hZnJpY2EuYWdvcmEuaW9cIl0sUFJPWFlfQ1M6W1wicHJveHktYXAtd2ViLWFmcmljYS5hZ29yYS5pb1wiXSxDRFNfQVA6W1wiY2RzLWFwLXdlYi1hZnJpY2EuYWdvcmEuaW9cIixcImNkcy1hcC13ZWItYWZyaWNhMi5hZ29yYS5pb1wiXSxBQ0NPVU5UX1JFR0lTVEVSOltcInN1YS1hcC13ZWItYWZyaWNhLmFnb3JhLmlvXCIsXCJzdWEtYXAtd2ViLWFmcmljYTIuYWdvcmEuaW9cIl0sVUFQX0FQOltcInVhcC1hcC13ZWItYWZyaWNhLmFnb3JhLmlvXCIsXCJ1YXAtYXAtd2ViLWFmcmljYTIuYWdvcmEuaW9cIl0sRVZFTlRfUkVQT1JUX0RPTUFJTjpbXCJzdGF0c2NvbGxlY3Rvci0xLWFmcmljYS5hZ29yYS5pb1wiXSxFVkVOVF9SRVBPUlRfQkFDS1VQX0RPTUFJTjpbXCJzdGF0c2NvbGxlY3Rvci0yLWFmcmljYS5hZ29yYS5pb1wiXSxMT0dfVVBMT0FEX1NFUlZFUjpbXCJsb2dzZXJ2aWNlLXNvdXRoLWFmcmljYS5hZ29yYS5pb1wiXSxQUk9YWV9TRVJWRVJfVFlQRTM6W1wiYWZyaWNhLndlYnJ0Yy1jbG91ZC1wcm94eS5zZC1ydG4uY29tXCJdfSxFWFRFTlNJT05TOnt9fTtXQSYmKG9PLkNISU5BPXtDT0RFOnJPLkNISU5BLFdFQkNTX0RPTUFJTjpbXCJ3ZWJydGMyLTIuYXAuc2QtcnRuLmNvbVwiXSxXRUJDU19ET01BSU5fQkFDS1VQX0xJU1Q6W1wid2VicnRjMi00LmFwLnNkLXJ0bi5jb21cIl0sUFJPWFlfQ1M6W1wicHJveHktd2ViLmFwLnNkLXJ0bi5jb21cIl0sQ0RTX0FQOltcImNkcy13ZWItMi5hcC5zZC1ydG4uY29tXCIsXCJjZHMtd2ViLTQuYXAuc2QtcnRuLmNvbVwiXSxBQ0NPVU5UX1JFR0lTVEVSOltcInN1YS13ZWItMi5hcC5zZC1ydG4uY29tXCIsXCJzdWEtd2ViLTQuYXAuc2QtcnRuLmNvbVwiXSxVQVBfQVA6W1widWFwLXdlYi0yLmFwLnNkLXJ0bi5jb21cIixcInVhcC13ZWItNC5hcC5zZC1ydG4uY29tXCJdLEVWRU5UX1JFUE9SVF9ET01BSU46W1wid2ViLTMuc3RhdHNjb2xsZWN0b3Iuc2QtcnRuLmNvbVwiXSxFVkVOVF9SRVBPUlRfQkFDS1VQX0RPTUFJTjpbXCJ3ZWItNC5zdGF0c2NvbGxlY3Rvci5zZC1ydG4uY29tXCJdLExPR19VUExPQURfU0VSVkVSOltcImxvZ3NlcnZpY2UtY2hpbmEuYWdvcmEuaW9cIl0sUFJPWFlfU0VSVkVSX1RZUEUzOltcImVhc3QtY24ud2VicnRjLWNsb3VkLXByb3h5LnNkLXJ0bi5jb21cIl19KTtsZXQgc089ZnVuY3Rpb24oZSl7cmV0dXJuIGUuVVBEQVRFX0JJVFJBVEVfTElNSVQ9XCJ1cGRhdGVfYml0cmF0ZV9saW1pdFwiLGV9KHt9KTtjbGFzcyBhTyBleHRlbmRzIHh5e2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoKSxGZyh0aGlzLFwib25JQ0VDb25uZWN0aW9uU3RhdGVDaGFuZ2VcIix2b2lkIDApLEZnKHRoaXMsXCJvbkNvbm5lY3Rpb25TdGF0ZUNoYW5nZVwiLHZvaWQgMCksRmcodGhpcyxcIm9uRFRMU1RyYW5zcG9ydFN0YXRlQ2hhbmdlXCIsdm9pZCAwKSxGZyh0aGlzLFwib25EVExTVHJhbnNwb3J0RXJyb3JcIix2b2lkIDApLEZnKHRoaXMsXCJvbklDRVRyYW5zcG9ydFN0YXRlQ2hhbmdlXCIsdm9pZCAwKSxGZyh0aGlzLFwib25GaXJzdEF1ZGlvUmVjZWl2ZWRcIix2b2lkIDApLEZnKHRoaXMsXCJvbkZpcnN0VmlkZW9SZWNlaXZlZFwiLHZvaWQgMCksRmcodGhpcyxcIm9uRmlyc3RBdWRpb0RlY29kZWRcIix2b2lkIDApLEZnKHRoaXMsXCJvbkZpcnN0VmlkZW9EZWNvZGVkXCIsdm9pZCAwKSxGZyh0aGlzLFwib25GaXJzdFZpZGVvRGVjb2RlZFRpbWVvdXRcIix2b2lkIDApLEZnKHRoaXMsXCJvblNlbGVjdGVkTG9jYWxDYW5kaWRhdGVDaGFuZ2VkXCIsdm9pZCAwKSxGZyh0aGlzLFwib25TZWxlY3RlZFJlbW90ZUNhbmRpZGF0ZUNoYW5nZWRcIix2b2lkIDApLEZnKHRoaXMsXCJnZXRMb2NhbFZpZGVvU3RhdHNcIix2b2lkIDApfX1jbGFzcyBjTyBleHRlbmRzIGFPe2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoZSx0KSxGZyh0aGlzLFwiZXN0YWJsaXNoUHJvbWlzZVwiLHZvaWQgMCl9fWxldCBkTz1mdW5jdGlvbihlKXtyZXR1cm4gZS5WSURFTz1cInZpZGVvXCIsZS5BVURJTz1cImF1ZGlvXCIsZX0oe30pLGxPPWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuVURQPTBdPVwiVURQXCIsZVtlLlRDUD0xXT1cIlRDUFwiLGVbZS5SRUxBWT0yXT1cIlJFTEFZXCIsZX0oe30pLHVPPWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuRklSU1RfQ09OTkVDVElPTj0wXT1cIkZJUlNUX0NPTk5FQ1RJT05cIixlW2UuVENQX1JFU1RBUlQ9MV09XCJUQ1BfUkVTVEFSVFwiLGVbZS5SRUxBWV9SRVNUQVJUPTJdPVwiUkVMQVlfUkVTVEFSVFwiLGVbZS5PTERfRklSU1RfQ09OTkVDVElPTj0xMF09XCJPTERfRklSU1RfQ09OTkVDVElPTlwiLGVbZS5PTERfUkVTVEFSVD0xMV09XCJPTERfUkVTVEFSVFwiLGVbZS5ESVNDT05ORUNURURfT1JfRkFJTEVEPTIwXT1cIkRJU0NPTk5FQ1RFRF9PUl9GQUlMRURcIixlfSh7fSksaE89ZnVuY3Rpb24oZSl7cmV0dXJuIGUuTG9jYWxWaWRlb1RyYWNrPVwidmlkZW9UcmFja1wiLGUuTG9jYWxBdWRpb1RyYWNrPVwiYXVkaW9UcmFja1wiLGUuTG9jYWxWaWRlb0xvd1RyYWNrPVwidmlkZW9Mb3dUcmFja1wiLGV9KHt9KSxwTz1mdW5jdGlvbihlKXtyZXR1cm4gZS5OZXc9XCJuZXdcIixlLkNvbm5lY3RlZD1cImNvbm5lY3RlZFwiLGUuUmVjb25uZWN0aW5nPVwicmVjb25uZWN0aW5nXCIsZS5EaXNjb25uZWN0ZWQ9XCJkaXNjb25uZWN0ZWRcIixlfSh7fSksX089ZnVuY3Rpb24oZSl7cmV0dXJuIGUuU3RhdGVDaGFuZ2U9XCJzdGF0ZUNoYW5nZVwiLGUuSWNlQ29ubmVjdGlvblN0YXRlQ2hhbmdlPVwiaWNlQ29ubmVjdGlvblN0YXRlQ2hhbmdlXCIsZS5SZXF1ZXN0TXV0ZUxvY2FsPVwicmVxdWVzdE11dGVMb2NhbFwiLGUuUmVxdWVzdFVubXV0ZUxvY2FsPVwicmVxdWVzdFVubXV0ZUxvY2FsXCIsZS5SZXF1ZXN0UmVQdWJsaXNoPVwicmVxdWVzdFJlUHVibGlzaFwiLGUuUmVxdWVzdFJlUHVibGlzaERhdGFDaGFubmVsPVwicmVxdWVzdFJlUHVibGlzaERhdGFDaGFubmVsXCIsZS5SZXF1ZXN0UmVTdWJzY3JpYmU9XCJyZXF1ZXN0UmVTdWJzY3JpYmVcIixlLlJlcXVlc3RVcGxvYWRTdGF0cz1cInJlcXVlc3RVcGxvYWRTdGF0c1wiLGUuUmVxdWVzdFVwbG9hZD1cInJlcXVlc3RVcGxvYWRcIixlLk1lZGlhUmVjb25uZWN0U3RhcnQ9XCJNZWRpYVJlY29ubmVjdFN0YXJ0XCIsZS5NZWRpYVJlY29ubmVjdEVuZD1cIk1lZGlhUmVjb25uZWN0RW5kXCIsZS5OZWVkU2lnbmFsUlRUPVwiTmVlZFNpZ25hbFJUVFwiLGUuUmVxdWVzdFJlc3RhcnRJQ0U9XCJSZXF1ZXN0UmVzdGFydEljZVwiLGUuUGVlckNvbm5lY3Rpb25TdGF0ZUNoYW5nZT1cIlBlZXJDb25uZWN0aW9uU3RhdGVDaGFuZ2VcIixlLlJlcXVlc3RSZWNvbm5lY3Q9XCJSZXF1ZXN0UmVjb25uZWN0XCIsZS5SZXF1ZXN0UmVjb25uZWN0UEM9XCJSZXF1ZXN0UmVjb25uZWN0UENcIixlLlJlcXVlc3RVbnB1Ymxpc2hGb3JSZWNvbm5lY3RQQz1cIlJlcXVlc3RVbnB1Ymxpc2hGb3JSZWNvbm5lY3RQQ1wiLGUuUDJQTG9zdD1cIlAyUExvc3RcIixlLlVwZGF0ZVZpZGVvRW5jb2Rlcj1cIlVwZGF0ZVZpZGVvRW5jb2RlclwiLGUuQ29ubmVjdGlvblR5cGVDaGFuZ2U9XCJDb25uZWN0aW9uVHlwZUNoYW5nZVwiLGUuUmVxdWVzdExvd1N0cmVhbVBhcmFtZXRlcj1cIlJlcXVlc3RMb3dTdHJlYW1QYXJhbWV0ZXJcIixlLlF1ZXJ5Q2xpZW50Q29ubmVjdGlvblN0YXRlPVwiUXVlcnlDbGllbnRDb25uZWN0aW9uU3RhdGVcIixlLkxvY2FsQ2FuZGlkYXRlPVwiTG9jYWxDYW5kaWRhdGVcIixlLlJlcXVlc3RQMlBNdXRlTG9jYWw9XCJyZXF1ZXN0UDJQTXV0ZUxvY2FsXCIsZS5SZXF1ZXN0UDJQVW5QdWJsaXNoPVwiUmVxdWVzdFAyUFVuUHVibGlzaFwiLGUuUmVxdWVzdFAyUFVubXV0ZVJlbW90ZT1cIlJlcXVlc3RQMlBVbm11dGVSZW1vdGVcIixlLlJlcXVlc3RQMlBNdXRlUmVtb3RlPVwiUmVxdWVzdFAyUE11dGVSZW1vdGVcIixlLlJlcXVlc3RQMlBSZXN0YXJ0SUNFPVwiUmVxdWVzdFAyUFJlc3RhcnRJQ0VcIixlfSh7fSksRU89ZnVuY3Rpb24oZSl7cmV0dXJuIGUuQ09OTkVDVElORz1cIkNPTk5FQ1RJTkdcIixlLlJFQ09OTkVDVElORz1cIlJFQ09OTkVDVElOR1wiLGUuQ09OTkVDVEVEPVwiQ09OTkVDVEVEXCIsZS5DTE9TRUQ9XCJDTE9TRURcIixlfSh7fSksZk89ZnVuY3Rpb24oZSl7cmV0dXJuIGVbZS5DT05ORUNUX0FQPTBdPVwiQ09OTkVDVF9BUFwiLGVbZS5BUF9DT05ORUNURUQ9MV09XCJBUF9DT05ORUNURURcIixlW2UuQ09OTkVDVF9XT1JLRVJfTUFOQUdFUj0yXT1cIkNPTk5FQ1RfV09SS0VSX01BTkFHRVJcIixlW2UuV09SS0VSX01BTkFHRVJfQ09OTkVDVEVEPTNdPVwiV09SS0VSX01BTkFHRVJfQ09OTkVDVEVEXCIsZVtlLkdFVF9XT1JLRVJfTUFOQUdFUl9SRVNQT05TRT00XT1cIkdFVF9XT1JLRVJfTUFOQUdFUl9SRVNQT05TRVwiLGVbZS5DT05ORUNUX1dPUktFUj01XT1cIkNPTk5FQ1RfV09SS0VSXCIsZVtlLldPUktFUl9DT05ORUNURUQ9Nl09XCJXT1JLRVJfQ09OTkVDVEVEXCIsZVtlLkNMT1NFRD03XT1cIkNMT1NFRFwiLGV9KHt9KSxtTz1mdW5jdGlvbihlKXtyZXR1cm4gZS5DT05ORUNUSU9OX1NUQVRFX0NIQU5HRT1cImNvbm5lY3Rpb24tc3RhdGUtY2hhbmdlXCIsZS5TVEFURV9DSEFOR0U9XCJzdGF0ZS1jaGFuZ2VcIixlLklOU1BFQ1RfUkVTVUxUPVwiaW5zcGVjdC1yZXN1bHRcIixlLkNMSUVOVF9MT0NBTF9WSURFT19UUkFDSz1cImNsaWVudC1sb2NhbC12aWRlby10cmFja1wiLGUuUkVRVUVTVF9ORVdfV09SS0VSX1VSTD1cInJlcXVlc3QtbmV3LXdvcmtlci11cmxcIixlfSh7fSksVE89ZnVuY3Rpb24oZSl7cmV0dXJuIGUuQ09OTkVDVEVEPVwidHJhbnNtaXR0ZXI6Y29ubmVjdGVkXCIsZS5SRUNPTk5FQ1RJTkc9XCJ0cmFuc21pdHRlcjpyZWNvbm5lY3RpbmdcIixlLldJTExfUkVDT05ORUNUPVwidHJhbnNtaXR0ZXI6d2lsbF9yZWNvbm5lY3RcIixlLkNMT1NFRD1cInRyYW5zbWl0dGVyOmNsb3NlZFwiLGUuRkFJTEVEPVwidHJhbnNtaXR0ZXI6ZmFpbGVkXCIsZS5PTl9NRVNTQUdFPVwidHJhbnNtaXR0ZXI6b25fbWVzc2FnZVwiLGUuUkVRVUVTVF9ORVdfVVJMUz1cInRyYW5zbWl0dGVyOnJlcXVlc3RfbmV3X3VybHNcIixlLlJFQ09OTkVDVF9XQUlUVElOR19GSU5JU0g9XCJ0cmFuc21pdHRlcjpyZWNvbm5lY3Rfd2FpdHRpbmdfZmluaXNoXCIsZS5SRUNPTk5FQ1RfQ1JFQVRFX0NPTk5FQ1RJT049XCJ0cmFuc21pdHRlcjpyZWNvbm5lY3RfY3JlYXRlX2Nvbm5lY3Rpb25cIixlLk9OX1RPS0VOX1BSSVZJTEVHRV9ESURfRVhQSVJFPVwidHJhbnNtaXR0ZXI6b25fdG9rZW5fcHJpdmlsZWdlX2RpZF9leHBpcmVcIixlLlRPX0NPTk5FQ1RfREFUQUNIQU5ORUw9XCJ0cmFuc21pdHRlcjp0b19jb25uZWN0X2RhdGFjaGFubmVsXCIsZS5GQUlMQkFDSz1cInRyYW5zbWl0dGVyOmZhaWxiYWNrXCIsZS5QUkVfQ09OTkVDVF9QQz1cInRyYW5zbWl0dGVyOnByZV9jb25uZWN0X3BjXCIsZX0oe30pLFNPPWZ1bmN0aW9uKGUpe3JldHVybiBlLkNBTUVSQV9DSEFOR0VEPVwiY2FtZXJhLWNoYW5nZWRcIixlLk1JQ1JPUEhPTkVfQ0hBTkdFRD1cIm1pY3JvcGhvbmUtY2hhbmdlZFwiLGUuUExBWUJBQ0tfREVWSUNFX0NIQU5HRUQ9XCJwbGF5YmFjay1kZXZpY2UtY2hhbmdlZFwiLGUuQVVESU9fQVVUT1BMQVlfRkFJTEVEPVwiYXVkaW8tYXV0b3BsYXktZmFpbGVkXCIsZS5BVVRPUExBWV9GQUlMRUQ9XCJhdXRvcGxheS1mYWlsZWRcIixlLkFVRElPX0NPTlRFWFRfU1RBVEVfQ0hBTkdFRD1cImF1ZGlvLWNvbnRleHQtc3RhdGUtY2hhbmdlZFwiLGUuU0VDVVJJVFlfUE9MSUNZX1ZJT0xBVElPTj1cInNlY3VyaXR5LXBvbGljeS12aW9sYXRpb25cIixlfSh7fSksZ089ZnVuY3Rpb24oZSl7cmV0dXJuIGUuQ09OTkVDVElORz1cIkNPTk5FQ1RJTkdcIixlLlJFQ09OTkVDVElORz1cIlJFQ09OTkVDVElOR1wiLGUuQ09OTkVDVEVEPVwiQ09OTkVDVEVEXCIsZS5DTE9TRUQ9XCJDTE9TRURcIixlfSh7fSksUk89ZnVuY3Rpb24oZSl7cmV0dXJuIGUuQ09OTkVDVElPTl9TVEFURV9DSEFOR0U9XCJjb25uZWN0aW9uLXN0YXRlLWNoYW5nZVwiLGUuU1RBVEVfQ0hBTkdFPVwic3RhdGUtY2hhbmdlXCIsZS5JTlNQRUNUX1JFU1VMVD1cImluc3BlY3QtcmVzdWx0XCIsZS5DTElFTlRfTE9DQUxfVklERU9fVFJBQ0s9XCJjbGllbnQtbG9jYWwtdmlkZW8tdHJhY2tcIixlLlJFUVVFU1RfTkVXX1dPUktFUl9VUkw9XCJyZXF1ZXN0LW5ldy13b3JrZXItdXJsXCIsZX0oe30pLENPPWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuQ09OTkVDVF9BUD0wXT1cIkNPTk5FQ1RfQVBcIixlW2UuQVBfQ09OTkVDVEVEPTFdPVwiQVBfQ09OTkVDVEVEXCIsZVtlLkNPTk5FQ1RfV09SS0VSX01BTkFHRVI9Ml09XCJDT05ORUNUX1dPUktFUl9NQU5BR0VSXCIsZVtlLldPUktFUl9NQU5BR0VSX0NPTk5FQ1RFRD0zXT1cIldPUktFUl9NQU5BR0VSX0NPTk5FQ1RFRFwiLGVbZS5HRVRfV09SS0VSX01BTkFHRVJfUkVTUE9OU0U9NF09XCJHRVRfV09SS0VSX01BTkFHRVJfUkVTUE9OU0VcIixlW2UuQ09OTkVDVF9XT1JLRVI9NV09XCJDT05ORUNUX1dPUktFUlwiLGVbZS5XT1JLRVJfQ09OTkVDVEVEPTZdPVwiV09SS0VSX0NPTk5FQ1RFRFwiLGVbZS5DTE9TRUQ9N109XCJDTE9TRURcIixlfSh7fSksSU89ZnVuY3Rpb24oZSl7cmV0dXJuIGUuQ0FMTD1cImNhbGxcIixlLkNBTkRJREFURT1cImNhbmRpZGF0ZVwiLGUuUFVCTElTSD1cInB1Ymxpc2hcIixlLlVOUFVCTElTSD1cInVucHVibGlzaFwiLGUuQ09OVFJPTD1cImNvbnRyb2xcIixlLlJFU1RBUlRfSUNFPVwicmVzdGFydF9pY2VcIixlLkFDSz1cImFja1wiLGUuUkVTUE9OU0U9XCJyZXNwb25zZVwiLGUuSk9JTj1cImpvaW5cIixlLkNIRUNLPVwiY2hlY2tcIixlfSh7fSksdk89ZnVuY3Rpb24oZSl7cmV0dXJuIGUuQUJPUlQ9XCJhYm9ydFwiLGV9KHt9KSx5Tz1mdW5jdGlvbihlKXtyZXR1cm4gZS5NVVRFX0xPQ0FMX0FVRElPPVwibXV0ZV9sb2NhbF9hdWRpb1wiLGUuTVVURV9MT0NBTF9WSURFTz1cIm11dGVfbG9jYWxfdmlkZW9cIixlLlVOTVVURV9MT0NBTF9BVURJTz1cInVubXV0ZV9sb2NhbF9hdWRpb1wiLGUuVU5NVVRFX0xPQ0FMX1ZJREVPPVwidW5tdXRlX2xvY2FsX3ZpZGVvXCIsZX0oe30pLEFPPWZ1bmN0aW9uKGUpe3JldHVybiBlLlAyUF9UT0tFTl9USU1FT1VUPVwicDJwX3Rva2VuX3RpbWVvdXRcIixlLlAyUF9UT0tFTl9DSEFOR0VEPVwicDJwX3Rva2VuX2NoYW5nZWRcIixlfSh7fSk7Y29uc3QgYk89e1t5dy5BQ0NFU1NfUE9JTlRdOntbd3cuTk9fRkxBR19TRVRdOntkZXNjOlwiZmxhZyBpcyB6ZXJvXCIscmV0cnk6ITF9LFt3dy5GTEFHX1NFVF9CVVRfRU1QVFldOntkZXNjOlwiZmxhZyBpcyBlbXB0eVwiLHJldHJ5OiExfSxbd3cuSU5WQUxJRF9GQUxHX1NFVF06e2Rlc2M6XCJpbnZhbGlkIGZsYWdcIixyZXRyeTohMX0sW3d3LkZMQUdfU0VUX0JVVF9OT19SRV06e2Rlc2M6XCJmbGFnIHNldCB1bmlsYnMgYnV0IG5vIHJlcXVlc3RcIixyZXRyeTohMX0sW3d3LklOVkFMSURfU0VSVklDRV9JRF06e2Rlc2M6XCJpbnZhbGlkIHNlcnZpY2UgaWRcIixyZXRyeTohMX0sW3d3Lk5PX1NFUlZJQ0VfQVZBSUxBQkxFXTp7ZGVzYzpcIm5vIHNlcnZpY2UgYXZhaWxhYmxlXCIscmV0cnk6ITB9LFt3dy5OT19TRVJWSUNFX0FWQUlMQUJMRV9QMlBdOntkZXNjOlwibm8gdW5pbGJzIHAycCBzZXJ2aWNlIGF2YWlsYWJsZVwiLHJldHJ5OiEwfSxbd3cuTk9fU0VSVklDRV9BVkFJTEFCTEVfVk9JQ0VdOntkZXNjOlwibm8gdW5pbGJzIHZvaWNlIHNlcnZpY2UgYXZhaWxhYmxlXCIscmV0cnk6ITB9LFt3dy5OT19TRVJWSUNFX0FWQUlMQUJMRV9XRUJSVENdOntkZXNjOlwibm8gdW5pbGJzIHdlYnJ0YyBzZXJ2aWNlIGF2YWlsYWJsZVwiLHJldHJ5OiEwfSxbd3cuTk9fU0VSVklDRV9BVkFJTEFCTEVfQ0RTXTp7ZGVzYzpcIm5vIGNkcyBzZXJ2aWNlIGF2YWlsYWJsZVwiLHJldHJ5OiEwfSxbd3cuTk9fU0VSVklDRV9BVkFJTEFCTEVfQ0ROXTp7ZGVzYzpcIm5vIGNkbiBkaXNwYXRjaGVyIHNlcnZpY2UgYXZhaWxhYmxlXCIscmV0cnk6ITB9LFt3dy5OT19TRVJWSUNFX0FWQUlMQUJMRV9URFNdOntkZXNjOlwibm8gdGRzIHNlcnZpY2UgYXZhaWxhYmxlXCIscmV0cnk6ITB9LFt3dy5OT19TRVJWSUNFX0FWQUlMQUJMRV9SRVBPUlRdOntkZXNjOlwibm8gdW5pbGJzIHJlcG9ydCBzZXJ2aWNlIGF2YWlsYWJsZVwiLHJldHJ5OiEwfSxbd3cuTk9fU0VSVklDRV9BVkFJTEFCTEVfQVBQX0NFTlRFUl06e2Rlc2M6XCJubyBhcHAgY2VudGVyIHNlcnZpY2UgYXZhaWxhYmxlXCIscmV0cnk6ITB9LFt3dy5OT19TRVJWSUNFX0FWQUlMQUJMRV9FTlYwXTp7ZGVzYzpcIm5vIHVuaWxicyBzaWcgZW52MCBzZXJ2aWNlIGF2YWlsYWJsZVwiLHJldHJ5OiEwfSxbd3cuTk9fU0VSVklDRV9BVkFJTEFCTEVfVk9FVF06e2Rlc2M6XCJubyB1bmlsYnMgdm9ldCBzZXJ2aWNlIGF2YWlsYWJsZVwiLHJldHJ5OiEwfSxbd3cuTk9fU0VSVklDRV9BVkFJTEFCTEVfU1RSSU5HX1VJRF06e2Rlc2M6XCJubyBzdHJpbmcgdWlkIHNlcnZpY2UgYXZhaWxhYmxlXCIscmV0cnk6ITB9LFt3dy5OT19TRVJWSUNFX0FWQUlMQUJMRV9XRUJSVENfVU5JTEJTXTp7ZGVzYzpcIm5vIHdlYnJ0YyB1bmlsYnMgc2VydmljZSBhdmFpbGFibGVcIixyZXRyeTohMH19LFt5dy5VTklMQlNdOntbYncuSU5WQUxJRF9WRU5ET1JfS0VZXTp7ZGVzYzpcImludmFsaWQgdmVuZG9yIGtleSwgY2FuIG5vdCBmaW5kIGFwcGlkXCIscmV0cnk6ITF9LFtidy5JTlZBTElEX0NIQU5ORUxfTkFNRV06e2Rlc2M6XCJpbnZhbGlkIGNoYW5uZWwgbmFtZVwiLHJldHJ5OiExfSxbYncuSU5URVJOQUxfRVJST1JdOntkZXNjOlwidW5pbGJzIGludGVybmFsIGVycm9yXCIscmV0cnk6ITF9LFtidy5OT19BVVRIT1JJWkVEXTp7ZGVzYzpcImludmFsaWQgdG9rZW4sIGF1dGhvcml6ZWQgZmFpbGVkXCIscmV0cnk6ITF9LFtidy5EWU5BTUlDX0tFWV9USU1FT1VUXTp7ZGVzYzpcImR5bmFtaWMga2V5IG9yIHRva2VuIHRpbWVvdXRcIixyZXRyeTohMX0sW2J3Lk5PX0FDVElWRV9TVEFUVVNdOntkZXNjOlwibm8gYWN0aXZlIHN0YXR1c1wiLHJldHJ5OiExfSxbYncuRFlOQU1JQ19LRVlfRVhQSVJFRF06e2Rlc2M6XCJkeW5hbWljIGtleSBleHBpcmVkXCIscmV0cnk6ITF9LFtidy5TVEFUSUNfVVNFX0RZTkFNSUNfS0VZXTp7ZGVzYzpcInN0YXRpYyB1c2UgZHluYW1pYyBrZXlcIixyZXRyeTohMX0sW2J3LkRZTkFNSUNfVVNFX1NUQVRJQ19LRVldOntkZXNjOlwiZHluYW1pYyB1c2Ugc3RhdGljIGtleVwiLHJldHJ5OiExfSxbYncuVVNFUl9PVkVSTE9BRF06e2Rlc2M6XCJhbW91bnQgb2YgdXNlcnMgb3ZlciBsb2FkXCIscmV0cnk6ITF9LFtidy5GT1JCSURERU5fUkVHSU9OXTp7ZGVzYzpcInRoZSByZXF1ZXN0IGlzIGZvcmJpZGRlbiBpbiB0aGlzIGFyZWFcIixyZXRyeTohMX0sW2J3LkNBTk5PVF9NRUVUX0FSRUFfREVNQU5EXTp7ZGVzYzpcInVuYWJsZSB0byBhbGxvY2F0ZSBzZXJ2aWNlcyBpbiB0aGlzIGFyZWFcIixyZXRyeTohMX19LFt5dy5TVFJJTkdfVUlEX0FMTE9DQVRPUl06e1tBdy5JSUlFR0FMX0FQUElEXTp7ZGVzYzpcImludmFsaWQgYXBwaWRcIixyZXRyeTohMX0sW0F3LklJSUVHQUxfVUlEXTp7ZGVzYzpcImludmFsaWQgc3RyaW5nIHVpZFwiLHJldHJ5OiExfSxbQXcuSU5URVJOQUxfRVJST1JdOntkZXNjOlwic3RyaW5nIHVpZCBhbGxvY2F0b3IgaW50ZXJuYWwgZXJyb3JcIixyZXRyeTohMH19fTtmdW5jdGlvbiB3TyhlKXtjb25zdCB0PWJPW01hdGguZmxvb3IoZS8xZTQpXTtpZighdClyZXR1cm57ZGVzYzpcInVua25vd24gZXJyb3JcIixyZXRyeTohMX07Y29uc3QgaT10W2UlMWU0XTtpZighaSl7aWYoTWF0aC5mbG9vcihlLzFlNCk9PT15dy5BQ0NFU1NfUE9JTlQpe2NvbnN0IHQ9ZSUxZTQ7aWYoXCIxXCI9PT10LnRvU3RyaW5nKClbMF0pcmV0dXJue2Rlc2M6ZS50b1N0cmluZygpLHJldHJ5OiExfTtpZihcIjJcIj09PXQudG9TdHJpbmcoKVswXSlyZXR1cm57ZGVzYzplLnRvU3RyaW5nKCkscmV0cnk6ITB9fXJldHVybntkZXNjOlwidW5rbm93biBlcnJvclwiLHJldHJ5OiExfX1yZXR1cm4gaX1jb25zdCBPTz17W093LktfVElNRVNUQU1QX0VYUElSRURdOntkZXNjOlwiS19USU1FU1RBTVBfRVhQSVJFRFwiLGFjdGlvbjpcImZhaWxlZFwifSxbT3cuS19DSEFOTkVMX1BFUk1JU1NJT05fSU5WQUxJRF06e2Rlc2M6XCJLX0NIQU5ORUxfUEVSTUlTU0lPTl9JTlZBTElEXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5LX0NFUlRJRklDQVRFX0lOVkFMSURdOntkZXNjOlwiS19DRVJUSUZJQ0FURV9JTlZBTElEXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5LX0NIQU5ORUxfTkFNRV9FTVBUWV06e2Rlc2M6XCJLX0NIQU5ORUxfTkFNRV9FTVBUWVwiLGFjdGlvbjpcImZhaWxlZFwifSxbT3cuS19DSEFOTkVMX05PVF9GT1VORF06e2Rlc2M6XCJLX0NIQU5ORUxfTk9UX0ZPVU5EXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5LX1RJQ0tFVF9JTlZBTElEXTp7ZGVzYzpcIktfVElDS0VUX0lOVkFMSURcIixhY3Rpb246XCJmYWlsZWRcIn0sW093LktfQ0hBTk5FTF9DT05GTElDVEVEXTp7ZGVzYzpcIktfQ0hBTk5FTF9DT05GTElDVEVEXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5LX1NFUlZJQ0VfTk9UX1JFQURZXTp7ZGVzYzpcIktfU0VSVklDRV9OT1RfUkVBRFlcIixhY3Rpb246XCJ0cnlOZXh0XCJ9LFtPdy5LX1NFUlZJQ0VfVE9PX0hFQVZZXTp7ZGVzYzpcIktfU0VSVklDRV9UT09fSEVBVllcIixhY3Rpb246XCJ0cnlOZXh0XCJ9LFtPdy5LX1VJRF9CQU5ORURdOntkZXNjOlwiS19VSURfQkFOTkVEXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5LX0lQX0JBTk5FRF06e2Rlc2M6XCJLX0lQX0JBTk5FRFwiLGFjdGlvbjpcImZhaWxlZFwifSxbT3cuS19BVVRPX1JFQkFMQU5DRV06e2Rlc2M6XCJrX0FVVE9fUkVCQUxBTkNFXCIsYWN0aW9uOlwicmVjb3ZlclwifSxbT3cuRVJSX0lOVkFMSURfVkVORE9SX0tFWV06e2Rlc2M6XCJFUlJfSU5WQUxJRF9WRU5ET1JfS0VZXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5FUlJfSU5WQUxJRF9DSEFOTkVMX05BTUVdOntkZXNjOlwiRVJSX0lOVkFMSURfQ0hBTk5FTF9OQU1FXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5XQVJOX05PX0FWQUlMQUJMRV9DSEFOTkVMXTp7ZGVzYzpcIldBUk5fTk9fQVZBSUxBQkxFX0NIQU5ORUxcIixhY3Rpb246XCJmYWlsZWRcIn0sW093LldBUk5fTE9PS1VQX0NIQU5ORUxfVElNRU9VVF06e2Rlc2M6XCJXQVJOX0xPT0tVUF9DSEFOTkVMX1RJTUVPVVRcIixhY3Rpb246XCJ0cnlOZXh0XCJ9LFtPdy5XQVJOX0xPT0tVUF9DSEFOTkVMX1JFSkVDVEVEXTp7ZGVzYzpcIldBUk5fTE9PS1VQX0NIQU5ORUxfUkVKRUNURURcIixhY3Rpb246XCJmYWlsZWRcIn0sW093LldBUk5fT1BFTl9DSEFOTkVMX1RJTUVPVVRdOntkZXNjOlwiV0FSTl9PUEVOX0NIQU5ORUxfVElNRU9VVFwiLGFjdGlvbjpcInRyeU5leHRcIn0sW093LldBUk5fT1BFTl9DSEFOTkVMX1JFSkVDVEVEXTp7ZGVzYzpcIldBUk5fT1BFTl9DSEFOTkVMX1JFSkVDVEVEXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5XQVJOX1JFUVVFU1RfREVGRVJSRURdOntkZXNjOlwiV0FSTl9SRVFVRVNUX0RFRkVSUkVEXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5FUlJfRFlOQU1JQ19LRVlfVElNRU9VVF06e2Rlc2M6XCJFUlJfRFlOQU1JQ19LRVlfVElNRU9VVFwiLGFjdGlvbjpcImZhaWxlZFwifSxbT3cuRVJSX05PX0FVVEhPUklaRURdOntkZXNjOlwiRVJSX05PX0FVVEhPUklaRURcIixhY3Rpb246XCJmYWlsZWRcIn0sW093LkVSUl9WT01fU0VSVklDRV9VTkFWQUlMQUJMRV06e2Rlc2M6XCJFUlJfVk9NX1NFUlZJQ0VfVU5BVkFJTEFCTEVcIixhY3Rpb246XCJ0cnlOZXh0XCJ9LFtPdy5FUlJfTk9fQ0hBTk5FTF9BVkFJTEFCTEVfQ09ERV06e2Rlc2M6XCJFUlJfTk9fQ0hBTk5FTF9BVkFJTEFCTEVfQ09ERVwiLGFjdGlvbjpcImZhaWxlZFwifSxbT3cuRVJSX01BU1RFUl9WT0NTX1VOQVZBSUxBQkxFXTp7ZGVzYzpcIkVSUl9NQVNURVJfVk9DU19VTkFWQUlMQUJMRVwiLGFjdGlvbjpcInRyeU5leHRcIn0sW093LkVSUl9JTlRFUk5BTF9FUlJPUl06e2Rlc2M6XCJFUlJfSU5URVJOQUxfRVJST1JcIixhY3Rpb246XCJ0cnlOZXh0XCJ9LFtPdy5FUlJfTk9fQUNUSVZFX1NUQVRVU106e2Rlc2M6XCJFUlJfTk9fQUNUSVZFX1NUQVRVU1wiLGFjdGlvbjpcImZhaWxlZFwifSxbT3cuRVJSX0lOVkFMSURfVUlEXTp7ZGVzYzpcIkVSUl9JTlZBTElEX1VJRFwiLGFjdGlvbjpcImZhaWxlZFwifSxbT3cuRVJSX0RZTkFNSUNfS0VZX0VYUElSRURdOntkZXNjOlwiRVJSX0RZTkFNSUNfS0VZX0VYUElSRURcIixhY3Rpb246XCJmYWlsZWRcIn0sW093LkVSUl9TVEFUSUNfVVNFX0RZQU5NSUNfS0VdOntkZXNjOlwiRVJSX1NUQVRJQ19VU0VfRFlBTk1JQ19LRVwiLGFjdGlvbjpcImZhaWxlZFwifSxbT3cuRVJSX0RZTkFNSUNfVVNFX1NUQVRJQ19LRV06e2Rlc2M6XCJFUlJfRFlOQU1JQ19VU0VfU1RBVElDX0tFXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5FUlJfTk9fVk9DU19BVkFJTEFCTEVdOntkZXNjOlwiRVJSX05PX1ZPQ1NfQVZBSUxBQkxFXCIsYWN0aW9uOlwidHJ5TmV4dFwifSxbT3cuRVJSX05PX1ZPU19BVkFJTEFCTEVdOntkZXNjOlwiRVJSX05PX1ZPU19BVkFJTEFCTEVcIixhY3Rpb246XCJ0cnlOZXh0XCJ9LFtPdy5FUlJfSk9JTl9DSEFOTkVMX1RJTUVPVVRdOntkZXNjOlwiRVJSX0pPSU5fQ0hBTk5FTF9USU1FT1VUXCIsYWN0aW9uOlwidHJ5TmV4dFwifSxbT3cuRVJSX0pPSU5fQllfTVVMVElfSVBdOntkZXNjOlwiRVJSX0pPSU5fQllfTVVMVElfSVBcIixhY3Rpb246XCJyZWNvdmVyXCJ9LFtPdy5FUlJfTk9UX0pPSU5FRF06e2Rlc2M6XCJFUlJfTk9UX0pPSU5FRFwiLGFjdGlvbjpcImZhaWxlZFwifSxbT3cuRVJSX1JFUEVBVF9KT0lOX1JFUVVFU1RdOntkZXNjOlwiRVJSX1JFUEVBVF9KT0lOX1JFUVVFU1RcIixhY3Rpb246XCJxdWl0XCJ9LFtPdy5FUlJfUkVQRUFUX0pPSU5fQ0hBTk5FTF06e2Rlc2M6XCJFUlJfUkVQRUFUX0pPSU5fQ0hBTk5FTFwiLGFjdGlvbjpcInF1aXRcIn0sW093LkVSUl9JTlZBTElEX1NUUklOR1VJRF06e2Rlc2M6XCJFUlJfSU5WQUxJRF9TVFJJTkdVSURcIixhY3Rpb246XCJmYWlsZWRcIn0sW093LkVSUl9UT09fTUFOWV9VU0VSU106e2Rlc2M6XCJFUlJfVE9PX01BTllfVVNFUlNcIixhY3Rpb246XCJ0cnlOZXh0XCJ9LFtPdy5FUlJfU0VUX0NMSUVOVF9ST0xFX1RJTUVPVVRdOntkZXNjOlwiRVJSX1NFVF9DTElFTlRfUk9MRV9USU1FT1VUXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5FUlJfU0VUX0NMSUVOVF9ST0xFX05PX1BFUk1JU1NJT05dOntkZXNjOlwiRVJSX1NFVF9DTElFTlRfUk9MRV9USU1FT1VUXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5FUlJfU0VUX0NMSUVOVF9ST0xFX0FMUkVBRFlfSU5fVVNFXTp7ZGVzYzpcIkVSUl9TRVRfQ0xJRU5UX1JPTEVfQUxSRUFEWV9JTl9VU0VcIixhY3Rpb246XCJzdWNjZXNzXCJ9LFtPdy5FUlJfUFVCTElTSF9SRVFVRVNUX0lOVkFMSURdOntkZXNjOlwiRVJSX1BVQkxJU0hfUkVRVUVTVF9JTlZBTElEXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5FUlJfU1VCU0NSSUJFX1JFUVVFU1RfSU5WQUxJRF06e2Rlc2M6XCJFUlJfU1VCU0NSSUJFX1JFUVVFU1RfSU5WQUxJRFwiLGFjdGlvbjpcImZhaWxlZFwifSxbT3cuRVJSX05PVF9TVVBQT1JURURfTUVTU0FHRV06e2Rlc2M6XCJFUlJfTk9UX1NVUFBPUlRFRF9NRVNTQUdFXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5FUlJfSUxMRUFHQUxfUExVR0lOXTp7ZGVzYzpcIkVSUl9JTExFQUdBTF9QTFVHSU5cIixhY3Rpb246XCJmYWlsZWRcIn0sW093LklMTEVHQUxfQ0xJRU5UX1JPTEVfTEVWRUxdOntkZXNjOlwiSUxMRUdBTF9DTElFTlRfUk9MRV9MRVZFTFwiLGFjdGlvbjpcImZhaWxlZFwifSxbT3cuRVJSX1JFSk9JTl9UT0tFTl9JTlZBTElEXTp7ZGVzYzpcIkVSUl9SRUpPSU5fVE9LRU5fSU5WQUxJRFwiLGFjdGlvbjpcImZhaWxlZFwifSxbT3cuRVJSX1JFSk9JTl9VU0VSX05PVF9KT0lORURdOntkZXNjOlwiRVJSX1JFSk9JTl9OT1RfSk9JTkVEXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5FUlJfSU5WQUxJRF9PUFRJT05BTF9JTkZPXTp7ZGVzYzpcIkVSUl9JTlZBTElEX09QVElPTkFMX0lORk9cIixhY3Rpb246XCJxdWl0XCJ9LFtPdy5FUlJfVEVTVF9SRUNPVkVSXTp7ZGVzYzpcIkVSUl9URVNUX1JFQ09WRVJcIixhY3Rpb246XCJyZWNvdmVyXCJ9LFtPdy5FUlJfVEVTVF9UUllORVhUXTp7ZGVzYzpcIkVSUl9URVNUX1RSWU5FWFRcIixhY3Rpb246XCJyZWNvdmVyXCJ9LFtPdy5FUlJfVEVTVF9SRVRSWV06e2Rlc2M6XCJFUlJfVEVTVF9SRVRSWVwiLGFjdGlvbjpcInJlY292ZXJcIn0sW093LklMTEVHQUxfQUVTX1BBU1NXT1JEXTp7ZGVzYzpcIkVSUl9URVNUX1JFVFJZXCIsYWN0aW9uOlwiZmFpbGVkXCJ9LFtPdy5FUlJfVE9PX01BTllfQlJPQURDQVNURVJTXTp7ZGVzYzpcIkVSUl9UT09fTUFOWV9CUk9BRENBU1RFUlNcIixhY3Rpb246XCJmYWlsZWRcIn0sW093LkVSUl9UT09fTUFOWV9TVUJTQ1JJQkVSU106e2Rlc2M6XCJFUlJfVE9PX01BTllfU1VCU0NSSUJFUlNcIixhY3Rpb246XCJmYWlsZWRcIn0sW093LkVSUl9MSUNFTlNFX0lMTEVHQUxdOntkZXNjOlwiRVJSX0xJQ0VOU0VfSUxMRUdBTFwiLGFjdGlvbjpcInF1aXRcIn0sW093LkVSUl9MSUNFTlNFX01JU1NJTkddOntkZXNjOlwiRVJSX0xJQ0VOU0VfTUlTU0lOR1wiLGFjdGlvbjpcInF1aXRcIn0sW093LkVSUl9MSUNFTlNFX0VYUElSRURdOntkZXNjOlwiRVJSX0xJQ0VOU0VfRVhQSVJFRFwiLGFjdGlvbjpcInF1aXRcIn0sW093LkVSUl9MSUNFTlNFX01JTlVURVNfRVhDRUVERURdOntkZXNjOlwiRVJSX0xJQ0VOU0VfTUlOVVRFU19FWENFRURFRFwiLGFjdGlvbjpcInF1aXRcIn0sW093LkVSUl9MSUNFTlNFX1BFUklPRF9JTlZBTElEXTp7ZGVzYzpcIkVSUl9MSUNFTlNFX1BFUklPRF9JTlZBTElEXCIsYWN0aW9uOlwicXVpdFwifSxbT3cuRVJSX0xJQ0VOU0VfTVVMVElQTEVfU0RLX1NFUlZJQ0VdOntkZXNjOlwiRVJSX0xJQ0VOU0VfTVVMVElQTEVfU0RLX1NFUlZJQ0VcIixhY3Rpb246XCJxdWl0XCJ9fTtmdW5jdGlvbiBOTyhlKXtjb25zdCB0PU9PW2VdO3JldHVybiB0fHx7ZGVzYzpcIlVOS05PV05fRVJST1JfXCIuY29uY2F0KGUpLGFjdGlvbjpcImZhaWxlZFwifX1mdW5jdGlvbiBETyhlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gUE8oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/RE8oT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6RE8oT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9ZnVuY3Rpb24gTE8oZSl7cmV0dXJuIGUuZXZlcnkoKGU9PmUucmVhZHlTdGF0ZT09PVdlYlNvY2tldC5DTE9TRUR8fGUucmVhZHlTdGF0ZT09PVdlYlNvY2tldC5DTE9TSU5HKSl9ZnVuY3Rpb24ga08oZSx0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gZTtjb25zdHtwcm94eTppLGhvc3Q6bixwb3J0OnJ9PWU7aWYodCl7Y29uc3QgZT1YQShcIkpPSU5fR0FURVdBWV9GQUxMQkFDS19QT1JUXCIpfHw0NDM7cmV0dXJuIDQ0Mz09PWU/XCJ3c3M6Ly9cIi5jb25jYXQobixcIi93cy8/cD1cIikuY29uY2F0KE51bWJlcihyKSsxNTApOlwid3NzOi8vXCIuY29uY2F0KG4sXCI6XCIpLmNvbmNhdChlLFwiL3dzLz9wPVwiKS5jb25jYXQoTnVtYmVyKHIpKzE1MCl9cmV0dXJuIGk/XCJ3c3M6Ly9cIi5jb25jYXQoaSxcIi93cy8/aD1cIikuY29uY2F0KG4sXCImcD1cIikuY29uY2F0KHIpOlwid3NzOi8vXCIuY29uY2F0KG4sXCI6XCIpLmNvbmNhdChyKX1jb25zdCBNTz0vd3NzOlxcL1xcLyguKylcXC93c1xcL1xcP2g9KC4rKSZwPShbMC05XSspXFwvPy8sVU89L3dzczpcXC9cXC8oLispXFwvd3NcXC9cXD9wPShbMC05XSspXFwvPy8seE89L3dzczpcXC9cXC8oLispOihbMC05XSspXFwvPy8sVk89L3dzczpcXC9cXC8oLlteXFwvXSspXFwvPy87bGV0IEZPPTA7Y2xhc3MgQk97Y29uc3RydWN0b3IoZSx0KXtGZyh0aGlzLFwiaWRcIiwwKSxGZyh0aGlzLFwic3RvcmVcIix2b2lkIDApLEZnKHRoaXMsXCJyZWNvcmRJbmRleFwiLHZvaWQgMCksRmcodGhpcyxcIndlYnNvY2tldHNcIixbXSksRmcodGhpcyxcInRyeTQ0M1BvcnREdXJhdGlvblwiLDJlMyksRmcodGhpcyxcImZvcmNlQ2xvc2VXU0R1cmF0aW9uXCIsNWUzKSxGZyh0aGlzLFwidHJ5NDQzUG9ydFRpbWVvdXRcIixudWxsKSxGZyh0aGlzLFwiZm9yY2VDbG9zZVRpbWVvdXRcIixudWxsKSxGZyh0aGlzLFwiaXNUcnk0NDNQb3J0RmFpbGVkXCIsITEpLEZnKHRoaXMsXCJpc05vcm1hbFBvcnRGYWlsZWRcIiwhMSksRmcodGhpcyxcInVzZURvdWJsZURvbWFpblwiLCExKSxGZyh0aGlzLFwidXNlUHJveHlcIiwhMSksRmcodGhpcyxcInN0YXJ0VGltZVwiLERhdGUubm93KCkpLHRoaXMuaWQ9KytGTyx0aGlzLnRyeTQ0M1BvcnREdXJhdGlvbj1YQShcIkpPSU5fR0FURVdBWV9UUllfNDQzUE9SVF9EVVJBVElPTlwiKXx8MmUzLHRoaXMuZm9yY2VDbG9zZVdTRHVyYXRpb249ZXx8NWUzLHRoaXMuc3RvcmU9dH1jbG9zZUFsbFdlYnNvY2tldHMoKXt0aGlzLndlYnNvY2tldHMuZm9yRWFjaCgoZT0+e2Uub25vcGVuPW51bGwsZS5vbmNsb3NlPW51bGwsZS5vbm1lc3NhZ2U9bnVsbCxlLmNsb3NlKCl9KSksdGhpcy53ZWJzb2NrZXRzLmxlbmd0aD0wfWNsZWFyVGltZW91dCgpe3RoaXMuZm9yY2VDbG9zZVRpbWVvdXQmJmNsZWFyVGltZW91dCh0aGlzLmZvcmNlQ2xvc2VUaW1lb3V0KSx0aGlzLnRyeTQ0M1BvcnRUaW1lb3V0JiZjbGVhclRpbWVvdXQodGhpcy50cnk0NDNQb3J0VGltZW91dCl9bG9nZ2VyKCl7dmFyIGU7Y29uc3QgdD1EYXRlLm5vdygpLXRoaXMuc3RhcnRUaW1lO2Zvcih2YXIgaT1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KGkpLHI9MDtyPGk7cisrKW5bcl09YXJndW1lbnRzW3JdO2ZiLmRlYnVnKFwiW2Nob29zZS1iZXN0LXdzIFwiLmNvbmNhdChudWxsPT09KGU9dGhpcy5zdG9yZSl8fHZvaWQgMD09PWU/dm9pZCAwOmUuY2xpZW50SWQsXCIgXCIpLmNvbmNhdCh0aGlzLmlkLFwiXSBcIikuY29uY2F0KHQsXCJtczpcIiksLi4ubil9Y3JlYXRlV2ViU29ja2V0KGUsdCxpKXt0aGlzLmxvZ2dlcihcImNyZWF0ZVdlYlNvY2tldDpcIixlLHtpc1RyeTQ0M1BvcnQ6dCxoYXNUaW1lb3V0RGV0ZWN0aW9uOml9KTtjb25zdCBuPVhBKFwiR0FURVdBWV9ET01BSU5TXCIpLHI9RGF0ZS5ub3coKSxvPVtdLHM9bi5maW5kKCh0PT57dmFyIGk7cmV0dXJuIERuKGk9ZS5ob3N0KS5jYWxsKGksdCl9KSk7c3x8KHRoaXMudXNlRG91YmxlRG9tYWluPSExKTtjb25zdCBhPVtdO2lmKHRoaXMudXNlRG91YmxlRG9tYWluKW4uZm9yRWFjaCgoaT0+e2EucHVzaChrTyhQTyhQTyh7fSxlKSx7fSx7aG9zdDplLmhvc3QucmVwbGFjZShzLGkpfSksdCkpfSkpO2Vsc2V7Y29uc3QgaT1QTyh7fSxlKTtpZih0JiZzKXtjb25zdCBlPW4uZmluZCgoZT0+ZSE9PXMpKTtlJiYoaS5ob3N0PWkuaG9zdC5yZXBsYWNlKHMsZSkpfWEucHVzaChrTyhpLHQpKX10cnl7YS5mb3JFYWNoKChlPT57Y29uc3QgdD1uZXcgV2ViU29ja2V0KGUpO3QuYmluYXJ5VHlwZT1cImFycmF5YnVmZmVyXCIsby5wdXNoKHQpLHRoaXMubG9nZ2VyKFwid3MgaXMgY29ubmVjdGluZzpcIix0LnVybCl9KSl9Y2F0Y2gobil7aWYodGhpcy5sb2dnZXIoXCJ3cyBjcmVhdGUgZmFpbGVkXCIpLG8uZm9yRWFjaCgoZT0+ZS5jbG9zZSgpKSksby5sZW5ndGg9MCx0aGlzLnVzZURvdWJsZURvbWFpbilyZXR1cm4gdGhpcy51c2VEb3VibGVEb21haW49ITEsdGhpcy5jcmVhdGVXZWJTb2NrZXQoZSx0LGkpO2lmKCF0JiY0NDMhPT1OdW1iZXIoZS5wb3J0KSlyZXR1cm4gdGhpcy5jcmVhdGVXZWJTb2NrZXQoZSwhMCxpKTt0aHJvdyBuZXcgeWIoUnkuV1NfRVJSLFwiaW5pdCB3ZWJzb2NrZXQgZmFpbGVkISBFcnJvcjogXCIuY29uY2F0KG4udG9TdHJpbmcoKSkpfWNvbnN0IGM9TXYoKTt0aGlzLnN0b3JlJiZ0aGlzLnN0b3JlLnJlY29yZEpvaW5DaGFubmVsU2VydmljZSh7dXJsczpvLm1hcCgoZT0+ZS51cmwpKSxzZXJ2aWNlOlwiZ2F0ZXdheVwifSx0aGlzLnJlY29yZEluZGV4KSxvLmZvckVhY2goKGU9PntlLm9ub3Blbj0oKT0+e3RoaXMubG9nZ2VyKFwib25vcGVuOiB3cyBcIi5jb25jYXQoZS51cmwsXCIgb3BlbiBjb3N0IFwiKS5jb25jYXQoRGF0ZS5ub3coKS1yLFwibXNcIikpLHRoaXMud2Vic29ja2V0cy5mb3JFYWNoKCh0PT57dCE9PWUmJih0Lm9ub3Blbj1udWxsLHQub25jbG9zZT1udWxsLHQub25tZXNzYWdlPW51bGwsdC5jbG9zZSgpLHRoaXMubG9nZ2VyKFwiY2xvc2UgYmFja3VwIHdlYnNvY2tldDogXCIuY29uY2F0KHQudXJsKSkpfSkpLHRoaXMud2Vic29ja2V0cy5sZW5ndGg9MCxjLnJlc29sdmUoZSl9LGUub25jbG9zZT1pPT57dGhpcy5sb2dnZXIoXCJvbmNsb3NlOiB3cyBcIi5jb25jYXQoZS51cmwsXCIgY2xvc2VkIGNvc3QgXCIpLmNvbmNhdChEYXRlLm5vdygpLXIsXCJtcyBzdGF0ZTogXCIpLmNvbmNhdChlLnJlYWR5U3RhdGUpKSx0P3RoaXMuaXNUcnk0NDNQb3J0RmFpbGVkPUxPKG8pOnRoaXMuaXNOb3JtYWxQb3J0RmFpbGVkPUxPKG8pLHRoaXMubG9nZ2VyKFwiNDQzOiBcIi5jb25jYXQodGhpcy51c2VQcm94eT9cIm5vdCB0cnlcIjp0aGlzLmlzVHJ5NDQzUG9ydEZhaWxlZD9cImZhaWxlZFwiOlwidHJ5aW5nXCIsXCIgNDd4eDogXCIpLmNvbmNhdCh0aGlzLmlzTm9ybWFsUG9ydEZhaWxlZD9cImZhaWxlZFwiOlwidHJ5aW5nXCIpKSwodCYmdGhpcy5pc1RyeTQ0M1BvcnRGYWlsZWR8fCF0JiYodGhpcy5pc1RyeTQ0M1BvcnRGYWlsZWR8fHRoaXMudXNlUHJveHkpJiZ0aGlzLmlzTm9ybWFsUG9ydEZhaWxlZCkmJih0aGlzLmxvZ2dlcihcIm9uY2xvc2U6IGFsbCB3ZWJzb2NrZXQgaXMgY2xvc2VkLCBcIi5jb25jYXQoaS5yZWFzb24pKSxjLnJlamVjdCh7Y29kZTppLmNvZGUscmVhc29uOmVPLkFfUk9VTkRfV1NfRkFJTEVEfSkpfSxlLm9ubWVzc2FnZT10PT50aGlzLmxvZ2dlcihcIlwiLmNvbmNhdChlLnVybCxcIiBvbm1lc3NhZ2U6IFwiKS5jb25jYXQodC5kYXRhKSl9KSksdGhpcy53ZWJzb2NrZXRzLnB1c2goLi4ubyk7cmV0dXJuIGl8fCgoKT0+e2NvbnN0IGk9KCk9Pnt0aGlzLmxvZ2dlcihcIjVzIHRpbWVvdXQgY2xvc2UgdW4tb3BlbnMsIGlzV2Vic29ja2V0IGNyZWF0ZWQ6IFwiLGMuaXNSZXNvbHZlZCksdGhpcy53ZWJzb2NrZXRzLmZvckVhY2goKGU9PmUucmVhZHlTdGF0ZSE9PVdlYlNvY2tldC5PUEVOJiZlLmNsb3NlKCkpKX07aWYodHx8dGhpcy51c2VQcm94eSlyZXR1cm4gdGhpcy5sb2dnZXIoXCJhZGQgNXMgdGltZW91dCBhdCBcIi5jb25jYXQodD9cInRyeS00NDNcIjpcInByb3h5XCIsXCIgY29uZGl0aW9uXCIpKSx0aGlzLmZvcmNlQ2xvc2VUaW1lb3V0PXdpbmRvdy5zZXRUaW1lb3V0KGksdGhpcy5mb3JjZUNsb3NlV1NEdXJhdGlvbik7dGhpcy50cnk0NDNQb3J0VGltZW91dD13aW5kb3cuc2V0VGltZW91dCgoKCk9PntpZih0aGlzLmxvZ2dlcihcIjJzIHRpbWVvdXQsIGlzV2Vic29ja2V0IGNyZWF0ZWQ6IFwiLGMuaXNSZXNvbHZlZCksYy5pc1Jlc29sdmVkKXJldHVybiBpKCk7SHYoKS5vcz09PUZ2Lk1BQ19PUyYmWnYoKSYmaSgpLHRoaXMuY3JlYXRlV2ViU29ja2V0KGUsITAsITApLnRoZW4oKGU9PmMucmVzb2x2ZShlKSkpLmNhdGNoKChlPT57dGhpcy5pc05vcm1hbFBvcnRGYWlsZWQmJmMucmVqZWN0KGUpLHRoaXMubG9nZ2VyKFwidHJ5IDQ0MyBwb3J0IHRvIGNyZWF0ZSB3cyBmYWlsZWRcIil9KSksdGhpcy5mb3JjZUNsb3NlVGltZW91dD13aW5kb3cuc2V0VGltZW91dChpLHRoaXMuZm9yY2VDbG9zZVdTRHVyYXRpb24pfSksdGhpcy50cnk0NDNQb3J0RHVyYXRpb24pfSkoKSxjLnByb21pc2V9Y2hvb3NlQmVzdFdlYnNvY2tldChlLHQsaSxuKXtyZXR1cm4gdGhpcy51c2VEb3VibGVEb21haW49ISF0LFwic3RyaW5nXCI9PXR5cGVvZiBlJiYoZT1mdW5jdGlvbihlKXtsZXQgdCxpLG47cmV0dXJuWyx0LGksbl09ZS5tYXRjaChNTyl8fFtdLHR8fChbLGksbl09ZS5tYXRjaChVTyl8fFtdKSxpJiZufHwoWyxpLG5dPWUubWF0Y2goeE8pfHxbXSksaSYmbnx8KFssaV09ZS5tYXRjaChWTyl8fFtdKSxpfHxmYi53YXJuaW5nKFwidW4tZGVzdHJ1Y3RpYmxlIHVybDogXCIsZSkse3Byb3h5OnQsaG9zdDppLHBvcnQ6bnx8XCI0NDNcIn19KGUpKSx0aGlzLnJlY29yZEluZGV4PW4sdGhpcy51c2VQcm94eT0hIWUucHJveHksaSYmdGhpcy51c2VQcm94eSYmKGZiLndhcm4oXCJjYW5ub3QgdXNlIDQ0MyBvbmx5IHdoZW4gdXNlIHByb3h5XCIpLGk9ITEpLHRoaXMuY3JlYXRlV2ViU29ja2V0KGUsISFpLCExKS5maW5hbGx5KCgoKT0+dGhpcy5jbGVhclRpbWVvdXQoKSkpfX1mdW5jdGlvbiBqTyhlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9Y2xhc3MgR08gZXh0ZW5kcyB4eXtnZXQgdXJsKCl7cmV0dXJuIHRoaXMud2Vic29ja2V0JiZ0aGlzLndlYnNvY2tldC51cmx8fG51bGx9Z2V0IHJlY29ubmVjdE1vZGUoKXtyZXR1cm4gdGhpcy5fcmVjb25uZWN0TW9kZX1zZXQgcmVjb25uZWN0TW9kZShlKXt2YXIgdDtEbih0PVtcInRyeU5leHRcIixcInJlY292ZXJcIl0pLmNhbGwodCxlKSYmdGhpcy5yZXNldFJlY29ubmVjdENvdW50KGUpLHRoaXMuX3JlY29ubmVjdE1vZGU9ZX1nZXQgc3RhdGUoKXtyZXR1cm4gdGhpcy5fc3RhdGV9c2V0IHN0YXRlKGUpe2UhPT10aGlzLl9zdGF0ZSYmKHRoaXMuX3N0YXRlPWUsXCJyZWNvbm5lY3RpbmdcIj09PXRoaXMuX3N0YXRlP3RoaXMuZW1pdChVdy5SRUNPTk5FQ1RJTkcsdGhpcy5yZWNvbm5lY3RSZWFzb24pOlwiY29ubmVjdGVkXCI9PT10aGlzLl9zdGF0ZT90aGlzLmVtaXQoVXcuQ09OTkVDVEVEKTpcImNsb3NlZFwiPT09dGhpcy5fc3RhdGU/dGhpcy5lbWl0KFV3LkNMT1NFRCk6XCJmYWlsZWRcIj09PXRoaXMuX3N0YXRlJiZ0aGlzLmVtaXQoVXcuRkFJTEVEKSl9cmVzZXRSZWNvbm5lY3RDb3VudChlKXtmYi5kZWJ1ZyhcIndlYnNvY2tldCByZXNldCByZWNvbm5lY3QgY291bnQsIHJlYXNvbjogXCIrZSksdGhpcy5yZWNvbm5lY3RDb3VudD0wfWNvbnN0cnVjdG9yKGUsdCl7bGV0IGk9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0mJmFyZ3VtZW50c1syXSxuPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdJiZhcmd1bWVudHNbM10scj1hcmd1bWVudHMubGVuZ3RoPjQmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XSYmYXJndW1lbnRzWzRdLG89YXJndW1lbnRzLmxlbmd0aD41P2FyZ3VtZW50c1s1XTp2b2lkIDA7c3VwZXIoKSxGZyh0aGlzLFwiY29ubmVjdGlvbklEXCIsMCksRmcodGhpcyxcImN1cnJlbnRVUkxJbmRleFwiLDApLEZnKHRoaXMsXCJ1cmxzXCIsW10pLEZnKHRoaXMsXCJfcmVjb25uZWN0TW9kZVwiLFwidHJ5TmV4dFwiKSxGZyh0aGlzLFwicmVjb25uZWN0UmVhc29uXCIsdm9pZCAwKSxGZyh0aGlzLFwiX2luaXRNdXRleFwiLG5ldyBOQShcIndlYnNvY2tldFwiKSksRmcodGhpcyxcIm5hbWVcIix2b2lkIDApLEZnKHRoaXMsXCJfc3RhdGVcIixcImNsb3NlZFwiKSxGZyh0aGlzLFwicmVjb25uZWN0SW50ZXJydXB0ZXJcIix2b2lkIDApLEZnKHRoaXMsXCJ3ZWJzb2NrZXRcIix2b2lkIDApLEZnKHRoaXMsXCJyZXRyeUNvbmZpZ1wiLHZvaWQgMCksRmcodGhpcyxcInJlY29ubmVjdENvdW50XCIsMCksRmcodGhpcyxcImZvcmNlQ2xvc2VUaW1lb3V0XCIsNWUzKSxGZyh0aGlzLFwib25saW5lUmVjb25uZWN0TGlzdGVuZXJcIix2b2lkIDApLEZnKHRoaXMsXCJ1c2VDb21wcmVzc1wiLHZvaWQgMCksRmcodGhpcyxcInRyeURvdWJsZURvbWFpblwiLCExKSxGZyh0aGlzLFwidXNlNDQzUG9ydE9ubHlcIiwhMSksRmcodGhpcyxcIndzSW5mbGF0ZUxlbmd0aFwiLDApLEZnKHRoaXMsXCJ3c0RlZmxhdGVMZW5ndGhcIiwwKSxGZyh0aGlzLFwiY2xvc2VFc3RhYmxpc2hpbmdXc1wiLCgoKT0+e30pKSxGZyh0aGlzLFwic3RvcmVcIix2b2lkIDApLEZnKHRoaXMsXCJqb2luR2F0ZXdheVJlY29yZEluZGV4XCIsdm9pZCAwKSx0aGlzLnN0b3JlPW8sdGhpcy5uYW1lPWUsdGhpcy5yZXRyeUNvbmZpZz1mdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgaT1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj9qTyhPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0ZnKGUsdCxpW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGkpKTpqTyhPYmplY3QoaSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLHQpKX0pKX1yZXR1cm4gZX0oe30sdCksdGhpcy51c2VDb21wcmVzcz1pLHRoaXMudHJ5RG91YmxlRG9tYWluPW4sdGhpcy51c2U0NDNQb3J0T25seT1yO2NvbnN0e3RpbWVvdXQ6cyx0aW1lb3V0RmFjdG9yOmF9PXQsYz1NYXRoLm1heCgzMDAsTWF0aC5mbG9vcigzKnMvNSkpLGQ9TWF0aC5tYXgoMS4yLE1hdGguZmxvb3IoOCphKS8xMCk7WHkuT05MSU5FJiYodGhpcy5yZXRyeUNvbmZpZy50aW1lb3V0PWMsdGhpcy5yZXRyeUNvbmZpZy50aW1lb3V0RmFjdG9yPWQpLGlBLm9uKFF5Lk5FVFdPUktfU1RBVEVfQ0hBTkdFLCgoZSx0KT0+e2UhPT10JiYodGhpcy5yZXNldFJlY29ubmVjdENvdW50KFwibmV0d29yayBzdGF0ZSBjaGFuZ2U6IFwiLmNvbmNhdCh0LFwiIC0+IFwiKS5jb25jYXQoZSkpLGU9PT1YeS5PTkxJTkU/KHRoaXMucmV0cnlDb25maWcudGltZW91dD1jLHRoaXMucmV0cnlDb25maWcudGltZW91dEZhY3Rvcj1kKToodGhpcy5yZXRyeUNvbmZpZy50aW1lb3V0PXMsdGhpcy5yZXRyeUNvbmZpZy50aW1lb3V0RmFjdG9yPWEpKX0pKX1nZXRDb25uZWN0aW9uKCl7cmV0dXJuIHRoaXMud2Vic29ja2V0fHx2b2lkIDB9YXN5bmMgaW5pdChlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06NWUzO2NvbnN0IGk9YXdhaXQgdGhpcy5faW5pdE11dGV4LmxvY2soKTt0aGlzLmZvcmNlQ2xvc2VUaW1lb3V0PXQsdGhpcy51cmxzPWUsdGhpcy5zdGF0ZT1cImNvbm5lY3RpbmdcIjt0cnl7Y29uc3QgZT1NdigpLHQ9dGhpcy51cmxzW3RoaXMuY3VycmVudFVSTEluZGV4XTtYQShcIkVOQUJMRV9QUkVBTExPQ19QQ1wiKSYmdGhpcy5lbWl0KFRPLlBSRV9DT05ORUNUX1BDKSx0aGlzLmNyZWF0ZVdlYlNvY2tldENvbm5lY3Rpb24odCkudGhlbihlLnJlc29sdmUpLmNhdGNoKGUucmVqZWN0KSx0aGlzLm9uY2UoVXcuQ0xPU0VELCgoKT0+e2UucmVqZWN0KG5ldyBDeShSeS5XU19ESVNDT05ORUNUKSl9KSksdGhpcy5vbmNlKFV3LkNPTk5FQ1RFRCxlLnJlc29sdmUpLGF3YWl0IGUucHJvbWlzZX1jYXRjaChlKXt9ZmluYWxseXtpKCl9fWNsb3NlKGUsdCl7aWYodGhpcy5jdXJyZW50VVJMSW5kZXg9MCx0aGlzLnJlc2V0UmVjb25uZWN0Q291bnQoXCJjbG9zZVwiKSx0aGlzLnJlY29ubmVjdEludGVycnVwdGVyJiZ0aGlzLnJlY29ubmVjdEludGVycnVwdGVyKCksdGhpcy53ZWJzb2NrZXQpe3RoaXMud2Vic29ja2V0Lm9uY2xvc2U9bnVsbCx0aGlzLndlYnNvY2tldC5vbm9wZW49bnVsbCx0aGlzLndlYnNvY2tldC5vbm1lc3NhZ2U9bnVsbDtjb25zdCBlPXRoaXMud2Vic29ja2V0O3Q/c2V0VGltZW91dCgoKCk9PmUuY2xvc2UoKSksNTAwKTplLmNsb3NlKCksdGhpcy53ZWJzb2NrZXQ9dm9pZCAwfXRoaXMuc3RhdGU9ZT9cImZhaWxlZFwiOlwiY2xvc2VkXCIsdGhpcy5jbG9zZUVzdGFibGlzaGluZ1dzJiZ0aGlzLmNsb3NlRXN0YWJsaXNoaW5nV3MoKX1yZWNvbm5lY3QoZSx0KXtpZighdGhpcy53ZWJzb2NrZXQpcmV0dXJuIHZvaWQgZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5uYW1lLFwiXSBjYW4gbm90IHJlY29ubmVjdCwgbm8gd2Vic29ja2V0XCIpKTt2b2lkIDAhPT1lJiYodGhpcy5yZWNvbm5lY3RNb2RlPWUpLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLm5hbWUsXCJdIHJlY29ubmVjdCBpcyB0cmlnZ2VyZWQgaW5pdGlhdGl2ZVwiKSksXCJudW1iZXJcIj09dHlwZW9mIHRoaXMuam9pbkdhdGV3YXlSZWNvcmRJbmRleCYmdGhpcy5zdG9yZSYmdGhpcy5zdG9yZS5yZWNvcmRKb2luQ2hhbm5lbFNlcnZpY2Uoe3N0YXR1czpcImVycm9yXCIsZXJyb3JzOltuZXcgRXJyb3IodCldfSx0aGlzLmpvaW5HYXRld2F5UmVjb3JkSW5kZXgpO2NvbnN0IGk9dGhpcy53ZWJzb2NrZXQub25jbG9zZTt0aGlzLndlYnNvY2tldC5vbmNsb3NlPW51bGwsdGhpcy53ZWJzb2NrZXQuY2xvc2UoKSxpJiZpLmJpbmQodGhpcy53ZWJzb2NrZXQpKHtjb2RlOjk5OTkscmVhc29uOnR9KX1zZW5kTWVzc2FnZShlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXSYmYXJndW1lbnRzWzJdO2lmKCF0aGlzLndlYnNvY2tldHx8dGhpcy53ZWJzb2NrZXQucmVhZHlTdGF0ZSE9PVdlYlNvY2tldC5PUEVOKXRocm93IG5ldyBDeShSeS5XU19BQk9SVCxcIndlYnNvY2tldCBpcyBub3QgcmVhZHlcIik7dHJ5e3R8fChlPUpTT04uc3RyaW5naWZ5KGUpKSx0aGlzLndlYnNvY2tldC5zZW5kKGUpfWNhdGNoKGUpe3Rocm93IG5ldyBDeShSeS5XU19FUlIsXCJzZW5kIHdlYnNvY2tldCBtZXNzYWdlIGVycm9yXCIrZS50b1N0cmluZygpKX19c2V0V3NJbmZsYXRlRGF0YShlKXt0aGlzLndzRGVmbGF0ZUxlbmd0aD10aGlzLndzRGVmbGF0ZUxlbmd0aCtlLm9yaWdpbkxlbmd0aCx0aGlzLndzSW5mbGF0ZUxlbmd0aD10aGlzLndzSW5mbGF0ZUxlbmd0aCtlLmNvbXByZXNzZWRMZW5ndGh9Z2V0V3NJbmZsYXRlRGF0YSgpe2NvbnN0IGU9dGhpcy53c0luZmxhdGVMZW5ndGgsdD10aGlzLndzRGVmbGF0ZUxlbmd0aDtyZXR1cm4gdGhpcy5jbGVhcldzSW5mbGF0ZURhdGEoKSx7d3NJbmZsYXRlTGVuZ3RoOmUsd3NEZWZsYXRlTGVuZ3RoOnR9fWNsZWFyV3NJbmZsYXRlRGF0YSgpe3RoaXMud3NJbmZsYXRlTGVuZ3RoPTAsdGhpcy53c0RlZmxhdGVMZW5ndGg9MH1hc3luYyBjcmVhdGVXZWJTb2NrZXRDb25uZWN0aW9uKGUpe3ZhciB0O2NvbnN0IGk9TXYoKTt0aGlzLmNvbm5lY3Rpb25JRCs9MSx0aGlzLmpvaW5HYXRld2F5UmVjb3JkSW5kZXg9dm9pZCAwO2NvbnN0IG49ZT0+e3ZhciB0O251bGw9PT0odD10aGlzLnN0b3JlKXx8dm9pZCAwPT09dHx8dC5zaWduYWxDaGFubmVsT3BlbigpLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLm5hbWUsXCJdIHdlYnNvY2tldCBvcGVuZWQ6XCIpLGUpLHRoaXMucmVjb25uZWN0TW9kZT1cInJldHJ5XCIsdGhpcy5zdGF0ZT1cImNvbm5lY3RlZFwiLHRoaXMucmVzZXRSZWNvbm5lY3RDb3VudChcIm9wZW5lZFwiKSxpLnJlc29sdmUoKX0scj1hc3luYyBlPT57dmFyIHQ7aWYoZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMubmFtZSxcIl0gd2Vic29ja2V0IGNsb3NlIFwiKS5jb25jYXQobnVsbD09PSh0PXRoaXMud2Vic29ja2V0KXx8dm9pZCAwPT09dD92b2lkIDA6dC51cmwsXCIsIGNvZGU6IFwiKS5jb25jYXQoZS5jb2RlLFwiLCByZWFzb246IFwiKS5jb25jYXQoZS5yZWFzb24sXCIsIGN1cnJlbnQgbW9kZTogXCIpLmNvbmNhdCh0aGlzLnJlY29ubmVjdE1vZGUpKSx0aGlzLnJlY29ubmVjdENvdW50Pj10aGlzLnJldHJ5Q29uZmlnLm1heFJldHJ5Q291bnQpaS5yZWplY3QobmV3IEN5KFJ5LldTX0RJU0NPTk5FQ1QsXCJ3ZWJzb2NrZXQgY2xvc2U6IFwiLmNvbmNhdChlLmNvZGUpKSksdGhpcy5jbG9zZSgpO2Vsc2V7XCJjb25uZWN0ZWRcIj09PXRoaXMuc3RhdGUmJih0aGlzLnJlY29ubmVjdFJlYXNvbj1lLnJlYXNvbix0aGlzLnN0YXRlPVwicmVjb25uZWN0aW5nXCIpO2NvbnN0IHQ9ZUEodGhpcyxVdy5XSUxMX1JFQ09OTkVDVCx0aGlzLnJlY29ubmVjdE1vZGUsZS5yZWFzb24pfHx0aGlzLnJlY29ubmVjdE1vZGUsbj1hd2FpdCB0aGlzLnJlY29ubmVjdFdpdGhBY3Rpb24odCk7aWYoXCJjbG9zZWRcIj09PXRoaXMuc3RhdGUpcmV0dXJuIHZvaWQgZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuY29ubmVjdGlvbklELFwiXSB3cyBpcyBjbG9zZWQsIG5vIG5lZWQgdG8gcmVjb25uZWN0XCIpKTtpZighbilyZXR1cm4gaS5yZWplY3QobmV3IEN5KFJ5LldTX0RJU0NPTk5FQ1QsXCJ3ZWJzb2NrZXQgcmVjb25uZWN0IGZhaWxlZDogXCIuY29uY2F0KGUuY29kZSkpKSx0aGlzLmNsb3NlKCEwKTtpLnJlc29sdmUoKX19LG89ZT0+e3RoaXMuZW1pdChVdy5PTl9NRVNTQUdFLGUpfSxzPWU9PntmYi53YXJuKFwiW1wiLmNvbmNhdCh0aGlzLmNvbm5lY3Rpb25JRCxcIl0gd3Mgb3BlbiBlcnJvciBcIikuY29uY2F0KGUpKX07dGhpcy53ZWJzb2NrZXQmJih0aGlzLndlYnNvY2tldC5vbmNsb3NlPW51bGwsdGhpcy53ZWJzb2NrZXQuY2xvc2UoKSksWEEoXCJHQVRFV0FZX1dTU19BRERSRVNTXCIpJiZ0aGlzLm5hbWUuc3RhcnRzV2l0aChcImdhdGV3YXlcIikmJihlPVhBKFwiR0FURVdBWV9XU1NfQUREUkVTU1wiKSksZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMubmFtZSxcIl0gc3RhcnQgY29ubmVjdCwgdXJsOlwiKSxlKTtjb25zdCBhPW51bGw9PT0odD10aGlzLnN0b3JlKXx8dm9pZCAwPT09dD92b2lkIDA6dC5yZWNvcmRKb2luQ2hhbm5lbFNlcnZpY2Uoe3N0YXJ0VHM6RGF0ZS5ub3coKSxzdGF0dXM6XCJwZW5kaW5nXCIsc2VydmljZTpcImdhdGV3YXlcIn0pO3RyeXt2YXIgYztjb25zdCB0PWF3YWl0IHRoaXMuY2hvb3NlQmVzdFdlYnNvY2tldENvbm5lY3Rpb24oZSk7dGhpcy53ZWJzb2NrZXQ9dCxuJiZuKHRoaXMud2Vic29ja2V0LnVybCksdGhpcy53ZWJzb2NrZXQub25jbG9zZT1yLHRoaXMud2Vic29ja2V0Lm9ubWVzc2FnZT1vLHRoaXMud2Vic29ja2V0Lm9uZXJyb3I9cyxudWxsPT09KGM9dGhpcy5zdG9yZSl8fHZvaWQgMD09PWN8fGMucmVjb3JkSm9pbkNoYW5uZWxTZXJ2aWNlKHtlbmRUczpEYXRlLm5vdygpLHN0YXR1czpcInN1Y2Nlc3NcIn0sYSksdGhpcy5qb2luR2F0ZXdheVJlY29yZEluZGV4PWF9Y2F0Y2goZSl7Y29uc3QgdD1cImNsb3NlZFwiPT09dGhpcy5zdGF0ZSxuPWUgaW5zdGFuY2VvZiBDeSxvPW4mJmUuY29kZT09PVJ5LldTX0FCT1JULHM9biYmZS5jb2RlPT09UnkuV1NfRVJSLGM9bj9lLm1lc3NhZ2U6ZSYmKGUucmVhc29ufHxlLnRvU3RyaW5nKCkpO2ZiLndhcm5pbmcoXCJbY2hvb3NlLWJlc3Qtd3NdIGNob29zZUJlc3RXZWJzb2NrZXQgZXJyb3I6IFwiLmNvbmNhdChjKSksdGhpcy5zdG9yZSYmdGhpcy5zdG9yZS5yZWNvcmRKb2luQ2hhbm5lbFNlcnZpY2Uoe2VuZFRzOkRhdGUubm93KCksc3RhdHVzOm8/XCJhYm9ydGVkXCI6XCJlcnJvclwiLGVycm9yczpbZV19LGEpLHR8fHM/KGkucmVqZWN0KHQ/bmV3IEN5KFJ5LldTX0RJU0NPTk5FQ1QsXCJ3ZWJzb2NrZXQgaXMgY2xvc2VkOiBcIi5jb25jYXQoYykpOm5ldyBDeShSeS5XU19FUlIsXCJpbml0IHdlYnNvY2tldCBmYWlsZWQ6IFwiLmNvbmNhdChjKSkpLHMmJmZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLm5hbWUsXCJdIGluaXQgd2Vic29ja2V0IGZhaWxlZDogXCIpLmNvbmNhdChjKSkpOnImJnIoZSl9cmV0dXJuIGkucHJvbWlzZX1hc3luYyByZWNvbm5lY3RXaXRoQWN0aW9uKGUpe2xldCB0PSEoYXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0pfHxhcmd1bWVudHNbMV07aWYodGhpcy5yZWNvbm5lY3RDb3VudD49dGhpcy5yZXRyeUNvbmZpZy5tYXhSZXRyeUNvdW50KXJldHVybiExO2lmKDA9PT10aGlzLnVybHMubGVuZ3RoKXJldHVybiExO2lmKFwiY2xvc2VkXCI9PT10aGlzLnN0YXRlKXJldHVybiExO2ZiLndhcm5pbmcoXCJbY2hvb3NlLWJlc3Qtd3NdIGFjdGlvbjogPT5cIixlKSx0aGlzLm9ubGluZVJlY29ubmVjdExpc3RlbmVyfHxpQS5pc09ubGluZXx8IWlBLm9ubGluZVdhaXRlcnx8KHRoaXMub25saW5lUmVjb25uZWN0TGlzdGVuZXI9aUEub25saW5lV2FpdGVyLnRoZW4oKCgpPT57dGhpcy5vbmxpbmVSZWNvbm5lY3RMaXN0ZW5lcj12b2lkIDB9KSkpO2xldCBpPSEwO2lmKHRoaXMucmVjb25uZWN0SW50ZXJydXB0ZXI9KCk9Pmk9ITEsdCl7Y29uc3QgdD1MQSh0aGlzLnJlY29ubmVjdENvdW50LHRoaXMucmV0cnlDb25maWcpO2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLm5hbWUsXCJdIHdhaXQgXCIpLmNvbmNhdCh0LFwibXMgdG8gcmVjb25uZWN0IHdlYnNvY2tldCwgbW9kZTogXCIpLmNvbmNhdChlKSksYXdhaXQgR2gucmFjZShbbUEodCksdGhpcy5vbmxpbmVSZWNvbm5lY3RMaXN0ZW5lcnx8bmV3IEdoKCgoKT0+e30pKV0pfWlmKFwiY2xvc2VkXCI9PT10aGlzLl9zdGF0ZXx8IWkpcmV0dXJuITE7dGhpcy5yZWNvbm5lY3RDb3VudCs9MTtjb25zdCBuPWFzeW5jKGUsdCk9Pnt0aGlzLmVtaXQoVXcuUkVDT05ORUNUX0NSRUFURV9DT05ORUNUSU9OLHQpLGF3YWl0IHRoaXMuY3JlYXRlV2ViU29ja2V0Q29ubmVjdGlvbihlKX07dHJ5e2lmKFwicmV0cnlcIj09PWUpdGhpcy5lbWl0KFV3LlJFQ09OTkVDVF9XQUlUVElOR19GSU5JU0gsZSksYXdhaXQgbih0aGlzLnVybHNbdGhpcy5jdXJyZW50VVJMSW5kZXhdLGUpO2Vsc2UgaWYoXCJ0cnlOZXh0XCI9PT1lKXtpZih0aGlzLmN1cnJlbnRVUkxJbmRleCs9MSx0aGlzLmN1cnJlbnRVUkxJbmRleD49dGhpcy51cmxzLmxlbmd0aClyZXR1cm4gdGhpcy5yZWNvbm5lY3RXaXRoQWN0aW9uKFwicmVjb3ZlclwiLCExKTtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5uYW1lLFwiXSB3ZWJzb2NrZXQgdXJsIGxlbmd0aDogXCIpLmNvbmNhdCh0aGlzLnVybHMubGVuZ3RoLFwiIGN1cnJlbnQgaW5kZXg6IFwiKS5jb25jYXQodGhpcy5jdXJyZW50VVJMSW5kZXgpKSx0aGlzLmVtaXQoVXcuUkVDT05ORUNUX1dBSVRUSU5HX0ZJTklTSCxlKSxhd2FpdCBuKHRoaXMudXJsc1t0aGlzLmN1cnJlbnRVUkxJbmRleF0sZSl9ZWxzZVwicmVjb3ZlclwiPT09ZSYmKGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLm5hbWUsXCJdIHJlcXVlc3QgbmV3IHVybHNcIikpLHRoaXMucmVzZXRSZWNvbm5lY3RDb3VudChcInJlY292ZXIgbW9kZVwiKSx0aGlzLmVtaXQoVXcuUkVDT05ORUNUX1dBSVRUSU5HX0ZJTklTSCxlKSx0aGlzLnVybHM9YXdhaXQgWnkodGhpcyxVdy5SRVFVRVNUX05FV19VUkxTKSx0aGlzLmN1cnJlbnRVUkxJbmRleD0wLGF3YWl0IG4odGhpcy51cmxzW3RoaXMuY3VycmVudFVSTEluZGV4XSxlKSl9Y2F0Y2goaSl7dmFyIHI7ZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMubmFtZSxcIl0gcmVjb25uZWN0IGZhaWxlZCBcIikuY29uY2F0KGkmJmkudG9TdHJpbmcoKSkpO2NvbnN0IG49bnVsbD09aXx8bnVsbD09PShyPWkuZGF0YSl8fHZvaWQgMD09PXI/dm9pZCAwOnIuZGVzYztyZXR1cm4gQXJyYXkuaXNBcnJheShuKSYmRG4obikuY2FsbChuLFwiZHluYW1pYyBrZXkgZXhwaXJlZFwiKT8odGhpcy5lbWl0KFV3Lk9OX1RPS0VOX1BSSVZJTEVHRV9ESURfRVhQSVJFKSwhMSk6dGhpcy5yZWNvbm5lY3RXaXRoQWN0aW9uKGUsdCl9cmV0dXJuITB9fWNsYXNzIFdPIGV4dGVuZHMgR097Y29uc3RydWN0b3IoZSx0KXtzdXBlcihlLHQsYXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0mJmFyZ3VtZW50c1syXSxhcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXSYmYXJndW1lbnRzWzNdLGFyZ3VtZW50cy5sZW5ndGg+NCYmdm9pZCAwIT09YXJndW1lbnRzWzRdJiZhcmd1bWVudHNbNF0sYXJndW1lbnRzLmxlbmd0aD41P2FyZ3VtZW50c1s1XTp2b2lkIDApfWFzeW5jIGNob29zZUJlc3RXZWJzb2NrZXRDb25uZWN0aW9uKGUsdCl7Y29uc3QgaT1NdigpLG49ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbmV3IEJPKGUsdCl9KHRoaXMuZm9yY2VDbG9zZVRpbWVvdXQsdGhpcy5zdG9yZSk7dGhpcy5jbG9zZUVzdGFibGlzaGluZ1dzPSgpPT57ZmIuZGVidWcoXCJbY2hvb3NlLWJlc3Qtd3NdIGNsb3NlIGVzdGFibGlzaGluZyB3ZWJzb2NrZXRzXCIpLG4uY2xvc2VBbGxXZWJzb2NrZXRzKCksaS5yZWplY3QobmV3IEN5KFJ5LldTX0FCT1JULFwiY2hvb3NlIGJlc3Qgd2Vic29ja2V0IGFib3J0ZWRcIikpfTtjb25zdCByPVhBKFwiR0FURVdBWV9ET01BSU5TXCIpO3JldHVybiBmYi5kZWJ1ZyhcIltjaG9vc2UtYmVzdC13c10gY3VycmVudERvbWFpbjogXCIsZSxcIiwgZG9tYWluczogXCIscixcInRvdGFsOiBcIi5jb25jYXQodGhpcy51cmxzLmxlbmd0aCksXCJjdXJyZW50OiBcIi5jb25jYXQodGhpcy5jdXJyZW50VVJMSW5kZXgrMSkpLG4uY2hvb3NlQmVzdFdlYnNvY2tldChlLHRoaXMudHJ5RG91YmxlRG9tYWluLHRoaXMudXNlNDQzUG9ydE9ubHksdCkudGhlbihpLnJlc29sdmUpLmNhdGNoKGkucmVqZWN0KSxpLnByb21pc2UuZmluYWxseSgoKCk9Pnt0aGlzLmNsb3NlRXN0YWJsaXNoaW5nV3M9dm9pZCAwfSkpfX1jbGFzcyBITyBleHRlbmRzIEdPe2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoZSx0LGFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdJiZhcmd1bWVudHNbMl0sYXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10mJmFyZ3VtZW50c1szXSxhcmd1bWVudHMubGVuZ3RoPjQmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XSYmYXJndW1lbnRzWzRdLGFyZ3VtZW50cy5sZW5ndGg+NT9hcmd1bWVudHNbNV06dm9pZCAwKX1hc3luYyBjaG9vc2VCZXN0V2Vic29ja2V0Q29ubmVjdGlvbihlLHQpe3JldHVybiBuZXcgR2goKChpLG4pPT57bGV0IHI9ITE7Y29uc3Qgbz1bXTt0aGlzLmNsb3NlRXN0YWJsaXNoaW5nV3M9KCk9PntmYi5kZWJ1ZyhcIltjaG9vc2UtYmVzdC13c10gY2xvc2UgZXN0YWJsaXNoaW5nIHdlYnNvY2tldHNcIiksby5mb3JFYWNoKChlPT57ZS5vbmNsb3NlPW51bGwsZS5vbm9wZW49bnVsbCxlLm9ubWVzc2FnZT1udWxsLGUuY2xvc2UoKX0pKSxuKG5ldyBDeShSeS5XU19BQk9SVCxcImNob29zZSBiZXN0IHdlYnNvY2tldCBhYm9ydGVkXCIpKX07Y29uc3Qgcz1YQShcIkdBVEVXQVlfRE9NQUlOU1wiKTtsZXQgYTtjb25zdCBjPWUuaW5kZXhPZihcIj9oPVwiKSxkPXMuZmluZCgodD0+LTEhPT1jP0RuKGUpLmNhbGwoZSx0LGMpOkRuKGUpLmNhbGwoZSx0KSkpO2ZiLmRlYnVnKFwiW2Nob29zZS1iZXN0LXdzXSBjdXJyZW50RG9tYWluOiBcIixkLFwiLCBkb21haW5zOiBcIixzKTtsZXQgbD0hdGhpcy50cnlEb3VibGVEb21haW58fCFkO2lmKCFsJiZkKXt2YXIgdTtjb25zdCBoPURhdGUubm93KCk7dHJ5e3MuZm9yRWFjaCgodD0+e2NvbnN0IGk9LTE9PT1jP2UucmVwbGFjZShkLHQpOmUuc3Vic3RyKDAsYykrZS5zdWJzdHIoYykucmVwbGFjZShkLHQpLG49bmV3IFdlYlNvY2tldChpKTtuLmJpbmFyeVR5cGU9XCJhcnJheWJ1ZmZlclwiLG8ucHVzaChuKSxmYi5kZWJ1ZyhcIltjaG9vc2UtYmVzdC13c10gd3MgaXMgY29ubmVjdGluZzpcIixuLnVybCl9KSl9Y2F0Y2goZSl7Zm9yKGZiLmRlYnVnKFwiW2Nob29zZS1iZXN0LXdzXSB3cyBjcmVhdGUgZmFpbGVkLCBmYWxsYmFjayB0byBzaW5nbGUgdXJsXCIpLG8uZm9yRWFjaCgoZT0+ZS5jbG9zZSgpKSk7by5sZW5ndGg7KW8ucG9wKCk7bD0hMH1udWxsPT09KHU9dGhpcy5zdG9yZSl8fHZvaWQgMD09PXV8fHUucmVjb3JkSm9pbkNoYW5uZWxTZXJ2aWNlKHt1cmxzOm8ubWFwKChlPT5lLnVybCkpLHNlcnZpY2U6XCJnYXRld2F5XCJ9LHQpLG8uZm9yRWFjaCgoZT0+e2Uub25vcGVuPSgpPT57aWYocilyZXR1cm47Y29uc3QgdD1EYXRlLm5vdygpLWg7ZmIuZGVidWcoXCJbY2hvb3NlLWJlc3Qtd3NdIHdzIG9wZW4gY29zdCBcIi5jb25jYXQodCxcIm1zXCIpKSxvLmZpbHRlcigodD0+dCE9PWUpKS5mb3JFYWNoKChlPT57ZmIuZGVidWcoXCJbY2hvb3NlLWJlc3Qtd3NdY2xvc2UgYmFja3VwIHdlYnNvY2tldDogXCIuY29uY2F0KGUudXJsKSksZS5jbG9zZSgpfSkpLHI9ITAsaShlKX0sZS5vbmNsb3NlPWU9PntpZihhPWUscilyZXR1cm47by5maW5kKChlPT4hKGUucmVhZHlTdGF0ZT09PVdlYlNvY2tldC5DTE9TRUR8fGUucmVhZHlTdGF0ZT09PVdlYlNvY2tldC5DTE9TSU5HKSkpfHwoZmIuZGVidWcoXCJbY2hvb3NlLWJlc3Qtd3NdIGFsbCB3ZWJzb2NrZXQgaXMgY2xvc2VkXCIpLHI9ITAsbihhKSl9LGUub25tZXNzYWdlPXQ9PntmYi5kZWJ1ZyhcIltjaG9vc2UtYmVzdC13c11cIi5jb25jYXQoZS51cmwsXCIgb25tZXNzYWdlOiBcIikuY29uY2F0KHQuZGF0YSkpfX0pKSxtQSh0aGlzLmZvcmNlQ2xvc2VUaW1lb3V0KS50aGVuKCgoKT0+e28uZm9yRWFjaCgoZT0+e2UucmVhZHlTdGF0ZSE9PVdlYlNvY2tldC5PUEVOJiZlLmNsb3NlKCl9KSl9KSl9aWYobCl7dmFyIGg7bGV0IHI7ZmIuZGVidWcoXCJbY2hvb3NlLWJlc3Qtd3NdIHVzZSBzaW5nbGUgdXJsOiBcIixlKSxudWxsPT09KGg9dGhpcy5zdG9yZSl8fHZvaWQgMD09PWh8fGgucmVjb3JkSm9pbkNoYW5uZWxTZXJ2aWNlKHt1cmxzOltlXSxzZXJ2aWNlOlwiZ2F0ZXdheVwifSx0KTt0cnl7cj1uZXcgV2ViU29ja2V0KGUpLG8ucHVzaChyKSxyLmJpbmFyeVR5cGU9XCJhcnJheWJ1ZmZlclwifWNhdGNoKGUpe2NvbnN0IHQ9bmV3IEN5KFJ5LldTX0VSUixcImluaXQgd2Vic29ja2V0IGZhaWxlZCEgRXJyb3I6IFwiLmNvbmNhdChlLnRvU3RyaW5nKCkpKTtyZXR1cm4gZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMubmFtZSxcIl1cIikuY29uY2F0KHQpKSx2b2lkIG4odCl9ci5vbm9wZW49KCk9PntpKHIpfSxyLm9uY2xvc2U9ZT0+e24oZSl9LHIub25tZXNzYWdlPWU9PntmYi5kZWJ1ZyhcIltjaG9vc2UtYmVzdC13c11cIi5jb25jYXQoci51cmwsXCIgb25tZXNzYWdlOiBcIikuY29uY2F0KGUuZGF0YSkpfSxtQSh0aGlzLmZvcmNlQ2xvc2VUaW1lb3V0KS50aGVuKCgoKT0+e3ImJnIucmVhZHlTdGF0ZSE9PVdlYlNvY2tldC5PUEVOJiZyLmNsb3NlKCl9KSl9fSkpLnRoZW4oKGU9Pih0aGlzLmNsb3NlRXN0YWJsaXNoaW5nV3M9dm9pZCAwLGUpKSkuY2F0Y2goKGU9Pnt0aHJvdyB0aGlzLmNsb3NlRXN0YWJsaXNoaW5nV3M9dm9pZCAwLGV9KSl9fWNsYXNzIEtPIGV4dGVuZHMgeHl7Z2V0IGNvbm5lY3Rpb25TdGF0ZSgpe3JldHVybiB0aGlzLl9jb25uZWN0aW9uU3RhdGV9c2V0IGNvbm5lY3Rpb25TdGF0ZShlKXtlIT09dGhpcy5fY29ubmVjdGlvblN0YXRlJiYodGhpcy5fY29ubmVjdGlvblN0YXRlPWUsZT09PU53LkNPTk5FQ1RFRD90aGlzLmVtaXQoRHcuV1NfQ09OTkVDVEVEKTplPT09TncuUkVDT05ORUNUSU5HP3RoaXMuZW1pdChEdy5XU19SRUNPTk5FQ1RJTkcsdGhpcy5fd2Vic29ja2V0UmVjb25uZWN0UmVhc29uKTplPT09TncuQ0xPU0VEJiZ0aGlzLmVtaXQoRHcuV1NfQ0xPU0VELHRoaXMuX2Rpc2Nvbm5lY3RlZFJlYXNvbikpfWdldCBjdXJyZW50VVJMSW5kZXgoKXtyZXR1cm4gdGhpcy53ZWJzb2NrZXQuY3VycmVudFVSTEluZGV4fWdldCB1cmwoKXtyZXR1cm4gdGhpcy53ZWJzb2NrZXQmJnRoaXMud2Vic29ja2V0LnVybHx8bnVsbH1nZXQgcnR0KCl7cmV0dXJuIHRoaXMucnR0Um9sbGluZy5tZWFuKCl9Y29uc3RydWN0b3IoZSx0KXtzdXBlcigpLEZnKHRoaXMsXCJfZGlzY29ubmVjdGVkUmVhc29uXCIsdm9pZCAwKSxGZyh0aGlzLFwiX3dlYnNvY2tldFJlY29ubmVjdFJlYXNvblwiLHZvaWQgMCksRmcodGhpcyxcIl9jb25uZWN0aW9uU3RhdGVcIixOdy5DTE9TRUQpLEZnKHRoaXMsXCJyZWNvbm5lY3RUb2tlblwiLHZvaWQgMCksRmcodGhpcyxcIndlYnNvY2tldFwiLHZvaWQgMCksRmcodGhpcyxcIm9wZW5Db25uZWN0aW9uVGltZVwiLHZvaWQgMCksRmcodGhpcyxcImNsaWVudElkXCIsdm9pZCAwKSxGZyh0aGlzLFwibGFzdE1zZ1RpbWVcIixEYXRlLm5vdygpKSxGZyh0aGlzLFwidXBsb2FkQ2FjaGVcIixbXSksRmcodGhpcyxcInVwbG9hZENhY2hlSW50ZXJ2YWxcIix2b2lkIDApLEZnKHRoaXMsXCJydHRSb2xsaW5nXCIsbmV3IE1BKDUpKSxGZyh0aGlzLFwicGluZ3BvbmdUaW1lclwiLHZvaWQgMCksRmcodGhpcyxcIndzSW5mbGF0ZURhdGFUaW1lclwiLHZvaWQgMCksRmcodGhpcyxcInBpbmdwb25nVGltZW91dENvdW50XCIsMCksRmcodGhpcyxcImpvaW5SZXNwb25zZVwiLHZvaWQgMCksRmcodGhpcyxcIm11bHRpSXBPcHRpb25cIix2b2lkIDApLEZnKHRoaXMsXCJpbml0RXJyb3JcIix2b2lkIDApLEZnKHRoaXMsXCJzcGVjXCIsdm9pZCAwKSxGZyh0aGlzLFwic3RvcmVcIix2b2lkIDApLEZnKHRoaXMsXCJvbldlYnNvY2tldE1lc3NhZ2VcIiwoZT0+e2lmKGUuZGF0YSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKXJldHVybiB2b2lkIHRoaXMuZW1pdChEdy5PTl9CSU5BUllfREFUQSxlLmRhdGEpO2NvbnN0IHQ9SlNPTi5wYXJzZShlLmRhdGEpO2lmKHRoaXMubGFzdE1zZ1RpbWU9RGF0ZS5ub3coKSxPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxcIl9pZFwiKSl7Y29uc3QgZT1cInJlcy1AXCIuY29uY2F0KHQuX2lkKTt0aGlzLmVtaXQoZSx0Ll9yZXN1bHQsdC5fbWVzc2FnZSl9ZWxzZSBpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxcIl90eXBlXCIpKXtpZih0aGlzLmVtaXQodC5fdHlwZSx0Ll9tZXNzYWdlKSx0Ll90eXBlPT09a3cuT05fTk9USUZJQ0FUSU9OJiZ0aGlzLmhhbmRsZU5vdGlmaWNhdGlvbih0Ll9tZXNzYWdlKSx0Ll90eXBlPT09a3cuT05fVVNFUl9CQU5ORUQpc3dpdGNoKHQuX21lc3NhZ2UuZXJyb3JfY29kZSl7Y2FzZSAxNDp0aGlzLmNsb3NlKEh5LlVJRF9CQU5ORUQpO2JyZWFrO2Nhc2UgMTU6dGhpcy5jbG9zZShIeS5JUF9CQU5ORUQpO2JyZWFrO2Nhc2UgMTY6dGhpcy5jbG9zZShIeS5DSEFOTkVMX0JBTk5FRCl9aWYodC5fdHlwZT09PWt3Lk9OX1VTRVJfTElDRU5TRV9CQU5ORUQpc3dpdGNoKHQuX21lc3NhZ2UuZXJyb3JfY29kZSl7Y2FzZSBPdy5FUlJfTElDRU5TRV9NSVNTSU5HOnRoaXMuY2xvc2UoSHkuTElDRU5TRV9NSVNTSU5HKTticmVhaztjYXNlIE93LkVSUl9MSUNFTlNFX0VYUElSRUQ6dGhpcy5jbG9zZShIeS5MSUNFTlNFX0VYUElSRUQpO2JyZWFrO2Nhc2UgT3cuRVJSX0xJQ0VOU0VfTUlOVVRFU19FWENFRURFRDp0aGlzLmNsb3NlKEh5LkxJQ0VOU0VfTUlOVVRFU19FWENFRURFRCk7YnJlYWs7Y2FzZSBPdy5FUlJfTElDRU5TRV9QRVJJT0RfSU5WQUxJRDp0aGlzLmNsb3NlKEh5LkxJQ0VOU0VfUEVSSU9EX0lOVkFMSUQpO2JyZWFrO2Nhc2UgT3cuRVJSX0xJQ0VOU0VfTVVMVElQTEVfU0RLX1NFUlZJQ0U6dGhpcy5jbG9zZShIeS5MSUNFTlNFX01VTFRJUExFX1NES19TRVJWSUNFKTticmVhaztjYXNlIE93LkVSUl9MSUNFTlNFX0lMTEVHQUw6dGhpcy5jbG9zZShIeS5MSUNFTlNFX0lMTEVHQUwpO2JyZWFrO2RlZmF1bHQ6dGhpcy5jbG9zZSgpfX19KSksdGhpcy5jbGllbnRJZD1lLmNsaWVudElkLHRoaXMuc3BlYz1lLHRoaXMuc3RvcmU9dCx0aGlzLndlYnNvY2tldD1uZXcgV08oXCJnYXRld2F5LVwiLmNvbmNhdCh0aGlzLmNsaWVudElkKSx0aGlzLnNwZWMucmV0cnlDb25maWcsITAsWEEoXCJKT0lOX0dBVEVXQVlfVVNFX0RVQUxfRE9NQUlOXCIpLFhBKFwiSk9JTl9HQVRFV0FZX1VTRV80NDNQT1JUX09OTFlcIiksdCksdGhpcy5oYW5kbGVXZWJzb2NrZXRFdmVudHMoKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwoKCk9Pnt0aGlzLmNvbm5lY3Rpb25TdGF0ZT09PU53LkNPTk5FQ1RFRCYmdGhpcy5yZWNvbm5lY3QoXCJyZXRyeVwiLEp5Lk9GRkxJTkUpfSkpfWFzeW5jIHJlcXVlc3QoZSx0LGksbil7Y29uc3Qgcj1UQSg2LFwiXCIpLG89e19pZDpyLF90eXBlOmUsX21lc3NhZ2U6dH0scz10aGlzLndlYnNvY2tldC5jb25uZWN0aW9uSUQsYT0oKT0+bmV3IEdoKCgodCxpKT0+e2lmKHRoaXMuY29ubmVjdGlvblN0YXRlPT09TncuQ09OTkVDVEVEKXJldHVybiB0KCk7Y29uc3Qgbj0oKT0+e3RoaXMub2ZmKER3LldTX0NMT1NFRCxyKSx0KCl9LHI9KCk9Pnt0aGlzLm9mZihEdy5XU19DT05ORUNURUQsbiksaShuZXcgeWIoUnkuV1NfQUJPUlQpKX07dGhpcy5vbmNlKER3LldTX0NPTk5FQ1RFRCxuKSx0aGlzLm9uY2UoRHcuV1NfQ0xPU0VELHIpLGUhPT1Qdy5QVUJMSVNIJiZlIT09UHcuUFVCTElTSF9EQVRBU1RSRUFNJiZlIT09UHcuU1VCU0NSSUJFJiZlIT09UHcuU1VCU0NSSUJFX0RBVEFTVFJFQU0mJmUhPT1Qdy5VTlNVQlNDUklCRSYmZSE9PVB3LlVOU1VCU0NSSUJFX0RBVEFTVFJFQU0mJmUhPT1Qdy5VTlBVQkxJU0gmJmUhPT1Qdy5VTlBVQkxJU0hfREFUQVNUUkVBTSYmZSE9PVB3LkNPTlRST0wmJmUhPT1Qdy5SRVNUQVJUX0lDRXx8dGhpcy5vbmNlKER3LkRJU0NPTk5FQ1RfUDJQLCgoKT0+e2kobmV3IHliKFJ5LkRJU0NPTk5FQ1RfUDJQKSl9KSksZSE9PVB3LlBVQkxJU0gmJmUhPT1Qdy5SRVNUQVJUX0lDRXx8dGhpcy5vbmNlKER3LkFCT1JUX1AyUF9FWEVDVVRJT04sKCgpPT57aShuZXcgeWIoUnkuRElTQ09OTkVDVF9QMlApKX0pKX0pKTtpZih0aGlzLmNvbm5lY3Rpb25TdGF0ZSE9PU53LkNPTk5FQ1RJTkcmJnRoaXMuY29ubmVjdGlvblN0YXRlIT09TncuUkVDT05ORUNUSU5HfHxlPT09UHcuSk9JTnx8ZT09PVB3LlJFSk9JTnx8YXdhaXQgYSgpLHRoaXMud2Vic29ja2V0LnNlbmRNZXNzYWdlKG8sITApLG4pcmV0dXJuO2NvbnN0IGM9bmV3IEdoKCgoaSxuKT0+e2xldCBvPSExO2NvbnN0IGE9KG4scik9PntvPSEwLGkoe2lzU3VjY2VzczpcInN1Y2Nlc3NcIj09PW4sbWVzc2FnZTpyfHx7fX0pLHRoaXMub2ZmKER3LldTX0NMT1NFRCxjKSx0aGlzLm9mZihEdy5XU19SRUNPTk5FQ1RJTkcsYyksdGhpcy5lbWl0KER3LlJFUVVFU1RfU1VDQ0VTUyxlLHQpfTt0aGlzLm9uY2UoXCJyZXMtQFwiLmNvbmNhdChyKSxhKTtjb25zdCBjPSgpPT57bihuZXcgeWIoUnkuV1NfQUJPUlQsXCJ0eXBlOiBcIi5jb25jYXQoZSkpKSx0aGlzLm9mZihEdy5XU19DTE9TRUQsYyksdGhpcy5vZmYoRHcuV1NfUkVDT05ORUNUSU5HLGMpLHRoaXMub2ZmKFwicmVzLUBcIi5jb25jYXQociksYSl9O3RoaXMub25jZShEdy5XU19DTE9TRUQsYyksdGhpcy5vbmNlKER3LldTX1JFQ09OTkVDVElORyxjKSxtQShYQShcIlNJR05BTF9SRVFVRVNUX1RJTUVPVVRcIikpLnRoZW4oKCgpPT57dGhpcy53ZWJzb2NrZXQuY29ubmVjdGlvbklEIT09c3x8b3x8KGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuY2xpZW50SWQsXCJdIHdzIHJlcXVlc3QgdGltZW91dCwgdHlwZTogXCIpLmNvbmNhdChlKSksdGhpcy5lbWl0KER3LlJFUVVFU1RfVElNRU9VVCxlLHQpKX0pKX0pKTtsZXQgZD1udWxsO3RyeXtkPWF3YWl0IGN9Y2F0Y2gobil7aWYodGhpcy5jb25uZWN0aW9uU3RhdGU9PT1Ody5DTE9TRUR8fGU9PT1Qdy5MRUFWRSl0aHJvdyBuZXcgeWIoUnkuV1NfQUJPUlQpO3JldHVybiF0aGlzLnNwZWMuZm9yY2VXYWl0R2F0ZXdheVJlc3BvbnNlfHxpP24udGhyb3coKTplPT09UHcuSk9JTnx8ZT09PVB3LlJFSk9JTj9udWxsOihhd2FpdCBhKCksYXdhaXQgdGhpcy5yZXF1ZXN0KGUsdCkpfWlmKGQuaXNTdWNjZXNzKXJldHVybiBkLm1lc3NhZ2U7Y29uc3QgbD1OdW1iZXIoZC5tZXNzYWdlLmVycm9yX2NvZGV8fGQubWVzc2FnZS5jb2RlKSx1PU5PKGwpLGg9bmV3IHliKFJ5LlVORVhQRUNURURfUkVTUE9OU0UsXCJcIi5jb25jYXQodS5kZXNjLFwiOiBcIikuY29uY2F0KGQubWVzc2FnZS5lcnJvcl9zdHIpLHtjb2RlOmwsZGF0YTpkLm1lc3NhZ2UsZGVzYzp1LmRlc2N9KTtyZXR1cm5cInN1Y2Nlc3NcIj09PXUuYWN0aW9uP2QubWVzc2FnZTooZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gW1wiKS5jb25jYXQodGhpcy53ZWJzb2NrZXQuY29ubmVjdGlvbklELFwiXSB1bmV4cGVjdGVkIHJlc3BvbnNlIGZyb20gdHlwZSBcIikuY29uY2F0KGUsXCIsIGVycm9yX2NvZGU6IFwiKS5jb25jYXQobCxcIiwgbWVzc2FnZTogXCIpLmNvbmNhdCh1LmRlc2MsXCIsIGFjdGlvbjogXCIpLmNvbmNhdCh1LmFjdGlvbikpLGw9PT1Pdy5FUlJfVE9PX01BTllfQlJPQURDQVNURVJTP2U9PT1Qdy5KT0lOfHxlPT09UHcuUkVKT0lOPyh0aGlzLmluaXRFcnJvcj1oLHRoaXMuY2xvc2UoKSxoLnRocm93KCkpOmgudGhyb3coKTpcImZhaWxlZFwiPT09dS5hY3Rpb24/aC50aHJvdygpOlwicXVpdFwiPT09dS5hY3Rpb24/KHRoaXMuaW5pdEVycm9yPWgsdGhpcy5jbG9zZSgpLGgudGhyb3coKSk6KGw9PT1Pdy5FUlJfSk9JTl9CWV9NVUxUSV9JUD8odGhpcy5tdWx0aUlwT3B0aW9uPWQubWVzc2FnZS5vcHRpb24sZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gZGV0ZWN0IG11bHRpIGlwLCByZWNvdmVyXCIpKSx0aGlzLnJlY29ubmVjdChcInJlY292ZXJcIixKeS5NVUxUSV9JUCkpOnRoaXMucmVjb25uZWN0KHUuYWN0aW9uLEp5LlNFUlZFUl9FUlJPUiksZT09PVB3LkpPSU58fGU9PT1Qdy5SRUpPSU4/bnVsbDphd2FpdCB0aGlzLnJlcXVlc3QoZSx0KSkpfXdhaXRNZXNzYWdlKGUsdCl7cmV0dXJuIG5ldyBHaCgoaT0+e2NvbnN0IG49cj0+eyghdHx8dChyKSkmJih0aGlzLm9mZihlLG4pLGkocikpfTt0aGlzLm9uKGUsbil9KSl9dXBsb2FkV1JUQ1N0YXRzKGUpe2lmKCF0aGlzLnN0b3JlLnNlc3Npb25JZClyZXR1cm4gdm9pZCBmYi53YXJuKFwiW1wiLmNvbmNhdCh0aGlzLmNsaWVudElkLFwiXSBubyBzZXNzaW9uIGlkIHdoZW4gdXBsb2FkIHdydGMgc3RhdHNcIikpO2NvbnN0IHQ9e2x0czpEYXRlLm5vdygpLHNpZDp0aGlzLnN0b3JlLnNlc3Npb25JZCx1aWQ6dGhpcy5zdG9yZS5pbnRVaWQsc3RhdHM6ZX07dGhpcy51cGxvYWQoTHcuV1JUQ19TVEFUUyx0KX11cGxvYWQoZSx0KXtjb25zdCBpPXtfdHlwZTplLF9tZXNzYWdlOnR9O3RyeXt0aGlzLndlYnNvY2tldC5zZW5kTWVzc2FnZShpKX1jYXRjaChlKXtjb25zdCB0PVhBKFwiTUFYX1VQTE9BRF9DQUNIRVwiKXx8NTA7dGhpcy51cGxvYWRDYWNoZS5wdXNoKGkpLHRoaXMudXBsb2FkQ2FjaGUubGVuZ3RoPnQmJnRoaXMudXBsb2FkQ2FjaGUuc3BsaWNlKDAsMSksdGhpcy51cGxvYWRDYWNoZS5sZW5ndGg+MCYmIXRoaXMudXBsb2FkQ2FjaGVJbnRlcnZhbCYmKHRoaXMudXBsb2FkQ2FjaGVJbnRlcnZhbD13aW5kb3cuc2V0SW50ZXJ2YWwoKCgpPT57aWYodGhpcy5jb25uZWN0aW9uU3RhdGUhPT1Ody5DT05ORUNURUQpcmV0dXJuO2NvbnN0IGU9dGhpcy51cGxvYWRDYWNoZS5zcGxpY2UoMCwxKVswXTswPT09dGhpcy51cGxvYWRDYWNoZS5sZW5ndGgmJih3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLnVwbG9hZENhY2hlSW50ZXJ2YWwpLHRoaXMudXBsb2FkQ2FjaGVJbnRlcnZhbD12b2lkIDApLHRoaXMudXBsb2FkKGUuX3R5cGUsZS5fbWVzc2FnZSl9KSxYQShcIlVQTE9BRF9DQUNIRV9JTlRFUlZBTFwiKXx8MmUzKSl9fXNlbmQoZSx0KXtjb25zdCBpPXtfdHlwZTplLF9tZXNzYWdlOnR9O3RoaXMud2Vic29ja2V0LnNlbmRNZXNzYWdlKGkpfWluaXQoZSx0KXtyZXR1cm4gdGhpcy5pbml0RXJyb3I9dm9pZCAwLHRoaXMubXVsdGlJcE9wdGlvbj12b2lkIDAsdGhpcy5qb2luUmVzcG9uc2U9dm9pZCAwLHRoaXMucmVjb25uZWN0VG9rZW49dm9pZCAwLHRoaXMub3BlbkNvbm5lY3Rpb25UaW1lPXZvaWQgMCxuZXcgR2goKCh0LGkpPT57dGhpcy5vbmNlKER3LldTX0NPTk5FQ1RFRCwoKCk9PnQodGhpcy5qb2luUmVzcG9uc2UpKSksdGhpcy5vbmNlKER3LldTX0NMT1NFRCwoKCk9PmkodGhpcy5pbml0RXJyb3J8fG5ldyB5YihSeS5XU19BQk9SVCkpKSksdGhpcy5jb25uZWN0aW9uU3RhdGU9TncuQ09OTkVDVElORyx0aGlzLndlYnNvY2tldC5pbml0KGUpLmNhdGNoKGkpLHRoaXMud3NJbmZsYXRlRGF0YVRpbWVyJiZ3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLndzSW5mbGF0ZURhdGFUaW1lciksdGhpcy53c0luZmxhdGVEYXRhVGltZXI9d2luZG93LnNldEludGVydmFsKCgoKT0+e3RoaXMuaGFuZGxlV3NJbmZsYXRlRGF0YSgpfSksMmU0KX0pKX1jbG9zZShlKXt0aGlzLnBpbmdwb25nVGltZXImJih0aGlzLnBpbmdwb25nVGltZW91dENvdW50PTAsd2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy5waW5ncG9uZ1RpbWVyKSx0aGlzLnBpbmdwb25nVGltZXI9dm9pZCAwKSx0aGlzLndzSW5mbGF0ZURhdGFUaW1lciYmKHRoaXMuaGFuZGxlV3NJbmZsYXRlRGF0YSgpLHdpbmRvdy5jbGVhckludGVydmFsKHRoaXMud3NJbmZsYXRlRGF0YVRpbWVyKSx0aGlzLndzSW5mbGF0ZURhdGFUaW1lcj12b2lkIDApLHRoaXMucmVjb25uZWN0VG9rZW49dm9pZCAwLHRoaXMuam9pblJlc3BvbnNlPXZvaWQgMCx0aGlzLl9kaXNjb25uZWN0ZWRSZWFzb249ZXx8SHkuTEVBVkUsdGhpcy5jb25uZWN0aW9uU3RhdGU9TncuQ0xPU0VELGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmNsaWVudElkLFwiXSBcIikrXCJ3aWxsIGNsb3NlIHdlYnNvY2tldCBpbiBzaWduYWxcIiksdGhpcy53ZWJzb2NrZXQuY2xvc2UoKX1hc3luYyBqb2luKCl7aWYoIXRoaXMuam9pblJlc3BvbnNlKXt0aGlzLmVtaXQoRHcuQUJPUlRfUDJQX0VYRUNVVElPTik7Y29uc3QgZT1hd2FpdCBaeSh0aGlzLER3LlJFUVVFU1RfSk9JTl9JTkZPKSx0PWF3YWl0IHRoaXMucmVxdWVzdChQdy5KT0lOLGUpO2lmKCF0KXJldHVybiB0aGlzLmVtaXQoRHcuUkVQT1JUX0pPSU5fR0FURVdBWSxlTy5USU1FT1VULHRoaXMudXJsfHxcIlwiKSwhMTt0aGlzLmpvaW5SZXNwb25zZT10LHRoaXMuZW1pdChEdy5KT0lOX1JFU1BPTlNFLHRoaXMuam9pblJlc3BvbnNlKSx0aGlzLnJlY29ubmVjdFRva2VuPXRoaXMuam9pblJlc3BvbnNlLnJlam9pbl90b2tlbn1yZXR1cm4gdGhpcy5jb25uZWN0aW9uU3RhdGU9TncuQ09OTkVDVEVELHRoaXMucGluZ3BvbmdUaW1lciYmd2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy5waW5ncG9uZ1RpbWVyKSx0aGlzLnBpbmdwb25nVGltZXI9d2luZG93LnNldEludGVydmFsKHRoaXMuaGFuZGxlUGluZ1BvbmcuYmluZCh0aGlzKSwzZTMpLCEwfWFzeW5jIHJlam9pbigpe2lmKCF0aGlzLnJlY29ubmVjdFRva2VuKXRocm93IG5ldyB5YihSeS5VTkVYUEVDVEVEX0VSUk9SLFwiY2FuIG5vdCByZWpvaW4sIG5vIHJlam9pbiB0b2tlblwiKTtjb25zdCBlPXRBKHRoaXMsRHcuUkVRVUVTVF9SRUpPSU5fSU5GTyk7ZS50b2tlbj10aGlzLnJlY29ubmVjdFRva2VuO2NvbnN0IHQ9YXdhaXQgdGhpcy5yZXF1ZXN0KFB3LlJFSk9JTixlKTtyZXR1cm4hIXQmJih0aGlzLmNvbm5lY3Rpb25TdGF0ZT1Ody5DT05ORUNURUQsdGhpcy5waW5ncG9uZ1RpbWVyJiZ3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLnBpbmdwb25nVGltZXIpLHRoaXMucGluZ3BvbmdUaW1lcj13aW5kb3cuc2V0SW50ZXJ2YWwodGhpcy5oYW5kbGVQaW5nUG9uZy5iaW5kKHRoaXMpLDNlMyksdC5wZWVycyYmdC5wZWVycy5mb3JFYWNoKChlPT57dGhpcy5lbWl0KGt3Lk9OX1VTRVJfT05MSU5FLHt1aWQ6ZS51aWR9KSxlLmF1ZGlvJiZ0aGlzLmVtaXQoa3cuT05fQUREX0FVRElPX1NUUkVBTSx7dWlkOmUudWlkLHVpbnRfaWQ6ZS51aW50X2lkLGF1ZGlvOiEwLHNzcmNJZDplLmF1ZGlvX3NzcmN9KSxlLnZpZGVvJiZ0aGlzLmVtaXQoa3cuT05fQUREX1ZJREVPX1NUUkVBTSx7dWlkOmUudWlkLHVpbnRfaWQ6ZS51aW50X2lkLHZpZGVvOiEwLHNzcmNJZDplLnZpZGVvX3NzcmN9KSxlLmF1ZGlvX211dGU/dGhpcy5lbWl0KGt3Lk1VVEVfQVVESU8se3VpZDplLnVpZH0pOnRoaXMuZW1pdChrdy5VTk1VVEVfQVVESU8se3VpZDplLnVpZH0pLGUudmlkZW9fbXV0ZT90aGlzLmVtaXQoa3cuTVVURV9WSURFTyx7dWlkOmUudWlkfSk6dGhpcy5lbWl0KGt3LlVOTVVURV9WSURFTyx7dWlkOmUudWlkfSksZS5hdWRpb19lbmFibGVfbG9jYWw/dGhpcy5lbWl0KGt3LkVOQUJMRV9MT0NBTF9BVURJTyx7dWlkOmUudWlkfSk6dGhpcy5lbWl0KGt3LkRJU0FCTEVfTE9DQUxfQVVESU8se3VpZDplLnVpZH0pLGUudmlkZW9fZW5hYmxlX2xvY2FsP3RoaXMuZW1pdChrdy5FTkFCTEVfTE9DQUxfVklERU8se3VpZDplLnVpZH0pOnRoaXMuZW1pdChrdy5ESVNBQkxFX0xPQ0FMX1ZJREVPLHt1aWQ6ZS51aWR9KSxlLmF1ZGlvfHxlLnZpZGVvfHx0aGlzLmVtaXQoa3cuT05fUkVNT1ZFX1NUUkVBTSx7dWlkOmUudWlkLHVpbnRfaWQ6ZS51aW50X2lkfSl9KSksITApfXJlY29ubmVjdChlLHQpe3RoaXMucGluZ3BvbmdUaW1lciYmKHRoaXMucGluZ3BvbmdUaW1lb3V0Q291bnQ9MCx3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLnBpbmdwb25nVGltZXIpLHRoaXMucGluZ3BvbmdUaW1lcj12b2lkIDApLHRoaXMud2Vic29ja2V0LnJlY29ubmVjdChlLHQpfWhhbmRsZU5vdGlmaWNhdGlvbihlKXtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gcmVjZWl2ZSBub3RpZmljYXRpb246IFwiKSxlKTtjb25zdCB0PU5PKGUuY29kZSk7aWYoMjg9PT1lLmNvZGUmJlwiZGV0YWlsXCJpbiBlJiYoZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gcmVjZWl2ZSByZWNvdmVyIG5vdGlmaWNhdGlvbjogXCIpLGUuZGV0YWlsKSx0aGlzLmVtaXQoRHcuUkVDT1ZFUl9OT1RJRklDQVRJT04sZS5kZXRhaWwpKSxcInN1Y2Nlc3NcIiE9PXQuYWN0aW9uKXtpZihcImZhaWxlZFwiIT09dC5hY3Rpb24pcmV0dXJuXCJxdWl0XCI9PT10LmFjdGlvbj8oXCJFUlJfUkVQRUFUX0pPSU5fQ0hBTk5FTFwiPT09dC5kZXNjJiZ0aGlzLmNsb3NlKEh5LlVJRF9CQU5ORUQpLHZvaWQgdGhpcy5jbG9zZSgpKTp2b2lkIHRoaXMucmVjb25uZWN0KHQuYWN0aW9uLEp5LlNFUlZFUl9FUlJPUik7ZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuY2xpZW50SWQsXCJdIGlnbm9yZSBlcnJvcjogXCIpLHQuZGVzYyl9fWhhbmRsZVBpbmdQb25nKCl7aWYoIXRoaXMud2Vic29ja2V0fHxcImNvbm5lY3RlZFwiIT09dGhpcy53ZWJzb2NrZXQuc3RhdGUpcmV0dXJuO3RoaXMucGluZ3BvbmdUaW1lb3V0Q291bnQ+MCYmdGhpcy5ydHRSb2xsaW5nLmFkZCgzZTMpLHRoaXMucGluZ3BvbmdUaW1lb3V0Q291bnQrPTE7Y29uc3QgZT1YQShcIlBJTkdfUE9OR19USU1FX09VVFwiKSx0PURhdGUubm93KCk7dGhpcy5waW5ncG9uZ1RpbWVvdXRDb3VudD49ZSYmKGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuY2xpZW50SWQsXCJdIFBJTkctUE9ORyBUaW1lb3V0LiBMYXN0IFNvY2tldCBNZXNzYWdlOiBcIikuY29uY2F0KHQtdGhpcy5sYXN0TXNnVGltZSxcIm1zXCIpKSx0LXRoaXMubGFzdE1zZ1RpbWU+WEEoXCJXRUJTT0NLRVRfVElNRU9VVF9NSU5cIikpP3RoaXMucmVjb25uZWN0KFwicmV0cnlcIixKeS5USU1FT1VUKTp0aGlzLnJlcXVlc3QoUHcuUElORyx2b2lkIDAsITApLnRoZW4oKCgpPT57dGhpcy5waW5ncG9uZ1RpbWVvdXRDb3VudD0wO2NvbnN0IGU9RGF0ZS5ub3coKS10O3RoaXMucnR0Um9sbGluZy5hZGQoZSksWEEoXCJSRVBPUlRfU1RBVFNcIikmJnRoaXMuc2VuZChQdy5QSU5HX0JBQ0sse3Bpbmdwb25nRWxhcHNlOmV9KX0pKS5jYXRjaCgoZT0+e30pKX1oYW5kbGVXc0luZmxhdGVEYXRhKCl7Y29uc3R7d3NJbmZsYXRlTGVuZ3RoOmUsd3NEZWZsYXRlTGVuZ3RoOnR9PXRoaXMud2Vic29ja2V0LmdldFdzSW5mbGF0ZURhdGEoKTswIT09ZSYmMCE9PXQmJnRoaXMudXBsb2FkKEx3LldTX0lORkxBVEVfREFUQV9MRU5HVEgse3dzX2RlZmxhdGVfbGVuZ3RoOnQsd3NfaW5mbGF0ZV9sZW5ndGg6ZX0pfWhhbmRsZVdlYnNvY2tldEV2ZW50cygpe3RoaXMud2Vic29ja2V0Lm9uKFV3LlJFQ09OTkVDVF9XQUlUVElOR19GSU5JU0gsKGU9Pnt0aGlzLmVtaXQoRHcuV1NfUkVDT05ORUNUX1dBSVRUSU5HX0ZJTklTSCxlKX0pKSx0aGlzLndlYnNvY2tldC5vbihVdy5SRUNPTk5FQ1RfQ1JFQVRFX0NPTk5FQ1RJT04sKGU9Pnt0aGlzLmVtaXQoRHcuV1NfUkVDT05ORUNUX0NSRUFURV9DT05ORUNUSU9OLGUpfSkpLHRoaXMud2Vic29ja2V0Lm9uKFV3Lk9OX01FU1NBR0UsdGhpcy5vbldlYnNvY2tldE1lc3NhZ2UpLHRoaXMud2Vic29ja2V0Lm9uKFV3LkNMT1NFRCwoKCk9Pnt0aGlzLmNvbm5lY3Rpb25TdGF0ZT1Ody5DTE9TRUR9KSksdGhpcy53ZWJzb2NrZXQub24oVXcuRkFJTEVELCgoKT0+e3RoaXMuX2Rpc2Nvbm5lY3RlZFJlYXNvbj1IeS5ORVRXT1JLX0VSUk9SLHRoaXMuY29ubmVjdGlvblN0YXRlPU53LkNMT1NFRH0pKSx0aGlzLndlYnNvY2tldC5vbihVdy5SRUNPTk5FQ1RJTkcsKGU9Pnt0aGlzLl93ZWJzb2NrZXRSZWNvbm5lY3RSZWFzb249ZSx0aGlzLmpvaW5SZXNwb25zZT12b2lkIDAsdGhpcy5jb25uZWN0aW9uU3RhdGU9PT1Ody5DT05ORUNURUQ/dGhpcy5jb25uZWN0aW9uU3RhdGU9TncuUkVDT05ORUNUSU5HOnRoaXMuY29ubmVjdGlvblN0YXRlPU53LkNPTk5FQ1RJTkd9KSksdGhpcy53ZWJzb2NrZXQub24oVXcuV0lMTF9SRUNPTk5FQ1QsKChlLHQsaSk9Pntjb25zdCBuPXRBKHRoaXMsRHcuSVNfUDJQX0RJU0NPTk5FQ1RFRCkscj1ufHxcInJldHJ5XCIhPT1lO24mJlwicmV0cnlcIj09PWUmJihmYi5kZWJ1ZyhcIlwiLmNvbmNhdCh0aGlzLmNsaWVudElkLFwiIHJlY29ubmVjdCBtb2RlIGlzIHJldHJ5LCBidXQgcDJwIGxvc3QsIGNoYW5nZSB0byB0cnlOZXh0XCIpKSxlPVwidHJ5TmV4dFwiLHQ9ZU8uUDJQX0RJU0NPTk5FQ1RFRCksciYmKGZiLmRlYnVnKFwiXCIuY29uY2F0KHRoaXMuY2xpZW50SWQsXCIgd2lsbCByZW5ld1Nlc3Npb24sIHJlY29ubmVjdCBtb2RlOiBcIikuY29uY2F0KGUpKSx0aGlzLmVtaXQoRHcuUkVQT1JUX0pPSU5fR0FURVdBWSx0fHxlTy5VTktOT1dOX1JFQVNPTix0aGlzLnVybHx8XCJcIiksdGhpcy5yZWNvbm5lY3RUb2tlbj12b2lkIDAsdGhpcy5lbWl0KER3LkRJU0NPTk5FQ1RfUDJQKSksaShlKX0pKSx0aGlzLndlYnNvY2tldC5vbihVdy5DT05ORUNURUQsKCgpPT57dGhpcy5vcGVuQ29ubmVjdGlvblRpbWU9RGF0ZS5ub3coKSx0aGlzLnJlY29ubmVjdFRva2VuP3RoaXMucmVqb2luKCkuY2F0Y2goKGU9PntmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLmNsaWVudElkLFwiXSByZWpvaW4gZmFpbGVkIFwiKS5jb25jYXQoZSkpLHRoaXMucmVjb25uZWN0KFwidHJ5TmV4dFwiLEp5LlNFUlZFUl9FUlJPUil9KSk6dGhpcy5qb2luKCkuY2F0Y2goKGU9PntpZih0aGlzLmVtaXQoRHcuUkVQT1JUX0pPSU5fR0FURVdBWSxlLHRoaXMudXJsfHxcIlwiKSxlIGluc3RhbmNlb2YgeWIpe2lmKGUuY29kZT09PVJ5LlVORVhQRUNURURfUkVTUE9OU0UmJmUuZGF0YS5jb2RlPT09T3cuRVJSX05PX0FVVEhPUklaRUQpcmV0dXJuIHRoaXMuaW5pdEVycm9yPW5ldyB5YihSeS5DQU5fTk9UX0dFVF9HQVRFV0FZX1NFUlZFUixcIkFnb3JhUlRDRXJyb3IgQ0FOX05PVF9HRVRfR0FURVdBWV9TRVJWRVI6IGR5bmFtaWMga2V5IGV4cGlyZWRcIiksZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gcmVjb25uZWN0IG5vIGF1dGhvcml6ZWQsIHJlY292ZXJcIikpLHZvaWQgdGhpcy5yZWNvbm5lY3QoXCJyZWNvdmVyXCIsSnkuU0VSVkVSX0VSUk9SKTtmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gam9pbiBnYXRld2F5IHJlcXVlc3QgZmFpbGVkXCIpLGUudG9TdHJpbmcoKSksdGhpcy5zcGVjLmZvcmNlV2FpdEdhdGV3YXlSZXNwb25zZT90aGlzLnJlY29ubmVjdChcInRyeU5leHRcIixKeS5TRVJWRVJfRVJST1IpOih0aGlzLmluaXRFcnJvcj1lLHRoaXMuY2xvc2UoKSl9fSkpfSkpLHRoaXMud2Vic29ja2V0Lm9uKFV3LlJFUVVFU1RfTkVXX1VSTFMsKChlLHQpPT57WnkodGhpcyxEdy5SRVFVRVNUX1JFQ09WRVIsdGhpcy5tdWx0aUlwT3B0aW9uKS50aGVuKGUpLmNhdGNoKHQpfSkpLHRoaXMud2Vic29ja2V0Lm9uKFV3Lk9OX1RPS0VOX1BSSVZJTEVHRV9ESURfRVhQSVJFLCgoKT0+e3RoaXMuZW1pdChrdy5PTl9UT0tFTl9QUklWSUxFR0VfRElEX0VYUElSRSl9KSksdGhpcy53ZWJzb2NrZXQub24oVE8uUFJFX0NPTk5FQ1RfUEMsKCgpPT57dGhpcy5lbWl0KER3LlBSRV9DT05ORUNUX1BDKX0pKX19bGV0IFlPPWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuQ0hPT1NFX1NFUlZFUj0xMV09XCJDSE9PU0VfU0VSVkVSXCIsZVtlLkNMT1VEX1BST1hZPTE4XT1cIkNMT1VEX1BST1hZXCIsZVtlLkNMT1VEX1BST1hZXzU9MjBdPVwiQ0xPVURfUFJPWFlfNVwiLGVbZS5DTE9VRF9QUk9YWV9GQUxMQkFDSz0yNl09XCJDTE9VRF9QUk9YWV9GQUxMQkFDS1wiLGV9KHt9KTtmdW5jdGlvbiBxTyhlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gek8oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/cU8oT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6cU8oT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9ZnVuY3Rpb24gSk8oZSl7cmV0dXJuIGUubWF0Y2goL15bXFwuXFw6XFxkXSskLyk/XCJcIi5jb25jYXQoZS5yZXBsYWNlKC9bXlxcZF0vZyxcIi1cIiksXCIuXCIpLmNvbmNhdChYQShcIlRVUk5fRE9NQUlOXCIpKTooZmIuaW5mbyhcIlVuaWRlbnRpZmllZCBhcyBpcDogXCIuY29uY2F0KGUsXCIsIHVzZSBhcyBob3N0XCIpKSxlKX1mdW5jdGlvbiBYTyhlLHQpe2UuYWRkcmVzc2VzfHwoZS5hZGRyZXNzZXM9W10pO2NvbnN0IGk9ZnVuY3Rpb24oZSx0KXtpZihYQShcIkNPTk5FQ1RfR0FURVdBWV9XSVRIT1VUX0RPTUFJTlwiKSlyZXR1cm4gZS5tYXAoKGU9PntsZXR7aXA6dCxwb3J0Oml9PWU7cmV0dXJue2FkZHJlc3M6XCJcIi5jb25jYXQodCxcIjpcIikuY29uY2F0KGkpfX0pKTtjb25zdCBpPVhBKFwiR0FURVdBWV9ET01BSU5TXCIpO2xldCBuPWlbMV0mJkRuKHQpLmNhbGwodCxpWzFdKT8xOjA7cmV0dXJuIGUubWFwKChlPT57bGV0e2RvbWFpbl9wcmVmaXg6dCxwb3J0OnIsaXA6b309ZTtpZih0KXJldHVybnthZGRyZXNzOlwiXCIuY29uY2F0KHQsXCIuXCIpLmNvbmNhdChpW24rKyVpLmxlbmd0aF0sXCI6XCIpLmNvbmNhdChyKX07Y29uc3Qgcz0vXltcXC5cXDpcXGRdKyQvLnRlc3QobyksYT1zP1wiXCIuY29uY2F0KG8ucmVwbGFjZSgvW15cXGRdL2csXCItXCIpLFwiLlwiKS5jb25jYXQoaVtuKyslaS5sZW5ndGhdLFwiOlwiKS5jb25jYXQocik6XCJcIi5jb25jYXQobyxcIjpcIikuY29uY2F0KHIpO3JldHVybiBzfHxmYi5pbmZvKFwiVW5pZGVudGlmaWVkIGFzIGlwOiBcIi5jb25jYXQobyxcIiwgdXNlIGFzIGhvc3RcIikpLHtpcDpvLHBvcnQ6cixhZGRyZXNzOmF9fSkpfShlLmFkZHJlc3Nlcyx0KSxuPUFycmF5LmlzQXJyYXkoZS5kZXRhaWwpJiZlLmRldGFpbFsxOF07aWYobiYmXCJzdHJpbmdcIj09dHlwZW9mIG4pe2NvbnN0IGU9bi5zcGxpdChcIjtcIik7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kyspe3ZhciByO2NvbnN0IG49anAocj1lW3RdKS5jYWxsKHIpO2lbdF0mJm4mJihpW3RdLmlwNj1uKX19Y29uc3Qgbz1lLmRldGFpbCYmZS5kZXRhaWwuY2FuZGlkYXRlO2xldCBzO2lmKG8pe2NvbnN0W2UsdF09by5zcGxpdChcIjpcIik7ZSYmdCYmKHM9e3BvcnQ6TnVtYmVyKHQpLGlwOmUsYWRkcmVzczpcIlwiLmNvbmNhdChlLFwiOlwiKS5jb25jYXQodCl9KX1yZXR1cm57Z2F0ZXdheUFkZHJzOmksYXBHYXRld2F5QWRkcmVzczpzLHVpZDplLnVpZCxjaWQ6ZS5jaWQsY2VydDplLmNlcnQsdmlkOmUuZGV0YWlsJiZlLmRldGFpbFs4XSx1bmlfbGJzX2lwOmUuZGV0YWlsJiZlLmRldGFpbFsxXSxyZXM6ZSxjc0lwOmUuZGV0YWlsJiZlLmRldGFpbFs1MDJdfX1mdW5jdGlvbiBRTyhlKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgZT9lOmUuZXhhY3R8fGUuaWRlYWx8fGUubWF4fHxlLm1pbnx8MH1mdW5jdGlvbiBaTyhlKXtjb25zdCB0PWUuX2VuY29kZXJDb25maWc7aWYoIXQpcmV0dXJue307Y29uc3QgaT17cmVzb2x1dGlvbjp0LndpZHRoJiZ0LmhlaWdodD9cIlwiLmNvbmNhdChRTyh0LndpZHRoKSxcInhcIikuY29uY2F0KFFPKHQuaGVpZ2h0KSk6dm9pZCAwLG1heFZpZGVvQlc6dC5iaXRyYXRlTWF4LG1pblZpZGVvQlc6dC5iaXRyYXRlTWlufTtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdC5mcmFtZVJhdGU/KGkubWF4RnJhbWVSYXRlPXQuZnJhbWVSYXRlLGkubWluRnJhbWVSYXRlPXQuZnJhbWVSYXRlKTp0LmZyYW1lUmF0ZSYmKGkubWF4RnJhbWVSYXRlPXQuZnJhbWVSYXRlLm1heHx8dC5mcmFtZVJhdGUuaWRlYWx8fHQuZnJhbWVSYXRlLmV4YWN0fHx0LmZyYW1lUmF0ZS5taW4saS5taW5GcmFtZVJhdGU9dC5mcmFtZVJhdGUubWlufHx0LmZyYW1lUmF0ZS5pZGVhbHx8dC5mcmFtZVJhdGUuZXhhY3R8fHQuZnJhbWVSYXRlLm1heCksaX1mdW5jdGlvbiAkTyhlKXtyZXR1cm4gZT49MCYmZTwuMTc/MTplPj0uMTcmJmU8LjM2PzI6ZT49LjM2JiZlPC41OT8zOmU+PS41OSYmZTw9MT80OmU+MT81OjB9ZnVuY3Rpb24gZU4oZSx0KXtsZXQgaSxuLHI7c3dpdGNoKHQpe2Nhc2UgWU8uQ0hPT1NFX1NFUlZFUjpuPTQwOTYscj1cImNob29zZSBzZXJ2ZXJcIjticmVhaztjYXNlIFlPLkNMT1VEX1BST1hZOm49MTA0ODU3NixyPVwicHJveHlcIjticmVhaztjYXNlIFlPLkNMT1VEX1BST1hZXzU6bj00MTk0MzA0LHI9XCJwcm94eTVcIjticmVhaztjYXNlIFlPLkNMT1VEX1BST1hZX0ZBTExCQUNLOm49NDE5NDMxMCxyPVwicHJveHkgZmFsbGJhY2tcIjticmVhaztkZWZhdWx0OnRocm93IG5ldyB5YihSeS5VTkVYUEVDVEVEX0VSUk9SLFwibXVsdGkgdW5saWJzIHJlc3BvbnNlIHRyYW5zZm9ybWVyIGdldCB1bmtub3duIHNlcnZpY2UgaWRcIix7Y3NJcDplLmRldGFpbCYmZS5kZXRhaWxbNTAyXSxyZXRyeTohMX0pfWlmKGUucmVzcG9uc2VfYm9keS5mb3JFYWNoKCh0PT57dC5idWZmZXImJnQuYnVmZmVyLmZsYWc9PT1uJiYoaT17Y29kZTp0LmJ1ZmZlci5jb2RlLGFkZHJlc3NlczoodC5idWZmZXIuZWRnZXNfc2VydmljZXN8fFtdKS5tYXAoKGU9PnpPKHpPKHt9LGUpLHt9LHt0aWNrZXQ6dC5idWZmZXIuY2VydH0pKSksc2VydmVyX3RzOmUuZW50ZXJfdHMsdWlkOnQuYnVmZmVyLnVpZCxjaWQ6dC5idWZmZXIuY2lkLGNuYW1lOnQuYnVmZmVyLmNuYW1lLGRldGFpbDp6Tyh6Tyh7fSx0LmJ1ZmZlci5kZXRhaWwpLGUuZGV0YWlsKSxmbGFnOnQuYnVmZmVyLmZsYWcsb3BpZDplLm9waWQsY2VydDp0LmJ1ZmZlci5jZXJ0fSl9KSksIWkpdGhyb3cgbmV3IHliKFJ5Lk1VTFRJX1VOSUxCU19SRVNQT05TRV9FUlJPUixcImNhbm5vdCBwYXJzZSByZXNwb25zZSBcIi5jb25jYXQocixcIiBmcm9tIG11bHRpIHVuaWxicyByZXNwb25zZVwiKSx7Y3NJcDplLmRldGFpbCYmZS5kZXRhaWxbNTAyXX0pO3JldHVybiBpfWFzeW5jIGZ1bmN0aW9uIHROKGUsdCl7cmV0dXJuIGF3YWl0IEdoLmFsbChlLmFkZHJlc3Nlcy5tYXAoKGFzeW5jIGU9Pih7YWRkcmVzczpKTyhlLmlwKSx0Y3Bwb3J0OmUucG9ydCx1ZHBwb3J0OmUucG9ydCx1c2VybmFtZTp0JiZYQShcIkVOQ1JZUFRfUFJPWFlfVVNFUk5BTUVfQU5EX1BTV1wiKSYmd2luZG93LmlzU2VjdXJlQ29udGV4dD90LnRvU3RyaW5nKCk6S0EudXNlcm5hbWUscGFzc3dvcmQ6dCYmWEEoXCJFTkNSWVBUX1BST1hZX1VTRVJOQU1FX0FORF9QU1dcIikmJndpbmRvdy5pc1NlY3VyZUNvbnRleHQ/YXdhaXQgVXkodC50b1N0cmluZygpKTpLQS5wYXNzd29yZH0pKSkpfWZ1bmN0aW9uIGlOKGUsdCl7Y29uc3QgaT10LmdldE1lZGlhU3RyZWFtVHJhY2soITApLmdldFNldHRpbmdzKCksbj10LnZpZGVvSGVpZ2h0fHxpLmhlaWdodCxyPXQudmlkZW9XaWR0aHx8aS53aWR0aDtyZXR1cm4gbiYmcj9NYXRoLm1heChNYXRoLm1pbihuLHIpL01hdGgubWluKFFPKGUuaGVpZ2h0KSxRTyhlLndpZHRoKSksMSk6KGZiLndhcm5pbmcoXCJjYW4ndCBnZXQgb3JpLXRyYWNrJ3MgaGVpZ2h0LCBkZWZhdWx0IHNjYWxlIGRvd24gNCB0aW1lcyBmb3IgbG93IHN0cmVhbVwiKSw0KX1mdW5jdGlvbiBuTihlKXtsZXR7Y2FuZGlkYXRlVHlwZTp0LHJlbGF5UHJvdG9jb2w6aSx0eXBlOm4sYWRkcmVzczpyLHBvcnQ6byxwcm90b2NvbDpzfT1lO3JldHVyblwibG9jYWwtY2FuZGlkYXRlXCI9PT1uP3tjYW5kaWRhdGVUeXBlOnQscmVsYXlQcm90b2NvbDppLHByb3RvY29sOnN9OntjYW5kaWRhdGVUeXBlOnQscmVsYXlQcm90b2NvbDppLGFkZHJlc3M6cixwb3J0Om8scHJvdG9jb2w6c319dmFyIHJOLG9OPWkoZXcpLHNOPVhpKFwiQXJyYXlcIikudmFsdWVzLGFOPXBuLGNOPVplLGROPWwsbE49c04sdU49QXJyYXkucHJvdG90eXBlLGhOPXtET01Ub2tlbkxpc3Q6ITAsTm9kZUxpc3Q6ITB9LHBOPWZ1bmN0aW9uKGUpe3ZhciB0PWUudmFsdWVzO3JldHVybiBlPT09dU58fGROKHVOLGUpJiZ0PT09dU4udmFsdWVzfHxjTihoTixhTihlKSk/bE46dH0sX049aShwTiksRU49TixmTj1kLG1OPUwsVE49bixTTj1lbyxnTj1CcixSTj1rLENOPUplLElOPUssdk49T2JqZWN0LmFzc2lnbix5Tj1PYmplY3QuZGVmaW5lUHJvcGVydHksQU49Zk4oW10uY29uY2F0KSxiTj0hdk58fFROKChmdW5jdGlvbigpe2lmKEVOJiYxIT09dk4oe2I6MX0sdk4oeU4oe30sXCJhXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7eU4odGhpcyxcImJcIix7dmFsdWU6MyxlbnVtZXJhYmxlOiExfSl9fSkse2I6Mn0pKS5iKXJldHVybiEwO3ZhciBlPXt9LHQ9e30saT1TeW1ib2woKSxuPVwiYWJjZGVmZ2hpamtsbW5vcHFyc3RcIjtyZXR1cm4gZVtpXT03LG4uc3BsaXQoXCJcIikuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dFtlXT1lfSkpLDchPXZOKHt9LGUpW2ldfHxTTih2Tih7fSx0KSkuam9pbihcIlwiKSE9bn0pKT9mdW5jdGlvbihlLHQpe2Zvcih2YXIgaT1DTihlKSxuPWFyZ3VtZW50cy5sZW5ndGgscj0xLG89Z04uZixzPVJOLmY7bj5yOylmb3IodmFyIGEsYz1JTihhcmd1bWVudHNbcisrXSksZD1vP0FOKFNOKGMpLG8oYykpOlNOKGMpLGw9ZC5sZW5ndGgsdT0wO2w+dTspYT1kW3UrK10sRU4mJiFtTihzLGMsYSl8fChpW2FdPWNbYV0pO3JldHVybiBpfTp2Tix3Tj1paSxPTj1ycyxOTj1YdCxETj1MLFBOPUplLExOPWZ1bmN0aW9uKGUsdCxpLG4pe3RyeXtyZXR1cm4gbj90KHdOKGkpWzBdLGlbMV0pOnQoaSl9Y2F0Y2godCl7T04oZSxcInRocm93XCIsdCl9fSxrTj1qbyxNTj1qYyxVTj1HaSx4Tj1FXyxWTj1lcyxGTj1xbyxCTj1BcnJheSxqTj1kLEdOPTIxNDc0ODM2NDcsV049L1teXFwwLVxcdTAwN0VdLyxITj0vWy5cXHUzMDAyXFx1RkYwRVxcdUZGNjFdL2csS049XCJPdmVyZmxvdzogaW5wdXQgbmVlZHMgd2lkZXIgaW50ZWdlcnMgdG8gcHJvY2Vzc1wiLFlOPVJhbmdlRXJyb3IscU49ak4oSE4uZXhlYyksek49TWF0aC5mbG9vcixKTj1TdHJpbmcuZnJvbUNoYXJDb2RlLFhOPWpOKFwiXCIuY2hhckNvZGVBdCksUU49ak4oW10uam9pbiksWk49ak4oW10ucHVzaCksJE49ak4oXCJcIi5yZXBsYWNlKSxlRD1qTihcIlwiLnNwbGl0KSx0RD1qTihcIlwiLnRvTG93ZXJDYXNlKSxpRD1mdW5jdGlvbihlKXtyZXR1cm4gZSsyMis3NSooZTwyNil9LG5EPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj0wO2ZvcihlPWk/ek4oZS83MDApOmU+PjEsZSs9ek4oZS90KTtlPjQ1NTspZT16TihlLzM1KSxuKz0zNjtyZXR1cm4gek4obiszNiplLyhlKzM4KSl9LHJEPWZ1bmN0aW9uKGUpe3ZhciB0PVtdO2U9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLGk9MCxuPWUubGVuZ3RoO2k8bjspe3ZhciByPVhOKGUsaSsrKTtpZihyPj01NTI5NiYmcjw9NTYzMTkmJmk8bil7dmFyIG89WE4oZSxpKyspOzU2MzIwPT0oNjQ1MTImbyk/Wk4odCwoKDEwMjMmcik8PDEwKSsoMTAyMyZvKSs2NTUzNik6KFpOKHQsciksaS0tKX1lbHNlIFpOKHQscil9cmV0dXJuIHR9KGUpO3ZhciBpLG4scj1lLmxlbmd0aCxvPTEyOCxzPTAsYT03Mjtmb3IoaT0wO2k8ZS5sZW5ndGg7aSsrKShuPWVbaV0pPDEyOCYmWk4odCxKTihuKSk7dmFyIGM9dC5sZW5ndGgsZD1jO2ZvcihjJiZaTih0LFwiLVwiKTtkPHI7KXt2YXIgbD1HTjtmb3IoaT0wO2k8ZS5sZW5ndGg7aSsrKShuPWVbaV0pPj1vJiZuPGwmJihsPW4pO3ZhciB1PWQrMTtpZihsLW8+ek4oKEdOLXMpL3UpKXRocm93IFlOKEtOKTtmb3Iocys9KGwtbykqdSxvPWwsaT0wO2k8ZS5sZW5ndGg7aSsrKXtpZigobj1lW2ldKTxvJiYrK3M+R04pdGhyb3cgWU4oS04pO2lmKG49PW8pe2Zvcih2YXIgaD1zLHA9MzY7Oyl7dmFyIF89cDw9YT8xOnA+PWErMjY/MjY6cC1hO2lmKGg8XylicmVhazt2YXIgRT1oLV8sZj0zNi1fO1pOKHQsSk4oaUQoXytFJWYpKSksaD16TihFL2YpLHArPTM2fVpOKHQsSk4oaUQoaCkpKSxhPW5EKHMsdSxkPT1jKSxzPTAsZCsrfX1zKyssbysrfXJldHVybiBRTih0LFwiXCIpfSxvRD13aSxzRD1OLGFEPUdnLGNEPWgsZEQ9WHQsbEQ9ZCx1RD1oYSxoRD1oYyxwRD1TYyxfRD1aZSxFRD1iTixmRD1mdW5jdGlvbihlKXt2YXIgdD1QTihlKSxpPU1OKHRoaXMpLG49YXJndW1lbnRzLmxlbmd0aCxyPW4+MT9hcmd1bWVudHNbMV06dm9pZCAwLG89dm9pZCAwIT09cjtvJiYocj1OTihyLG4+Mj9hcmd1bWVudHNbMl06dm9pZCAwKSk7dmFyIHMsYSxjLGQsbCx1LGg9Rk4odCkscD0wO2lmKCFofHx0aGlzPT09Qk4mJmtOKGgpKWZvcihzPVVOKHQpLGE9aT9uZXcgdGhpcyhzKTpCTihzKTtzPnA7cCsrKXU9bz9yKHRbcF0scCk6dFtwXSx4TihhLHAsdSk7ZWxzZSBmb3IobD0oZD1WTih0LGgpKS5uZXh0LGE9aT9uZXcgdGhpczpbXTshKGM9RE4obCxkKSkuZG9uZTtwKyspdT1vP0xOKGQscixbYy52YWx1ZSxwXSwhMCk6Yy52YWx1ZSx4TihhLHAsdSk7cmV0dXJuIGEubGVuZ3RoPXAsYX0sbUQ9Ul8sVEQ9Q2guY29kZUF0LFNEPWZ1bmN0aW9uKGUpe3ZhciB0LGksbj1bXSxyPWVEKCROKHREKGUpLEhOLFwiLlwiKSxcIi5cIik7Zm9yKHQ9MDt0PHIubGVuZ3RoO3QrKylpPXJbdF0sWk4obixxTihXTixpKT9cInhuLS1cIityRChpKTppKTtyZXR1cm4gUU4obixcIi5cIil9LGdEPWZuLFJEPURhLENEPVpjLElEPXJDLHZEPXJhLHlEPXZELnNldCxBRD12RC5nZXR0ZXJGb3IoXCJVUkxcIiksYkQ9SUQuVVJMU2VhcmNoUGFyYW1zLHdEPUlELmdldFN0YXRlLE9EPWNELlVSTCxORD1jRC5UeXBlRXJyb3IsREQ9Y0QucGFyc2VJbnQsUEQ9TWF0aC5mbG9vcixMRD1NYXRoLnBvdyxrRD1sRChcIlwiLmNoYXJBdCksTUQ9bEQoLy4vLmV4ZWMpLFVEPWxEKFtdLmpvaW4pLHhEPWxEKDEuLnRvU3RyaW5nKSxWRD1sRChbXS5wb3ApLEZEPWxEKFtdLnB1c2gpLEJEPWxEKFwiXCIucmVwbGFjZSksakQ9bEQoW10uc2hpZnQpLEdEPWxEKFwiXCIuc3BsaXQpLFdEPWxEKFwiXCIuc2xpY2UpLEhEPWxEKFwiXCIudG9Mb3dlckNhc2UpLEtEPWxEKFtdLnVuc2hpZnQpLFlEPVwiSW52YWxpZCBzY2hlbWVcIixxRD1cIkludmFsaWQgaG9zdFwiLHpEPVwiSW52YWxpZCBwb3J0XCIsSkQ9L1thLXpdL2ksWEQ9L1tcXGQrLS5hLXpdL2ksUUQ9L1xcZC8sWkQ9L14weC9pLCREPS9eWzAtN10rJC8sZVA9L15cXGQrJC8sdFA9L15bXFxkYS1mXSskL2ksaVA9L1tcXDBcXHRcXG5cXHIgIyUvOjw+P0BbXFxcXFxcXV58XS8sblA9L1tcXDBcXHRcXG5cXHIgIy86PD4/QFtcXFxcXFxdXnxdLyxyUD0vXltcXHUwMDAwLVxcdTAwMjBdKy8sb1A9LyhefFteXFx1MDAwMC1cXHUwMDIwXSlbXFx1MDAwMC1cXHUwMDIwXSskLyxzUD0vW1xcdFxcblxccl0vZyxhUD1mdW5jdGlvbihlKXt2YXIgdCxpLG4scjtpZihcIm51bWJlclwiPT10eXBlb2YgZSl7Zm9yKHQ9W10saT0wO2k8NDtpKyspS0QodCxlJTI1NiksZT1QRChlLzI1Nik7cmV0dXJuIFVEKHQsXCIuXCIpfWlmKFwib2JqZWN0XCI9PXR5cGVvZiBlKXtmb3IodD1cIlwiLG49ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PW51bGwsaT0xLG49bnVsbCxyPTAsbz0wO288ODtvKyspMCE9PWVbb10/KHI+aSYmKHQ9bixpPXIpLG49bnVsbCxyPTApOihudWxsPT09biYmKG49byksKytyKTtyZXR1cm4gcj5pJiYodD1uLGk9ciksdH0oZSksaT0wO2k8ODtpKyspciYmMD09PWVbaV18fChyJiYocj0hMSksbj09PWk/KHQrPWk/XCI6XCI6XCI6OlwiLHI9ITApOih0Kz14RChlW2ldLDE2KSxpPDcmJih0Kz1cIjpcIikpKTtyZXR1cm5cIltcIit0K1wiXVwifXJldHVybiBlfSxjUD17fSxkUD1FRCh7fSxjUCx7XCIgXCI6MSwnXCInOjEsXCI8XCI6MSxcIj5cIjoxLFwiYFwiOjF9KSxsUD1FRCh7fSxkUCx7XCIjXCI6MSxcIj9cIjoxLFwie1wiOjEsXCJ9XCI6MX0pLHVQPUVEKHt9LGxQLHtcIi9cIjoxLFwiOlwiOjEsXCI7XCI6MSxcIj1cIjoxLFwiQFwiOjEsXCJbXCI6MSxcIlxcXFxcIjoxLFwiXVwiOjEsXCJeXCI6MSxcInxcIjoxfSksaFA9ZnVuY3Rpb24oZSx0KXt2YXIgaT1URChlLDApO3JldHVybiBpPjMyJiZpPDEyNyYmIV9EKHQsZSk/ZTplbmNvZGVVUklDb21wb25lbnQoZSl9LHBQPXtmdHA6MjEsZmlsZTpudWxsLGh0dHA6ODAsaHR0cHM6NDQzLHdzOjgwLHdzczo0NDN9LF9QPWZ1bmN0aW9uKGUsdCl7dmFyIGk7cmV0dXJuIDI9PWUubGVuZ3RoJiZNRChKRCxrRChlLDApKSYmKFwiOlwiPT0oaT1rRChlLDEpKXx8IXQmJlwifFwiPT1pKX0sRVA9ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuIGUubGVuZ3RoPjEmJl9QKFdEKGUsMCwyKSkmJigyPT1lLmxlbmd0aHx8XCIvXCI9PT0odD1rRChlLDIpKXx8XCJcXFxcXCI9PT10fHxcIj9cIj09PXR8fFwiI1wiPT09dCl9LGZQPWZ1bmN0aW9uKGUpe3JldHVyblwiLlwiPT09ZXx8XCIlMmVcIj09PUhEKGUpfSxtUD17fSxUUD17fSxTUD17fSxnUD17fSxSUD17fSxDUD17fSxJUD17fSx2UD17fSx5UD17fSxBUD17fSxiUD17fSx3UD17fSxPUD17fSxOUD17fSxEUD17fSxQUD17fSxMUD17fSxrUD17fSxNUD17fSxVUD17fSx4UD17fSxWUD1mdW5jdGlvbihlLHQsaSl7dmFyIG4scixvLHM9Z0QoZSk7aWYodCl7aWYocj10aGlzLnBhcnNlKHMpKXRocm93IE5EKHIpO3RoaXMuc2VhcmNoUGFyYW1zPW51bGx9ZWxzZXtpZih2b2lkIDAhPT1pJiYobj1uZXcgVlAoaSwhMCkpLHI9dGhpcy5wYXJzZShzLG51bGwsbikpdGhyb3cgTkQocik7KG89d0QobmV3IGJEKSkuYmluZFVSTCh0aGlzKSx0aGlzLnNlYXJjaFBhcmFtcz1vfX07VlAucHJvdG90eXBlPXt0eXBlOlwiVVJMXCIscGFyc2U6ZnVuY3Rpb24oZSx0LGkpe3ZhciBuLHIsbyxzLGEsYz10aGlzLGQ9dHx8bVAsbD0wLHU9XCJcIixoPSExLHA9ITEsXz0hMTtmb3IoZT1nRChlKSx0fHwoYy5zY2hlbWU9XCJcIixjLnVzZXJuYW1lPVwiXCIsYy5wYXNzd29yZD1cIlwiLGMuaG9zdD1udWxsLGMucG9ydD1udWxsLGMucGF0aD1bXSxjLnF1ZXJ5PW51bGwsYy5mcmFnbWVudD1udWxsLGMuY2Fubm90QmVBQmFzZVVSTD0hMSxlPUJEKGUsclAsXCJcIiksZT1CRChlLG9QLFwiJDFcIikpLGU9QkQoZSxzUCxcIlwiKSxuPWZEKGUpO2w8PW4ubGVuZ3RoOyl7c3dpdGNoKHI9bltsXSxkKXtjYXNlIG1QOmlmKCFyfHwhTUQoSkQscikpe2lmKHQpcmV0dXJuIFlEO2Q9U1A7Y29udGludWV9dSs9SEQociksZD1UUDticmVhaztjYXNlIFRQOmlmKHImJihNRChYRCxyKXx8XCIrXCI9PXJ8fFwiLVwiPT1yfHxcIi5cIj09cikpdSs9SEQocik7ZWxzZXtpZihcIjpcIiE9cil7aWYodClyZXR1cm4gWUQ7dT1cIlwiLGQ9U1AsbD0wO2NvbnRpbnVlfWlmKHQmJihjLmlzU3BlY2lhbCgpIT1fRChwUCx1KXx8XCJmaWxlXCI9PXUmJihjLmluY2x1ZGVzQ3JlZGVudGlhbHMoKXx8bnVsbCE9PWMucG9ydCl8fFwiZmlsZVwiPT1jLnNjaGVtZSYmIWMuaG9zdCkpcmV0dXJuO2lmKGMuc2NoZW1lPXUsdClyZXR1cm4gdm9pZChjLmlzU3BlY2lhbCgpJiZwUFtjLnNjaGVtZV09PWMucG9ydCYmKGMucG9ydD1udWxsKSk7dT1cIlwiLFwiZmlsZVwiPT1jLnNjaGVtZT9kPU5QOmMuaXNTcGVjaWFsKCkmJmkmJmkuc2NoZW1lPT1jLnNjaGVtZT9kPWdQOmMuaXNTcGVjaWFsKCk/ZD12UDpcIi9cIj09bltsKzFdPyhkPVJQLGwrKyk6KGMuY2Fubm90QmVBQmFzZVVSTD0hMCxGRChjLnBhdGgsXCJcIiksZD1NUCl9YnJlYWs7Y2FzZSBTUDppZighaXx8aS5jYW5ub3RCZUFCYXNlVVJMJiZcIiNcIiE9cilyZXR1cm4gWUQ7aWYoaS5jYW5ub3RCZUFCYXNlVVJMJiZcIiNcIj09cil7Yy5zY2hlbWU9aS5zY2hlbWUsYy5wYXRoPW1EKGkucGF0aCksYy5xdWVyeT1pLnF1ZXJ5LGMuZnJhZ21lbnQ9XCJcIixjLmNhbm5vdEJlQUJhc2VVUkw9ITAsZD14UDticmVha31kPVwiZmlsZVwiPT1pLnNjaGVtZT9OUDpDUDtjb250aW51ZTtjYXNlIGdQOmlmKFwiL1wiIT1yfHxcIi9cIiE9bltsKzFdKXtkPUNQO2NvbnRpbnVlfWQ9eVAsbCsrO2JyZWFrO2Nhc2UgUlA6aWYoXCIvXCI9PXIpe2Q9QVA7YnJlYWt9ZD1rUDtjb250aW51ZTtjYXNlIENQOmlmKGMuc2NoZW1lPWkuc2NoZW1lLHI9PXJOKWMudXNlcm5hbWU9aS51c2VybmFtZSxjLnBhc3N3b3JkPWkucGFzc3dvcmQsYy5ob3N0PWkuaG9zdCxjLnBvcnQ9aS5wb3J0LGMucGF0aD1tRChpLnBhdGgpLGMucXVlcnk9aS5xdWVyeTtlbHNlIGlmKFwiL1wiPT1yfHxcIlxcXFxcIj09ciYmYy5pc1NwZWNpYWwoKSlkPUlQO2Vsc2UgaWYoXCI/XCI9PXIpYy51c2VybmFtZT1pLnVzZXJuYW1lLGMucGFzc3dvcmQ9aS5wYXNzd29yZCxjLmhvc3Q9aS5ob3N0LGMucG9ydD1pLnBvcnQsYy5wYXRoPW1EKGkucGF0aCksYy5xdWVyeT1cIlwiLGQ9VVA7ZWxzZXtpZihcIiNcIiE9cil7Yy51c2VybmFtZT1pLnVzZXJuYW1lLGMucGFzc3dvcmQ9aS5wYXNzd29yZCxjLmhvc3Q9aS5ob3N0LGMucG9ydD1pLnBvcnQsYy5wYXRoPW1EKGkucGF0aCksYy5wYXRoLmxlbmd0aC0tLGQ9a1A7Y29udGludWV9Yy51c2VybmFtZT1pLnVzZXJuYW1lLGMucGFzc3dvcmQ9aS5wYXNzd29yZCxjLmhvc3Q9aS5ob3N0LGMucG9ydD1pLnBvcnQsYy5wYXRoPW1EKGkucGF0aCksYy5xdWVyeT1pLnF1ZXJ5LGMuZnJhZ21lbnQ9XCJcIixkPXhQfWJyZWFrO2Nhc2UgSVA6aWYoIWMuaXNTcGVjaWFsKCl8fFwiL1wiIT1yJiZcIlxcXFxcIiE9cil7aWYoXCIvXCIhPXIpe2MudXNlcm5hbWU9aS51c2VybmFtZSxjLnBhc3N3b3JkPWkucGFzc3dvcmQsYy5ob3N0PWkuaG9zdCxjLnBvcnQ9aS5wb3J0LGQ9a1A7Y29udGludWV9ZD1BUH1lbHNlIGQ9eVA7YnJlYWs7Y2FzZSB2UDppZihkPXlQLFwiL1wiIT1yfHxcIi9cIiE9a0QodSxsKzEpKWNvbnRpbnVlO2wrKzticmVhaztjYXNlIHlQOmlmKFwiL1wiIT1yJiZcIlxcXFxcIiE9cil7ZD1BUDtjb250aW51ZX1icmVhaztjYXNlIEFQOmlmKFwiQFwiPT1yKXtoJiYodT1cIiU0MFwiK3UpLGg9ITAsbz1mRCh1KTtmb3IodmFyIEU9MDtFPG8ubGVuZ3RoO0UrKyl7dmFyIGY9b1tFXTtpZihcIjpcIiE9Znx8Xyl7dmFyIG09aFAoZix1UCk7Xz9jLnBhc3N3b3JkKz1tOmMudXNlcm5hbWUrPW19ZWxzZSBfPSEwfXU9XCJcIn1lbHNlIGlmKHI9PXJOfHxcIi9cIj09cnx8XCI/XCI9PXJ8fFwiI1wiPT1yfHxcIlxcXFxcIj09ciYmYy5pc1NwZWNpYWwoKSl7aWYoaCYmXCJcIj09dSlyZXR1cm5cIkludmFsaWQgYXV0aG9yaXR5XCI7bC09ZkQodSkubGVuZ3RoKzEsdT1cIlwiLGQ9YlB9ZWxzZSB1Kz1yO2JyZWFrO2Nhc2UgYlA6Y2FzZSB3UDppZih0JiZcImZpbGVcIj09Yy5zY2hlbWUpe2Q9UFA7Y29udGludWV9aWYoXCI6XCIhPXJ8fHApe2lmKHI9PXJOfHxcIi9cIj09cnx8XCI/XCI9PXJ8fFwiI1wiPT1yfHxcIlxcXFxcIj09ciYmYy5pc1NwZWNpYWwoKSl7aWYoYy5pc1NwZWNpYWwoKSYmXCJcIj09dSlyZXR1cm4gcUQ7aWYodCYmXCJcIj09dSYmKGMuaW5jbHVkZXNDcmVkZW50aWFscygpfHxudWxsIT09Yy5wb3J0KSlyZXR1cm47aWYocz1jLnBhcnNlSG9zdCh1KSlyZXR1cm4gcztpZih1PVwiXCIsZD1MUCx0KXJldHVybjtjb250aW51ZX1cIltcIj09cj9wPSEwOlwiXVwiPT1yJiYocD0hMSksdSs9cn1lbHNle2lmKFwiXCI9PXUpcmV0dXJuIHFEO2lmKHM9Yy5wYXJzZUhvc3QodSkpcmV0dXJuIHM7aWYodT1cIlwiLGQ9T1AsdD09d1ApcmV0dXJufWJyZWFrO2Nhc2UgT1A6aWYoIU1EKFFELHIpKXtpZihyPT1yTnx8XCIvXCI9PXJ8fFwiP1wiPT1yfHxcIiNcIj09cnx8XCJcXFxcXCI9PXImJmMuaXNTcGVjaWFsKCl8fHQpe2lmKFwiXCIhPXUpe3ZhciBUPUREKHUsMTApO2lmKFQ+NjU1MzUpcmV0dXJuIHpEO2MucG9ydD1jLmlzU3BlY2lhbCgpJiZUPT09cFBbYy5zY2hlbWVdP251bGw6VCx1PVwiXCJ9aWYodClyZXR1cm47ZD1MUDtjb250aW51ZX1yZXR1cm4gekR9dSs9cjticmVhaztjYXNlIE5QOmlmKGMuc2NoZW1lPVwiZmlsZVwiLFwiL1wiPT1yfHxcIlxcXFxcIj09cilkPURQO2Vsc2V7aWYoIWl8fFwiZmlsZVwiIT1pLnNjaGVtZSl7ZD1rUDtjb250aW51ZX1pZihyPT1yTiljLmhvc3Q9aS5ob3N0LGMucGF0aD1tRChpLnBhdGgpLGMucXVlcnk9aS5xdWVyeTtlbHNlIGlmKFwiP1wiPT1yKWMuaG9zdD1pLmhvc3QsYy5wYXRoPW1EKGkucGF0aCksYy5xdWVyeT1cIlwiLGQ9VVA7ZWxzZXtpZihcIiNcIiE9cil7RVAoVUQobUQobixsKSxcIlwiKSl8fChjLmhvc3Q9aS5ob3N0LGMucGF0aD1tRChpLnBhdGgpLGMuc2hvcnRlblBhdGgoKSksZD1rUDtjb250aW51ZX1jLmhvc3Q9aS5ob3N0LGMucGF0aD1tRChpLnBhdGgpLGMucXVlcnk9aS5xdWVyeSxjLmZyYWdtZW50PVwiXCIsZD14UH19YnJlYWs7Y2FzZSBEUDppZihcIi9cIj09cnx8XCJcXFxcXCI9PXIpe2Q9UFA7YnJlYWt9aSYmXCJmaWxlXCI9PWkuc2NoZW1lJiYhRVAoVUQobUQobixsKSxcIlwiKSkmJihfUChpLnBhdGhbMF0sITApP0ZEKGMucGF0aCxpLnBhdGhbMF0pOmMuaG9zdD1pLmhvc3QpLGQ9a1A7Y29udGludWU7Y2FzZSBQUDppZihyPT1yTnx8XCIvXCI9PXJ8fFwiXFxcXFwiPT1yfHxcIj9cIj09cnx8XCIjXCI9PXIpe2lmKCF0JiZfUCh1KSlkPWtQO2Vsc2UgaWYoXCJcIj09dSl7aWYoYy5ob3N0PVwiXCIsdClyZXR1cm47ZD1MUH1lbHNle2lmKHM9Yy5wYXJzZUhvc3QodSkpcmV0dXJuIHM7aWYoXCJsb2NhbGhvc3RcIj09Yy5ob3N0JiYoYy5ob3N0PVwiXCIpLHQpcmV0dXJuO3U9XCJcIixkPUxQfWNvbnRpbnVlfXUrPXI7YnJlYWs7Y2FzZSBMUDppZihjLmlzU3BlY2lhbCgpKXtpZihkPWtQLFwiL1wiIT1yJiZcIlxcXFxcIiE9ciljb250aW51ZX1lbHNlIGlmKHR8fFwiP1wiIT1yKWlmKHR8fFwiI1wiIT1yKXtpZihyIT1yTiYmKGQ9a1AsXCIvXCIhPXIpKWNvbnRpbnVlfWVsc2UgYy5mcmFnbWVudD1cIlwiLGQ9eFA7ZWxzZSBjLnF1ZXJ5PVwiXCIsZD1VUDticmVhaztjYXNlIGtQOmlmKHI9PXJOfHxcIi9cIj09cnx8XCJcXFxcXCI9PXImJmMuaXNTcGVjaWFsKCl8fCF0JiYoXCI/XCI9PXJ8fFwiI1wiPT1yKSl7aWYoXCIuLlwiPT09KGE9SEQoYT11KSl8fFwiJTJlLlwiPT09YXx8XCIuJTJlXCI9PT1hfHxcIiUyZSUyZVwiPT09YT8oYy5zaG9ydGVuUGF0aCgpLFwiL1wiPT1yfHxcIlxcXFxcIj09ciYmYy5pc1NwZWNpYWwoKXx8RkQoYy5wYXRoLFwiXCIpKTpmUCh1KT9cIi9cIj09cnx8XCJcXFxcXCI9PXImJmMuaXNTcGVjaWFsKCl8fEZEKGMucGF0aCxcIlwiKTooXCJmaWxlXCI9PWMuc2NoZW1lJiYhYy5wYXRoLmxlbmd0aCYmX1AodSkmJihjLmhvc3QmJihjLmhvc3Q9XCJcIiksdT1rRCh1LDApK1wiOlwiKSxGRChjLnBhdGgsdSkpLHU9XCJcIixcImZpbGVcIj09Yy5zY2hlbWUmJihyPT1yTnx8XCI/XCI9PXJ8fFwiI1wiPT1yKSlmb3IoO2MucGF0aC5sZW5ndGg+MSYmXCJcIj09PWMucGF0aFswXTspakQoYy5wYXRoKTtcIj9cIj09cj8oYy5xdWVyeT1cIlwiLGQ9VVApOlwiI1wiPT1yJiYoYy5mcmFnbWVudD1cIlwiLGQ9eFApfWVsc2UgdSs9aFAocixsUCk7YnJlYWs7Y2FzZSBNUDpcIj9cIj09cj8oYy5xdWVyeT1cIlwiLGQ9VVApOlwiI1wiPT1yPyhjLmZyYWdtZW50PVwiXCIsZD14UCk6ciE9ck4mJihjLnBhdGhbMF0rPWhQKHIsY1ApKTticmVhaztjYXNlIFVQOnR8fFwiI1wiIT1yP3IhPXJOJiYoXCInXCI9PXImJmMuaXNTcGVjaWFsKCk/Yy5xdWVyeSs9XCIlMjdcIjpjLnF1ZXJ5Kz1cIiNcIj09cj9cIiUyM1wiOmhQKHIsY1ApKTooYy5mcmFnbWVudD1cIlwiLGQ9eFApO2JyZWFrO2Nhc2UgeFA6ciE9ck4mJihjLmZyYWdtZW50Kz1oUChyLGRQKSl9bCsrfX0scGFyc2VIb3N0OmZ1bmN0aW9uKGUpe3ZhciB0LGksbjtpZihcIltcIj09a0QoZSwwKSl7aWYoXCJdXCIhPWtEKGUsZS5sZW5ndGgtMSkpcmV0dXJuIHFEO2lmKHQ9ZnVuY3Rpb24oZSl7dmFyIHQsaSxuLHIsbyxzLGEsYz1bMCwwLDAsMCwwLDAsMCwwXSxkPTAsbD1udWxsLHU9MCxoPWZ1bmN0aW9uKCl7cmV0dXJuIGtEKGUsdSl9O2lmKFwiOlwiPT1oKCkpe2lmKFwiOlwiIT1rRChlLDEpKXJldHVybjt1Kz0yLGw9KytkfWZvcig7aCgpOyl7aWYoOD09ZClyZXR1cm47aWYoXCI6XCIhPWgoKSl7Zm9yKHQ9aT0wO2k8NCYmTUQodFAsaCgpKTspdD0xNip0K0REKGgoKSwxNiksdSsrLGkrKztpZihcIi5cIj09aCgpKXtpZigwPT1pKXJldHVybjtpZih1LT1pLGQ+NilyZXR1cm47Zm9yKG49MDtoKCk7KXtpZihyPW51bGwsbj4wKXtpZighKFwiLlwiPT1oKCkmJm48NCkpcmV0dXJuO3UrK31pZighTUQoUUQsaCgpKSlyZXR1cm47Zm9yKDtNRChRRCxoKCkpOyl7aWYobz1ERChoKCksMTApLG51bGw9PT1yKXI9bztlbHNle2lmKDA9PXIpcmV0dXJuO3I9MTAqcitvfWlmKHI+MjU1KXJldHVybjt1Kyt9Y1tkXT0yNTYqY1tkXStyLDIhPSsrbiYmNCE9bnx8ZCsrfWlmKDQhPW4pcmV0dXJuO2JyZWFrfWlmKFwiOlwiPT1oKCkpe2lmKHUrKywhaCgpKXJldHVybn1lbHNlIGlmKGgoKSlyZXR1cm47Y1tkKytdPXR9ZWxzZXtpZihudWxsIT09bClyZXR1cm47dSsrLGw9KytkfX1pZihudWxsIT09bClmb3Iocz1kLWwsZD03OzAhPWQmJnM+MDspYT1jW2RdLGNbZC0tXT1jW2wrcy0xXSxjW2wrLS1zXT1hO2Vsc2UgaWYoOCE9ZClyZXR1cm47cmV0dXJuIGN9KFdEKGUsMSwtMSkpLCF0KXJldHVybiBxRDt0aGlzLmhvc3Q9dH1lbHNlIGlmKHRoaXMuaXNTcGVjaWFsKCkpe2lmKGU9U0QoZSksTUQoaVAsZSkpcmV0dXJuIHFEO2lmKHQ9ZnVuY3Rpb24oZSl7dmFyIHQsaSxuLHIsbyxzLGEsYz1HRChlLFwiLlwiKTtpZihjLmxlbmd0aCYmXCJcIj09Y1tjLmxlbmd0aC0xXSYmYy5sZW5ndGgtLSwodD1jLmxlbmd0aCk+NClyZXR1cm4gZTtmb3IoaT1bXSxuPTA7bjx0O24rKyl7aWYoXCJcIj09KHI9Y1tuXSkpcmV0dXJuIGU7aWYobz0xMCxyLmxlbmd0aD4xJiZcIjBcIj09a0QociwwKSYmKG89TUQoWkQscik/MTY6OCxyPVdEKHIsOD09bz8xOjIpKSxcIlwiPT09cilzPTA7ZWxzZXtpZighTUQoMTA9PW8/ZVA6OD09bz8kRDp0UCxyKSlyZXR1cm4gZTtzPUREKHIsbyl9RkQoaSxzKX1mb3Iobj0wO248dDtuKyspaWYocz1pW25dLG49PXQtMSl7aWYocz49TEQoMjU2LDUtdCkpcmV0dXJuIG51bGx9ZWxzZSBpZihzPjI1NSlyZXR1cm4gbnVsbDtmb3IoYT1WRChpKSxuPTA7bjxpLmxlbmd0aDtuKyspYSs9aVtuXSpMRCgyNTYsMy1uKTtyZXR1cm4gYX0oZSksbnVsbD09PXQpcmV0dXJuIHFEO3RoaXMuaG9zdD10fWVsc2V7aWYoTUQoblAsZSkpcmV0dXJuIHFEO2Zvcih0PVwiXCIsaT1mRChlKSxuPTA7bjxpLmxlbmd0aDtuKyspdCs9aFAoaVtuXSxjUCk7dGhpcy5ob3N0PXR9fSxjYW5ub3RIYXZlVXNlcm5hbWVQYXNzd29yZFBvcnQ6ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5ob3N0fHx0aGlzLmNhbm5vdEJlQUJhc2VVUkx8fFwiZmlsZVwiPT10aGlzLnNjaGVtZX0saW5jbHVkZXNDcmVkZW50aWFsczpmdW5jdGlvbigpe3JldHVyblwiXCIhPXRoaXMudXNlcm5hbWV8fFwiXCIhPXRoaXMucGFzc3dvcmR9LGlzU3BlY2lhbDpmdW5jdGlvbigpe3JldHVybiBfRChwUCx0aGlzLnNjaGVtZSl9LHNob3J0ZW5QYXRoOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXRoLHQ9ZS5sZW5ndGg7IXR8fFwiZmlsZVwiPT10aGlzLnNjaGVtZSYmMT09dCYmX1AoZVswXSwhMCl8fGUubGVuZ3RoLS19LHNlcmlhbGl6ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD1lLnNjaGVtZSxpPWUudXNlcm5hbWUsbj1lLnBhc3N3b3JkLHI9ZS5ob3N0LG89ZS5wb3J0LHM9ZS5wYXRoLGE9ZS5xdWVyeSxjPWUuZnJhZ21lbnQsZD10K1wiOlwiO3JldHVybiBudWxsIT09cj8oZCs9XCIvL1wiLGUuaW5jbHVkZXNDcmVkZW50aWFscygpJiYoZCs9aSsobj9cIjpcIituOlwiXCIpK1wiQFwiKSxkKz1hUChyKSxudWxsIT09byYmKGQrPVwiOlwiK28pKTpcImZpbGVcIj09dCYmKGQrPVwiLy9cIiksZCs9ZS5jYW5ub3RCZUFCYXNlVVJMP3NbMF06cy5sZW5ndGg/XCIvXCIrVUQocyxcIi9cIik6XCJcIixudWxsIT09YSYmKGQrPVwiP1wiK2EpLG51bGwhPT1jJiYoZCs9XCIjXCIrYyksZH0sc2V0SHJlZjpmdW5jdGlvbihlKXt2YXIgdD10aGlzLnBhcnNlKGUpO2lmKHQpdGhyb3cgTkQodCk7dGhpcy5zZWFyY2hQYXJhbXMudXBkYXRlKCl9LGdldE9yaWdpbjpmdW5jdGlvbigpe3ZhciBlPXRoaXMuc2NoZW1lLHQ9dGhpcy5wb3J0O2lmKFwiYmxvYlwiPT1lKXRyeXtyZXR1cm4gbmV3IEZQKGUucGF0aFswXSkub3JpZ2lufWNhdGNoKGUpe3JldHVyblwibnVsbFwifXJldHVyblwiZmlsZVwiIT1lJiZ0aGlzLmlzU3BlY2lhbCgpP2UrXCI6Ly9cIithUCh0aGlzLmhvc3QpKyhudWxsIT09dD9cIjpcIit0OlwiXCIpOlwibnVsbFwifSxnZXRQcm90b2NvbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNjaGVtZStcIjpcIn0sc2V0UHJvdG9jb2w6ZnVuY3Rpb24oZSl7dGhpcy5wYXJzZShnRChlKStcIjpcIixtUCl9LGdldFVzZXJuYW1lOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudXNlcm5hbWV9LHNldFVzZXJuYW1lOmZ1bmN0aW9uKGUpe3ZhciB0PWZEKGdEKGUpKTtpZighdGhpcy5jYW5ub3RIYXZlVXNlcm5hbWVQYXNzd29yZFBvcnQoKSl7dGhpcy51c2VybmFtZT1cIlwiO2Zvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrKXRoaXMudXNlcm5hbWUrPWhQKHRbaV0sdVApfX0sZ2V0UGFzc3dvcmQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXNzd29yZH0sc2V0UGFzc3dvcmQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ZkQoZ0QoZSkpO2lmKCF0aGlzLmNhbm5vdEhhdmVVc2VybmFtZVBhc3N3b3JkUG9ydCgpKXt0aGlzLnBhc3N3b3JkPVwiXCI7Zm9yKHZhciBpPTA7aTx0Lmxlbmd0aDtpKyspdGhpcy5wYXNzd29yZCs9aFAodFtpXSx1UCl9fSxnZXRIb3N0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5ob3N0LHQ9dGhpcy5wb3J0O3JldHVybiBudWxsPT09ZT9cIlwiOm51bGw9PT10P2FQKGUpOmFQKGUpK1wiOlwiK3R9LHNldEhvc3Q6ZnVuY3Rpb24oZSl7dGhpcy5jYW5ub3RCZUFCYXNlVVJMfHx0aGlzLnBhcnNlKGUsYlApfSxnZXRIb3N0bmFtZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMuaG9zdDtyZXR1cm4gbnVsbD09PWU/XCJcIjphUChlKX0sc2V0SG9zdG5hbWU6ZnVuY3Rpb24oZSl7dGhpcy5jYW5ub3RCZUFCYXNlVVJMfHx0aGlzLnBhcnNlKGUsd1ApfSxnZXRQb3J0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wb3J0O3JldHVybiBudWxsPT09ZT9cIlwiOmdEKGUpfSxzZXRQb3J0OmZ1bmN0aW9uKGUpe3RoaXMuY2Fubm90SGF2ZVVzZXJuYW1lUGFzc3dvcmRQb3J0KCl8fChcIlwiPT0oZT1nRChlKSk/dGhpcy5wb3J0PW51bGw6dGhpcy5wYXJzZShlLE9QKSl9LGdldFBhdGhuYW1lOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXRoO3JldHVybiB0aGlzLmNhbm5vdEJlQUJhc2VVUkw/ZVswXTplLmxlbmd0aD9cIi9cIitVRChlLFwiL1wiKTpcIlwifSxzZXRQYXRobmFtZTpmdW5jdGlvbihlKXt0aGlzLmNhbm5vdEJlQUJhc2VVUkx8fCh0aGlzLnBhdGg9W10sdGhpcy5wYXJzZShlLExQKSl9LGdldFNlYXJjaDpmdW5jdGlvbigpe3ZhciBlPXRoaXMucXVlcnk7cmV0dXJuIGU/XCI/XCIrZTpcIlwifSxzZXRTZWFyY2g6ZnVuY3Rpb24oZSl7XCJcIj09KGU9Z0QoZSkpP3RoaXMucXVlcnk9bnVsbDooXCI/XCI9PWtEKGUsMCkmJihlPVdEKGUsMSkpLHRoaXMucXVlcnk9XCJcIix0aGlzLnBhcnNlKGUsVVApKSx0aGlzLnNlYXJjaFBhcmFtcy51cGRhdGUoKX0sZ2V0U2VhcmNoUGFyYW1zOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2VhcmNoUGFyYW1zLmZhY2FkZX0sZ2V0SGFzaDpmdW5jdGlvbigpe3ZhciBlPXRoaXMuZnJhZ21lbnQ7cmV0dXJuIGU/XCIjXCIrZTpcIlwifSxzZXRIYXNoOmZ1bmN0aW9uKGUpe1wiXCIhPShlPWdEKGUpKT8oXCIjXCI9PWtEKGUsMCkmJihlPVdEKGUsMSkpLHRoaXMuZnJhZ21lbnQ9XCJcIix0aGlzLnBhcnNlKGUseFApKTp0aGlzLmZyYWdtZW50PW51bGx9LHVwZGF0ZTpmdW5jdGlvbigpe3RoaXMucXVlcnk9dGhpcy5zZWFyY2hQYXJhbXMuc2VyaWFsaXplKCl8fG51bGx9fTt2YXIgRlA9ZnVuY3Rpb24oZSl7dmFyIHQ9cEQodGhpcyxCUCksaT1DRChhcmd1bWVudHMubGVuZ3RoLDEpPjE/YXJndW1lbnRzWzFdOnZvaWQgMCxuPXlEKHQsbmV3IFZQKGUsITEsaSkpO3NEfHwodC5ocmVmPW4uc2VyaWFsaXplKCksdC5vcmlnaW49bi5nZXRPcmlnaW4oKSx0LnByb3RvY29sPW4uZ2V0UHJvdG9jb2woKSx0LnVzZXJuYW1lPW4uZ2V0VXNlcm5hbWUoKSx0LnBhc3N3b3JkPW4uZ2V0UGFzc3dvcmQoKSx0Lmhvc3Q9bi5nZXRIb3N0KCksdC5ob3N0bmFtZT1uLmdldEhvc3RuYW1lKCksdC5wb3J0PW4uZ2V0UG9ydCgpLHQucGF0aG5hbWU9bi5nZXRQYXRobmFtZSgpLHQuc2VhcmNoPW4uZ2V0U2VhcmNoKCksdC5zZWFyY2hQYXJhbXM9bi5nZXRTZWFyY2hQYXJhbXMoKSx0Lmhhc2g9bi5nZXRIYXNoKCkpfSxCUD1GUC5wcm90b3R5cGUsalA9ZnVuY3Rpb24oZSx0KXtyZXR1cm57Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEFEKHRoaXMpW2VdKCl9LHNldDp0JiZmdW5jdGlvbihlKXtyZXR1cm4gQUQodGhpcylbdF0oZSl9LGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwfX07aWYoc0QmJihoRChCUCxcImhyZWZcIixqUChcInNlcmlhbGl6ZVwiLFwic2V0SHJlZlwiKSksaEQoQlAsXCJvcmlnaW5cIixqUChcImdldE9yaWdpblwiKSksaEQoQlAsXCJwcm90b2NvbFwiLGpQKFwiZ2V0UHJvdG9jb2xcIixcInNldFByb3RvY29sXCIpKSxoRChCUCxcInVzZXJuYW1lXCIsalAoXCJnZXRVc2VybmFtZVwiLFwic2V0VXNlcm5hbWVcIikpLGhEKEJQLFwicGFzc3dvcmRcIixqUChcImdldFBhc3N3b3JkXCIsXCJzZXRQYXNzd29yZFwiKSksaEQoQlAsXCJob3N0XCIsalAoXCJnZXRIb3N0XCIsXCJzZXRIb3N0XCIpKSxoRChCUCxcImhvc3RuYW1lXCIsalAoXCJnZXRIb3N0bmFtZVwiLFwic2V0SG9zdG5hbWVcIikpLGhEKEJQLFwicG9ydFwiLGpQKFwiZ2V0UG9ydFwiLFwic2V0UG9ydFwiKSksaEQoQlAsXCJwYXRobmFtZVwiLGpQKFwiZ2V0UGF0aG5hbWVcIixcInNldFBhdGhuYW1lXCIpKSxoRChCUCxcInNlYXJjaFwiLGpQKFwiZ2V0U2VhcmNoXCIsXCJzZXRTZWFyY2hcIikpLGhEKEJQLFwic2VhcmNoUGFyYW1zXCIsalAoXCJnZXRTZWFyY2hQYXJhbXNcIikpLGhEKEJQLFwiaGFzaFwiLGpQKFwiZ2V0SGFzaFwiLFwic2V0SGFzaFwiKSkpLHVEKEJQLFwidG9KU09OXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIEFEKHRoaXMpLnNlcmlhbGl6ZSgpfSkse2VudW1lcmFibGU6ITB9KSx1RChCUCxcInRvU3RyaW5nXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIEFEKHRoaXMpLnNlcmlhbGl6ZSgpfSkse2VudW1lcmFibGU6ITB9KSxPRCl7dmFyIEdQPU9ELmNyZWF0ZU9iamVjdFVSTCxXUD1PRC5yZXZva2VPYmplY3RVUkw7R1AmJnVEKEZQLFwiY3JlYXRlT2JqZWN0VVJMXCIsZEQoR1AsT0QpKSxXUCYmdUQoRlAsXCJyZXZva2VPYmplY3RVUkxcIixkRChXUCxPRCkpfVJEKEZQLFwiVVJMXCIpLG9EKHtnbG9iYWw6ITAsY29uc3RydWN0b3I6ITAsZm9yY2VkOiFhRCxzaGFtOiFzRH0se1VSTDpGUH0pO3ZhciBIUD13aSxLUD1uLFlQPVpjLHFQPWZuLHpQPUdnLEpQPWFlKFwiVVJMXCIpO0hQKHt0YXJnZXQ6XCJVUkxcIixzdGF0OiEwLGZvcmNlZDohKHpQJiZLUCgoZnVuY3Rpb24oKXtKUC5jYW5QYXJzZSgpfSkpKX0se2NhblBhcnNlOmZ1bmN0aW9uKGUpe3ZhciB0PVlQKGFyZ3VtZW50cy5sZW5ndGgsMSksaT1xUChlKSxuPXQ8Mnx8dm9pZCAwPT09YXJndW1lbnRzWzFdP3ZvaWQgMDpxUChhcmd1bWVudHNbMV0pO3RyeXtyZXR1cm4hIW5ldyBKUChpLG4pfWNhdGNoKGUpe3JldHVybiExfX19KTt2YXIgWFA9aShpZS5VUkwpO2NvbnN0IFFQPXtnZXREaXNwbGF5TWVkaWE6ITEsZ2V0U3RyZWFtRnJvbUV4dGVuc2lvbjohMSxzdXBwb3J0VW5pZmllZFBsYW46ITEsc3VwcG9ydE1pbkJpdHJhdGU6ITEsc3VwcG9ydFNldFJ0cFNlbmRlclBhcmFtZXRlcnM6ITEsc3VwcG9ydER1YWxTdHJlYW06ITAsd2ViQXVkaW9NZWRpYVN0cmVhbURlc3Q6ITEsc3VwcG9ydFJlcGxhY2VUcmFjazohMSxzdXBwb3J0V2ViR0w6ITEsd2ViQXVkaW9XaXRoQUVDOiExLHN1cHBvcnRSZXF1ZXN0RnJhbWU6ITEsc3VwcG9ydFNoYXJlQXVkaW86ITEsc3VwcG9ydER1YWxTdHJlYW1FbmNvZGluZzohMSxzdXBwb3J0RGF0YUNoYW5uZWw6ITEsc3VwcG9ydFBDU2V0Q29uZmlndXJhdGlvbjohMSxzdXBwb3J0V2ViUlRDRW5jb2RlZFRyYW5zZm9ybTohMSxzdXBwb3J0V2ViUlRDSW5zZXJ0YWJsZVN0cmVhbTohMSxzdXBwb3J0UmVxdWVzdFZpZGVvRnJhbWVDYWxsYmFjazohMSxzdXBwb3J0V2ViQ3J5cHRvOiExfTtmdW5jdGlvbiBaUCgpe3JldHVybiBRUH1mdW5jdGlvbiAkUCgpe3JldHVyblwic2V0U2lua0lkXCJpbiBIVE1MQXVkaW9FbGVtZW50LnByb3RvdHlwZSYmKCFYQShcIlJFU1RSSUNUSU9OX1NFVF9QTEFZQkFDS19ERVZJQ0VcIil8fChKdigpfHxRdigpKSYmIV95KCkpfWZ1bmN0aW9uIGVMKCl7cmV0dXJuIVFQLnN1cHBvcnRVbmlmaWVkUGxhbnx8WEEoXCJDSFJPTUVfRk9SQ0VfUExBTl9CXCIpJiZFeSgpfWxldCB0TD1mdW5jdGlvbihlKXtyZXR1cm4gZS5JT1NfMTVfMTZfSU5URVJSVVBUSU9OX1NUQVJUPVwiaW9zMTVfMTYtaW50ZXJydXB0aW9uLXN0YXJ0XCIsZS5JT1NfMTVfMTZfSU5URVJSVVBUSU9OX0VORD1cImlvczE1XzE2LWludGVycnVwdGlvbi1lbmRcIixlLklPU19JTlRFUlJVUFRJT05fU1RBUlQ9XCJpb3MtaW50ZXJydXB0aW9uLXN0YXJ0XCIsZS5JT1NfSU5URVJSVVBUSU9OX0VORD1cImlvcy1pbnRlcnJ1cHRpb24tZW5kXCIsZS5TVEFURV9DSEFOR0U9XCJzdGF0ZS1jaGFuZ2VcIixlfSh7fSk7ZnVuY3Rpb24gaUwoZSx0LGkpe3JldHVybntzYW1wbGVSYXRlOmUsc3RlcmVvOnQsYml0cmF0ZTppfX1mdW5jdGlvbiBuTChlLHQsaSxuLHIpe3JldHVybnt3aWR0aDplLGhlaWdodDp0LGZyYW1lUmF0ZTppLGJpdHJhdGVNaW46bixiaXRyYXRlTWF4OnJ9fWZ1bmN0aW9uIHJMKGUsdCxpLG4scil7cmV0dXJue3dpZHRoOnttYXg6ZX0saGVpZ2h0OnttYXg6dH0sZnJhbWVSYXRlOmksYml0cmF0ZU1pbjpuLGJpdHJhdGVNYXg6cn19ZnVuY3Rpb24gb0woZSx0KXtyZXR1cm57bnVtU3BhdGlhbExheWVyczplLG51bVRlbXBvcmFsTGF5ZXJzOnR9fWNvbnN0IHNMPXtcIjkwcFwiOm5MKDE2MCw5MCksXCI5MHBfMVwiOm5MKDE2MCw5MCksXCIxMjBwXCI6bkwoMTYwLDEyMCwxNSwzMCw2NSksXCIxMjBwXzFcIjpuTCgxNjAsMTIwLDE1LDMwLDY1KSxcIjEyMHBfM1wiOm5MKDEyMCwxMjAsMTUsMzAsNTApLFwiMTIwcF80XCI6bkwoMjEyLDEyMCksXCIxODBwXCI6bkwoMzIwLDE4MCwxNSwzMCwxNDApLFwiMTgwcF8xXCI6bkwoMzIwLDE4MCwxNSwzMCwxNDApLFwiMTgwcF8zXCI6bkwoMTgwLDE4MCwxNSwzMCwxMDApLFwiMTgwcF80XCI6bkwoMjQwLDE4MCwxNSwzMCwxMjApLFwiMjQwcFwiOm5MKDMyMCwyNDAsMTUsNDAsMjAwKSxcIjI0MHBfMVwiOm5MKDMyMCwyNDAsMTUsNDAsMjAwKSxcIjI0MHBfM1wiOm5MKDI0MCwyNDAsMTUsNDAsMTQwKSxcIjI0MHBfNFwiOm5MKDQyNCwyNDAsMTUsNDAsMjIwKSxcIjM2MHBcIjpuTCg2NDAsMzYwLDE1LDgwLDQwMCksXCIzNjBwXzFcIjpuTCg2NDAsMzYwLDE1LDgwLDQwMCksXCIzNjBwXzNcIjpuTCgzNjAsMzYwLDE1LDgwLDI2MCksXCIzNjBwXzRcIjpuTCg2NDAsMzYwLDMwLDgwLDYwMCksXCIzNjBwXzZcIjpuTCgzNjAsMzYwLDMwLDgwLDQwMCksXCIzNjBwXzdcIjpuTCg0ODAsMzYwLDE1LDgwLDMyMCksXCIzNjBwXzhcIjpuTCg0ODAsMzYwLDMwLDgwLDQ5MCksXCIzNjBwXzlcIjpuTCg2NDAsMzYwLDE1LDgwLDgwMCksXCIzNjBwXzEwXCI6bkwoNjQwLDM2MCwyNCw4MCw4MDApLFwiMzYwcF8xMVwiOm5MKDY0MCwzNjAsMjQsODAsMWUzKSxcIjQ4MHBcIjpuTCg2NDAsNDgwLDE1LDEwMCw1MDApLFwiNDgwcF8xXCI6bkwoNjQwLDQ4MCwxNSwxMDAsNTAwKSxcIjQ4MHBfMlwiOm5MKDY0MCw0ODAsMzAsMTAwLDFlMyksXCI0ODBwXzNcIjpuTCg0ODAsNDgwLDE1LDEwMCw0MDApLFwiNDgwcF80XCI6bkwoNjQwLDQ4MCwzMCwxMDAsNzUwKSxcIjQ4MHBfNlwiOm5MKDQ4MCw0ODAsMzAsMTAwLDYwMCksXCI0ODBwXzhcIjpuTCg4NDgsNDgwLDE1LDEwMCw2MTApLFwiNDgwcF85XCI6bkwoODQ4LDQ4MCwzMCwxMDAsOTMwKSxcIjQ4MHBfMTBcIjpuTCg2NDAsNDgwLDEwLDEwMCw0MDApLFwiNzIwcFwiOm5MKDEyODAsNzIwLDE1LDEyMCwxMTMwKSxcIjcyMHBfYXV0b1wiOm5MKDEyODAsNzIwLDMwLDkwMCwzZTMpLFwiNzIwcF8xXCI6bkwoMTI4MCw3MjAsMTUsMTIwLDExMzApLFwiNzIwcF8yXCI6bkwoMTI4MCw3MjAsMzAsMTIwLDJlMyksXCI3MjBwXzNcIjpuTCgxMjgwLDcyMCwzMCwxMjAsMTcxMCksXCI3MjBwXzVcIjpuTCg5NjAsNzIwLDE1LDEyMCw5MTApLFwiNzIwcF82XCI6bkwoOTYwLDcyMCwzMCwxMjAsMTM4MCksXCIxMDgwcFwiOm5MKDE5MjAsMTA4MCwxNSwxMjAsMjA4MCksXCIxMDgwcF8xXCI6bkwoMTkyMCwxMDgwLDE1LDEyMCwyMDgwKSxcIjEwODBwXzJcIjpuTCgxOTIwLDEwODAsMzAsMTIwLDNlMyksXCIxMDgwcF8zXCI6bkwoMTkyMCwxMDgwLDMwLDEyMCwzMTUwKSxcIjEwODBwXzVcIjpuTCgxOTIwLDEwODAsNjAsMTIwLDQ3ODApLFwiMTQ0MHBcIjpuTCgyNTYwLDE0NDAsMzAsMTIwLDQ4NTApLFwiMTQ0MHBfMVwiOm5MKDI1NjAsMTQ0MCwzMCwxMjAsNDg1MCksXCIxNDQwcF8yXCI6bkwoMjU2MCwxNDQwLDYwLDEyMCw3MzUwKSxcIjRrXCI6bkwoMzg0MCwyMTYwLDMwLDEyMCw4OTEwKSxcIjRrXzFcIjpuTCgzODQwLDIxNjAsMzAsMTIwLDg5MTApLFwiNGtfM1wiOm5MKDM4NDAsMjE2MCw2MCwxMjAsMTM1MDApfSxhTD17XCI0ODBwXCI6ckwoNjQwLDQ4MCw1KSxcIjQ4MHBfMVwiOnJMKDY0MCw0ODAsNSksXCI0ODBwXzJcIjpyTCg2NDAsNDgwLDMwKSxcIjQ4MHBfM1wiOnJMKDY0MCw0ODAsMTUpLFwiNzIwcFwiOnJMKDEyODAsNzIwLDUpLFwiNzIwcF9hdXRvXCI6bkwoMTI4MCw3MjAsMzAsOTAwLDNlMyksXCI3MjBwXzFcIjpyTCgxMjgwLDcyMCw1KSxcIjcyMHBfMlwiOnJMKDEyODAsNzIwLDMwKSxcIjcyMHBfM1wiOnJMKDEyODAsNzIwLDE1KSxcIjEwODBwXCI6ckwoMTkyMCwxMDgwLDUpLFwiMTA4MHBfMVwiOnJMKDE5MjAsMTA4MCw1KSxcIjEwODBwXzJcIjpyTCgxOTIwLDEwODAsMzApLFwiMTA4MHBfM1wiOnJMKDE5MjAsMTA4MCwxNSl9LGNMPXtcIjFTTDFUTFwiOm9MKDEsMSksXCIzU0wzVExcIjpvTCgzLDMpLFwiMlNMM1RMXCI6b0woMiwzKX07ZnVuY3Rpb24gZEwoZSl7cmV0dXJuIGV8fChlPVwiNDgwcF8xXCIpLFwic3RyaW5nXCI9PXR5cGVvZiBlP09iamVjdC5hc3NpZ24oe30sc0xbZV0pOmV9ZnVuY3Rpb24gbEwoZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGU/T2JqZWN0LmFzc2lnbih7fSxhTFtlXSk6ZX1mdW5jdGlvbiB1TChlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZT9PYmplY3QuYXNzaWduKHt9LGNMW2VdKTplfWNvbnN0IGhMPXtzcGVlY2hfbG93X3F1YWxpdHk6aUwoMTZlMywhMSksc3BlZWNoX3N0YW5kYXJkOmlMKDMyZTMsITEsMTgpLG11c2ljX3N0YW5kYXJkOmlMKDQ4ZTMsITEpLHN0YW5kYXJkX3N0ZXJlbzppTCg0OGUzLCEwLDU2KSxoaWdoX3F1YWxpdHk6aUwoNDhlMywhMSwxMjgpLGhpZ2hfcXVhbGl0eV9zdGVyZW86aUwoNDhlMywhMCwxOTIpfTtmdW5jdGlvbiBwTChlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZT9PYmplY3QuYXNzaWduKHt9LGhMW2VdKTplfWNvbnN0IF9MPVtdO2Z1bmN0aW9uIEVMKGUpe3JldHVybiB2eShlLFwibWVkaWFTb3VyY2VcIixbXCJzY3JlZW5cIixcIndpbmRvd1wiLFwiYXBwbGljYXRpb25cIl0pLCEwfWxldCBmTD1mdW5jdGlvbihlKXtyZXR1cm4gZS5ORUVEX1JFTkVHT1RJQVRFPVwiQG5lZWRfcmVuZWdvdGlhdGVcIixlLk5FRURfUkVQTEFDRV9UUkFDSz1cIkBuZWVkX3JlcGxhY2VfdHJhY2tcIixlLk5FRURfUkVQTEFDRV9NSVhJTkdfVFJBQ0s9XCJAbmVlZF9yZXBsYWNlX21peGluZ190cmFja1wiLGUuTkVFRF9DTE9TRT1cIkBuZWVkX2Nsb3NlXCIsZS5ORUVEX0VOQUJMRV9UUkFDSz1cIkBuZWVkX2VuYWJsZV90cmFja1wiLGUuTkVFRF9ESVNBQkxFX1RSQUNLPVwiQG5lZWRfZGlzYWJsZV90cmFja1wiLGUuTkVFRF9TRVNTSU9OX0lEPVwiQG5lZWRfc2lkXCIsZS5TRVRfT1BUSU1JWkFUSU9OX01PREU9XCJAc2V0X29wdGltaXphdGlvbl9tb2RlXCIsZS5HRVRfU1RBVFM9XCJAZ2V0X3N0YXRzXCIsZS5HRVRfUlRDX1NUQVRTPVwiQGdldF9ydGNfc3RhdHNcIixlLkdFVF9MT1dfVklERU9fVFJBQ0s9XCJAZ2V0X2xvd192aWRlb190cmFja1wiLGUuTkVFRF9SRVNFVF9SRU1PVEVfU0RQPVwiQG5lZWRfcmVzZXRfcmVtb3RlX3NkcFwiLGUuTkVFRF9VUERBVEVfVklERU9fRU5DT0RFUj1cIkBuZWVkX3VwZGF0ZV92aWRlb19lbmNvZGVyXCIsZS5ORUVEX1VQREFURV9WSURFT19TRU5EX1BBUkFNRVRFUlM9XCJAbmVlZF91cGRhdGVfdmlkZW9fc2VuZF9wYXJhbWV0ZXJzXCIsZS5ORUVEX01VVEVfVFJBQ0s9XCJAbmVlZF9tdXRlX3RyYWNrXCIsZS5ORUVEX1VOTVVURV9UUkFDSz1cIkBuZWVkX3VubXV0ZV90cmFja1wiLGV9KHt9KSxtTD1mdW5jdGlvbihlKXtyZXR1cm4gZS5TQ1JFRU5fVFJBQ0s9XCJzY3JlZW5fdHJhY2tcIixlLkNVU1RPTV9UUkFDSz1cImN1c3RvbWVfdHJhY2tcIixlLkxPV19TVFJFQU09XCJsb3dfc3RyZWFtXCIsZS5TQ1JFRU5fTE9XX1RSQUNLPVwic2NyZWVuX2xvd190cmFja1wiLGV9KHt9KTtsZXQgVEw9ZnVuY3Rpb24oZSl7cmV0dXJuIGVbZS5ISUdIX1NUUkVBTT0wXT1cIkhJR0hfU1RSRUFNXCIsZVtlLkxPV19TVFJFQU09MV09XCJMT1dfU1RSRUFNXCIsZX0oe30pLFNMPWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuSElHSF9TVFJFQU09MF09XCJISUdIX1NUUkVBTVwiLGVbZS5MT1dfU1RSRUFNPTFdPVwiTE9XX1NUUkVBTVwiLGVbZS5ISUdIX1NUUkVBTV9MQVlFUjE9NF09XCJISUdIX1NUUkVBTV9MQVlFUjFcIixlW2UuSElHSF9TVFJFQU1fTEFZRVIyPTVdPVwiSElHSF9TVFJFQU1fTEFZRVIyXCIsZVtlLkhJR0hfU1RSRUFNX0xBWUVSMz02XT1cIkhJR0hfU1RSRUFNX0xBWUVSM1wiLGVbZS5ISUdIX1NUUkVBTV9MQVlFUjQ9N109XCJISUdIX1NUUkVBTV9MQVlFUjRcIixlW2UuSElHSF9TVFJFQU1fTEFZRVI1PThdPVwiSElHSF9TVFJFQU1fTEFZRVI1XCIsZVtlLkhJR0hfU1RSRUFNX0xBWUVSNj05XT1cIkhJR0hfU1RSRUFNX0xBWUVSNlwiLGV9KHt9KSxnTD1mdW5jdGlvbihlKXtyZXR1cm4gZVtlLkRJU0FCTEU9MF09XCJESVNBQkxFXCIsZVtlLkxPV19TVFJFQU09MV09XCJMT1dfU1RSRUFNXCIsZVtlLkFVRElPX09OTFk9Ml09XCJBVURJT19PTkxZXCIsZVtlLkhJR0hfU1RSRUFNX0xBWUVSMT0zXT1cIkhJR0hfU1RSRUFNX0xBWUVSMVwiLGVbZS5ISUdIX1NUUkVBTV9MQVlFUjI9NF09XCJISUdIX1NUUkVBTV9MQVlFUjJcIixlW2UuSElHSF9TVFJFQU1fTEFZRVIzPTVdPVwiSElHSF9TVFJFQU1fTEFZRVIzXCIsZVtlLkhJR0hfU1RSRUFNX0xBWUVSND02XT1cIkhJR0hfU1RSRUFNX0xBWUVSNFwiLGVbZS5ISUdIX1NUUkVBTV9MQVlFUjU9N109XCJISUdIX1NUUkVBTV9MQVlFUjVcIixlW2UuSElHSF9TVFJFQU1fTEFZRVI2PThdPVwiSElHSF9TVFJFQU1fTEFZRVI2XCIsZX0oe30pLFJMPWZ1bmN0aW9uKGUpe3JldHVybiBlLlRSQU5TQ0VJVkVSX1VQREFURUQ9XCJ0cmFuc2NlaXZlci11cGRhdGVkXCIsZS5TRUlfVE9fU0VORD1cInNlaS10by1zZW5kXCIsZS5TRUlfUkVDRUlWRUQ9XCJzZWktcmVjZWl2ZWRcIixlLlRSQUNLX1VQREFURUQ9XCJ0cmFjay11cGRhdGVkXCIsZX0oe30pLENMPWZ1bmN0aW9uKGUpe3JldHVybiBlLlNPVVJDRV9TVEFURV9DSEFOR0U9XCJzb3VyY2Utc3RhdGUtY2hhbmdlXCIsZS5UUkFDS19FTkRFRD1cInRyYWNrLWVuZGVkXCIsZS5CRUFVVFlfRUZGRUNUX09WRVJMT0FEPVwiYmVhdXR5LWVmZmVjdC1vdmVybG9hZFwiLGUuVklERU9fRUxFTUVOVF9WSVNJQkxFX1NUQVRVUz1cInZpZGVvLWVsZW1lbnQtdmlzaWJsZS1zdGF0dXNcIixlLkNMT1NFRD1cImNsb3NlZFwiLGV9KHt9KSxJTD1mdW5jdGlvbihlKXtyZXR1cm4gZS5GSVJTVF9GUkFNRV9ERUNPREVEPVwiZmlyc3QtZnJhbWUtZGVjb2RlZFwiLGUuVklERU9fRUxFTUVOVF9WSVNJQkxFX1NUQVRVUz1cInZpZGVvLWVsZW1lbnQtdmlzaWJsZS1zdGF0dXNcIixlLlZJREVPX1NUQVRFX0NIQU5HRUQ9XCJ2aWRlby1zdGF0ZS1jaGFuZ2VkXCIsZX0oe30pLHZMPWZ1bmN0aW9uKGUpe3JldHVybiBlLkFVRElPPVwiYXVkaW9cIixlLlZJREVPPVwidmlkZW9cIixlLkRBVEE9XCJkYXRhXCIsZX0oe30pLHlMPWZ1bmN0aW9uKGUpe3JldHVybiBlLkFVRElPX1NPVVJDRV9TVEFURV9DSEFOR0U9XCJhdWRpb19zb3VyY2Vfc3RhdGVfY2hhbmdlXCIsZS5SRUNFSVZFX1RSQUNLX0JVRkZFUj1cInJlY2VpdmVfdHJhY2tfYnVmZmVyXCIsZS5PTl9BVURJT19CVUZGRVI9XCJvbl9hdWRpb19idWZmZXJcIixlLlVQREFURV9TT1VSQ0U9XCJ1cGRhdGVfc291cmNlXCIsZX0oe30pOyFmdW5jdGlvbihlKXtlLlVQREFURV9UUkFDS19TT1VSQ0U9XCJ1cGRhdGUtdHJhY2stc291cmNlXCJ9KHt9KTtjb25zdCBBTD17c2VuZFZvbHVtZUxldmVsOjAsc2VuZEJpdHJhdGU6MCxzZW5kQnl0ZXM6MCxzZW5kUGFja2V0czowLHNlbmRQYWNrZXRzTG9zdDowLHNlbmRKaXR0ZXJNczowLHNlbmRSdHRNczowLGN1cnJlbnRQYWNrZXRMb3NzUmF0ZTowfSxiTD17c2VuZEJ5dGVzOjAsc2VuZEJpdHJhdGU6MCxzZW5kUGFja2V0czowLHNlbmRQYWNrZXRzTG9zdDowLHNlbmRKaXR0ZXJNczowLHNlbmRSdHRNczowLHNlbmRSZXNvbHV0aW9uSGVpZ2h0OjAsc2VuZFJlc29sdXRpb25XaWR0aDowLGNhcHR1cmVSZXNvbHV0aW9uSGVpZ2h0OjAsY2FwdHVyZVJlc29sdXRpb25XaWR0aDowLHRhcmdldFNlbmRCaXRyYXRlOjAsdG90YWxEdXJhdGlvbjowLHRvdGFsRnJlZXplVGltZTowLGN1cnJlbnRQYWNrZXRMb3NzUmF0ZTowfSx3TD17dHJhbnNwb3J0RGVsYXk6MCxlbmQyRW5kRGVsYXk6MCxyZWNlaXZlQml0cmF0ZTowLHJlY2VpdmVMZXZlbDowLHJlY2VpdmVCeXRlczowLHJlY2VpdmVEZWxheTowLHJlY2VpdmVQYWNrZXRzOjAscmVjZWl2ZVBhY2tldHNMb3N0OjAscmVjZWl2ZVBhY2tldHNEaXNjYXJkZWQ6MCx0b3RhbER1cmF0aW9uOjAsdG90YWxGcmVlemVUaW1lOjAsZnJlZXplUmF0ZTowLHBhY2tldExvc3NSYXRlOjAsY3VycmVudFBhY2tldExvc3NSYXRlOjAscHVibGlzaER1cmF0aW9uOi0xfSxPTD17dXBsaW5rTmV0d29ya1F1YWxpdHk6MCxkb3dubGlua05ldHdvcmtRdWFsaXR5OjB9LE5MPXt0cmFuc3BvcnREZWxheTowLGVuZDJFbmREZWxheTowLHJlY2VpdmVCaXRyYXRlOjAscmVjZWl2ZUJ5dGVzOjAscmVjZWl2ZURlbGF5OjAscmVjZWl2ZVBhY2tldHM6MCxyZWNlaXZlUGFja2V0c0xvc3Q6MCxyZWNlaXZlUmVzb2x1dGlvbkhlaWdodDowLHJlY2VpdmVSZXNvbHV0aW9uV2lkdGg6MCx0b3RhbER1cmF0aW9uOjAsdG90YWxGcmVlemVUaW1lOjAsZnJlZXplUmF0ZTowLHBhY2tldExvc3NSYXRlOjAsY3VycmVudFBhY2tldExvc3NSYXRlOjAscHVibGlzaER1cmF0aW9uOi0xfTtsZXQgREw9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuT05fVFJBQ0s9XCJvbl90cmFja1wiLGUuT05fTk9ERT1cIm9uX25vZGVcIixlfSh7fSksUEw9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuUkVRVUVTVF9VUERBVEVfQ09OU1RSQUlOVFM9XCJyZXF1ZXN0X3VwZGF0ZV9jb25zdHJhaW50c1wiLGUuUkVRVUVTVF9DT05TVFJBSU5UUz1cInJlcXVlc3RfY29uc3RyYWludHNcIixlfSh7fSksTEw9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuSURMRT1cIklETEVcIixlLklOSVRJTkc9XCJJTklUSU5HXCIsZS5JTklURU5EPVwiSU5JVEVORFwiLGV9KHt9KSxrTD1mdW5jdGlvbihlKXtyZXR1cm4gZS5TVEFURV9DSEFOR0U9XCJzdGF0ZV9jaGFuZ2VcIixlLlJFQ09SRElOR19ERVZJQ0VfQ0hBTkdFRD1cInJlY29yZGluZ0RldmljZUNoYW5nZWRcIixlLlBMQVlPVVRfREVWSUNFX0NIQU5HRUQ9XCJwbGF5b3V0RGV2aWNlQ2hhbmdlZFwiLGUuQ0FNRVJBX0RFVklDRV9DSEFOR0VEPVwiY2FtZXJhRGV2aWNlQ2hhbmdlZFwiLGV9KHt9KSxNTD1mdW5jdGlvbihlKXtyZXR1cm4gZS5OT05FPVwibm9uZVwiLGUuSU5JVD1cImluaXRcIixlLkNBTlBMQVk9XCJjYW5wbGF5XCIsZS5QTEFZSU5HPVwicGxheWluZ1wiLGUuUEFVU0VEPVwicGF1c2VkXCIsZS5TVVNQRU5EPVwic3VzcGVuZFwiLGUuU1RBTExFRD1cInN0YWxsZWRcIixlLldBSVRJTkc9XCJ3YWl0aW5nXCIsZS5FUlJPUj1cImVycm9yXCIsZS5ERVNUUk9ZRUQ9XCJkZXN0cm95ZWRcIixlLkFCT1JUPVwiYWJvcnRcIixlLkVOREVEPVwiZW5kZWRcIixlLkVNUFRJRUQ9XCJlbXB0aWVkXCIsZS5MT0FERUREQVRBPVwibG9hZGVkZGF0YVwiLGV9KHt9KSxVTD1mdW5jdGlvbihlKXtyZXR1cm4gZVtlLlZpZGVvU3RhdGVTdG9wcGVkPTBdPVwiVmlkZW9TdGF0ZVN0b3BwZWRcIixlW2UuVmlkZW9TdGF0ZVN0YXJ0aW5nPTFdPVwiVmlkZW9TdGF0ZVN0YXJ0aW5nXCIsZVtlLlZpZGVvU3RhdGVEZWNvZGluZz0yXT1cIlZpZGVvU3RhdGVEZWNvZGluZ1wiLGVbZS5WaWRlb1N0YXRlRnJvemVuPTNdPVwiVmlkZW9TdGF0ZUZyb3plblwiLGV9KHt9KTtjb25zdCB4TD17dW5pbml0OjEwMCxub25lOjExMCxpbml0OjEyMCxsb2FkZWRkYXRhOjEzMCxjYW5wbGF5OjIwMCxwbGF5aW5nOjIxMCxwYXVzZWQ6MjIwLHN1c3BlbmQ6MzAwLHN0YWxsZWQ6MzEwLHdhaXRpbmc6MzIwLGVycm9yOjMzMCxkZXN0cm95ZWQ6MzQwLGFib3J0OjM1MCxlbmRlZDozNjAsZW1wdGllZDozNzB9O2xldCBWTD1mdW5jdGlvbihlKXtyZXR1cm4gZS5PUEVOPVwib3BlblwiLGUuTUVTU0FHRT1cIm1lc3NhZ2VcIixlLkNMT1NFPVwiY2xvc2VcIixlLkNMT1NJTkc9XCJjbG9zaW5nXCIsZS5FUlJPUj1cImVycm9yXCIsZX0oe30pO2Z1bmN0aW9uIEZMKGUsdCxpLG4scil7dmFyIG8scyxhPXt9O3JldHVybiBPYmplY3Qua2V5cyhuKS5mb3JFYWNoKChmdW5jdGlvbihlKXthW2VdPW5bZV19KSksYS5lbnVtZXJhYmxlPSEhYS5lbnVtZXJhYmxlLGEuY29uZmlndXJhYmxlPSEhYS5jb25maWd1cmFibGUsKFwidmFsdWVcImluIGF8fGEuaW5pdGlhbGl6ZXIpJiYoYS53cml0YWJsZT0hMCksYT1KbihvPW9OKHM9aS5zbGljZSgpKS5jYWxsKHMpKS5jYWxsKG8sKGZ1bmN0aW9uKGksbil7cmV0dXJuIG4oZSx0LGkpfHxpfSksYSksciYmdm9pZCAwIT09YS5pbml0aWFsaXplciYmKGEudmFsdWU9YS5pbml0aWFsaXplcj9hLmluaXRpYWxpemVyLmNhbGwocik6dm9pZCAwLGEuaW5pdGlhbGl6ZXI9dm9pZCAwKSx2b2lkIDA9PT1hLmluaXRpYWxpemVyJiYoT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCxhKSxhPW51bGwpLGF9ZnVuY3Rpb24gQkwoZSx0LGkpe3JldHVybih0PWZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKGUsdCl7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGV8fCFlKXJldHVybiBlO3ZhciBpPWVbU3ltYm9sLnRvUHJpbWl0aXZlXTtpZih2b2lkIDAhPT1pKXt2YXIgbj1pLmNhbGwoZSxcInN0cmluZ1wiKTtpZihcIm9iamVjdFwiIT10eXBlb2YgbilyZXR1cm4gbjt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIil9cmV0dXJuIFN0cmluZyhlKX0oZSk7cmV0dXJuXCJzeW1ib2xcIj09dHlwZW9mIHQ/dDp0K1wiXCJ9KHQpKWluIGU/T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7dmFsdWU6aSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOmVbdF09aSxlfWZ1bmN0aW9uIGpMKGUsdCl7dmFyIGk9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYobj1uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxpLnB1c2guYXBwbHkoaSxuKX1yZXR1cm4gaX1mdW5jdGlvbiBHTChlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgaT1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj9qTChPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0JMKGUsdCxpW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGkpKTpqTChPYmplY3QoaSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLHQpKX0pKX1yZXR1cm4gZX1jbGFzcyBXTCBleHRlbmRzIHh5e3NldCBfbWVkaWFTdHJlYW1UcmFjayhlKXtlIT09dGhpcy5tZWRpYVN0cmVhbVRyYWNrJiYodGhpcy5zYWZlRW1pdChSTC5UUkFDS19VUERBVEVELGUpLHRoaXMubWVkaWFTdHJlYW1UcmFjaz1lKX1nZXQgX21lZGlhU3RyZWFtVHJhY2soKXtyZXR1cm4gdGhpcy5tZWRpYVN0cmVhbVRyYWNrfWNvbnN0cnVjdG9yKGUsdCl7c3VwZXIoKSxCTCh0aGlzLFwidHJhY2tNZWRpYVR5cGVcIix2b2lkIDApLEJMKHRoaXMsXCJfSURcIix2b2lkIDApLEJMKHRoaXMsXCJfcnRwVHJhbnNjZWl2ZXJcIix2b2lkIDApLEJMKHRoaXMsXCJfbG93UnRwVHJhbnNjZWl2ZXJcIix2b2lkIDApLEJMKHRoaXMsXCJfaGludHNcIixbXSksQkwodGhpcyxcIl9pc0Nsb3NlZFwiLCExKSxCTCh0aGlzLFwiX29yaWdpbk1lZGlhU3RyZWFtVHJhY2tcIix2b2lkIDApLEJMKHRoaXMsXCJtZWRpYVN0cmVhbVRyYWNrXCIsdm9pZCAwKSxCTCh0aGlzLFwiX2V4dGVybmFsXCIse30pLHRoaXMuX0lEPXR8fFRBKDgsXCJ0cmFjay1cIiksdGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjaz1lLHRoaXMubWVkaWFTdHJlYW1UcmFjaz1lLGZ1bmN0aW9uKGUpe0RuKF9MKS5jYWxsKF9MLGUpfHxfTC5wdXNoKGUpfSh0aGlzKX10b1N0cmluZygpe3JldHVybiB0aGlzLl9JRH1nZXRUcmFja0lkKCl7cmV0dXJuIHRoaXMuX0lEfWdldE1lZGlhU3RyZWFtVHJhY2soZSl7cmV0dXJuIGV8fGRBKCgoKT0+e3ZhciBlO3ZiLnJlcG9ydEFwaUludm9rZShudWxsLHtuYW1lOkJ5LkdFVF9NRURJQV9TVFJFQU1fVFJBQ0ssb3B0aW9uczpbXSx0YWc6ankuVFJBQ0VSfSkub25TdWNjZXNzKChudWxsPT09KGU9dGhpcy5fbWVkaWFTdHJlYW1UcmFjayl8fHZvaWQgMD09PWU/dm9pZCAwOmUubGFiZWwpfHxcIlwiKX0pLHRoaXMubWVkaWFTdHJlYW1UcmFjay5pZHx8dGhpcy5nZXRUcmFja0lkKCkpLHRoaXMuX21lZGlhU3RyZWFtVHJhY2t9Z2V0UlRDUnRwVHJhbnNjZWl2ZXIoZSl7cmV0dXJuIGU9PT1UTC5MT1dfU1RSRUFNP3RoaXMuX2xvd1J0cFRyYW5zY2VpdmVyOnRoaXMuX3J0cFRyYW5zY2VpdmVyfWdldE1lZGlhU3RyZWFtVHJhY2tTZXR0aW5ncygpe3JldHVybiB0aGlzLmdldE1lZGlhU3RyZWFtVHJhY2soITApLmdldFNldHRpbmdzKCl9Y2xvc2UoKXt0aGlzLl9pc0Nsb3NlZD0hMCx0aGlzLl9sb3dSdHBUcmFuc2NlaXZlcj12b2lkIDAsdGhpcy5fcnRwVHJhbnNjZWl2ZXI9dm9pZCAwLGZ1bmN0aW9uKGUpe2NvbnN0IHQ9X0wuaW5kZXhPZihlKTstMSE9PXQmJl9MLnNwbGljZSh0LDEpfSh0aGlzKSx0aGlzLmVtaXQoQ0wuQ0xPU0VEKSx0aGlzLnJlbW92ZUFsbExpc3RlbmVycyhSTC5TRUlfUkVDRUlWRUQpfV91cGRhdGVSdHBUcmFuc2NlaXZlcihlLHQpe2lmKHQ9PT1UTC5MT1dfU1RSRUFNKXtpZih0aGlzLl9sb3dSdHBUcmFuc2NlaXZlcj09PWUpcmV0dXJuO3RoaXMuX2xvd1J0cFRyYW5zY2VpdmVyPWV9ZWxzZXtpZih0aGlzLl9ydHBUcmFuc2NlaXZlcj09PWUpcmV0dXJuO3RoaXMuX3J0cFRyYW5zY2VpdmVyPWV9dGhpcy5lbWl0KFJMLlRSQU5TQ0VJVkVSX1VQREFURUQsZSx0KX19Y2xhc3MgSEwgZXh0ZW5kcyBXTHtnZXQgaXNFeHRlcm5hbFRyYWNrKCl7cmV0dXJuIHRoaXMuX2lzRXh0ZXJuYWxUcmFja31nZXQgbXV0ZWQoKXtyZXR1cm4gdGhpcy5fbXV0ZWR9Z2V0IGVuYWJsZWQoKXtyZXR1cm4gdGhpcy5fZW5hYmxlZH1nZXQgcHJvY2Vzc29yQ29udGV4dCgpe3JldHVybiB0aGlzLl9wcm9jZXNzb3JDb250ZXh0fWNvbnN0cnVjdG9yKGUsdCl7c3VwZXIoZSx0KSxCTCh0aGlzLFwiX2VuYWJsZWRcIiwhMCksQkwodGhpcyxcIl9tdXRlZFwiLCExKSxCTCh0aGlzLFwiX2lzRXh0ZXJuYWxUcmFja1wiLCExKSxCTCh0aGlzLFwiX2lzQ2xvc2VkXCIsITEpLEJMKHRoaXMsXCJfZW5hYmxlZE11dGV4XCIsdm9pZCAwKSxCTCh0aGlzLFwicHJvY2Vzc29yXCIsdm9pZCAwKSxCTCh0aGlzLFwiX3Byb2Nlc3NvckNvbnRleHRcIix2b2lkIDApLEJMKHRoaXMsXCJfaGFuZGxlVHJhY2tFbmRlZFwiLCgoKT0+e3RoaXMub25UcmFja0VuZGVkKCl9KSksdGhpcy5fZW5hYmxlZE11dGV4PW5ldyBOQShcIlwiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSkpLGUuYWRkRXZlbnRMaXN0ZW5lcihcImVuZGVkXCIsdGhpcy5faGFuZGxlVHJhY2tFbmRlZCl9Z2V0VHJhY2tMYWJlbCgpe3ZhciBlLHQ7cmV0dXJuIG51bGwhPT0oZT1udWxsPT09KHQ9dGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjayl8fHZvaWQgMD09PXQ/dm9pZCAwOnQubGFiZWwpJiZ2b2lkIDAhPT1lP2U6XCJcIn1jbG9zZSgpe3RoaXMuX2lzQ2xvc2VkfHwodGhpcy5zdG9wKCksdGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5zdG9wKCksdGhpcy5fbWVkaWFTdHJlYW1UcmFjayE9PXRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2smJih0aGlzLl9tZWRpYVN0cmVhbVRyYWNrLnN0b3AoKSx0aGlzLl9tZWRpYVN0cmVhbVRyYWNrPW51bGwpLHRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2s9bnVsbCx0aGlzLl9lbmFibGVkTXV0ZXg9bnVsbCxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIGNsb3NlXCIpKSx0aGlzLmVtaXQoZkwuTkVFRF9DTE9TRSksc3VwZXIuY2xvc2UoKSl9YXN5bmMgX3VwZGF0ZU9yaWdpbk1lZGlhU3RyZWFtVHJhY2soZSx0KXtsZXQgaT1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXSYmYXJndW1lbnRzWzJdO3RoaXMuX2lzRXh0ZXJuYWxUcmFjaz1pLGUhPT10aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrJiYodGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjayYmKHRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2sucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImVuZGVkXCIsdGhpcy5faGFuZGxlVHJhY2tFbmRlZCksdCYmdGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5zdG9wKCkpLGUuYWRkRXZlbnRMaXN0ZW5lcihcImVuZGVkXCIsdGhpcy5faGFuZGxlVHJhY2tFbmRlZCksdGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjaz1lLHRoaXMuX211dGVkJiYodGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5lbmFibGVkPSExKSx0aGlzLl9tZWRpYVN0cmVhbVRyYWNrPXRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2ssdGhpcy5fdXBkYXRlUGxheWVyU291cmNlKCksYXdhaXQgJHkodGhpcyxmTC5ORUVEX1JFUExBQ0VfVFJBQ0ssdGhpcyksdGhpcy5wcm9jZXNzb3ImJnRoaXMuX3Byb2Nlc3NvckNvbnRleHQmJnRoaXMucHJvY2Vzc29yLnVwZGF0ZUlucHV0KHt0cmFjazp0aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrLGNvbnRleHQ6dGhpcy5fcHJvY2Vzc29yQ29udGV4dH0pKX1fZ2V0RGVmYXVsdFBsYXllckNvbmZpZygpe3JldHVybnt9fW9uVHJhY2tFbmRlZCgpe2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gdHJhY2sgZW5kZWRcIikpLHRoaXMuc2FmZUVtaXQoQ0wuVFJBQ0tfRU5ERUQpfXN0YXRlQ2hlY2soZSx0KXtpZihmYi5kZWJ1ZyhcImNoZWNrIHRyYWNrIHN0YXRlLCBbbXV0ZWQ6IFwiLmNvbmNhdCh0aGlzLl9tdXRlZCxcIiwgZW5hYmxlZDogXCIpLmNvbmNhdCh0aGlzLl9lbmFibGVkLFwiXSB0byBbXCIpLmNvbmNhdChlLFwiOiBcIikuY29uY2F0KHQsXCJdXCIpKSxJeSh0LGUpLHRoaXMuX2VuYWJsZWQmJnRoaXMuX211dGVkJiZcImVuYWJsZWRcIj09PWUmJiExPT09dCl0aHJvdyBuZXcgQ3koUnkuVFJBQ0tfU1RBVEVfVU5SRUFDSEFCTEUsXCJjYW5ub3Qgc2V0IGVuYWJsZWQgd2hpbGUgdGhlIHRyYWNrIGlzIG11dGVkXCIpLnByaW50KFwiZXJyb3JcIixmYik7aWYoIXRoaXMuX2VuYWJsZWQmJiF0aGlzLl9tdXRlZCYmXCJtdXRlZFwiPT09ZSYmITA9PT10KXRocm93IG5ldyBDeShSeS5UUkFDS19TVEFURV9VTlJFQUNIQUJMRSxcImNhbm5vdCBzZXQgbXV0ZWQgd2hpbGUgdGhlIHRyYWNrIGlzIGRpc2FibGVkXCIpLnByaW50KFwiZXJyb3JcIixmYil9Z2V0UHJvY2Vzc29yU3RhdHMoKXtyZXR1cm4gdGhpcy5fcHJvY2Vzc29yQ29udGV4dCYmdGhpcy5fcHJvY2Vzc29yQ29udGV4dC5nYXRoZXJTdGF0cygpfHxbXX1nZXRQcm9jZXNzb3JVc2FnZSgpe3JldHVybiB0aGlzLl9wcm9jZXNzb3JDb250ZXh0P3RoaXMuX3Byb2Nlc3NvckNvbnRleHQuZ2F0aGVyVXNhZ2UoKTpHaC5yZXNvbHZlKFtdKX19Y29uc3QgS0w9d2luZG93LkF1ZGlvQ29udGV4dHx8d2luZG93LndlYmtpdEF1ZGlvQ29udGV4dDtsZXQgWUw9bnVsbDtjb25zdCBxTD1uZXcgY2xhc3MgZXh0ZW5kcyB4eXtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksQkwodGhpcyxcInByZXZTdGF0ZVwiLHZvaWQgMCksQkwodGhpcyxcImN1clN0YXRlXCIsdm9pZCAwKSxCTCh0aGlzLFwiY3VycmVudFRpbWVcIix2b2lkIDApLEJMKHRoaXMsXCJjdXJyZW50VGltZVN0dWNrQXRcIix2b2lkIDApLEJMKHRoaXMsXCJpbnRlcnJ1cHREZXRlY3RvclRyYWNrXCIsdm9pZCAwKSxCTCh0aGlzLFwib25Mb2NhbEF1ZGlvVHJhY2tNdXRlXCIsKCgpPT57ZmIuaW5mbyhcImlvczE1LWludGVycnVwdGlvbi1zdGFydFwiKSx0aGlzLmVtaXQodEwuSU9TXzE1XzE2X0lOVEVSUlVQVElPTl9TVEFSVCl9KSksQkwodGhpcyxcIm9uTG9jYWxBdWRpb1RyYWNrVW5tdXRlXCIsKGFzeW5jKCk9PntmYi5pbmZvKFwiaW9zMTUtaW50ZXJydXB0aW9uLWVuZFwiKSxcInJ1bm5pbmdcIiE9PXRoaXMuY3VyU3RhdGV8fHRoaXMuZHVyaW5nSW50ZXJydXB0aW9uP2ZiLmluZm8oXCJpb3MxNS1pbnRlcnJ1cHRpb24tZW5kLWNhbmNlbGVkXCIpOihZTCYmYXdhaXQgWUwuc3VzcGVuZCgpLHRoaXMuZW1pdCh0TC5JT1NfMTVfMTZfSU5URVJSVVBUSU9OX0VORCkpfSkpfWdldCBkdXJpbmdJbnRlcnJ1cHRpb24oKXtyZXR1cm5cInJ1bm5pbmdcIj09PXRoaXMucHJldlN0YXRlJiZcImludGVycnVwdGVkXCI9PT10aGlzLmN1clN0YXRlfWJpbmRJbnRlcnJ1cHREZXRlY3RvclRyYWNrKGUpe2ZiLmRlYnVnKFwid2ViYXVkaW8gYmluZEludGVycnVwdERldGVjdG9yVHJhY2sgXCIuY29uY2F0KGUuZ2V0VHJhY2tJZCgpKSksdGhpcy5pbnRlcnJ1cHREZXRlY3RvclRyYWNrfHwodGhpcy5pbnRlcnJ1cHREZXRlY3RvclRyYWNrPWUsdGhpcy5pbnRlcnJ1cHREZXRlY3RvclRyYWNrLl9tZWRpYVN0cmVhbVRyYWNrLm9ubXV0ZT10aGlzLm9uTG9jYWxBdWRpb1RyYWNrTXV0ZSx0aGlzLmludGVycnVwdERldGVjdG9yVHJhY2suX21lZGlhU3RyZWFtVHJhY2sub251bm11dGU9dGhpcy5vbkxvY2FsQXVkaW9UcmFja1VubXV0ZSl9dW5iaW5kSW50ZXJydXB0RGV0ZWN0b3JUcmFjayhlKXtmYi5kZWJ1ZyhcIndlYmF1ZGlvIHVuYmluZEludGVycnVwdERldGVjdG9yVHJhY2sgXCIuY29uY2F0KGUuZ2V0VHJhY2tJZCgpKSksdGhpcy5pbnRlcnJ1cHREZXRlY3RvclRyYWNrJiZ0aGlzLmludGVycnVwdERldGVjdG9yVHJhY2s9PT1lJiYodGhpcy5pbnRlcnJ1cHREZXRlY3RvclRyYWNrLl9tZWRpYVN0cmVhbVRyYWNrJiYodGhpcy5pbnRlcnJ1cHREZXRlY3RvclRyYWNrLl9tZWRpYVN0cmVhbVRyYWNrLm9ubXV0ZT1udWxsLHRoaXMuaW50ZXJydXB0RGV0ZWN0b3JUcmFjay5fbWVkaWFTdHJlYW1UcmFjay5vbnVubXV0ZT1udWxsKSx0aGlzLmludGVycnVwdERldGVjdG9yVHJhY2s9dm9pZCAwKX19O2Z1bmN0aW9uIHpMKCl7aWYoIVlMKXtpZihmdW5jdGlvbigpe2lmKCFLTClyZXR1cm4gdm9pZCBmYi5lcnJvcihcInlvdXIgYnJvd3NlciBpcyBub3Qgc3VwcG9ydCB3ZWIgYXVkaW9cIik7ZmIuaW5mbyhcImNyZWF0ZSBhdWRpbyBjb250ZXh0XCIpO2NvbnN0IGU9R0woe30sWEEoXCJXRUJBVURJT19JTklUX09QVElPTlNcIikpO2ZiLmRlYnVnKFwiYXVkaW8gY29udGV4dCBpbml0IG9wdGlvbjpcIixKU09OLnN0cmluZ2lmeShlKSksWUw9bmV3IEtMKGUpLHFMLmN1clN0YXRlPVlMLnN0YXRlLFlMLm9uc3RhdGVjaGFuZ2U9KCk9PntxTC5wcmV2U3RhdGU9cUwuY3VyU3RhdGUscUwuY3VyU3RhdGU9WUw/WUwuc3RhdGU6dm9pZCAwO2NvbnN0e3ByZXZTdGF0ZTplLGN1clN0YXRlOnR9PXFMLGk9XCJydW5uaW5nXCI9PT10LG49XCJpbnRlcnJ1cHRlZFwiPT09dCxyPVwicnVubmluZ1wiPT09ZSxvPVwic3VzcGVuZGVkXCI9PT1lLHM9XCJpbnRlcnJ1cHRlZFwiPT09ZSxhPUh2KCkub3NWZXJzaW9uOygkdigpfHx1eSgpKSYmciYmbiYmKGZiLmluZm8oXCJpb3NcIi5jb25jYXQoYSxcIi1pbnRlcnJ1cHRpb24tc3RhcnRcIikpLHFMLmVtaXQodEwuSU9TX0lOVEVSUlVQVElPTl9TVEFSVCkpLCgkdigpfHx1eSgpKSYmKG98fHMpJiZpJiYoZmIuaW5mbyhcImlvc1wiLmNvbmNhdChhLFwiLWludGVycnVwdGlvbi1lbmRcIikpLHFMLmVtaXQodEwuSU9TX0lOVEVSUlVQVElPTl9FTkQpKSxlIT09dCYmcUwuZW1pdCh0TC5TVEFURV9DSEFOR0UsdCxlKX0sc2V0SW50ZXJ2YWwoKCgpPT57dmFyIGU7Y29uc3QgdD1udWxsPT09KGU9WUwpfHx2b2lkIDA9PT1lP3ZvaWQgMDplLmN1cnJlbnRUaW1lO3FMLmN1cnJlbnRUaW1lIT09dD8ocUwuY3VycmVudFRpbWVTdHVja0F0JiYoZmIuZGVidWcoXCJBdWRpb0NvbnRleHQgY3VycmVudCB0aW1lIHJlc3VtZSBhdCBcIi5jb25jYXQodCkpLHFMLmN1cnJlbnRUaW1lU3R1Y2tBdD12b2lkIDApLHFMLmN1cnJlbnRUaW1lPXQpOih0IT09cUwuY3VycmVudFRpbWVTdHVja0F0JiYodmIucmVwb3J0QXBpSW52b2tlKG51bGwse25hbWU6XCJXRUJfQVVESU9fQ1VSUkVOVF9USU1FX1NUVUNLXCIsb3B0aW9uczp7Y3VycmVudFRpbWU6dH0sdGFnOmp5LlRSQUNFUn0pLm9uU3VjY2VzcygpLGZiLndhcm5pbmcoXCJBdWRpb0NvbnRleHQgY3VycmVudCB0aW1lIHN0dWNrIGF0IFwiLmNvbmNhdCh0KSkpLHFMLmN1cnJlbnRUaW1lU3R1Y2tBdD10KX0pLDVlMyksYXN5bmMgZnVuY3Rpb24oZSl7Y29uc3QgdD1bXCJjbGlja1wiLFwiY29udGV4dG1lbnVcIixcImF1eGNsaWNrXCIsXCJkYmxjbGlja1wiLFwibW91c2Vkb3duXCIsXCJtb3VzZXVwXCIsXCJ0b3VjaGVuZFwiLFwia2V5ZG93blwiLFwia2V5dXBcIl07bGV0IGksbj0hMSxyPSExLG89ITE7ZnVuY3Rpb24gcyh0KXtcInJ1bm5pbmdcIj09PWUuc3RhdGU/YSghMSk6JHYoKXx8dXkoKT9cInN1c3BlbmRlZFwiPT09ZS5zdGF0ZSYmKGEoITApLHQmJmUucmVzdW1lKCkudGhlbihjLGMpKTpcImNsb3NlZFwiIT09ZS5zdGF0ZSYmKGEoITApLHQmJmUucmVzdW1lKCkudGhlbihjLGMpKX1mdW5jdGlvbiBhKGUpe2lmKG4hPT1lKXtuPWU7Zm9yKGxldCBpPTAsbj10O2k8bi5sZW5ndGg7aSs9MSl7Y29uc3QgdD1uW2ldO2U/d2luZG93LmFkZEV2ZW50TGlzdGVuZXIodCxkLHtjYXB0dXJlOiEwLHBhc3NpdmU6ITB9KTp3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcih0LGQse2NhcHR1cmU6ITAscGFzc2l2ZTohMH0pfX19ZnVuY3Rpb24gYygpe3MoITEpfWZ1bmN0aW9uIGQoKXtzKCEwKX1mdW5jdGlvbiBsKGUpe2lmKCFvKWlmKGkucGF1c2VkKWlmKGUpe2xldCB0O3UoITEpLG89ITA7dHJ5e3Q9aS5wbGF5KCksdD90LnRoZW4oaCxoKTooaS5hZGRFdmVudExpc3RlbmVyKFwicGxheWluZ1wiLGgpLGkuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsaCksaS5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIixoKSl9Y2F0Y2goZSl7aCgpfX1lbHNlIHUoITApO2Vsc2UgdSghMSl9ZnVuY3Rpb24gdShlKXtpZihyIT09ZSl7cj1lO2ZvcihsZXQgaT0wLG49dDtpPG4ubGVuZ3RoO2krKyl7Y29uc3QgdD1uW2ldO2U/d2luZG93LmFkZEV2ZW50TGlzdGVuZXIodCxwLHtjYXB0dXJlOiEwLHBhc3NpdmU6ITB9KTp3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcih0LHAse2NhcHR1cmU6ITAscGFzc2l2ZTohMH0pfX19ZnVuY3Rpb24gaCgpe2kucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBsYXlpbmdcIixoKSxpLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLGgpLGkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsaCksbz0hMSxsKCExKX1mdW5jdGlvbiBwKCl7bCghMCl9aWYoJHYoKSl7Y29uc3QgdD1lLmNyZWF0ZU1lZGlhU3RyZWFtRGVzdGluYXRpb24oKSxuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bi5pbm5lckhUTUw9XCI8YXVkaW8geC13ZWJraXQtYWlycGxheT0nZGVueSc+PC9hdWRpbz5cIixpPW4uY2hpbGRyZW4uaXRlbSgwKSxpLmNvbnRyb2xzPSExLGkuZGlzYWJsZVJlbW90ZVBsYXliYWNrPSEwLGkucHJlbG9hZD1cImF1dG9cIixpLnNyY09iamVjdD10LnN0cmVhbSxsKCEwKX1xTC5vbih0TC5TVEFURV9DSEFOR0UsKGZ1bmN0aW9uKCl7cyghMCl9KSkscyghMSl9KFlMKX0oKSwhWUwpdGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQsXCJjYW4gbm90IGNyZWF0ZSBhdWRpbyBjb250ZXh0XCIpO3JldHVybiBZTH1yZXR1cm4gWUx9ZnVuY3Rpb24gSkwoZSl7aWYoZnVuY3Rpb24oKXtpZihudWxsIT09WEwpcmV0dXJuIFhMO2NvbnN0IGU9ekwoKSx0PWUuY3JlYXRlQnVmZmVyU291cmNlKCksaT1lLmNyZWF0ZUdhaW4oKSxuPWUuY3JlYXRlR2FpbigpO3QuY29ubmVjdChpKSx0LmNvbm5lY3QobiksdC5kaXNjb25uZWN0KGkpO2xldCByPSExO3RyeXt0LmRpc2Nvbm5lY3QoaSl9Y2F0Y2goZSl7cj0hMH1yZXR1cm4gdC5kaXNjb25uZWN0KCksWEw9cixyfSgpKXJldHVybjtjb25zdCB0PWUuY29ubmVjdCxpPWUuZGlzY29ubmVjdDtlLmNvbm5lY3Q9KGksbixyKT0+e3ZhciBvO3JldHVybiBlLl9pbnB1dE5vZGVzfHwoZS5faW5wdXROb2Rlcz1bXSksRG4obz1lLl9pbnB1dE5vZGVzKS5jYWxsKG8saSl8fChpIGluc3RhbmNlb2YgQXVkaW9Ob2RlPyhlLl9pbnB1dE5vZGVzLnB1c2goaSksdC5jYWxsKGUsaSxuLHIpKTp0LmNhbGwoZSxpLG4pKSxlfSxlLmRpc2Nvbm5lY3Q9KG4scixvKT0+e2kuY2FsbChlKSxuP25BKGUuX2lucHV0Tm9kZXMsbik6ZS5faW5wdXROb2Rlcz1bXTtmb3IoY29uc3QgaSBvZiBlLl9pbnB1dE5vZGVzKXQuY2FsbChlLGkpfX1sZXQgWEw9bnVsbDtmdW5jdGlvbiBRTChlLHQpe2xldCBpPSExO2NvbnN0IG49MS90O2lmKFhBKFwiRElTQUJMRV9XRUJBVURJT1wiKSl7Y29uc3QgdD13aW5kb3cuc2V0SW50ZXJ2YWwoKCgpPT57aT93aW5kb3cuY2xlYXJJbnRlcnZhbCh0KTplKHBlcmZvcm1hbmNlLm5vdygpLzFlMyl9KSwxZTMqbil9ZWxzZXtjb25zdCB0PXpMKCk7bGV0IHI9dC5jcmVhdGVHYWluKCk7ci5nYWluLnZhbHVlPTAsci5jb25uZWN0KHQuZGVzdGluYXRpb24pO2NvbnN0IG89KCk9PntpZihpKXJldHVybiB2b2lkKHI9bnVsbCk7Y29uc3Qgcz10LmNyZWF0ZU9zY2lsbGF0b3IoKTtzLm9uZW5kZWQ9byxzLmNvbm5lY3Qocikscy5zdGFydCgwKSxzLnN0b3AodC5jdXJyZW50VGltZStuKSxlKHQuY3VycmVudFRpbWUpfTtvKCl9cmV0dXJuKCk9PntpPSEwfX1jbGFzcyBaTHtjb25zdHJ1Y3Rvcigpe0JMKHRoaXMsXCJjb250ZXh0XCIsdm9pZCAwKSxCTCh0aGlzLFwiYW5hbHlzZXJOb2RlXCIsdm9pZCAwKSxCTCh0aGlzLFwic291cmNlTm9kZVwiLHZvaWQgMCksdGhpcy5jb250ZXh0PXpMKCksdGhpcy5hbmFseXNlck5vZGU9dGhpcy5jb250ZXh0LmNyZWF0ZUFuYWx5c2VyKCksdGhpcy5hbmFseXNlck5vZGUuZmZ0U2l6ZT0yMDQ4LHRoaXMuYW5hbHlzZXJOb2RlLnNtb290aGluZ1RpbWVDb25zdGFudD0uNH11cGRhdGVTb3VyY2UoZSl7aWYoZSE9PXRoaXMuc291cmNlTm9kZSl7aWYodGhpcy5zb3VyY2VOb2RlKXRyeXt0aGlzLnNvdXJjZU5vZGUuZGlzY29ubmVjdCh0aGlzLmFuYWx5c2VyTm9kZSl9Y2F0Y2goZSl7fXRoaXMuc291cmNlTm9kZT1lLG51bGw9PWV8fGUuY29ubmVjdCh0aGlzLmFuYWx5c2VyTm9kZSl9fWdldFZvbHVtZUxldmVsKCl7aWYoIXRoaXMuc291cmNlTm9kZSlyZXR1cm4gMDtpZighdGhpcy5jb250ZXh0fHwkdigpfHx1eSgpfHxcInJ1bm5pbmdcIiE9PXRoaXMuY29udGV4dC5zdGF0ZSYmdGhpcy5jb250ZXh0LnJlc3VtZSgpLCF0aGlzLmFuYWx5c2VyTm9kZSlyZXR1cm4gMDtjb25zdCBlPW5ldyBGbG9hdDMyQXJyYXkodGhpcy5hbmFseXNlck5vZGUuZmZ0U2l6ZSk7aWYodGhpcy5hbmFseXNlck5vZGUuZ2V0RmxvYXRUaW1lRG9tYWluRGF0YSl0aGlzLmFuYWx5c2VyTm9kZS5nZXRGbG9hdFRpbWVEb21haW5EYXRhKGUpO2Vsc2V7Y29uc3QgdD1uZXcgVWludDhBcnJheSh0aGlzLmFuYWx5c2VyTm9kZS5mZnRTaXplKTt0aGlzLmFuYWx5c2VyTm9kZS5nZXRCeXRlVGltZURvbWFpbkRhdGEodCk7Zm9yKGxldCBpPTA7aTxlLmxlbmd0aDsrK2kpZVtpXT10W2ldLzEyOC0xfWNvbnN0IHQ9Sm4oZSkuY2FsbChlLCgoZSx0KT0+ZSt0KnQpLDApL2UubGVuZ3RoO3JldHVybiBNYXRoLm1heCgxMCpNYXRoLmxvZzEwKHQpKzEwMCwwKS8xMDB9Z2V0QW5hbHlzZXJOb2RlKCl7cmV0dXJuIHRoaXMuYW5hbHlzZXJOb2RlfXJlYnVpbGRBbmFseXNlcigpe3RyeXt2YXIgZSx0O251bGw9PT0oZT10aGlzLnNvdXJjZU5vZGUpfHx2b2lkIDA9PT1lfHxlLmRpc2Nvbm5lY3QodGhpcy5hbmFseXNlck5vZGUpLHRoaXMuYW5hbHlzZXJOb2RlPXRoaXMuY29udGV4dC5jcmVhdGVBbmFseXNlcigpLHRoaXMuYW5hbHlzZXJOb2RlLmZmdFNpemU9MjA0OCx0aGlzLmFuYWx5c2VyTm9kZS5zbW9vdGhpbmdUaW1lQ29uc3RhbnQ9LjQsbnVsbD09PSh0PXRoaXMuc291cmNlTm9kZSl8fHZvaWQgMD09PXR8fHQuY29ubmVjdCh0aGlzLmFuYWx5c2VyTm9kZSl9Y2F0Y2goZSl7ZmIud2FybmluZyhcInJlYnVpbGQgYW5hbHlzZXIgbm9kZSBmYWlsZWQuXCIpfX1kZXN0cm95KCl7dGhpcy51cGRhdGVTb3VyY2Uodm9pZCAwKX19Y2xhc3MgJEwgZXh0ZW5kcyB4eXtnZXQgcHJvY2Vzc1NvdXJjZU5vZGUoKXtyZXR1cm4gdGhpcy5zb3VyY2VOb2RlfXNldCBwcm9jZXNzZWROb2RlKGUpe3ZhciB0O2lmKCF0aGlzLmlzRGVzdHJveWVkJiZ0aGlzLl9wcm9jZXNzZWROb2RlIT09ZSl7dHJ5e3ZhciBpO251bGw9PT0oaT10aGlzLnNvdXJjZU5vZGUpfHx2b2lkIDA9PT1pfHxpLmRpc2Nvbm5lY3QodGhpcy5vdXRwdXROb2RlKX1jYXRjaChlKXt9bnVsbD09PSh0PXRoaXMuX3Byb2Nlc3NlZE5vZGUpfHx2b2lkIDA9PT10fHx0LmRpc2Nvbm5lY3QoKSx0aGlzLl9wcm9jZXNzZWROb2RlPWUsdGhpcy5jb25uZWN0KCl9fWdldCBwcm9jZXNzZWROb2RlKCl7cmV0dXJuIHRoaXMuX3Byb2Nlc3NlZE5vZGV9Y29uc3RydWN0b3IoKXtzdXBlcigpLEJMKHRoaXMsXCJvdXRwdXROb2RlXCIsdm9pZCAwKSxCTCh0aGlzLFwib3V0cHV0VHJhY2tcIix2b2lkIDApLEJMKHRoaXMsXCJpc1BsYXllZFwiLCExKSxCTCh0aGlzLFwic291cmNlTm9kZVwiLHZvaWQgMCksQkwodGhpcyxcImNvbnRleHRcIix2b2lkIDApLEJMKHRoaXMsXCJhdWRpb0J1ZmZlck5vZGVcIix2b2lkIDApLEJMKHRoaXMsXCJkZXN0Tm9kZVwiLHZvaWQgMCksQkwodGhpcyxcImF1ZGlvT3V0cHV0TGV2ZWxcIiwwKSxCTCh0aGlzLFwidm9sdW1lTGV2ZWxBbmFseXNlclwiLHZvaWQgMCksQkwodGhpcyxcIl9wcm9jZXNzZWROb2RlXCIsdm9pZCAwKSxCTCh0aGlzLFwicGxheU5vZGVcIix2b2lkIDApLEJMKHRoaXMsXCJpc0Rlc3Ryb3llZFwiLCExKSxCTCh0aGlzLFwib25Ob0F1ZGlvSW5wdXRcIix2b2lkIDApLEJMKHRoaXMsXCJpc05vQXVkaW9JbnB1dFwiLCExKSxCTCh0aGlzLFwiX25vQXVkaW9JbnB1dENvdW50XCIsMCksdGhpcy5jb250ZXh0PXpMKCksdGhpcy5wbGF5Tm9kZT10aGlzLmNvbnRleHQuZGVzdGluYXRpb24sdGhpcy5vdXRwdXROb2RlPXRoaXMuY29udGV4dC5jcmVhdGVHYWluKCksSkwodGhpcy5vdXRwdXROb2RlKSx0aGlzLnZvbHVtZUxldmVsQW5hbHlzZXI9bmV3IFpMfXN0YXJ0R2V0QXVkaW9CdWZmZXIoZSl7dGhpcy5hdWRpb0J1ZmZlck5vZGV8fCh0aGlzLmF1ZGlvQnVmZmVyTm9kZT10aGlzLmNvbnRleHQuY3JlYXRlU2NyaXB0UHJvY2Vzc29yKGUpLHRoaXMub3V0cHV0Tm9kZS5jb25uZWN0KHRoaXMuYXVkaW9CdWZmZXJOb2RlKSx0aGlzLmF1ZGlvQnVmZmVyTm9kZS5jb25uZWN0KHRoaXMuY29udGV4dC5kZXN0aW5hdGlvbiksdGhpcy5hdWRpb0J1ZmZlck5vZGUub25hdWRpb3Byb2Nlc3M9ZT0+e3RoaXMuZW1pdCh5TC5PTl9BVURJT19CVUZGRVIsZnVuY3Rpb24oZSl7Zm9yKGxldCB0PTA7dDxlLm91dHB1dEJ1ZmZlci5udW1iZXJPZkNoYW5uZWxzO3QrPTEpe2NvbnN0IGk9ZS5vdXRwdXRCdWZmZXIuZ2V0Q2hhbm5lbERhdGEodCk7Zm9yKGxldCBlPTA7ZTxpLmxlbmd0aDtlKz0xKWlbZV09MH1yZXR1cm4gZS5pbnB1dEJ1ZmZlcn0oZSkpfSl9c3RvcEdldEF1ZGlvQnVmZmVyKCl7dGhpcy5hdWRpb0J1ZmZlck5vZGUmJih0aGlzLmF1ZGlvQnVmZmVyTm9kZS5vbmF1ZGlvcHJvY2Vzcz1udWxsLHRoaXMub3V0cHV0Tm9kZS5kaXNjb25uZWN0KHRoaXMuYXVkaW9CdWZmZXJOb2RlKSx0aGlzLmF1ZGlvQnVmZmVyTm9kZT12b2lkIDApfWNyZWF0ZU91dHB1dFRyYWNrKCl7aWYoIVpQKCkud2ViQXVkaW9NZWRpYVN0cmVhbURlc3QpdGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQsXCJ5b3VyIGJyb3dzZXIgaXMgbm90IHN1cHBvcnQgYXVkaW8gcHJvY2Vzc29yXCIpO3JldHVybiB0aGlzLmRlc3ROb2RlJiZ0aGlzLm91dHB1dFRyYWNrfHwodGhpcy5kZXN0Tm9kZT10aGlzLmNvbnRleHQuY3JlYXRlTWVkaWFTdHJlYW1EZXN0aW5hdGlvbigpLHRoaXMub3V0cHV0Tm9kZS5jb25uZWN0KHRoaXMuZGVzdE5vZGUpLHRoaXMub3V0cHV0VHJhY2s9dGhpcy5kZXN0Tm9kZS5zdHJlYW0uZ2V0QXVkaW9UcmFja3MoKVswXSksdGhpcy5vdXRwdXRUcmFja31wbGF5KGUpe1wicnVubmluZ1wiIT09dGhpcy5jb250ZXh0LnN0YXRlJiZvQSgoKCk9PntxTC5lbWl0KFwiYXV0b3BsYXktZmFpbGVkXCIpfSkpLHRoaXMuaXNQbGF5ZWQ9ITAsdGhpcy5wbGF5Tm9kZT1lfHx0aGlzLmNvbnRleHQuZGVzdGluYXRpb24sdGhpcy5vdXRwdXROb2RlLmNvbm5lY3QodGhpcy5wbGF5Tm9kZSl9c3RvcCgpe2lmKHRoaXMuaXNQbGF5ZWQpdHJ5e3RoaXMub3V0cHV0Tm9kZS5kaXNjb25uZWN0KHRoaXMucGxheU5vZGUpfWNhdGNoKGUpe310aGlzLmlzUGxheWVkPSExfWdldEFjY3VyYXRlVm9sdW1lTGV2ZWwoKXtyZXR1cm4gdGhpcy52b2x1bWVMZXZlbEFuYWx5c2VyLmdldFZvbHVtZUxldmVsKCl9YXN5bmMgY2hlY2tIYXNBdWRpb0lucHV0KCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOjA7aWYoZT41KXJldHVybiB0aGlzLmlzTm9BdWRpb0lucHV0PSEwLHRoaXMub25Ob0F1ZGlvSW5wdXQmJnRoaXMub25Ob0F1ZGlvSW5wdXQoKSwhMTskdigpfHx1eSgpP1wic3VzcGVuZGVkXCI9PT10aGlzLmNvbnRleHQuc3RhdGUmJnRoaXMuY29udGV4dC5yZXN1bWUoKTpcInJ1bm5pbmdcIiE9PXRoaXMuY29udGV4dC5zdGF0ZSYmdGhpcy5jb250ZXh0LnJlc3VtZSgpO2NvbnN0IHQ9dGhpcy52b2x1bWVMZXZlbEFuYWx5c2VyLmdldEFuYWx5c2VyTm9kZSgpO2xldCBpO3QuZ2V0RmxvYXRUaW1lRG9tYWluRGF0YT8oaT1uZXcgRmxvYXQzMkFycmF5KHQuZmZ0U2l6ZSksdC5nZXRGbG9hdFRpbWVEb21haW5EYXRhKGkpKTooaT1uZXcgVWludDhBcnJheSh0LmZmdFNpemUpLHQuZ2V0Qnl0ZVRpbWVEb21haW5EYXRhKGkpKTtsZXQgbj0hMTtmb3IobGV0IGU9MDtlPGkubGVuZ3RoO2UrKykwIT09aVtlXSYmKG49ITApO3JldHVybiBuPyh0aGlzLmlzTm9BdWRpb0lucHV0PSExLCEwKTooYXdhaXQgbUEoMjAwKSxhd2FpdCB0aGlzLmNoZWNrSGFzQXVkaW9JbnB1dChlP2UrMToxKSYmbil9Z2V0QXVkaW9Wb2x1bWUoKXtyZXR1cm4gdGhpcy5vdXRwdXROb2RlLmdhaW4udmFsdWV9c2V0Vm9sdW1lKGUpe3RoaXMub3V0cHV0Tm9kZS5nYWluLnNldFZhbHVlQXRUaW1lKGUsdGhpcy5jb250ZXh0LmN1cnJlbnRUaW1lKX1kZXN0cm95KCl7dGhpcy5kaXNjb25uZWN0KCksdGhpcy5zdG9wKCksdGhpcy5pc0Rlc3Ryb3llZD0hMCx0aGlzLm9uTm9BdWRpb0lucHV0PXZvaWQgMH1kaXNjb25uZWN0KCl7dmFyIGUsdDtudWxsPT09KGU9dGhpcy5wcm9jZXNzZWROb2RlKXx8dm9pZCAwPT09ZXx8ZS5kaXNjb25uZWN0KCksbnVsbD09PSh0PXRoaXMuc291cmNlTm9kZSl8fHZvaWQgMD09PXR8fHQuZGlzY29ubmVjdCgpLHRoaXMub3V0cHV0Tm9kZSYmdGhpcy5vdXRwdXROb2RlLmRpc2Nvbm5lY3QoKX1jb25uZWN0KCl7dmFyIGU7dGhpcy5wcm9jZXNzZWROb2RlP251bGw9PT0oZT10aGlzLnByb2Nlc3NlZE5vZGUpfHx2b2lkIDA9PT1lfHxlLmNvbm5lY3QodGhpcy5vdXRwdXROb2RlKTp0aGlzLnNvdXJjZU5vZGUmJnRoaXMuc291cmNlTm9kZS5jb25uZWN0KHRoaXMub3V0cHV0Tm9kZSksdGhpcy52b2x1bWVMZXZlbEFuYWx5c2VyLnVwZGF0ZVNvdXJjZSh0aGlzLm91dHB1dE5vZGUpfX1jbGFzcyBlayBleHRlbmRzICRMe2dldCBpc0ZyZWV6ZSgpe3JldHVybiExfWNvbnN0cnVjdG9yKGUsdCxpKXt2YXIgbjtpZihzdXBlcigpLEJMKHRoaXMsXCJzb3VyY2VOb2RlXCIsdm9pZCAwKSxCTCh0aGlzLFwidHJhY2tcIix2b2lkIDApLEJMKHRoaXMsXCJjbG9uZWRUcmFja1wiLHZvaWQgMCksQkwodGhpcyxcImF1ZGlvRWxlbWVudFwiLHZvaWQgMCksQkwodGhpcyxcImlzQ3VycmVudFRyYWNrQ2xvbmVkXCIsITEpLEJMKHRoaXMsXCJpc1JlbW90ZVRyYWNrXCIsITEpLEJMKHRoaXMsXCJvcmlnaW5Wb2x1bWVMZXZlbEFuYWx5c2VyXCIsdm9pZCAwKSxCTCh0aGlzLFwicmVidWlsZFdlYkF1ZGlvXCIsKGFzeW5jKCk9PntpZihmYi5kZWJ1ZyhcInJlYWR5IHRvIHJlYnVpbGQgd2ViIGF1ZGlvLCBzdGF0ZTpcIix0aGlzLmNvbnRleHQuc3RhdGUpLHRoaXMuaXNOb0F1ZGlvSW5wdXQmJmF3YWl0IHRoaXMuY2hlY2tIYXNBdWRpb0lucHV0KCksIXRoaXMuaXNOb0F1ZGlvSW5wdXR8fHRoaXMuaXNEZXN0cm95ZWQpcmV0dXJuIGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsdGhpcy5yZWJ1aWxkV2ViQXVkaW8sITApLHZvaWQgZmIuZGVidWcoXCJyZWJ1aWxkIHdlYiBhdWRpbyBzdWNjZXNzLCBjdXJyZW50IHZvbHVtZSBzdGF0dXNcIix0aGlzLmdldEFjY3VyYXRlVm9sdW1lTGV2ZWwoKSk7dGhpcy5jb250ZXh0LnJlc3VtZSgpLnRoZW4oKCgpPT5mYi5pbmZvKFwicmVzdW1lIHN1Y2Nlc3NcIikpKSxmYi5kZWJ1ZyhcInJlYnVpbGQgd2ViIGF1ZGlvIGJlY2F1c2Ugb2YgaW9zIDEyIGJ1Z3NcIiksdGhpcy5kaXNjb25uZWN0KCk7Y29uc3QgZT10aGlzLnRyYWNrO3RoaXMudHJhY2s9dGhpcy50cmFjay5jbG9uZSgpLHRoaXMuaXNDdXJyZW50VHJhY2tDbG9uZWQ/ZS5zdG9wKCk6dGhpcy5pc0N1cnJlbnRUcmFja0Nsb25lZD0hMDtjb25zdCB0PW5ldyBNZWRpYVN0cmVhbShbdGhpcy50cmFja10pO3RoaXMuc291cmNlTm9kZT10aGlzLmNvbnRleHQuY3JlYXRlTWVkaWFTdHJlYW1Tb3VyY2UodCksSkwodGhpcy5zb3VyY2VOb2RlKSx0aGlzLnZvbHVtZUxldmVsQW5hbHlzZXIucmVidWlsZEFuYWx5c2VyKCk7Y29uc3QgaT10aGlzLm91dHB1dE5vZGUuZ2Fpbi52YWx1ZTt0aGlzLm91dHB1dE5vZGU9dGhpcy5jb250ZXh0LmNyZWF0ZUdhaW4oKSx0aGlzLm91dHB1dE5vZGUuZ2Fpbi5zZXRWYWx1ZUF0VGltZShpLHRoaXMuY29udGV4dC5jdXJyZW50VGltZSksSkwodGhpcy5vdXRwdXROb2RlKSx0aGlzLmVtaXQoeUwuVVBEQVRFX1NPVVJDRSksdGhpcy5jb25uZWN0KCksdGhpcy5hdWRpb0VsZW1lbnQuc3JjT2JqZWN0PXQsdGhpcy5pc1BsYXllZCYmdGhpcy5wbGF5KHRoaXMucGxheU5vZGUpLHRoaXMuY2hlY2tIYXNBdWRpb0lucHV0KCl9KSksXCJhdWRpb1wiIT09ZS5raW5kKXRocm93IG5ldyBDeShSeS5VTkVYUEVDVEVEX0VSUk9SKTt0aGlzLnRyYWNrPWU7Y29uc3Qgcj1uZXcgTWVkaWFTdHJlYW0oW3RoaXMudHJhY2tdKTtpZih0aGlzLmlzUmVtb3RlVHJhY2s9ISF0LHRoaXMuc291cmNlTm9kZT10aGlzLmNvbnRleHQuY3JlYXRlTWVkaWFTdHJlYW1Tb3VyY2UociksSkwodGhpcy5zb3VyY2VOb2RlKSxpKXtjb25zdCBlPWkuY2xvbmUoKTtlLmVuYWJsZWQ9ITAsdGhpcy5jbG9uZWRUcmFjaz1lLGZiLmRlYnVnKFwiY3JlYXRlIGFuIHVubXV0ZWQgdHJhY2sgXCIuY29uY2F0KGUuaWQsXCIgZnJvbSB0aGUgb3JpZ2luYWwgdHJhY2sgXCIpLmNvbmNhdChpLmlkLFwiIHRvIGdldCB0aGUgdm9sdW1lXCIpKTtjb25zdCB0PXRoaXMuY29udGV4dC5jcmVhdGVNZWRpYVN0cmVhbVNvdXJjZShuZXcgTWVkaWFTdHJlYW0oW2VdKSk7SkwodCksdGhpcy5vcmlnaW5Wb2x1bWVMZXZlbEFuYWx5c2VyPW5ldyBaTCx0aGlzLm9yaWdpblZvbHVtZUxldmVsQW5hbHlzZXIudXBkYXRlU291cmNlKHQpfXRoaXMuY29ubmVjdCgpLHRoaXMuYXVkaW9FbGVtZW50PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhdWRpb1wiKSx0aGlzLmF1ZGlvRWxlbWVudC5zcmNPYmplY3Q9cjtjb25zdCBvPUh2KCk7dCYmby5vcz09PUZ2LklPUyYmTnVtYmVyKG51bGw9PT0obj1vLm9zVmVyc2lvbil8fHZvaWQgMD09PW4/dm9pZCAwOm4uc3BsaXQoXCIuXCIpWzBdKTwxNSYmKHFMLm9uKHRMLlNUQVRFX0NIQU5HRSwoKCk9PntcInN1c3BlbmRlZFwiPT09dGhpcy5jb250ZXh0LnN0YXRlP2RvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsdGhpcy5yZWJ1aWxkV2ViQXVkaW8sITApOlwicnVubmluZ1wiPT09dGhpcy5jb250ZXh0LnN0YXRlJiZ0aGlzLnJlYnVpbGRXZWJBdWRpbygpfSkpLHRoaXMuY2hlY2tIYXNBdWRpb0lucHV0KCkudGhlbigoZT0+e2V8fGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsdGhpcy5yZWJ1aWxkV2ViQXVkaW8sITApfSkpKX11cGRhdGVUcmFjayhlKXt0aGlzLnNvdXJjZU5vZGUuZGlzY29ubmVjdCgpLHRoaXMudHJhY2s9ZSx0aGlzLmlzQ3VycmVudFRyYWNrQ2xvbmVkPSExO2NvbnN0IHQ9bmV3IE1lZGlhU3RyZWFtKFtlXSk7dGhpcy5zb3VyY2VOb2RlPXRoaXMuY29udGV4dC5jcmVhdGVNZWRpYVN0cmVhbVNvdXJjZSh0KSxKTCh0aGlzLnNvdXJjZU5vZGUpLHRoaXMucHJvY2Vzc2VkTm9kZXx8dGhpcy5zb3VyY2VOb2RlLmNvbm5lY3QodGhpcy5vdXRwdXROb2RlKSx0aGlzLmVtaXQoeUwuVVBEQVRFX1NPVVJDRSksdGhpcy5hdWRpb0VsZW1lbnQuc3JjT2JqZWN0PXR9ZGVzdHJveSgpe3ZhciBlO3RoaXMuYXVkaW9FbGVtZW50LnNyY09iamVjdD1udWxsLHRoaXMuYXVkaW9FbGVtZW50LnJlbW92ZSgpLHFMLm9mZihcInN0YXRlLWNoYW5nZVwiLHRoaXMucmVidWlsZFdlYkF1ZGlvKSxudWxsPT09KGU9dGhpcy5vcmlnaW5Wb2x1bWVMZXZlbEFuYWx5c2VyKXx8dm9pZCAwPT09ZXx8ZS5kZXN0cm95KCksdGhpcy5jbG9uZWRUcmFjaz12b2lkIDAsc3VwZXIuZGVzdHJveSgpfWNyZWF0ZU1lZGlhU3RyZWFtU291cmNlTm9kZShlKXtyZXR1cm4gdGhpcy5jb250ZXh0LmNyZWF0ZU1lZGlhU3RyZWFtU291cmNlKG5ldyBNZWRpYVN0cmVhbShbZV0pKX11cGRhdGVPcmlnaW5UcmFjayhlKXtjb25zdCB0PWUuY2xvbmUoKTt0LmVuYWJsZWQ9ITAsdGhpcy5jbG9uZWRUcmFjayYmKHRoaXMuY2xvbmVkVHJhY2suc3RvcCgpLHRoaXMuY2xvbmVkVHJhY2s9dCksZmIuZGVidWcoXCJjcmVhdGUgYW4gdW5tdXRlZCB0cmFjayBcIi5jb25jYXQodC5pZCxcIiBmcm9tIHRoZSBvcmlnaW5hbCB0cmFjayBcIikuY29uY2F0KGUuaWQsXCIgdG8gZ2V0IHRoZSB2b2x1bWVcIikpO2NvbnN0IGk9dGhpcy5jb250ZXh0LmNyZWF0ZU1lZGlhU3RyZWFtU291cmNlKG5ldyBNZWRpYVN0cmVhbShbdF0pKTtKTChpKSx0aGlzLm9yaWdpblZvbHVtZUxldmVsQW5hbHlzZXImJnRoaXMub3JpZ2luVm9sdW1lTGV2ZWxBbmFseXNlci51cGRhdGVTb3VyY2UoaSl9Z2V0T3JpZ2luVm9sdW1lTGV2ZWwoKXtyZXR1cm4gdGhpcy5vcmlnaW5Wb2x1bWVMZXZlbEFuYWx5c2VyP3RoaXMub3JpZ2luVm9sdW1lTGV2ZWxBbmFseXNlci5nZXRWb2x1bWVMZXZlbCgpOnRoaXMuZ2V0QWNjdXJhdGVWb2x1bWVMZXZlbCgpfX1hc3luYyBmdW5jdGlvbiB0ayhlLHQsaSl7Y29uc3Qgbj0oZSx0KT0+ZT9cIm51bWJlclwiIT10eXBlb2YgZT9lLm1heHx8ZS5leGFjdHx8ZS5pZGVhbHx8ZS5taW58fHQ6ZTp0LHI9e2F1ZGlvOiEhaSYme21hbmRhdG9yeTp7Y2hyb21lTWVkaWFTb3VyY2U6XCJkZXNrdG9wXCJ9fSx2aWRlbzp7bWFuZGF0b3J5OntjaHJvbWVNZWRpYVNvdXJjZTpcImRlc2t0b3BcIixjaHJvbWVNZWRpYVNvdXJjZUlkOmUsbWF4SGVpZ2h0Om4odC5oZWlnaHQsMTA4MCksbWF4V2lkdGg6bih0LndpZHRoLDE5MjApfX19O3JldHVybiB0LmZyYW1lUmF0ZSYmXCJudW1iZXJcIiE9dHlwZW9mIHQuZnJhbWVSYXRlPyhyLnZpZGVvLm1hbmRhdG9yeS5tYXhGcmFtZVJhdGU9dC5mcmFtZVJhdGUubWF4LHIudmlkZW8ubWFuZGF0b3J5Lm1pbkZyYW1lUmF0ZT10LmZyYW1lUmF0ZS5taW4pOlwibnVtYmVyXCI9PXR5cGVvZiB0LmZyYW1lUmF0ZSYmKHIudmlkZW8ubWFuZGF0b3J5Lm1heEZyYW1lUmF0ZT10LmZyYW1lUmF0ZSksYXdhaXQgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEocil9YXN5bmMgZnVuY3Rpb24gaWsoZSx0KXtjb25zdCBpPWF3YWl0IG5rKGUubWVkaWFTb3VyY2UpLHtzb3VyY2VJZDpuLGF1ZGlvOnJ9PWF3YWl0IGZ1bmN0aW9uKGUpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdJiZhcmd1bWVudHNbMV07cmV0dXJuIG5ldyBHaCgoKGksbik9Pntjb25zdCByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7ci5pbm5lclRleHQ9XCJzaGFyZSBzY3JlZW5cIixyLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsXCJ0ZXh0LWFsaWduOiBjZW50ZXI7IGhlaWdodDogMjVweDsgbGluZS1oZWlnaHQ6IDI1cHg7IGJvcmRlci1yYWRpdXM6IDRweCA0cHggMCAwOyBiYWNrZ3JvdW5kOiAjRDREMkQ0OyBib3JkZXItYm90dG9tOiAgc29saWQgMXB4ICNCOUI4Qjk7XCIpO2NvbnN0IG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtvLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsXCJ3aWR0aDogMTAwJTsgaGVpZ2h0OiA1MDBweDsgcGFkZGluZzogMTVweCAyNXB4IDsgYm94LXNpemluZzogYm9yZGVyLWJveDtcIik7Y29uc3Qgcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3MuaW5uZXJUZXh0PVwiQWdvcmEgV2ViIFNjcmVlbnNoYXJpbmcgd2FudHMgdG8gc2hhcmUgdGhlIGNvbnRlbnRzIG9mIHlvdXIgc2NyZWVuIHdpdGggd2ViZGVtby5hZ29yYWJlY2tvbi5jb20uIENob29zZSB3aGF0IHlvdSdkIGxpa2UgdG8gc2hhcmUuXCIscy5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLFwiaGVpZ2h0OiAxMiU7XCIpO2NvbnN0IGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTthLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsXCJ3aWR0aDogMTAwJTsgaGVpZ2h0OiA4MCU7IGJhY2tncm91bmQ6ICNGRkY7IGJvcmRlcjogIHNvbGlkIDFweCAjQ0JDQkNCOyBkaXNwbGF5OiBmbGV4OyBmbGV4LXdyYXA6IHdyYXA7IGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOyBvdmVyZmxvdy15OiBzY3JvbGw7IHBhZGRpbmc6IDAgMTVweDsgYm94LXNpemluZzogYm9yZGVyLWJveDtcIik7Y29uc3QgYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2Muc2V0QXR0cmlidXRlKFwic3R5bGVcIixcImRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgcGFkZGluZzogMTZweCAwO1wiKTtjb25zdCBkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7ZC5pbm5lckhUTUw9XCJjYW5jZWxcIixkLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsXCJ3aWR0aDogODVweDtcIiksZC5vbmNsaWNrPSgpPT57ZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChoKTtjb25zdCBlPW5ldyBFcnJvcihcIk5vdEFsbG93ZWRFcnJvclwiKTtlLm5hbWU9XCJOb3RBbGxvd2VkRXJyb3JcIixuKGUpfTtsZXQgbD10O2NvbnN0IHU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtpZih0KXtjb25zdCBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtlLnNldEF0dHJpYnV0ZShcInR5cGVcIixcImNoZWNrYm94XCIpO2NvbnN0IHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7ZS5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLFwibWFyZ2luLXJpZ2h0OiA2cHg7XCIpLHQuaW5uZXJUZXh0PVwiU2hhcmUgYXVkaW9cIixlLmNoZWNrZWQ9bCxlLm9uY2hhbmdlPSgpPT57bD1lLmNoZWNrZWR9LHUuYXBwZW5kQ2hpbGQoZSksdS5hcHBlbmRDaGlsZCh0KX1jLmFwcGVuZENoaWxkKHUpLGMuYXBwZW5kQ2hpbGQoZCksby5hcHBlbmRDaGlsZChzKSxvLmFwcGVuZENoaWxkKGEpLG8uYXBwZW5kQ2hpbGQoYyk7Y29uc3QgaD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2guc2V0QXR0cmlidXRlKFwic3R5bGVcIixcInBvc2l0aW9uOiBmaXhlZDsgei1pbmRleDogOTk5OTk5OTk7IHRvcDogNTAlOyBsZWZ0OiA1MCU7IHdpZHRoOiA2MjBweDsgaGVpZ2h0OiA1MjVweDsgYmFja2dyb3VuZDogI0VDRUNFQzsgYm9yZGVyLXJhZGl1czogNHB4OyAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsLTUwJSk7IHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsLTUwJSk7XCIpLGguYXBwZW5kQ2hpbGQociksaC5hcHBlbmRDaGlsZChvKSxkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGgpLGUubWFwKChlPT57aWYoZS5pZCl7Y29uc3QgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3Quc2V0QXR0cmlidXRlKFwic3R5bGVcIixcIndpZHRoOiAzMCU7IGhlaWdodDogMTYwcHg7IHBhZGRpbmc6IDIwcHggMDsgdGV4dC1hbGlnbjogY2VudGVyO2JveC1zaXppbmc6IGNvbnRlbnQtYm94O1wiKTtsZXQgbj1lLnRodW1ibmFpbDt0cnl7Y29uc3R7d2lkdGg6ZX09bi5nZXRTaXplKCk7ZT4xOTIwJiYobj1uLnJlc2l6ZSh7d2lkdGg6MTkyMH0pKX1jYXRjaChlKXt0aHJvdyBlJiZlLm1lc3NhZ2Uuc3RhcnRzV2l0aChcIklsbGVnYWwgaW52b2NhdGlvblwiKSYmY29uc29sZS5lcnJvcihcIk9wZXJhdGUgdGh1bWJuYWlsIGVycm9yLCBwbGVhc2UgdHJ5IHRvIHNldCBjb250ZXh0SXNvbGF0aW9uOiBmYWxzZS4gKGh0dHBzOi8vZ2l0aHViLmNvbS9lbGVjdHJvbi9lbGVjdHJvbi9pc3N1ZXMvMzQ5NTMpXCIpLGV9dC5pbm5lckhUTUw9JzxkaXYgc3R5bGU9XCJoZWlnaHQ6IDEyMHB4OyBkaXNwbGF5OiB0YWJsZS1jZWxsOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1wiPjxpbWcgc3R5bGU9XCJ3aWR0aDogMTAwJTsgYmFja2dyb3VuZDogIzMzMzMzMzsgYm94LXNoYWRvdzogMXB4IDFweCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcIiBzcmM9JytuLnRvRGF0YVVSTCgpKycgLz48L2Rpdj48c3BhbiBzdHlsZT1cIlxcdGhlaWdodDogNDBweDsgbGluZS1oZWlnaHQ6IDQwcHg7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgd2lkdGg6IDcwJTsgd29yZC1icmVhazoga2VlcC1hbGw7IHdoaXRlLXNwYWNlOiBub3dyYXA7IG92ZXJmbG93OiBoaWRkZW47IHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1wiPicrZS5uYW1lLnJlcGxhY2UoL1tcXHUwMEEwLVxcdTk5OTk8PlxcJl0vZywoZnVuY3Rpb24oZSl7cmV0dXJuXCImI1wiK2UuY2hhckNvZGVBdCgwKStcIjtcIn0pKStcIjwvc3Bhbj5cIix0Lm9uY2xpY2s9KCk9Pntkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGgpLGkoe3NvdXJjZUlkOmUuaWQsYXVkaW86bH0pfSxhLmFwcGVuZENoaWxkKHQpfX0pKX0pKX0oaSx0KTtyZXR1cm4gYXdhaXQgdGsobixlLHIpfWFzeW5jIGZ1bmN0aW9uIG5rKGUpe2xldCB0PVtcIndpbmRvd1wiLFwic2NyZWVuXCJdO1wiYXBwbGljYXRpb25cIiE9PWUmJlwid2luZG93XCIhPT1lfHwodD1bXCJ3aW5kb3dcIl0pLFwic2NyZWVuXCI9PT1lJiYodD1bXCJzY3JlZW5cIl0pO2NvbnN0IGk9RnkoKTtpZighaSl0aHJvdyBjb25zb2xlLmVycm9yKFwiZmFpbGVkIHRvIGZldGNoIGVsZWN0cm9uLCBwbGVhc2UgbW91bnQgaXQgdG8gd2luZG93XCIpLG5ldyBDeShSeS5FTEVDVFJPTl9JU19OVUxMKTtsZXQgbj1udWxsO3RyeXt2YXIgcjtuPShudWxsPT09KHI9aS5kZXNrdG9wQ2FwdHVyZXIpfHx2b2lkIDA9PT1yP3ZvaWQgMDpyLmdldFNvdXJjZXMoe3R5cGVzOnR9KSl8fGkuaXBjUmVuZGVyZXIuaW52b2tlKFwiREVTS1RPUF9DQVBUVVJFUl9HRVRfU09VUkNFU1wiLHt0eXBlczp0fSl9Y2F0Y2goZSl7bj1udWxsfW4mJm4udGhlbnx8KG49bmV3IEdoKCgoZSxuKT0+e2kuZGVza3RvcENhcHR1cmVyLmdldFNvdXJjZXMoe3R5cGVzOnR9LCgodCxpKT0+e3Q/bih0KTplKGkpfSkpfSkpKTt0cnl7cmV0dXJuIGF3YWl0IG59Y2F0Y2goZSl7dGhyb3cgbmV3IEN5KFJ5LkVMRUNUUk9OX0RFU0tUT1BfQ0FQVFVSRVJfR0VUX1NPVVJDRVNfRVJST1IsZS50b1N0cmluZygpKX19Y29uc3Qgcms9bmV3IE5BKFwic2FmYXJpXCIpO2xldCBvaz0hMSxzaz0hMTthc3luYyBmdW5jdGlvbiBhayhlLHQpe2xldCBpPTAsbj1udWxsO2Zvcig7aTwyOyl0cnl7bj1hd2FpdCBjayhlLHQsaT4wKTticmVha31jYXRjaChlKXtpZihlIGluc3RhbmNlb2YgQ3kpdGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHQsXCJdIFwiKS5jb25jYXQoZS50b1N0cmluZygpKSksZTtjb25zdCBuPWRrKGUubmFtZXx8ZS5jb2RlfHxlLGUubWVzc2FnZSk7aWYobi5jb2RlPT09UnkuTUVESUFfT1BUSU9OX0lOVkFMSUQpe2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0LFwiXSBkZXRlY3QgbWVkaWEgb3B0aW9uIGludmFsaWQsIHJldHJ5XCIpKSxpKz0xLGF3YWl0IG1BKDUwMCk7Y29udGludWV9dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHQsXCJdIFwiKS5jb25jYXQobi50b1N0cmluZygpKSksbn1pZighbil0aHJvdyBuZXcgQ3koUnkuVU5FWFBFQ1RFRF9FUlJPUixcImNhbiBub3QgZmluZCBzdHJlYW0gYWZ0ZXIgZ2V0VXNlck1lZGlhXCIpO3JldHVybiBufWFzeW5jIGZ1bmN0aW9uIGNrKGUsdCxpKXtpZighbmF2aWdhdG9yLm1lZGlhRGV2aWNlc3x8IW5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKXRocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwiY2FuIG5vdCBmaW5kIGdldFVzZXJNZWRpYVwiKTtpJiYoZS52aWRlbyYmKGRlbGV0ZSBlLnZpZGVvLndpZHRoLGRlbGV0ZSBlLnZpZGVvLmhlaWdodCksZS5zY3JlZW4mJihkZWxldGUgZS5zY3JlZW4ud2lkdGgsZGVsZXRlIGUuc2NyZWVuLmhlaWdodCkpO2NvbnN0IG49WlAoKSxyPW5ldyBNZWRpYVN0cmVhbTtpZihlLmF1ZGlvU291cmNlJiZyLmFkZFRyYWNrKGUuYXVkaW9Tb3VyY2UpLGUudmlkZW9Tb3VyY2UmJnIuYWRkVHJhY2soZS52aWRlb1NvdXJjZSksIWUuYXVkaW8mJiFlLnZpZGVvJiYhZS5zY3JlZW4pcmV0dXJuIGZiLmRlYnVnKFwiVXNpbmcgVmlkZW8gU291cmNlLyBBdWRpbyBTb3VyY2VcIikscjtpZihlLnNjcmVlbilpZihGeSgpKWUuc2NyZWVuLnNvdXJjZUlkP2xrKHIsYXdhaXQgdGsoZS5zY3JlZW4uc291cmNlSWQsZS5zY3JlZW4sZS5zY3JlZW5BdWRpbykpOmxrKHIsYXdhaXQgaWsoZS5zY3JlZW4sZS5zY3JlZW5BdWRpbykpO2Vsc2UgaWYoSnYoKSYmZS5zY3JlZW4uZXh0ZW5zaW9uSWQmJmUuc2NyZWVuLm1hbmRhdG9yeSl7aWYoIW4uZ2V0U3RyZWFtRnJvbUV4dGVuc2lvbil0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcIlRoaXMgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHNjcmVlbiBzaGFyaW5nXCIpO2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0LCddIFNjcmVlbiBhY2Nlc3Mgb24gY2hyb21lIHN0YWJsZSwgbG9va2luZyBmb3IgZXh0ZW5zaW9uXCInKSk7Y29uc3QgaT1hd2FpdChzPWUuc2NyZWVuLmV4dGVuc2lvbklkLGE9dCxuZXcgR2goKChlLHQpPT57dHJ5e2Nocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHMse2dldFN0cmVhbTohMH0sKGk9PntpZighaXx8IWkuc3RyZWFtSWQpcmV0dXJuIGZiLmVycm9yKFwiW1wiLmNvbmNhdChhLFwiXSBObyByZXNwb25zZSBmcm9tIENocm9tZSBQbHVnaW4uIFBsdWdpbiBub3QgaW5zdGFsbGVkIHByb3Blcmx5XCIpLGkpLHZvaWQgdChuZXcgQ3koUnkuQ0hST01FX1BMVUdJTl9OT19SRVNQT05TRSxcIk5vIHJlc3BvbnNlIGZyb20gQ2hyb21lIFBsdWdpbi4gUGx1Z2luIG5vdCBpbnN0YWxsZWQgcHJvcGVybHlcIikpO2UoaS5zdHJlYW1JZCl9KSl9Y2F0Y2goZSl7ZmIuZXJyb3IoXCJbXCIuY29uY2F0KGEsXCJdIEFnb3JhUlRDIHNjcmVlbnNoYXJpbmcgcGx1Z2luIGlzIG5vdCBhY2Nlc3NpYmxlKFwiKS5jb25jYXQocyxcIilcIiksZS50b1N0cmluZygpKSx0KG5ldyBDeShSeS5DSFJPTUVfUExVR0lOX05PVF9JTlNUQUxMKSl9fSkpKTtlLnNjcmVlbi5tYW5kYXRvcnkuY2hyb21lTWVkaWFTb3VyY2VJZD1pLGxrKHIsYXdhaXQgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoe3ZpZGVvOnttYW5kYXRvcnk6ZS5zY3JlZW4ubWFuZGF0b3J5fX0pKX1lbHNlIGlmKG4uZ2V0RGlzcGxheU1lZGlhKXt2YXIgbztlLnNjcmVlbi5tZWRpYVNvdXJjZSYmRUwoZS5zY3JlZW4ubWVkaWFTb3VyY2UpO2NvbnN0IGk9e3dpZHRoOmUuc2NyZWVuLndpZHRoLGhlaWdodDplLnNjcmVlbi5oZWlnaHQsZnJhbWVSYXRlOmUuc2NyZWVuLmZyYW1lUmF0ZSxkaXNwbGF5U3VyZmFjZTpudWxsIT09KG89ZS5zY3JlZW4uZGlzcGxheVN1cmZhY2UpJiZ2b2lkIDAhPT1vP286XCJzY3JlZW5cIj09PWUuc2NyZWVuLm1lZGlhU291cmNlP1wibW9uaXRvclwiOmUuc2NyZWVuLm1lZGlhU291cmNlfSx7c2VsZkJyb3dzZXJTdXJmYWNlOm4sc3VyZmFjZVN3aXRjaGluZzpzLHN5c3RlbUF1ZGlvOmF9PWUuc2NyZWVuLGM9e3NlbGZCcm93c2VyU3VyZmFjZTpuLHN1cmZhY2VTd2l0Y2hpbmc6cyxzeXN0ZW1BdWRpbzphfTshbiYmZGVsZXRlIGMuc2VsZkJyb3dzZXJTdXJmYWNlLCFzJiZkZWxldGUgYy5zdXJmYWNlU3dpdGNoaW5nLCFhJiZkZWxldGUgYy5zeXN0ZW1BdWRpbyxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodCxcIl0gZ2V0RGlzcGxheU1lZGlhOlwiKSxKU09OLnN0cmluZ2lmeSh7dmlkZW86aSxhdWRpbzohIWUuc2NyZWVuQXVkaW8sY29udHJvbHM6Y30pKSxsayhyLGF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0RGlzcGxheU1lZGlhKEdMKHt2aWRlbzppLGF1ZGlvOiEhZS5zY3JlZW5BdWRpb30sYykpKX1lbHNle2lmKCFadigpKXRocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0LFwiXSBUaGlzIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBzY3JlZW5TaGFyaW5nXCIpKSxuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcIlRoaXMgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHNjcmVlbiBzaGFyaW5nXCIpO3tlLnNjcmVlbi5tZWRpYVNvdXJjZSYmRUwoZS5zY3JlZW4ubWVkaWFTb3VyY2UpO2NvbnN0IGk9e3ZpZGVvOnttZWRpYVNvdXJjZTplLnNjcmVlbi5tZWRpYVNvdXJjZSx3aWR0aDplLnNjcmVlbi53aWR0aCxoZWlnaHQ6ZS5zY3JlZW4uaGVpZ2h0LGZyYW1lUmF0ZTplLnNjcmVlbi5mcmFtZVJhdGV9fTtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodCxcIl0gZ2V0VXNlck1lZGlhOiBcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KGkpKSksbGsocixhd2FpdCBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYShpKSl9fXZhciBzLGE7aWYoIWUudmlkZW8mJiFlLmF1ZGlvKXJldHVybiByO2xldCBjPXt2aWRlbzplLnZpZGVvLGF1ZGlvOmUuYXVkaW99LGQ9WEEoXCJNRURJQV9ERVZJQ0VfQ09OU1RSQUlOVFNcIik7aWYoZCl0cnl7XCJzdHJpbmdcIj09dHlwZW9mIGQmJihkPUpTT04ucGFyc2UoZCkpLGM9dkEoYyxkKX1jYXRjaChlKXt9ZmIuZGVidWcoXCJbXCIuY29uY2F0KHQsXCJdIEdldFVzZXJNZWRpYVwiKSxKU09OLnN0cmluZ2lmeShjKSksSHYoKTtsZXQgbCx1PW51bGw7KFh2KCl8fCR2KCl8fHp2KCkpJiYodT1hd2FpdCByay5sb2NrKCkpO3RyeXtsPWF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKGMpfWNhdGNoKGUpe3Rocm93IHUmJnUoKSxlfXJldHVybiBjLmF1ZGlvJiYob2s9ITApLGMudmlkZW8mJihzaz0hMCksbGsocixsKSx1JiZ1KCkscn1mdW5jdGlvbiBkayhlLHQpe3N3aXRjaChlKXtjYXNlXCJTdGFydGluZyB2aWRlbyBmYWlsZWRcIjpjYXNlXCJPdmVyY29uc3RyYWluZWRFcnJvclwiOmNhc2VcIlRyYWNrU3RhcnRFcnJvclwiOnJldHVybiBuZXcgQ3koUnkuTUVESUFfT1BUSU9OX0lOVkFMSUQsXCJcIi5jb25jYXQoZSxcIjogXCIpLmNvbmNhdCh0KSk7Y2FzZVwiTm90Rm91bmRFcnJvclwiOmNhc2VcIkRldmljZXNOb3RGb3VuZEVycm9yXCI6cmV0dXJuIG5ldyBDeShSeS5ERVZJQ0VfTk9UX0ZPVU5ELFwiXCIuY29uY2F0KGUsXCI6IFwiKS5jb25jYXQodCkpO2Nhc2VcIk5vdFN1cHBvcnRlZEVycm9yXCI6cmV0dXJuIG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwiXCIuY29uY2F0KGUsXCI6IFwiKS5jb25jYXQodCkpO2Nhc2VcIk5vdFJlYWRhYmxlRXJyb3JcIjpyZXR1cm4gbmV3IEN5KFJ5Lk5PVF9SRUFEQUJMRSxcIlwiLmNvbmNhdChlLFwiOiBcIikuY29uY2F0KHQpKTtjYXNlXCJJbnZhbGlkU3RhdGVFcnJvclwiOmNhc2VcIk5vdEFsbG93ZWRFcnJvclwiOmNhc2VcIlBFUk1JU1NJT05fREVOSUVEXCI6Y2FzZVwiUGVybWlzc2lvbkRlbmllZEVycm9yXCI6cmV0dXJuIG5ldyBDeShSeS5QRVJNSVNTSU9OX0RFTklFRCxcIlwiLmNvbmNhdChlLFwiOiBcIikuY29uY2F0KHQpKTtjYXNlXCJDb25zdHJhaW50Tm90U2F0aXNmaWVkRXJyb3JcIjpyZXR1cm4gbmV3IEN5KFJ5LkNPTlNUUkFJTlRfTk9UX1NBVElTRklFRCxcIlwiLmNvbmNhdChlLFwiOiBcIikuY29uY2F0KHQpKTtkZWZhdWx0OnJldHVybiBmYi5lcnJvcihcImdldFVzZXJNZWRpYSB1bmV4cGVjdGVkIGVycm9yXCIsZSksbmV3IEN5KFJ5LlVORVhQRUNURURfRVJST1IsXCJcIi5jb25jYXQoZSxcIjogXCIpLmNvbmNhdCh0KSl9fWZ1bmN0aW9uIGxrKGUsdCl7Y29uc3QgaT1lLmdldFZpZGVvVHJhY2tzKClbMF0sbj1lLmdldEF1ZGlvVHJhY2tzKClbMF0scj10LmdldFZpZGVvVHJhY2tzKClbMF0sbz10LmdldEF1ZGlvVHJhY2tzKClbMF07byYmKG4mJmUucmVtb3ZlVHJhY2sobiksZS5hZGRUcmFjayhvKSksciYmKGkmJmUucmVtb3ZlVHJhY2soaSksZS5hZGRUcmFjayhyKSl9Y29uc3QgdWs9bmV3IGNsYXNzIGV4dGVuZHMgeHl7Z2V0IHN0YXRlKCl7cmV0dXJuIHRoaXMuX3N0YXRlfXNldCBzdGF0ZShlKXtlIT09dGhpcy5fc3RhdGUmJih0aGlzLmVtaXQoa0wuU1RBVEVfQ0hBTkdFLGUpLHRoaXMuX3N0YXRlPWUpfWNvbnN0cnVjdG9yKCl7c3VwZXIoKSxCTCh0aGlzLFwiX3N0YXRlXCIsTEwuSURMRSksQkwodGhpcyxcImlzQWNjZXNzTWljcm9waG9uZVBlcm1pc3Npb25cIiwhMSksQkwodGhpcyxcImlzQWNjZXNzQ2FtZXJhUGVybWlzc2lvblwiLCExKSxCTCh0aGlzLFwibGFzdEFjY2Vzc01pY3JvcGhvbmVQZXJtaXNzaW9uXCIsITEpLEJMKHRoaXMsXCJsYXN0QWNjZXNzQ2FtZXJhUGVybWlzc2lvblwiLCExKSxCTCh0aGlzLFwiY2hlY2tkZXZpY2VNYXRjaGVkXCIsITEpLEJMKHRoaXMsXCJkZXZpY2VJbmZvTWFwXCIsbmV3IE1hcCksdGhpcy5pbml0KCkudGhlbigoKCk9PntuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmFkZEV2ZW50TGlzdGVuZXImJm5hdmlnYXRvci5tZWRpYURldmljZXMuYWRkRXZlbnRMaXN0ZW5lcihcImRldmljZWNoYW5nZVwiLHRoaXMudXBkYXRlRGV2aWNlc0luZm8uYmluZCh0aGlzKSksd2luZG93LnNldEludGVydmFsKCgoKT0+eyhYQShcIkVOVU1FUkFURV9ERVZJQ0VTX0lOVEVSVkFMXCIpfHwoZnkoKXx8WXYoKT09PUZ2LkhBUk1PTllfT1MpJiZFeSgpKSYmdGhpcy51cGRhdGVEZXZpY2VzSW5mbygpfSksWEEoXCJFTlVNRVJBVEVfREVWSUNFU19JTlRFUlZBTF9USU1FXCIpKX0pKS5jYXRjaCgoZT0+ZmIuZXJyb3IoZS50b1N0cmluZygpKSkpfWFzeW5jIGVudW1lcmF0ZURldmljZXMoZSx0KXtsZXQgaT1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXSYmYXJndW1lbnRzWzJdO2lmKCFuYXZpZ2F0b3IubWVkaWFEZXZpY2VzfHwhbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5lbnVtZXJhdGVEZXZpY2VzKXJldHVybiBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcImVudW1lcmF0ZURldmljZXMoKSBub3Qgc3VwcG9ydGVkLlwiKS50aHJvdygpO2NvbnN0IG49YXdhaXQgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5lbnVtZXJhdGVEZXZpY2VzKCkscj10aGlzLmNoZWNrTWVkaWFEZXZpY2VJbmZvSXNPayhuKTtsZXQgbz0hdGhpcy5pc0FjY2Vzc01pY3JvcGhvbmVQZXJtaXNzaW9uJiZlLHM9IXRoaXMuaXNBY2Nlc3NDYW1lcmFQZXJtaXNzaW9uJiZ0O3IuYXVkaW8mJihvPSExKSxyLnZpZGVvJiYocz0hMSk7bGV0IGE9bnVsbCxjPW51bGwsZD1udWxsO2lmKCFpJiYob3x8cykpe2lmKHJrLmlzTG9ja2VkJiYoZmIuZGVidWcoXCJbZGV2aWNlIG1hbmFnZXJdIHdhaXQgR1VNIGxvY2tcIiksKGF3YWl0IHJrLmxvY2soKSkoKSxmYi5kZWJ1ZyhcIltkZXZpY2UgbWFuYWdlcl0gR1VNIHVubG9ja1wiKSksb2smJihvPSExLHRoaXMuaXNBY2Nlc3NNaWNyb3Bob25lUGVybWlzc2lvbj0hMCksc2smJihzPSExLHRoaXMuaXNBY2Nlc3NDYW1lcmFQZXJtaXNzaW9uPSEwKSxmYi5kZWJ1ZyhcIltkZXZpY2UgbWFuYWdlcl0gY2hlY2sgbWVkaWEgZGV2aWNlIHBlcm1pc3Npb25zXCIsZSx0LG8scyksbyYmcyl7dHJ5e2Q9YXdhaXQgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoe2F1ZGlvOiEwLHZpZGVvOiEwfSl9Y2F0Y2goZSl7Y29uc3QgdD1kayhlLm5hbWV8fGUuY29kZXx8ZSxlLm1lc3NhZ2UpO2lmKHQuY29kZT09PVJ5LlBFUk1JU1NJT05fREVOSUVEKXRocm93IHQ7ZmIud2FybmluZyhcImdldFVzZXJNZWRpYSBmYWlsZWQgaW4gZ2V0RGV2aWNlc1wiLHQpfXRoaXMuaXNBY2Nlc3NDYW1lcmFQZXJtaXNzaW9uPSEwLHRoaXMuaXNBY2Nlc3NNaWNyb3Bob25lUGVybWlzc2lvbj0hMH1lbHNlIGlmKG8pe3RyeXthPWF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHthdWRpbzplfSl9Y2F0Y2goZSl7Y29uc3QgdD1kayhlLm5hbWV8fGUuY29kZXx8ZSxlLm1lc3NhZ2UpO2lmKHQuY29kZT09PVJ5LlBFUk1JU1NJT05fREVOSUVEKXRocm93IHQ7ZmIud2FybmluZyhcImdldFVzZXJNZWRpYSBmYWlsZWQgaW4gZ2V0RGV2aWNlc1wiLHQpfXRoaXMuaXNBY2Nlc3NNaWNyb3Bob25lUGVybWlzc2lvbj0hMH1lbHNlIGlmKHMpe3RyeXtjPWF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHt2aWRlbzp0fSl9Y2F0Y2goZSl7Y29uc3QgdD1kayhlLm5hbWV8fGUuY29kZXx8ZSxlLm1lc3NhZ2UpO2lmKHQuY29kZT09PVJ5LlBFUk1JU1NJT05fREVOSUVEKXRocm93IHQ7ZmIud2FybmluZyhcImdldFVzZXJNZWRpYSBmYWlsZWQgaW4gZ2V0RGV2aWNlc1wiLHQpfXRoaXMuaXNBY2Nlc3NDYW1lcmFQZXJtaXNzaW9uPSEwfWZiLmRlYnVnKFwiW2RldmljZSBtYW5hZ2VyXSBtaWMgcGVybWlzc2lvblwiLGUsXCJjYW0gcGVybWlzc2lvblwiLHQpfXRyeXtjb25zdCBlPWF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZW51bWVyYXRlRGV2aWNlcygpO3JldHVybiBhJiZhLmdldFRyYWNrcygpLmZvckVhY2goKGU9PmUuc3RvcCgpKSksYyYmYy5nZXRUcmFja3MoKS5mb3JFYWNoKChlPT5lLnN0b3AoKSkpLGQmJmQuZ2V0VHJhY2tzKCkuZm9yRWFjaCgoZT0+ZS5zdG9wKCkpKSxhPW51bGwsYz1udWxsLGQ9bnVsbCxlfWNhdGNoKGUpe3JldHVybiBhJiZhLmdldFRyYWNrcygpLmZvckVhY2goKGU9PmUuc3RvcCgpKSksYyYmYy5nZXRUcmFja3MoKS5mb3JFYWNoKChlPT5lLnN0b3AoKSkpLGQmJmQuZ2V0VHJhY2tzKCkuZm9yRWFjaCgoZT0+ZS5zdG9wKCkpKSxhPW51bGwsYz1udWxsLGQ9bnVsbCxuZXcgQ3koUnkuRU5VTUVSQVRFX0RFVklDRVNfRkFJTEVELGUudG9TdHJpbmcoKSkudGhyb3coKX19YXN5bmMgZ2V0UmVjb3JkaW5nRGV2aWNlcygpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdJiZhcmd1bWVudHNbMF07cmV0dXJuKGF3YWl0IHRoaXMuZW51bWVyYXRlRGV2aWNlcyghMCwhMSxlKSkuZmlsdGVyKChlPT5cImF1ZGlvaW5wdXRcIj09PWUua2luZCkpfWFzeW5jIGdldENhbWVyYXNEZXZpY2VzKCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0mJmFyZ3VtZW50c1swXTtyZXR1cm4oYXdhaXQgdGhpcy5lbnVtZXJhdGVEZXZpY2VzKCExLCEwLGUpKS5maWx0ZXIoKGU9PlwidmlkZW9pbnB1dFwiPT09ZS5raW5kKSl9YXN5bmMgZ2V0U3BlYWtlcnMoKXtsZXQgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXSYmYXJndW1lbnRzWzBdO3JldHVybihhd2FpdCB0aGlzLmVudW1lcmF0ZURldmljZXMoITAsITEsZSkpLmZpbHRlcigoZT0+XCJhdWRpb291dHB1dFwiPT09ZS5raW5kKSl9c2VhcmNoRGV2aWNlSWRCeU5hbWUoZSl7bGV0IHQ9bnVsbDtyZXR1cm4gdGhpcy5kZXZpY2VJbmZvTWFwLmZvckVhY2goKGk9PntpLmRldmljZS5sYWJlbD09PWUmJih0PWkuZGV2aWNlLmRldmljZUlkKX0pKSx0fWFzeW5jIGdldERldmljZUJ5SWQoZSl7Y29uc3QgdD0oYXdhaXQgdGhpcy5lbnVtZXJhdGVEZXZpY2VzKCEwLCEwLCEwKSkuZmluZCgodD0+dC5kZXZpY2VJZD09PWUpKTtpZighdCl0aHJvdyBuZXcgQ3koUnkuREVWSUNFX05PVF9GT1VORCxcImRldmljZUlkOiBcIi5jb25jYXQoZSkpO3JldHVybiB0fWFzeW5jIGluaXQoKXt0aGlzLnN0YXRlPUxMLklOSVRJTkc7dHJ5e2F3YWl0IHRoaXMudXBkYXRlRGV2aWNlc0luZm8oKSx0aGlzLnN0YXRlPUxMLklOSVRFTkR9Y2F0Y2goZSl7dGhyb3cgZmIud2FybmluZyhcIkRldmljZSBEZXRlY3Rpb24gZnVuY3Rpb25hbGl0eSBjYW5ub3Qgc3RhcnQgcHJvcGVybHkuXCIsZS50b1N0cmluZygpKSx0aGlzLnN0YXRlPUxMLklETEUsKFwiYm9vbGVhblwiPT10eXBlb2YgaXNTZWN1cmVDb250ZXh0P2lzU2VjdXJlQ29udGV4dDpcImh0dHBzOlwiPT09bG9jYXRpb24ucHJvdG9jb2x8fFwiZmlsZTpcIj09PWxvY2F0aW9uLnByb3RvY29sfHxcImxvY2FsaG9zdFwiPT09bG9jYXRpb24uaG9zdG5hbWV8fFwiMTI3LjAuMC4xXCI9PT1sb2NhdGlvbi5ob3N0bmFtZXx8XCI6OjFcIj09PWxvY2F0aW9uLmhvc3RuYW1lKXx8bmV3IEN5KFJ5LldFQl9TRUNVUklUWV9SRVNUUklDVCxcIllvdXIgY29udGV4dCBpcyBsaW1pdGVkIGJ5IHdlYiBzZWN1cml0eSwgcGxlYXNlIHRyeSB1c2luZyBodHRwcyBwcm90b2NvbCBvciBsb2NhbGhvc3QuXCIpLnRocm93KCksZX19YXN5bmMgdXBkYXRlRGV2aWNlc0luZm8oKXtjb25zdCBlPWF3YWl0IHRoaXMuZW51bWVyYXRlRGV2aWNlcyghMCwhMCwhMCksdD1EYXRlLm5vdygpLGk9W107aWYoZVswXSYmZVswXS5sYWJlbCYmITE9PT10aGlzLmNoZWNrZGV2aWNlTWF0Y2hlZCl7dGhpcy5jaGVja2RldmljZU1hdGNoZWQ9ITA7Y29uc3QgdD1lLmZpbmQoKGU9PlwiYXVkaW9pbnB1dFwiPT09ZS5raW5kJiZcImRlZmF1bHRcIj09PWUuZGV2aWNlSWQpKSxpPWUuZmluZCgoZT0+XCJhdWRpb291dHB1dFwiPT09ZS5raW5kJiZcImRlZmF1bHRcIj09PWUuZGV2aWNlSWQpKTt0JiZpP2kuZ3JvdXBJZD09PXQuZ3JvdXBJZD9mYi5kZWJ1ZyhcIltkZXZpY2UtY2hlY2tdIGRlZmF1bHQgaW5wdXQgXCIuY29uY2F0KHQubGFiZWwsXCIgYW5kIG91dHB1dCBcIikuY29uY2F0KGkubGFiZWwsXCIgaXMgdGhlIHNhbWUgZ3JvdXBcIikpOmZiLndhcm5pbmcoXCJbZGV2aWNlLWNoZWNrXSBkZWZhdWx0IGlucHV0IFwiLmNvbmNhdCh0LmxhYmVsLFwiIGFuZCBvdXRwdXQgXCIpLmNvbmNhdChpLmxhYmVsLFwiIGlzIG5vdCB0aGUgc2FtZSBncm91cFwiKSk6ZmIuZGVidWcoXCJbZGV2aWNlLWNoZWNrXSBkZWZhdWx0IGlucHV0IG9yIG91dHB1dCBub3QgZm91bmRcIil9Y29uc3Qgbj10aGlzLmNoZWNrTWVkaWFEZXZpY2VJbmZvSXNPayhlKTtpZihlLmZvckVhY2goKGU9PntpZighZS5kZXZpY2VJZClyZXR1cm47Y29uc3Qgbj10aGlzLmRldmljZUluZm9NYXAuZ2V0KFwiXCIuY29uY2F0KGUua2luZCxcIl9cIikuY29uY2F0KGUuZGV2aWNlSWQpKTtpZihcIkFDVElWRVwiIT09KG4/bi5zdGF0ZTpcIklOQUNUSVZFXCIpKXtjb25zdCBuPXtpbml0QXQ6dCx1cGRhdGVBdDp0LGRldmljZTplLHN0YXRlOlwiQUNUSVZFXCJ9O3RoaXMuZGV2aWNlSW5mb01hcC5zZXQoXCJcIi5jb25jYXQoZS5raW5kLFwiX1wiKS5jb25jYXQoZS5kZXZpY2VJZCksbiksaS5wdXNoKG4pfW4mJihuLnVwZGF0ZUF0PXQpfSkpLHRoaXMuZGV2aWNlSW5mb01hcC5mb3JFYWNoKCgoZSxuKT0+e1wiQUNUSVZFXCI9PT1lLnN0YXRlJiZlLnVwZGF0ZUF0IT09dCYmKGUuc3RhdGU9XCJJTkFDVElWRVwiLGkucHVzaChlKSl9KSksdGhpcy5zdGF0ZSE9PUxMLklOSVRFTkQpcmV0dXJuIG4uYXVkaW8mJih0aGlzLmxhc3RBY2Nlc3NNaWNyb3Bob25lUGVybWlzc2lvbj0hMCx0aGlzLmlzQWNjZXNzTWljcm9waG9uZVBlcm1pc3Npb249ITApLHZvaWQobi52aWRlbyYmKHRoaXMubGFzdEFjY2Vzc0NhbWVyYVBlcm1pc3Npb249ITAsdGhpcy5pc0FjY2Vzc0NhbWVyYVBlcm1pc3Npb249ITApKTtpLmZvckVhY2goKGU9Pntzd2l0Y2goZS5kZXZpY2Uua2luZCl7Y2FzZVwiYXVkaW9pbnB1dFwiOnRoaXMubGFzdEFjY2Vzc01pY3JvcGhvbmVQZXJtaXNzaW9uJiZ0aGlzLmlzQWNjZXNzTWljcm9waG9uZVBlcm1pc3Npb24mJnRoaXMuZW1pdChrTC5SRUNPUkRJTkdfREVWSUNFX0NIQU5HRUQsZSk7YnJlYWs7Y2FzZVwidmlkZW9pbnB1dFwiOnRoaXMubGFzdEFjY2Vzc0NhbWVyYVBlcm1pc3Npb24mJnRoaXMuaXNBY2Nlc3NDYW1lcmFQZXJtaXNzaW9uJiZ0aGlzLmVtaXQoa0wuQ0FNRVJBX0RFVklDRV9DSEFOR0VELGUpO2JyZWFrO2Nhc2VcImF1ZGlvb3V0cHV0XCI6dGhpcy5sYXN0QWNjZXNzTWljcm9waG9uZVBlcm1pc3Npb24mJnRoaXMuaXNBY2Nlc3NNaWNyb3Bob25lUGVybWlzc2lvbiYmdGhpcy5lbWl0KGtMLlBMQVlPVVRfREVWSUNFX0NIQU5HRUQsZSl9fSkpLG4uYXVkaW8mJih0aGlzLmxhc3RBY2Nlc3NNaWNyb3Bob25lUGVybWlzc2lvbj0hMCx0aGlzLmlzQWNjZXNzTWljcm9waG9uZVBlcm1pc3Npb249ITApLG4udmlkZW8mJih0aGlzLmxhc3RBY2Nlc3NDYW1lcmFQZXJtaXNzaW9uPSEwLHRoaXMuaXNBY2Nlc3NDYW1lcmFQZXJtaXNzaW9uPSEwKX1jaGVja01lZGlhRGV2aWNlSW5mb0lzT2soZSl7Y29uc3QgdD1lLmZpbHRlcigoZT0+XCJhdWRpb2lucHV0XCI9PT1lLmtpbmQpKSxpPWUuZmlsdGVyKChlPT5cInZpZGVvaW5wdXRcIj09PWUua2luZCkpLG49e2F1ZGlvOiExLHZpZGVvOiExfTtmb3IoY29uc3QgZSBvZiB0KWlmKGUubGFiZWwmJmUuZGV2aWNlSWQpe24uYXVkaW89ITA7YnJlYWt9Zm9yKGNvbnN0IGUgb2YgaSlpZihlLmxhYmVsJiZlLmRldmljZUlkKXtuLnZpZGVvPSEwO2JyZWFrfXJldHVybiBufX07bGV0IGhrPSExO2NvbnN0IHBrPW5ldyBjbGFzcyBleHRlbmRzIHh5e2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSxCTCh0aGlzLFwib25BdXRvcGxheUZhaWxlZFwiLHZvaWQgMCksQkwodGhpcyxcIm9uQXVkaW9BdXRvcGxheUZhaWxlZFwiLHZvaWQgMCl9fTtmdW5jdGlvbiBfaygpe2lmKEh2KCksIWhrKXtjb25zdCBlPXQ9Pnt0LnByZXZlbnREZWZhdWx0KCksaGs9ITEsbXkoKT9kb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGUsITApOihkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsZSwhMCksZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsZSwhMCkpfTtoaz0hMCxteSgpP2RvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZSwhMCk6KGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIixlLCEwKSxkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIixlLCEwKSksZmIuaW5mbyhcImRldGVjdCBtZWRpYSBhdXRvcGxheSBmYWlsZWQsIGRvY3VtZW50OiBodHRwczovL2RvY3MuYWdvcmEuaW8vY24vVm9pY2UvYXV0b3BsYXlfcG9saWN5X3dlYl9uZz9wbGF0Zm9ybT1XZWJcIikscGsub25BdXRvcGxheUZhaWxlZD9way5vbkF1dG9wbGF5RmFpbGVkKCk6cGsub25BdWRpb0F1dG9wbGF5RmFpbGVkP2ZiLndhcm5pbmcoXCJBZ29yYVJUQy5vbkF1ZGlvQXV0b3BsYXlGYWlsZWQgaGFzIGJlZW4gZGVwcmVjYXRlZCBpbiBmYXZvciBvZiBBZ29yYVJUQy5vbkF1dG9wbGF5RmFpbGVkLlxcblxcbiAgUGxlYXNlIHJlZmVyIHRvIHRoZSBBZ29yYSBkb2N1bWVudCB0byBtaWdyYXRlIHRoZSBuZXdlciBBUEksIGh0dHBzOi8vZG9jcy5hZ29yYS5pby9lbi9Wb2ljZS9hdXRvcGxheV9wb2xpY3lfd2ViX25nP3BsYXRmb3JtPVdlYiAuXCIpOmZiLndhcm5pbmcoXCJXZSBoYXZlIGRldGVjdGVkIGEgbWVkaWEgYXV0b3BsYXkgZmFpbGVkIGV2ZW50LCBhbmQgZm91bmQgb3V0IHRoYXQgeW91IGhhdmVuJ3QgaW1wbGVtZW50ZWQgQWdvcmFSVEMub25BdXRvcGxheUZhaWxlZCBjYWxsYmFjayB5ZXQuXFxuXFxuICBJdCB3aWxsIGNhdXNlIGF1ZGlvL3ZpZGVvIGVsZW1lbnQgbm90IHBsYXlpbmcgYXV0b21hdGljYWxseSBvbiBzb21lIGJyb3dzZXJzIHdpdGhvdXQgdXNlciBpbnRlcmFjdGlvbiwgcG9zc2libHkgaHVydGluZyB1c2VyIGV4cGVyaWVuY2VzLlxcblxcbiAgUGxlYXNlIHJlZmVyIHRvIHRoZSBBZ29yYSBkb2N1bWVudCB0byBwcm9wZXJseSBoYW5kbGUgYXV0b3BsYXkgZmFpbGVkIGV2ZW50LCBodHRwczovL2RvY3MuYWdvcmEuaW8vZW4vVm9pY2UvYXV0b3BsYXlfcG9saWN5X3dlYl9uZz9wbGF0Zm9ybT1XZWIgLlwiKSxway5lbWl0KFwiYXV0b3BsYXktZmFpbGVkXCIpfX1mdW5jdGlvbiBFayhlLHQsaSxuKXtpZighZSlyZXR1cm47Y29uc3Qgcj12Yi5nZXRCYXNlSW5mb0J5U2Vzc2lvbklkKGUpO2lmKCFyKXJldHVybjtjb25zdCBvPXIuaW5mbyxzPURhdGUubm93KCksYT1HTChHTCh7fSxvKSx7fSx7dmlkOnZvaWQgMD09PW8udmlkPzA6TnVtYmVyKG8udmlkKSxsdHM6cyxlbGFwc2U6cy1yLnN0YXJ0VGltZSxjYlJlZ2lzdGVyZWQ6cGsub25BdXRvcGxheUZhaWxlZHx8cGsub25BdWRpb0F1dG9wbGF5RmFpbGVkPzE6LTEsZXJyb3JNc2c6aSxtZWRpYVR5cGU6dCx0cmFja0lkOm4sZXh0ZW5kOnZvaWQgMH0pO3ZiLnNlbmQoe3R5cGU6UmIuQVVUT1BMQVlfRkFJTEVELGRhdGE6YX0sITApfWNvbnN0IGZrPVtcInBsYXlcIixcInBsYXlpbmdcIixcImxvYWRlZGRhdGFcIixcImNhbnBsYXlcIixcInBhdXNlXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJ3YWl0aW5nXCIsXCJhYm9ydFwiLFwiZW1wdGllZFwiLFwiZW5kZWRcIixcImVycm9yXCJdLG1rPW5ldyBjbGFzc3tjb25zdHJ1Y3Rvcigpe0JMKHRoaXMsXCJvbkF1dG9wbGF5RmFpbGVkXCIsdm9pZCAwKSxCTCh0aGlzLFwiZWxlbWVudE1hcFwiLG5ldyBNYXApLEJMKHRoaXMsXCJlbGVtZW50U3RhdGVNYXBcIixuZXcgTWFwKSxCTCh0aGlzLFwiZWxlbWVudHNOZWVkVG9SZXN1bWVcIixbXSksQkwodGhpcyxcInNpbmtJZE1hcFwiLG5ldyBNYXApLEJMKHRoaXMsXCJhdXRvUmVzdW1lQWZ0ZXJJbnRlcnJ1cHRpb25cIiwoZT0+e0FycmF5LmZyb20odGhpcy5lbGVtZW50TWFwLmVudHJpZXMoKSkuZm9yRWFjaCgodD0+e2xldFtpLG5dPXQ7Y29uc3Qgcj10aGlzLmVsZW1lbnRTdGF0ZU1hcC5nZXQoaSksbz1uLnNyY09iamVjdC5nZXRBdWRpb1RyYWNrcygpWzBdLHM9byYmby5yZWFkeVN0YXRlO2lmKGZiLmRlYnVnKFwicmVzdW1lIGFmdGVyIGludGVycnVwdGVkLCBlbGU6IFwiLmNvbmNhdChyLFwiIGF1ZGlvOiBcIikuY29uY2F0KHMsXCIgXCIpLmNvbmNhdChlKSksXCJsaXZlXCI9PT1zKXtpZihlKXJldHVybiBuLnBhdXNlKCksdm9pZCBuLnBsYXkoKTtpZihcInJ1bm5pbmdcIj09PXFMLmN1clN0YXRlKXJldHVybiBjeSgpPyhuLnBhdXNlKCksdm9pZCBuLnBsYXkoKSk6dm9pZChyJiZcInBhdXNlZFwiPT09ciYmbi5wbGF5KCkpfX0pKX0pKSxCTCh0aGlzLFwiYXV0b1Jlc3VtZUFmdGVySW50ZXJydXB0aW9uT25JT1MxNV8xNlwiLCgoKT0+e0FycmF5LmZyb20odGhpcy5lbGVtZW50TWFwLmVudHJpZXMoKSkuZm9yRWFjaCgoZT0+e2xldFt0LGldPWU7Y29uc3Qgbj1pLnNyY09iamVjdC5nZXRBdWRpb1RyYWNrcygpWzBdO24mJlwibGl2ZVwiPT09bi5yZWFkeVN0YXRlJiYoZmIuZGVidWcoXCJhdXRvIHJlc3VtZSBhZnRlciBpbnRlcnJ1cHRpb24gaW5zaWRlIGF1dG9SZXN1bWVBZnRlckludGVycnVwdGlvbk9uSU9TMTVcIiksaS5wYXVzZSgpLGkucGxheSgpKX0pKX0pKSx0aGlzLmF1dG9SZXN1bWVBdWRpb0VsZW1lbnQoKSxxTC5vbih0TC5JT1NfSU5URVJSVVBUSU9OX0VORCx0aGlzLmF1dG9SZXN1bWVBZnRlckludGVycnVwdGlvbikscUwub24odEwuSU9TXzE1XzE2X0lOVEVSUlVQVElPTl9FTkQsdGhpcy5hdXRvUmVzdW1lQWZ0ZXJJbnRlcnJ1cHRpb25PbklPUzE1XzE2KSxxTC5vbih0TC5TVEFURV9DSEFOR0UsKCgpPT57JHYoKSYmXCJzdXNwZW5kZWRcIj09PXFMLnByZXZTdGF0ZSYmXCJydW5uaW5nXCI9PT1xTC5jdXJTdGF0ZSYmdGhpcy5hdXRvUmVzdW1lQWZ0ZXJJbnRlcnJ1cHRpb24oKX0pKX1hc3luYyBzZXRTaW5rSUQoZSx0KXtjb25zdCBpPXRoaXMuZWxlbWVudE1hcC5nZXQoZSk7aWYodGhpcy5zaW5rSWRNYXAuc2V0KGUsdCksaSl0cnl7YXdhaXQgaS5zZXRTaW5rSWQodCl9Y2F0Y2goZSl7dGhyb3cgbmV3IEN5KFJ5LlBFUk1JU1NJT05fREVOSUVELFwiY2FuIG5vdCBzZXQgc2luayBpZDogXCIrZS50b1N0cmluZygpKX19cGxheShlLHQsaSxuKXtpZih0aGlzLmVsZW1lbnRNYXAuaGFzKHQpKXJldHVybjtjb25zdCByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhdWRpb1wiKTtyLmF1dG9wbGF5PSEwLHIuc3JjT2JqZWN0PW5ldyBNZWRpYVN0cmVhbShbZV0pLHRoaXMuYmluZEF1ZGlvRWxlbWVudEV2ZW50cyh0LHIpLHRoaXMuZWxlbWVudE1hcC5zZXQodCxyKSx0aGlzLmVsZW1lbnRTdGF0ZU1hcC5zZXQodCxNTC5JTklUKSx0aGlzLnNldFZvbHVtZSh0LGkpO2NvbnN0IG89dGhpcy5zaW5rSWRNYXAuZ2V0KHQpO2lmKG8pdHJ5e3Iuc2V0U2lua0lkKG8pLmNhdGNoKChlPT57ZmIud2FybmluZyhcIltcIi5jb25jYXQodCxcIl0gc2V0IHNpbmsgaWQgZmFpbGVkXCIpLGUudG9TdHJpbmcoKSl9KSl9Y2F0Y2goZSl7ZmIud2FybmluZyhcIltcIi5jb25jYXQodCxcIl0gc2V0IHNpbmsgaWQgZmFpbGVkXCIpLGUudG9TdHJpbmcoKSl9Y29uc3Qgcz1yLnBsYXkoKTtzJiZzLnRoZW4mJnMuY2F0Y2goKGU9PntuJiZFayhuLFwiYXVkaW9cIixlLm1lc3NhZ2UsdCksZmIud2FybmluZyhcImF1ZGlvIGVsZW1lbnQgcGxheSB3YXJuaW5nXCIsZS50b1N0cmluZygpKSx0aGlzLmVsZW1lbnRNYXAuaGFzKHQpJiZcIk5vdEFsbG93ZWRFcnJvclwiPT09ZS5uYW1lJiYoZmIud2FybmluZyhcImRldGVjdGVkIGF1ZGlvIGVsZW1lbnQgYXV0b3BsYXkgZmFpbGVkXCIpLHRoaXMuZWxlbWVudHNOZWVkVG9SZXN1bWUucHVzaChyKSxvQSgoKCk9Pnt0aGlzLm9uQXV0b3BsYXlGYWlsZWQmJnRoaXMub25BdXRvcGxheUZhaWxlZCgpLF9rKCl9KSkpfSkpfXVwZGF0ZVRyYWNrKGUsdCl7Y29uc3QgaT10aGlzLmVsZW1lbnRNYXAuZ2V0KGUpO2kmJihpLnNyY09iamVjdD1uZXcgTWVkaWFTdHJlYW0oW3RdKSl9aXNQbGF5aW5nKGUpe3JldHVybiB0aGlzLmVsZW1lbnRNYXAuaGFzKGUpJiZcInBsYXlpbmdcIj09PXRoaXMuZWxlbWVudFN0YXRlTWFwLmdldChlKX1zZXRWb2x1bWUoZSx0KXtjb25zdCBpPXRoaXMuZWxlbWVudE1hcC5nZXQoZSk7aSYmKHQ9TWF0aC5tYXgoMCxNYXRoLm1pbigxMDAsdCkpLGkudm9sdW1lPXQvMTAwKX1zdG9wKGUpe2NvbnN0IHQ9dGhpcy5lbGVtZW50TWFwLmdldChlKTtpZih0aGlzLnNpbmtJZE1hcC5kZWxldGUoZSksIXQpcmV0dXJuO2NvbnN0IGk9dGhpcy5lbGVtZW50c05lZWRUb1Jlc3VtZS5pbmRleE9mKHQpO3RoaXMuZWxlbWVudHNOZWVkVG9SZXN1bWUuc3BsaWNlKGksMSksdC5zcmNPYmplY3Q9bnVsbCx0LnJlbW92ZSgpLHRoaXMuZWxlbWVudE1hcC5kZWxldGUoZSksdGhpcy5lbGVtZW50U3RhdGVNYXAuZGVsZXRlKGUpfWJpbmRBdWRpb0VsZW1lbnRFdmVudHMoZSx0KXtmay5mb3JFYWNoKChpPT57dC5hZGRFdmVudExpc3RlbmVyKGksKGk9Pntjb25zdCBuPXRoaXMuZWxlbWVudFN0YXRlTWFwLmdldChlKSxyPVwicGF1c2VcIj09PWkudHlwZT9cInBhdXNlZFwiOmkudHlwZTtpZihmYi5kZWJ1ZyhcIltcIi5jb25jYXQoZSxcIl0gYXVkaW8tZWxlbWVudC1zdGF0dXMgY2hhbmdlIFwiKS5jb25jYXQobixcIiA9PiBcIikuY29uY2F0KHIpKSxcImVycm9yXCI9PT1pLnR5cGUpe2NvbnN0IGk9bnVsbD09dD92b2lkIDA6dC5lcnJvcjtpJiZmYi5lcnJvcihcIltcIi5jb25jYXQoZSxcIl0gbWVkaWEgZXJyb3IsIGNvZGU6IFwiKS5jb25jYXQoaS5jb2RlLFwiLCBtZXNzYWdlOiBcIikuY29uY2F0KGkubWVzc2FnZSkpfXRoaXMuZWxlbWVudFN0YXRlTWFwLnNldChlLHIpfSkpfSkpfWdldFBsYXllclN0YXRlKGUpe3JldHVybiB0aGlzLmVsZW1lbnRTdGF0ZU1hcC5nZXQoZSl8fFwidW5pbml0XCJ9YXV0b1Jlc3VtZUF1ZGlvRWxlbWVudCgpe2NvbnN0IGU9KCk9Pnt0aGlzLmVsZW1lbnRzTmVlZFRvUmVzdW1lLmZvckVhY2goKGU9PntlLnBsYXkoKS50aGVuKChlPT57ZmIuZGVidWcoXCJBdXRvIHJlc3VtZSBhdWRpbyBlbGVtZW50IHN1Y2Nlc3NcIil9KSkuY2F0Y2goKGU9PntmYi53YXJuaW5nKFwiQXV0byByZXN1bWUgYXVkaW8gZWxlbWVudCBmYWlsZWQhXCIsZSl9KSl9KSksdGhpcy5lbGVtZW50c05lZWRUb1Jlc3VtZT1bXX07bmV3IEdoKChlPT57ZG9jdW1lbnQuYm9keT9lKCk6d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsKCgpPT5lKCkpKX0pKS50aGVuKCgoKT0+e215KCk/ZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixlLCEwKTooZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLGUsITApLGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLGUsITApKX0pKX19O2Z1bmN0aW9uIFRrKCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCxpKXtjb25zdCBuPWkudmFsdWU7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgbiYmKGkudmFsdWU9ZnVuY3Rpb24oKXt0aGlzLl9pc0Nsb3NlZCYmbmV3IEN5KFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gY2Fubm90IG9wZXJhdGUgYSBjbG9zZWQgdHJhY2tcIikpLnByaW50KFwid2FybmluZ1wiLGZiKTtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxpPTA7aTxlO2krKyl0W2ldPWFyZ3VtZW50c1tpXTtjb25zdCByPW4uYXBwbHkodGhpcyx0KTtyZXR1cm4gciBpbnN0YW5jZW9mIEdoP25ldyBHaCgoKGUsdCk9PntyLnRoZW4oZSkuY2F0Y2godCl9KSk6cn0pLGl9fWNsYXNzIFNrIGV4dGVuZHMgeHl7Y29uc3RydWN0b3IoZSl7c3VwZXIoKSxCTCh0aGlzLFwibmFtZVwiLFwiVmlkZW9Qcm9jZXNzb3JEZXN0aW5hdGlvblwiKSxCTCh0aGlzLFwiSURcIixcIjBcIiksQkwodGhpcyxcIl9zb3VyY2VcIix2b2lkIDApLEJMKHRoaXMsXCJ2aWRlb0NvbnRleHRcIix2b2lkIDApLEJMKHRoaXMsXCJpbnB1dFRyYWNrXCIsdm9pZCAwKSx0aGlzLnZpZGVvQ29udGV4dD1lfWdldCBraW5kKCl7cmV0dXJuXCJ2aWRlb1wifWdldCBlbmFibGVkKCl7cmV0dXJuITB9cGlwZSgpe3Rocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwiVmlkZW9Qcm9jZXNzb3IgY2Fubm90IHBpcGUgdG8gYW55IG90aGVyIFByb2Nlc3NvclwiKX11bnBpcGUoKXt0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcIlZpZGVvUHJvY2Vzc29yIGNhbm5vdCB1bnBpcGUgdG8gYW55IG90aGVyIFByb2Nlc3NvclwiKX1lbmFibGUoKXt9ZGlzYWJsZSgpe311cGRhdGVJbnB1dChlKXtpZihlLmNvbnRleHQhPT10aGlzLnZpZGVvQ29udGV4dCl0aHJvdyBuZXcgRXJyb3IoXCJQcm9jZXNzb3JDb250ZXh0IHBhc3NlZCB0byBWaWRlb1RyYWNrLnByb2Nlc3NvckRlc3RpbmF0aW9uIGRvZXNuJ3QgbWF0Y2ggaXQncyBiZWxvbmdpbmcgVmlkZW9UcmFjaydzIGNvbnRleHQuXFxuUHJvYmFibHkgeW91IGFyZSBtYWtpbmcgcGlwZWxpbmUgbGlrZSB0aGlzOlxcbnZpZGVvVHJhY2sxLnBpcGUocHJvY2Vzc29yKS5waXBlKHZpZGVvVHJhY2syLnByb2Nlc3NvckRlc3RpbmF0aW9uKS5cIik7ZS50cmFjayYmZS50cmFjayE9PXRoaXMuaW5wdXRUcmFjayYmKHRoaXMudmlkZW9Db250ZXh0LmNoYWluZWQ9ITAsdGhpcy5pbnB1dFRyYWNrPWUudHJhY2ssdGhpcy5lbWl0KERMLk9OX1RSQUNLLGUudHJhY2spKX1yZXNldCgpe3RoaXMuaW5wdXRUcmFjaz12b2lkIDAsdGhpcy52aWRlb0NvbnRleHQuY2hhaW5lZD0hMSx0aGlzLmVtaXQoREwuT05fVFJBQ0ssdm9pZCAwKX19Y2xhc3MgZ2sgZXh0ZW5kcyB4eXtzZXQgY2hhaW5lZChlKXt0aGlzLl9jaGFpbmVkPWV9Z2V0IGNoYWluZWQoKXtyZXR1cm4gdGhpcy5fY2hhaW5lZH1jb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksQkwodGhpcyxcImNvbnN0cmFpbnRzTWFwXCIsbmV3IE1hcCksQkwodGhpcyxcInN0YXRzUmVnaXN0cnlcIixbXSksQkwodGhpcyxcInVzYWdlUmVnaXN0cnlcIixbXSksQkwodGhpcyxcInRyYWNrSWRcIix2b2lkIDApLEJMKHRoaXMsXCJkaXJlY3Rpb25cIix2b2lkIDApLEJMKHRoaXMsXCJfY2hhaW5lZFwiLCExKSx0aGlzLnRyYWNrSWQ9ZSx0aGlzLmRpcmVjdGlvbj10fWFzeW5jIGdldENvbnN0cmFpbnRzKCl7cmV0dXJuIGF3YWl0IFp5KHRoaXMsUEwuUkVRVUVTVF9DT05TVFJBSU5UUyl9YXN5bmMgcmVxdWVzdEFwcGx5Q29uc3RyYWludHMoZSx0KXt2YXIgaTtyZXR1cm4gZmIuaW5mbyhcInByb2Nlc3NvciBcIi5jb25jYXQodC5uYW1lLFwiIHJlcXVlc3RBcHBseUNvbnN0cmFpbnRzIGZvciBcIikuY29uY2F0KHRoaXMudHJhY2tJZCkpLGUmJnRoaXMuY29uc3RyYWludHNNYXAuc2V0KHQsZSksJHkodGhpcyxQTC5SRVFVRVNUX1VQREFURV9DT05TVFJBSU5UUyxBcnJheS5mcm9tKF9OKGk9dGhpcy5jb25zdHJhaW50c01hcCkuY2FsbChpKSkpfWFzeW5jIHJlcXVlc3RSZXZlcnRDb25zdHJhaW50cyhlKXt2YXIgdDtpZih0aGlzLmNvbnN0cmFpbnRzTWFwLmhhcyhlKSlyZXR1cm4gZmIuaW5mbyhcInByb2Nlc3NvciBcIi5jb25jYXQoZS5uYW1lLFwiIHJlcXVlc3RSZXZlcnRDb25zdHJhaW50cyBmb3IgXCIpLmNvbmNhdCh0aGlzLnRyYWNrSWQpKSx0aGlzLmNvbnN0cmFpbnRzTWFwLmRlbGV0ZShlKSwkeSh0aGlzLFBMLlJFUVVFU1RfVVBEQVRFX0NPTlNUUkFJTlRTLEFycmF5LmZyb20oX04odD10aGlzLmNvbnN0cmFpbnRzTWFwKS5jYWxsKHQpKSl9cmVnaXN0ZXJTdGF0cyhlLHQsaSl7dGhpcy5zdGF0c1JlZ2lzdHJ5LmZpbmQoKGk9PmkucHJvY2Vzc29ySUQ9PT1lLklEJiZpLnByb2Nlc3Nvck5hbWU9PT1lLm5hbWUmJmkudHlwZT09PXQpKXx8dGhpcy5zdGF0c1JlZ2lzdHJ5LnB1c2goe3Byb2Nlc3Nvck5hbWU6ZS5uYW1lLHByb2Nlc3NvcklEOmUuSUQsdHlwZTp0LGNiOml9KX11bnJlZ2lzdGVyU3RhdHMoZSx0KXtjb25zdCBpPXRoaXMuc3RhdHNSZWdpc3RyeS5maW5kSW5kZXgoKGk9PmkucHJvY2Vzc29ySUQ9PT1lLklEJiZpLnByb2Nlc3Nvck5hbWU9PT1lLm5hbWUmJmkudHlwZT09PXQpKTstMSE9PWkmJnRoaXMuc3RhdHNSZWdpc3RyeS5zcGxpY2UoaSwxKX1nYXRoZXJTdGF0cygpe2NvbnN0IGU9W107Zm9yKGNvbnN0e3Byb2Nlc3NvcklEOnQscHJvY2Vzc29yTmFtZTppLHR5cGU6bixjYjpyfW9mIHRoaXMuc3RhdHNSZWdpc3RyeSl0cnl7Y29uc3Qgbz1yKCk7ZS5wdXNoKHtwcm9jZXNzb3JJRDp0LHByb2Nlc3Nvck5hbWU6aSx0eXBlOm4sc3RhdHM6b30pfWNhdGNoKGUpe2ZiLmVycm9yKG5ldyBDeShSeS5VTkVYUEVDVEVEX0VSUk9SLGUubWVzc2FnZSkpfXJldHVybiBlfXJlZ2lzdGVyVXNhZ2UoZSx0KXt0aGlzLnVzYWdlUmVnaXN0cnkuZmluZCgodD0+dC5wcm9jZXNzb3JJRD09PWUuSUQmJnQucHJvY2Vzc29yTmFtZT09PWUubmFtZSkpfHx0aGlzLnVzYWdlUmVnaXN0cnkucHVzaCh7cHJvY2Vzc29ySUQ6ZS5JRCxwcm9jZXNzb3JOYW1lOmUubmFtZSxjYjp0fSl9dW5yZWdpc3RlclVzYWdlKGUpe2NvbnN0IHQ9dGhpcy51c2FnZVJlZ2lzdHJ5LmZpbmRJbmRleCgodD0+dC5wcm9jZXNzb3JJRD09PWUuSUQmJnQucHJvY2Vzc29yTmFtZT09PWUubmFtZSkpOy0xIT09dCYmdGhpcy51c2FnZVJlZ2lzdHJ5LnNwbGljZSh0LDEpfWFzeW5jIGdhdGhlclVzYWdlKCl7Y29uc3QgZT1bXTtpZighdGhpcy5jaGFpbmVkKXJldHVybltdO2Zvcihjb25zdHtjYjp0fW9mIHRoaXMudXNhZ2VSZWdpc3RyeSl0cnl7bGV0IGk9dCgpO2kgaW5zdGFuY2VvZiBHaCYmKGk9YXdhaXQgaSksZS5wdXNoKEdMKEdMKHt9LGkpLHt9LHtkaXJlY3Rpb246dGhpcy5kaXJlY3Rpb259KSl9Y2F0Y2goZSl7ZmIuZXJyb3IoXCJnYXRoZXIgZXh0ZW5zaW9uIHVzYWdlIGVycm9yXCIsZSl9cmV0dXJuIGV9Z2V0RGlyZWN0aW9uKCl7cmV0dXJuIHRoaXMuZGlyZWN0aW9ufX1jbGFzcyBSayBleHRlbmRzIHh5e2NvbnN0cnVjdG9yKGUpe3N1cGVyKCksQkwodGhpcyxcIm5hbWVcIixcIkF1ZGlvUHJvY2Vzc29yRGVzdGluYXRpb25cIiksQkwodGhpcyxcIklEXCIsXCIwXCIpLEJMKHRoaXMsXCJpbnB1dFRyYWNrXCIsdm9pZCAwKSxCTCh0aGlzLFwiaW5wdXROb2RlXCIsdm9pZCAwKSxCTCh0aGlzLFwiYXVkaW9Qcm9jZXNzb3JDb250ZXh0XCIsdm9pZCAwKSxCTCh0aGlzLFwiX3NvdXJjZVwiLHZvaWQgMCksdGhpcy5hdWRpb1Byb2Nlc3NvckNvbnRleHQ9ZX1nZXQga2luZCgpe3JldHVyblwiYXVkaW9cIn1nZXQgZW5hYmxlZCgpe3JldHVybiEwfXBpcGUoKXt0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcIkF1ZGlvUHJvY2Vzc29yRGVzdGluYXRpb24gY2Fubm90IHBpcGUgdG8gYW55IG90aGVyIFByb2Nlc3NvclwiKX11bnBpcGUoKXt0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcIkF1ZGlvUHJvY2Vzc29yIGNhbm5vdCB1bnBpcGUgdG8gYW55IG90aGVyIFByb2Nlc3NvclwiKX1lbmFibGUoKXt9ZGlzYWJsZSgpe31yZXNldCgpe3RoaXMuaW5wdXRUcmFjaz12b2lkIDAsdGhpcy5pbnB1dE5vZGU9dm9pZCAwLHRoaXMuYXVkaW9Qcm9jZXNzb3JDb250ZXh0LmNoYWluZWQ9ITEsdGhpcy5lbWl0KERMLk9OX1RSQUNLLHZvaWQgMCksdGhpcy5lbWl0KERMLk9OX05PREUsdm9pZCAwKX11cGRhdGVJbnB1dChlKXtpZihlLmNvbnRleHQhPT10aGlzLmF1ZGlvUHJvY2Vzc29yQ29udGV4dCl0aHJvdyBuZXcgRXJyb3IoXCJQcm9jZXNzb3JDb250ZXh0IHBhc3NlZCB0byBBdWRpb1RyYWNrLnByb2Nlc3NvckRlc3RpbmF0aW9uIGRvZXNuJ3QgbWF0Y2ggaXQncyBiZWxvbmdpbmcgQXVkaW9UcmFjaydzIGNvbnRleHQuXFxuICAgICAgICBQcm9iYWJseSB5b3UgYXJlIG1ha2luZyBwaXBlbGluZSBsaWtlIHRoaXM6IGF1ZGlvVHJhY2sxLnBpcGUocHJvY2Vzc29yKS5waXBlKGF1ZGlvVHJhY2syLnByb2Nlc3NvckRlc3RpbmF0aW9uKS5cIik7ZS50cmFjayYmdGhpcy5pbnB1dFRyYWNrIT09ZS50cmFjayYmKHRoaXMuYXVkaW9Qcm9jZXNzb3JDb250ZXh0LmNoYWluZWQ9ITAsdGhpcy5pbnB1dFRyYWNrPWUudHJhY2ssdGhpcy5lbWl0KERMLk9OX1RSQUNLLHRoaXMuaW5wdXRUcmFjaykpLGUubm9kZSYmdGhpcy5pbnB1dE5vZGUhPT1lLm5vZGUmJih0aGlzLmF1ZGlvUHJvY2Vzc29yQ29udGV4dC5jaGFpbmVkPSEwLHRoaXMuaW5wdXROb2RlPWUubm9kZSx0aGlzLmVtaXQoREwuT05fTk9ERSx0aGlzLmlucHV0Tm9kZSkpfX1jbGFzcyBDayBleHRlbmRzIHh5e3NldCBjaGFpbmVkKGUpe3RoaXMuX2NoYWluZWQ9ZX1nZXQgY2hhaW5lZCgpe3JldHVybiB0aGlzLl9jaGFpbmVkfWNvbnN0cnVjdG9yKGUsdCxpKXtzdXBlcigpLEJMKHRoaXMsXCJjb25zdHJhaW50c01hcFwiLG5ldyBNYXApLEJMKHRoaXMsXCJzdGF0c1JlZ2lzdHJ5XCIsW10pLEJMKHRoaXMsXCJhdWRpb0NvbnRleHRcIix2b2lkIDApLEJMKHRoaXMsXCJ0cmFja0lkXCIsdm9pZCAwKSxCTCh0aGlzLFwiZGlyZWN0aW9uXCIsdm9pZCAwKSxCTCh0aGlzLFwidXNhZ2VSZWdpc3RyeVwiLFtdKSxCTCh0aGlzLFwiX2NoYWluZWRcIiwhMSksdGhpcy5hdWRpb0NvbnRleHQ9ZSx0aGlzLnRyYWNrSWQ9dCx0aGlzLmRpcmVjdGlvbj1pfWFzeW5jIGdldENvbnN0cmFpbnRzKCl7cmV0dXJuIFp5KHRoaXMsUEwuUkVRVUVTVF9DT05TVFJBSU5UUyl9Z2V0QXVkaW9Db250ZXh0KCl7cmV0dXJuIHRoaXMuYXVkaW9Db250ZXh0fWFzeW5jIHJlcXVlc3RBcHBseUNvbnN0cmFpbnRzKGUsdCl7dmFyIGk7cmV0dXJuIGZiLmluZm8oXCJwcm9jZXNzb3IgXCIuY29uY2F0KHQubmFtZSxcIiByZXF1ZXN0QXBwbHlDb25zdHJhaW50cyBmb3IgXCIpLmNvbmNhdCh0aGlzLnRyYWNrSWQpKSxlJiZ0aGlzLmNvbnN0cmFpbnRzTWFwLnNldCh0LGUpLCR5KHRoaXMsUEwuUkVRVUVTVF9VUERBVEVfQ09OU1RSQUlOVFMsQXJyYXkuZnJvbShfTihpPXRoaXMuY29uc3RyYWludHNNYXApLmNhbGwoaSkpKX1hc3luYyByZXF1ZXN0UmV2ZXJ0Q29uc3RyYWludHMoZSl7dmFyIHQ7aWYodGhpcy5jb25zdHJhaW50c01hcC5oYXMoZSkpcmV0dXJuIHRoaXMuY29uc3RyYWludHNNYXAuZGVsZXRlKGUpLCR5KHRoaXMsUEwuUkVRVUVTVF9VUERBVEVfQ09OU1RSQUlOVFMsQXJyYXkuZnJvbShfTih0PXRoaXMuY29uc3RyYWludHNNYXApLmNhbGwodCkpKX1yZWdpc3RlclN0YXRzKGUsdCxpKXt0aGlzLnN0YXRzUmVnaXN0cnkuZmluZCgoaT0+aS5wcm9jZXNzb3JJRD09PWUuSUQmJmkucHJvY2Vzc29yTmFtZT09PWUubmFtZSYmaS50eXBlPT09dCkpfHx0aGlzLnN0YXRzUmVnaXN0cnkucHVzaCh7cHJvY2Vzc29yTmFtZTplLm5hbWUscHJvY2Vzc29ySUQ6ZS5JRCx0eXBlOnQsY2I6aX0pfXVucmVnaXN0ZXJTdGF0cyhlLHQpe2NvbnN0IGk9dGhpcy5zdGF0c1JlZ2lzdHJ5LmZpbmRJbmRleCgoaT0+aS5wcm9jZXNzb3JJRD09PWUuSUQmJmkucHJvY2Vzc29yTmFtZT09PWUubmFtZSYmaS50eXBlPT09dCkpOy0xIT09aSYmdGhpcy5zdGF0c1JlZ2lzdHJ5LnNwbGljZShpLDEpfWdhdGhlclN0YXRzKCl7Y29uc3QgZT1bXTtmb3IoY29uc3R7cHJvY2Vzc29ySUQ6dCxwcm9jZXNzb3JOYW1lOmksdHlwZTpuLGNiOnJ9b2YgdGhpcy5zdGF0c1JlZ2lzdHJ5KXRyeXtjb25zdCBvPXIoKTtlLnB1c2goe3Byb2Nlc3NvcklEOnQscHJvY2Vzc29yTmFtZTppLHR5cGU6bixzdGF0czpvfSl9Y2F0Y2goZSl7ZmIuZXJyb3IobmV3IEN5KFJ5LlVORVhQRUNURURfRVJST1IsZS5tZXNzYWdlKSl9cmV0dXJuIGV9cmVnaXN0ZXJVc2FnZShlLHQpe3RoaXMudXNhZ2VSZWdpc3RyeS5maW5kKCh0PT50LnByb2Nlc3NvcklEPT09ZS5JRCYmdC5wcm9jZXNzb3JOYW1lPT09ZS5uYW1lKSl8fHRoaXMudXNhZ2VSZWdpc3RyeS5wdXNoKHtwcm9jZXNzb3JJRDplLklELHByb2Nlc3Nvck5hbWU6ZS5uYW1lLGNiOnR9KX11bnJlZ2lzdGVyVXNhZ2UoZSl7Y29uc3QgdD10aGlzLnVzYWdlUmVnaXN0cnkuZmluZEluZGV4KCh0PT50LnByb2Nlc3NvcklEPT09ZS5JRCYmdC5wcm9jZXNzb3JOYW1lPT09ZS5uYW1lKSk7LTEhPT10JiZ0aGlzLnVzYWdlUmVnaXN0cnkuc3BsaWNlKHQsMSl9YXN5bmMgZ2F0aGVyVXNhZ2UoKXtjb25zdCBlPVtdO2lmKCF0aGlzLmNoYWluZWQpcmV0dXJuW107Zm9yKGNvbnN0e2NiOnR9b2YgdGhpcy51c2FnZVJlZ2lzdHJ5KXRyeXtsZXQgaT10KCk7aSBpbnN0YW5jZW9mIEdoJiYoaT1hd2FpdCBpKSxlLnB1c2goR0woR0woe30saSkse30se2RpcmVjdGlvbjp0aGlzLmRpcmVjdGlvbn0pKX1jYXRjaChlKXtmYi5lcnJvcihcImdhdGhlciBleHRlbnNpb24gdXNhZ2UgZXJyb3JcIixlKX1yZXR1cm4gZX1nZXREaXJlY3Rpb24oKXtyZXR1cm4gdGhpcy5kaXJlY3Rpb259fWNsYXNzIElrIGV4dGVuZHMgeHl7Z2V0IGlzUGxheWVkKCl7cmV0dXJuITB9Z2V0IGlzRnJlZXplKCl7cmV0dXJuITF9Y29uc3RydWN0b3IoKXtzdXBlcigpLEJMKHRoaXMsXCJjb250ZXh0XCIsdm9pZCAwKSxCTCh0aGlzLFwicHJvY2Vzc1NvdXJjZU5vZGVcIix2b2lkIDApLEJMKHRoaXMsXCJvdXRwdXRUcmFja1wiLHZvaWQgMCksQkwodGhpcyxcInByb2Nlc3NlZE5vZGVcIix2b2lkIDApLEJMKHRoaXMsXCJjbG9uZWRUcmFja1wiLHZvaWQgMCksQkwodGhpcyxcIm91dHB1dE5vZGVcIix2b2lkIDApLHRoaXMub3V0cHV0Tm9kZT1uZXcgdmt9c2V0Vm9sdW1lKCl7fWNyZWF0ZU91dHB1dFRyYWNrKCl7dGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQsXCJjYW4gbm90IGNyZWF0ZSBvdXRwdXQgTWVkaWFTdHJlYW1UcmFjayB3aGVuIFdlYkF1ZGlvIGRpc2FibGVkXCIpfWdldE9yaWdpblZvbHVtZUxldmVsKCl7cmV0dXJuIDB9Z2V0QWNjdXJhdGVWb2x1bWVMZXZlbCgpe3JldHVybiAwfXN0b3BHZXRBdWRpb0J1ZmZlcigpe31zdGFydEdldEF1ZGlvQnVmZmVyKCl7fXBsYXkoKXt9c3RvcCgpe31kZXN0cm95KCl7fXVwZGF0ZVRyYWNrKCl7fXVwZGF0ZU9yaWdpblRyYWNrKCl7fWNyZWF0ZU1lZGlhU3RyZWFtU291cmNlTm9kZSgpe319Y2xhc3Mgdmt7ZGlzY29ubmVjdCgpe31jb25uZWN0KCl7fX1mdW5jdGlvbiB5ayhlKXtyZXR1cm4gbmV3IEdoKCgodCxpKT0+e2xldCBuPSExO2NvbnN0IHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInZpZGVvXCIpO3Iuc2V0QXR0cmlidXRlKFwiYXV0b3BsYXlcIixcIlwiKSxyLnNldEF0dHJpYnV0ZShcIm11dGVkXCIsXCJcIiksci5tdXRlZD0hMCxyLmF1dG9wbGF5PSEwLHIuc2V0QXR0cmlidXRlKFwicGxheXNpbmxpbmVcIixcIlwiKSxyLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsXCJwb3NpdGlvbjogZml4ZWQ7IHRvcDogMDsgbGVmdDogMDsgd2lkdGg6IDFweDsgaGVpZ2h0OiAxcHhcIiksZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChyKTtjb25zdCBvPSR2KCk/XCJjYW5wbGF5XCI6XCJwbGF5aW5nXCI7ci5hZGRFdmVudExpc3RlbmVyKG8sKCgpPT57Y29uc3QgZT1yLnZpZGVvV2lkdGgsaT1yLnZpZGVvSGVpZ2h0OyFlJiZadigpfHwobj0hMCxyLnNyY09iamVjdD1udWxsLHIucmVtb3ZlKCksdChbZSxpXSkpfSkpLHIuc3JjT2JqZWN0PW5ldyBNZWRpYVN0cmVhbShbZV0pLHIucGxheSgpLmNhdGNoKGdBKSxzZXRUaW1lb3V0KCgoKT0+e258fChyLnNyY09iamVjdD1udWxsLHIucmVtb3ZlKCksdChbci52aWRlb1dpZHRoLHIudmlkZW9IZWlnaHRdKSl9KSw0ZTMpfSkpfWZ1bmN0aW9uIEFrKGUpe2NvbnN0IHQ9e307ZS5mYWNpbmdNb2RlJiYodC5mYWNpbmdNb2RlPWUuZmFjaW5nTW9kZSksZS5jYW1lcmFJZCYmKHQuZGV2aWNlSWQ9e2V4YWN0OmUuY2FtZXJhSWR9KTtjb25zdCBpPWRMKGUuZW5jb2RlckNvbmZpZyk7cmV0dXJuIG51bGwhPWkud2lkdGgmJih0LndpZHRoPWkud2lkdGgpLG51bGwhPWkuaGVpZ2h0JiYodC5oZWlnaHQ9aS5oZWlnaHQpLCFweSgpJiZpLmZyYW1lUmF0ZSYmKHQuZnJhbWVSYXRlPWkuZnJhbWVSYXRlKSxRdigpJiZcIm9iamVjdFwiPT10eXBlb2YgdC5mcmFtZVJhdGUmJih0LmZyYW1lUmF0ZS5tYXg9NjApLFp2KCkmJih0LmZyYW1lUmF0ZT17aWRlYWw6MzAsbWF4OjMwfSksdH1mdW5jdGlvbiBiayhlKXtjb25zdCB0PXt9O2lmKHB5KCl8fCh2b2lkIDAhPT1lLkFHQyYmKHQuYXV0b0dhaW5Db250cm9sPWUuQUdDKSx2b2lkIDAhPT1lLkFFQyYmKHQuZWNob0NhbmNlbGxhdGlvbj1lLkFFQyksdm9pZCAwIT09ZS5BTlMmJih0Lm5vaXNlU3VwcHJlc3Npb249ZS5BTlMsSnYoKSYmZS5BTlMmJih0Lmdvb2dIaWdocGFzc0ZpbHRlcj1lLkFOUykpKSxlLmVuY29kZXJDb25maWcpe2NvbnN0IGk9cEwoZS5lbmNvZGVyQ29uZmlnKTt0LmNoYW5uZWxDb3VudD1pLnN0ZXJlbz8yOjEsdC5zYW1wbGVSYXRlPWkuc2FtcGxlUmF0ZSx0LnNhbXBsZVNpemU9aS5zYW1wbGVTaXplfXJldHVybiBlLm1pY3JvcGhvbmVJZCYmKHQuZGV2aWNlSWQ9e2V4YWN0OmUubWljcm9waG9uZUlkfSksZnkoKSYmKHQuc2FtcGxlUmF0ZT12b2lkIDApLHR9Y29uc3Qgd2s9ZT0+e2NvbnN0IHQ9ZS5fZW5jb2RlckNvbmZpZztpZighdClyZXR1cm47Y29uc3R7ZnJhbWVSYXRlOmksd2lkdGg6bixoZWlnaHQ6cn09ZS5nZXRNZWRpYVN0cmVhbVRyYWNrU2V0dGluZ3MoKTtsZXR7ZnJhbWVSYXRlOm89aSx3aWR0aDpzPW4saGVpZ2h0OmE9cn09dDtpZighb3x8IXN8fCFhKXJldHVybjtzPUFBKHMpLGE9QUEoYSksbz1BQShvKTtjb25zdHttYXg6YyxtaW46ZH09ZnVuY3Rpb24oZSx0LGkpe2NvbnN0IG49MjAwKk1hdGgucG93KGkvMTUsLjYpKk1hdGgucG93KGUqdC82NDAvMzYwLC43NSk7cmV0dXJue21pbjpNYXRoLmZsb29yKG4pLG1heDpNYXRoLmZsb29yKDQqbil9fShzLGEsbykse2JpdHJhdGVNYXg6bCxiaXRyYXRlTWluOnV9PXR8fHt9O2x8fGZiLmRlYnVnKFwiY2FsY3VsYXRlIGJpdHJhdGU6IFt3OiBcIi5jb25jYXQocyxcIiwgaDogXCIpLmNvbmNhdChhLFwiLCBmcHM6IFwiKS5jb25jYXQobyxcIl0gPT4gW2JyTWF4OiBcIikuY29uY2F0KGwsXCIsIGJyTWluOiBcIikuY29uY2F0KHUsXCJdXCIpKTtjb25zdHttYXhGcmFtZXJhdGU6aH09WEEoXCJFTkNPREVSX0NPTkZJR19MSU1JVFwiKTtyZXR1cm4gaCYmXCJudW1iZXJcIj09dHlwZW9mIGgmJihvPU1hdGgubWluKG8saCkpLHtmcmFtZVJhdGU6byxiaXRyYXRlTWF4Omx8fGMsYml0cmF0ZU1pbjp1fHxkLHNjYWxlUmVzb2x1dGlvbkRvd25CeToxLHNjYWxlOjB9fSxPaz1hc3luYyhlLHQsaSk9PmF3YWl0KGFzeW5jKGUsdCxpKT0+e2NvbnN0IG49ZnVuY3Rpb24oZSl7Y29uc3QgdD1bXTtmb3IobGV0IGk9MDtpPGUubGVuZ3RoO2krPTIpdC5wdXNoKHBhcnNlSW50KGUuc2xpY2UoaSxpKzIpLDE2KSk7cmV0dXJuIFVpbnQ4QXJyYXkuZnJvbSh0KX0oYkEoXCJcIit0K2kpKS5zbGljZSgwLDE2KSxyPW4uc2xpY2UoMCwxMiksbz1hd2FpdCB3aW5kb3cuY3J5cHRvLnN1YnRsZS5pbXBvcnRLZXkoXCJyYXdcIixuLFwiQUVTLUdDTVwiLCEwLFtcImVuY3J5cHRcIl0pO3JldHVybiBuZXcgVWludDhBcnJheShhd2FpdCB3aW5kb3cuY3J5cHRvLnN1YnRsZS5lbmNyeXB0KHtuYW1lOlwiQUVTLUdDTVwiLGl2OnJ9LG8sZSkpfSkoZS5idWZmZXIsdCxpKSxOaz1lPT57Y29uc3QgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO3JldHVybiB0LndpZHRoPTIsdC5oZWlnaHQ9MixuZXcgR2goKChpLG4pPT57dC50b0Jsb2IoKGFzeW5jIGU9PntpZih0LnJlbW92ZSgpLGUpe2NvbnN0IG49YXdhaXQgRGsoZSk7aSh7YnVmZmVyOm4sd2lkdGg6dC53aWR0aCxoZWlnaHQ6dC5oZWlnaHR9KX1lbHNlIG4obmV3IEN5KFJ5LkNPTlZFUlRJTkdfVklERU9fRlJBTUVfVE9fQkxPQl9GQUlMRUQpKX0pLGUsMSl9KSl9LERrPWFzeW5jIGU9Pntjb25zdCB0PWF3YWl0IGUuYXJyYXlCdWZmZXIoKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkodCl9O3ZhciBQayxMayxrayxNayxVayx4ayxWayxGayxCayxqayxHayxXayxIayxLayxZayxxayx6ayxKayxYayxRayxaaywkayxlTSx0TSxpTSxuTSxyTSxvTSxzTSxhTSxjTSxkTSxsTSx1TSxoTSxwTSxfTSxFTSxmTSxtTTtsZXQgVE09KFBrPUliKHthcmdzTWFwOihlLHQpPT5bZS5nZXRUcmFja0lkKCksdF0sdGhyb3R0bGVUaW1lOjMwMH0pLExrPUliKHthcmdzTWFwOihlLHQpPT5bZS5nZXRUcmFja0lkKCksdF19KSxraz1UaygpLE1rPURBKFwiTG9jYWxBdWRpb1RyYWNrXCIsXCJfZW5hYmxlZE11dGV4XCIpLFVrPUliKHthcmdzTWFwOihlLHQpPT5bZS5nZXRUcmFja0lkKCksdF19KSx4az1UaygpLFZrPURBKFwiTG9jYWxBdWRpb1RyYWNrXCIsXCJfZW5hYmxlZE11dGV4XCIpLEZrPUliKHthcmdzTWFwOihlLHQpPT5bZS5nZXRUcmFja0lkKCksdF19KSxCaz1UaygpLGprPVRrKCksR2s9VGsoKSxXaz1JYih7YXJnc01hcDplPT5bZS5nZXRUcmFja0lkKCldfSksSGs9VGsoKSxLaz1JYih7YXJnc01hcDplPT5bZS5nZXRUcmFja0lkKCldfSksWWs9VGsoKSxxaz1JYih7YXJnc01hcDplPT5bZS5nZXRUcmFja0lkKCldfSksems9SWIoe2FyZ3NNYXA6KGUsdCk9PltlLmdldFRyYWNrSWQoKSx0Lm5hbWVdfSksSms9SWIoe2FyZ3NNYXA6ZT0+W2UuZ2V0VHJhY2tJZCgpXX0pLEZMKChYaz1jbGFzcyBleHRlbmRzIEhMe2dldCBfc291cmNlKCl7cmV0dXJuIHRoaXMuaW5pdFdlYkF1ZGlvKCl9c2V0IF9zb3VyY2UoZSl7dGhpcy5fdHJhY2tTb3VyY2U9ZX1nZXQgcHJvY2Vzc29yQ29udGV4dCgpe3JldHVybiB0aGlzLl9wcm9jZXNzb3JDb250ZXh0fHwodGhpcy5fcHJvY2Vzc29yQ29udGV4dD10aGlzLmluaXRQcm9jZXNzb3IoKS5wcm9jZXNzb3JDb250ZXh0KSx0aGlzLl9wcm9jZXNzb3JDb250ZXh0fWdldCBwcm9jZXNzb3JEZXN0aW5hdGlvbigpe3JldHVybiB0aGlzLl9wcm9jZXNzb3JEZXN0aW5hdGlvbnx8KHRoaXMuX3Byb2Nlc3NvckRlc3RpbmF0aW9uPXRoaXMuaW5pdFByb2Nlc3NvcigpLnByb2Nlc3NvckRlc3RpbmF0aW9uKSx0aGlzLl9wcm9jZXNzb3JEZXN0aW5hdGlvbn1nZXQgaXNQbGF5aW5nKCl7cmV0dXJuIHRoaXMuX3VzZUF1ZGlvRWxlbWVudD9tay5pc1BsYXlpbmcodGhpcy5nZXRUcmFja0lkKCkpOnRoaXMuX3NvdXJjZS5pc1BsYXllZH1nZXQgX19jbGFzc05hbWVfXygpe3JldHVyblwiTG9jYWxBdWRpb1RyYWNrXCJ9Y29uc3RydWN0b3IoZSx0LGksbil7c3VwZXIoZSxpKSxCTCh0aGlzLFwidHJhY2tNZWRpYVR5cGVcIix2TC5BVURJTyksQkwodGhpcyxcIl9lbmNvZGVyQ29uZmlnXCIsdm9pZCAwKSxCTCh0aGlzLFwiX3RyYWNrU291cmNlXCIsdm9pZCAwKSxCTCh0aGlzLFwiX2VuYWJsZWRcIiwhMCksQkwodGhpcyxcIl92b2x1bWVcIiwxMDApLEJMKHRoaXMsXCJfdXNlQXVkaW9FbGVtZW50XCIsITApLEJMKHRoaXMsXCJfYnlwYXNzV2ViQXVkaW9cIiwhMSksQkwodGhpcyxcInByb2Nlc3NvclwiLHZvaWQgMCksQkwodGhpcyxcIl9wcm9jZXNzb3JDb250ZXh0XCIsdm9pZCAwKSxCTCh0aGlzLFwiX3Byb2Nlc3NvckRlc3RpbmF0aW9uXCIsdm9pZCAwKSxCTCh0aGlzLFwiX2dldE9yaWdpblZvbHVtZUxldmVsXCIsdm9pZCAwKSx0aGlzLl9lbmNvZGVyQ29uZmlnPXQsdGhpcy5fZ2V0T3JpZ2luVm9sdW1lTGV2ZWw9ISFuLHRoaXMuX3RyYWNrU291cmNlPW5ldyBJayxYQShcIkRJU0FCTEVfV0VCQVVESU9cIikmJih0aGlzLl9ieXBhc3NXZWJBdWRpbz0hMCksWEEoXCJMT0NBTF9BVURJT19UUkFDS19VU0VTX1dFQl9BVURJT1wiKSYmKHRoaXMuX3VzZUF1ZGlvRWxlbWVudD0hMSksWHYoKSYmIVlMP3NldFRpbWVvdXQoKCgpPT50aGlzLmluaXRXZWJBdWRpbygpKSk6dGhpcy5pbml0V2ViQXVkaW8oKX1zZXRWb2x1bWUoZSl7eXkoZSxcInZvbHVtZVwiLDAsMWUzKSx0aGlzLl92b2x1bWU9ZSx0aGlzLl9zb3VyY2Uuc2V0Vm9sdW1lKGUvMTAwKSx0aGlzLl91c2VBdWRpb0VsZW1lbnQmJm1rLnNldFZvbHVtZSh0aGlzLmdldFRyYWNrSWQoKSxlKTt0cnl7aWYodGhpcy5fYnlwYXNzV2ViQXVkaW8pcmV0dXJuIHZvaWQgZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzZXRWb2x1bWUgcmV0dXJuZWQgYmVjYXVzZSBubyBwYXNzIHRocm91Z2ggV2ViQXVkaW8uXCIpKTtjb25zdCBlPXRoaXMuX3NvdXJjZS5jcmVhdGVPdXRwdXRUcmFjaygpO3RoaXMuX21lZGlhU3RyZWFtVHJhY2shPT1lJiYodGhpcy5fbWVkaWFTdHJlYW1UcmFjaz1lLCR5KHRoaXMsZkwuTkVFRF9SRVBMQUNFX1RSQUNLLHRoaXMpLnRoZW4oKCgpPT57ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSByZXBsYWNlIHdlYiBhdWRpbyB0cmFjayBzdWNjZXNzXCIpKX0pKS5jYXRjaCgoZT0+e2ZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSByZXBsYWNlIHdlYiBhdWRpbyB0cmFjayBmYWlsZWRcIiksZSl9KSkpfWNhdGNoKGUpe319Z2V0Vm9sdW1lTGV2ZWwoKXtyZXR1cm4gdGhpcy5fbXV0ZWQmJnRoaXMuZW5hYmxlZCYmdGhpcy5fZ2V0T3JpZ2luVm9sdW1lTGV2ZWw/dGhpcy5fc291cmNlLmdldE9yaWdpblZvbHVtZUxldmVsKCk6dGhpcy5fc291cmNlLmdldEFjY3VyYXRlVm9sdW1lTGV2ZWwoKX1hc3luYyBzZXRQbGF5YmFja0RldmljZShlKXtpZighdGhpcy5fdXNlQXVkaW9FbGVtZW50fHwhJFAoKSl0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcInlvdXIgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHNldHRpbmcgdGhlIGF1ZGlvIG91dHB1dCBkZXZpY2VcIik7YXdhaXQgbWsuc2V0U2lua0lEKHRoaXMuZ2V0VHJhY2tJZCgpLGUpfWFzeW5jIHNldEVuYWJsZWQoZSx0LGkpe3JldHVybiB0aGlzLl9zZXRFbmFibGVkKGUsdCxpKX1hc3luYyBfc2V0RW5hYmxlZChlLHQsaSl7aWYoIWkpe2lmKGU9PT10aGlzLl9lbmFibGVkKXJldHVybjt0aGlzLnN0YXRlQ2hlY2soXCJlbmFibGVkXCIsZSl9aWYoZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHN0YXJ0IHNldEVuYWJsZWRcIiksZSksZSl7dGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5lbmFibGVkPSEwO3RyeXtpfHwodGhpcy5fZW5hYmxlZD0hMCksYXdhaXQgJHkodGhpcyxmTC5ORUVEX0VOQUJMRV9UUkFDSyx0aGlzKSxmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc2V0RW5hYmxlZCB0byBcIikuY29uY2F0KGUsXCIgc3VjY2Vzc1wiKSl9Y2F0Y2goZSl7dGhyb3cgaXx8KHRoaXMuX2VuYWJsZWQ9ITEpLGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc2V0RW5hYmxlZCB0byB0cnVlIGVycm9yXCIpLGUudG9TdHJpbmcoKSksZX19ZWxzZXt0aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrLmVuYWJsZWQ9ITEsaXx8KHRoaXMuX2VuYWJsZWQ9ITEpO3RyeXthd2FpdCAkeSh0aGlzLGZMLk5FRURfRElTQUJMRV9UUkFDSyx0aGlzKX1jYXRjaChlKXt0aHJvdyBpfHwodGhpcy5fZW5hYmxlZD0hMCksZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzZXRFbmFibGVkIHRvIGZhbHNlIGVycm9yXCIpLGUudG9TdHJpbmcoKSksZX19fWFzeW5jIHNldE11dGVkKGUpe2UhPT10aGlzLl9tdXRlZCYmKHRoaXMuc3RhdGVDaGVjayhcIm11dGVkXCIsZSksdGhpcy5fbXV0ZWQ9ZSx0aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrLmVuYWJsZWQ9IWUsZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzdGFydCBzZXQgbXV0ZWQ6IFwiKS5jb25jYXQoZSkpLGU/YXdhaXQgJHkodGhpcyxmTC5ORUVEX01VVEVfVFJBQ0ssdGhpcyk6YXdhaXQgJHkodGhpcyxmTC5ORUVEX1VOTVVURV9UUkFDSyx0aGlzKSl9Z2V0U3RhdHMoKXtkQSgoKCk9PntmYi53YXJuaW5nKFwiW2RlcHJlY2F0ZWRdIExvY2FsQXVkaW9UcmFjay5nZXRTdGF0cyB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIGZ1dHVyZSwgdXNlIEFnb3JhUlRDQ2xpZW50LmdldExvY2FsQXVkaW9TdGF0cyBpbnN0ZWFkXCIpfSksXCJsb2NhbEF1ZGlvVHJhY2tHZXRTdGF0c1dhcm5pbmdcIik7cmV0dXJuIGVBKHRoaXMsZkwuR0VUX1NUQVRTKXx8R0woe30sQUwpfXNldEF1ZGlvRnJhbWVDYWxsYmFjayhlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06NDA5NjtpZighZSlyZXR1cm4gdGhpcy5fc291cmNlLnJlbW92ZUFsbExpc3RlbmVycyh5TC5PTl9BVURJT19CVUZGRVIpLHZvaWQgdGhpcy5fc291cmNlLnN0b3BHZXRBdWRpb0J1ZmZlcigpO3RoaXMuX3NvdXJjZS5zdGFydEdldEF1ZGlvQnVmZmVyKHQpLHRoaXMuX3NvdXJjZS5yZW1vdmVBbGxMaXN0ZW5lcnMoeUwuT05fQVVESU9fQlVGRkVSKSx0aGlzLl9zb3VyY2Uub24oeUwuT05fQVVESU9fQlVGRkVSLCh0PT5lKHQpKSl9cGxheSgpe2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc3RhcnQgYXVkaW8gcGxheWJhY2tcIikpLHRoaXMuX3VzZUF1ZGlvRWxlbWVudD8oZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzdGFydCBhdWRpbyBwbGF5YmFjayBpbiBlbGVtZW50XCIpKSxtay5wbGF5KHRoaXMuX21lZGlhU3RyZWFtVHJhY2ssdGhpcy5nZXRUcmFja0lkKCksdGhpcy5fdm9sdW1lKSk6dGhpcy5fc291cmNlLnBsYXkoKX1zdG9wKCl7ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzdG9wIGF1ZGlvIHBsYXliYWNrXCIpKSx0aGlzLl91c2VBdWRpb0VsZW1lbnQ/bWsuc3RvcCh0aGlzLmdldFRyYWNrSWQoKSk6dGhpcy5fc291cmNlLnN0b3AoKX1jbG9zZSgpe3N1cGVyLmNsb3NlKCksdGhpcy5fcHJvY2Vzc29yRGVzdGluYXRpb24mJnRoaXMudW5iaW5kUHJvY2Vzc29yRGVzdGluYXRpb25FdmVudHModGhpcy5fcHJvY2Vzc29yRGVzdGluYXRpb24pLHRoaXMuX3Byb2Nlc3NvckNvbnRleHQmJnRoaXMudW5iaW5kUHJvY2Vzc29yQ29udGV4dEV2ZW50cyh0aGlzLl9wcm9jZXNzb3JDb250ZXh0KSx0aGlzLnVucGlwZSgpLHRoaXMuX3Byb2Nlc3NvckRlc3RpbmF0aW9uJiZ0aGlzLl9wcm9jZXNzb3JEZXN0aW5hdGlvbi5fc291cmNlJiZ0aGlzLl9wcm9jZXNzb3JEZXN0aW5hdGlvbi5fc291cmNlLnVucGlwZSgpLHRoaXMuX3NvdXJjZS5kZXN0cm95KCl9X3VwZGF0ZVBsYXllclNvdXJjZSgpe2xldCBlPSEoYXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0pfHxhcmd1bWVudHNbMF07ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSB1cGRhdGUgcGxheWVyIHNvdXJjZSB0cmFja1wiKSksZSYmdGhpcy5fc291cmNlLnVwZGF0ZVRyYWNrKHRoaXMuX21lZGlhU3RyZWFtVHJhY2spLHRoaXMuX3VzZUF1ZGlvRWxlbWVudCYmbWsudXBkYXRlVHJhY2sodGhpcy5nZXRUcmFja0lkKCksdGhpcy5fbWVkaWFTdHJlYW1UcmFjayl9YXN5bmMgX3VwZGF0ZU9yaWdpbk1lZGlhU3RyZWFtVHJhY2soZSx0KXt0aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrIT09ZSYmKHRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2smJih0aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLHRoaXMuX2hhbmRsZVRyYWNrRW5kZWQpLHQmJnRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suc3RvcCgpKSxlLmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLHRoaXMuX2hhbmRsZVRyYWNrRW5kZWQpLHRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2s9ZSx0aGlzLl9tdXRlZCYmKHRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suZW5hYmxlZD0hMSksdGhpcy5wcm9jZXNzb3ImJnRoaXMuX3Byb2Nlc3NvckNvbnRleHQmJnRoaXMucHJvY2Vzc29yLnVwZGF0ZUlucHV0KHt0cmFjazplLGNvbnRleHQ6dGhpcy5fcHJvY2Vzc29yQ29udGV4dH0pLHRoaXMuX21lZGlhU3RyZWFtVHJhY2shPT10aGlzLl9zb3VyY2Uub3V0cHV0VHJhY2s/KHRoaXMuX21lZGlhU3RyZWFtVHJhY2s9dGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjayx0aGlzLl91cGRhdGVQbGF5ZXJTb3VyY2UoKSxhd2FpdCAkeSh0aGlzLGZMLk5FRURfUkVQTEFDRV9UUkFDSyx0aGlzKSk6dGhpcy5fc291cmNlLnVwZGF0ZVRyYWNrKHRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2spLHRoaXMuX2dldE9yaWdpblZvbHVtZUxldmVsJiZ0aGlzLl9zb3VyY2UudXBkYXRlT3JpZ2luVHJhY2soZSkpfXJlbmV3TWVkaWFTdHJlYW1UcmFjayhlKXtyZXR1cm4gR2gucmVzb2x2ZSh2b2lkIDApfXBpcGUoZSl7aWYodGhpcy5fYnlwYXNzV2ViQXVkaW8pdGhyb3cgbmV3IEN5KFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiQ2FuIG5vdCBwcm9jZXNzIEF1ZGlvVHJhY2sgd2hlbiBieXBhc3NXZWJBdWRpbyBzZXQgdG8gdHJ1ZS5cIik7aWYodGhpcy5wcm9jZXNzb3I9PT1lKXJldHVybiBlO2lmKGUuX3NvdXJjZSl0aHJvdyBuZXcgQ3koUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJQcm9jZXNzb3IgXCIuY29uY2F0KGUubmFtZSxcIiBhbHJlYWR5IHBpcGVkLCBwbGVhc2UgY2FsbCB1bnBpcGUgYmVmb3JlaGFuZC5cIikpO3JldHVybiB0aGlzLnVucGlwZSgpLHRoaXMucHJvY2Vzc29yPWUsdGhpcy5wcm9jZXNzb3IuX3NvdXJjZT10aGlzLGUudXBkYXRlSW5wdXQoe3RyYWNrOnRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2ssbm9kZTp0aGlzLl9zb3VyY2UucHJvY2Vzc1NvdXJjZU5vZGUsY29udGV4dDp0aGlzLnByb2Nlc3NvckNvbnRleHR9KSxlfXVucGlwZSgpe3ZhciBlO2lmKCF0aGlzLnByb2Nlc3NvcilyZXR1cm47Y29uc3QgdD10aGlzLnByb2Nlc3NvcjtudWxsPT09KGU9dGhpcy5fc291cmNlLnByb2Nlc3NTb3VyY2VOb2RlKXx8dm9pZCAwPT09ZXx8ZS5kaXNjb25uZWN0KCksdGhpcy5wcm9jZXNzb3IuX3NvdXJjZT0hMSx0aGlzLnByb2Nlc3Nvcj12b2lkIDAsdC5yZXNldCgpfWJpbmRQcm9jZXNzb3JEZXN0aW5hdGlvbkV2ZW50cyhlKXtlLm9uKERMLk9OX1RSQUNLLChhc3luYyBlPT57ZT9lIT09dGhpcy5fbWVkaWFTdHJlYW1UcmFjayYmKHRoaXMuX21lZGlhU3RyZWFtVHJhY2s9ZSx0aGlzLl91cGRhdGVQbGF5ZXJTb3VyY2UoITEpLHRoaXMuX3NvdXJjZS5wcm9jZXNzZWROb2RlPXRoaXMuX3NvdXJjZS5jcmVhdGVNZWRpYVN0cmVhbVNvdXJjZU5vZGUoZSksYXdhaXQgJHkodGhpcyxmTC5ORUVEX1JFUExBQ0VfVFJBQ0ssdGhpcykpOnRoaXMuX21lZGlhU3RyZWFtVHJhY2shPT10aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrJiYodGhpcy5fbWVkaWFTdHJlYW1UcmFjaz10aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrLHRoaXMuX3VwZGF0ZVBsYXllclNvdXJjZSgpLGF3YWl0ICR5KHRoaXMsZkwuTkVFRF9SRVBMQUNFX1RSQUNLLHRoaXMpKX0pKSxlLm9uKERMLk9OX05PREUsKGU9Pnt0aGlzLl9zb3VyY2UucHJvY2Vzc2VkTm9kZT1lfSkpfXVuYmluZFByb2Nlc3NvckRlc3RpbmF0aW9uRXZlbnRzKGUpe2UucmVtb3ZlQWxsTGlzdGVuZXJzKERMLk9OX1RSQUNLKSxlLnJlbW92ZUFsbExpc3RlbmVycyhETC5PTl9OT0RFKX1iaW5kUHJvY2Vzc29yQ29udGV4dEV2ZW50cyhlKXtlLm9uKFBMLlJFUVVFU1RfQ09OU1RSQUlOVFMsKGFzeW5jIGU9PntlKHRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suZ2V0U2V0dGluZ3MoKSl9KSl9dW5iaW5kUHJvY2Vzc29yQ29udGV4dEV2ZW50cyhlKXtlLnJlbW92ZUFsbExpc3RlbmVycyhQTC5SRVFVRVNUX0NPTlNUUkFJTlRTKX1pbml0V2ViQXVkaW8oKXtyZXR1cm4gdGhpcy5fdHJhY2tTb3VyY2UgaW5zdGFuY2VvZiBJayYmKHRoaXMuX3RyYWNrU291cmNlPW5ldyBlayh0aGlzLl9tZWRpYVN0cmVhbVRyYWNrLCExLHRoaXMuX2dldE9yaWdpblZvbHVtZUxldmVsP3RoaXMuX21lZGlhU3RyZWFtVHJhY2s6dm9pZCAwKSksdGhpcy5fdHJhY2tTb3VyY2V9aW5pdFByb2Nlc3Nvcigpe2NvbnN0IGU9bmV3IENrKHRoaXMuX3NvdXJjZS5jb250ZXh0LHRoaXMuZ2V0VHJhY2tJZCgpLFwibG9jYWxcIiksdD1uZXcgUmsoZSk7cmV0dXJuIHRoaXMuX3Byb2Nlc3NvckNvbnRleHQ9ZSx0aGlzLl9wcm9jZXNzb3JEZXN0aW5hdGlvbj10LHRoaXMuYmluZFByb2Nlc3NvckNvbnRleHRFdmVudHMoZSksdGhpcy5iaW5kUHJvY2Vzc29yRGVzdGluYXRpb25FdmVudHModCksdGhpcy5fc291cmNlLm9uKHlMLlVQREFURV9TT1VSQ0UsKCgpPT57dGhpcy5wcm9jZXNzb3ImJnRoaXMucHJvY2Vzc29yLnVwZGF0ZUlucHV0KHtub2RlOnRoaXMuX3NvdXJjZS5wcm9jZXNzU291cmNlTm9kZSxjb250ZXh0OmV9KX0pKSx0aGlzLl91c2VBdWRpb0VsZW1lbnQmJih0aGlzLl91c2VBdWRpb0VsZW1lbnQ9ITEsdGhpcy5pc1BsYXlpbmcmJihtay5zdG9wKHRoaXMuZ2V0VHJhY2tJZCgpKSx0aGlzLl9zb3VyY2UucGxheSgpKSwkeSh0aGlzLGZMLk5FRURfUkVQTEFDRV9NSVhJTkdfVFJBQ0ssdGhpcykudGhlbigoKCk9PntmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHJlcGxhY2UgZnJvbSBvcmlnaW4gdHJhY2sgdG8gd2ViIGF1ZGlvIHRyYWNrIHN1Y2Nlc3NcIikpfSkpLmNhdGNoKChlPT57ZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHJlcGxhY2UgZnJvbSBvcmlnaW4gdHJhY2sgdG8gd2ViIGF1ZGlvIHRyYWNrIGZhaWxlZFwiKSxlKX0pKSkse3Byb2Nlc3NvckNvbnRleHQ6ZSxwcm9jZXNzb3JEZXN0aW5hdGlvbjp0fX19KS5wcm90b3R5cGUsXCJzZXRWb2x1bWVcIixbUGtdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoWGsucHJvdG90eXBlLFwic2V0Vm9sdW1lXCIpLFhrLnByb3RvdHlwZSksRkwoWGsucHJvdG90eXBlLFwic2V0UGxheWJhY2tEZXZpY2VcIixbTGssa2tdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoWGsucHJvdG90eXBlLFwic2V0UGxheWJhY2tEZXZpY2VcIiksWGsucHJvdG90eXBlKSxGTChYay5wcm90b3R5cGUsXCJzZXRFbmFibGVkXCIsW01rLFVrLHhrXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFhrLnByb3RvdHlwZSxcInNldEVuYWJsZWRcIiksWGsucHJvdG90eXBlKSxGTChYay5wcm90b3R5cGUsXCJzZXRNdXRlZFwiLFtWayxGayxCa10sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihYay5wcm90b3R5cGUsXCJzZXRNdXRlZFwiKSxYay5wcm90b3R5cGUpLEZMKFhrLnByb3RvdHlwZSxcImdldFN0YXRzXCIsW2prXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFhrLnByb3RvdHlwZSxcImdldFN0YXRzXCIpLFhrLnByb3RvdHlwZSksRkwoWGsucHJvdG90eXBlLFwic2V0QXVkaW9GcmFtZUNhbGxiYWNrXCIsW0drXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFhrLnByb3RvdHlwZSxcInNldEF1ZGlvRnJhbWVDYWxsYmFja1wiKSxYay5wcm90b3R5cGUpLEZMKFhrLnByb3RvdHlwZSxcInBsYXlcIixbV2ssSGtdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoWGsucHJvdG90eXBlLFwicGxheVwiKSxYay5wcm90b3R5cGUpLEZMKFhrLnByb3RvdHlwZSxcInN0b3BcIixbS2ssWWtdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoWGsucHJvdG90eXBlLFwic3RvcFwiKSxYay5wcm90b3R5cGUpLEZMKFhrLnByb3RvdHlwZSxcImNsb3NlXCIsW3FrXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFhrLnByb3RvdHlwZSxcImNsb3NlXCIpLFhrLnByb3RvdHlwZSksRkwoWGsucHJvdG90eXBlLFwicGlwZVwiLFt6a10sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihYay5wcm90b3R5cGUsXCJwaXBlXCIpLFhrLnByb3RvdHlwZSksRkwoWGsucHJvdG90eXBlLFwidW5waXBlXCIsW0prXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFhrLnByb3RvdHlwZSxcInVucGlwZVwiKSxYay5wcm90b3R5cGUpLFhrKSxTTT0oUWs9SWIoe2FyZ3NNYXA6KGUsdCk9PltlLmdldFRyYWNrSWQoKSx0XX0pLFprPVRrKCksJGs9REEoXCJNaWNyb3Bob25lQXVkaW9UcmFja1wiLFwiX2VuYWJsZWRNdXRleFwiKSxlTT1JYih7YXJnc01hcDooZSx0LGkpPT5bZS5nZXRUcmFja0lkKCksdCxpXX0pLHRNPVRrKCksaU09SWIoe2FyZ3NNYXA6ZT0+W2UuZ2V0VHJhY2tJZCgpXX0pLEZMKChuTT1jbGFzcyBleHRlbmRzIFRNe2dldCBfX2NsYXNzTmFtZV9fKCl7cmV0dXJuXCJNaWNyb3Bob25lQXVkaW9UcmFja1wifWNvbnN0cnVjdG9yKGUsdCxpLG4pe3N1cGVyKGUsdC5lbmNvZGVyQ29uZmlnP3BMKHQuZW5jb2RlckNvbmZpZyk6e30sbixYQShcIkdFVF9WT0xVTUVfT0ZfTVVURURfQVVESU9fVFJBQ0tcIikpLEJMKHRoaXMsXCJfY29uZmlnXCIsdm9pZCAwKSxCTCh0aGlzLFwiX2RldmljZU5hbWVcIixcImRlZmF1bHRcIiksQkwodGhpcyxcIl9jb25zdHJhaW50c1wiLHZvaWQgMCksQkwodGhpcyxcIl9vcmlnaW5hbENvbnN0cmFpbnRzXCIsdm9pZCAwKSxCTCh0aGlzLFwiX2VuYWJsZWRcIiwhMCksdGhpcy5fY29uZmlnPXQsdGhpcy5fY29uc3RyYWludHM9aSx0aGlzLl9vcmlnaW5hbENvbnN0cmFpbnRzPWksdGhpcy5fZGV2aWNlTmFtZT1lLmxhYmVsLFwiYm9vbGVhblwiPT10eXBlb2YgdC5ieXBhc3NXZWJBdWRpbyYmKHRoaXMuX2J5cGFzc1dlYkF1ZGlvPXQuYnlwYXNzV2ViQXVkaW8pLChjeSgpfHxkeSgpKSYmcUwuYmluZEludGVycnVwdERldGVjdG9yVHJhY2sodGhpcyl9YXN5bmMgc2V0RGV2aWNlKGUpe2lmKGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzdGFydCBzZXQgZGV2aWNlIHRvIFwiKS5jb25jYXQoZSkpLHRoaXMuX2VuYWJsZWQpdHJ5e2NvbnN0IHQ9YXdhaXQgdWsuZ2V0RGV2aWNlQnlJZChlKSxpPXt9O2kuYXVkaW89R0woe30sdGhpcy5fY29uc3RyYWludHMpLGkuYXVkaW8uZGV2aWNlSWQ9e2V4YWN0OmV9LHRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suc3RvcCgpO2xldCBuPW51bGw7dHJ5e249YXdhaXQgYWsoaSx0aGlzLmdldFRyYWNrSWQoKSl9Y2F0Y2goZSl7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzZXREZXZpY2UgZmFpbGVkXCIpLGUudG9TdHJpbmcoKSksbj1hd2FpdCBhayh7YXVkaW86dGhpcy5fY29uc3RyYWludHN9LHRoaXMuZ2V0VHJhY2tJZCgpKSxhd2FpdCB0aGlzLl91cGRhdGVPcmlnaW5NZWRpYVN0cmVhbVRyYWNrKG4uZ2V0QXVkaW9UcmFja3MoKVswXSwhMSksZX1hd2FpdCB0aGlzLl91cGRhdGVPcmlnaW5NZWRpYVN0cmVhbVRyYWNrKG4uZ2V0QXVkaW9UcmFja3MoKVswXSwhMSksdGhpcy5fZGV2aWNlTmFtZT10LmxhYmVsLHRoaXMuX2NvbmZpZy5taWNyb3Bob25lSWQ9ZSx0aGlzLl9jb25zdHJhaW50cy5kZXZpY2VJZD17ZXhhY3Q6ZX19Y2F0Y2goZSl7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzZXREZXZpY2UgZXJyb3JcIiksZS50b1N0cmluZygpKSxlfWVsc2UgdHJ5e2NvbnN0IHQ9YXdhaXQgdWsuZ2V0RGV2aWNlQnlJZChlKTt0aGlzLl9kZXZpY2VOYW1lPXQubGFiZWwsdGhpcy5fY29uZmlnLm1pY3JvcGhvbmVJZD1lLHRoaXMuX2NvbnN0cmFpbnRzLmRldmljZUlkPXtleGFjdDplfX1jYXRjaChlKXt0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHNldERldmljZSBlcnJvclwiKSxlLnRvU3RyaW5nKCkpLGV9ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHNldCBkZXZpY2UgdG8gXCIpLmNvbmNhdChlLFwiIHN1Y2Nlc3NcIikpfWFzeW5jIHNldEVuYWJsZWQoZSx0LGkpe2lmKHQpcmV0dXJuIGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc2V0RW5hYmxlZCBmYWxzZSAoZG8gbm90IGNsb3NlIG1pY3JvcGhvbmUpXCIpKSxhd2FpdCBzdXBlci5fc2V0RW5hYmxlZChlKTtpZighaSl7aWYoZT09PXRoaXMuX2VuYWJsZWQpcmV0dXJuO3RoaXMuc3RhdGVDaGVjayhcImVuYWJsZWRcIixlKX1pZihmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc3RhcnQgc2V0RW5hYmxlZFwiKSxlKSxYQShcIkFVVE9fUkVTRVRfQVVESU9fUk9VVEVcIikmJigkdigpfHx1eSgpKSl7Y29uc3QgdD1uYXZpZ2F0b3IuYXVkaW9TZXNzaW9uO3QmJihlfHwodC50eXBlPVwicGxheWJhY2tcIiksdC50eXBlPVwiYXV0b1wiKX1pZighZSl7dmFyIG47dGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5vbmVuZGVkPW51bGwsdGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5zdG9wKCksbnVsbD09PShuPXRoaXMuX3NvdXJjZS5jbG9uZWRUcmFjayl8fHZvaWQgMD09PW58fG4uc3RvcCgpLGl8fCh0aGlzLl9lbmFibGVkPSExKTt0cnl7YXdhaXQgJHkodGhpcyxmTC5ORUVEX0RJU0FCTEVfVFJBQ0ssdGhpcyl9Y2F0Y2goZSl7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzZXRFbmFibGVkIGZhbHNlIGZhaWxlZFwiKSxlLnRvU3RyaW5nKCkpLGV9cmV0dXJufWNvbnN0IHI9R0woe30sdGhpcy5fY29uc3RyYWludHMpLG89dWsuc2VhcmNoRGV2aWNlSWRCeU5hbWUodGhpcy5fZGV2aWNlTmFtZSk7byYmIXIuZGV2aWNlSWQmJihyLmRldmljZUlkPW8pO3RyeXtpfHwodGhpcy5fZW5hYmxlZD0hMCk7Y29uc3QgZT1hd2FpdCBhayh7YXVkaW86dGhpcy5fY29uc3RyYWludHN9LHRoaXMuZ2V0VHJhY2tJZCgpKTthd2FpdCB0aGlzLl91cGRhdGVPcmlnaW5NZWRpYVN0cmVhbVRyYWNrKGUuZ2V0QXVkaW9UcmFja3MoKVswXSwhMSksYXdhaXQgJHkodGhpcyxmTC5ORUVEX0VOQUJMRV9UUkFDSyx0aGlzKX1jYXRjaChlKXt0aHJvdyBpfHwodGhpcy5fZW5hYmxlZD0hMSksZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzZXRFbmFibGVkIHRydWUgZmFpbGVkXCIpLGUudG9TdHJpbmcoKSksZX1mYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc2V0RW5hYmxlZCBzdWNjZXNzXCIpKX1jbG9zZSgpe3N1cGVyLmNsb3NlKCksKGN5KCl8fGR5KCkpJiZxTC51bmJpbmRJbnRlcnJ1cHREZXRlY3RvclRyYWNrKHRoaXMpfW9uVHJhY2tFbmRlZCgpe2lmKCgkdigpfHx1eSgpKSYmdGhpcy5fZW5hYmxlZCYmIXRoaXMuX2lzQ2xvc2VkJiZxTC5kdXJpbmdJbnRlcnJ1cHRpb24pe2NvbnN0IGU9YXN5bmMoKT0+e3FMLm9mZih0TC5JT1NfSU5URVJSVVBUSU9OX0VORCxlKSx0aGlzLl9lbmFibGVkJiYhdGhpcy5faXNDbG9zZWQmJihmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHRyeSBjYXB0dXJlIG1pY3JvcGhvbmUgbWVkaWEgZGV2aWNlIGZvciBpbnRlcnJ1cHRlZCBpT1MgZGV2aWNlLlwiKSksYXdhaXQgdGhpcy5zZXRFbmFibGVkKCExKSxhd2FpdCB0aGlzLnNldEVuYWJsZWQoITApKX07cUwub24odEwuSU9TX0lOVEVSUlVQVElPTl9FTkQsZSl9ZWxzZSBmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHRyYWNrIGVuZGVkXCIpKSx0aGlzLnNhZmVFbWl0KENMLlRSQUNLX0VOREVEKX1hc3luYyByZW5ld01lZGlhU3RyZWFtVHJhY2soZSl7Y29uc3QgdD1lfHx0aGlzLl9jb25zdHJhaW50cyxpPXVrLnNlYXJjaERldmljZUlkQnlOYW1lKHRoaXMuX2RldmljZU5hbWUpO2lmKGkmJiF0LmRldmljZUlkJiYodC5kZXZpY2VJZD1pKSx0aGlzLl9jb25zdHJhaW50cz10LHRoaXMuX2VuYWJsZWQpe3RoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suc3RvcCgpO2NvbnN0IGU9YXdhaXQgYWsoe2F1ZGlvOnRoaXMuX2NvbnN0cmFpbnRzfSx0aGlzLmdldFRyYWNrSWQoKSk7YXdhaXQgdGhpcy5fdXBkYXRlT3JpZ2luTWVkaWFTdHJlYW1UcmFjayhlLmdldEF1ZGlvVHJhY2tzKClbMF0sITApfX1iaW5kUHJvY2Vzc29yQ29udGV4dEV2ZW50cyhlKXtzdXBlci5iaW5kUHJvY2Vzc29yQ29udGV4dEV2ZW50cyhlKSxlLm9uKFBMLlJFUVVFU1RfVVBEQVRFX0NPTlNUUkFJTlRTLChhc3luYyhlLHQsaSk9Pnt0cnl7Y29uc3QgaT1PYmplY3QuYXNzaWduKHt9LHRoaXMuX29yaWdpbmFsQ29uc3RyYWludHMsLi4uZSk7YXdhaXQgdGhpcy5yZW5ld01lZGlhU3RyZWFtVHJhY2soaSksdCgpfWNhdGNoKGUpe2koZSl9fSkpfXVuYmluZFByb2Nlc3NvckNvbnRleHRFdmVudHMoZSl7c3VwZXIudW5iaW5kUHJvY2Vzc29yQ29udGV4dEV2ZW50cyhlKSxlLnJlbW92ZUFsbExpc3RlbmVycyhQTC5SRVFVRVNUX1VQREFURV9DT05TVFJBSU5UUyl9fSkucHJvdG90eXBlLFwic2V0RGV2aWNlXCIsW1FrLFprXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG5NLnByb3RvdHlwZSxcInNldERldmljZVwiKSxuTS5wcm90b3R5cGUpLEZMKG5NLnByb3RvdHlwZSxcInNldEVuYWJsZWRcIixbJGssZU0sdE1dLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iobk0ucHJvdG90eXBlLFwic2V0RW5hYmxlZFwiKSxuTS5wcm90b3R5cGUpLEZMKG5NLnByb3RvdHlwZSxcImNsb3NlXCIsW2lNXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG5NLnByb3RvdHlwZSxcImNsb3NlXCIpLG5NLnByb3RvdHlwZSksbk0pLGdNPShyTT1JYih7YXJnc01hcDooZSx0KT0+W2UuZ2V0VHJhY2tJZCgpLHQsZS5kdXJhdGlvbl19KSxvTT1UaygpLHNNPUliKHthcmdzTWFwOmU9PltlLmdldFRyYWNrSWQoKV19KSxhTT1UaygpLGNNPUliKHthcmdzTWFwOmU9PltlLmdldFRyYWNrSWQoKV19KSxkTT1UaygpLGxNPUliKHthcmdzTWFwOmU9PltlLmdldFRyYWNrSWQoKV19KSx1TT1UaygpLGhNPUliKHthcmdzTWFwOmU9PltlLmdldFRyYWNrSWQoKV19KSxwTT1UaygpLF9NPUliKHthcmdzTWFwOmU9PltlLmdldFRyYWNrSWQoKV19KSxFTT1JYih7YXJnc01hcDplPT5bZS5nZXRUcmFja0lkKCldfSksZk09VGsoKSxGTCgobU09Y2xhc3MgZXh0ZW5kcyBUTXtnZXQgX19jbGFzc05hbWVfXygpe3JldHVyblwiQnVmZmVyU291cmNlQXVkaW9UcmFja1wifWNvbnN0cnVjdG9yKGUsdCxpLG4pe3N1cGVyKHQuY3JlYXRlT3V0cHV0VHJhY2soKSxpLG4pLEJMKHRoaXMsXCJzb3VyY2VcIix2b2lkIDApLEJMKHRoaXMsXCJfYnVmZmVyU291cmNlXCIsdm9pZCAwKSx0aGlzLl91c2VBdWRpb0VsZW1lbnQ9ITEsdGhpcy5zb3VyY2U9ZSx0aGlzLl9idWZmZXJTb3VyY2U9dCx0aGlzLl9idWZmZXJTb3VyY2Uub24oeUwuQVVESU9fU09VUkNFX1NUQVRFX0NIQU5HRSwoZT0+e3RoaXMuc2FmZUVtaXQoQ0wuU09VUkNFX1NUQVRFX0NIQU5HRSxlKX0pKTt0cnl7dGhpcy5fbWVkaWFTdHJlYW1UcmFjaz10aGlzLl9zb3VyY2UuY3JlYXRlT3V0cHV0VHJhY2soKX1jYXRjaChlKXt9fWdldCBjdXJyZW50U3RhdGUoKXtyZXR1cm4gdGhpcy5fYnVmZmVyU291cmNlLmN1cnJlbnRTdGF0ZX1nZXQgZHVyYXRpb24oKXtyZXR1cm4gdGhpcy5fYnVmZmVyU291cmNlLmR1cmF0aW9ufWdldCBwbGF5YmFja1NwZWVkKCl7cmV0dXJuIHRoaXMuX2J1ZmZlclNvdXJjZS5wbGF5YmFja1NwZWVkfWdldEN1cnJlbnRUaW1lKCl7cmV0dXJuIHRoaXMuX2J1ZmZlclNvdXJjZS5jdXJyZW50VGltZX1zdGFydFByb2Nlc3NBdWRpb0J1ZmZlcihlKXtlJiZ0aGlzLl9idWZmZXJTb3VyY2UudXBkYXRlT3B0aW9ucyhlKSx0aGlzLl9idWZmZXJTb3VyY2Uuc3RhcnRQcm9jZXNzQXVkaW9CdWZmZXIoKX1wYXVzZVByb2Nlc3NBdWRpb0J1ZmZlcigpe3RoaXMuX2J1ZmZlclNvdXJjZS5wYXVzZVByb2Nlc3NBdWRpb0J1ZmZlcigpfXNlZWtBdWRpb0J1ZmZlcihlKXt0aGlzLl9idWZmZXJTb3VyY2Uuc2Vla0F1ZGlvQnVmZmVyKGUpfXJlc3VtZVByb2Nlc3NBdWRpb0J1ZmZlcigpe3RoaXMuX2J1ZmZlclNvdXJjZS5yZXN1bWVQcm9jZXNzQXVkaW9CdWZmZXIoKX1zdG9wUHJvY2Vzc0F1ZGlvQnVmZmVyKCl7dGhpcy5fYnVmZmVyU291cmNlLnN0b3BQcm9jZXNzQXVkaW9CdWZmZXIoKX1jbG9zZSgpe3RoaXMuc291cmNlPW51bGwsdGhpcy5fYnVmZmVyU291cmNlLmRlc3Ryb3koKSxzdXBlci5jbG9zZSgpfXNldEF1ZGlvQnVmZmVyUGxheWJhY2tTcGVlZChlKXt5eShlLFwic3BlZWRcIiwwKSx0aGlzLl9idWZmZXJTb3VyY2Uuc2V0QXVkaW9CdWZmZXJQbGF5YmFja1NwZWVkKGUpfX0pLnByb3RvdHlwZSxcInN0YXJ0UHJvY2Vzc0F1ZGlvQnVmZmVyXCIsW3JNLG9NXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG1NLnByb3RvdHlwZSxcInN0YXJ0UHJvY2Vzc0F1ZGlvQnVmZmVyXCIpLG1NLnByb3RvdHlwZSksRkwobU0ucHJvdG90eXBlLFwicGF1c2VQcm9jZXNzQXVkaW9CdWZmZXJcIixbc00sYU1dLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobU0ucHJvdG90eXBlLFwicGF1c2VQcm9jZXNzQXVkaW9CdWZmZXJcIiksbU0ucHJvdG90eXBlKSxGTChtTS5wcm90b3R5cGUsXCJzZWVrQXVkaW9CdWZmZXJcIixbY00sZE1dLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobU0ucHJvdG90eXBlLFwic2Vla0F1ZGlvQnVmZmVyXCIpLG1NLnByb3RvdHlwZSksRkwobU0ucHJvdG90eXBlLFwicmVzdW1lUHJvY2Vzc0F1ZGlvQnVmZmVyXCIsW2xNLHVNXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG1NLnByb3RvdHlwZSxcInJlc3VtZVByb2Nlc3NBdWRpb0J1ZmZlclwiKSxtTS5wcm90b3R5cGUpLEZMKG1NLnByb3RvdHlwZSxcInN0b3BQcm9jZXNzQXVkaW9CdWZmZXJcIixbaE0scE1dLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobU0ucHJvdG90eXBlLFwic3RvcFByb2Nlc3NBdWRpb0J1ZmZlclwiKSxtTS5wcm90b3R5cGUpLEZMKG1NLnByb3RvdHlwZSxcImNsb3NlXCIsW19NXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG1NLnByb3RvdHlwZSxcImNsb3NlXCIpLG1NLnByb3RvdHlwZSksRkwobU0ucHJvdG90eXBlLFwic2V0QXVkaW9CdWZmZXJQbGF5YmFja1NwZWVkXCIsW0VNLGZNXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG1NLnByb3RvdHlwZSxcInNldEF1ZGlvQnVmZmVyUGxheWJhY2tTcGVlZFwiKSxtTS5wcm90b3R5cGUpLG1NKTtjbGFzcyBSTSBleHRlbmRzIFRNe2dldCBfX2NsYXNzTmFtZV9fKCl7cmV0dXJuXCJNaXhpbmdBdWRpb1RyYWNrXCJ9Z2V0IGlzQWN0aXZlKCl7Zm9yKGNvbnN0IGUgb2YgdGhpcy50cmFja0xpc3QpaWYoZS5fZW5hYmxlZCYmIWUuX2lzQ2xvc2VkJiYhZS5tdXRlZClyZXR1cm4hMDtyZXR1cm4hMX1jb25zdHJ1Y3Rvcigpe2NvbnN0IGU9ekwoKS5jcmVhdGVNZWRpYVN0cmVhbURlc3RpbmF0aW9uKCk7c3VwZXIoZS5zdHJlYW0uZ2V0QXVkaW9UcmFja3MoKVswXSx2b2lkIDAsVEEoOCxcInRyYWNrLW1peC1cIikpLEJMKHRoaXMsXCJ0cmFja0xpc3RcIix2b2lkIDApLEJMKHRoaXMsXCJkZXN0Tm9kZVwiLHZvaWQgMCksdGhpcy5fdXNlQXVkaW9FbGVtZW50PSExO3RyeXt0aGlzLl9tZWRpYVN0cmVhbVRyYWNrPXRoaXMuX3NvdXJjZS5jcmVhdGVPdXRwdXRUcmFjaygpfWNhdGNoKGUpe310aGlzLmRlc3ROb2RlPWUsdGhpcy50cmFja0xpc3Q9W119aGFzQXVkaW9UcmFjayhlKXtyZXR1cm4tMSE9PXRoaXMudHJhY2tMaXN0LmluZGV4T2YoZSl9YWRkQXVkaW9UcmFjayhlKXstMT09PXRoaXMudHJhY2tMaXN0LmluZGV4T2YoZSk/KGZiLmRlYnVnKFwiYWRkIFwiLmNvbmNhdChlLmdldFRyYWNrSWQoKSxcIiB0byBtaXhpbmcgdHJhY2tcIikpLGUuX3NvdXJjZS5vdXRwdXROb2RlLmNvbm5lY3QodGhpcy5kZXN0Tm9kZSksdGhpcy50cmFja0xpc3QucHVzaChlKSx0aGlzLnVwZGF0ZUVuY29kZXJDb25maWcoKSk6ZmIuZGVidWcoXCJ0cmFjayBcIi5jb25jYXQoZS5nZXRUcmFja0lkKCksXCIgaXMgYWxyZWFkeSBhZGRlZFwiKSl9cmVtb3ZlQXVkaW9UcmFjayhlKXtpZigtMSE9PXRoaXMudHJhY2tMaXN0LmluZGV4T2YoZSkpe2ZiLmRlYnVnKFwicmVtb3ZlIFwiLmNvbmNhdChlLmdldFRyYWNrSWQoKSxcIiBmcm9tIG1peGluZyB0cmFja1wiKSk7dHJ5e2UuX3NvdXJjZS5vdXRwdXROb2RlLmRpc2Nvbm5lY3QodGhpcy5kZXN0Tm9kZSl9Y2F0Y2goZSl7fW5BKHRoaXMudHJhY2tMaXN0LGUpLHRoaXMudXBkYXRlRW5jb2RlckNvbmZpZygpfX11cGRhdGVFbmNvZGVyQ29uZmlnKCl7Y29uc3QgZT17fTt0aGlzLnRyYWNrTGlzdC5mb3JFYWNoKCh0PT57dC5fZW5jb2RlckNvbmZpZyYmKCh0Ll9lbmNvZGVyQ29uZmlnLmJpdHJhdGV8fDApPihlLmJpdHJhdGV8fDApJiYoZS5iaXRyYXRlPXQuX2VuY29kZXJDb25maWcuYml0cmF0ZSksKHQuX2VuY29kZXJDb25maWcuc2FtcGxlUmF0ZXx8MCk+KGUuc2FtcGxlUmF0ZXx8MCkmJihlLnNhbXBsZVJhdGU9dC5fZW5jb2RlckNvbmZpZy5zYW1wbGVSYXRlKSwodC5fZW5jb2RlckNvbmZpZy5zYW1wbGVTaXplfHwwKT4oZS5zYW1wbGVTaXplfHwwKSYmKGUuc2FtcGxlU2l6ZT10Ll9lbmNvZGVyQ29uZmlnLnNhbXBsZVNpemUpLHQuX2VuY29kZXJDb25maWcuc3RlcmVvJiYoZS5zdGVyZW89ITApKX0pKSx0aGlzLl9lbmNvZGVyQ29uZmlnPWV9X3VwZGF0ZVJ0cFRyYW5zY2VpdmVyKGUpe3RoaXMuX3J0cFRyYW5zY2VpdmVyIT09ZSYmKHRoaXMuX3J0cFRyYW5zY2VpdmVyPWUsdGhpcy50cmFja0xpc3QuZm9yRWFjaCgodD0+e3QgaW5zdGFuY2VvZiBSTT90LmVtaXQoUkwuVFJBTlNDRUlWRVJfVVBEQVRFRCxlKTp0Ll91cGRhdGVSdHBUcmFuc2NlaXZlcihlKX0pKSl9fWNsYXNzIENNIGV4dGVuZHMgJEx7c2V0IGN1cnJlbnRTdGF0ZShlKXtlIT09dGhpcy5fY3VycmVudFN0YXRlJiYodGhpcy5fY3VycmVudFN0YXRlPWUsdGhpcy5zYWZlRW1pdCh5TC5BVURJT19TT1VSQ0VfU1RBVEVfQ0hBTkdFLHRoaXMuX2N1cnJlbnRTdGF0ZSkpfWdldCBjdXJyZW50U3RhdGUoKXtyZXR1cm4gdGhpcy5fY3VycmVudFN0YXRlfWNvbnN0cnVjdG9yKGUpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fTtzdXBlcigpLEJMKHRoaXMsXCJhdWRpb0J1ZmZlclwiLHZvaWQgMCksQkwodGhpcyxcInNvdXJjZU5vZGVcIix2b2lkIDApLEJMKHRoaXMsXCJzdGFydFBsYXlUaW1lXCIsMCksQkwodGhpcyxcInN0YXJ0UGxheU9mZnNldFwiLDApLEJMKHRoaXMsXCJwYXVzZVBsYXlUaW1lXCIsMCksQkwodGhpcyxcIm9wdGlvbnNcIix2b2lkIDApLEJMKHRoaXMsXCJjdXJyZW50TG9vcENvdW50XCIsMCksQkwodGhpcyxcImN1cnJlbnRQbGF5YmFja1NwZWVkXCIsMTAwKSxCTCh0aGlzLFwiX2N1cnJlbnRTdGF0ZVwiLFwic3RvcHBlZFwiKSx0aGlzLmF1ZGlvQnVmZmVyPWUsdGhpcy5vcHRpb25zPXQsdGhpcy5zdGFydFBsYXlPZmZzZXQ9dGhpcy5vcHRpb25zLnN0YXJ0UGxheVRpbWV8fDB9Y3JlYXRlV2ViQXVkaW9EaWFncmFtKCl7cmV0dXJuIHRoaXMuY29udGV4dC5jcmVhdGVHYWluKCl9Z2V0IGR1cmF0aW9uKCl7cmV0dXJuIHRoaXMuYXVkaW9CdWZmZXI/dGhpcy5hdWRpb0J1ZmZlci5kdXJhdGlvbjowfWdldCBwbGF5YmFja1NwZWVkKCl7cmV0dXJuIHRoaXMuY3VycmVudFBsYXliYWNrU3BlZWR9Z2V0IGN1cnJlbnRUaW1lKCl7cmV0dXJuIHRoaXMuYXVkaW9CdWZmZXI/XCJzdG9wcGVkXCI9PT10aGlzLmN1cnJlbnRTdGF0ZT8wOlwicGF1c2VkXCI9PT10aGlzLmN1cnJlbnRTdGF0ZT90aGlzLnBhdXNlUGxheVRpbWU6KCh0aGlzLmNvbnRleHQuY3VycmVudFRpbWUtdGhpcy5zdGFydFBsYXlUaW1lKSoodGhpcy5wbGF5YmFja1NwZWVkLzEwMCkrdGhpcy5zdGFydFBsYXlPZmZzZXQpJXRoaXMuYXVkaW9CdWZmZXIuZHVyYXRpb246MH11cGRhdGVPcHRpb25zKGUpe1wic3RvcHBlZFwiPT09dGhpcy5jdXJyZW50U3RhdGU/KHRoaXMub3B0aW9ucz1lLHRoaXMuc3RhcnRQbGF5T2Zmc2V0PXRoaXMub3B0aW9ucy5zdGFydFBsYXlUaW1lfHwwKTpmYi53YXJuaW5nKFwiY2FuIG5vdCBzZXQgYXVkaW8gc291cmNlIG9wdGlvbnNcIil9c3RhcnRQcm9jZXNzQXVkaW9CdWZmZXIoKXt0aGlzLnNvdXJjZU5vZGUmJnRoaXMuc3RvcFByb2Nlc3NBdWRpb0J1ZmZlcigpLHRoaXMuc291cmNlTm9kZT10aGlzLmNyZWF0ZVNvdXJjZU5vZGUoKSx0aGlzLnN0YXJ0U291cmNlTm9kZSgpLHRoaXMuY3VycmVudFN0YXRlPVwicGxheWluZ1wifXBhdXNlUHJvY2Vzc0F1ZGlvQnVmZmVyKCl7dGhpcy5zb3VyY2VOb2RlJiZcInBsYXlpbmdcIj09PXRoaXMuY3VycmVudFN0YXRlJiYodGhpcy5wYXVzZVBsYXlUaW1lPXRoaXMuY3VycmVudFRpbWUsdGhpcy5zb3VyY2VOb2RlLm9uZW5kZWQ9bnVsbCx0aGlzLnNvdXJjZU5vZGUuc3RvcCgpLHRoaXMuc291cmNlTm9kZS5idWZmZXI9bnVsbCx0aGlzLnNvdXJjZU5vZGU9dGhpcy5jcmVhdGVTb3VyY2VOb2RlKCksdGhpcy5jdXJyZW50U3RhdGU9XCJwYXVzZWRcIil9c2Vla0F1ZGlvQnVmZmVyKGUpe3RoaXMuc291cmNlTm9kZSYmKHRoaXMuc291cmNlTm9kZS5vbmVuZGVkPW51bGwsXCJwbGF5aW5nXCI9PT10aGlzLmN1cnJlbnRTdGF0ZSYmdGhpcy5zb3VyY2VOb2RlLnN0b3AoKSx0aGlzLnNvdXJjZU5vZGU9dGhpcy5jcmVhdGVTb3VyY2VOb2RlKCksXCJwbGF5aW5nXCI9PT10aGlzLmN1cnJlbnRTdGF0ZT8odGhpcy5zdGFydFBsYXlPZmZzZXQ9ZSx0aGlzLnN0YXJ0U291cmNlTm9kZSgpKTpcInBhdXNlZFwiPT09dGhpcy5jdXJyZW50U3RhdGUmJih0aGlzLnBhdXNlUGxheVRpbWU9ZSkpfXJlc3VtZVByb2Nlc3NBdWRpb0J1ZmZlcigpe1wicGF1c2VkXCI9PT10aGlzLmN1cnJlbnRTdGF0ZSYmdGhpcy5zb3VyY2VOb2RlJiYodGhpcy5zdGFydFBsYXlPZmZzZXQ9dGhpcy5wYXVzZVBsYXlUaW1lLHRoaXMucGF1c2VQbGF5VGltZT0wLHRoaXMuc3RhcnRTb3VyY2VOb2RlKCksdGhpcy5jdXJyZW50U3RhdGU9XCJwbGF5aW5nXCIpfXN0b3BQcm9jZXNzQXVkaW9CdWZmZXIoKXtpZih0aGlzLnNvdXJjZU5vZGUpe3RoaXMuc291cmNlTm9kZS5vbmVuZGVkPW51bGw7dHJ5e3RoaXMuc291cmNlTm9kZS5zdG9wKCl9Y2F0Y2goZSl7fXRoaXMucmVzZXQoKX19ZGVzdHJveSgpe3RoaXMuYXVkaW9CdWZmZXI9bnVsbCxzdXBlci5kZXN0cm95KCl9c2V0QXVkaW9CdWZmZXJQbGF5YmFja1NwZWVkKGUpe3RoaXMuc291cmNlTm9kZSYmKFwicGxheWluZ1wiPT09dGhpcy5jdXJyZW50U3RhdGUmJih0aGlzLnN0YXJ0UGxheU9mZnNldD10aGlzLmN1cnJlbnRUaW1lLHRoaXMuc3RhcnRQbGF5VGltZT10aGlzLmNvbnRleHQuY3VycmVudFRpbWUpLHRoaXMuc291cmNlTm9kZS5wbGF5YmFja1JhdGUudmFsdWU9ZS8xMDApLHRoaXMuY3VycmVudFBsYXliYWNrU3BlZWQ9ZX1zdGFydFNvdXJjZU5vZGUoKXt0aGlzLnNvdXJjZU5vZGUmJnRoaXMuc291cmNlTm9kZS5idWZmZXImJih0aGlzLnNvdXJjZU5vZGUuc3RhcnQoMCx0aGlzLnN0YXJ0UGxheU9mZnNldCksdGhpcy5zdGFydFBsYXlUaW1lPXRoaXMuY29udGV4dC5jdXJyZW50VGltZSx0aGlzLnNvdXJjZU5vZGUub25lbmRlZD10aGlzLmhhbmRsZVNvdXJjZU5vZGVFbmRlZC5iaW5kKHRoaXMpKX1jcmVhdGVTb3VyY2VOb2RlKCl7Y29uc3QgZT10aGlzLmNvbnRleHQuY3JlYXRlQnVmZmVyU291cmNlKCk7cmV0dXJuIGUuYnVmZmVyPXRoaXMuYXVkaW9CdWZmZXIsZS5sb29wPSEhdGhpcy5vcHRpb25zLmxvb3AsZS5jb25uZWN0KHRoaXMub3V0cHV0Tm9kZSksZS5wbGF5YmFja1JhdGUudmFsdWU9dGhpcy5jdXJyZW50UGxheWJhY2tTcGVlZC8xMDAsZX1oYW5kbGVTb3VyY2VOb2RlRW5kZWQoKXtpZih0aGlzLmN1cnJlbnRMb29wQ291bnQrPTEsdGhpcy5vcHRpb25zLmN5Y2xlJiZ0aGlzLm9wdGlvbnMuY3ljbGU+dGhpcy5jdXJyZW50TG9vcENvdW50KXJldHVybiB0aGlzLnN0YXJ0UGxheU9mZnNldD0wLHRoaXMuc291cmNlTm9kZT12b2lkIDAsdm9pZCB0aGlzLnN0YXJ0UHJvY2Vzc0F1ZGlvQnVmZmVyKCk7dGhpcy5yZXNldCgpfXJlc2V0KCl7dGhpcy5zdGFydFBsYXlPZmZzZXQ9dGhpcy5vcHRpb25zLnN0YXJ0UGxheVRpbWV8fDAsdGhpcy5jdXJyZW50U3RhdGU9XCJzdG9wcGVkXCIsdGhpcy5zb3VyY2VOb2RlJiYodGhpcy5zb3VyY2VOb2RlLmRpc2Nvbm5lY3QoKSx0aGlzLnNvdXJjZU5vZGU9dm9pZCAwKSx0aGlzLmN1cnJlbnRMb29wQ291bnQ9MH19Y29uc3QgSU09bmV3IE1hcDtjbGFzcyB2TXtnZXQgcmVuZEZyYW1lUmF0ZSgpe2lmKHRoaXMucmVuZGVyU3RhdHMmJnRoaXMucmVuZGVyU3RhdHMuY3VyVHMhPT10aGlzLnJlbmRlclN0YXRzLmxhc3RUcyl7Y29uc3QgZT10aGlzLnJlbmRlclN0YXRzLmN1clRzLXRoaXMucmVuZGVyU3RhdHMubGFzdFRzLHQ9KHRoaXMucmVuZGVyU3RhdHMucmVuZGVyTnVtLXRoaXMucmVuZGVyU3RhdHMubGFzdFJlbmRlck51bSkvZTtyZXR1cm4gdGhpcy5yZW5kZXJTdGF0cy5sYXN0UmVuZGVyTnVtPXRoaXMucmVuZGVyU3RhdHMucmVuZGVyTnVtLHRoaXMucmVuZGVyU3RhdHMubGFzdFRzPXRoaXMucmVuZGVyU3RhdHMuY3VyVHMsdH1yZXR1cm4gMH1nZXQgdmlkZW9FbGVtZW50U3RhdHVzKCl7cmV0dXJuIHRoaXMuX3ZpZGVvRWxlbWVudFN0YXR1c31zZXQgdmlkZW9FbGVtZW50U3RhdHVzKGUpe2UhPT10aGlzLl92aWRlb0VsZW1lbnRTdGF0dXMmJihmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy50cmFja0lkLFwiXSB2aWRlby1lbGVtZW50LXN0YXR1cyBjaGFuZ2UgXCIpLmNvbmNhdCh0aGlzLl92aWRlb0VsZW1lbnRTdGF0dXMsXCIgPT4gXCIpLmNvbmNhdChlKSksdGhpcy5fdmlkZW9FbGVtZW50U3RhdHVzPWUpfWdldCB2aWRlb1N0YXRlKCl7cmV0dXJuIHRoaXMuX3ZpZGVvU3RhdGV9c2V0IHZpZGVvU3RhdGUoZSl7dmFyIHQ7ZSE9PXRoaXMuX3ZpZGVvU3RhdGUmJih0aGlzLl92aWRlb1N0YXRlPWUsbnVsbD09PSh0PXRoaXMub25WaWRlb1N0YXRlQ2hhbmdlZCl8fHZvaWQgMD09PXR8fHQuY2FsbCh0aGlzLHRoaXMudmlkZW9TdGF0ZSkpfWNvbnN0cnVjdG9yKGUpe0JMKHRoaXMsXCJ0cmFja0lkXCIsdm9pZCAwKSxCTCh0aGlzLFwiY29uZmlnXCIsdm9pZCAwKSxCTCh0aGlzLFwib25GaXJzdFZpZGVvRnJhbWVEZWNvZGVkXCIsdm9pZCAwKSxCTCh0aGlzLFwib25WaWRlb1N0YXRlQ2hhbmdlZFwiLHZvaWQgMCksQkwodGhpcyxcImZyZWV6ZVRpbWVDb3VudGVyTGlzdFwiLFtdKSxCTCh0aGlzLFwicmVuZGVyRnJlZXplQWNjVGltZVwiLDApLEJMKHRoaXMsXCJpc0tlZXBMYXN0RnJhbWVcIiwhMSksQkwodGhpcyxcInRpbWVVcGRhdGVkQ291bnRcIiwwKSxCTCh0aGlzLFwiZnJlZXplVGltZVwiLDApLEJMKHRoaXMsXCJwbGF5YmFja1RpbWVcIiwwKSxCTCh0aGlzLFwibGFzdFRpbWVVcGRhdGVkVGltZVwiLDApLEJMKHRoaXMsXCJhdXRvcGxheUZhaWxlZFwiLCExKSxCTCh0aGlzLFwidmlkZW9UcmFja1wiLHZvaWQgMCksQkwodGhpcyxcInZpZGVvRWxlbWVudFwiLHZvaWQgMCksQkwodGhpcyxcImNhY2hlVmlkZW9FbGVtZW50XCIsdm9pZCAwKSxCTCh0aGlzLFwicmVuZGVyU3RhdHNcIix2b2lkIDApLEJMKHRoaXMsXCJfdmlkZW9TdGF0ZVwiLFVMLlZpZGVvU3RhdGVTdG9wcGVkKSxCTCh0aGlzLFwidmlkZW9FbGVtZW50Q2hlY2tJbnRlcnZhbFwiLHZvaWQgMCksQkwodGhpcyxcInZpZGVvRWxlbWVudEZyZWV6ZVRpbWVvdXRcIix2b2lkIDApLEJMKHRoaXMsXCJfdmlkZW9FbGVtZW50U3RhdHVzXCIsTUwuTk9ORSksQkwodGhpcyxcImlzR2V0dGluZ1ZpZGVvRGltZW5zaW9uc1wiLCExKSxCTCh0aGlzLFwic3RhcnRHZXRWaWRlb0RpbWVuc2lvbnNcIiwoKCk9Pntjb25zdCBlPSgpPT57aWYodGhpcy5pc0dldHRpbmdWaWRlb0RpbWVuc2lvbnM9ITAsdGhpcy52aWRlb0VsZW1lbnQudmlkZW9XaWR0aCp0aGlzLnZpZGVvRWxlbWVudC52aWRlb0hlaWdodD40KXJldHVybiBmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy50cmFja0lkLFwiXSBjdXJyZW50IHZpZGVvIGRpbWVuc2lvbnM6XCIpLHRoaXMudmlkZW9FbGVtZW50LnZpZGVvV2lkdGgsdGhpcy52aWRlb0VsZW1lbnQudmlkZW9IZWlnaHQpLHZvaWQodGhpcy5pc0dldHRpbmdWaWRlb0RpbWVuc2lvbnM9ITEpO3NldFRpbWVvdXQoZSw1MDApfTshdGhpcy5pc0dldHRpbmdWaWRlb0RpbWVuc2lvbnMmJmUoKX0pKSxCTCh0aGlzLFwiYXV0b1Jlc3VtZUFmdGVySW50ZXJydXB0aW9uXCIsKCgpPT57dGhpcy52aWRlb1RyYWNrJiZcImxpdmVcIj09PXRoaXMudmlkZW9UcmFjay5yZWFkeVN0YXRlJiZcInJ1bm5pbmdcIj09PXFMLmN1clN0YXRlJiYoZmIuZGVidWcoXCJbdHJhY2stXCIuY29uY2F0KHRoaXMudHJhY2tJZCxcIl0gdmlkZW8gZWxlbWVudCBwYXVzZWQsIGF1dG8gcmVzdW1lIGZvciBcIikuY29uY2F0KHF2KCkpKSxseSgpPyh0aGlzLnZpZGVvRWxlbWVudC5zcmNPYmplY3Q9bnVsbCx0aGlzLnZpZGVvRWxlbWVudC5zcmNPYmplY3Q9bmV3IE1lZGlhU3RyZWFtKFt0aGlzLnZpZGVvVHJhY2tdKSx0aGlzLnZpZGVvRWxlbWVudC5wbGF5KCkpOih0aGlzLnZpZGVvRWxlbWVudC5wYXVzZSgpLHRoaXMudmlkZW9FbGVtZW50LnBsYXkoKSkpfSkpLEJMKHRoaXMsXCJoYW5kbGVWaWRlb0V2ZW50c1wiLChlPT57c3dpdGNoKGUudHlwZSl7Y2FzZVwicGxheVwiOmNhc2VcInBsYXlpbmdcIjp0aGlzLnN0YXJ0R2V0VmlkZW9EaW1lbnNpb25zKCksdGhpcy52aWRlb0VsZW1lbnRTdGF0dXM9TUwuUExBWUlORzticmVhaztjYXNlXCJsb2FkZWRkYXRhXCI6aWYodGhpcy52aWRlb1N0YXRlPVVMLlZpZGVvU3RhdGVTdGFydGluZyx0aGlzLm9uRmlyc3RWaWRlb0ZyYW1lRGVjb2RlZCYmdGhpcy5vbkZpcnN0VmlkZW9GcmFtZURlY29kZWQoKSx0aGlzLmNhY2hlVmlkZW9FbGVtZW50KXt0cnl7dGhpcy5jYWNoZVZpZGVvRWxlbWVudC5zcmNPYmplY3Q9bnVsbCx0aGlzLmNhY2hlVmlkZW9FbGVtZW50LnJlbW92ZSgpfWNhdGNoKGUpe310aGlzLmNhY2hlVmlkZW9FbGVtZW50PXZvaWQgMH1icmVhaztjYXNlXCJjYW5wbGF5XCI6dGhpcy52aWRlb0VsZW1lbnRTdGF0dXM9TUwuQ0FOUExBWTticmVhaztjYXNlXCJzdGFsbGVkXCI6dGhpcy52aWRlb0VsZW1lbnRTdGF0dXM9TUwuU1RBTExFRDticmVhaztjYXNlXCJzdXNwZW5kXCI6dGhpcy52aWRlb0VsZW1lbnRTdGF0dXM9TUwuU1VTUEVORDticmVhaztjYXNlXCJwYXVzZVwiOnRoaXMudmlkZW9FbGVtZW50U3RhdHVzPU1MLlBBVVNFRCwkdigpfHx1eSgpfHxYdigpJiZ0aGlzLmF1dG9wbGF5RmFpbGVkfHwhdGhpcy52aWRlb1RyYWNrfHxcImxpdmVcIiE9PXRoaXMudmlkZW9UcmFjay5yZWFkeVN0YXRlfHwoZmIuZGVidWcoXCJbdHJhY2stXCIuY29uY2F0KHRoaXMudHJhY2tJZCxcIl0gdmlkZW8gZWxlbWVudCBwYXVzZWQsIGF1dG8gcmVzdW1lXCIpKSx0aGlzLnZpZGVvRWxlbWVudC5wbGF5KCkpO2JyZWFrO2Nhc2VcIndhaXRpbmdcIjp0aGlzLnZpZGVvRWxlbWVudFN0YXR1cz1NTC5XQUlUSU5HO2JyZWFrO2Nhc2VcImFib3J0XCI6dGhpcy52aWRlb0VsZW1lbnRTdGF0dXM9TUwuQUJPUlQ7YnJlYWs7Y2FzZVwiZW5kZWRcIjp0aGlzLnZpZGVvRWxlbWVudFN0YXR1cz1NTC5FTkRFRDticmVhaztjYXNlXCJlbXB0aWVkXCI6dGhpcy52aWRlb0VsZW1lbnRTdGF0dXM9TUwuRU1QVElFRDticmVhaztjYXNlXCJlcnJvclwiOntjb25zdCBlPXRoaXMudmlkZW9FbGVtZW50LmVycm9yLHQ9ZT9cIlwiLmNvbmNhdChlLm1lc3NhZ2UsXCIgKFwiKS5jb25jYXQoZS5jb2RlLFwiKVwiKTpcIlwiO2UmJih0aGlzLnZpZGVvRWxlbWVudFN0YXR1cz1NTC5FUlJPUiksZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMudHJhY2tJZCxcIl0gbWVkaWEgZXJyb3I6IFwiKS5jb25jYXQodCxcIiBcIikpO2JyZWFrfWNhc2VcInRpbWV1cGRhdGVcIjp7Y29uc3QgZT1wZXJmb3JtYW5jZS5ub3coKTtpZih0aGlzLnRpbWVVcGRhdGVkQ291bnQrPTEsdGhpcy50aW1lVXBkYXRlZENvdW50PDEwKXJldHVybiB2b2lkKHRoaXMubGFzdFRpbWVVcGRhdGVkVGltZT1lKTtjb25zdCB0PWUtdGhpcy5sYXN0VGltZVVwZGF0ZWRUaW1lLGk9dGhpcy5sYXN0VGltZVVwZGF0ZWRUaW1lO2lmKHRoaXMubGFzdFRpbWVVcGRhdGVkVGltZT1lLHlVLmxhc3RWaXNpYmxlVGltZTx5VS5sYXN0SGlkZGVuVGltZXx8aTx5VS5sYXN0SGlkZGVuVGltZXx8aTx5VS5sYXN0VmlzaWJsZVRpbWUpcmV0dXJuO2Zvcih0PlhBKFwiVklERU9fRlJFRVpFX0RVUkFUSU9OXCIpJiYodGhpcy5mcmVlemVUaW1lKz10KSx0aGlzLnBsYXliYWNrVGltZSs9dDt0aGlzLnBsYXliYWNrVGltZT49NmUzOyl7dGhpcy5wbGF5YmFja1RpbWUtPTZlMztjb25zdCBlPU1hdGgubWluKDZlMyx0aGlzLmZyZWV6ZVRpbWUpO3RoaXMuZnJlZXplVGltZUNvdW50ZXJMaXN0LnB1c2goZSksdGhpcy5mcmVlemVUaW1lPU1hdGgubWF4KDAsdGhpcy5mcmVlemVUaW1lLTZlMyl9YnJlYWt9fX0pKSxCTCh0aGlzLFwiYXV0b1Jlc3VtZUFmdGVySW50ZXJydXB0aW9uT25JT1MxNV8xNlwiLCgoKT0+e3RoaXMudmlkZW9UcmFjayYmXCJsaXZlXCI9PT10aGlzLnZpZGVvVHJhY2sucmVhZHlTdGF0ZSYmKGZiLmRlYnVnKFwiW3RyYWNrLVwiLmNvbmNhdCh0aGlzLnRyYWNrSWQsXCJdIHZpZGVvIGVsZW1lbnQgcGF1c2VkLCBhdXRvIHJlc3VtZSBmb3IgXCIpLmNvbmNhdChxdigpKSksbHkoKT8odGhpcy52aWRlb0VsZW1lbnQuc3JjT2JqZWN0PW51bGwsdGhpcy52aWRlb0VsZW1lbnQuc3JjT2JqZWN0PW5ldyBNZWRpYVN0cmVhbShbdGhpcy52aWRlb1RyYWNrXSksdGhpcy52aWRlb0VsZW1lbnQucGxheSgpKToodGhpcy52aWRlb0VsZW1lbnQucGF1c2UoKSx0aGlzLnZpZGVvRWxlbWVudC5wbGF5KCkpKX0pKSx0aGlzLnRyYWNrSWQ9ZS50cmFja0lkLHRoaXMuY29uZmlnPWUsZS5lbGVtZW50IGluc3RhbmNlb2YgSFRNTFZpZGVvRWxlbWVudD90aGlzLnZpZGVvRWxlbWVudD1lLmVsZW1lbnQ6dGhpcy52aWRlb0VsZW1lbnQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInZpZGVvXCIpLHFMLm9uKHRMLklPU19JTlRFUlJVUFRJT05fRU5ELHRoaXMuYXV0b1Jlc3VtZUFmdGVySW50ZXJydXB0aW9uKSxxTC5vbih0TC5JT1NfMTVfMTZfSU5URVJSVVBUSU9OX0VORCx0aGlzLmF1dG9SZXN1bWVBZnRlckludGVycnVwdGlvbk9uSU9TMTVfMTYpfWdldFZpZGVvRWxlbWVudCgpe3JldHVybiB0aGlzLnZpZGVvRWxlbWVudH1nZXRDb250YWluZXJFbGVtZW50KCl7dmFyIGU7cmV0dXJuIG51bGwhPT0oZT10aGlzLnZpZGVvRWxlbWVudC5wYXJlbnRFbGVtZW50KSYmdm9pZCAwIT09ZT9lOnZvaWQgMH11cGRhdGVDb25maWcoZSl7dGhpcy5jb25maWc9ZSx0aGlzLnRyYWNrSWQ9ZS50cmFja0lkLGUuZWxlbWVudCE9PXRoaXMudmlkZW9FbGVtZW50JiYodGhpcy5kZXN0cm95KCksdGhpcy52aWRlb0VsZW1lbnQ9ZS5lbGVtZW50KSx0aGlzLnZpZGVvVHJhY2smJnRoaXMuaW5pdFZpZGVvRWxlbWVudCgpfXVwZGF0ZVZpZGVvVHJhY2soZSl7dGhpcy52aWRlb1RyYWNrIT09ZSYmKHRoaXMudmlkZW9UcmFjaz1lLHRoaXMuaW5pdFZpZGVvRWxlbWVudCgpKX1wbGF5KGUpe2NvbnN0IHQ9dGhpcy52aWRlb0VsZW1lbnQucGxheSgpO3QmJnQuY2F0Y2gmJnQuY2F0Y2goKHQ9PntlJiZFayhlLFwidmlkZW9cIix0Lm1lc3NhZ2UsdGhpcy50cmFja0lkKSxcIk5vdEFsbG93ZWRFcnJvclwiPT09dC5uYW1lPyhmYi53YXJuaW5nKFwiZGV0ZWN0ZWQgdmlkZW8gZWxlbWVudCBhdXRvcGxheSBmYWlsZWRcIix0KSx0aGlzLmF1dG9wbGF5RmFpbGVkPSEwLHRoaXMuaGFuZGxlQXV0b1BsYXlGYWlsZWQoKSk6ZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy50cmFja0lkLFwiXSBwbGF5IHdhcm5pbmc6IFwiKSx0KX0pKTtjb25zdCBpPUh2KCk7aWYoKFwiU2FmYXJpXCI9PT1pLm5hbWUmJjE1PT09TnVtYmVyKGkudmVyc2lvbil8fGN5KCkpJiZ0JiZ0LnRoZW4pe2NvbnN0IGU9KCk9Pnt0aGlzLmNvbmZpZy5taXJyb3ImJih0aGlzLnZpZGVvRWxlbWVudC5zdHlsZS50cmFuc2Zvcm09XCJyb3RhdGVZKDE4MGRlZylcIil9O3QudGhlbihlKS5jYXRjaChlKX19Z2V0Q3VycmVudEZyYW1lKCl7Y29uc3QgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO2Uud2lkdGg9dGhpcy52aWRlb0VsZW1lbnQudmlkZW9XaWR0aCxlLmhlaWdodD10aGlzLnZpZGVvRWxlbWVudC52aWRlb0hlaWdodDtjb25zdCB0PWUuZ2V0Q29udGV4dChcIjJkXCIpO2lmKCF0KXJldHVybiBmYi5lcnJvcihcImNyZWF0ZSBjYW52YXMgY29udGV4dCBmYWlsZWQhXCIpLG5ldyBJbWFnZURhdGEoMiwyKTt0LmRyYXdJbWFnZSh0aGlzLnZpZGVvRWxlbWVudCwwLDAsZS53aWR0aCxlLmhlaWdodCk7Y29uc3QgaT10LmdldEltYWdlRGF0YSgwLDAsZS53aWR0aCxlLmhlaWdodCk7cmV0dXJuIGUucmVtb3ZlKCksaX1hc3luYyBnZXRDdXJyZW50RnJhbWVUb1VpbnQ4QXJyYXkoZSl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOjE7Y29uc3QgaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO2kud2lkdGg9dGhpcy52aWRlb0VsZW1lbnQudmlkZW9XaWR0aCxpLmhlaWdodD10aGlzLnZpZGVvRWxlbWVudC52aWRlb0hlaWdodDtjb25zdCBuPWkuZ2V0Q29udGV4dChcIjJkXCIpO3JldHVybiBuPyhuLmRyYXdJbWFnZSh0aGlzLnZpZGVvRWxlbWVudCwwLDAsaS53aWR0aCxpLmhlaWdodCksbmV3IEdoKCgobixyKT0+e2kudG9CbG9iKChhc3luYyBlPT57aWYoaS5yZW1vdmUoKSxlKXtjb25zdCB0PWF3YWl0IERrKGUpO24oe2J1ZmZlcjp0LHdpZHRoOmkud2lkdGgsaGVpZ2h0OmkuaGVpZ2h0fSl9ZWxzZSByKG5ldyBDeShSeS5DT05WRVJUSU5HX1ZJREVPX0ZSQU1FX1RPX0JMT0JfRkFJTEVEKSl9KSxlLHQ8MD8uMTp0PjE/MTp0KX0pKSk6YXdhaXQgTmsoZSl9ZGVzdHJveSgpe3RoaXMucmVuZGVyU3RhdHM9dm9pZCAwLHFMLm9mZih0TC5JT1NfSU5URVJSVVBUSU9OX0VORCx0aGlzLmF1dG9SZXN1bWVBZnRlckludGVycnVwdGlvbikscUwub2ZmKHRMLklPU18xNV8xNl9JTlRFUlJVUFRJT05fRU5ELHRoaXMuYXV0b1Jlc3VtZUFmdGVySW50ZXJydXB0aW9uT25JT1MxNV8xNiksdGhpcy52aWRlb0VsZW1lbnQuc3JjT2JqZWN0PW51bGwsdGhpcy5yZXNldFZpZGVvRWxlbWVudCgpLHRoaXMuZnJlZXplVGltZUNvdW50ZXJMaXN0PVtdLHRoaXMudmlkZW9TdGF0ZT1VTC5WaWRlb1N0YXRlU3RvcHBlZH1pbml0VmlkZW9FbGVtZW50KCl7aWYodGhpcy52aWRlb0VsZW1lbnRTdGF0dXM9TUwuSU5JVCwhdGhpcy52aWRlb0VsZW1lbnRDaGVja0ludGVydmFsJiYoeU0uZm9yRWFjaCgoZT0+e3RoaXMudmlkZW9FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZSx0aGlzLmhhbmRsZVZpZGVvRXZlbnRzKX0pKSx0aGlzLnZpZGVvRWxlbWVudENoZWNrSW50ZXJ2YWw9d2luZG93LnNldEludGVydmFsKCgoKT0+eyhmdW5jdGlvbihlKXtyZXR1cm4gZSE9PWRvY3VtZW50LmJvZHkmJmRvY3VtZW50LmJvZHkuY29udGFpbnMoZSl9KSh0aGlzLnZpZGVvRWxlbWVudCl8fCh0aGlzLnZpZGVvRWxlbWVudFN0YXR1cz1NTC5ERVNUUk9ZRUQpfSksMWUzKSxYQShcIkVOQUJMRV9WSURFT19GUkFNRV9DQUxMQkFDS1wiKSkpe3ZhciBlLHQ7bGV0IGk7Y29uc3Qgbj0oKT0+e1widmlzaWJsZVwiPT09ZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlJiYoZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIixuKSx0aGlzLnZpZGVvRWxlbWVudEZyZWV6ZVRpbWVvdXQ9d2luZG93LnNldFRpbWVvdXQocixYQShcIlZJREVPX0ZSRUVaRV9EVVJBVElPTlwiKSkpfSxyPSgpPT57dGhpcy52aWRlb0VsZW1lbnRGcmVlemVUaW1lb3V0PXZvaWQgMCx0aGlzLnZpZGVvU3RhdGU9PT1VTC5WaWRlb1N0YXRlRGVjb2RpbmcmJihcInZpc2libGVcIj09PWRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZT90aGlzLnZpZGVvU3RhdGU9VUwuVmlkZW9TdGF0ZUZyb3plbjpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLG4pKX0sbz0oZSx0KT0+e2lmKHRoaXMudmlkZW9FbGVtZW50U3RhdHVzPT09TUwuUExBWUlORyl7aWYodGhpcy5yZW5kZXJTdGF0cz8odGhpcy5yZW5kZXJTdGF0cy5yZW5kZXJOdW0rKyx0aGlzLnJlbmRlclN0YXRzLmN1clRzPXQubWVkaWFUaW1lKTp0aGlzLnJlbmRlclN0YXRzPXtsYXN0VHM6dC5tZWRpYVRpbWUsY3VyVHM6dC5tZWRpYVRpbWUsbGFzdFJlbmRlck51bTowLHJlbmRlck51bTowfSxpKXtjb25zdCBlPXQucHJlc2VudGF0aW9uVGltZS1pLnByZXNlbnRhdGlvblRpbWU7dGhpcy52aWRlb1N0YXRlPT09VUwuVmlkZW9TdGF0ZVN0YXJ0aW5nJiYodGhpcy52aWRlb1N0YXRlPVVMLlZpZGVvU3RhdGVEZWNvZGluZyksdGhpcy52aWRlb1N0YXRlPT09VUwuVmlkZW9TdGF0ZURlY29kaW5nJiZ0aGlzLm9uVmlkZW9TdGF0ZUNoYW5nZWQmJih0aGlzLnZpZGVvRWxlbWVudEZyZWV6ZVRpbWVvdXQmJndpbmRvdy5jbGVhclRpbWVvdXQodGhpcy52aWRlb0VsZW1lbnRGcmVlemVUaW1lb3V0KSx0aGlzLnZpZGVvRWxlbWVudEZyZWV6ZVRpbWVvdXQ9d2luZG93LnNldFRpbWVvdXQocixYQShcIlZJREVPX0ZSRUVaRV9EVVJBVElPTlwiKSkpLGU8WEEoXCJWSURFT19GUkVFWkVfRFVSQVRJT05cIikmJnRoaXMudmlkZW9TdGF0ZT09PVVMLlZpZGVvU3RhdGVGcm96ZW4mJih0aGlzLnZpZGVvU3RhdGU9VUwuVmlkZW9TdGF0ZURlY29kaW5nKSxlPlhBKFwiVklERU9fRlJFRVpFX0RVUkFUSU9OXCIpJiZ5VS5sYXN0VmlzaWJsZVRpbWU+PXlVLmxhc3RIaWRkZW5UaW1lJiZpLnRpbWVzdGFtcD55VS5sYXN0VmlzaWJsZVRpbWUmJmkudGltZXN0YW1wPnlVLmxhc3RIaWRkZW5UaW1lJiYodGhpcy5yZW5kZXJGcmVlemVBY2NUaW1lKz1lKX1pPUdMKEdMKHt9LHQpLHt9LHt0aW1lc3RhbXA6ZX0pfXZhciBuLHM7WEEoXCJFTkFCTEVfVklERU9fRlJBTUVfQ0FMTEJBQ0tcIikmJihudWxsPT09KG49KHM9dGhpcy52aWRlb0VsZW1lbnQpLnJlcXVlc3RWaWRlb0ZyYW1lQ2FsbGJhY2spfHx2b2lkIDA9PT1ufHxuLmNhbGwocyxvKSl9O251bGw9PT0oZT0odD10aGlzLnZpZGVvRWxlbWVudCkucmVxdWVzdFZpZGVvRnJhbWVDYWxsYmFjayl8fHZvaWQgMD09PWV8fGUuY2FsbCh0LG8pfXRoaXMudmlkZW9FbGVtZW50LmNvbnRyb2xzPSExLHRoaXMudmlkZW9FbGVtZW50LnNldEF0dHJpYnV0ZShcInBsYXlzaW5saW5lXCIsXCJcIiksZnkoKSYmIVhBKFwiSElERV9OT19QT1NURVJcIikmJih0aGlzLnZpZGVvRWxlbWVudC5wb3N0ZXI9XCJub3Bvc3RlclwiKTtjb25zdCBpPUh2KCk7XCJTYWZhcmlcIj09PWkubmFtZSYmMTU9PT1OdW1iZXIoaS52ZXJzaW9uKXx8Y3koKXx8IXRoaXMuY29uZmlnLm1pcnJvcnx8KHRoaXMudmlkZW9FbGVtZW50LnN0eWxlLnRyYW5zZm9ybT1cInJvdGF0ZVkoMTgwZGVnKVwiKSx0aGlzLmNvbmZpZy5maXQ/dGhpcy52aWRlb0VsZW1lbnQuc3R5bGUub2JqZWN0Rml0PXRoaXMuY29uZmlnLmZpdDp0aGlzLnZpZGVvRWxlbWVudC5zdHlsZS5vYmplY3RGaXQ9XCJjb3ZlclwiLHRoaXMudmlkZW9FbGVtZW50LnNldEF0dHJpYnV0ZShcIm11dGVkXCIsXCJcIiksdGhpcy52aWRlb0VsZW1lbnQubXV0ZWQ9ITAsdGhpcy52aWRlb0VsZW1lbnQuc3JjT2JqZWN0JiZ0aGlzLnZpZGVvRWxlbWVudC5zcmNPYmplY3QgaW5zdGFuY2VvZiBNZWRpYVN0cmVhbT90aGlzLnZpZGVvRWxlbWVudC5zcmNPYmplY3QuZ2V0VmlkZW9UcmFja3MoKVswXSE9PXRoaXMudmlkZW9UcmFjayYmKHRoaXMudmlkZW9FbGVtZW50LnNyY09iamVjdD10aGlzLnZpZGVvVHJhY2s/bmV3IE1lZGlhU3RyZWFtKFt0aGlzLnZpZGVvVHJhY2tdKTpudWxsLFp2KCkmJnRoaXMudmlkZW9FbGVtZW50LmxvYWQoKSk6KHRoaXMudmlkZW9FbGVtZW50LnNyY09iamVjdD10aGlzLnZpZGVvVHJhY2s/bmV3IE1lZGlhU3RyZWFtKFt0aGlzLnZpZGVvVHJhY2tdKTpudWxsLFp2KCkmJnRoaXMudmlkZW9FbGVtZW50LmxvYWQoKSk7Y29uc3Qgbj10aGlzLnZpZGVvRWxlbWVudC5wbGF5KCk7dm9pZCAwIT09biYmbi5jYXRjaCgoZT0+e2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnRyYWNrSWQsXCJdIHBsYXliYWNrIGludGVycnVwdGVkXCIpLGUudG9TdHJpbmcoKSl9KSl9cmVzZXRWaWRlb0VsZW1lbnQoKXt5TS5mb3JFYWNoKChlPT57dGhpcy52aWRlb0VsZW1lbnQmJnRoaXMudmlkZW9FbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZSx0aGlzLmhhbmRsZVZpZGVvRXZlbnRzKX0pKSx0aGlzLnZpZGVvRWxlbWVudENoZWNrSW50ZXJ2YWwmJih3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLnZpZGVvRWxlbWVudENoZWNrSW50ZXJ2YWwpLHRoaXMudmlkZW9FbGVtZW50Q2hlY2tJbnRlcnZhbD12b2lkIDApLHRoaXMudmlkZW9FbGVtZW50U3RhdHVzPU1MLk5PTkV9aGFuZGxlQXV0b1BsYXlGYWlsZWQoKXtjb25zdCBlPXQ9Pnt0LnByZXZlbnREZWZhdWx0KCksdGhpcy52aWRlb0VsZW1lbnQucGxheSgpLnRoZW4oKCgpPT57ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMudHJhY2tJZCxcIl0gVmlkZW8gZWxlbWVudCBmb3IgdHJhY2tJZDpcIikuY29uY2F0KHRoaXMudHJhY2tJZCxcIiBhdXRvcGxheSByZXN1bWVkLlwiKSl9KSkuY2F0Y2goKGU9PntmYi5lcnJvcihlKX0pKSx0aGlzLmF1dG9wbGF5RmFpbGVkPSExLG15KCk/ZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIixlLCEwKTooZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLGUsITApLGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLGUsITApKX07bXkoKT9kb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGUsITApOihkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsZSwhMCksZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsZSwhMCkpLF9rKCl9fWNvbnN0IHlNPVtcInBsYXlcIixcInBsYXlpbmdcIixcImxvYWRlZGRhdGFcIixcImNhbnBsYXlcIixcInBhdXNlXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJ3YWl0aW5nXCIsXCJhYm9ydFwiLFwiZW1wdGllZFwiLFwiZW5kZWRcIixcInRpbWV1cGRhdGVcIixcImVycm9yXCJdO2NsYXNzIEFNIGV4dGVuZHMgdk17Y29uc3RydWN0b3IoZSl7c3VwZXIoZSksQkwodGhpcyxcImNvbnRhaW5lclwiLHZvaWQgMCksQkwodGhpcyxcInNsb3RcIix2b2lkIDApLHRoaXMuc2xvdD1lLmVsZW1lbnQsdGhpcy51cGRhdGVDb25maWcoZSl9dXBkYXRlQ29uZmlnKGUpe3RoaXMuY29uZmlnPWUsdGhpcy50cmFja0lkPWUudHJhY2tJZDtjb25zdCB0PWUuZWxlbWVudDt0IT09dGhpcy5zbG90JiYodGhpcy5kZXN0cm95KCksdGhpcy5zbG90PXQpLHRoaXMuY3JlYXRlRWxlbWVudHMoKX11cGRhdGVWaWRlb1RyYWNrKGUpe3RoaXMudmlkZW9UcmFjayE9PWUmJih0aGlzLnZpZGVvVHJhY2s9ZSx0aGlzLmNyZWF0ZUVsZW1lbnRzKCkpfXBsYXkoZSl7dmFyIHQ7bnVsbCE9PSh0PXRoaXMuY29udGFpbmVyKSYmdm9pZCAwIT09dCYmdC5jb250YWlucyh0aGlzLnZpZGVvRWxlbWVudCkmJnN1cGVyLnBsYXkoZSl9Z2V0Q3VycmVudEZyYW1lKCl7dmFyIGU7cmV0dXJuIG51bGwhPT0oZT10aGlzLmNvbnRhaW5lcikmJnZvaWQgMCE9PWUmJmUuY29udGFpbnModGhpcy52aWRlb0VsZW1lbnQpP3N1cGVyLmdldEN1cnJlbnRGcmFtZSgpOm5ldyBJbWFnZURhdGEoMiwyKX1hc3luYyBnZXRDdXJyZW50RnJhbWVUb1VpbnQ4QXJyYXkoZSl7dmFyIHQ7bGV0IGk9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOjE7cmV0dXJuIG51bGwhPT0odD10aGlzLmNvbnRhaW5lcikmJnZvaWQgMCE9PXQmJnQuY29udGFpbnModGhpcy52aWRlb0VsZW1lbnQpP2F3YWl0IHN1cGVyLmdldEN1cnJlbnRGcmFtZVRvVWludDhBcnJheShlLGkpOmF3YWl0IE5rKGUpfWRlc3Ryb3koKXtpZihzdXBlci5kZXN0cm95KCksdGhpcy52aWRlb0VsZW1lbnQucmVtb3ZlKCksdGhpcy52aWRlb0VsZW1lbnQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInZpZGVvXCIpLHRoaXMuY29udGFpbmVyKXt0cnl7dGhpcy5jb250YWluZXIucmVtb3ZlKCksdGhpcy5zbG90LnJlbW92ZUNoaWxkKHRoaXMuY29udGFpbmVyKX1jYXRjaChlKXt9dGhpcy5jb250YWluZXI9dm9pZCAwfX1jcmVhdGVFbGVtZW50cygpe3RoaXMuY29udGFpbmVyfHwodGhpcy5jb250YWluZXI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSksdGhpcy5jb250YWluZXIuaWQ9XCJhZ29yYS12aWRlby1wbGF5ZXItXCIuY29uY2F0KHRoaXMudHJhY2tJZCksdGhpcy5jb250YWluZXIuc3R5bGUud2lkdGg9XCIxMDAlXCIsdGhpcy5jb250YWluZXIuc3R5bGUuaGVpZ2h0PVwiMTAwJVwiLHRoaXMuY29udGFpbmVyLnN0eWxlLnBvc2l0aW9uPVwicmVsYXRpdmVcIix0aGlzLmNvbnRhaW5lci5zdHlsZS5vdmVyZmxvdz1cImhpZGRlblwiLHRoaXMudmlkZW9UcmFjaz8odGhpcy5jb250YWluZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yPVwiYmxhY2tcIixYQShcIktFRVBfTEFTVF9GUkFNRVwiKSYmdGhpcy5pc0tlZXBMYXN0RnJhbWUmJnRoaXMudmlkZW9FbGVtZW50LnBhdXNlZCYmdGhpcy5yZXNldFZpZGVvRWxlbWVudCgpLHRoaXMubW91bnRlZFZpZGVvRWxlbWVudCgpKTp0aGlzLnVubW91bnRlZFZpZGVvRWxlbWVudCgpLHRoaXMuc2xvdC5hcHBlbmRDaGlsZCh0aGlzLmNvbnRhaW5lcil9bW91bnRlZFZpZGVvRWxlbWVudCgpe3ZhciBlOyF0aGlzLmNvbnRhaW5lcnx8bnVsbCE9PShlPXRoaXMuY29udGFpbmVyKSYmdm9pZCAwIT09ZSYmZS5jb250YWlucyh0aGlzLnZpZGVvRWxlbWVudCl8fHRoaXMuY29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMudmlkZW9FbGVtZW50KSxzdXBlci5pbml0VmlkZW9FbGVtZW50KCksdGhpcy52aWRlb0VsZW1lbnQuaWQ9XCJ2aWRlb19cIi5jb25jYXQodGhpcy50cmFja0lkKSx0aGlzLnZpZGVvRWxlbWVudC5jbGFzc05hbWU9XCJhZ29yYV92aWRlb19wbGF5ZXJcIix0aGlzLnZpZGVvRWxlbWVudC5zdHlsZS53aWR0aD1cIjEwMCVcIix0aGlzLnZpZGVvRWxlbWVudC5zdHlsZS5oZWlnaHQ9XCIxMDAlXCIsdGhpcy52aWRlb0VsZW1lbnQuc3R5bGUucG9zaXRpb249XCJhYnNvbHV0ZVwiLHRoaXMudmlkZW9FbGVtZW50LnN0eWxlLmxlZnQ9XCIwXCIsdGhpcy52aWRlb0VsZW1lbnQuc3R5bGUudG9wPVwiMFwifXVubW91bnRlZFZpZGVvRWxlbWVudCgpe3ZhciBlO2lmKG51bGwhPT0oZT10aGlzLmNvbnRhaW5lcikmJnZvaWQgMCE9PWUmJmUuY29udGFpbnModGhpcy52aWRlb0VsZW1lbnQpKXtzdXBlci5yZXNldFZpZGVvRWxlbWVudCgpO3RyeXt0aGlzLmNvbnRhaW5lciYmdGhpcy5jb250YWluZXIucmVtb3ZlQ2hpbGQodGhpcy52aWRlb0VsZW1lbnQpfWNhdGNoKGUpe310aGlzLnZpZGVvRWxlbWVudD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidmlkZW9cIil9fXJlc2V0VmlkZW9FbGVtZW50KCl7dmFyIGU7bnVsbCE9PShlPXRoaXMuY29udGFpbmVyKSYmdm9pZCAwIT09ZSYmZS5jb250YWlucyh0aGlzLnZpZGVvRWxlbWVudCkmJihzdXBlci5yZXNldFZpZGVvRWxlbWVudCgpLHRoaXMuY2FjaGVWaWRlb0VsZW1lbnQ9dGhpcy52aWRlb0VsZW1lbnQsdGhpcy52aWRlb0VsZW1lbnQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInZpZGVvXCIpKX1nZXRDb250YWluZXJFbGVtZW50KCl7cmV0dXJuIHRoaXMuY29udGFpbmVyfX12YXIgYk0sd00sT00sTk0sRE0sUE0sTE0sa00sTU0sVU0seE0sVk0sRk0sQk0sak0sR00sV00sSE0sS00sWU0scU0sek0sSk0sWE0sUU0sWk0sJE0sZVUsdFUsaVUsblUsclUsb1Usc1U7bGV0IGFVPShiTT1JYih7YXJnc01hcDooZSx0LGkpPT5bZS5nZXRUcmFja0lkKCksXCJzdHJpbmdcIj09dHlwZW9mIHQ/dDp0IGluc3RhbmNlb2YgSFRNTFZpZGVvRWxlbWVudD9cIkhUTUxWaWRlb0VsZW1lbnRcIjpcIkhUTUxFbGVtZW50XCIsaV19KSx3TT1UaygpLE9NPUliKHthcmdzTWFwOmU9PltlLmdldFRyYWNrSWQoKV19KSxOTT1EQShcIkxvY2FsVmlkZW9UcmFja1wiLFwiX2VuYWJsZWRNdXRleFwiKSxETT1JYih7YXJnc01hcDooZSx0KT0+W2UuZ2V0VHJhY2tJZCgpLHRdfSksUE09VGsoKSxMTT1EQShcIkxvY2FsVmlkZW9UcmFja1wiLFwiX2VuYWJsZWRNdXRleFwiKSxrTT1JYih7YXJnc01hcDooZSx0KT0+W2UuZ2V0VHJhY2tJZCgpLHRdfSksTU09VGsoKSxVTT1JYih7YXJnc01hcDooZSx0KT0+W2UuZ2V0VHJhY2tJZCgpLHRdfSkseE09VGsoKSxWTT1UaygpLEZNPUliKHthcmdzTWFwOihlLHQsaSk9PltlLmdldFRyYWNrSWQoKSx0LGldfSksQk09VGsoKSxqTT1UaygpLEdNPVRrKCksV009VGsoKSxITT1UaygpLEtNPVRrKCksWU09VGsoKSxxTT1JYih7YXJnc01hcDooZSx0KT0+W2UuZ2V0VHJhY2tJZCgpLHQubmFtZV19KSx6TT1JYih7YXJnc01hcDplPT5bZS5nZXRUcmFja0lkKCldfSksSk09SWIoe2FyZ3NNYXA6ZT0+W2UuZ2V0VHJhY2tJZCgpXX0pLFhNPUliKHthcmdzTWFwOihlLHQsaSk9PltlLmdldFRyYWNrSWQoKSx0LmxhYmVsLGldfSksUU09Y2xhc3MgZSBleHRlbmRzIEhMe2dldCB2aWRlb0hlaWdodCgpe2lmKFh2KCkpe2NvbnN0e2hlaWdodDplfT10aGlzLl9tZWRpYVN0cmVhbVRyYWNrLmdldFNldHRpbmdzKCk7cmV0dXJuIHRoaXMuX3ZpZGVvSGVpZ2h0PWUsdGhpcy5fdmlkZW9IZWlnaHR9cmV0dXJuIHRoaXMuX3ZpZGVvSGVpZ2h0fWdldCB2aWRlb1dpZHRoKCl7aWYoWHYoKSl7Y29uc3R7d2lkdGg6ZX09dGhpcy5fbWVkaWFTdHJlYW1UcmFjay5nZXRTZXR0aW5ncygpO3JldHVybiB0aGlzLl92aWRlb1dpZHRoPWUsdGhpcy5fdmlkZW9XaWR0aH1yZXR1cm4gdGhpcy5fdmlkZW9XaWR0aH1nZXQgaXNQbGF5aW5nKCl7cmV0dXJuISghdGhpcy5fcGxheWVyfHx0aGlzLl9wbGF5ZXIudmlkZW9FbGVtZW50U3RhdHVzIT09TUwuUExBWUlORyl9Z2V0IHByb2Nlc3NvckRlc3RpbmF0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb2Nlc3NvckRlc3RpbmF0aW9ufWdldCBwcm9jZXNzb3JDb250ZXh0KCl7cmV0dXJuIHRoaXMuX3Byb2Nlc3NvckNvbnRleHR9c2V0IHByb2Nlc3NvckNvbnRleHQoZSl7dGhpcy5fcHJvY2Vzc29yQ29udGV4dD1lfWdldCBfX2NsYXNzTmFtZV9fKCl7cmV0dXJuXCJMb2NhbFZpZGVvVHJhY2tcIn1jb25zdHJ1Y3RvcihlLHQsaSxuLHIsbyl7aWYoc3VwZXIoZSxyKSxCTCh0aGlzLFwidHJhY2tNZWRpYVR5cGVcIix2TC5WSURFTyksQkwodGhpcyxcIl9wbGF5ZXJcIix2b2lkIDApLEJMKHRoaXMsXCJpc1VzZVNjYWxlUmVzb2x1dGlvbkRvd25CeVwiLCExKSxCTCh0aGlzLFwiX3ZpZGVvVmlzaWJsZVRpbWVyXCIsbnVsbCksQkwodGhpcyxcIl9wcmV2aW91c1ZpZGVvVmlzaWJsZVN0YXR1c1wiLHZvaWQgMCksQkwodGhpcyxcIl9jbGVhclByZXZpb3VzVmlkZW9WaXNpYmxlU3RhdHVzXCIsKCgpPT50aGlzLl9wcmV2aW91c1ZpZGVvVmlzaWJsZVN0YXR1cz12b2lkIDApKSxCTCh0aGlzLFwiX2VuY29kZXJDb25maWdcIix2b2lkIDApLEJMKHRoaXMsXCJfc2NhbGFiaWxpdHlNb2RlXCIse251bVNwYXRpYWxMYXllcnM6MSxudW1UZW1wb3JhbExheWVyczoxfSksQkwodGhpcyxcIl9vcHRpbWl6YXRpb25Nb2RlXCIsdm9pZCAwKSxCTCh0aGlzLFwiX3ZpZGVvSGVpZ2h0XCIsdm9pZCAwKSxCTCh0aGlzLFwiX3ZpZGVvV2lkdGhcIix2b2lkIDApLEJMKHRoaXMsXCJfZm9yY2VCaXRyYXRlTGltaXRcIix2b2lkIDApLEJMKHRoaXMsXCJfZW5hYmxlZFwiLCEwKSxCTCh0aGlzLFwiX3Byb2Nlc3NvckRlc3RpbmF0aW9uXCIsdm9pZCAwKSxCTCh0aGlzLFwiX3Byb2Nlc3NvckNvbnRleHRcIix2b2lkIDApLFh2KCkpe2NvbnN0e3dpZHRoOnQsaGVpZ2h0Oml9PWUuZ2V0U2V0dGluZ3MoKTt0aGlzLl92aWRlb1dpZHRoPXQsdGhpcy5fdmlkZW9IZWlnaHQ9aX1lbHNlIHRoaXMudXBkYXRlTWVkaWFTdHJlYW1UcmFja1Jlc29sdXRpb24oKTtpZih0aGlzLl9lbmNvZGVyQ29uZmlnPXQsdGhpcy5fc2NhbGFiaWxpdHlNb2RlPWksdGhpcy5fb3B0aW1pemF0aW9uTW9kZT1uLHRoaXMuX2hpbnRzPW98fFtdLC0xPT09dGhpcy5faGludHMuaW5kZXhPZihtTC5TQ1JFRU5fVFJBQ0spKXRoaXMudXBkYXRlQml0cmF0ZUZyb21Qcm9maWxlKCk7ZWxzZSBpZihmdW5jdGlvbihlLHQsaSl7Y29uc3Qgbj1IdigpO3JldHVybiEobi5uYW1lIT09ZXx8IW4ub3NWZXJzaW9uKSYmKGk/TnVtYmVyKG4udmVyc2lvbik+PXQmJk51bWJlcihuLnZlcnNpb24pPD1pOk51bWJlcihuLnZlcnNpb24pPT09dCl9KEJ2LkNIUk9NRSwxMTUpJiYtMSE9PVl2KCkuaW5kZXhPZihcIldpbmRvd3NcIikpe2NvbnN0IHQ9ZnVuY3Rpb24oZSx0KXtpZihcIlZpZGVvRnJhbWVcImluIHdpbmRvdyYmXCJUcmFuc2Zvcm1TdHJlYW1cImluIHdpbmRvdyYmWlAoKS5zdXBwb3J0V2ViUlRDSW5zZXJ0YWJsZVN0cmVhbSl7Y29uc3QgaT1uZXcgTWVkaWFTdHJlYW1UcmFja1Byb2Nlc3NvcihlKSxuPW5ldyBNZWRpYVN0cmVhbVRyYWNrR2VuZXJhdG9yKHtraW5kOlwidmlkZW9cIn0pO2xldCByLG8scz1EYXRlLm5vdygpO2NvbnN0IGE9KCk9PntjJiYoY2xlYXJJbnRlcnZhbChjKSxjPXZvaWQgMCksciYmKHIuY2xvc2UoKSxyPXZvaWQgMCksZS5zdG9wKCksbz12b2lkIDAsbi5yZW1vdmVFdmVudExpc3RlbmVyKFwiZW5kZWRcIixhKX07bGV0IGM9d2luZG93LnNldEludGVydmFsKCgoKT0+e2lmKG8mJnImJkRhdGUubm93KCktcz4obnVsbCE9dD90OjFlMykpdHJ5e1wibGl2ZVwiPT09bi5yZWFkeVN0YXRlP28uZW5xdWV1ZShyLmNsb25lKCkpOmEoKX1jYXRjaChlKXthKCl9fSksbnVsbCE9dD90OjFlMyk7Y29uc3QgZD1uZXcgVHJhbnNmb3JtU3RyZWFtKHt0cmFuc2Zvcm06KGUsdCk9PntcImxpdmVcIj09PW4ucmVhZHlTdGF0ZT8obz10LHM9RGF0ZS5ub3coKSx2b2lkIDA9PT1yPyhyPWUsdC5lbnF1ZXVlKGUuY2xvbmUoKSkpOih0LmVucXVldWUocikscj1lKSk6ZS5jbG9zZSgpfX0pO3JldHVybiBuLmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLGEpLGkucmVhZGFibGUucGlwZVRocm91Z2goZCkucGlwZVRvKG4ud3JpdGFibGUpLG59fShlKTt0JiYoZmIuaW5mbyhcImxvY2FsIHNjcmVlbiB2aWRlbyB0cmFjayBiZWdpbiB0byBpbmplY3QgZnJhbWVcIiksdGhpcy5fbWVkaWFTdHJlYW1UcmFjaz10KX10JiYtMSE9PXRoaXMuX2hpbnRzLmluZGV4T2YobUwuQ1VTVE9NX1RSQUNLKSYmdGhpcy5zZXRFbmNvZGVyQ29uZmlndXJhdGlvbih0KSx0aGlzLl9wcm9jZXNzb3JDb250ZXh0PW5ldyBnayh0aGlzLmdldFRyYWNrSWQoKSxcImxvY2FsXCIpLHRoaXMuX3Byb2Nlc3NvckRlc3RpbmF0aW9uPW5ldyBTayh0aGlzLnByb2Nlc3NvckNvbnRleHQpLHRoaXMuYmluZFByb2Nlc3NvckRlc3RpbmF0aW9uRXZlbnRzKCl9cGxheShlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpe2NvbnN0IHQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZSk7dD9lPXQ6KGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLCddIGNhbiBub3QgZmluZCBcIiMnKS5jb25jYXQoZSwnXCIgZWxlbWVudCwgdXNlIGRvY3VtZW50LmJvZHknKSksZT1kb2N1bWVudC5ib2R5KX1mYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHN0YXJ0IHZpZGVvIHBsYXliYWNrIGluIFwiKS5jb25jYXQoZSBpbnN0YW5jZW9mIEhUTUxWaWRlb0VsZW1lbnQ/XCJIVE1MVmlkZW9FbGVtZW50XCI6XCJIVE1MRWxlbWVudFwiKSxKU09OLnN0cmluZ2lmeSh0KSk7Y29uc3QgaT1HTChHTChHTCh7fSx0aGlzLl9nZXREZWZhdWx0UGxheWVyQ29uZmlnKCkpLHQpLHt9LHt0cmFja0lkOnRoaXMuZ2V0VHJhY2tJZCgpLGVsZW1lbnQ6ZX0pO3RoaXMuX3BsYXllcj90aGlzLl9wbGF5ZXIudXBkYXRlQ29uZmlnKGkpOihlIGluc3RhbmNlb2YgSFRNTFZpZGVvRWxlbWVudD90aGlzLl9wbGF5ZXI9bmV3IHZNKGkpOnRoaXMuX3BsYXllcj1uZXcgQU0oaSksdGhpcy5fcGxheWVyLnVwZGF0ZVZpZGVvVHJhY2sodGhpcy5fbWVkaWFTdHJlYW1UcmFjaykpLHRoaXMuX3BsYXllci5wbGF5KCksdGhpcy5fdmlkZW9WaXNpYmxlVGltZXImJndpbmRvdy5jbGVhckludGVydmFsKHRoaXMuX3ZpZGVvVmlzaWJsZVRpbWVyKSx0aGlzLl9jbGVhclByZXZpb3VzVmlkZW9WaXNpYmxlU3RhdHVzKCksdGhpcy5fdmlkZW9WaXNpYmxlVGltZXI9d2luZG93LnNldEludGVydmFsKCgoKT0+e3RyeXtjb25zdCBlPXRoaXMuZ2V0VmlkZW9FbGVtZW50VmlzaWJsZVN0YXR1cygpO3RoaXMuc2FmZUVtaXQoQ0wuVklERU9fRUxFTUVOVF9WSVNJQkxFX1NUQVRVUyxlKX1jYXRjaChlKXt9fSksWEEoXCJDSEVDS19WSURFT19WSVNJQkxFX0lOVEVSVkFMXCIpKX1zdG9wKCl7dGhpcy5fcGxheWVyJiYodGhpcy5fdmlkZW9WaXNpYmxlVGltZXImJih3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLl92aWRlb1Zpc2libGVUaW1lciksdGhpcy5fdmlkZW9WaXNpYmxlVGltZXI9bnVsbCksdGhpcy5fY2xlYXJQcmV2aW91c1ZpZGVvVmlzaWJsZVN0YXR1cygpLHRoaXMuX3BsYXllci5kZXN0cm95KCksdGhpcy5fcGxheWVyPXZvaWQgMCxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHN0b3AgdmlkZW8gcGxheWJhY2tcIikpKX1hc3luYyBzZXRFbmFibGVkKGUsdCl7aWYoIXQpe2lmKGU9PT10aGlzLl9lbmFibGVkKXJldHVybjt0aGlzLnN0YXRlQ2hlY2soXCJlbmFibGVkXCIsZSl9aWYoZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHN0YXJ0IHNldEVuYWJsZWRcIiksZSksIWUpe3RoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suZW5hYmxlZD0hMTt0cnl7YXdhaXQgJHkodGhpcyxmTC5ORUVEX0RJU0FCTEVfVFJBQ0ssdGhpcyl9Y2F0Y2goZSl7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzZXRFbmFibGVkIHRvIGZhbHNlIGVycm9yXCIpLGUudG9TdHJpbmcoKSksZX1yZXR1cm4gdHx8KHRoaXMuX2VuYWJsZWQ9ITEpLHZvaWQgZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHNldEVuYWJsZWQgdG8gZmFsc2Ugc3VjY2Vzc1wiKSl9dGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5lbmFibGVkPSEwO3RyeXthd2FpdCAkeSh0aGlzLGZMLk5FRURfRU5BQkxFX1RSQUNLLHRoaXMpfWNhdGNoKGUpe3Rocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc2V0RW5hYmxlZCB0byB0cnVlIGVycm9yXCIpLGUudG9TdHJpbmcoKSksZX1mYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc2V0RW5hYmxlZCB0byB0cnVlIHN1Y2Nlc3NcIikpLHR8fCh0aGlzLl9lbmFibGVkPSEwKX1hc3luYyBzZXRNdXRlZChlKXtlIT09dGhpcy5fbXV0ZWQmJih0aGlzLnN0YXRlQ2hlY2soXCJtdXRlZFwiLGUpLHRoaXMuX211dGVkPWUsdGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5lbmFibGVkPSFlLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc3RhcnQgc2V0IG11dGVkOiBcIikuY29uY2F0KGUpKSxlP2F3YWl0ICR5KHRoaXMsZkwuTkVFRF9NVVRFX1RSQUNLLHRoaXMpOmF3YWl0ICR5KHRoaXMsZkwuTkVFRF9VTk1VVEVfVFJBQ0ssdGhpcykpfWFzeW5jIHNldEVuY29kZXJDb25maWd1cmF0aW9uKGUsdCl7aWYoIXRoaXMuX2VuYWJsZWQpdGhyb3cgbmV3IEN5KFJ5LlRSQUNLX0lTX0RJU0FCTEVELFwiY2FuIG5vdCBzZXQgZW5jb2RlciBjb25maWd1cmF0aW9uIHdoZW4gdHJhY2sgaXMgZGlzYWJsZWRcIik7aWYoZT1kTChlKSx0aGlzLl9mb3JjZUJpdHJhdGVMaW1pdCYmKGUuYml0cmF0ZU1heD10aGlzLl9mb3JjZUJpdHJhdGVMaW1pdC5tYXhfYml0cmF0ZT90aGlzLl9mb3JjZUJpdHJhdGVMaW1pdC5tYXhfYml0cmF0ZTplLmJpdHJhdGVNYXgsZS5iaXRyYXRlTWluPXRoaXMuX2ZvcmNlQml0cmF0ZUxpbWl0Lm1pbl9iaXRyYXRlP3RoaXMuX2ZvcmNlQml0cmF0ZUxpbWl0Lm1pbl9iaXRyYXRlOmUuYml0cmF0ZU1pbiksZS53aWR0aHx8ZS5oZWlnaHR8fGUuZnJhbWVSYXRlKXtjb25zdCB0PUFrKHtlbmNvZGVyQ29uZmlnOmV9KTsoWHYoKXx8JHYoKXx8dXkoKSkmJih0LmRldmljZUlkPXZvaWQgMCksZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzZXRFbmNvZGVyQ29uZmlndXJhdGlvbiBhcHBseUNvbnN0cmFpbnRzXCIpLEpTT04uc3RyaW5naWZ5KGUpLEpTT04uc3RyaW5naWZ5KHQpKTt0cnl7YXdhaXQgdGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5hcHBseUNvbnN0cmFpbnRzKHQpLHRoaXMudXBkYXRlTWVkaWFTdHJlYW1UcmFja1Jlc29sdXRpb24oKX1jYXRjaChlKXtjb25zdCB0PW5ldyBDeShSeS5VTkVYUEVDVEVEX0VSUk9SLGUudG9TdHJpbmcoKSk7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBhcHBseUNvbnN0cmFpbnRzIGVycm9yXCIpLHQudG9TdHJpbmcoKSksdH19dGhpcy5fZW5jb2RlckNvbmZpZz1lLC0xPT09dGhpcy5faGludHMuaW5kZXhPZihtTC5TQ1JFRU5fVFJBQ0spJiZ0aGlzLnVwZGF0ZUJpdHJhdGVGcm9tUHJvZmlsZSgpO3RyeXthd2FpdCAkeSh0aGlzLGZMLk5FRURfVVBEQVRFX1ZJREVPX0VOQ09ERVIsdGhpcyl9Y2F0Y2goZSl7cmV0dXJuIGUudGhyb3coZmIpfX1nZXRTdGF0cygpe2RBKCgoKT0+e2ZiLndhcm5pbmcoXCJbZGVwcmVjYXRlZF0gTG9jYWxWaWRlb1RyYWNrLmdldFN0YXRzIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgZnV0dXJlLCB1c2UgQWdvcmFSVENDbGllbnQuZ2V0TG9jYWxWaWRlb1N0YXRzIGluc3RlYWRcIil9KSxcImxvY2FsVmlkZW9UcmFja0dldFN0YXRzV2FybmluZ1wiKTtyZXR1cm4gZUEodGhpcyxmTC5HRVRfU1RBVFMpfHxHTCh7fSxiTCl9YXN5bmMgc2V0QmVhdXR5RWZmZWN0KGUpe2ZiLmVycm9yKFwiTG9jYWxWaWRlb1RyYWNrLnNldEJlYXV0eUVmZmVjdCB3YXMgZGVwcmVjYXRlZCwgcGxlYXNlIG1pZ3JhdGUgdG8gYWdvcmEtZXh0ZW5zaW9uLWJlYXV0eS1lZmZlY3RcIil9Z2V0Q3VycmVudEZyYW1lRGF0YSgpe3JldHVybiB0aGlzLl9wbGF5ZXI/dGhpcy5fcGxheWVyLmdldEN1cnJlbnRGcmFtZSgpOm5ldyBJbWFnZURhdGEoMiwyKX1hc3luYyBnZXRDdXJyZW50RnJhbWVJbWFnZShlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06MTtyZXR1cm4gdGhpcy5fcGxheWVyP3RoaXMuX3BsYXllci5nZXRDdXJyZW50RnJhbWVUb1VpbnQ4QXJyYXkoZSx0KTphd2FpdCBOayhlKX1hc3luYyBzZXRCaXRyYXRlTGltaXQoZSl7aWYoZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzZXQgYml0cmF0ZSBsaW1pdCwgXCIpLmNvbmNhdChKU09OLnN0cmluZ2lmeShlKSkpLGUpe3RoaXMuX2ZvcmNlQml0cmF0ZUxpbWl0PWUsdGhpcy5fZW5jb2RlckNvbmZpZyYmKHRoaXMuX2VuY29kZXJDb25maWcuYml0cmF0ZU1heD90aGlzLl9lbmNvZGVyQ29uZmlnLmJpdHJhdGVNYXg9dGhpcy5fZW5jb2RlckNvbmZpZy5iaXRyYXRlTWF4PGUubWF4X2JpdHJhdGU/dGhpcy5fZW5jb2RlckNvbmZpZy5iaXRyYXRlTWF4OmUubWF4X2JpdHJhdGU6dGhpcy5fZW5jb2RlckNvbmZpZy5iaXRyYXRlTWF4PWUubWF4X2JpdHJhdGUsdGhpcy5fZW5jb2RlckNvbmZpZy5iaXRyYXRlTWluLHRoaXMuX2VuY29kZXJDb25maWcuYml0cmF0ZU1pbj1lLm1pbl9iaXRyYXRlKTt0cnl7YXdhaXQgJHkodGhpcyxmTC5ORUVEX1VQREFURV9WSURFT19FTkNPREVSLHRoaXMpfWNhdGNoKGUpe3JldHVybiBlLnRocm93KGZiKX19fWFzeW5jIHNldE9wdGltaXphdGlvbk1vZGUoZSl7aWYoXCJtb3Rpb25cIiE9PWUmJlwiZGV0YWlsXCIhPT1lJiZcImJhbGFuY2VkXCIhPT1lKXJldHVybiB2b2lkIGZiLmVycm9yKFJ5LklOVkFMSURfUEFSQU1TLFwib3B0aW1pemF0aW9uIG1vZGUgbXVzdCBiZSBtb3Rpb24sIGRldGFpbCBvciBiYWxhbmNlZFwiKTtjb25zdCB0PXRoaXMuX29wdGltaXphdGlvbk1vZGU7dHJ5e3RoaXMuX29wdGltaXphdGlvbk1vZGU9ZSxhd2FpdCAkeSh0aGlzLGZMLk5FRURfVVBEQVRFX1ZJREVPX1NFTkRfUEFSQU1FVEVSUyx0aGlzKX1jYXRjaChlKXt0aHJvdyB0aGlzLl9vcHRpbWl6YXRpb25Nb2RlPXQsZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzZXQgb3B0aW1pemF0aW9uIG1vZGUgZmFpbGVkXCIpLGUudG9TdHJpbmcoKSksZX1mYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc2V0IG9wdGltaXphdGlvbiBtb2RlIHN1Y2Nlc3MgKFwiKS5jb25jYXQoZSxcIilcIikpfXNldFNjYWxhYmlsdHlNb2RlKGUpe2lmKDE9PT1lLm51bVNwYXRpYWxMYXllcnMmJjEhPT1lLm51bVRlbXBvcmFsTGF5ZXJzKXJldHVybiBmYi5lcnJvcihSeS5JTlZBTElEX1BBUkFNUyxcInNjYWxhYmlsaXR5IG1vZGUgY3VycmVudGx5IG5vdCBzdXBwb3J0ZWQsIG5vIFNWQy5cIiksdm9pZCh0aGlzLl9zY2FsYWJpbGl0eU1vZGU9e251bVNwYXRpYWxMYXllcnM6MSxudW1UZW1wb3JhbExheWVyczoxfSk7dGhpcy5fc2NhbGFiaWxpdHlNb2RlPWUsZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHNldCBzY2FsYWJpbGl0eSBtb2RlIHN1Y2Nlc3MgKFwiKS5jb25jYXQoZSxcIilcIikpfXVwZGF0ZU1lZGlhU3RyZWFtVHJhY2tSZXNvbHV0aW9uKCl7eWsodGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjaykudGhlbigoZT0+e2xldFt0LGldPWU7dGhpcy5fdmlkZW9IZWlnaHQ9aSx0aGlzLl92aWRlb1dpZHRoPXR9KSkuY2F0Y2goZ0EpfV91cGRhdGVQbGF5ZXJTb3VyY2UoKXt0aGlzLl9wbGF5ZXImJnRoaXMuX3BsYXllci51cGRhdGVWaWRlb1RyYWNrKHRoaXMuX21lZGlhU3RyZWFtVHJhY2spfV9nZXREZWZhdWx0UGxheWVyQ29uZmlnKCl7cmV0dXJue2ZpdDpcImNvbnRhaW5cIn19YXN5bmMgc2V0U2VuZGVyQ29uZmlndXJhdGlvbihlKXtpZighdGhpcy5fZW5hYmxlZCl0aHJvdyBuZXcgQ3koUnkuVFJBQ0tfSVNfRElTQUJMRUQsXCJjYW4gbm90IHNldCBlbmNvZGVyIGNvbmZpZ3VyYXRpb24gd2hlbiB0cmFjayBpcyBkaXNhYmxlZFwiKTtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHNldFNlbmRlckNvbmZpZ3VyYXRpb24gYXBwbHlDb25zdHJhaW50c1wiKSxKU09OLnN0cmluZ2lmeShlKSksZT1kTChlKSx0aGlzLl9mb3JjZUJpdHJhdGVMaW1pdCYmKGUuYml0cmF0ZU1heD10aGlzLl9mb3JjZUJpdHJhdGVMaW1pdC5tYXhfYml0cmF0ZT90aGlzLl9mb3JjZUJpdHJhdGVMaW1pdC5tYXhfYml0cmF0ZTplLmJpdHJhdGVNYXgsZS5iaXRyYXRlTWluPXRoaXMuX2ZvcmNlQml0cmF0ZUxpbWl0Lm1pbl9iaXRyYXRlP3RoaXMuX2ZvcmNlQml0cmF0ZUxpbWl0Lm1pbl9iaXRyYXRlOmUuYml0cmF0ZU1pbiksdGhpcy5fZW5jb2RlckNvbmZpZz1lLC0xPT09dGhpcy5faGludHMuaW5kZXhPZihtTC5TQ1JFRU5fVFJBQ0spJiZ0aGlzLnVwZGF0ZUJpdHJhdGVGcm9tUHJvZmlsZSgpO3RyeXthd2FpdCAkeSh0aGlzLGZMLk5FRURfVVBEQVRFX1ZJREVPX0VOQ09ERVIsdGhpcyl9Y2F0Y2goZSl7cmV0dXJuIGUudGhyb3coZmIpfX11cGRhdGVCaXRyYXRlRnJvbVByb2ZpbGUoKXtpZighdGhpcy5fZW5jb2RlckNvbmZpZylyZXR1cm47Y29uc3R7d2lkdGg6ZSxoZWlnaHQ6dCxmcmFtZVJhdGU6aX09dGhpcy5nZXRNZWRpYVN0cmVhbVRyYWNrU2V0dGluZ3MoKTtpZighZXx8IXR8fCFpKXJldHVybjtjb25zdHtiaXRyYXRlTWF4Om4sYml0cmF0ZU1pbjpyfT10aGlzLl9lbmNvZGVyQ29uZmlnO2lmKG51bGw9PXJ8fG51bGw9PW4pe2NvbnN0e21heDpvLG1pbjpzfT1mdW5jdGlvbihlLHQsaSxuLHIpe2NvbnN0IG89WEEoXCJCSVRSQVRFX0FEQVBURVJfVFlQRVwiKTtpZihcIkRFRkFVTFRfQklUUkFURVwiPT09bylyZXR1cm57bWluOm4sbWF4OnJ9O2lmKHZvaWQgMD09PXIpe3ZhciBzO2NvbnN0IGE9TWF0aC5mbG9vcigyMDAqTWF0aC5wb3coaS8xNSwuNikqTWF0aC5wb3coZSp0LzY0MC8zNjAsLjc1KSk7cj1cIlNUQU5EQVJEX0JJVFJBVEVcIj09PW8/NCphOjIqYSxuPW51bGwhPT0ocz1uKSYmdm9pZCAwIT09cz9zOmF9ZWxzZXt2YXIgYTtuPW51bGwhPT0oYT1uKSYmdm9pZCAwIT09YT9hOk1hdGguZmxvb3Ioci8xMCl9cmV0dXJue21pbjpuLG1heDpyfX0oZSx0LGkscixuKTt0aGlzLl9lbmNvZGVyQ29uZmlnLmJpdHJhdGVNaW49cyx0aGlzLl9lbmNvZGVyQ29uZmlnLmJpdHJhdGVNYXg9byxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHVwZGF0ZSBiaXRyYXRlIGZyb20gcHJvZmlsZSwgW3c6IFwiKS5jb25jYXQoZSxcIiwgaDogXCIpLmNvbmNhdCh0LFwiLCBmcHM6IFwiKS5jb25jYXQoaSxcIl0gPT4gW2JyTWF4OiBcIikuY29uY2F0KG8sXCIsIGJyTWluOiBcIikuY29uY2F0KHMsXCJdXCIpKX19Z2V0VmlkZW9FbGVtZW50VmlzaWJsZVN0YXR1cygpe3RyeXt2YXIgZSx0O2NvbnN0IGk9bnVsbD09dGhpc3x8bnVsbD09PShlPXRoaXMuX3BsYXllcil8fHZvaWQgMD09PWU/dm9pZCAwOmUuZ2V0Q29udGFpbmVyRWxlbWVudCgpLG49e3RyYWNrOnRoaXMsZWxlbWVudDpudWxsPT10aGlzfHxudWxsPT09KHQ9dGhpcy5fcGxheWVyKXx8dm9pZCAwPT09dD92b2lkIDA6dC5nZXRWaWRlb0VsZW1lbnQoKSxzbG90Om51bGw9PWk/dm9pZCAwOmkucGFyZW50RWxlbWVudH0se2VsZW1lbnQ6cixzbG90Om99PW47aWYodGhpcy5pc1BsYXlpbmcmJnIgaW5zdGFuY2VvZiBIVE1MVmlkZW9FbGVtZW50JiZvIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpe2NvbnN0IGU9THkuY2hlY2tPbmVFbGVtZW50VmlzaWJsZShyKSx0PU9iamVjdC5hc3NpZ24oe30sZSk7aWYodC52aXNpYmxlIT09dGhpcy5fcHJldmlvdXNWaWRlb1Zpc2libGVTdGF0dXMpe3RoaXMuX3ByZXZpb3VzVmlkZW9WaXNpYmxlU3RhdHVzPXQudmlzaWJsZTtjb25zdCBlPXZiLnJlcG9ydEFwaUludm9rZShudWxsLHt0YWc6ankuVFJBQ0VSLG5hbWU6QnkuTE9DQUxfVklERU9fVFJBQ0tfR0VUX1ZJREVPX1ZJU0lCTEUsb3B0aW9uczpbdGhpcy5nZXRUcmFja0lkKCldfSk7dC52aXNpYmxlP2Uub25TdWNjZXNzKFwiVmlkZW8gaXMgdmlzaWJsZVwiKTplLm9uU3VjY2VzcyhcIkludmlzaWJsZSBiZWNhdXNlIG9mIFwiLmNvbmNhdCh0LnJlYXNvbikpfXJldHVybiB0fXJldHVybn1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuR0VUX1ZJREVPX0VMRU1FTlRfVklTSUJMRV9FUlJPUixlLm1lc3NhZ2UpfX1hc3luYyByZW5ld01lZGlhU3RyZWFtVHJhY2soZSl7fXBpcGUoZSl7aWYodGhpcy5wcm9jZXNzb3I9PT1lKXJldHVybiBlO2lmKGUuX3NvdXJjZSl0aHJvdyBuZXcgQ3koUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJQcm9jZXNzb3IgXCIuY29uY2F0KGUubmFtZSxcIiBhbHJlYWR5IHBpcGVkLCBwbGVhc2UgY2FsbCB1bnBpcGUgYmVmb3JlaGFuZC5cIikpO3JldHVybiB0aGlzLnVucGlwZSgpLHRoaXMucHJvY2Vzc29yPWUsdGhpcy5wcm9jZXNzb3IuX3NvdXJjZT10aGlzLGUudXBkYXRlSW5wdXQoe3RyYWNrOnRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2ssY29udGV4dDp0aGlzLnByb2Nlc3NvckNvbnRleHR9KSxlfXVucGlwZSgpe2lmKCF0aGlzLnByb2Nlc3NvcilyZXR1cm47Y29uc3QgZT10aGlzLnByb2Nlc3Nvcjt0aGlzLnByb2Nlc3Nvci5fc291cmNlPXZvaWQgMCx0aGlzLnByb2Nlc3Nvcj12b2lkIDAsZS5yZXNldCgpfWNsb3NlKCl7c3VwZXIuY2xvc2UoKSx0aGlzLnVuYmluZFByb2Nlc3NvckRlc3RpbmF0aW9uRXZlbnRzKCksdGhpcy51bmJpbmRQcm9jZXNzb3JDb250ZXh0RXZlbnRzKCksdGhpcy51bnBpcGUoKSx0aGlzLnByb2Nlc3NvckRlc3RpbmF0aW9uLl9zb3VyY2UmJnRoaXMucHJvY2Vzc29yRGVzdGluYXRpb24uX3NvdXJjZS51bnBpcGUoKX1jbG9uZSh0KXtsZXQgaT0hKGFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdKXx8YXJndW1lbnRzWzFdLG49dGhpcy5fZW5jb2RlckNvbmZpZzt0JiYobj1HTChHTCh7fSxuKSxkTCh0KSkpLG49YUEobik7Y29uc3Qgcj1UQSg4LFwidHJhY2stdmlkZW8tY2xvbmVkLVwiKSxvPW5ldyBlKGk/dGhpcy5fbWVkaWFTdHJlYW1UcmFjay5jbG9uZSgpOnRoaXMuX21lZGlhU3RyZWFtVHJhY2ssbixhQSh0aGlzLl9zY2FsYWJpbGl0eU1vZGUpLHRoaXMuX29wdGltaXphdGlvbk1vZGUscixhQSh0aGlzLl9oaW50cykpO3JldHVybiB0JiZuJiZvLnNldEVuY29kZXJDb25maWd1cmF0aW9uKG4pLGZiLmRlYnVnKFwiY2xvbmUgdmlkZW8gdHJhY2sgZnJvbSBcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCIgdG8gXCIpLmNvbmNhdChyLFwiLCBjbG9uZSBcIikuY29uY2F0KGkpKSxvfWFzeW5jIHJlcGxhY2VUcmFjayhlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIE1lZGlhU3RyZWFtVHJhY2spKXRocm93IG5ldyBDeShSeS5JTlZBTElEX1BBUkFNUyxcInRyYWNrIHNob3VsZCBiZSBhbiBpbnN0YW5jZSBvZiBNZWRpYVN0cmVhbVRyYWNrXCIpO2lmKFwidmlkZW9cIiE9PWUua2luZCl0aHJvdyBuZXcgQ3koUnkuSU5WQUxJRF9QQVJBTVMsXCJ0cmFjayBzaG91bGQgYmUgYSB2aWRlbyBNZWRpYVN0cmVhbVRyYWNrXCIpO2F3YWl0IHRoaXMuX3VwZGF0ZU9yaWdpbk1lZGlhU3RyZWFtVHJhY2soZSx0LCEwKSx0aGlzLnVwZGF0ZU1lZGlhU3RyZWFtVHJhY2tSZXNvbHV0aW9uKCl9c2VuZFNlaURhdGEoZSl7aWYoZEEoKCgpPT57dmIucmVwb3J0QXBpSW52b2tlKG51bGwse25hbWU6QnkuTE9DQUxfVklERU9fU0VORF9TRUlfREFUQSxvcHRpb25zOltdLHRhZzpqeS5UUkFDRVJ9KS5vblN1Y2Nlc3MoXCJcIil9KSx0aGlzLl9tZWRpYVN0cmVhbVRyYWNrLmlkfHx0aGlzLmdldFRyYWNrSWQoKSksIVhBKFwiRU5BQkxFX1ZJREVPX1NFSVwiKXx8IVhBKFwiRU5BQkxFX0VOQ09ERURfVFJBTlNGT1JNXCIpKXJldHVybiB2b2lkIGZiLndhcm5pbmcoJ1RvIHNlbmQvcmVjZWl2ZSBTRUksIHBsZWFzZSBjYWxsIEFnb3JhUlRDLnNldFBhcmFtZXRlcihcIkVOQUJMRV9WSURFT19TRUlcIiwgdHJ1ZSkgYmVmb3JlIGluc3RhbnRpYXRlIElBZ29yYVJ0Y0NsaWVudCcpO2lmKGUgaW5zdGFuY2VvZiBVaW50OEFycmF5PT0wKXJldHVybiBuZXcgQ3koUnkuSU5WQUxJRF9QQVJBTVMsXCJJbnZhbGlkIGFyZ3VtZW50IHR5cGUsIElMb2NhbFZpZGVvVHJhY2suc2VuZFNlaURhdGEoKSBvbmx5IGFjY2VwdCBVaW50OEFycmF5IGFyZ3VtZW50LlwiKS50aHJvdygpO2NvbnN0IHQ9dGhpcy5nZXRSVENSdHBUcmFuc2NlaXZlcigpO2lmKCF0KXJldHVybiB2b2lkIGZiLndhcm5pbmcoXCJWaWRlbyB0cmFjayBpcyBub3QgcHVibGlzaGVkLCBTRUkgY2FuIG5vdCBiZSBzZW5kXCIpO2NvbnN0IGk9dC5zZW5kZXIuZ2V0UGFyYW1ldGVycygpO2lmKDA9PT1pLmNvZGVjcy5sZW5ndGgpcmV0dXJuO2NvbnN0IG49aS5jb2RlY3NbMF0ubWltZVR5cGUudG9Mb2NhbGVMb3dlckNhc2UoKTtcInZpZGVvL2gyNjRcIj09PW4/dGhpcy5zYWZlRW1pdChcInNlaS10by1zZW5kXCIsZSk6ZmIud2FybmluZyhcIlNFSSBpcyBub3Qgc3VwcG9ydGVkIGJ5IFwiLmNvbmNhdChuKSl9YmluZFByb2Nlc3NvckRlc3RpbmF0aW9uRXZlbnRzKCl7dGhpcy5wcm9jZXNzb3JEZXN0aW5hdGlvbi5vbihETC5PTl9UUkFDSywoYXN5bmMgZT0+e2U/ZSE9PXRoaXMuX21lZGlhU3RyZWFtVHJhY2smJih0aGlzLl9tZWRpYVN0cmVhbVRyYWNrPWUsdGhpcy5fdXBkYXRlUGxheWVyU291cmNlKCksYXdhaXQgJHkodGhpcyxmTC5ORUVEX1JFUExBQ0VfVFJBQ0ssdGhpcykpOnRoaXMuX21lZGlhU3RyZWFtVHJhY2shPT10aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrJiYodGhpcy5fbWVkaWFTdHJlYW1UcmFjaz10aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrLHRoaXMuX3VwZGF0ZVBsYXllclNvdXJjZSgpLGF3YWl0ICR5KHRoaXMsZkwuTkVFRF9SRVBMQUNFX1RSQUNLLHRoaXMpKX0pKX11bmJpbmRQcm9jZXNzb3JEZXN0aW5hdGlvbkV2ZW50cygpe3RoaXMucHJvY2Vzc29yRGVzdGluYXRpb24ucmVtb3ZlQWxsTGlzdGVuZXJzKERMLk9OX1RSQUNLKX11bmJpbmRQcm9jZXNzb3JDb250ZXh0RXZlbnRzKCl7dGhpcy5wcm9jZXNzb3JDb250ZXh0LnJlbW92ZUFsbExpc3RlbmVycyhQTC5SRVFVRVNUX1VQREFURV9DT05TVFJBSU5UUyksdGhpcy5wcm9jZXNzb3JDb250ZXh0LnJlbW92ZUFsbExpc3RlbmVycyhQTC5SRVFVRVNUX0NPTlNUUkFJTlRTKX19LEZMKFFNLnByb3RvdHlwZSxcInBsYXlcIixbYk0sd01dLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUU0ucHJvdG90eXBlLFwicGxheVwiKSxRTS5wcm90b3R5cGUpLEZMKFFNLnByb3RvdHlwZSxcInN0b3BcIixbT01dLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUU0ucHJvdG90eXBlLFwic3RvcFwiKSxRTS5wcm90b3R5cGUpLEZMKFFNLnByb3RvdHlwZSxcInNldEVuYWJsZWRcIixbTk0sRE0sUE1dLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUU0ucHJvdG90eXBlLFwic2V0RW5hYmxlZFwiKSxRTS5wcm90b3R5cGUpLEZMKFFNLnByb3RvdHlwZSxcInNldE11dGVkXCIsW0xNLGtNLE1NXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFFNLnByb3RvdHlwZSxcInNldE11dGVkXCIpLFFNLnByb3RvdHlwZSksRkwoUU0ucHJvdG90eXBlLFwic2V0RW5jb2RlckNvbmZpZ3VyYXRpb25cIixbVU0seE1dLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUU0ucHJvdG90eXBlLFwic2V0RW5jb2RlckNvbmZpZ3VyYXRpb25cIiksUU0ucHJvdG90eXBlKSxGTChRTS5wcm90b3R5cGUsXCJnZXRTdGF0c1wiLFtWTV0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihRTS5wcm90b3R5cGUsXCJnZXRTdGF0c1wiKSxRTS5wcm90b3R5cGUpLEZMKFFNLnByb3RvdHlwZSxcInNldEJlYXV0eUVmZmVjdFwiLFtGTSxCTV0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihRTS5wcm90b3R5cGUsXCJzZXRCZWF1dHlFZmZlY3RcIiksUU0ucHJvdG90eXBlKSxGTChRTS5wcm90b3R5cGUsXCJnZXRDdXJyZW50RnJhbWVEYXRhXCIsW2pNXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFFNLnByb3RvdHlwZSxcImdldEN1cnJlbnRGcmFtZURhdGFcIiksUU0ucHJvdG90eXBlKSxGTChRTS5wcm90b3R5cGUsXCJnZXRDdXJyZW50RnJhbWVJbWFnZVwiLFtHTV0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihRTS5wcm90b3R5cGUsXCJnZXRDdXJyZW50RnJhbWVJbWFnZVwiKSxRTS5wcm90b3R5cGUpLEZMKFFNLnByb3RvdHlwZSxcInNldEJpdHJhdGVMaW1pdFwiLFtXTV0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihRTS5wcm90b3R5cGUsXCJzZXRCaXRyYXRlTGltaXRcIiksUU0ucHJvdG90eXBlKSxGTChRTS5wcm90b3R5cGUsXCJzZXRPcHRpbWl6YXRpb25Nb2RlXCIsW0hNXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFFNLnByb3RvdHlwZSxcInNldE9wdGltaXphdGlvbk1vZGVcIiksUU0ucHJvdG90eXBlKSxGTChRTS5wcm90b3R5cGUsXCJzZXRTY2FsYWJpbHR5TW9kZVwiLFtLTV0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihRTS5wcm90b3R5cGUsXCJzZXRTY2FsYWJpbHR5TW9kZVwiKSxRTS5wcm90b3R5cGUpLEZMKFFNLnByb3RvdHlwZSxcInVwZGF0ZU1lZGlhU3RyZWFtVHJhY2tSZXNvbHV0aW9uXCIsW1lNXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFFNLnByb3RvdHlwZSxcInVwZGF0ZU1lZGlhU3RyZWFtVHJhY2tSZXNvbHV0aW9uXCIpLFFNLnByb3RvdHlwZSksRkwoUU0ucHJvdG90eXBlLFwicGlwZVwiLFtxTV0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihRTS5wcm90b3R5cGUsXCJwaXBlXCIpLFFNLnByb3RvdHlwZSksRkwoUU0ucHJvdG90eXBlLFwidW5waXBlXCIsW3pNXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFFNLnByb3RvdHlwZSxcInVucGlwZVwiKSxRTS5wcm90b3R5cGUpLEZMKFFNLnByb3RvdHlwZSxcImNsb3NlXCIsW0pNXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFFNLnByb3RvdHlwZSxcImNsb3NlXCIpLFFNLnByb3RvdHlwZSksRkwoUU0ucHJvdG90eXBlLFwicmVwbGFjZVRyYWNrXCIsW1hNXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFFNLnByb3RvdHlwZSxcInJlcGxhY2VUcmFja1wiKSxRTS5wcm90b3R5cGUpLFFNKSxjVT0oWk09SWIoe2FyZ3NNYXA6KGUsdCk9PltlLmdldFRyYWNrSWQoKSx0XX0pLCRNPVRrKCksZVU9REEoXCJDYW1lcmFWaWRlb1RyYWNrXCIsXCJfZW5hYmxlZE11dGV4XCIpLHRVPUliKHthcmdzTWFwOihlLHQpPT5bZS5nZXRUcmFja0lkKCksdF19KSxpVT1UaygpLG5VPUliKHthcmdzTWFwOihlLHQpPT5bZS5nZXRUcmFja0lkKCksdF19KSxyVT1UaygpLG9VPUliKHthcmdzTWFwOmU9PltlLmdldFRyYWNrSWQoKV19KSxzVT1jbGFzcyBlIGV4dGVuZHMgYVV7Z2V0IF9fY2xhc3NOYW1lX18oKXtyZXR1cm5cIkNhbWVyYVZpZGVvVHJhY2tcIn1jb25zdHJ1Y3RvcihlLHQsaSxuLHIsbyl7c3VwZXIoZSxkTCh0LmVuY29kZXJDb25maWcpLG4scixvKSxCTCh0aGlzLFwiX2NvbmZpZ1wiLHZvaWQgMCksQkwodGhpcyxcIl9vcmlnaW5hbENvbnN0cmFpbnRzXCIsdm9pZCAwKSxCTCh0aGlzLFwiX2NvbnN0cmFpbnRzXCIsdm9pZCAwKSxCTCh0aGlzLFwiX2VuYWJsZWRcIiwhMCksQkwodGhpcyxcIl9kZXZpY2VOYW1lXCIsXCJkZWZhdWx0XCIpLEJMKHRoaXMsXCJ0cnlSZXN1bWVWaWRlb0ZvcklPUzE1XzE2V2VDaGF0XCIsKGFzeW5jKCk9PnsoY3koKXx8ZHkoKSkmJiFmdW5jdGlvbigpe2NvbnN0IGU9SHYoKTtpZihlLm9zIT09RnYuSU9TfHwhZS5vc1ZlcnNpb24pcmV0dXJuITE7Y29uc3QgdD1lLm9zVmVyc2lvbi5zcGxpdChcIi5cIik7cmV0dXJuIDE1PT09TnVtYmVyKHRbMF0pJiZOdW1iZXIodFsxXSk+PTJ9KCkmJmh5KCkmJnRoaXMuX2VuYWJsZWQmJiF0aGlzLl9pc0Nsb3NlZCYmKGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gdHJ5IGNhcHR1cmUgY2FtZXJhIG1lZGlhIGRldmljZSBmb3IgaW50ZXJydXB0ZWQgaU9TIDE1IGRldmljZSBvbiBXZUNoYXQuXCIpKSxhd2FpdCB0aGlzLnJlbmV3TWVkaWFTdHJlYW1UcmFjaygpKX0pKSx0aGlzLl9jb25maWc9dCx0aGlzLl9vcmlnaW5hbENvbnN0cmFpbnRzPWksdGhpcy5fY29uc3RyYWludHM9aSx0aGlzLl9kZXZpY2VOYW1lPWUubGFiZWwsdGhpcy5fZW5jb2RlckNvbmZpZz1kTCh0aGlzLl9jb25maWcuZW5jb2RlckNvbmZpZykscUwub24odEwuSU9TXzE1XzE2X0lOVEVSUlVQVElPTl9FTkQsdGhpcy50cnlSZXN1bWVWaWRlb0ZvcklPUzE1XzE2V2VDaGF0KSxxTC5vbih0TC5JT1NfSU5URVJSVVBUSU9OX0VORCx0aGlzLnRyeVJlc3VtZVZpZGVvRm9ySU9TMTVfMTZXZUNoYXQpLHRoaXMuYmluZFByb2Nlc3NvckNvbnRleHRFdmVudHMoKX1hc3luYyBzZXREZXZpY2UoZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGU/dGhpcy5fc2V0RGV2aWNlQnlJZChlKTplLmRldmljZUlkP3RoaXMuX3NldERldmljZUJ5SWQoZS5kZXZpY2VJZCk6ZS5mYWNpbmdNb2RlP3RoaXMuX3NldERldmljZUJ5RmFjaW5nTW9kZWwoZS5mYWNpbmdNb2RlKTp2b2lkIDB9YXN5bmMgX3NldERldmljZUJ5SWQoZSl7aWYoZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHNldCBkZXZpY2UgdG8gXCIpLmNvbmNhdChlKSksdGhpcy5fZW5hYmxlZCl0cnl7Y29uc3QgdD1hd2FpdCB1ay5nZXREZXZpY2VCeUlkKGUpLGk9e307aS52aWRlbz1HTCh7fSx0aGlzLl9jb25zdHJhaW50cyksaS52aWRlby5kZXZpY2VJZD17ZXhhY3Q6ZX0saS52aWRlby5mYWNpbmdNb2RlPXZvaWQgMCx0aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrLnN0b3AoKTtsZXQgbj1udWxsO3RyeXtuPWF3YWl0IGFrKGksdGhpcy5nZXRUcmFja0lkKCkpfWNhdGNoKGUpe3Rocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc2V0RGV2aWNlIGZhaWxlZFwiKSxlLnRvU3RyaW5nKCkpLG49YXdhaXQgYWsoe3ZpZGVvOnRoaXMuX2NvbnN0cmFpbnRzfSx0aGlzLmdldFRyYWNrSWQoKSksYXdhaXQgdGhpcy5fdXBkYXRlT3JpZ2luTWVkaWFTdHJlYW1UcmFjayhuLmdldFZpZGVvVHJhY2tzKClbMF0sITEpLGV9YXdhaXQgdGhpcy5fdXBkYXRlT3JpZ2luTWVkaWFTdHJlYW1UcmFjayhuLmdldFZpZGVvVHJhY2tzKClbMF0sITEpLHRoaXMudXBkYXRlTWVkaWFTdHJlYW1UcmFja1Jlc29sdXRpb24oKSx0aGlzLl9kZXZpY2VOYW1lPXQubGFiZWwsdGhpcy5fY29uZmlnLmNhbWVyYUlkPWUsdGhpcy5fY29uc3RyYWludHMuZGV2aWNlSWQ9e2V4YWN0OmV9fWNhdGNoKGUpe3Rocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc2V0RGV2aWNlIGVycm9yXCIpLGUudG9TdHJpbmcoKSksZX1lbHNlIHRyeXtjb25zdCB0PWF3YWl0IHVrLmdldERldmljZUJ5SWQoZSk7dGhpcy5fZGV2aWNlTmFtZT10LmxhYmVsLHRoaXMuX2NvbmZpZy5jYW1lcmFJZD1lLHRoaXMuX2NvbnN0cmFpbnRzLmRldmljZUlkPXtleGFjdDplfX1jYXRjaChlKXt0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHNldERldmljZSBlcnJvclwiKSxlLnRvU3RyaW5nKCkpLGV9ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHNldERldmljZSBzdWNjZXNzXCIpKX1hc3luYyBfc2V0RGV2aWNlQnlGYWNpbmdNb2RlbChlKXtmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc2V0IGZhY2luZ01vZGUgXCIpLmNvbmNhdChlKSk7Y29uc3QgdD17dmlkZW86R0woR0woe30sdGhpcy5fY29uc3RyYWludHMpLHt9LHtkZXZpY2VJZDp2b2lkIDAsZmFjaW5nTW9kZTp7ZXhhY3Q6ZX19KX07aWYodGhpcy5fZW5hYmxlZCl7dGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5zdG9wKCk7bGV0IGU9bnVsbDt0cnl7ZT1hd2FpdCBhayh0LHRoaXMuZ2V0VHJhY2tJZCgpKX1jYXRjaCh0KXt0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHNldERldmljZUJ5RmFjaW5nTW9kZWwgZmFpbGVkXCIpLHQudG9TdHJpbmcoKSksZT1hd2FpdCBhayh7dmlkZW86dGhpcy5fY29uc3RyYWludHN9LHRoaXMuZ2V0VHJhY2tJZCgpKSxhd2FpdCB0aGlzLl91cGRhdGVPcmlnaW5NZWRpYVN0cmVhbVRyYWNrKGUuZ2V0VmlkZW9UcmFja3MoKVswXSwhMSksdH1hd2FpdCB0aGlzLl91cGRhdGVPcmlnaW5NZWRpYVN0cmVhbVRyYWNrKGUuZ2V0VmlkZW9UcmFja3MoKVswXSwhMSksdGhpcy51cGRhdGVNZWRpYVN0cmVhbVRyYWNrUmVzb2x1dGlvbigpfXRoaXMuX2RldmljZU5hbWU9XCJcIix0aGlzLl9jb25maWcuZmFjaW5nTW9kZT1lLHRoaXMuX2NvbmZpZy5jYW1lcmFJZD12b2lkIDAsdGhpcy5fY29uc3RyYWludHM9R0woe30sdC52aWRlbyksZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHNldERldmljZUJ5RmFjaW5nTW9kZWwgc3VjY2Vzc1wiKSl9YXN5bmMgc2V0RW5hYmxlZChlLHQpe2lmKCF0KXtpZihlPT09dGhpcy5fZW5hYmxlZClyZXR1cm47dGhpcy5zdGF0ZUNoZWNrKFwiZW5hYmxlZFwiLGUpfWlmKGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzdGFydCBzZXRFbmFibGVkXCIpLGUpLGUpe3RyeXtpZih0aGlzLmlzRXh0ZXJuYWxUcmFjayl0aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrLmVuYWJsZWQ9ITA7ZWxzZXtjb25zdCBlPWF3YWl0IGFrKHt2aWRlbzp0aGlzLl9jb25zdHJhaW50c30sdGhpcy5nZXRUcmFja0lkKCkpO2F3YWl0IHRoaXMuX3VwZGF0ZU9yaWdpbk1lZGlhU3RyZWFtVHJhY2soZS5nZXRWaWRlb1RyYWNrcygpWzBdLCExKX1hd2FpdCAkeSh0aGlzLGZMLk5FRURfRU5BQkxFX1RSQUNLLHRoaXMpfWNhdGNoKGUpe3Rocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc2V0RW5hYmxlZCB0cnVlIGVycm9yXCIpLGUudG9TdHJpbmcoKSksZX10aGlzLnVwZGF0ZU1lZGlhU3RyZWFtVHJhY2tSZXNvbHV0aW9uKCksZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHNldEVuYWJsZWQgdG8gdHJ1ZSBzdWNjZXNzXCIpKSx0fHwodGhpcy5fZW5hYmxlZD0hMCl9ZWxzZXt0aGlzLmlzRXh0ZXJuYWxUcmFjaz90aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrLmVuYWJsZWQ9ITE6KHRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2sub25lbmRlZD1udWxsLHRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suc3RvcCgpKSx0fHwodGhpcy5fZW5hYmxlZD0hMSk7dHJ5e2F3YWl0ICR5KHRoaXMsZkwuTkVFRF9ESVNBQkxFX1RSQUNLLHRoaXMpfWNhdGNoKGUpe3Rocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc2V0RW5hYmxlZCB0byBmYWxzZSBlcnJvclwiKSxlLnRvU3RyaW5nKCkpLGV9ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHNldEVuYWJsZWQgdG8gZmFsc2Ugc3VjY2Vzc1wiKSl9fWFzeW5jIHNldEVuY29kZXJDb25maWd1cmF0aW9uKGUsdCl7aWYoIXRoaXMuX2VuYWJsZWQpdGhyb3cgbmV3IEN5KFJ5LlRSQUNLX0lTX0RJU0FCTEVELFwiY2FuIG5vdCBzZXQgZW5jb2RlciBjb25maWd1cmF0aW9uIHdoZW4gdHJhY2sgaXMgZGlzYWJsZWRcIik7ZT1kTChlKSx0aGlzLl9mb3JjZUJpdHJhdGVMaW1pdCYmKGUuYml0cmF0ZU1heD10aGlzLl9mb3JjZUJpdHJhdGVMaW1pdC5tYXhfYml0cmF0ZXx8ZS5iaXRyYXRlTWF4LGUuYml0cmF0ZU1pbj10aGlzLl9mb3JjZUJpdHJhdGVMaW1pdC5taW5fYml0cmF0ZXx8ZS5iaXRyYXRlTWluKTtjb25zdCBpPXNBKHRoaXMuX2NvbmZpZyk7aS5lbmNvZGVyQ29uZmlnPWU7Y29uc3Qgbj1BayhpKTsoWHYoKXx8JHYoKXx8dXkoKSkmJihuLmRldmljZUlkPXZvaWQgMCksZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzZXRFbmNvZGVyQ29uZmlndXJhdGlvbiBhcHBseUNvbnN0cmFpbnRzXCIpLEpTT04uc3RyaW5naWZ5KGUpLEpTT04uc3RyaW5naWZ5KG4pKTt0cnl7YXdhaXQgdGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5hcHBseUNvbnN0cmFpbnRzKG4pLHRoaXMudXBkYXRlTWVkaWFTdHJlYW1UcmFja1Jlc29sdXRpb24oKX1jYXRjaChlKXtjb25zdCB0PW5ldyBDeShSeS5VTkVYUEVDVEVEX0VSUk9SLGUudG9TdHJpbmcoKSk7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBhcHBseUNvbnN0cmFpbnRzIGVycm9yXCIpLHQudG9TdHJpbmcoKSksdH10aGlzLl9jb25maWc9aSx0aGlzLl9jb25zdHJhaW50cz1uLHRoaXMuX29yaWdpbmFsQ29uc3RyYWludHM9bix0aGlzLl9lbmNvZGVyQ29uZmlnPWUsLTE9PT10aGlzLl9oaW50cy5pbmRleE9mKG1MLlNDUkVFTl9UUkFDSykmJnRoaXMudXBkYXRlQml0cmF0ZUZyb21Qcm9maWxlKCk7dHJ5e2F3YWl0ICR5KHRoaXMsZkwuTkVFRF9VUERBVEVfVklERU9fRU5DT0RFUix0aGlzKX1jYXRjaChlKXtyZXR1cm4gZS50aHJvdyhmYil9fV9nZXREZWZhdWx0UGxheWVyQ29uZmlnKCl7cmV0dXJue21pcnJvcjohMCxmaXQ6XCJjb3ZlclwifX1vblRyYWNrRW5kZWQoKXtpZigoJHYoKXx8dXkoKSkmJnRoaXMuX2VuYWJsZWQmJiF0aGlzLl9pc0Nsb3NlZCYmcUwuZHVyaW5nSW50ZXJydXB0aW9uKXtjb25zdCBlPWFzeW5jKCk9PntxTC5vZmYodEwuSU9TX0lOVEVSUlVQVElPTl9FTkQsZSksdGhpcy5fZW5hYmxlZCYmIXRoaXMuX2lzQ2xvc2VkJiYoZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSB0cnkgY2FwdHVyZSBjYW1lcmEgbWVkaWEgZGV2aWNlIGZvciBpbnRlcnJ1cHRlZCBpT1MgZGV2aWNlLlwiKSksYXdhaXQgdGhpcy5zZXRFbmFibGVkKCExKSxhd2FpdCB0aGlzLnNldEVuYWJsZWQoITApKX07cUwub24odEwuSU9TX0lOVEVSUlVQVElPTl9FTkQsZSl9ZWxzZSBmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCJdIHRyYWNrIGVuZGVkXCIpKSx0aGlzLnNhZmVFbWl0KENMLlRSQUNLX0VOREVEKX1hc3luYyByZW5ld01lZGlhU3RyZWFtVHJhY2soZSl7Y29uc3QgdD1lfHx0aGlzLl9jb25zdHJhaW50cyxpPXVrLnNlYXJjaERldmljZUlkQnlOYW1lKHRoaXMuX2RldmljZU5hbWUpO2lmKGkmJiF0LmRldmljZUlkJiYodC5kZXZpY2VJZD17ZXhhY3Q6aX0pLHRoaXMuX2VuYWJsZWQpe2NvbnN0IGU9YXdhaXQgYWsoe3ZpZGVvOnR9LHRoaXMuZ2V0VHJhY2tJZCgpKTt0aGlzLl9jb25zdHJhaW50cz10LGF3YWl0IHRoaXMuX3VwZGF0ZU9yaWdpbk1lZGlhU3RyZWFtVHJhY2soZS5nZXRWaWRlb1RyYWNrcygpWzBdLCEwKSx0aGlzLnVwZGF0ZU1lZGlhU3RyZWFtVHJhY2tSZXNvbHV0aW9uKCl9fWNsb3NlKCl7c3VwZXIuY2xvc2UoKSxxTC5vZmYodEwuSU9TXzE1XzE2X0lOVEVSUlVQVElPTl9FTkQsdGhpcy50cnlSZXN1bWVWaWRlb0ZvcklPUzE1XzE2V2VDaGF0KSxxTC5vZmYodEwuSU9TX0lOVEVSUlVQVElPTl9FTkQsdGhpcy50cnlSZXN1bWVWaWRlb0ZvcklPUzE1XzE2V2VDaGF0KX1jbG9uZSh0KXtsZXQgaT0hKGFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdKXx8YXJndW1lbnRzWzFdLG49dGhpcy5fZW5jb2RlckNvbmZpZzt0JiYobj1HTChHTCh7fSxuKSxkTCh0KSkpLG49YUEobik7Y29uc3Qgcj1UQSg4LFwidHJhY2stY2FtLWNsb25lZC1cIiksbz1uZXcgZShpP3RoaXMuX21lZGlhU3RyZWFtVHJhY2suY2xvbmUoKTp0aGlzLl9tZWRpYVN0cmVhbVRyYWNrLGFBKEdMKEdMKHt9LHRoaXMuX2NvbmZpZykse30se2VuY29kZXJDb25maWc6bn0pKSxhQSh0aGlzLl9jb25zdHJhaW50cyksYUEodGhpcy5fc2NhbGFiaWxpdHlNb2RlKSx0aGlzLl9vcHRpbWl6YXRpb25Nb2RlLHIpO3JldHVybiB0JiZuJiZvLnNldEVuY29kZXJDb25maWd1cmF0aW9uKG4pLGZiLmRlYnVnKFwiY2xvbmUgdHJhY2sgZnJvbSBcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksXCIgdG8gXCIpLmNvbmNhdChyLFwiLCBjbG9uZSBcIikuY29uY2F0KGkpKSxvfWJpbmRQcm9jZXNzb3JDb250ZXh0RXZlbnRzKCl7dGhpcy5wcm9jZXNzb3JDb250ZXh0Lm9uKFBMLlJFUVVFU1RfVVBEQVRFX0NPTlNUUkFJTlRTLChhc3luYyhlLHQsaSk9Pnt0cnl7Y29uc3QgaT1PYmplY3QuYXNzaWduKHt9LHRoaXMuX29yaWdpbmFsQ29uc3RyYWludHMsLi4uZSk7YXdhaXQgdGhpcy5yZW5ld01lZGlhU3RyZWFtVHJhY2soaSksdCgpfWNhdGNoKGUpe2koZSl9fSkpLHRoaXMucHJvY2Vzc29yQ29udGV4dC5vbihQTC5SRVFVRVNUX0NPTlNUUkFJTlRTLChhc3luYyBlPT57ZSh0aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrLmdldFNldHRpbmdzKCkpfSkpfX0sRkwoc1UucHJvdG90eXBlLFwic2V0RGV2aWNlXCIsW1pNLCRNXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNVLnByb3RvdHlwZSxcInNldERldmljZVwiKSxzVS5wcm90b3R5cGUpLEZMKHNVLnByb3RvdHlwZSxcInNldEVuYWJsZWRcIixbZVUsdFUsaVVdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc1UucHJvdG90eXBlLFwic2V0RW5hYmxlZFwiKSxzVS5wcm90b3R5cGUpLEZMKHNVLnByb3RvdHlwZSxcInNldEVuY29kZXJDb25maWd1cmF0aW9uXCIsW25VLHJVXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNVLnByb3RvdHlwZSxcInNldEVuY29kZXJDb25maWd1cmF0aW9uXCIpLHNVLnByb3RvdHlwZSksRkwoc1UucHJvdG90eXBlLFwiY2xvc2VcIixbb1VdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc1UucHJvdG90eXBlLFwiY2xvc2VcIiksc1UucHJvdG90eXBlKSxzVSk7ZnVuY3Rpb24gZFUoZSx0LGksbil7aS5vcHRpbWl6YXRpb25Nb2RlJiYobiYmbi53aWR0aCYmbi5oZWlnaHQ/KGkuZW5jb2RlckNvbmZpZz1HTChHTCh7fSxuKSx7fSx7Yml0cmF0ZU1pbjpuLmJpdHJhdGVNaW4sYml0cmF0ZU1heDpuLmJpdHJhdGVNYXh9KSxcIm1vdGlvblwiIT09aS5vcHRpbWl6YXRpb25Nb2RlJiZcImRldGFpbFwiIT09aS5vcHRpbWl6YXRpb25Nb2RlfHwodC5jb250ZW50SGludD1pLm9wdGltaXphdGlvbk1vZGUsdC5jb250ZW50SGludD09PWkub3B0aW1pemF0aW9uTW9kZT9mYi5kZWJ1ZyhcIltcIi5jb25jYXQoZSxcIl0gc2V0IGNvbnRlbnQgaGludCB0b1wiKSxpLm9wdGltaXphdGlvbk1vZGUpOmZiLmRlYnVnKFwiW1wiLmNvbmNhdChlLFwiXSBzZXQgY29udGVudCBoaW50IGZhaWxlZFwiKSkpKTpmYi53YXJuaW5nKFwiW1wiLmNvbmNhdChlLFwiXSBjYW4gbm90IGFwcGx5IG9wdGltaXphdGlvbiBtb2RlIGJpdHJhdGUgY29uZmlnLCBubyBlbmNvZGVyQ29uZmlnXCIpKSl9dmFyIGxVLHVVLGhVLHBVLF9VLEVVLGZVLG1VLFRVLFNVLGdVLFJVO2NsYXNzIENVIGV4dGVuZHMgV0x7Z2V0VXNlcklkKCl7cmV0dXJuIHRoaXMuX3VzZXJJZH1jb25zdHJ1Y3RvcihlLHQsaSxuKXtzdXBlcihlLFwidHJhY2stXCIuY29uY2F0KGUua2luZCxcIi1cIikuY29uY2F0KHQsXCItXCIpLmNvbmNhdChuLmNsaWVudElkLFwiX1wiKS5jb25jYXQoVEEoNSxcIlwiKSkpLEJMKHRoaXMsXCJfdXNlcklkXCIsdm9pZCAwKSxCTCh0aGlzLFwiX3VpbnRJZFwiLHZvaWQgMCksQkwodGhpcyxcIl9pc0Rlc3Ryb3llZFwiLCExKSxCTCh0aGlzLFwic3RvcmVcIix2b2lkIDApLEJMKHRoaXMsXCJwcm9jZXNzb3JcIix2b2lkIDApLEJMKHRoaXMsXCJwcm9jZXNzb3JDb250ZXh0XCIsdm9pZCAwKSx0aGlzLl91c2VySWQ9dCx0aGlzLl91aW50SWQ9aSx0aGlzLnN0b3JlPW59X3VwZGF0ZU9yaWdpbk1lZGlhU3RyZWFtVHJhY2soZSl7dGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjaz1lLHRoaXMuX21lZGlhU3RyZWFtVHJhY2s9ZSx0aGlzLl91cGRhdGVQbGF5ZXJTb3VyY2UoKSx0aGlzLnByb2Nlc3NvciYmdGhpcy5wcm9jZXNzb3IudXBkYXRlSW5wdXQoe3RyYWNrOnRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2ssY29udGV4dDp0aGlzLnByb2Nlc3NvckNvbnRleHR9KX1fZGVzdHJveSgpe3RoaXMuX2lzRGVzdHJveWVkPSEwLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBpcyBkZXN0cm95ZWRcIikpLHRoaXMuc3RvcCgpLHN1cGVyLmNsb3NlKCl9Z2V0UHJvY2Vzc29yU3RhdHMoKXtyZXR1cm4gdGhpcy5wcm9jZXNzb3JDb250ZXh0LmdhdGhlclN0YXRzKCl9Z2V0UHJvY2Vzc29yVXNhZ2UoKXtyZXR1cm4gdGhpcy5wcm9jZXNzb3JDb250ZXh0LmdhdGhlclVzYWdlKCl9fWxldCBJVT0obFU9SWIoe2FyZ3NNYXA6KGUsdCxpKT0+W2UuZ2V0VHJhY2tJZCgpLFwic3RyaW5nXCI9PXR5cGVvZiB0P3Q6dCBpbnN0YW5jZW9mIEhUTUxWaWRlb0VsZW1lbnQ/XCJIVE1MVmlkZW9FbGVtZW50XCI6XCJIVE1MRWxlbWVudFwiLGldfSksdVU9SWIoe2FyZ3NNYXA6ZT0+W2UuZ2V0VHJhY2tJZCgpXX0pLGhVPUliKHthcmdzTWFwOihlLHQpPT5bZS5nZXRUcmFja0lkKCksdC5uYW1lXX0pLHBVPUliKHthcmdzTWFwOmU9PltlLmdldFRyYWNrSWQoKV19KSxGTCgoX1U9Y2xhc3MgZXh0ZW5kcyBDVXtnZXQgaXNQbGF5aW5nKCl7cmV0dXJuISghdGhpcy5fcGxheWVyfHx0aGlzLl9wbGF5ZXIudmlkZW9FbGVtZW50U3RhdHVzIT09TUwuUExBWUlORyl9Z2V0IF9fY2xhc3NOYW1lX18oKXtyZXR1cm5cIlJlbW90ZVZpZGVvVHJhY2tcIn1jb25zdHJ1Y3RvcihlLHQsaSxuKXtzdXBlcihlLHQsaSxuKSxCTCh0aGlzLFwiX3ZpZGVvVmlzaWJsZVRpbWVyXCIsbnVsbCksQkwodGhpcyxcIl9wcmV2aW91c1ZpZGVvVmlzaWJsZVN0YXR1c1wiLHZvaWQgMCksQkwodGhpcyxcIl9jbGVhclByZXZpb3VzVmlkZW9WaXNpYmxlU3RhdHVzXCIsKCgpPT50aGlzLl9wcmV2aW91c1ZpZGVvVmlzaWJsZVN0YXR1cz12b2lkIDApKSxCTCh0aGlzLFwidHJhY2tNZWRpYVR5cGVcIix2TC5WSURFTyksQkwodGhpcyxcIl92aWRlb1dpZHRoXCIsdm9pZCAwKSxCTCh0aGlzLFwiX3ZpZGVvSGVpZ2h0XCIsdm9pZCAwKSxCTCh0aGlzLFwiX3BsYXllclwiLHZvaWQgMCksQkwodGhpcyxcInByb2Nlc3NvckRlc3RpbmF0aW9uXCIsdm9pZCAwKSxCTCh0aGlzLFwicHJvY2Vzc29yQ29udGV4dFwiLHZvaWQgMCksdGhpcy51cGRhdGVNZWRpYVN0cmVhbVRyYWNrUmVzb2x1dGlvbigpLHRoaXMucHJvY2Vzc29yQ29udGV4dD1uZXcgZ2sodGhpcy5nZXRUcmFja0lkKCksXCJyZW1vdGVcIiksdGhpcy5wcm9jZXNzb3JEZXN0aW5hdGlvbj1uZXcgU2sodGhpcy5wcm9jZXNzb3JDb250ZXh0KSx0aGlzLmJpbmRQcm9jZXNzb3JEZXN0aW5hdGlvbkV2ZW50cygpfWdldFN0YXRzKCl7cmV0dXJuIGRBKCgoKT0+e2ZiLndhcm5pbmcoXCJbZGVwcmVjYXRlZF0gUmVtb3RlVmlkZW9UcmFjay5nZXRTdGF0cyB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIGZ1dHVyZSwgdXNlIEFnb3JhUlRDQ2xpZW50LmdldFJlbW90ZVZpZGVvU3RhdHMgaW5zdGVhZFwiKX0pLFwicmVtb3RlVmlkZW9UcmFja0dldFN0YXRzV2FybmluZ1wiKSxlQSh0aGlzLGZMLkdFVF9TVEFUUyl8fEdMKHt9LE5MKX1wbGF5KGUpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fTtpZihcInN0cmluZ1wiPT10eXBlb2YgZSl7Y29uc3QgdD1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChlKTt0P2U9dDooZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5nZXRUcmFja0lkKCksJ10gY2FuIG5vdCBmaW5kIFwiIycpLmNvbmNhdChlLCdcIiBlbGVtZW50LCB1c2UgZG9jdW1lbnQuYm9keScpKSxlPWRvY3VtZW50LmJvZHkpfWZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc3RhcnQgdmlkZW8gcGxheWJhY2sgaW4gXCIpLmNvbmNhdChlIGluc3RhbmNlb2YgSFRNTFZpZGVvRWxlbWVudD9cIkhUTUxWaWRlb0VsZW1lbnRcIjpcIkhUTUxFbGVtZW50XCIpLEpTT04uc3RyaW5naWZ5KHQpKTtjb25zdCBpPUdMKEdMKHtmaXQ6XCJjb3ZlclwifSx0KSx7fSx7dHJhY2tJZDp0aGlzLmdldFRyYWNrSWQoKSxlbGVtZW50OmV9KTt0aGlzLl9wbGF5ZXI/dGhpcy5fcGxheWVyLnVwZGF0ZUNvbmZpZyhpKTooZSBpbnN0YW5jZW9mIEhUTUxWaWRlb0VsZW1lbnQ/dGhpcy5fcGxheWVyPW5ldyB2TShpKTp0aGlzLl9wbGF5ZXI9bmV3IEFNKGkpLHRoaXMuX3BsYXllci51cGRhdGVWaWRlb1RyYWNrKHRoaXMuX21lZGlhU3RyZWFtVHJhY2spLHRoaXMuX3BsYXllci5vbkZpcnN0VmlkZW9GcmFtZURlY29kZWQ9KCk9Pnt0aGlzLnN0b3JlLnN1YnNjcmliZSh0aGlzLmdldFVzZXJJZCgpLFwidmlkZW9cIix2b2lkIDAsdm9pZCAwLERhdGUubm93KCkpLHRoaXMuc2FmZUVtaXQoSUwuRklSU1RfRlJBTUVfREVDT0RFRCl9LHRoaXMuX3BsYXllci5vblZpZGVvU3RhdGVDaGFuZ2VkPWU9Pnt0aGlzLnNhZmVFbWl0KElMLlZJREVPX1NUQVRFX0NIQU5HRUQsZSl9KSx0aGlzLl9wbGF5ZXIucGxheSh0aGlzLnN0b3JlLnNlc3Npb25JZHx8dm9pZCAwKSx0aGlzLl92aWRlb1Zpc2libGVUaW1lciYmd2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy5fdmlkZW9WaXNpYmxlVGltZXIpLHRoaXMuX2NsZWFyUHJldmlvdXNWaWRlb1Zpc2libGVTdGF0dXMoKSx0aGlzLl92aWRlb1Zpc2libGVUaW1lcj13aW5kb3cuc2V0SW50ZXJ2YWwoKCgpPT57dHJ5e2NvbnN0IGU9dGhpcy5nZXRWaWRlb0VsZW1lbnRWaXNpYmxlU3RhdHVzKCk7dGhpcy5zYWZlRW1pdChJTC5WSURFT19FTEVNRU5UX1ZJU0lCTEVfU1RBVFVTLGUpfWNhdGNoKGUpe319KSxYQShcIkNIRUNLX1ZJREVPX1ZJU0lCTEVfSU5URVJWQUxcIikpfXN0b3AoKXt0aGlzLl9wbGF5ZXImJih0aGlzLl92aWRlb1Zpc2libGVUaW1lciYmKHdpbmRvdy5jbGVhckludGVydmFsKHRoaXMuX3ZpZGVvVmlzaWJsZVRpbWVyKSx0aGlzLl92aWRlb1Zpc2libGVUaW1lcj1udWxsKSx0aGlzLl9jbGVhclByZXZpb3VzVmlkZW9WaXNpYmxlU3RhdHVzKCksdGhpcy5fcGxheWVyLmRlc3Ryb3koKSx0aGlzLl9wbGF5ZXI9dm9pZCAwLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc3RvcCB2aWRlbyBwbGF5YmFja1wiKSkpfWdldEN1cnJlbnRGcmFtZURhdGEoKXtyZXR1cm4gdGhpcy5fcGxheWVyP3RoaXMuX3BsYXllci5nZXRDdXJyZW50RnJhbWUoKTpuZXcgSW1hZ2VEYXRhKDIsMil9dXBkYXRlTWVkaWFTdHJlYW1UcmFja1Jlc29sdXRpb24oKXt5ayh0aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrKS50aGVuKChlPT57bGV0W3QsaV09ZTt0aGlzLl92aWRlb0hlaWdodD1pLHRoaXMuX3ZpZGVvV2lkdGg9dH0pKS5jYXRjaChnQSl9X3VwZGF0ZVBsYXllclNvdXJjZSgpe2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gdXBkYXRlIHBsYXllciBzb3VyY2UgdHJhY2tcIikpLHRoaXMuX3BsYXllciYmdGhpcy5fcGxheWVyLnVwZGF0ZVZpZGVvVHJhY2sodGhpcy5fbWVkaWFTdHJlYW1UcmFjayl9Z2V0VmlkZW9FbGVtZW50VmlzaWJsZVN0YXR1cygpe3RyeXt2YXIgZSx0O2NvbnN0IGk9bnVsbD09dGhpc3x8bnVsbD09PShlPXRoaXMuX3BsYXllcil8fHZvaWQgMD09PWU/dm9pZCAwOmUuZ2V0Q29udGFpbmVyRWxlbWVudCgpLG49e3RyYWNrOnRoaXMsZWxlbWVudDpudWxsPT10aGlzfHxudWxsPT09KHQ9dGhpcy5fcGxheWVyKXx8dm9pZCAwPT09dD92b2lkIDA6dC5nZXRWaWRlb0VsZW1lbnQoKSxzbG90Om51bGw9PWk/dm9pZCAwOmkucGFyZW50RWxlbWVudH0se2VsZW1lbnQ6cixzbG90Om99PW47aWYodGhpcy5pc1BsYXlpbmcmJnIgaW5zdGFuY2VvZiBIVE1MVmlkZW9FbGVtZW50JiZvIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpe2NvbnN0IGU9THkuY2hlY2tPbmVFbGVtZW50VmlzaWJsZShyKSx0PU9iamVjdC5hc3NpZ24oe30sZSk7aWYodC52aXNpYmxlIT09dGhpcy5fcHJldmlvdXNWaWRlb1Zpc2libGVTdGF0dXMpe3RoaXMuX3ByZXZpb3VzVmlkZW9WaXNpYmxlU3RhdHVzPXQudmlzaWJsZTtjb25zdCBlPXZiLnJlcG9ydEFwaUludm9rZShudWxsLHt0YWc6ankuVFJBQ0VSLG5hbWU6QnkuUkVNT1RFX1ZJREVPX1RSQUNLX0dFVF9WSURFT19WSVNJQkxFLG9wdGlvbnM6W3RoaXMuZ2V0VHJhY2tJZCgpXX0pO3QudmlzaWJsZT9lLm9uU3VjY2VzcyhcIlZpZGVvIGlzIHZpc2libGVcIik6ZS5vblN1Y2Nlc3MoXCJJbnZpc2libGUgYmVjYXVzZSBvZiBcIi5jb25jYXQodC5yZWFzb24pKX1yZXR1cm4gdH1yZXR1cm59Y2F0Y2goZSl7dGhyb3cgbmV3IEN5KFJ5LkdFVF9WSURFT19FTEVNRU5UX1ZJU0lCTEVfRVJST1IsZS5tZXNzYWdlKX19cGlwZShlKXtpZih0aGlzLnByb2Nlc3Nvcj09PWUpcmV0dXJuIGU7aWYoZS5fc291cmNlKXRocm93IG5ldyBDeShSeS5JTlZBTElEX09QRVJBVElPTixcIlByb2Nlc3NvciBcIi5jb25jYXQoZS5uYW1lLFwiIGFscmVhZHkgcGlwZWQsIHBsZWFzZSBjYWxsIHVucGlwZSBiZWZvcmVoYW5kLlwiKSk7cmV0dXJuIHRoaXMudW5waXBlKCksdGhpcy5wcm9jZXNzb3I9ZSx0aGlzLnByb2Nlc3Nvci5fc291cmNlPXRoaXMsZS51cGRhdGVJbnB1dCh7dHJhY2s6dGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjayxjb250ZXh0OnRoaXMucHJvY2Vzc29yQ29udGV4dH0pLGV9dW5waXBlKCl7aWYoIXRoaXMucHJvY2Vzc29yKXJldHVybjtjb25zdCBlPXRoaXMucHJvY2Vzc29yO3RoaXMucHJvY2Vzc29yLl9zb3VyY2U9dm9pZCAwLHRoaXMucHJvY2Vzc29yPXZvaWQgMCxlLnJlc2V0KCl9YmluZFByb2Nlc3NvckRlc3RpbmF0aW9uRXZlbnRzKCl7dGhpcy5wcm9jZXNzb3JEZXN0aW5hdGlvbi5vbihETC5PTl9UUkFDSywoYXN5bmMgZT0+e2U/ZSE9PXRoaXMuX21lZGlhU3RyZWFtVHJhY2smJih0aGlzLl9tZWRpYVN0cmVhbVRyYWNrPWUsdGhpcy5fdXBkYXRlUGxheWVyU291cmNlKCkpOnRoaXMuX21lZGlhU3RyZWFtVHJhY2shPT10aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrJiYodGhpcy5fbWVkaWFTdHJlYW1UcmFjaz10aGlzLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrLHRoaXMuX3VwZGF0ZVBsYXllclNvdXJjZSgpKX0pKX11bmJpbmRQcm9jZXNzb3JEZXN0aW5hdGlvbkV2ZW50cygpe3RoaXMucHJvY2Vzc29yRGVzdGluYXRpb24ucmVtb3ZlQWxsTGlzdGVuZXJzKERMLk9OX1RSQUNLKX1fZGVzdHJveSgpe3N1cGVyLl9kZXN0cm95KCksdGhpcy51bmJpbmRQcm9jZXNzb3JEZXN0aW5hdGlvbkV2ZW50cygpfV9vblNlaShlKXt0aGlzLmVtaXQoUkwuU0VJX1JFQ0VJVkVELGUpfX0pLnByb3RvdHlwZSxcInBsYXlcIixbbFVdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoX1UucHJvdG90eXBlLFwicGxheVwiKSxfVS5wcm90b3R5cGUpLEZMKF9VLnByb3RvdHlwZSxcInN0b3BcIixbdVVdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoX1UucHJvdG90eXBlLFwic3RvcFwiKSxfVS5wcm90b3R5cGUpLEZMKF9VLnByb3RvdHlwZSxcInBpcGVcIixbaFVdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoX1UucHJvdG90eXBlLFwicGlwZVwiKSxfVS5wcm90b3R5cGUpLEZMKF9VLnByb3RvdHlwZSxcInVucGlwZVwiLFtwVV0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihfVS5wcm90b3R5cGUsXCJ1bnBpcGVcIiksX1UucHJvdG90eXBlKSxfVSksdlU9KEVVPUliKHthcmdzTWFwOihlLHQpPT5bZS5nZXRUcmFja0lkKCksdF0sdGhyb3R0bGVUaW1lOjMwMH0pLGZVPUliKHthcmdzTWFwOihlLHQpPT5bZS5nZXRUcmFja0lkKCksdF19KSxtVT1JYih7YXJnc01hcDplPT5bZS5nZXRUcmFja0lkKCldfSksVFU9SWIoe2FyZ3NNYXA6ZT0+W2UuZ2V0VHJhY2tJZCgpXX0pLFNVPUliKHthcmdzTWFwOihlLHQpPT5bZS5nZXRUcmFja0lkKCksdC5uYW1lXX0pLGdVPUliKHthcmdzTWFwOmU9PltlLmdldFRyYWNrSWQoKV19KSxGTCgoUlU9Y2xhc3MgZXh0ZW5kcyBDVXtnZXQgaXNQbGF5aW5nKCl7cmV0dXJuIHRoaXMuX3VzZUF1ZGlvRWxlbWVudD9tay5pc1BsYXlpbmcodGhpcy5nZXRUcmFja0lkKCkpOnRoaXMuX3NvdXJjZS5pc1BsYXllZH1nZXQgX19jbGFzc05hbWVfXygpe3JldHVyblwiUmVtb3RlQXVkaW9UcmFja1wifWNvbnN0cnVjdG9yKGUsdCxpLG4pe3N1cGVyKGUsdCxpLG4pLEJMKHRoaXMsXCJ0cmFja01lZGlhVHlwZVwiLHZMLkFVRElPKSxCTCh0aGlzLFwiX3NvdXJjZVwiLHZvaWQgMCksQkwodGhpcyxcIl91c2VBdWRpb0VsZW1lbnRcIiwhMCksQkwodGhpcyxcIl92b2x1bWVcIiwxMDApLEJMKHRoaXMsXCJwcm9jZXNzb3JDb250ZXh0XCIsdm9pZCAwKSxCTCh0aGlzLFwicHJvY2Vzc29yRGVzdGluYXRpb25cIix2b2lkIDApLEJMKHRoaXMsXCJfcGxheWVkXCIsITEpLEJMKHRoaXMsXCJfYnlwYXNzV2ViQXVkaW9cIiwhMSksWEEoXCJESVNBQkxFX1dFQkFVRElPXCIpPyh0aGlzLl9zb3VyY2U9bmV3IElrLHRoaXMuX2J5cGFzc1dlYkF1ZGlvPSEwLHRoaXMuX3VzZUF1ZGlvRWxlbWVudD0hMCk6KHRoaXMuX3NvdXJjZT1uZXcgZWsoZSwhMCksWEEoXCJSRU1PVEVfQVVESU9fVFJBQ0tfVVNFU19XRUJfQVVESU9cIikmJih0aGlzLl91c2VBdWRpb0VsZW1lbnQ9ITEpKSx0aGlzLl9zb3VyY2Uub25jZSh5TC5SRUNFSVZFX1RSQUNLX0JVRkZFUiwoKCk9Pnt0aGlzLnNhZmVFbWl0KElMLkZJUlNUX0ZSQU1FX0RFQ09ERUQpfSkpLHRoaXMucHJvY2Vzc29yQ29udGV4dD1uZXcgQ2sodGhpcy5fc291cmNlLmNvbnRleHQsdGhpcy5nZXRUcmFja0lkKCksXCJyZW1vdGVcIiksdGhpcy5wcm9jZXNzb3JEZXN0aW5hdGlvbj1uZXcgUmsodGhpcy5wcm9jZXNzb3JDb250ZXh0KSx0aGlzLmJpbmRQcm9jZXNzb3JEZXN0aW5hdGlvbkV2ZW50cygpLHRoaXMuX3NvdXJjZS5vbih5TC5VUERBVEVfU09VUkNFLCgoKT0+e3RoaXMucHJvY2Vzc29yJiZ0aGlzLnByb2Nlc3Nvci51cGRhdGVJbnB1dCh7bm9kZTp0aGlzLl9zb3VyY2UucHJvY2Vzc1NvdXJjZU5vZGUsY29udGV4dDp0aGlzLnByb2Nlc3NvckNvbnRleHR9KX0pKX1zZXRBdWRpb0ZyYW1lQ2FsbGJhY2soZSl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOjQwOTY7aWYoIWUpcmV0dXJuIHRoaXMuX3NvdXJjZS5yZW1vdmVBbGxMaXN0ZW5lcnMoeUwuT05fQVVESU9fQlVGRkVSKSx2b2lkIHRoaXMuX3NvdXJjZS5zdG9wR2V0QXVkaW9CdWZmZXIoKTt0aGlzLl9zb3VyY2Uuc3RhcnRHZXRBdWRpb0J1ZmZlcih0KSx0aGlzLl9zb3VyY2UucmVtb3ZlQWxsTGlzdGVuZXJzKHlMLk9OX0FVRElPX0JVRkZFUiksdGhpcy5fc291cmNlLm9uKHlMLk9OX0FVRElPX0JVRkZFUiwodD0+ZSh0KSkpfXNldFZvbHVtZShlKXt0aGlzLl92b2x1bWU9ZSx0aGlzLl91c2VBdWRpb0VsZW1lbnQ/bWsuc2V0Vm9sdW1lKHRoaXMuZ2V0VHJhY2tJZCgpLGUpOnRoaXMuX3NvdXJjZS5zZXRWb2x1bWUoZS8xMDApfWFzeW5jIHNldFBsYXliYWNrRGV2aWNlKGUpe2lmKCF0aGlzLl91c2VBdWRpb0VsZW1lbnR8fCEkUCgpKXRocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwieW91ciBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgc2V0dGluZyB0aGUgYXVkaW8gb3V0cHV0IGRldmljZVwiKTthd2FpdCBtay5zZXRTaW5rSUQodGhpcy5nZXRUcmFja0lkKCksZSl9Z2V0Vm9sdW1lTGV2ZWwoKXtyZXR1cm4gdGhpcy5fc291cmNlLmdldEFjY3VyYXRlVm9sdW1lTGV2ZWwoKX1nZXRTdGF0cygpe3JldHVybiBkQSgoKCk9PntmYi53YXJuaW5nKFwiW2RlcHJlY2F0ZWRdIFJlbW90ZUF1ZGlvVHJhY2suZ2V0U3RhdHMgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBmdXR1cmUsIHVzZSBBZ29yYVJUQ0NsaWVudC5nZXRSZW1vdGVBdWRpb1N0YXRzIGluc3RlYWRcIil9KSxcInJlbW90ZUF1ZGlvVHJhY2tHZXRTdGF0c1dhcm5pbmdcIiksZUEodGhpcyxmTC5HRVRfU1RBVFMpfHxHTCh7fSx3TCl9cGxheSgpe2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gc3RhcnQgYXVkaW8gcGxheWJhY2tcIikpLHRoaXMuX3BsYXllZD0hMCx0aGlzLl91c2VBdWRpb0VsZW1lbnQ/KGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gdXNlIGF1ZGlvIGVsZW1lbnQgdG8gcGxheVwiKSksbWsucGxheSh0aGlzLl9tZWRpYVN0cmVhbVRyYWNrLHRoaXMuZ2V0VHJhY2tJZCgpLHRoaXMuX3ZvbHVtZSx0aGlzLnN0b3JlLnNlc3Npb25JZHx8dm9pZCAwKSk6dGhpcy5fc291cmNlLnBsYXkoKX1zdG9wKCl7ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuZ2V0VHJhY2tJZCgpLFwiXSBzdG9wIGF1ZGlvIHBsYXliYWNrXCIpKSx0aGlzLl9wbGF5ZWQ9ITEsdGhpcy5fdXNlQXVkaW9FbGVtZW50P21rLnN0b3AodGhpcy5nZXRUcmFja0lkKCkpOnRoaXMuX3NvdXJjZS5zdG9wKCl9X2Rlc3Ryb3koKXtzdXBlci5fZGVzdHJveSgpLHRoaXMuX3BsYXllZD0hMSx0aGlzLnVuYmluZFByb2Nlc3NvckRlc3RpbmF0aW9uRXZlbnRzKCksdGhpcy5fc291cmNlLmRlc3Ryb3koKX1faXNGcmVlemUoKXtyZXR1cm4gdGhpcy5fc291cmNlLmlzRnJlZXplfV91cGRhdGVQbGF5ZXJTb3VyY2UoKXtsZXQgZT0hKGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdKXx8YXJndW1lbnRzWzBdO2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmdldFRyYWNrSWQoKSxcIl0gdXBkYXRlIHBsYXllciBzb3VyY2UgdHJhY2tcIikpLGUmJnRoaXMuX3NvdXJjZS51cGRhdGVUcmFjayh0aGlzLl9tZWRpYVN0cmVhbVRyYWNrKSx0aGlzLl91c2VBdWRpb0VsZW1lbnQmJm1rLnVwZGF0ZVRyYWNrKHRoaXMuZ2V0VHJhY2tJZCgpLHRoaXMuX21lZGlhU3RyZWFtVHJhY2spfXBpcGUoZSl7aWYodGhpcy5fYnlwYXNzV2ViQXVkaW8pdGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQsXCJjYW4gbm90IHBpcGUgZXh0ZW5zaW9uIHdoZW4gV2ViQXVkaW8gZGlzYWJsZWRcIik7aWYodGhpcy5wcm9jZXNzb3I9PT1lKXJldHVybiBlO2lmKGUuX3NvdXJjZSl0aHJvdyBuZXcgQ3koUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJQcm9jZXNzb3IgXCIuY29uY2F0KGUubmFtZSxcIiBhbHJlYWR5IHBpcGVkLCBwbGVhc2UgY2FsbCB1bnBpcGUgYmVmb3JlaGFuZC5cIikpO3JldHVybiB0aGlzLnVucGlwZSgpLHRoaXMucHJvY2Vzc29yPWUsdGhpcy5wcm9jZXNzb3IuX3NvdXJjZT10aGlzLGUudXBkYXRlSW5wdXQoe3RyYWNrOnRoaXMuX29yaWdpbk1lZGlhU3RyZWFtVHJhY2ssbm9kZTp0aGlzLl9zb3VyY2UucHJvY2Vzc1NvdXJjZU5vZGUsY29udGV4dDp0aGlzLnByb2Nlc3NvckNvbnRleHR9KSxlfXVucGlwZSgpe3ZhciBlO2lmKHRoaXMuX2J5cGFzc1dlYkF1ZGlvKXRocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwiY2FuIG5vdCB1bnBpcGUgZXh0ZW5zaW9uIHdoZW4gV2ViQXVkaW8gZGlzYWJsZWRcIik7aWYoIXRoaXMucHJvY2Vzc29yKXJldHVybjtjb25zdCB0PXRoaXMucHJvY2Vzc29yO251bGw9PT0oZT10aGlzLl9zb3VyY2UucHJvY2Vzc1NvdXJjZU5vZGUpfHx2b2lkIDA9PT1lfHxlLmRpc2Nvbm5lY3QoKSx0aGlzLnByb2Nlc3Nvci5fc291cmNlPSExLHRoaXMucHJvY2Vzc29yPXZvaWQgMCx0LnJlc2V0KCl9YmluZFByb2Nlc3NvckRlc3RpbmF0aW9uRXZlbnRzKCl7dGhpcy5wcm9jZXNzb3JEZXN0aW5hdGlvbi5vbihETC5PTl9UUkFDSywoYXN5bmMgZT0+e2U/ZSE9PXRoaXMuX21lZGlhU3RyZWFtVHJhY2smJih0aGlzLl9tZWRpYVN0cmVhbVRyYWNrPWUsdGhpcy5fdXBkYXRlUGxheWVyU291cmNlKCExKSx0aGlzLl9zb3VyY2UucHJvY2Vzc2VkTm9kZT10aGlzLl9zb3VyY2UuY3JlYXRlTWVkaWFTdHJlYW1Tb3VyY2VOb2RlKGUpKTp0aGlzLl9tZWRpYVN0cmVhbVRyYWNrIT09dGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjayYmKHRoaXMuX21lZGlhU3RyZWFtVHJhY2s9dGhpcy5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjayx0aGlzLl91cGRhdGVQbGF5ZXJTb3VyY2UoKSl9KSksdGhpcy5wcm9jZXNzb3JEZXN0aW5hdGlvbi5vbihETC5PTl9OT0RFLChlPT57dGhpcy5fc291cmNlLnByb2Nlc3NlZE5vZGU9ZTtjb25zdCB0PSFlO3RoaXMuX3VzZUF1ZGlvRWxlbWVudCE9PXQmJih0aGlzLl9wbGF5ZWQ/KHRoaXMuc3RvcCgpLHRoaXMuX3VzZUF1ZGlvRWxlbWVudD10LHRoaXMucGxheSgpKTp0aGlzLl91c2VBdWRpb0VsZW1lbnQ9dCl9KSl9dW5iaW5kUHJvY2Vzc29yRGVzdGluYXRpb25FdmVudHMoKXt0aGlzLnByb2Nlc3NvckRlc3RpbmF0aW9uLnJlbW92ZUFsbExpc3RlbmVycyhETC5PTl9UUkFDSyksdGhpcy5wcm9jZXNzb3JEZXN0aW5hdGlvbi5yZW1vdmVBbGxMaXN0ZW5lcnMoREwuT05fTk9ERSl9fSkucHJvdG90eXBlLFwic2V0Vm9sdW1lXCIsW0VVXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJVLnByb3RvdHlwZSxcInNldFZvbHVtZVwiKSxSVS5wcm90b3R5cGUpLEZMKFJVLnByb3RvdHlwZSxcInNldFBsYXliYWNrRGV2aWNlXCIsW2ZVXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJVLnByb3RvdHlwZSxcInNldFBsYXliYWNrRGV2aWNlXCIpLFJVLnByb3RvdHlwZSksRkwoUlUucHJvdG90eXBlLFwicGxheVwiLFttVV0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSVS5wcm90b3R5cGUsXCJwbGF5XCIpLFJVLnByb3RvdHlwZSksRkwoUlUucHJvdG90eXBlLFwic3RvcFwiLFtUVV0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSVS5wcm90b3R5cGUsXCJzdG9wXCIpLFJVLnByb3RvdHlwZSksRkwoUlUucHJvdG90eXBlLFwicGlwZVwiLFtTVV0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSVS5wcm90b3R5cGUsXCJwaXBlXCIpLFJVLnByb3RvdHlwZSksRkwoUlUucHJvdG90eXBlLFwidW5waXBlXCIsW2dVXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJVLnByb3RvdHlwZSxcInVucGlwZVwiKSxSVS5wcm90b3R5cGUpLFJVKTtjb25zdCB5VT1uZXcgY2xhc3MgZXh0ZW5kcyB4eXtnZXQgdmlzaWJpbGl0eSgpe3JldHVybiBkb2N1bWVudC52aXNpYmlsaXR5U3RhdGV9Z2V0IGxhc3RIaWRkZW5UaW1lKCl7cmV0dXJuIHRoaXMuX2xhc3RIaWRkZW5UaW1lfWdldCBsYXN0VmlzaWJsZVRpbWUoKXtyZXR1cm4gdGhpcy5fbGFzdFZpc2libGVUaW1lfWNvbnN0cnVjdG9yKCl7c3VwZXIoKSxCTCh0aGlzLFwiX2xhc3RIaWRkZW5UaW1lXCIsMCksQkwodGhpcyxcIl9sYXN0VmlzaWJsZVRpbWVcIiwwKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLCgoKT0+e1wiaGlkZGVuXCI9PT1kb2N1bWVudC52aXNpYmlsaXR5U3RhdGU/dGhpcy5fbGFzdEhpZGRlblRpbWU9cGVyZm9ybWFuY2Uubm93KCk6dGhpcy5fbGFzdFZpc2libGVUaW1lPXBlcmZvcm1hbmNlLm5vdygpLGZiLmRlYnVnKFwiZG9jdW1lbnQgdmlzaWJpbGl0eSB3ZW50IFwiLmNvbmNhdChkb2N1bWVudC52aXNpYmlsaXR5U3RhdGUpKSx0aGlzLmVtaXQoXCJWSVNJQklMSVRZX0NIQU5HRVwiLGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSl9KSl9fTtjbGFzcyBBVSBleHRlbmRzIHh5e2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoKSxCTCh0aGlzLFwidHJhY2tNZWRpYVR5cGVcIix2TC5EQVRBKSxCTCh0aGlzLFwiX3ZlcnNpb25cIiwxKSxCTCh0aGlzLFwiX3R5cGVcIiwzKSxCTCh0aGlzLFwiX2NvbmZpZ1wiLHZvaWQgMCksQkwodGhpcyxcIl9vcmlnaW5EYXRhQ2hhbm5lbFwiLHZvaWQgMCksQkwodGhpcyxcIl9kYXRhU3RyZWFtUGFja2V0SGVhZGVyXCIsbmV3IEFycmF5QnVmZmVyKDQpKSxCTCh0aGlzLFwiX2RhdGFTdHJlYW1QYWNrZXRIYW5kbGVyXCIse3NlcmlhbGl6ZTplPT5lLGRlc2VyaWFsaXplOmU9PmV9KSxCTCh0aGlzLFwiX2RhdGFjaGFubmVsRXZlbnRNYXBcIixuZXcgTWFwKSx0aGlzLl9jb25maWc9ZSx0JiYodGhpcy5fb3JpZ2luRGF0YUNoYW5uZWw9dCx0aGlzLl9iYW5kRGF0YUNoYW5uZWxFdmVudHModCkpLHRoaXMuX2luaXRQYWNrZXRIZWFkZXIoKX11c2VEYXRhU3RyZWFtKGUpe3RoaXMuX2RhdGFTdHJlYW1QYWNrZXRIYW5kbGVyPWV9Z2V0IGlkKCl7cmV0dXJuIHRoaXMuX2NvbmZpZy5pZH1nZXQgb3JkZXJlZCgpe3JldHVybiB0aGlzLl9jb25maWcub3JkZXJlZH1nZXQgbWF4UmV0cmFuc21pdHMoKXtyZXR1cm4gWEEoXCJEQVRBU1RSRUFNX01BWF9SRVRSQU5TTUlUU1wiKX1nZXQgbWV0YWRhdGEoKXtyZXR1cm4gdGhpcy5fY29uZmlnLm1ldGFkYXRhfWdldCByZWFkeVN0YXRlKCl7dmFyIGUsdDtyZXR1cm4gbnVsbCE9PShlPW51bGw9PT0odD10aGlzLl9vcmlnaW5EYXRhQ2hhbm5lbCl8fHZvaWQgMD09PXQ/dm9pZCAwOnQucmVhZHlTdGF0ZSkmJnZvaWQgMCE9PWU/ZTpcImNvbm5lY3RpbmdcIn1nZXQgX29yaWdpbkRhdGFDaGFubmVsSWQoKXt2YXIgZSx0O3JldHVybiBudWxsIT09KGU9bnVsbD09PSh0PXRoaXMuX29yaWdpbkRhdGFDaGFubmVsKXx8dm9pZCAwPT09dD92b2lkIDA6dC5pZCkmJnZvaWQgMCE9PWU/ZTpudWxsfWdldENoYW5uZWxJZCgpe3JldHVybiB0aGlzLmlkfWdldENvbmZpZygpe3JldHVybiB0aGlzLl9jb25maWd9X2Nsb3NlKCl7dGhpcy5fb3JpZ2luRGF0YUNoYW5uZWwmJih0aGlzLl91bmJpbmREYXRhQ2hhbm5lbEV2ZW50cyh0aGlzLl9vcmlnaW5EYXRhQ2hhbm5lbCksdGhpcy5fb3JpZ2luRGF0YUNoYW5uZWw9dm9pZCAwKX1hc3luYyBfd2FpdFRpbGxPcGVuKCl7cmV0dXJuIG5ldyBHaCgoKGUsdCk9PntpZih0aGlzLl9vcmlnaW5EYXRhQ2hhbm5lbCl7XCJvcGVuXCI9PT10aGlzLl9vcmlnaW5EYXRhQ2hhbm5lbC5yZWFkeVN0YXRlJiZlKCk7Y29uc3QgaT1zZXRUaW1lb3V0KCgoKT0+e3ZhciBlO3QobmV3IEN5KFJ5LkRBVEFDSEFOTkVMX0NPTk5FQ1RJT05fVElNRU9VVCxcIkNhbm5vdCBjcmVhdGUgZGF0YWNoYW5uZWwsIGlkOiBcIi5jb25jYXQobnVsbD09PShlPXRoaXMuX29yaWdpbkRhdGFDaGFubmVsKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5pZCkpKX0pLDFlNCk7dGhpcy5fb3JpZ2luRGF0YUNoYW5uZWwub25vcGVuPSgpPT57Y2xlYXJUaW1lb3V0KGkpLHRoaXMuX29yaWdpbkRhdGFDaGFubmVsJiZ0aGlzLl9iYW5kRGF0YUNoYW5uZWxFdmVudHModGhpcy5fb3JpZ2luRGF0YUNoYW5uZWwpLGUoKX0sdGhpcy5fb3JpZ2luRGF0YUNoYW5uZWwub25lcnJvcj0oKT0+e3Rocm93IGNsZWFyVGltZW91dChpKSxuZXcgQ3koUnkuREFUQUNIQU5ORUxfQ09OTkVDVElPTl9USU1FT1VUKX19ZWxzZSB0KG5ldyBDeShSeS5EQVRBQ0hBTk5FTF9DT05ORUNUSU9OX1RJTUVPVVQsXCJjYW5ub3QgZmluZCBkYXRhQ2hhbm5lbFwiKSl9KSl9X3VwZGF0ZU9yaWdpbkRhdGFDaGFubmVsKGUpe3RoaXMuX29yaWdpbkRhdGFDaGFubmVsPWUsdGhpcy5fYmFuZERhdGFDaGFubmVsRXZlbnRzKGUpfV9pbml0UGFja2V0SGVhZGVyKCl7Y29uc3QgZT1uZXcgRGF0YVZpZXcodGhpcy5fZGF0YVN0cmVhbVBhY2tldEhlYWRlcik7ZS5zZXRVaW50MTYoMCx0aGlzLl92ZXJzaW9uKSxlLnNldFVpbnQ4KDIsdGhpcy5fdHlwZSksZS5zZXRVaW50OCgzLHRoaXMuX2NvbmZpZy5pZCl9X2JhbmREYXRhQ2hhbm5lbEV2ZW50cyhlKXt0aGlzLl91bmJpbmREYXRhQ2hhbm5lbEV2ZW50cyhlKSxbVkwuT1BFTixWTC5DTE9TRSxWTC5FUlJPUl0uZm9yRWFjaCgodD0+e2NvbnN0IGk9KCk9Pnt0aGlzLmVtaXQodCl9O3RoaXMuX2RhdGFjaGFubmVsRXZlbnRNYXAuc2V0KHQsaSksZS5hZGRFdmVudExpc3RlbmVyKHQsaSl9KSl9X3VuYmluZERhdGFDaGFubmVsRXZlbnRzKGUpe0FycmF5LmZyb20odGhpcy5fZGF0YWNoYW5uZWxFdmVudE1hcC5lbnRyaWVzKCkpLmZvckVhY2goKHQ9PntsZXRbaSxuXT10O2UucmVtb3ZlRXZlbnRMaXN0ZW5lcihpLG4pfSkpLHRoaXMuX2RhdGFjaGFubmVsRXZlbnRNYXAuY2xlYXIoKX19Y2xhc3MgYlUgZXh0ZW5kcyBBVXtjb25zdHJ1Y3RvcihlKXtzdXBlcihlKSxCTCh0aGlzLFwiX21lc3NhZ2VMaXN0ZW5lclwiLHZvaWQgMCksdGhpcy5fbWVzc2FnZUxpc3RlbmVyPWU9PntpZihlLmRhdGEuYnl0ZUxlbmd0aDx0aGlzLl9kYXRhU3RyZWFtUGFja2V0SGVhZGVyLmJ5dGVMZW5ndGgpdGhyb3cgRXJyb3IoXCJpbnZhbGlkIGJ5dGVMZW5ndGg6IHRoZSBieXRlIGxlbmd0aCBtdXN0IGV4Y2VlZCBcIit0aGlzLl9kYXRhU3RyZWFtUGFja2V0SGVhZGVyLmJ5dGVMZW5ndGgpO2NvbnN0IHQ9ZS5kYXRhLnNsaWNlKDAsdGhpcy5fZGF0YVN0cmVhbVBhY2tldEhlYWRlci5ieXRlTGVuZ3RoKSxpPW5ldyBEYXRhVmlldyh0KS5nZXRVaW50OCgzKTtpZihpIT09dGhpcy5pZClyZXR1cm4gdm9pZChYQShcIlNIT1dfREFUQVNUUkVBTTJfTE9HXCIpJiZmYi5kZWJ1ZyhcImludmFsaWQgZGF0YWNoYW5uZWwgaWQ6IFwiLmNvbmNhdChpLFwiICE9PSBcIikuY29uY2F0KHRoaXMuaWQpKSk7bGV0IG49ZS5kYXRhLnNsaWNlKHRoaXMuX2RhdGFTdHJlYW1QYWNrZXRIZWFkZXIuYnl0ZUxlbmd0aCk7bj10aGlzLl9kYXRhU3RyZWFtUGFja2V0SGFuZGxlci5kZXNlcmlhbGl6ZShuKSx0aGlzLmVtaXQoVkwuTUVTU0FHRSxuKX19X3VwZGF0ZU9yaWdpbkRhdGFDaGFubmVsKGUpe3N1cGVyLl91cGRhdGVPcmlnaW5EYXRhQ2hhbm5lbChlKSx0aGlzLl9iYW5kUmVtb3RlRGF0YUNoYW5uZWxFdmVudHMoKX1fY2xvc2UoKXt0aGlzLl9vcmlnaW5EYXRhQ2hhbm5lbCYmKHRoaXMuX29yaWdpbkRhdGFDaGFubmVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsdGhpcy5fbWVzc2FnZUxpc3RlbmVyKSxzdXBlci5fY2xvc2UoKSl9X2JhbmRSZW1vdGVEYXRhQ2hhbm5lbEV2ZW50cygpe3RoaXMuX29yaWdpbkRhdGFDaGFubmVsJiZ0aGlzLl9vcmlnaW5EYXRhQ2hhbm5lbC5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLHRoaXMuX21lc3NhZ2VMaXN0ZW5lcil9fWNsYXNzIHdVIGV4dGVuZHMgQVV7c2VuZChlKXtpZih0aGlzLl9vcmlnaW5EYXRhQ2hhbm5lbCl7bGV0IHQ9ZTt0PXRoaXMuX2RhdGFTdHJlYW1QYWNrZXRIYW5kbGVyLnNlcmlhbGl6ZShlKTtjb25zdCBpPW5ldyBVaW50OEFycmF5KHRoaXMuX2RhdGFTdHJlYW1QYWNrZXRIZWFkZXIuYnl0ZUxlbmd0aCt0LmJ5dGVMZW5ndGgpO2kuc2V0KG5ldyBVaW50OEFycmF5KHRoaXMuX2RhdGFTdHJlYW1QYWNrZXRIZWFkZXIpLDApLGkuc2V0KG5ldyBVaW50OEFycmF5KHQpLHRoaXMuX2RhdGFTdHJlYW1QYWNrZXRIZWFkZXIuYnl0ZUxlbmd0aCksdGhpcy5fb3JpZ2luRGF0YUNoYW5uZWwuc2VuZChpLmJ1ZmZlcil9fX1mdW5jdGlvbiBPVSgpe2NvbnN0IGU9bmV3IEJsb2IoW2F0b2IoXCJablZ1WTNScGIyNGdaU2hsTEhRc2JpbDdiR1YwSUhJOWJtVjNJRlZwYm5RNFFYSnlZWGtvWlN4MExHNHBMR0U5VzEwc2J6MHdPMlp2Y2lnN1lTNXNaVzVuZEdnOGJqc3BieXN6UEc0bUpqQTlQVDF5VzI5ZEppWXdQVDA5Y2x0dkt6RmRKaVl6UFQwOWNsdHZLekpkSmlZb01EMDlQWEpiYnlzelhYeDhNVDA5UFhKYmJ5c3pYWHg4TWowOVBYSmJieXN6WFh4OE16MDlQWEpiYnlzelhTay9LR0V1Y0hWemFDaHlXMjlkTEhKYmJ5c3hYU3h5VzI4ck0xMHBMRzhyUFRRcE9paGhMbkIxYzJnb2NsdHZYU2tzYnlzcktUdHlaWFIxY200Z2JtVjNJRlZwYm5RNFFYSnlZWGtvWVNsOVpuVnVZM1JwYjI0Z2RDaGxMSFFwZTJOdmJuTjBJRzQ5Wm5WdVkzUnBiMjRvWlNsN1kyOXVjM1FnZEQxbExteGxibWQwYUR0c1pYUWdiajFiWFN4eVBUQTdabTl5S0R0eVBIUTdLWElyTWp4MEppWXdQVDA5WlZ0eVhTWW1NRDA5UFdWYmNpc3hYU1ltS0RBOVBUMWxXM0lyTWwxOGZERTlQVDFsVzNJck1sMThmREk5UFQxbFczSXJNbDE4ZkRNOVBUMWxXM0lyTWwwcFB5aHVMbkIxYzJnb1pWdHlYU3hsVzNJck1WMHNNeXhsVzNJck1sMHBMSElyUFRNcE9paHVMbkIxYzJnb1pWdHlYU2tzY2lzcktUdHlaWFIxY200Z2JtVjNJRlZwYm5RNFFYSnlZWGtvYmlsOUtIUXBMSEk5Ymk1c1pXNW5kR2dzWVQxTllYUm9MbVpzYjI5eUtISXZNalUxS1N4dlBYSWxNalUxTEhNOWJtVjNJRlZwYm5RNFFYSnlZWGtvTml0aEt6RXJjaXRsTG1KNWRHVk1aVzVuZEdncE8zTmJNRjA5TUN4eld6RmRQVEFzYzFzeVhUMHdMSE5iTTEwOU1TeHpXelJkUFRZc2MxczFYVDB4TURFN2JHVjBJR2s5TUR0bWIzSW9PMms4WVRzcGMxczJLMmxkUFRJMU5TeHBLeXM3Y21WMGRYSnVJSE5iTml0cFhUMXZMR2tyS3l4ekxuTmxkQ2h1TERZcmFTa3NjeTV6WlhRb2JtVjNJRlZwYm5RNFFYSnlZWGtvWlNrc05pdHBLM0lwTEhNdVluVm1abVZ5Zlc1aGRtbG5ZWFJ2Y2k1MWMyVnlRV2RsYm5RdWFXNWtaWGhQWmlnaVUyRm1ZWEpwSWlrK0xURW1KaTB4UFQwOWJtRjJhV2RoZEc5eUxuVnpaWEpCWjJWdWRDNXBibVJsZUU5bUtDSkRhSEp2YldVaUtTWW1LSE5sYkdZdWIyNXlkR04wY21GdWMyWnZjbTA5YmowK2UyTnZibk4wSUhJOWJpNTBjbUZ1YzJadmNtMWxjanRzWlhRZ1lUMWJYVHR5TG05d2RHbHZibk11Y0c5eWRDNXZibTFsYzNOaFoyVTlaVDArZTJVdVpHRjBZUzV6WldrbUptRXVjSFZ6YUNobExtUmhkR0V1YzJWcEtYMHNjMlZzWmk1d2IzTjBUV1Z6YzJGblpTZ2ljM1JoY25SbFpDSXBPMk52Ym5OMElHODljaTV5WldGa1lXSnNaUzVuWlhSU1pXRmtaWElvS1N4elBYSXVkM0pwZEdGaWJHVXVaMlYwVjNKcGRHVnlLQ2s3SW5KNElqMDlQWEl1YjNCMGFXOXVjeTV1WVcxbFAyWjFibU4wYVc5dUlIUW9iaWw3Ynk1eVpXRmtLQ2t1ZEdobGJpZ29jajArZTJsbUtDRnlMbVJ2Ym1VcGUybG1LSEl1ZG1Gc2RXVWdhVzV6ZEdGdVkyVnZaaUJTVkVORmJtTnZaR1ZrVm1sa1pXOUdjbUZ0WlNsN1kyOXVjM1FnZEQxbWRXNWpkR2x2YmloMEtYdGpiMjV6ZENCdVBXNWxkeUJFWVhSaFZtbGxkeWgwTG1SaGRHRXBPMnhsZENCeVBUQTdabTl5S0R0eUt6UThkQzVrWVhSaExtSjVkR1ZNWlc1bmRHZzdLWHRwWmlnd1BUMDliaTVuWlhSVmFXNTBPQ2h5S3pBcEppWXdQVDA5Ymk1blpYUlZhVzUwT0NoeUt6RXBKaVl3UFQwOWJpNW5aWFJWYVc1ME9DaHlLeklwSmlZeFBUMDliaTVuWlhSVmFXNTBPQ2h5S3pNcEppWTJQVDA5Ymk1blpYUlZhVzUwT0NoeUt6UXBLWHRzWlhRZ1lUMXlLellzYnowd0xITTlNRHRtYjNJb096STFOVDA5UFNoelBXNHVaMlYwVldsdWREZ29ZU3NyS1NrN0tXOHJQVEkxTlR0dkt6MXpPMk52Ym5OMElHazlaU2gwTG1SaGRHRXNZU3h2S1R0eVpYUjFjbTRnYm1WM0lGVnBiblE0UVhKeVlYa29hU2w5Y2lzcmZYSmxkSFZ5YmlCdWRXeHNmU2h5TG5aaGJIVmxLVHQwSmladUxtOXdkR2x2Ym5NdWNHOXlkQzV3YjNOMFRXVnpjMkZuWlNoN2MyVnBPblI5S1gxekxuZHlhWFJsS0hJdWRtRnNkV1VwTEc0dWIzQjBhVzl1Y3k1d2IzSjBMbkJ2YzNSTlpYTnpZV2RsS0h0MGNtRnVjMlp2Y20xbFpEb2hNSDBwTEhRb2JpbDlmU2twZlNoeUtUb2lkSGdpUFQwOWNpNXZjSFJwYjI1ekxtNWhiV1VtSm1aMWJtTjBhVzl1SUdVb2JpbDdieTV5WldGa0tDa3VkR2hsYmlnb2NqMCtlMmxtS0NGeUxtUnZibVVwZTJsbUtISXVkbUZzZFdVZ2FXNXpkR0Z1WTJWdlppQlNWRU5GYm1OdlpHVmtWbWxrWlc5R2NtRnRaU2w3WTI5dWMzUWdaVDFoTG5Ob2FXWjBLQ2s3WlNZbUtISXVkbUZzZFdVdVpHRjBZVDEwS0hJdWRtRnNkV1V1WkdGMFlTeGxLU2w5Y3k1M2NtbDBaU2h5TG5aaGJIVmxLU3h1TG05d2RHbHZibk11Y0c5eWRDNXdiM04wVFdWemMyRm5aU2g3ZEhKaGJuTm1iM0p0WldRNklUQjlLU3hsS0c0cGZYMHBLWDBvY2lsOUxITmxiR1l1Y0c5emRFMWxjM05oWjJVb0luSmxaMmx6ZEdWeVpXUWlLU2s3Q2c9PVwiKV0se3R5cGU6XCJ0ZXh0L2phdmFzY3JpcHRcIn0pO3JldHVybiBzZXRUaW1lb3V0KCgoKT0+WFAucmV2b2tlT2JqZWN0VVJMKGUpKSwwKSxuZXcgV29ya2VyKFhQLmNyZWF0ZU9iamVjdFVSTChlKSl9Y29uc3QgTlU9bmV3IE1hcDtjb25zdCBEVT1uZXcgTWFwO2Z1bmN0aW9uIFBVKGUsdCxpKXtsZXQgbj1uZXcgVWludDhBcnJheShlLHQsaSkscj1bXSxvPTA7Zm9yKDtyLmxlbmd0aDxpOylvKzM8aSYmMD09PW5bb10mJjA9PT1uW28rMV0mJjM9PT1uW28rMl0mJigwPT09bltvKzNdfHwxPT09bltvKzNdfHwyPT09bltvKzNdfHwzPT09bltvKzNdKT8oci5wdXNoKG5bb10sbltvKzFdLG5bbyszXSksbys9NCk6KHIucHVzaChuW29dKSxvKyspO3JldHVybiBuZXcgVWludDhBcnJheShyKX1jb25zdCBMVT1uZXcgTWFwO2FzeW5jIGZ1bmN0aW9uIGtVKGUsdCl7aWYoIVpQKCkuc3VwcG9ydFdlYlJUQ0VuY29kZWRUcmFuc2Zvcm0pcmV0dXJuIHZvaWQgZmIud2FybmluZyhcImJyb3dzZXIgbm90IHN1cHBvcnQgdmlkZW8gZW5jb2RlZCB0cmFuc2Zvcm1cIik7aWYoTFUuaGFzKGUpKXJldHVybjtpZighZS50cmFjaylyZXR1cm47Y29uc3QgaT17dHJhY2s6ZS50cmFja307aWYoSnYoKSl7aWYoIWUuY3JlYXRlRW5jb2RlZFN0cmVhbXMpcmV0dXJuIHZvaWQgZmIud2FybmluZyhcImJyb3dzZXIgbm90IHN1cHBvcnQgY3JlYXRlRW5jb2RlZFN0cmVhbXMoKSBBUElcIik7bGV0IHI9bnVsbDt0cnl7cj1lLmNyZWF0ZUVuY29kZWRTdHJlYW1zKCl9Y2F0Y2goZSl7cmV0dXJuIHZvaWQgZmIuZXJyb3IoXCJjcmVhdGUgdmlkZW8tZW5jb2RlZC1zdHJlYW1zIGVycm9yXCIsZSYmZS5tZXNzYWdlKX1sZXQgbz1bXTt0Lm9uKFwic2VpLXRvLXNlbmRcIiwoZT0+e28ucHVzaChlKX0pKTtjb25zdCBzPW5ldyBUcmFuc2Zvcm1TdHJlYW0oe3RyYW5zZm9ybSh0LHIpe2kuY29udHJvbGxlcnx8KGkuY29udHJvbGxlcj1yKSxlLnRyYWNrJiZlLnRyYWNrLmlkIT09aS50cmFjay5pZCYmKGZiLmRlYnVnKFwidmlkZW8gdHJhY2sgY2hhbmdlZDogXCIuY29uY2F0KGkudHJhY2suaWQsXCIgPT4gXCIpLmNvbmNhdChlLnRyYWNrLmlkKSksaS50cmFjay5yZW1vdmVFdmVudExpc3RlbmVyKFwiZW5kZWRcIixuKSxpLnRyYWNrPWUudHJhY2ssaS50cmFjay5hZGRFdmVudExpc3RlbmVyKFwiZW5kZWRcIixuKSk7Y29uc3Qgcz1vLnNoaWZ0KCk7cyYmKHQuZGF0YT1mdW5jdGlvbihlLHQpe2NvbnN0IGk9ZnVuY3Rpb24oZSl7Y29uc3QgdD1lLmxlbmd0aDtsZXQgaT1bXSxuPTA7Zm9yKDtuPHQ7KW4rMjx0JiYwPT09ZVtuXSYmMD09PWVbbisxXSYmKDA9PT1lW24rMl18fDE9PT1lW24rMl18fDI9PT1lW24rMl18fDM9PT1lW24rMl0pPyhpLnB1c2goZVtuXSxlW24rMV0sMyxlW24rMl0pLG4rPTMpOihpLnB1c2goZVtuXSksbisrKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoaSl9KHQpLG49aS5sZW5ndGgscj1NYXRoLmZsb29yKG4vMjU1KSxvPW4lMjU1LHM9bmV3IFVpbnQ4QXJyYXkoNityKzErbitlLmJ5dGVMZW5ndGgpO3NbMF09MCxzWzFdPTAsc1syXT0wLHNbM109MSxzWzRdPTYsc1s1XT0xMDE7bGV0IGE9MDtmb3IoO2E8cjspc1s2K2FdPTI1NSxhKys7cmV0dXJuIHNbNithXT1vLGErKyxzLnNldChpLDYrYSkscy5zZXQobmV3IFVpbnQ4QXJyYXkoZSksNithK24pLHMuYnVmZmVyfSh0LmRhdGEscykpLHIuZW5xdWV1ZSh0KX19KTtyLnJlYWRhYmxlLnBpcGVUaHJvdWdoKHMpLnBpcGVUbyhyLndyaXRhYmxlKX1lbHNle2lmKCFYdigpKXJldHVybjt7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIFJUQ1J0cFNjcmlwdFRyYW5zZm9ybSlyZXR1cm4gdm9pZCBmYi53YXJuaW5nKFwiYnJvd3NlciBub3Qgc3VwcG9ydCBSVENSdHBTY3JpcHRUcmFuc2Zvcm1cIik7Y29uc3Qgcj1PVSgpLG89bmV3IE1lc3NhZ2VDaGFubmVsO2F3YWl0IG5ldyBHaCgoZT0+ci5vbm1lc3NhZ2U9dD0+e1wicmVnaXN0ZXJlZFwiPT09dC5kYXRhJiZlKHZvaWQgMCl9KSk7Y29uc3Qgcz1uZXcgUlRDUnRwU2NyaXB0VHJhbnNmb3JtKHIse25hbWU6XCJ0eFwiLHBvcnQ6by5wb3J0Mn0sW28ucG9ydDJdKTtlLnRyYW5zZm9ybT1zLGF3YWl0IG5ldyBHaCgoZT0+ci5vbm1lc3NhZ2U9dD0+e1wic3RhcnRlZFwiPT09dC5kYXRhJiZlKHZvaWQgMCl9KSksdC5vbihcInNlaS10by1zZW5kXCIsKGU9PntvLnBvcnQxLnBvc3RNZXNzYWdlKHtzZWk6ZX0pfSkpLG8ucG9ydDEub25tZXNzYWdlPXQ9Pnt2YXIgcjt0LmRhdGEudHJhbnNmb3JtZWQmJmUudHJhY2smJihudWxsPT09KHI9ZS50cmFjayl8fHZvaWQgMD09PXI/dm9pZCAwOnIuaWQpIT09aS50cmFjay5pZCYmKGZiLmRlYnVnKFwidmlkZW8gdHJhY2sgY2hhbmdlZDogXCIuY29uY2F0KGkudHJhY2suaWQsXCIgPT4gXCIpLmNvbmNhdChlLnRyYWNrLmlkKSksaS50cmFjay5yZW1vdmVFdmVudExpc3RlbmVyKFwiZW5kZWRcIixuKSxpLnRyYWNrPWUudHJhY2ssaS50cmFjay5hZGRFdmVudExpc3RlbmVyKFwiZW5kZWRcIixuKSl9LGkud29ya2VyPXJ9fWZ1bmN0aW9uIG4oKXtpZihlLnRyYWNrKXtpZih0aGlzLmlkIT09ZS50cmFjay5pZClyZXR1cm47ZS50cmFjay5yZW1vdmVFdmVudExpc3RlbmVyKFwiZW5kZWRcIixuKX1jb25zdCB0PUxVLmdldChlKTtpZih0KXtMVS5kZWxldGUoZSk7dHJ5e3ZhciBpLHI7bnVsbD09PShpPXQuY29udHJvbGxlcil8fHZvaWQgMD09PWl8fGkudGVybWluYXRlKCksbnVsbD09PShyPXQud29ya2VyKXx8dm9pZCAwPT09cnx8ci50ZXJtaW5hdGUoKX1jYXRjaChlKXtmYi53YXJuaW5nKGUmJmUubWVzc2FnZSl9fX1MVS5zZXQoZSxpKSxlLnRyYWNrLmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLG4pfWNvbnN0IE1VPW5ldyBNYXA7IWZ1bmN0aW9uKCl7Y29uc3QgZT1IdigpO1FQLmdldERpc3BsYXlNZWRpYT0hKCFuYXZpZ2F0b3IubWVkaWFEZXZpY2VzfHwhbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXREaXNwbGF5TWVkaWEpLFFQLmdldFN0cmVhbUZyb21FeHRlbnNpb249ZS5uYW1lPT09QnYuQ0hST01FJiZOdW1iZXIoZS52ZXJzaW9uKT4zNCxRUC5zdXBwb3J0VW5pZmllZFBsYW49ZnVuY3Rpb24oKXtpZighd2luZG93LlJUQ1J0cFRyYW5zY2VpdmVyKXJldHVybiExO2lmKCEoXCJjdXJyZW50RGlyZWN0aW9uXCJpbiBSVENSdHBUcmFuc2NlaXZlci5wcm90b3R5cGUpKXJldHVybiExO2NvbnN0IGU9bmV3IFJUQ1BlZXJDb25uZWN0aW9uO2xldCB0PSExO3RyeXtlLmFkZFRyYW5zY2VpdmVyKFwiYXVkaW9cIiksdD0hMH1jYXRjaChlKXt9cmV0dXJuIGUuY2xvc2UoKSx0fSgpLFFQLnN1cHBvcnRNaW5CaXRyYXRlPWUubmFtZT09PUJ2LkNIUk9NRXx8ZS5uYW1lPT09QnYuRURHRSxRUC5zdXBwb3J0U2V0UnRwU2VuZGVyUGFyYW1ldGVycz1mdW5jdGlvbigpe2NvbnN0IGU9SHYoKTtyZXR1cm4hISh3aW5kb3cuUlRDUnRwU2VuZGVyJiZ3aW5kb3cuUlRDUnRwU2VuZGVyLnByb3RvdHlwZS5zZXRQYXJhbWV0ZXJzJiZ3aW5kb3cuUlRDUnRwU2VuZGVyLnByb3RvdHlwZS5nZXRQYXJhbWV0ZXJzKSYmKCEhRXkoKXx8ISghWHYoKSYmIXp2KCkpfHxlLm5hbWU9PT1Cdi5GSVJFRk9YJiZOdW1iZXIoZS52ZXJzaW9uKT49NjQpfSgpLGUubmFtZT09PUJ2LlNBRkFSSSYmKE51bWJlcihlLnZlcnNpb24pPj0xND9RUC5zdXBwb3J0RHVhbFN0cmVhbT0hMDpRUC5zdXBwb3J0RHVhbFN0cmVhbT0hMSksUVAud2ViQXVkaW9NZWRpYVN0cmVhbURlc3Q9ZnVuY3Rpb24oKXtjb25zdCBlPUh2KCk7cmV0dXJuIShlLm5hbWU9PT1Cdi5TQUZBUkkmJk51bWJlcihlLnZlcnNpb24pPDEyKX0oKSxRUC5zdXBwb3J0UmVwbGFjZVRyYWNrPSEhd2luZG93LlJUQ1J0cFNlbmRlciYmXCJmdW5jdGlvblwiPT10eXBlb2YgUlRDUnRwU2VuZGVyLnByb3RvdHlwZS5yZXBsYWNlVHJhY2ssUVAuc3VwcG9ydFdlYkdMPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBXZWJHTFJlbmRlcmluZ0NvbnRleHQsUVAuc3VwcG9ydFJlcXVlc3RGcmFtZT0hIXdpbmRvdy5DYW52YXNDYXB0dXJlTWVkaWFTdHJlYW1UcmFjayxFeSgpfHwoUVAud2ViQXVkaW9XaXRoQUVDPSEwKSxRUC5zdXBwb3J0U2hhcmVBdWRpbz1mdW5jdGlvbigpe2NvbnN0IGU9SHYoKTtyZXR1cm4oZS5vcz09PUZ2LldJTl8xMHx8ZS5vcz09PUZ2LldJTl84MXx8ZS5vcz09PUZ2LldJTl83fHxlLm9zPT09RnYuTElOVVh8fGUub3M9PT1Gdi5NQUNfT1N8fGUub3M9PT1Gdi5DSFJPTUlVTV9PUykmJmUubmFtZT09PUJ2LkNIUk9NRSYmTnVtYmVyKGUudmVyc2lvbik+PTc0fSgpLFFQLnN1cHBvcnREYXRhQ2hhbm5lbD0hIShleSg3Nil8fGZ1bmN0aW9uKGUpe2NvbnN0IHQ9SHYoKTtyZXR1cm4hKHQubmFtZSE9PUJ2LkZJUkVGT1h8fCF0Lm9zVmVyc2lvbikmJk51bWJlcih0LnZlcnNpb24pPj1lfSg2OCl8fG55KDE0KSksUVAuc3VwcG9ydFBDU2V0Q29uZmlndXJhdGlvbj1mdW5jdGlvbigpe2NvbnN0IGU9d2luZG93LlJUQ1BlZXJDb25uZWN0aW9uO3JldHVybiFadigpJiYhIWUmJmUucHJvdG90eXBlLnNldENvbmZpZ3VyYXRpb24gaW5zdGFuY2VvZiBGdW5jdGlvbn0oKSxRUC5zdXBwb3J0V2ViUlRDRW5jb2RlZFRyYW5zZm9ybT1mdW5jdGlvbigpe2NvbnN0IGU9SHYoKTtyZXR1cm5cIkNocm9tZVwiPT09ZS5uYW1lJiZOdW1iZXIoZS52ZXJzaW9uKT49ODZ8fFwiU2FmYXJpXCI9PT1lLm5hbWUmJk51bWJlcihlLnZlcnNpb24pPj0xNX0oKSxRUC5zdXBwb3J0V2ViUlRDSW5zZXJ0YWJsZVN0cmVhbT1mdW5jdGlvbigpe2NvbnN0IGU9SHYoKTtyZXR1cm4oZS5uYW1lPT09QnYuQ0hST01FfHxlLm5hbWU9PT1Cdi5FREdFKSYmTnVtYmVyKGUudmVyc2lvbik+PTk0JiZcIk1lZGlhU3RyZWFtVHJhY2tHZW5lcmF0b3JcImluIHdpbmRvdyYmXCJNZWRpYVN0cmVhbVRyYWNrUHJvY2Vzc29yXCJpbiB3aW5kb3d9KCksUVAuc3VwcG9ydFJlcXVlc3RWaWRlb0ZyYW1lQ2FsbGJhY2s9XCJyZXF1ZXN0VmlkZW9GcmFtZUNhbGxiYWNrXCJpbiBIVE1MVmlkZW9FbGVtZW50LnByb3RvdHlwZSxRUC5zdXBwb3J0V2ViQ3J5cHRvPVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJnZvaWQgMCE9PXdpbmRvdy5jcnlwdG8mJnZvaWQgMCE9PXdpbmRvdy5jcnlwdG8uc3VidGxlLG9BKCgoKT0+e1FQLnN1cHBvcnREdWFsU3RyZWFtRW5jb2Rpbmc9ZnVuY3Rpb24oKXtjb25zdCBlPUh2KCk7cmV0dXJuISFYQShcIkRJU0FCTEVfV0VCQVVESU9cIil8fChcIlNhZmFyaVwiPT09ZS5uYW1lJiZOdW1iZXIoZS52ZXJzaW9uKT49MTR8fCEhKFwiQ2hyb21lXCI9PT1lLm5hbWUmJi9XaW5kb3dzL2kudGVzdChlLm9zfHxcIlwiKSYmTnVtYmVyKGUudmVyc2lvbik+PTEwMCYmWEEoXCJDSFJPTUVfRFVBTF9TVFJFQU1fVVNFX0VOQ09ESU5HXCIpKSl9KCksZmIuaW5mbyhcImJyb3dzZXIgY29tcGF0aWJpbGl0eVwiLEpTT04uc3RyaW5naWZ5KFFQKSxKU09OLnN0cmluZ2lmeShlKSl9KSl9KCk7Y2xhc3MgVVUgZXh0ZW5kcyB4eXtjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksRmcodGhpcyxcInNpZ25hbFwiLHZvaWQgMCksRmcodGhpcyxcInRva2VuXCIsdm9pZCAwKSxGZyh0aGlzLFwidG9rZW5UaW1lb3V0XCIsdm9pZCAwKSxGZyh0aGlzLFwidG9rZW5JbnRlcnZhbFwiLHZvaWQgMCksRmcodGhpcyxcIl9zZXF1ZW5jZVwiLDApLEZnKHRoaXMsXCJ1c2VyTWFwXCIsbmV3IE1hcCksRmcodGhpcyxcImVuY29kZXJcIixuZXcgVGV4dEVuY29kZXIpLHRoaXMuc2lnbmFsPWUsdGhpcy50b2tlbj10O2NvbnN0IGk9KCk9Pnt0aGlzLnNpZ25hbC5jb25uZWN0aW9uU3RhdGU9PT1Ody5DT05ORUNURUQmJnRoaXMuY2hlY2soKSwwPT09dGhpcy51c2VyTWFwLnNpemU/dGhpcy50b2tlbkludGVydmFsPXdpbmRvdy5zZXRUaW1lb3V0KGksMWUzKTp0aGlzLnRva2VuSW50ZXJ2YWw9d2luZG93LnNldFRpbWVvdXQoaSwzKlhBKFwiUDJQX1RPS0VOX0lOVEVSVkFMXCIpKX07aSgpfWFzeW5jIHNlbmQoZSx0LGksbixyKXt2YXIgbyxzLGE7aWYoMD09PXRoaXMudXNlck1hcC5zaXplKXJldHVybjtjb25zdCBjPUFycmF5LmZyb20oX04obz10aGlzLnVzZXJNYXApLmNhbGwobykpWzBdLnRva2VuO1wic3RyaW5nXCIhPXR5cGVvZiB0JiYodD1KU09OLnN0cmluZ2lmeSh0KSksbj1udWxsIT09KHM9bikmJnZvaWQgMCE9PXM/czpUQSg2LFwiXCIpLHI9bnVsbCE9PShhPXIpJiZ2b2lkIDAhPT1hP2E6dGhpcy5fc2VxdWVuY2UrKztjb25zdCBkPXtfaWQ6bixfdHlwZTplLF9zZXE6cixfbWVzc2FnZTp0LHRva2VuOlwiXCIuY29uY2F0KHRoaXMudG9rZW4sXCJfXCIpLmNvbmNhdChjKX07WEEoXCJTSE9XX1AyUF9MT0dcIikmJmZiLmRlYnVnKFwic2VuZCBtZXNzYWdlXCIsZCxcIm5vTmVlZFJlc3BvbnNlIDogXCIuY29uY2F0KGkpKTt0aGlzLnNwbGl0TWVzc2FnZShKU09OLnN0cmluZ2lmeShkKSkuZm9yRWFjaCgoZT0+e3RoaXMuc2lnbmFsLnJlcXVlc3QoUHcuREFUQV9TVFJFQU0se3BheWxvYWQ6dUEodGhpcy5lbmNvZGVyLmVuY29kZShlKSl9KX0pKTtjb25zdCBsPW5ldyBHaCgoKHQscik9Pntjb25zdCBvPXdpbmRvdy5zZXRUaW1lb3V0KCgoKT0+e3RoaXMub2ZmKFwicmVzLUBcIi5jb25jYXQobixcIl9hY2tcIikscyksdGhpcy5vZmYoXCJyZXMtQFwiLmNvbmNhdChuKSxjKSx0aGlzLm9mZih2Ty5BQk9SVCxhKSxmYi5kZWJ1ZyhcIltleHRlcm5hbC1zaWduYWxdIHJlcXVlc3QgdGltZW91dCwgdHlwZTogXCIuY29uY2F0KGUsXCIsIHJlcXVlc3RJZDogXCIpLmNvbmNhdChuKSksMD09PXRoaXMudXNlck1hcC5zaXplP3IobmV3IEN5KFJ5LklOVkFMSURfUkVNT1RFX1VTRVIpKTpyKG5ldyBDeShSeS5USU1FT1VUKSl9KSxYQShcIkVYVEVSTkFMX1NJR05BTF9SRVFVRVNUX1RJTUVPVVRcIikpLHM9KCk9PntvJiZ3aW5kb3cuY2xlYXJUaW1lb3V0KG8pLHRoaXMub2ZmKHZPLkFCT1JULGEpLGkmJnQoKX0sYT0oKT0+e28mJndpbmRvdy5jbGVhclRpbWVvdXQobyksdGhpcy5vZmYoXCJyZXMtQFwiLmNvbmNhdChuLFwiX2Fja1wiKSxzKSx0aGlzLm9mZihcInJlcy1AXCIuY29uY2F0KG4pLGMpLHIobmV3IEN5KFJ5LkVYVEVSTkFMX1NJR05BTF9BQk9SVCxcInR5cGU6IFwiLmNvbmNhdChlLFwiLCByZXF1ZXN0SWQ6IFwiKS5jb25jYXQobikpKX07dGhpcy5vbmNlKHZPLkFCT1JULGEpLHRoaXMub25jZShcInJlcy1AXCIuY29uY2F0KG4sXCJfYWNrXCIpLHMpO2NvbnN0IGM9KGksYyk9PntsPSEwLG8mJndpbmRvdy5jbGVhclRpbWVvdXQobyksdGhpcy5vZmYoXCJyZXMtQFwiLmNvbmNhdChuLFwiX2Fja1wiKSxzKSx0aGlzLm9mZih2Ty5BQk9SVCxhKSxcInN1Y2Nlc3NcIj09PWk/dChjKTpyKG5ldyBDeShSeS5QMlBfTUVTU0FHRV9GQUlMRUQsXCJyZXF1ZXN0IFwiLmNvbmNhdChlLFwiIGZhaWxlZCwgcmVxdWVzdElkOiBcIikuY29uY2F0KG4pKSl9O2xldCBsPSExO2l8fCh0aGlzLm9uY2UoXCJyZXMtQFwiLmNvbmNhdChuKSxjKSxtQShYQShcIlNJR05BTF9SRVFVRVNUX1RJTUVPVVRcIikpLnRoZW4oKCgpPT57bHx8ZmIud2FybmluZyhcImV4dGVybmFsX3NpZ25hbCByZXF1ZXN0IHRpbWVvdXQsIHR5cGU6IFwiLmNvbmNhdChlLFwiLCByZXF1ZXN0SWQ6IFwiKS5jb25jYXQobixcIiwgXCIpLmNvbmNhdChkKSl9KSkpfSkpO3RyeXtyZXR1cm4gYXdhaXQgbH1jYXRjaChvKXtpZihvLmNvZGU9PT1SeS5USU1FT1VUKXJldHVybiBhd2FpdCB0aGlzLnNlbmQoZSx0LGksbixyKTt0aHJvdyBvfX1vbk1lc3NhZ2UoZSl7dmFyIHQ7Y29uc3R7X3VpZDppfT1lO2xldCBuLHI9dGhpcy51c2VyTWFwLmdldChpKTtpZihyKW49ci5zcGxpdE1lc3NhZ2VNYXA7ZWxzZXtpZih0aGlzLnVzZXJNYXAuc2l6ZT4wfHwhKFwiX3R5cGVcImluIGUpfHxlLl90eXBlIT09SU8uQ0hFQ0spcmV0dXJuO2NvbnN0e3Rva2VuOnR9PWU7bj1uZXcgTWFwLHI9e3VpZDppLGlzU3RhcnQ6ITAsdG9rZW46dCxzcGxpdE1lc3NhZ2VNYXA6bixuZXh0RXhwZWN0ZWRTZXF1ZW5jZU51bWJlcjowLHJlY2VpdmVkTWVzc2FnZXNNYXA6bmV3IE1hcH0sdGhpcy51c2VyTWFwLnNldChpLHIpLHRoaXMuc2lnbmFsLmVtaXQoa3cuT05fVVNFUl9PTkxJTkUse3VpZDppfSksdGhpcy5oYW5kbGVVc2VyT25saW5lKCl9aWYoXCJpZFwiaW4gZSYmXCJ0b3RhbFwiaW4gZSl7dmFyIG87Y29uc3R7aWQ6dCx0b3RhbDpyfT1lLHM9bnVsbCE9PShvPW4uZ2V0KHQpKSYmdm9pZCAwIT09bz9vOltdO2lmKHMucHVzaChlKSxuLmhhcyh0KXx8bi5zZXQodCxzKSxzLmxlbmd0aCE9PXIpcmV0dXJuO3tjb25zdCByPWFFKHMpLmNhbGwocywoKGUsdCk9PmUuaW5kZXgtdC5pbmRleCkpLm1hcCgoZT0+ZS5wYXlsb2FkKSkuam9pbihcIlwiKTtuLmRlbGV0ZSh0KSwoZT1KU09OLnBhcnNlKHIpKS5fdWlkPWl9fWNvbnN0e190eXBlOnMsdG9rZW46YX09ZTtpZihEbih0PVtJTy5BQ0ssSU8uQ0hFQ0tdKS5jYWxsKHQscykpcmV0dXJuIHM9PT1JTy5DSEVDSyYmdGhpcy5oYW5kbGVDaGVja1Rva2VuKHIsYSksdm9pZCB0aGlzLnJlY2VpdmVNZXNzYWdlKGUpO2E9PT1cIlwiLmNvbmNhdChyLnRva2VuLFwiX1wiKS5jb25jYXQodGhpcy50b2tlbik/dGhpcy5oYW5kbGVSZWNlaXZlZE1lc3NhZ2UoZSk6ZmIuZGVidWcoJ1JlY2VpdmUgdW5leHBlY3RlZCBtZXNzYWdlXCIsICcuY29uY2F0KGEsXCIsIGN1cl90b2tlbjogXCIpLmNvbmNhdChyLnRva2VuLFwiX1wiKS5jb25jYXQodGhpcy50b2tlbiksZSl9Y2hlY2soKXtjb25zdCBlPXtfaWQ6VEEoNixcIlwiKSx0b2tlbjp0aGlzLnRva2VuLF90eXBlOklPLkNIRUNLfTtYQShcIlNIT1dfUDJQX0xPR1wiKSYmZmIuZGVidWcoXCJzZW5kIG1lc3NhZ2VcIixlKSx0aGlzLnNpZ25hbC5yZXF1ZXN0KFB3LkRBVEFfU1RSRUFNLHtwYXlsb2FkOnVBKHRoaXMuZW5jb2Rlci5lbmNvZGUoSlNPTi5zdHJpbmdpZnkoZSkpKX0pfWFjayhlKXtjb25zdCB0PXtfaWQ6ZSxfdHlwZTpJTy5BQ0ssdG9rZW46dGhpcy50b2tlbn07WEEoXCJTSE9XX1AyUF9MT0dcIikmJmZiLmRlYnVnKFwic2VuZCBtZXNzYWdlXCIsdCksdGhpcy5zaWduYWwucmVxdWVzdChQdy5EQVRBX1NUUkVBTSx7cGF5bG9hZDp1QSh0aGlzLmVuY29kZXIuZW5jb2RlKEpTT04uc3RyaW5naWZ5KHQpKSl9KX1yZXNwb25zZShlLHQsaSl7dGhpcy5zZW5kKElPLlJFU1BPTlNFLEpTT04uc3RyaW5naWZ5KHtzdWNjZXNzOiFpLG1lc3NhZ2U6dH0pLCEwLGUpfWhhbmRsZVJlY2VpdmVkTWVzc2FnZShlKXtjb25zdCB0PSgpPT57dGhpcy51c2VyTWFwLmZvckVhY2goKGU9Pntjb25zdHtyZWNlaXZlZE1lc3NhZ2VzTWFwOnQsbmV4dEV4cGVjdGVkU2VxdWVuY2VOdW1iZXI6aX09ZTtmb3IoO3QuaGFzKGkpOyl7Y29uc3Qgbj10LmdldChpKTt0LmRlbGV0ZShpKSx0aGlzLnJlY2VpdmVNZXNzYWdlKG4pLGUubmV4dEV4cGVjdGVkU2VxdWVuY2VOdW1iZXIrK319KSl9O2lmKCFlKXJldHVybiB2b2lkIHQoKTtjb25zdHtfdWlkOmksX3NlcTpufT1lLHI9dGhpcy51c2VyTWFwLmdldChpKSx7cmVjZWl2ZWRNZXNzYWdlc01hcDpvLGlzU3RhcnQ6cyxuZXh0RXhwZWN0ZWRTZXF1ZW5jZU51bWJlcjphfT1yO2lmKG48YSlyZXR1cm4gdGhpcy5hY2soZS5faWQpLHZvaWQgZmIuZGVidWcoXCJbZXh0ZXJuYWwtc2lnbmFsXSByZWNlaXZlIG9sZCBtZXNzYWdlLCBzZXE6IFwiLmNvbmNhdChuLFwiLCBcIikuY29uY2F0KGUuX21lc3NhZ2UpKTtvLnNldChuLGUpLHMmJm49PT1hJiYodGhpcy5yZWNlaXZlTWVzc2FnZShlKSxvLmRlbGV0ZShhKSxyLm5leHRFeHBlY3RlZFNlcXVlbmNlTnVtYmVyKyssdCgpKX1yZWNlaXZlTWVzc2FnZShlKXtjb25zdHtfaWQ6dCxfdHlwZTppLF9tZXNzYWdlOm4sX3VpZDpyfT1lO2lmKFhBKFwiU0hPV19QMlBfTE9HXCIpJiZmYi5kZWJ1ZyhcInJlY2VpdmUgbWVzc2FnZVwiLGUpLHQpe2xldCBvO3N3aXRjaChlLl90eXBlIT09SU8uQUNLJiYobiYmKG89SlNPTi5wYXJzZShuKSksdGhpcy5hY2soZS5faWQpKSxlLl90eXBlKXtjYXNlIElPLkNBTkRJREFURTpjYXNlIElPLkNPTlRST0w6dGhpcy5zaWduYWwuZW1pdChpLG8scik7YnJlYWs7Y2FzZSBJTy5QVUJMSVNIOmNhc2UgSU8uVU5QVUJMSVNIOmNhc2UgSU8uUkVTVEFSVF9JQ0U6Y2FzZSBJTy5DQUxMOm8udWlkPXIsWnkodGhpcy5zaWduYWwsaSxvKS50aGVuKCh0PT57dGhpcy5yZXNwb25zZShlLl9pZCx0KX0pKS5jYXRjaCgoKCk9Pnt0aGlzLnJlc3BvbnNlKGUuX2lkLHZvaWQgMCwhMCl9KSk7YnJlYWs7Y2FzZSBJTy5BQ0s6dGhpcy5nZXRMaXN0ZW5lcnMoXCJyZXMtQFwiLmNvbmNhdCh0LFwiX2Fja1wiKSkubGVuZ3RoPjAmJnRoaXMuZW1pdChcInJlcy1AXCIuY29uY2F0KHQsXCJfYWNrXCIpKTticmVhaztjYXNlIElPLlJFU1BPTlNFOntjb25zdHtzdWNjZXNzOmUsbWVzc2FnZTppfT1vO3RoaXMuZW1pdChcInJlcy1AXCIuY29uY2F0KHQpLGU/XCJzdWNjZXNzXCI6XCJmYWlsZWRcIixpKTticmVha319fX1zcGxpdE1lc3NhZ2UoZSl7aWYoZS5sZW5ndGg8VVUuTUFYX01FU1NBR0VfU0laRSlyZXR1cm5bZV07Y29uc3QgdD1bXSx7cmVtb3RlVG9rZW46aX09SlNPTi5wYXJzZShlKSxuPVRBKDYsXCJcIik7bGV0IHI9MCxvPTgwMDtjb25zdCBzPU1hdGguY2VpbChlLmxlbmd0aC9vKTtmb3IoO2UubGVuZ3RoPjA7KXtyKys7Y29uc3QgYT17aWQ6bixpbmRleDpyLHRvdGFsOnMscGF5bG9hZDplLnNsaWNlKDAsbyksdG9rZW46XCJcIi5jb25jYXQodGhpcy50b2tlbixcIl9cIikuY29uY2F0KGkpfTtKU09OLnN0cmluZ2lmeShhKS5sZW5ndGg+VVUuTUFYX01FU1NBR0VfU0laRT9vLT01MDoodC5wdXNoKGEpLGU9ZS5zbGljZShvKSl9cmV0dXJuIHQubWFwKChlPT5KU09OLnN0cmluZ2lmeShlKSkpfWhhbmRsZUNoZWNrVG9rZW4oZSx0KXtyZXR1cm4gZS50b2tlbiE9PXQ/KGZiLmRlYnVnKFwidG9rZW4gY2hhbmdlZCwgZnJvbSBcIi5jb25jYXQoZS50b2tlbixcIiB0byBcIikuY29uY2F0KHQpKSx0aGlzLnJlc2V0KGUudWlkLHQpLCExKToodGhpcy50b2tlblRpbWVvdXQmJih3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMudG9rZW5UaW1lb3V0KSx0aGlzLnRva2VuVGltZW91dD12b2lkIDApLHRoaXMudG9rZW5UaW1lb3V0PXdpbmRvdy5zZXRUaW1lb3V0KCgoKT0+e2ZiLmRlYnVnKFwidG9rZW4gdGltZW91dCwgXCIuY29uY2F0KHQpKSx0aGlzLnJlc2V0KGUudWlkKX0pLFhBKFwiTUFYX1AyUF9USU1FT1VUXCIpKSwhMCl9YXN5bmMgaGFuZGxlVXNlck9ubGluZSgpe2NvbnN0IGU9YXdhaXQgWnkodGhpcy5zaWduYWwsSU8uQ0FMTCx2b2lkIDApLHQ9YXdhaXQgdGhpcy5zZW5kKElPLkNBTEwsZSk7dGhpcy5zaWduYWwuZW1pdChEdy5QMlBfQ09OTkVDVElPTix0LCEwKX1hc3luYyByZXNldChlLHQpe2NvbnN0IGk9dGhpcy51c2VyTWFwLmdldChlKTtpJiYodGhpcy5lbWl0KHZPLkFCT1JUKSx0aGlzLnNpZ25hbC5lbWl0KGt3Lk9OX1VTRVJfT0ZGTElORSx7dWlkOmkudWlkLHJlYXNvbjpBTy5QMlBfVE9LRU5fQ0hBTkdFRH0pLHRoaXMuX3NlcXVlbmNlPTAsdGhpcy51c2VyTWFwLmNsZWFyKCksdHx8KGZiLmRlYnVnKFwiY2hhbmdlIGxvY2FsIHRva2VuIGZyb20gXCIuY29uY2F0KHQsXCIgdG8gXCIpLmNvbmNhdCh0KSksdGhpcy50b2tlbj1UQSg2LFwiXCIpKSl9Y2xlYXIoKXt0aGlzLl9zZXF1ZW5jZT0wLHRoaXMudXNlck1hcC5jbGVhcigpLHRoaXMudG9rZW5JbnRlcnZhbCYmd2luZG93LmNsZWFyVGltZW91dCh0aGlzLnRva2VuSW50ZXJ2YWwpLHRoaXMudG9rZW5JbnRlcnZhbD12b2lkIDAsdGhpcy50b2tlblRpbWVvdXQmJndpbmRvdy5jbGVhclRpbWVvdXQodGhpcy50b2tlblRpbWVvdXQpLHRoaXMudG9rZW5UaW1lb3V0PXZvaWQgMCx0aGlzLmVtaXQodk8uQUJPUlQpfX1GZyhVVSxcIk1BWF9TSVpFXCIsMSksRmcoVVUsXCJNQVhfTUVTU0FHRV9TSVpFXCIsMTAyNCk7Y2xhc3MgeFUgZXh0ZW5kcyB4eXtnZXQgY29ubmVjdGlvblN0YXRlKCl7cmV0dXJuIHRoaXMuX2Nvbm5lY3Rpb25TdGF0ZX1zZXQgY29ubmVjdGlvblN0YXRlKGUpe2UhPT10aGlzLl9jb25uZWN0aW9uU3RhdGUmJih0aGlzLl9jb25uZWN0aW9uU3RhdGU9ZSxlPT09TncuQ09OTkVDVEVEP3RoaXMuZW1pdChEdy5XU19DT05ORUNURUQpOmU9PT1Ody5SRUNPTk5FQ1RJTkc/dGhpcy5lbWl0KER3LldTX1JFQ09OTkVDVElORyx0aGlzLl93ZWJzb2NrZXRSZWNvbm5lY3RSZWFzb24pOmU9PT1Ody5DTE9TRUQmJnRoaXMuZW1pdChEdy5XU19DTE9TRUQsdGhpcy5fZGlzY29ubmVjdGVkUmVhc29uKSl9Z2V0IGN1cnJlbnRVUkxJbmRleCgpe3JldHVybiB0aGlzLndlYnNvY2tldC5jdXJyZW50VVJMSW5kZXh9Z2V0IHVybCgpe3JldHVybiB0aGlzLndlYnNvY2tldCYmdGhpcy53ZWJzb2NrZXQudXJsfHxudWxsfWdldCBydHQoKXtyZXR1cm4gdGhpcy5ydHRSb2xsaW5nLm1lYW4oKX1jb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksRmcodGhpcyxcIl9kaXNjb25uZWN0ZWRSZWFzb25cIix2b2lkIDApLEZnKHRoaXMsXCJfd2Vic29ja2V0UmVjb25uZWN0UmVhc29uXCIsdm9pZCAwKSxGZyh0aGlzLFwiX2Nvbm5lY3Rpb25TdGF0ZVwiLE53LkNMT1NFRCksRmcodGhpcyxcInJlY29ubmVjdFRva2VuXCIsdm9pZCAwKSxGZyh0aGlzLFwicDJwVG9rZW5cIix2b2lkIDApLEZnKHRoaXMsXCJ3ZWJzb2NrZXRcIix2b2lkIDApLEZnKHRoaXMsXCJvcGVuQ29ubmVjdGlvblRpbWVcIix2b2lkIDApLEZnKHRoaXMsXCJjbGllbnRJZFwiLHZvaWQgMCksRmcodGhpcyxcImxhc3RNc2dUaW1lXCIsRGF0ZS5ub3coKSksRmcodGhpcyxcInVwbG9hZENhY2hlXCIsW10pLEZnKHRoaXMsXCJ1cGxvYWRDYWNoZUludGVydmFsXCIsdm9pZCAwKSxGZyh0aGlzLFwicnR0Um9sbGluZ1wiLG5ldyBNQSg1KSksRmcodGhpcyxcInBpbmdwb25nVGltZXJcIix2b2lkIDApLEZnKHRoaXMsXCJwaW5ncG9uZ1RpbWVvdXRDb3VudFwiLDApLEZnKHRoaXMsXCJqb2luUmVzcG9uc2VcIix2b2lkIDApLEZnKHRoaXMsXCJtdWx0aUlwT3B0aW9uXCIsdm9pZCAwKSxGZyh0aGlzLFwiaW5pdEVycm9yXCIsdm9pZCAwKSxGZyh0aGlzLFwic3BlY1wiLHZvaWQgMCksRmcodGhpcyxcInN0b3JlXCIsdm9pZCAwKSxGZyh0aGlzLFwiX2V4dGVybmFsX3NpZ25hbFwiLHZvaWQgMCksRmcodGhpcyxcIm9uV2Vic29ja2V0TWVzc2FnZVwiLChlPT57aWYoZS5kYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpcmV0dXJuIHZvaWQgdGhpcy5lbWl0KER3Lk9OX0JJTkFSWV9EQVRBLGUuZGF0YSk7Y29uc3QgdD1KU09OLnBhcnNlKGUuZGF0YSk7aWYodGhpcy5sYXN0TXNnVGltZT1EYXRlLm5vdygpLE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LFwiX2lkXCIpKXtjb25zdCBlPVwicmVzLUBcIi5jb25jYXQodC5faWQpO3RoaXMuZW1pdChlLHQuX3Jlc3VsdCx0Ll9tZXNzYWdlKX1lbHNlIGlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LFwiX3R5cGVcIikpe3N3aXRjaCh0Ll90eXBlKXtjYXNlIGt3Lk9OX0RBVEFfU1RSRUFNOnJldHVybiB2b2lkIHRoaXMuaGFuZGxlRGF0YVN0cmVhbSh0Ll9tZXNzYWdlKTtjYXNlIGt3Lk1VVEVfQVVESU86Y2FzZSBrdy5NVVRFX1ZJREVPOmNhc2Uga3cuT05fUDJQX0xPU1Q6Y2FzZSBrdy5PTl9VU0VSX09OTElORTpyZXR1cm47Y2FzZSBrdy5PTl9VU0VSX09GRkxJTkU6Y29uc3R7dWlkOmV9PXQuX21lc3NhZ2U7cmV0dXJuIGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmNsaWVudElkLFwiXSB1c2VyLW9mZmxpbmUgdWlkOiBcIikuY29uY2F0KGUpKSx2b2lkIHRoaXMuX2V4dGVybmFsX3NpZ25hbC5yZXNldChlKX1pZih0aGlzLmVtaXQodC5fdHlwZSx0Ll9tZXNzYWdlKSx0Ll90eXBlPT09a3cuT05fTk9USUZJQ0FUSU9OJiZ0aGlzLmhhbmRsZU5vdGlmaWNhdGlvbih0Ll9tZXNzYWdlKSx0Ll90eXBlPT09a3cuT05fVVNFUl9CQU5ORUQpc3dpdGNoKHQuX21lc3NhZ2UuZXJyb3JfY29kZSl7Y2FzZSAxNDp0aGlzLmNsb3NlKEh5LlVJRF9CQU5ORUQpO2JyZWFrO2Nhc2UgMTU6dGhpcy5jbG9zZShIeS5JUF9CQU5ORUQpO2JyZWFrO2Nhc2UgMTY6dGhpcy5jbG9zZShIeS5DSEFOTkVMX0JBTk5FRCl9aWYodC5fdHlwZT09PWt3Lk9OX1VTRVJfTElDRU5TRV9CQU5ORUQpc3dpdGNoKHQuX21lc3NhZ2UuZXJyb3JfY29kZSl7Y2FzZSBPdy5FUlJfTElDRU5TRV9NSVNTSU5HOnRoaXMuY2xvc2UoSHkuTElDRU5TRV9NSVNTSU5HKTticmVhaztjYXNlIE93LkVSUl9MSUNFTlNFX0VYUElSRUQ6dGhpcy5jbG9zZShIeS5MSUNFTlNFX0VYUElSRUQpO2JyZWFrO2Nhc2UgT3cuRVJSX0xJQ0VOU0VfTUlOVVRFU19FWENFRURFRDp0aGlzLmNsb3NlKEh5LkxJQ0VOU0VfTUlOVVRFU19FWENFRURFRCk7YnJlYWs7Y2FzZSBPdy5FUlJfTElDRU5TRV9QRVJJT0RfSU5WQUxJRDp0aGlzLmNsb3NlKEh5LkxJQ0VOU0VfUEVSSU9EX0lOVkFMSUQpO2JyZWFrO2Nhc2UgT3cuRVJSX0xJQ0VOU0VfTVVMVElQTEVfU0RLX1NFUlZJQ0U6dGhpcy5jbG9zZShIeS5MSUNFTlNFX01VTFRJUExFX1NES19TRVJWSUNFKTticmVhaztjYXNlIE93LkVSUl9MSUNFTlNFX0lMTEVHQUw6dGhpcy5jbG9zZShIeS5MSUNFTlNFX0lMTEVHQUwpO2JyZWFrO2RlZmF1bHQ6dGhpcy5jbG9zZSgpfX19KSksdGhpcy5jbGllbnRJZD1lLmNsaWVudElkLHRoaXMuc3BlYz1lLHRoaXMuc3RvcmU9dCx0aGlzLndlYnNvY2tldD1uZXcgV08oXCJnYXRld2F5LVwiLmNvbmNhdCh0aGlzLmNsaWVudElkKSx0aGlzLnNwZWMucmV0cnlDb25maWcsITAsWEEoXCJKT0lOX0dBVEVXQVlfVVNFX0RVQUxfRE9NQUlOXCIpLFhBKFwiSk9JTl9HQVRFV0FZX1VTRV80NDNQT1JUX09OTFlcIiksdCksdGhpcy5oYW5kbGVXZWJzb2NrZXRFdmVudHMoKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwoKCk9Pnt0aGlzLmNvbm5lY3Rpb25TdGF0ZT09PU53LkNPTk5FQ1RFRCYmdGhpcy5yZWNvbm5lY3QoXCJyZXRyeVwiLEp5Lk9GRkxJTkUpfSkpLHRoaXMucDJwVG9rZW49VEEoNixcIlwiKSx0aGlzLl9leHRlcm5hbF9zaWduYWw9bmV3IFVVKHRoaXMsdGhpcy5wMnBUb2tlbil9YXN5bmMgcmVxdWVzdChlLHQsaSxuKXtjb25zdCByPVRBKDYsXCJcIiksbz17X2lkOnIsX3R5cGU6ZSxfbWVzc2FnZTp0fSxzPXRoaXMud2Vic29ja2V0LmNvbm5lY3Rpb25JRCxhPSgpPT5uZXcgR2goKChlLHQpPT57aWYodGhpcy5jb25uZWN0aW9uU3RhdGU9PT1Ody5DT05ORUNURUQpcmV0dXJuIGUoKTtjb25zdCBpPSgpPT57dGhpcy5vZmYoRHcuV1NfQ0xPU0VELG4pLGUoKX0sbj0oKT0+e3RoaXMub2ZmKER3LldTX0NPTk5FQ1RFRCxpKSx0KG5ldyBDeShSeS5XU19BQk9SVCkpfTt0aGlzLm9uY2UoRHcuV1NfQ09OTkVDVEVELGkpLHRoaXMub25jZShEdy5XU19DTE9TRUQsbil9KSk7aWYodGhpcy5jb25uZWN0aW9uU3RhdGUhPT1Ody5DT05ORUNUSU5HJiZ0aGlzLmNvbm5lY3Rpb25TdGF0ZSE9PU53LlJFQ09OTkVDVElOR3x8ZT09PVB3LkpPSU58fGU9PT1Qdy5SRUpPSU58fGF3YWl0IGEoKSx0aGlzLndlYnNvY2tldC5zZW5kTWVzc2FnZShvLCEwKSxuKXJldHVybjtjb25zdCBjPW5ldyBHaCgoKGksbik9PntsZXQgbz0hMTtjb25zdCBhPShuLHIpPT57bz0hMCxpKHtpc1N1Y2Nlc3M6XCJzdWNjZXNzXCI9PT1uLG1lc3NhZ2U6cnx8e319KSx0aGlzLm9mZihEdy5XU19DTE9TRUQsYyksdGhpcy5vZmYoRHcuV1NfUkVDT05ORUNUSU5HLGMpLHRoaXMuZW1pdChEdy5SRVFVRVNUX1NVQ0NFU1MsZSx0KX07dGhpcy5vbmNlKFwicmVzLUBcIi5jb25jYXQociksYSk7Y29uc3QgYz0oKT0+e24obmV3IEN5KFJ5LldTX0FCT1JULFwidHlwZTogXCIuY29uY2F0KGUpKSksdGhpcy5vZmYoRHcuV1NfQ0xPU0VELGMpLHRoaXMub2ZmKER3LldTX1JFQ09OTkVDVElORyxjKSx0aGlzLm9mZihcInJlcy1AXCIuY29uY2F0KHIpLGEpfTt0aGlzLm9uY2UoRHcuV1NfQ0xPU0VELGMpLHRoaXMub25jZShEdy5XU19SRUNPTk5FQ1RJTkcsYyksbUEoWEEoXCJTSUdOQUxfUkVRVUVTVF9USU1FT1VUXCIpKS50aGVuKCgoKT0+e3RoaXMud2Vic29ja2V0LmNvbm5lY3Rpb25JRCE9PXN8fG98fChmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLmNsaWVudElkLFwiXSB3cyByZXF1ZXN0IHRpbWVvdXQsIHR5cGU6IFwiKS5jb25jYXQoZSkpLHRoaXMuZW1pdChEdy5SRVFVRVNUX1RJTUVPVVQsZSx0KSl9KSl9KSk7bGV0IGQ9bnVsbDt0cnl7ZD1hd2FpdCBjfWNhdGNoKG4pe2lmKHRoaXMuY29ubmVjdGlvblN0YXRlPT09TncuQ0xPU0VEfHxlPT09UHcuTEVBVkUpdGhyb3cgbmV3IEN5KFJ5LldTX0FCT1JUKTtyZXR1cm4hdGhpcy5zcGVjLmZvcmNlV2FpdEdhdGV3YXlSZXNwb25zZXx8aT9uLnRocm93KCk6ZT09PVB3LkpPSU58fGU9PT1Qdy5SRUpPSU4/bnVsbDooYXdhaXQgYSgpLGF3YWl0IHRoaXMucmVxdWVzdChlLHQpKX1pZihkLmlzU3VjY2VzcylyZXR1cm4gZC5tZXNzYWdlO2NvbnN0IGw9TnVtYmVyKGQubWVzc2FnZS5lcnJvcl9jb2RlfHxkLm1lc3NhZ2UuY29kZSksdT1OTyhsKSxoPW5ldyBDeShSeS5VTkVYUEVDVEVEX1JFU1BPTlNFLFwiXCIuY29uY2F0KHUuZGVzYyxcIjogXCIpLmNvbmNhdChkLm1lc3NhZ2UuZXJyb3Jfc3RyKSx7Y29kZTpsLGRhdGE6ZC5tZXNzYWdlLGRlc2M6dS5kZXNjfSk7cmV0dXJuXCJzdWNjZXNzXCI9PT11LmFjdGlvbj9kLm1lc3NhZ2U6KGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuY2xpZW50SWQsXCJdIFtcIikuY29uY2F0KHRoaXMud2Vic29ja2V0LmNvbm5lY3Rpb25JRCxcIl0gdW5leHBlY3RlZCByZXNwb25zZSBmcm9tIHR5cGUgXCIpLmNvbmNhdChlLFwiLCBlcnJvcl9jb2RlOiBcIikuY29uY2F0KGwsXCIsIG1lc3NhZ2U6IFwiKS5jb25jYXQodS5kZXNjLFwiLCBhY3Rpb246IFwiKS5jb25jYXQodS5hY3Rpb24pKSxsPT09T3cuRVJSX1RPT19NQU5ZX0JST0FEQ0FTVEVSUz9lPT09UHcuSk9JTnx8ZT09PVB3LlJFSk9JTj8odGhpcy5pbml0RXJyb3I9aCx0aGlzLmNsb3NlKCksaC50aHJvdygpKTpoLnRocm93KCk6XCJmYWlsZWRcIj09PXUuYWN0aW9uP2gudGhyb3coKTpcInF1aXRcIj09PXUuYWN0aW9uPyh0aGlzLmluaXRFcnJvcj1oLHRoaXMuY2xvc2UoKSxoLnRocm93KCkpOihsPT09T3cuRVJSX0pPSU5fQllfTVVMVElfSVA/KHRoaXMubXVsdGlJcE9wdGlvbj1kLm1lc3NhZ2Uub3B0aW9uLGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuY2xpZW50SWQsXCJdIGRldGVjdCBtdWx0aSBpcCwgcmVjb3ZlclwiKSksdGhpcy5yZWNvbm5lY3QoXCJyZWNvdmVyXCIsSnkuTVVMVElfSVApKTp0aGlzLnJlY29ubmVjdCh1LmFjdGlvbixKeS5TRVJWRVJfRVJST1IpLGU9PT1Qdy5KT0lOfHxlPT09UHcuUkVKT0lOP251bGw6YXdhaXQgdGhpcy5yZXF1ZXN0KGUsdCkpKX13YWl0TWVzc2FnZShlLHQpe3JldHVybiBuZXcgR2goKGk9Pntjb25zdCBuPXI9PnsoIXR8fHQocikpJiYodGhpcy5vZmYoZSxuKSxpKHIpKX07dGhpcy5vbihlLG4pfSkpfXVwbG9hZFdSVENTdGF0cyhlKXtpZighdGhpcy5zdG9yZS5zZXNzaW9uSWQpcmV0dXJuIHZvaWQgZmIud2FybihcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gbm8gc2Vzc2lvbiBpZCB3aGVuIHVwbG9hZCB3cnRjIHN0YXRzXCIpKTtjb25zdCB0PXtsdHM6RGF0ZS5ub3coKSxzaWQ6dGhpcy5zdG9yZS5zZXNzaW9uSWQsdWlkOnRoaXMuc3RvcmUuaW50VWlkLHN0YXRzOmV9O3RoaXMudXBsb2FkKEx3LldSVENfU1RBVFMsdCl9dXBsb2FkKGUsdCl7Y29uc3QgaT17X3R5cGU6ZSxfbWVzc2FnZTp0fTt0cnl7dGhpcy53ZWJzb2NrZXQuc2VuZE1lc3NhZ2UoaSl9Y2F0Y2goZSl7Y29uc3QgdD1YQShcIk1BWF9VUExPQURfQ0FDSEVcIil8fDUwO3RoaXMudXBsb2FkQ2FjaGUucHVzaChpKSx0aGlzLnVwbG9hZENhY2hlLmxlbmd0aD50JiZ0aGlzLnVwbG9hZENhY2hlLnNwbGljZSgwLDEpLHRoaXMudXBsb2FkQ2FjaGUubGVuZ3RoPjAmJiF0aGlzLnVwbG9hZENhY2hlSW50ZXJ2YWwmJih0aGlzLnVwbG9hZENhY2hlSW50ZXJ2YWw9d2luZG93LnNldEludGVydmFsKCgoKT0+e2lmKHRoaXMuY29ubmVjdGlvblN0YXRlIT09TncuQ09OTkVDVEVEKXJldHVybjtjb25zdCBlPXRoaXMudXBsb2FkQ2FjaGUuc3BsaWNlKDAsMSlbMF07MD09PXRoaXMudXBsb2FkQ2FjaGUubGVuZ3RoJiYod2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy51cGxvYWRDYWNoZUludGVydmFsKSx0aGlzLnVwbG9hZENhY2hlSW50ZXJ2YWw9dm9pZCAwKSx0aGlzLnVwbG9hZChlLl90eXBlLGUuX21lc3NhZ2UpfSksWEEoXCJVUExPQURfQ0FDSEVfSU5URVJWQUxcIil8fDJlMykpfX1zZW5kKGUsdCl7Y29uc3QgaT17X3R5cGU6ZSxfbWVzc2FnZTp0fTt0aGlzLndlYnNvY2tldC5zZW5kTWVzc2FnZShpKX1hc3luYyBzZW5kRXh0ZW5zaW9uTWVzc2FnZShlLHQsaSl7cmV0dXJuIGF3YWl0IHRoaXMuX2V4dGVybmFsX3NpZ25hbC5zZW5kKGUsdCxpKX1pbml0KGUpe3JldHVybiB0aGlzLmluaXRFcnJvcj12b2lkIDAsdGhpcy5tdWx0aUlwT3B0aW9uPXZvaWQgMCx0aGlzLmpvaW5SZXNwb25zZT12b2lkIDAsdGhpcy5yZWNvbm5lY3RUb2tlbj12b2lkIDAsdGhpcy5vcGVuQ29ubmVjdGlvblRpbWU9dm9pZCAwLG5ldyBHaCgoKHQsaSk9Pnt0aGlzLm9uY2UoRHcuV1NfQ09OTkVDVEVELCgoKT0+dCh0aGlzLmpvaW5SZXNwb25zZSkpKSx0aGlzLm9uY2UoRHcuV1NfQ0xPU0VELCgoKT0+aSh0aGlzLmluaXRFcnJvcnx8bmV3IEN5KFJ5LldTX0FCT1JUKSkpKSx0aGlzLmNvbm5lY3Rpb25TdGF0ZT1Ody5DT05ORUNUSU5HLHRoaXMud2Vic29ja2V0LmluaXQoZSkuY2F0Y2goaSl9KSl9Y2xvc2UoZSl7dGhpcy5waW5ncG9uZ1RpbWVyJiYodGhpcy5waW5ncG9uZ1RpbWVvdXRDb3VudD0wLHdpbmRvdy5jbGVhckludGVydmFsKHRoaXMucGluZ3BvbmdUaW1lciksdGhpcy5waW5ncG9uZ1RpbWVyPXZvaWQgMCksdGhpcy5yZWNvbm5lY3RUb2tlbj12b2lkIDAsdGhpcy5qb2luUmVzcG9uc2U9dm9pZCAwLHRoaXMuX2V4dGVybmFsX3NpZ25hbC5jbGVhcigpLHRoaXMuX2Rpc2Nvbm5lY3RlZFJlYXNvbj1lfHxIeS5MRUFWRSx0aGlzLmNvbm5lY3Rpb25TdGF0ZT1Ody5DTE9TRUQsZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuY2xpZW50SWQsXCJdIFwiKStcIndpbGwgY2xvc2Ugd2Vic29ja2V0IGluIHNpZ25hbFwiKSx0aGlzLndlYnNvY2tldC5jbG9zZSgpLHRoaXMucDJwVG9rZW49VEEoNixcIlwiKSx0aGlzLl9leHRlcm5hbF9zaWduYWwuY2xlYXIoKSx0aGlzLl9leHRlcm5hbF9zaWduYWw9bmV3IFVVKHRoaXMsdGhpcy5wMnBUb2tlbil9YXN5bmMgam9pbigpe2lmKCF0aGlzLmpvaW5SZXNwb25zZSl7dGhpcy5lbWl0KER3LkFCT1JUX1AyUF9FWEVDVVRJT04pO2NvbnN0IGU9YXdhaXQgWnkodGhpcyxEdy5SRVFVRVNUX0pPSU5fSU5GTyksdD1hd2FpdCB0aGlzLnJlcXVlc3QoUHcuSk9JTixlKTtpZighdClyZXR1cm4gdGhpcy5lbWl0KER3LlJFUE9SVF9KT0lOX0dBVEVXQVksUnkuVElNRU9VVCx0aGlzLnVybHx8XCJcIiksITE7dGhpcy5qb2luUmVzcG9uc2U9dCx0aGlzLmVtaXQoRHcuSk9JTl9SRVNQT05TRSx0aGlzLmpvaW5SZXNwb25zZSksdGhpcy5yZWNvbm5lY3RUb2tlbj10aGlzLmpvaW5SZXNwb25zZS5yZWpvaW5fdG9rZW59cmV0dXJuIHRoaXMuY29ubmVjdGlvblN0YXRlPU53LkNPTk5FQ1RFRCx0aGlzLnBpbmdwb25nVGltZXImJndpbmRvdy5jbGVhckludGVydmFsKHRoaXMucGluZ3BvbmdUaW1lciksdGhpcy5waW5ncG9uZ1RpbWVyPXdpbmRvdy5zZXRJbnRlcnZhbCh0aGlzLmhhbmRsZVBpbmdQb25nLmJpbmQodGhpcyksM2UzKSwhMH1yZWNvbm5lY3QoZSx0KXt0aGlzLnBpbmdwb25nVGltZXImJih0aGlzLnBpbmdwb25nVGltZW91dENvdW50PTAsd2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy5waW5ncG9uZ1RpbWVyKSx0aGlzLnBpbmdwb25nVGltZXI9dm9pZCAwKSx0aGlzLndlYnNvY2tldC5yZWNvbm5lY3QoZSx0KX1oYW5kbGVEYXRhU3RyZWFtKGUpe3RyeXt2YXIgdDtjb25zdCBpPWxBKGUucGF5bG9hZCksbj0obmV3IFRleHREZWNvZGVyKS5kZWNvZGUoaSkscj1KU09OLnBhcnNlKG4pO1widG90YWxcImluIHImJlwiaWRcImluIHJ8fERuKHQ9T2JqZWN0LnZhbHVlcyhJTykpLmNhbGwodCxyLl90eXBlKT8oci5fdWlkPWUudWlkLHRoaXMuX2V4dGVybmFsX3NpZ25hbC5vbk1lc3NhZ2UocikpOnRoaXMuZW1pdChrdy5PTl9EQVRBX1NUUkVBTSxlKX1jYXRjaCh0KXt0aGlzLmVtaXQoa3cuT05fREFUQV9TVFJFQU0sZSl9fWhhbmRsZU5vdGlmaWNhdGlvbihlKXtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gcmVjZWl2ZSBub3RpZmljYXRpb246IFwiKSxlKTtjb25zdCB0PU5PKGUuY29kZSk7aWYoXCJzdWNjZXNzXCIhPT10LmFjdGlvbil7aWYoXCJmYWlsZWRcIiE9PXQuYWN0aW9uKXJldHVyblwicXVpdFwiPT09dC5hY3Rpb24/KFwiRVJSX1JFUEVBVF9KT0lOX0NIQU5ORUxcIj09PXQuZGVzYyYmdGhpcy5jbG9zZShIeS5VSURfQkFOTkVEKSx2b2lkIHRoaXMuY2xvc2UoKSk6dm9pZCB0aGlzLnJlY29ubmVjdCh0LmFjdGlvbixKeS5TRVJWRVJfRVJST1IpO2ZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLmNsaWVudElkLFwiXSBpZ25vcmUgZXJyb3I6IFwiKSx0LmRlc2MpfX1oYW5kbGVQaW5nUG9uZygpe2lmKCF0aGlzLndlYnNvY2tldHx8XCJjb25uZWN0ZWRcIiE9PXRoaXMud2Vic29ja2V0LnN0YXRlKXJldHVybjt0aGlzLnBpbmdwb25nVGltZW91dENvdW50PjAmJnRoaXMucnR0Um9sbGluZy5hZGQoM2UzKSx0aGlzLnBpbmdwb25nVGltZW91dENvdW50Kz0xO2NvbnN0IGU9WEEoXCJQSU5HX1BPTkdfVElNRV9PVVRcIiksdD1EYXRlLm5vdygpO3RoaXMucGluZ3BvbmdUaW1lb3V0Q291bnQ+PWUmJihmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLmNsaWVudElkLFwiXSBQSU5HUE9ORyBUaW1lb3V0LiBMYXN0IFNvY2tldCBNZXNzYWdlOiBcIikuY29uY2F0KHQtdGhpcy5sYXN0TXNnVGltZSxcIm1zXCIpKSx0LXRoaXMubGFzdE1zZ1RpbWU+WEEoXCJXRUJTT0NLRVRfVElNRU9VVF9NSU5cIikpP3RoaXMucmVjb25uZWN0KFwicmV0cnlcIixKeS5USU1FT1VUKTp0aGlzLnJlcXVlc3QoUHcuUElORyx2b2lkIDAsITApLnRoZW4oKCgpPT57dGhpcy5waW5ncG9uZ1RpbWVvdXRDb3VudD0wO2NvbnN0IGU9RGF0ZS5ub3coKS10O3RoaXMucnR0Um9sbGluZy5hZGQoZSksWEEoXCJSRVBPUlRfU1RBVFNcIikmJnRoaXMuc2VuZChQdy5QSU5HX0JBQ0sse3Bpbmdwb25nRWxhcHNlOmV9KX0pKS5jYXRjaCgoZT0+e30pKX1oYW5kbGVXZWJzb2NrZXRFdmVudHMoKXt0aGlzLndlYnNvY2tldC5vbihVdy5SRUNPTk5FQ1RfV0FJVFRJTkdfRklOSVNILChlPT57dGhpcy5lbWl0KER3LldTX1JFQ09OTkVDVF9XQUlUVElOR19GSU5JU0gsZSl9KSksdGhpcy53ZWJzb2NrZXQub24oVXcuUkVDT05ORUNUX0NSRUFURV9DT05ORUNUSU9OLChlPT57dGhpcy5lbWl0KER3LldTX1JFQ09OTkVDVF9DUkVBVEVfQ09OTkVDVElPTixlKX0pKSx0aGlzLndlYnNvY2tldC5vbihVdy5PTl9NRVNTQUdFLHRoaXMub25XZWJzb2NrZXRNZXNzYWdlKSx0aGlzLndlYnNvY2tldC5vbihVdy5DTE9TRUQsKCgpPT57dGhpcy5jb25uZWN0aW9uU3RhdGU9TncuQ0xPU0VEfSkpLHRoaXMud2Vic29ja2V0Lm9uKFV3LkZBSUxFRCwoKCk9Pnt0aGlzLl9kaXNjb25uZWN0ZWRSZWFzb249SHkuTkVUV09SS19FUlJPUix0aGlzLmNvbm5lY3Rpb25TdGF0ZT1Ody5DTE9TRUR9KSksdGhpcy53ZWJzb2NrZXQub24oVXcuUkVDT05ORUNUSU5HLChlPT57dGhpcy5fd2Vic29ja2V0UmVjb25uZWN0UmVhc29uPWUsdGhpcy5qb2luUmVzcG9uc2U9dm9pZCAwLHRoaXMuY29ubmVjdGlvblN0YXRlPT09TncuQ09OTkVDVEVEP3RoaXMuY29ubmVjdGlvblN0YXRlPU53LlJFQ09OTkVDVElORzp0aGlzLmNvbm5lY3Rpb25TdGF0ZT1Ody5DT05ORUNUSU5HfSkpLHRoaXMud2Vic29ja2V0Lm9uKFV3LldJTExfUkVDT05ORUNULCgoZSx0LGkpPT57XCJyZXRyeVwiIT09ZT8oZmIuZGVidWcoXCJcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIiB3ZWJzb2NrZXQgd2lsbF9jb25uZWN0IGV2ZW50LCByZW5ld1Nlc3Npb24gcmVjb25uZWN0TW9kZSBpcyBcIikuY29uY2F0KGUpKSx0aGlzLnJlY29ubmVjdFRva2VuPXZvaWQgMCk6ZmIuZGVidWcoXCJcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIiByZWNvbm5lY3QgbW9kZSBpcyByZXRyeSwgbm8gbmVlZCB0byByZW5ldyBzZXNzaW9uXCIpKSxpKGUpfSkpLHRoaXMud2Vic29ja2V0Lm9uKFV3LkNPTk5FQ1RFRCwoKCk9Pnt0aGlzLm9wZW5Db25uZWN0aW9uVGltZT1EYXRlLm5vdygpLHRoaXMuam9pbigpLmNhdGNoKChlPT57aWYodGhpcy5lbWl0KER3LlJFUE9SVF9KT0lOX0dBVEVXQVksZSx0aGlzLnVybHx8XCJcIiksZSBpbnN0YW5jZW9mIEN5JiZlLmNvZGU9PT1SeS5VTkVYUEVDVEVEX1JFU1BPTlNFJiZlLmRhdGEuY29kZT09PU93LkVSUl9OT19BVVRIT1JJWkVEKXJldHVybiBmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLmNsaWVudElkLFwiXSByZWNvbm5lY3Qgbm8gYXV0aG9yaXplZCwgcmVjb3ZlclwiKSksdm9pZCB0aGlzLnJlY29ubmVjdChcInJlY292ZXJcIixKeS5TRVJWRVJfRVJST1IpO2ZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLmNsaWVudElkLFwiXSBqb2luIGdhdGV3YXkgcmVxdWVzdCBmYWlsZWRcIiksZS50b1N0cmluZygpKSx0aGlzLnNwZWMuZm9yY2VXYWl0R2F0ZXdheVJlc3BvbnNlP3RoaXMucmVjb25uZWN0KFwidHJ5TmV4dFwiLEp5LlNFUlZFUl9FUlJPUik6KHRoaXMuaW5pdEVycm9yPWUsdGhpcy5jbG9zZSgpKX0pKX0pKSx0aGlzLndlYnNvY2tldC5vbihVdy5SRVFVRVNUX05FV19VUkxTLCgoZSx0KT0+e1p5KHRoaXMsRHcuUkVRVUVTVF9SRUNPVkVSLHRoaXMubXVsdGlJcE9wdGlvbikudGhlbihlKS5jYXRjaCh0KX0pKSx0aGlzLndlYnNvY2tldC5vbihVdy5PTl9UT0tFTl9QUklWSUxFR0VfRElEX0VYUElSRSwoKCk9Pnt0aGlzLmVtaXQoa3cuT05fVE9LRU5fUFJJVklMRUdFX0RJRF9FWFBJUkUpfSkpfX12YXIgVlU9e2V4cG9ydHM6e319O1ZVLmV4cG9ydHM9KCgpPT57dmFyIGU9ezg6KGUsdCxpKT0+e2kucih0KSxpLmQodCx7UGFyc2VyOigpPT5DLFByaW50ZXI6KCk9PmIscGFyc2U6KCk9PkQscHJpbnQ6KCk9PlB9KTtjb25zdCBuPVwiXFxuXCIscj1cIlwiLmNvbmNhdChcIlxcclwiKS5jb25jYXQobiksbz1cIiBcIjtsZXQgcztmdW5jdGlvbiBhKGUpe3JldHVybiBlPj1cIjBcIiYmZTw9XCI5XCJ9ZnVuY3Rpb24gYyhlKXtyZXR1cm4gZT49XCIhXCImJmU8PVwiflwifWZ1bmN0aW9uIGQoZSl7cmV0dXJuIGMoZSl8fGU+PVwiwoBcIiYmZTw9XCLDv1wifWZ1bmN0aW9uIGwoZSl7cmV0dXJuXCIhXCI9PT1lfHxlPj1cIiNcIiYmZTw9XCInXCJ8fGU+PVwiKlwiJiZlPD1cIitcInx8ZT49XCItXCImJmU8PVwiLlwifHxlPj1cIjBcIiYmZTw9XCI5XCJ8fGU+PVwiQVwiJiZlPD1cIlpcInx8ZT49XCJeXCImJmU8PVwiflwifWZ1bmN0aW9uIHUoZSl7cmV0dXJuIGU+PVwiMVwiJiZlPD1cIjlcIn1mdW5jdGlvbiBoKGUpe3JldHVybiBlPj1cIkFcIiYmZTw9XCJaXCJ8fGU+PVwiYVwiJiZlPD1cInpcIn1mdW5jdGlvbiBwKGUpe3JldHVyblwiZFwiPT09ZXx8XCJoXCI9PT1lfHxcIm1cIj09PWV8fFwic1wiPT09ZX1mdW5jdGlvbiBfKGUpe3JldHVybiBlPlwiXHUwMDAxXCImJmU8XCJcXHRcInx8ZT5cIlxcdlwiJiZlPFwiXFxmXCJ8fGU+XCJcdTAwMGVcIiYmZTxcIsO/XCJ9ZnVuY3Rpb24gRShlKXtyZXR1cm4gaChlKXx8YShlKXx8XCIrXCI9PT1lfHxcIi9cIj09PWV9ZnVuY3Rpb24gZihlKXtyZXR1cm4gYShlKXx8aChlKXx8XCIrXCI9PT1lfHxcIi9cIj09PWV8fFwiLVwiPT09ZXx8XCJfXCI9PT1lfWZ1bmN0aW9uIG0oZSl7cmV0dXJuIGgoZSl8fGEoZSl8fFwiK1wiPT09ZXx8XCIvXCI9PT1lfWZ1bmN0aW9uIFQoZSx0KXt2YXIgaT1PYmplY3Qua2V5cyhlKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgbj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO3QmJihuPW4uZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHQpLmVudW1lcmFibGV9KSkpLGkucHVzaC5hcHBseShpLG4pfXJldHVybiBpfWZ1bmN0aW9uIFMoZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/VChPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe2coZSx0LGlbdF0pfSkpOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoaSkpOlQoT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9ZnVuY3Rpb24gZyhlLHQsaSl7cmV0dXJuIHQgaW4gZT9PYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHt2YWx1ZTppLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6ZVt0XT1pLGV9IWZ1bmN0aW9uKGUpe2UuVkVSU0lPTj1cInZcIixlLk9SSUdJTj1cIm9cIixlLlNFU1NJT05fTkFNRT1cInNcIixlLklORk9STUFUSU9OPVwiaVwiLGUuVVJJPVwidVwiLGUuRU1BSUw9XCJlXCIsZS5QSE9ORT1cInBcIixlLkNPTk5FQ1RJT049XCJjXCIsZS5CQU5EV0lEVEg9XCJiXCIsZS5USU1FPVwidFwiLGUuUkVQRUFUPVwiclwiLGUuWk9ORV9BREpVU1RNRU5UUz1cInpcIixlLktFWT1cImtcIixlLkFUVFJJQlVURT1cImFcIixlLk1FRElBPVwibVwifShzfHwocz17fSkpO2NsYXNzIFJ7Y29uc3VtZVRleHQoZSx0KXtsZXQgaT10O2Zvcig7aTxlLmxlbmd0aDspe2NvbnN0IHQ9ZVtpXTtpZihcIlxcMFwiPT09dHx8XCJcXHJcIj09PXR8fHQ9PT1uKWJyZWFrO2krPTF9aWYoaS10PT0wKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdGV4dCwgYXQgXCIuY29uY2F0KGUpKTtyZXR1cm4gaX1jb25zdW1lVW5pY2FzdEFkZHJlc3MoZSx0LGkpe3JldHVybiB0aGlzLmNvbnN1bWVUaWxsKGUsdCxvKX1jb25zdW1lT25lT3JNb3JlKGUsdCxpKXtsZXQgbj10O2Zvcig7aShlW25dKTspbisrO2lmKG4tdD09MCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHJ1bGUgYXQgXCIuY29uY2F0KHQsXCIuXCIpKTtyZXR1cm4gbn1jb25zdW1lU3BhY2UoZSx0KXtpZihlW3RdPT09bylyZXR1cm4gdCsxO3Rocm93IG5ldyBFcnJvcihcIkludmFsaWQgc3BhY2UgYXQgXCIuY29uY2F0KHQsXCIuXCIpKX1jb25zdW1lSVA0QWRkcmVzcyhlLHQpe2xldCBpPXQ7Zm9yKGxldCB0PTA7dDw0O3QrKylpZihpPXRoaXMuY29uc3VtZURlY2ltYWxVQ2hhcihlLGkpLDMhPT10KXtpZihcIi5cIiE9PWVbaV0pdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBJUDQgYWRkcmVzcy5cIik7aSsrfXJldHVybiBpfWNvbnN1bWVEZWNpbWFsVUNoYXIoZSx0KXtsZXQgaT10O2ZvcihsZXQgdD0wO3Q8MyYmYShlW2ldKTt0KyssaSsrKTtpZihpLXQ9PTApdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBkZWNpbWFsIHVjaGFyLlwiKTtjb25zdCBuPXBhcnNlSW50KGUuc2xpY2UodCxpKSk7aWYobj49MCYmbjw9MjU1KXJldHVybiBpO3Rocm93IG5ldyBFcnJvcihcIkludmFsaWQgZGVjaW1hbCB1Y2hhclwiKX1jb25zdW1lSVA2QWRkcmVzcyhlLHQpe2xldCBpPXRoaXMuY29uc3VtZUhleHBhcnQoZSx0KTtyZXR1cm5cIjpcIj09PWVbaV0/KGkrPTEsaT10aGlzLmNvbnN1bWVJUDRBZGRyZXNzKGUsaSksaSk6aX1jb25zdW1lSGV4cGFydChlLHQpe2xldCBpPXQ7aWYoXCI6XCI9PT1lW2ldJiZcIjpcIj09PWVbaSsxXSl7aSs9Mjt0cnl7aT10aGlzLmNvbnN1bWVIZXhzZXEoZSxpKX1jYXRjaChlKXt9cmV0dXJuIGl9aWYoaT10aGlzLmNvbnN1bWVIZXhzZXEoZSxpKSxcIjpcIj09PWVbaV0mJlwiOlwiPT09ZVtpKzFdKXtpKz0yO3RyeXtpPXRoaXMuY29uc3VtZUhleHNlcShlLGkpfWNhdGNoKGUpe31yZXR1cm4gaX1yZXR1cm4gaX1jb25zdW1lSGV4c2VxKGUsdCl7bGV0IGk9dDtmb3IoO2k9dGhpcy5jb25zdW1lSGV4NChlLGkpLFwiOlwiPT09ZVtpXSYmXCI6XCIhPT1lW2krMV07KWkrPTE7cmV0dXJuIGl9Y29uc3VtZUhleDQoZSx0KXtsZXQgaT0wO2Zvcig7aTw0O2krKylpZighKChuPWVbdCtpXSk+PVwiMFwiJiZuPD1cIjlcInx8bj49XCJhXCImJm48PVwiZlwifHxuPj1cIkFcIiYmbjw9XCJGXCIpKXtpZigwPT09aSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGhleCA0XCIpO2JyZWFrfXZhciBuO3JldHVybiB0K2l9Y29uc3VtZUZRRE4oZSx0KXtsZXQgaT10O2Zvcig7YShlW2ldKXx8aChlW2ldKXx8XCItXCI9PT1lW2ldfHxcIi5cIj09PWVbaV07KWkrPTE7aWYoaS10PDQpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBGUUROXCIpO3JldHVybiBpfWNvbnN1bWVFeHRuQWRkcihlLHQpe3JldHVybiB0aGlzLmNvbnN1bWVPbmVPck1vcmUoZSx0LGQpfWNvbnN1bWVNdWx0aWNhc3RBZGRyZXNzKGUsdCxpKXtzd2l0Y2goaSl7Y2FzZVwiSVA0XCI6Y2FzZVwiaXA0XCI6cmV0dXJuIHRoaXMuY29uc3VtZUlQNE11bHRpY2FzdEFkZHJlc3MoZSx0KTtjYXNlXCJJUDZcIjpjYXNlXCJpcDZcIjpyZXR1cm4gdGhpcy5jb25zdW1lSVA2TXVsdGljYXN0QWRkcmVzcyhlLHQpO2RlZmF1bHQ6dHJ5e3JldHVybiB0aGlzLmNvbnN1bWVGUUROKGUsdCl9Y2F0Y2goaSl7cmV0dXJuIHRoaXMuY29uc3VtZUV4dG5BZGRyKGUsdCl9fX1jb25zdW1lSVA2TXVsdGljYXN0QWRkcmVzcyhlLHQpe2NvbnN0IGk9dGhpcy5jb25zdW1lSGV4cGFydChlLHQpO3JldHVyblwiL1wiPT09ZVtpXT90aGlzLmNvbnN1bWVJbnRlZ2VyKGUsaSsxKTppfWNvbnN1bWVJUDRNdWx0aWNhc3RBZGRyZXNzKGUsdCl7bGV0IGk9dCszO2NvbnN0IG49ZS5zbGljZSh0LGkpLHI9cGFyc2VJbnQobik7aWYocjwyMjR8fHI+MjM5KXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgSVA0IG11bHRpY2FzdCBhZGRyZXNzLCBJUHY0IG11bHRpY2FzdCBhZGRyZXNzZXMgbWF5IGJlIGluIHRoZSByYW5nZSAyMjQuMC4wLjAgdG8gMjM5LjI1NS4yNTUuMjU1LlwiKTtmb3IobGV0IHQ9MDt0PDM7dCsrKXtpZihcIi5cIiE9PWVbaV0pdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBJUDQgbXVsdGljYXN0IGFkZHJlc3MuXCIpO2krPTEsaT10aGlzLmNvbnN1bWVEZWNpbWFsVUNoYXIoZSxpKX1yZXR1cm5cIi9cIj09PWVbaV0mJihpKz0xKSxpPXRoaXMuY29uc3VtZVRUTChlLGkpLFwiL1wiPT09ZVtpXSYmKGk9dGhpcy5jb25zdW1lSW50ZWdlcihlLGkpKSxpfWNvbnN1bWVJbnRlZ2VyKGUsdCl7aWYoIXUoZVt0XSkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBpbnRlZ2VyLlwiKTtmb3IodCs9MTthKGVbdF0pOyl0Kz0xO3JldHVybiB0fWNvbnN1bWVUVEwoZSx0KXtpZihcIjBcIj09PWVbdF0pcmV0dXJuIHQrMTtpZighdShlW3RdKSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIFRUTC5cIik7dCs9MTtmb3IobGV0IGk9MDtpPDImJmEoZVt0XSk7aSsrKXQrPTE7cmV0dXJuIHR9Y29uc3VtZVRva2VuKGUsdCl7cmV0dXJuIHRoaXMuY29uc3VtZU9uZU9yTW9yZShlLHQsbCl9Y29uc3VtZVRpbWUoZSx0KXtsZXQgaT10O2lmKFwiMFwiPT09ZVtpXSlyZXR1cm4gaSsxO2Zvcih1KGVbaV0pJiYoaSs9MSk7YShlW2ldKTspaSsrO2lmKGktdDwxMCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHRpbWVcIik7cmV0dXJuIGl9Y29uc3VtZUFkZHJlc3MoZSx0KXtyZXR1cm4gdGhpcy5jb25zdW1lVGlsbChlLHQsbyl9Y29uc3VtZVR5cGVkVGltZShlLHQpe2xldCBpPXQ7cmV0dXJuIGk9dGhpcy5jb25zdW1lT25lT3JNb3JlKGUsaSxhKSxwKGVbaV0pP2krMTppfWNvbnN1bWVSZXBlYXRJbnRlcnZhbChlLHQpe2lmKCF1KGVbdF0pKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcmVwZWF0IGludGVydmFsXCIpO2Zvcih0Kz0xO2EoZVt0XSk7KXQrPTE7cmV0dXJuIHAoZVt0XSkmJih0Kz0xKSx0fWNvbnN1bWVQb3J0KGUsdCl7cmV0dXJuIHRoaXMuY29uc3VtZU9uZU9yTW9yZShlLHQsYSl9Y29uc3VtZShlLHQsaSl7Zm9yKGxldCBuPTA7bjxpLmxlbmd0aDtuKyspe2lmKHQrbj49ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiY29uc3VtZSBleGNlZWRpbmcgdmFsdWUgbGVuZ3RoXCIpO2lmKGVbdCtuXSE9PWlbbl0pdGhyb3cgbmV3IEVycm9yKFwiY29uc3VtZSBcIi5jb25jYXQoaSxcIiBmYWlsZWQgYXQgXCIpLmNvbmNhdChuKSl9cmV0dXJuIHQraS5sZW5ndGh9Y29uc3VtZVRpbGwoZSx0LGkpe2xldCBuPXQ7Zm9yKDtuPGUubGVuZ3RoJiYoXCJzdHJpbmdcIiE9dHlwZW9mIGl8fGVbbl0hPT1pKSYmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGl8fCFpKGVbbl0pKTspbisrO3JldHVybiBufX1jbGFzcyBDIGV4dGVuZHMgUntjb25zdHJ1Y3Rvcigpe3N1cGVyKCksZyh0aGlzLFwicmVjb3Jkc1wiLFtdKSxnKHRoaXMsXCJjdXJyZW50TGluZVwiLDApfXBhcnNlKGUpe2NvbnN0IHQ9dGhpcy5wcm9iZUVPTChlKTt0aGlzLnJlY29yZHM9ZS5zcGxpdCh0KS5maWx0ZXIoKGU9PiEhanAoZSkuY2FsbChlKSkpLm1hcCh0aGlzLnBhcnNlTGluZSksdGhpcy5jdXJyZW50TGluZT0wO2NvbnN0IGk9dGhpcy5wYXJzZVZlcnNpb24oKSxuPXRoaXMucGFyc2VPcmlnaW4oKSxyPXRoaXMucGFyc2VTZXNzaW9uTmFtZSgpLG89dGhpcy5wYXJzZUluZm9ybWF0aW9uKCkscz10aGlzLnBhcnNlVXJpKCksYT10aGlzLnBhcnNlRW1haWwoKSxjPXRoaXMucGFyc2VQaG9uZSgpLGQ9dGhpcy5wYXJzZUNvbm5lY3Rpb24oKSxsPXRoaXMucGFyc2VCYW5kV2lkdGgoKSx1PXRoaXMucGFyc2VUaW1lRmllbGRzKCksaD10aGlzLnBhcnNlS2V5KCkscD10aGlzLnBhcnNlU2Vzc2lvbkF0dHJpYnV0ZSgpLF89dGhpcy5wYXJzZU1lZGlhRGVzY3JpcHRpb24oKTtpZih0aGlzLmN1cnJlbnRMaW5lIT09dGhpcy5yZWNvcmRzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJwYXJzaW5nIGZhaWxlZCwgbm9uIGV4aGF1c3RpdmUgc2RwIGxpbmVzLlwiKTtyZXR1cm57dmVyc2lvbjppLG9yaWdpbjpuLHNlc3Npb25OYW1lOnIsaW5mb3JtYXRpb246byx1cmk6cyxlbWFpbHM6YSxwaG9uZXM6Yyxjb25uZWN0aW9uOmQsYmFuZHdpZHRoczpsLHRpbWVGaWVsZHM6dSxrZXk6aCxhdHRyaWJ1dGVzOnAsbWVkaWFEZXNjcmlwdGlvbnM6X319Z2V0Q3VycmVudFJlY29yZCgpe2NvbnN0IGU9dGhpcy5yZWNvcmRzW3RoaXMuY3VycmVudExpbmVdO2lmKCFlKXRocm93IG5ldyBFcnJvcihcIlJlY29yZCBkb2Vzbid0IGV4aXQuXCIpO3JldHVybiBlfXByb2JlRU9MKGUpe2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCsrKWlmKGVbdF09PT1uKXJldHVyblwiXFxyXCI9PT1lW3QtMV0/cjpuO3Rocm93IG5ldyBFcnJvcihcIkludmFsaWQgbmV3bGluZSBjaGFyYWN0ZXIuXCIpfXBhcnNlTGluZShlLHQpe2lmKGUubGVuZ3RoPDIpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBzZHAgbGluZSwgc2RwIGxpbmUgc2hvdWxkIGJlIG9mIGZvcm0gPHR5cGU+PTx2YWx1ZT4uXCIpO2NvbnN0IGk9ZVswXTtpZihcIj1cIiE9PWVbMV0pdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHNkcCBsaW5lLCA8dHlwZT4gc2hvdWxkIGJlIGEgc2luZ2xlIGNoYXJhY3RlciBmb2xsb3dlZCBieSBhbiBcIj1cIiBzaWduLicpO3JldHVybnt0eXBlOmksdmFsdWU6ZS5zbGljZSgyKSxsaW5lOnQsY3VyOjB9fXBhcnNlU2Vzc2lvbkF0dHJpYnV0ZSgpe2NvbnN0IGU9bmV3IHY7Zm9yKDt0aGlzLmN1cnJlbnRMaW5lPHRoaXMucmVjb3Jkcy5sZW5ndGg7KXtjb25zdCB0PXRoaXMuZ2V0Q3VycmVudFJlY29yZCgpO2lmKHQudHlwZSE9PXMuQVRUUklCVVRFKWJyZWFrO2NvbnN0IGk9e2F0dEZpZWxkOnRoaXMuZXh0cmFjdE9uZU9yTW9yZSh0LChlPT5sKGUpJiZcIjpcIiE9PWUpKSxfY3VyOjB9O1wiOlwiPT09dC52YWx1ZVt0LmN1cl0mJih0LmN1cis9MSxpLmF0dFZhbHVlPXRoaXMuZXh0cmFjdE9uZU9yTW9yZSh0LF8pKSxlLnBhcnNlKGkpLHRoaXMuY3VycmVudExpbmUrK31yZXR1cm4gZS5kaWdlc3QoKX1wYXJzZU1lZGlhQXR0cmlidXRlcyhlKXtjb25zdCB0PW5ldyB5KGUpO2Zvcig7dGhpcy5jdXJyZW50TGluZTx0aGlzLnJlY29yZHMubGVuZ3RoOyl7Y29uc3QgZT10aGlzLmdldEN1cnJlbnRSZWNvcmQoKTtpZihlLnR5cGUhPT1zLkFUVFJJQlVURSlicmVhaztjb25zdCBpPXthdHRGaWVsZDp0aGlzLmV4dHJhY3RPbmVPck1vcmUoZSwoZT0+bChlKSYmXCI6XCIhPT1lKSksX2N1cjowfTtcIjpcIj09PWUudmFsdWVbZS5jdXJdJiYoZS5jdXIrPTEsaS5hdHRWYWx1ZT10aGlzLmV4dHJhY3RPbmVPck1vcmUoZSxfKSksdC5wYXJzZShpKSx0aGlzLmN1cnJlbnRMaW5lKyt9cmV0dXJuIHQuZGlnZXN0KCl9cGFyc2VLZXkoKXtjb25zdCBlPXRoaXMuZ2V0Q3VycmVudFJlY29yZCgpO2lmKGUudHlwZT09PXMuS0VZKXtpZihcInByb21wdFwiPT09ZS52YWx1ZXx8XCJjbGVhcjpcIj09PWUudmFsdWV8fFwiYmFzZTY0OlwiPT09ZS52YWx1ZXx8XCJ1cmk6XCI9PT1lLnZhbHVlKXJldHVybiBlLnZhbHVlO3Rocm93IHRoaXMuY3VycmVudExpbmUrKyxuZXcgRXJyb3IoXCJJbnZhbGlkIGtleS5cIil9fXBhcnNlWm9uZSgpe2NvbnN0IGU9dGhpcy5nZXRDdXJyZW50UmVjb3JkKCk7aWYoZS50eXBlPT09cy5aT05FX0FESlVTVE1FTlRTKXtjb25zdCB0PVtdO2Zvcig7Oyl0cnl7Y29uc3QgaT10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUaW1lKTt0aGlzLmNvbnN1bWVTcGFjZUZvclJlY29yZChlKTtsZXQgbj0hMTtcIi1cIj09PWUudmFsdWVbZS5jdXJdJiYobj0hMCxlLmN1cis9MSk7Y29uc3Qgcj10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUeXBlZFRpbWUpO3QucHVzaCh7dGltZTppLHR5cGVkVGltZTpyLGJhY2s6bn0pfWNhdGNoKGUpe2JyZWFrfWlmKDA9PT10Lmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHpvbmUgYWRqdXN0bWVudHNcIik7cmV0dXJuIHRoaXMuY3VycmVudExpbmUrKyx0fXJldHVybltdfXBhcnNlUmVwZWF0KCl7Y29uc3QgZT1bXTtmb3IoOzspe2NvbnN0IHQ9dGhpcy5nZXRDdXJyZW50UmVjb3JkKCk7aWYodC50eXBlIT09cy5SRVBFQVQpYnJlYWs7e2NvbnN0IGk9dGhpcy5leHRyYWN0KHQsdGhpcy5jb25zdW1lUmVwZWF0SW50ZXJ2YWwpLG49dGhpcy5wYXJzZVR5cGVkVGltZSh0KTtlLnB1c2goe3JlcGVhdEludGVydmFsOmksdHlwZWRUaW1lczpufSksdGhpcy5jdXJyZW50TGluZSsrfX1yZXR1cm4gZX1wYXJzZVR5cGVkVGltZShlKXtjb25zdCB0PVtdO2Zvcig7Oyl0cnl7dGhpcy5jb25zdW1lU3BhY2VGb3JSZWNvcmQoZSksdC5wdXNoKHRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVR5cGVkVGltZSkpfWNhdGNoKGUpe2JyZWFrfWlmKDA9PT10Lmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHR5cGVkIHRpbWUuXCIpO3JldHVybiB0fXBhcnNlVGltZSgpe2NvbnN0IGU9dGhpcy5nZXRDdXJyZW50UmVjb3JkKCksdD10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUaW1lKTt0aGlzLmNvbnN1bWVTcGFjZUZvclJlY29yZChlKTtjb25zdCBpPXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRpbWUpO3JldHVybiB0aGlzLmN1cnJlbnRMaW5lKysse3N0YXJ0VGltZTp0LHN0b3BUaW1lOml9fXBhcnNlQmFuZFdpZHRoKCl7Y29uc3QgZT1bXTtmb3IoO3RoaXMuY3VycmVudExpbmU8dGhpcy5yZWNvcmRzLmxlbmd0aDspe2NvbnN0IHQ9dGhpcy5nZXRDdXJyZW50UmVjb3JkKCk7aWYodC50eXBlIT09cy5CQU5EV0lEVEgpYnJlYWs7e2NvbnN0IGk9dGhpcy5leHRyYWN0T25lT3JNb3JlKHQsbCk7aWYoXCI6XCIhPT10LnZhbHVlW3QuY3VyXSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGJhbmR3aWR0aCBmaWVsZC5cIik7dC5jdXIrKztjb25zdCBuPXRoaXMuZXh0cmFjdE9uZU9yTW9yZSh0LGEpO2UucHVzaCh7Ynd0eXBlOmksYmFuZHdpZHRoOm59KSx0aGlzLmN1cnJlbnRMaW5lKyt9fXJldHVybiBlfXBhcnNlVmVyc2lvbigpe2NvbnN0IGU9dGhpcy5nZXRDdXJyZW50UmVjb3JkKCk7aWYoZS50eXBlIT09cy5WRVJTSU9OKXRocm93IG5ldyBFcnJvcihcImZpcnN0IHNkcCByZWNvcmQgbXVzdCBiZSB2ZXJzaW9uXCIpO2NvbnN0IHQ9ZS52YWx1ZS5zbGljZSgwLHRoaXMuY29uc3VtZU9uZU9yTW9yZShlLnZhbHVlLDAsYSkpO2lmKHQubGVuZ3RoIT09ZS52YWx1ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHByb3RvIHZlcnNpb24sIFwidj0nLmNvbmNhdChlLnZhbHVlLCdcIicpKTtyZXR1cm4gdGhpcy5jdXJyZW50TGluZSsrLHR9cGFyc2VPcmlnaW4oKXtjb25zdCBlPXRoaXMuZ2V0Q3VycmVudFJlY29yZCgpO2lmKGUudHlwZSE9PXMuT1JJR0lOKXRocm93IG5ldyBFcnJvcihcInNlY29uZCBsaW5lIG9mIHNkcCBtdXN0IGJlIG9yaWdpblwiKTtjb25zdCB0PXRoaXMuZXh0cmFjdE9uZU9yTW9yZShlLGQpO3RoaXMuY29uc3VtZVNwYWNlRm9yUmVjb3JkKGUpO2NvbnN0IGk9dGhpcy5leHRyYWN0T25lT3JNb3JlKGUsYSk7dGhpcy5jb25zdW1lU3BhY2VGb3JSZWNvcmQoZSk7Y29uc3Qgbj10aGlzLmV4dHJhY3RPbmVPck1vcmUoZSxhKTt0aGlzLmNvbnN1bWVTcGFjZUZvclJlY29yZChlKTtjb25zdCByPXRoaXMuZXh0cmFjdE9uZU9yTW9yZShlLGwpO3RoaXMuY29uc3VtZVNwYWNlRm9yUmVjb3JkKGUpO2NvbnN0IG89dGhpcy5leHRyYWN0T25lT3JNb3JlKGUsbCk7dGhpcy5jb25zdW1lU3BhY2VGb3JSZWNvcmQoZSk7Y29uc3QgYz10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVVbmljYXN0QWRkcmVzcyk7cmV0dXJuIHRoaXMuY3VycmVudExpbmUrKyx7dXNlcm5hbWU6dCxzZXNzSWQ6aSxzZXNzVmVyc2lvbjpuLG5ldHR5cGU6cixhZGRydHlwZTpvLHVuaWNhc3RBZGRyZXNzOmN9fXBhcnNlU2Vzc2lvbk5hbWUoKXtjb25zdCBlPXRoaXMuZ2V0Q3VycmVudFJlY29yZCgpO2lmKGUudHlwZT09PXMuU0VTU0lPTl9OQU1FKXtjb25zdCB0PXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRleHQpO3JldHVybiB0aGlzLmN1cnJlbnRMaW5lKyssdH19cGFyc2VJbmZvcm1hdGlvbigpe2NvbnN0IGU9dGhpcy5nZXRDdXJyZW50UmVjb3JkKCk7aWYoZS50eXBlIT09cy5JTkZPUk1BVElPTilyZXR1cm47Y29uc3QgdD10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUZXh0KTtyZXR1cm4gdGhpcy5jdXJyZW50TGluZSsrLHR9cGFyc2VVcmkoKXtjb25zdCBlPXRoaXMuZ2V0Q3VycmVudFJlY29yZCgpO2lmKGUudHlwZT09PXMuVVJJKXJldHVybiB0aGlzLmN1cnJlbnRMaW5lKyssZS52YWx1ZX1wYXJzZUVtYWlsKCl7Y29uc3QgZT1bXTtmb3IoOzspe2NvbnN0IHQ9dGhpcy5nZXRDdXJyZW50UmVjb3JkKCk7aWYodC50eXBlIT09cy5FTUFJTClicmVhaztlLnB1c2godC52YWx1ZSksdGhpcy5jdXJyZW50TGluZSsrfXJldHVybiBlfXBhcnNlUGhvbmUoKXtjb25zdCBlPVtdO2Zvcig7Oyl7Y29uc3QgdD10aGlzLmdldEN1cnJlbnRSZWNvcmQoKTtpZih0LnR5cGUhPT1zLlBIT05FKWJyZWFrO2UucHVzaCh0LnZhbHVlKSx0aGlzLmN1cnJlbnRMaW5lKyt9cmV0dXJuIGV9cGFyc2VDb25uZWN0aW9uKCl7Y29uc3QgZT10aGlzLmdldEN1cnJlbnRSZWNvcmQoKTtpZihlLnR5cGU9PT1zLkNPTk5FQ1RJT04pe2NvbnN0IHQ9dGhpcy5leHRyYWN0T25lT3JNb3JlKGUsbCk7dGhpcy5jb25zdW1lU3BhY2VGb3JSZWNvcmQoZSk7Y29uc3QgaT10aGlzLmV4dHJhY3RPbmVPck1vcmUoZSxsKTt0aGlzLmNvbnN1bWVTcGFjZUZvclJlY29yZChlKTtjb25zdCBuPXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZUFkZHJlc3MpO3JldHVybiB0aGlzLmN1cnJlbnRMaW5lKysse25ldHR5cGU6dCxhZGRydHlwZTppLGFkZHJlc3M6bn19fXBhcnNlTWVkaWEoKXtjb25zdCBlPXRoaXMuZ2V0Q3VycmVudFJlY29yZCgpLHQ9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVG9rZW4pO3RoaXMuY29uc3VtZVNwYWNlRm9yUmVjb3JkKGUpO2xldCBpPXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVBvcnQpO1wiL1wiPT09ZS52YWx1ZVtlLmN1cl0mJihlLmN1cis9MSxpKz10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVJbnRlZ2VyKSksdGhpcy5jb25zdW1lU3BhY2VGb3JSZWNvcmQoZSk7Y29uc3Qgbj1bXTtmb3Iobi5wdXNoKHRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRva2VuKSk7XCIvXCI9PT1lLnZhbHVlW2UuY3VyXTspZS5jdXIrPTEsbi5wdXNoKHRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRva2VuKSk7aWYoMD09PW4ubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcHJvdG9cIik7Y29uc3Qgcj10aGlzLnBhcnNlRm10KGUpO3JldHVybiB0aGlzLmN1cnJlbnRMaW5lKysse21lZGlhVHlwZTp0LHBvcnQ6aSxwcm90b3M6bixmbXRzOnJ9fXBhcnNlVGltZUZpZWxkcygpe2NvbnN0IGU9W107Zm9yKDt0aGlzLmdldEN1cnJlbnRSZWNvcmQoKS50eXBlPT09cy5USU1FOyl7Y29uc3QgdD10aGlzLnBhcnNlVGltZSgpLGk9dGhpcy5wYXJzZVJlcGVhdCgpLG49dGhpcy5wYXJzZVpvbmUoKTtlLnB1c2goe3RpbWU6dCxyZXBlYXRzOmksem9uZXM6bn0pfXJldHVybiBlfXBhcnNlTWVkaWFEZXNjcmlwdGlvbigpe2NvbnN0IGU9W107Zm9yKDt0aGlzLmN1cnJlbnRMaW5lPHRoaXMucmVjb3Jkcy5sZW5ndGgmJnRoaXMuZ2V0Q3VycmVudFJlY29yZCgpLnR5cGU9PT1zLk1FRElBOyl7Y29uc3QgdD10aGlzLnBhcnNlTWVkaWEoKSxpPXRoaXMucGFyc2VJbmZvcm1hdGlvbigpLG49dGhpcy5wYXJzZUNvbm5lY3Rpb25zKCkscj10aGlzLnBhcnNlQmFuZFdpZHRoKCksbz10aGlzLnBhcnNlS2V5KCkscz10aGlzLnBhcnNlTWVkaWFBdHRyaWJ1dGVzKHQpO2UucHVzaCh7bWVkaWE6dCxpbmZvcm1hdGlvbjppLGNvbm5lY3Rpb25zOm4sYmFuZHdpZHRoczpyLGtleTpvLGF0dHJpYnV0ZXM6c30pfXJldHVybiBlfXBhcnNlQ29ubmVjdGlvbnMoKXtjb25zdCBlPVtdO2Zvcig7dGhpcy5jdXJyZW50TGluZTx0aGlzLnJlY29yZHMubGVuZ3RoJiZ0aGlzLmdldEN1cnJlbnRSZWNvcmQoKS50eXBlPT09cy5DT05ORUNUSU9OOyllLnB1c2godGhpcy5wYXJzZUNvbm5lY3Rpb24oKSk7cmV0dXJuIGV9cGFyc2VGbXQoZSl7Y29uc3QgdD1bXTtmb3IoOzspdHJ5e3RoaXMuY29uc3VtZVNwYWNlRm9yUmVjb3JkKGUpLHQucHVzaCh0aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUb2tlbikpfWNhdGNoKGUpe2JyZWFrfWlmKDA9PT10Lmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGZtdHNcIik7cmV0dXJuIHR9ZXh0cmFjdChlLHQpe2Zvcih2YXIgaT1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KGk+Mj9pLTI6MCkscj0yO3I8aTtyKyspbltyLTJdPWFyZ3VtZW50c1tyXTtjb25zdCBvPXQuY2FsbCh0aGlzLGUudmFsdWUsZS5jdXIsLi4ubikscz1lLnZhbHVlLnNsaWNlKGUuY3VyLG8pO3JldHVybiBlLmN1cj1vLHN9ZXh0cmFjdE9uZU9yTW9yZShlLHQpe2NvbnN0IGk9dGhpcy5jb25zdW1lT25lT3JNb3JlKGUudmFsdWUsZS5jdXIsdCksbj1lLnZhbHVlLnNsaWNlKGUuY3VyLGkpO3JldHVybiBlLmN1cj1pLG59Y29uc3VtZVNwYWNlRm9yUmVjb3JkKGUpe2lmKGUudmFsdWVbZS5jdXJdIT09byl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHNwYWNlIGF0IFwiLmNvbmNhdChlLmN1cixcIi5cIikpO2UuY3VyKz0xfX1jbGFzcyBJIGV4dGVuZHMgUntjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksZyh0aGlzLFwiYXR0cmlidXRlc1wiLHZvaWQgMCksZyh0aGlzLFwiZGlnZXN0ZWRcIiwhMSl9ZXh0cmFjdE9uZU9yTW9yZShlLHQsaSl7Y29uc3Qgbj10aGlzLmNvbnN1bWVPbmVPck1vcmUoZS5hdHRWYWx1ZSxlLl9jdXIsdCkscj1lLmF0dFZhbHVlLnNsaWNlKGUuX2N1cixuKSxbbyxzXT1pfHxbXTtpZihcIm51bWJlclwiPT10eXBlb2YgbyYmci5sZW5ndGg8byl0aHJvdyBuZXcgRXJyb3IoXCJlcnJvciBpbiBsZW5ndGgsIHNob3VsZCBiZSBtb3JlIG9yIGVxdWFsIHRoYW4gXCIuY29uY2F0KG8sXCIgY2hhcmFjdGVycy5cIikpO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBzJiZyLmxlbmd0aD5zKXRocm93IG5ldyBFcnJvcihcImVycm9yIGluIGxlbmd0aCwgc2hvdWxkIGJlIGxlc3Mgb3IgZXF1YWwgdGhhbiBcIi5jb25jYXQocyxcIiBjaGFyYWN0ZXJzLlwiKSk7cmV0dXJuIGUuX2N1cj1uLHJ9Y29uc3VtZUF0dHJpYnV0ZVNwYWNlKGUpe2lmKGUuYXR0VmFsdWVbZS5fY3VyXSE9PW8pdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBzcGFjZSBhdCBcIi5jb25jYXQoZS5fY3VyLFwiLlwiKSk7ZS5fY3VyKz0xfWV4dHJhY3QoZSx0KXtpZighZS5hdHRWYWx1ZSl0aHJvdyBuZXcgRXJyb3IoXCJOb3RoaW5nIHRvIGV4dHJhY3QgZnJvbSBhdHRWYWx1ZS5cIik7Zm9yKHZhciBpPWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkoaT4yP2ktMjowKSxyPTI7cjxpO3IrKyluW3ItMl09YXJndW1lbnRzW3JdO2NvbnN0IG89dC5jYWxsKHRoaXMsZS5hdHRWYWx1ZSxlLl9jdXIsLi4ubikscz1lLmF0dFZhbHVlLnNsaWNlKGUuX2N1cixvKTtyZXR1cm4gZS5fY3VyPW8sc31hdEVuZChlKXtpZighZS5hdHRWYWx1ZSl0aHJvdyBuZXcgRXJyb3I7cmV0dXJuIGUuX2N1cj49ZS5hdHRWYWx1ZS5sZW5ndGh9cGVla0NoYXIoZSl7aWYoIWUuYXR0VmFsdWUpdGhyb3cgbmV3IEVycm9yO3JldHVybiBlLmF0dFZhbHVlW2UuX2N1cl19cGVlayhlLHQpe2lmKCFlLmF0dFZhbHVlKXRocm93IG5ldyBFcnJvcjtmb3IobGV0IGk9MDtpPHQubGVuZ3RoO2krKylpZih0W2ldIT09ZS5hdHRWYWx1ZVtlLl9jdXIraV0pcmV0dXJuITE7cmV0dXJuITB9cGFyc2VJY2VVZnJhZyhlKXtpZih0aGlzLmF0dHJpYnV0ZXMuaWNlVWZyYWcpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBpY2UtdWZyYWcsIHNob3VsZCBiZSBvbmx5IGEgc2luZ2xlIGxpbmUgaWYgJ2E9aWNlLXVmcmFnJ1wiKTt0aGlzLmF0dHJpYnV0ZXMuaWNlVWZyYWc9dGhpcy5leHRyYWN0T25lT3JNb3JlKGUsRSxbNCwyNTZdKX1wYXJzZUljZVB3ZChlKXtpZih0aGlzLmF0dHJpYnV0ZXMuaWNlUHdkKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgaWNlLXB3ZCwgc2hvdWxkIGJlIG9ubHkgYSBzaW5nbGUgbGluZSBpZiAnYT1pY2UtcHdkJ1wiKTt0aGlzLmF0dHJpYnV0ZXMuaWNlUHdkPXRoaXMuZXh0cmFjdE9uZU9yTW9yZShlLEUsWzIyLDI1Nl0pfXBhcnNlSWNlT3B0aW9ucyhlKXtpZih0aGlzLmF0dHJpYnV0ZXMuaWNlT3B0aW9ucyl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGljZS1vcHRpb25zLCBzaG91bGQgYmUgb25seSBvbmUgJ2ljZS1vcHRpb25zJyBsaW5lXCIpO2NvbnN0IHQ9W107Zm9yKDshdGhpcy5hdEVuZChlKTspe3QucHVzaCh0aGlzLmV4dHJhY3RPbmVPck1vcmUoZSxFKSk7dHJ5e3RoaXMuY29uc3VtZUF0dHJpYnV0ZVNwYWNlKGUpfWNhdGNoKHQpe2lmKHRoaXMuYXRFbmQoZSkpYnJlYWs7dGhyb3cgdH19dGhpcy5hdHRyaWJ1dGVzLmljZU9wdGlvbnM9dH1wYXJzZUZpbmdlcnByaW50KGUpe2NvbnN0IHQ9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVG9rZW4pO3RoaXMuY29uc3VtZUF0dHJpYnV0ZVNwYWNlKGUpO2NvbnN0IGk9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVGlsbCk7dGhpcy5hdHRyaWJ1dGVzLmZpbmdlcnByaW50cy5wdXNoKHtoYXNoRnVuY3Rpb246dCxmaW5nZXJwcmludDppfSl9cGFyc2VFeHRtYXAoZSl7Y29uc3QgdD10aGlzLmV4dHJhY3RPbmVPck1vcmUoZSxhKTtsZXQgaTtcIi9cIj09PXRoaXMucGVla0NoYXIoZSkmJih0aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWUsXCIvXCIpLGk9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVG9rZW4pKSx0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKTtjb25zdCBuPXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRpbGwsbykscj1TKFMoe2VudHJ5OnBhcnNlSW50KHQsMTApfSxpJiZ7ZGlyZWN0aW9uOml9KSx7fSx7ZXh0ZW5zaW9uTmFtZTpufSk7dGhpcy5wZWVrQ2hhcihlKT09PW8mJih0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKSxyLmV4dGVuc2lvbkF0dHJpYnV0ZXM9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVGlsbCkpLHRoaXMuYXR0cmlidXRlcy5leHRtYXBzLnB1c2gocil9cGFyc2VTZXR1cChlKXtpZih0aGlzLmF0dHJpYnV0ZXMuc2V0dXApdGhyb3cgbmV3IEVycm9yKFwibXVzdCBvbmx5IGJlIG9uZSBzaW5nbGUgJ2E9c2V0dXAnIGxpbmUuXCIpO2NvbnN0IHQ9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVGlsbCk7aWYoXCJhY3RpdmVcIiE9PXQmJlwicGFzc2l2ZVwiIT09dCYmXCJhY3RwYXNzXCIhPT10JiZcImhvbGRjb25uXCIhPT10KXRocm93IG5ldyBFcnJvcihcInJvbGUgbXVzdCBiZSBvbmUgb2YgJ2FjdGl2ZScsICdwYXNzaXZlJywgJ2FjdHBhc3MnLCAnaG9sZGNvbm4nLlwiKTt0aGlzLmF0dHJpYnV0ZXMuc2V0dXA9dH19Y2xhc3MgdiBleHRlbmRzIEl7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLGcodGhpcyxcImF0dHJpYnV0ZXNcIix7dW5yZWNvZ25pemVkOltdLGdyb3VwczpbXSxleHRtYXBzOltdLGZpbmdlcnByaW50czpbXSxpZGVudGl0aWVzOltdfSl9cGFyc2UoZSl7aWYodGhpcy5kaWdlc3RlZCl0aHJvdyBuZXcgRXJyb3IoXCJhbHJlYWR5IGRpZ2VzdGVkXCIpO3RyeXtzd2l0Y2goZS5hdHRGaWVsZCl7Y2FzZVwiZ3JvdXBcIjp0aGlzLnBhcnNlR3JvdXAoZSk7YnJlYWs7Y2FzZVwiaWNlLWxpdGVcIjp0aGlzLnBhcnNlSWNlTGl0ZSgpO2JyZWFrO2Nhc2VcImljZS11ZnJhZ1wiOnRoaXMucGFyc2VJY2VVZnJhZyhlKTticmVhaztjYXNlXCJpY2UtcHdkXCI6dGhpcy5wYXJzZUljZVB3ZChlKTticmVhaztjYXNlXCJpY2Utb3B0aW9uc1wiOnRoaXMucGFyc2VJY2VPcHRpb25zKGUpO2JyZWFrO2Nhc2VcImZpbmdlcnByaW50XCI6dGhpcy5wYXJzZUZpbmdlcnByaW50KGUpO2JyZWFrO2Nhc2VcInNldHVwXCI6dGhpcy5wYXJzZVNldHVwKGUpO2JyZWFrO2Nhc2VcInRscy1pZFwiOnRoaXMucGFyc2VUbHNJZChlKTticmVhaztjYXNlXCJpZGVudGl0eVwiOnRoaXMucGFyc2VJZGVudGl0eShlKTticmVhaztjYXNlXCJleHRtYXBcIjp0aGlzLnBhcnNlRXh0bWFwKGUpO2JyZWFrO2Nhc2VcIm1zaWQtc2VtYW50aWNcIjp0aGlzLnBhcnNlTXNpZFNlbWFudGljKGUpO2JyZWFrO2RlZmF1bHQ6ZS5pZ25vcmVkPSEwLHRoaXMuYXR0cmlidXRlcy51bnJlY29nbml6ZWQucHVzaChlKX19Y2F0Y2godCl7dGhyb3cgY29uc29sZS5lcnJvcihcInBhcnNpbmcgc2Vzc2lvbiBhdHRyaWJ1dGUgXCIuY29uY2F0KGUuYXR0RmllbGQsJyBlcnJvciwgXCJhPScpLmNvbmNhdChlLmF0dEZpZWxkLFwiOlwiKS5jb25jYXQoZS5hdHRWYWx1ZSwnXCInKSksdH1pZighZS5pZ25vcmVkJiZlLmF0dFZhbHVlJiYhdGhpcy5hdEVuZChlKSl0aHJvdyBuZXcgRXJyb3IoXCJhdHRyaWJ1dGUgcGFyc2luZyBlcnJvclwiKX1kaWdlc3QoKXtyZXR1cm4gdGhpcy5kaWdlc3RlZD0hMCx0aGlzLmF0dHJpYnV0ZXN9cGFyc2VHcm91cChlKXtjb25zdCB0PXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRva2VuKSxpPVtdO2Zvcig7IXRoaXMuYXRFbmQoZSkmJnRoaXMucGVla0NoYXIoZSk9PT1vOyl0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKSxpLnB1c2godGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVG9rZW4pKTt0aGlzLmF0dHJpYnV0ZXMuZ3JvdXBzLnB1c2goe3NlbWFudGljOnQsaWRlbnRpZmljYXRpb25UYWc6aX0pfXBhcnNlSWNlTGl0ZSgpe2lmKHRoaXMuYXR0cmlidXRlcy5pY2VMaXRlKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgaWNlLWxpdGUsIHNob3VsZCBiZSBvbmx5IGEgc2luZ2xlIGxpbmUgb2YgJ2E9aWNlLWxpdGUnXCIpO3RoaXMuYXR0cmlidXRlcy5pY2VMaXRlPSEwfXBhcnNlVGxzSWQoZSl7aWYodGhpcy5hdHRyaWJ1dGVzLnRsc0lkKXRocm93IG5ldyBFcnJvcihcIm11c3QgYmUgb25seSBvbmUgdGxkLWlkIGxpbmVcIik7dGhpcy5hdHRyaWJ1dGVzLnRsc0lkPXRoaXMuZXh0cmFjdE9uZU9yTW9yZShlLGYpfXBhcnNlSWRlbnRpdHkoZSl7Y29uc3QgdD10aGlzLmV4dHJhY3RPbmVPck1vcmUoZSxtKSxpPVtdO2Zvcig7IXRoaXMuYXRFbmQoZSkmJnRoaXMucGVla0NoYXIoZSk9PT1vOyl7dGhpcy5jb25zdW1lQXR0cmlidXRlU3BhY2UoZSk7Y29uc3QgdD10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUb2tlbik7dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lLFwiPVwiKTtjb25zdCBuPXRoaXMuZXh0cmFjdE9uZU9yTW9yZShlLChlPT5lIT09byYmXyhlKSkpO2kucHVzaCh7bmFtZTp0LHZhbHVlOm59KX10aGlzLmF0dHJpYnV0ZXMuaWRlbnRpdGllcy5wdXNoKHthc3NlcnRpb25WYWx1ZTp0LGV4dGVuc2lvbnM6aX0pfXBhcnNlTXNpZFNlbWFudGljKGUpe3RoaXMucGVla0NoYXIoZSk9PT1vJiZ0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKTtjb25zdCB0PXtzZW1hbnRpYzp0aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUb2tlbiksaWRlbnRpZmllckxpc3Q6W119O2Zvcig7Oyl7dHJ5e3RoaXMuY29uc3VtZUF0dHJpYnV0ZVNwYWNlKGUpfWNhdGNoKGUpe2JyZWFrfWlmKFwiKlwiPT09dGhpcy5wZWVrQ2hhcihlKSl7dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lLFwiKlwiKSx0LmFwcGx5Rm9yQWxsPSEwO2JyZWFrfXtjb25zdCBpPXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRpbGwsbyk7dC5pZGVudGlmaWVyTGlzdC5wdXNoKGkpfX10aGlzLmF0dHJpYnV0ZXMubXNpZFNlbWFudGljPXR9fWNsYXNzIHkgZXh0ZW5kcyBJe2NvbnN0cnVjdG9yKGUpe3N1cGVyKCksZyh0aGlzLFwiYXR0cmlidXRlc1wiLHZvaWQgMCksLTEhPT1lLnByb3Rvcy5pbmRleE9mKFwiUlRQXCIpfHxlLnByb3Rvcy5pbmRleE9mKFwicnRwXCIpLHRoaXMuYXR0cmlidXRlcz17dW5yZWNvZ25pemVkOltdLGNhbmRpZGF0ZXM6W10sZXh0bWFwczpbXSxmaW5nZXJwcmludHM6W10saW1hZ2VhdHRyOltdLG1zaWRzOltdLHJlbW90ZUNhbmRpZGF0ZXNMaXN0OltdLHJpZHM6W10sc3NyY3M6W10sc3NyY0dyb3VwczpbXSxydGNwRmVlZGJhY2tXaWxkY2FyZHM6W10scGF5bG9hZHM6W119fXBhcnNlKGUpe2lmKHRoaXMuZGlnZXN0ZWQpdGhyb3cgbmV3IEVycm9yKFwiYWxyZWFkeSBkaWdlc3RlZFwiKTt0cnl7c3dpdGNoKGUuYXR0RmllbGQpe2Nhc2VcImV4dG1hcFwiOnRoaXMucGFyc2VFeHRtYXAoZSk7YnJlYWs7Y2FzZVwic2V0dXBcIjp0aGlzLnBhcnNlU2V0dXAoZSk7YnJlYWs7Y2FzZVwiaWNlLXVmcmFnXCI6dGhpcy5wYXJzZUljZVVmcmFnKGUpO2JyZWFrO2Nhc2VcImljZS1wd2RcIjp0aGlzLnBhcnNlSWNlUHdkKGUpO2JyZWFrO2Nhc2VcImljZS1vcHRpb25zXCI6dGhpcy5wYXJzZUljZU9wdGlvbnMoZSk7YnJlYWs7Y2FzZVwiY2FuZGlkYXRlXCI6dGhpcy5wYXJzZUNhbmRpZGF0ZShlKTticmVhaztjYXNlXCJyZW1vdGUtY2FuZGlkYXRlXCI6dGhpcy5wYXJzZVJlbW90ZUNhbmRpZGF0ZShlKTticmVhaztjYXNlXCJlbmQtb2YtY2FuZGlkYXRlc1wiOnRoaXMucGFyc2VFbmRPZkNhbmRpZGF0ZXMoKTticmVhaztjYXNlXCJmaW5nZXJwcmludFwiOnRoaXMucGFyc2VGaW5nZXJwcmludChlKTticmVhaztjYXNlXCJydHBtYXBcIjp0aGlzLnBhcnNlUnRwbWFwKGUpO2JyZWFrO2Nhc2VcInB0aW1lXCI6dGhpcy5wYXJzZVB0aW1lKGUpO2JyZWFrO2Nhc2VcIm1heHB0aW1lXCI6dGhpcy5wYXJzZU1heFB0aW1lKGUpO2JyZWFrO2Nhc2VcInNlbmRyZWN2XCI6Y2FzZVwicmVjdm9ubHlcIjpjYXNlXCJzZW5kb25seVwiOmNhc2VcImluYWN0aXZlXCI6dGhpcy5wYXJzZURpcmVjdGlvbihlKTticmVhaztjYXNlXCJzc3JjXCI6dGhpcy5wYXJzZVNTUkMoZSk7YnJlYWs7Y2FzZVwiZm10cFwiOnRoaXMucGFyc2VGbXRwKGUpO2JyZWFrO2Nhc2VcInJ0Y3AtZmJcIjp0aGlzLnBhcnNlUnRjcEZiKGUpO2JyZWFrO2Nhc2VcInJ0Y3AtbXV4XCI6dGhpcy5wYXJzZVJUQ1BNdXgoKTticmVhaztjYXNlXCJydGNwLW11eC1vbmx5XCI6dGhpcy5wYXJzZVJUQ1BNdXhPbmx5KCk7YnJlYWs7Y2FzZVwicnRjcC1yc2l6ZVwiOnRoaXMucGFyc2VSVENQUnNpemUoKTticmVhaztjYXNlXCJydGNwXCI6dGhpcy5wYXJzZVJUQ1AoZSk7YnJlYWs7Y2FzZVwibWlkXCI6dGhpcy5wYXJzZU1pZChlKTticmVhaztjYXNlXCJtc2lkXCI6dGhpcy5wYXJzZU1zaWQoZSk7YnJlYWs7Y2FzZVwiaW1hZ2VhdHRyXCI6dGhpcy5wYXJzZUltYWdlQXR0cihlKTticmVhaztjYXNlXCJyaWRcIjp0aGlzLnBhcnNlUmlkKGUpO2JyZWFrO2Nhc2VcInNpbXVsY2FzdFwiOnRoaXMucGFyc2VTaW11bGNhc3QoZSk7YnJlYWs7Y2FzZVwic2N0cC1wb3J0XCI6dGhpcy5wYXJzZVNjdHBQb3J0KGUpO2JyZWFrO2Nhc2VcIm1heC1tZXNzYWdlLXNpemVcIjp0aGlzLnBhcnNlTWF4TWVzc2FnZVNpemUoZSk7YnJlYWs7Y2FzZVwic3NyYy1ncm91cFwiOnRoaXMucGFyc2VTU1JDR3JvdXAoZSk7YnJlYWs7ZGVmYXVsdDplLmlnbm9yZWQ9ITAsdGhpcy5hdHRyaWJ1dGVzLnVucmVjb2duaXplZC5wdXNoKGUpfX1jYXRjaCh0KXt0aHJvdyBjb25zb2xlLmVycm9yKFwicGFyc2luZyBtZWRpYSBhdHRyaWJ1dGUgXCIuY29uY2F0KGUuYXR0RmllbGQsJyBlcnJvciwgXCJhPScpLmNvbmNhdChlLmF0dEZpZWxkLFwiOlwiKS5jb25jYXQoZS5hdHRWYWx1ZSwnXCInKSksdH1pZighZS5pZ25vcmVkJiZlLmF0dFZhbHVlJiYhdGhpcy5hdEVuZChlKSl0aHJvdyBuZXcgRXJyb3IoXCJhdHRyaWJ1dGUgcGFyc2luZyBlcnJvclwiKX1wYXJzZUNhbmRpZGF0ZShlKXtjb25zdCB0PXRoaXMuZXh0cmFjdE9uZU9yTW9yZShlLEUsWzEsMzJdKTt0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKTtjb25zdCBpPXRoaXMuZXh0cmFjdE9uZU9yTW9yZShlLGEsWzEsNV0pO3RoaXMuY29uc3VtZUF0dHJpYnV0ZVNwYWNlKGUpO2NvbnN0IG49dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVG9rZW4pO3RoaXMuY29uc3VtZUF0dHJpYnV0ZVNwYWNlKGUpO2NvbnN0IHI9dGhpcy5leHRyYWN0T25lT3JNb3JlKGUsYSxbMSwxMF0pO3RoaXMuY29uc3VtZUF0dHJpYnV0ZVNwYWNlKGUpO2NvbnN0IHM9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lQWRkcmVzcyk7dGhpcy5jb25zdW1lQXR0cmlidXRlU3BhY2UoZSk7Y29uc3QgZD10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVQb3J0KTt0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKSx0aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWUsXCJ0eXBcIiksdGhpcy5jb25zdW1lQXR0cmlidXRlU3BhY2UoZSk7Y29uc3QgbD17Zm91bmRhdGlvbjp0LGNvbXBvbmVudElkOmksdHJhbnNwb3J0Om4scHJpb3JpdHk6cixjb25uZWN0aW9uQWRkcmVzczpzLHBvcnQ6ZCx0eXBlOnRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRva2VuKSxleHRlbnNpb246e319O2Zvcih0aGlzLnBlZWsoZSxcIiByYWRkclwiKSYmKHRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZSxcIiByYWRkclwiKSx0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKSxsLnJlbEFkZHI9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lQWRkcmVzcykpLHRoaXMucGVlayhlLFwiIHJwb3J0XCIpJiYodGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lLFwiIHJwb3J0XCIpLHRoaXMuY29uc3VtZUF0dHJpYnV0ZVNwYWNlKGUpLGwucmVsUG9ydD10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVQb3J0KSk7dGhpcy5wZWVrQ2hhcihlKT09PW87KXt0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKTtjb25zdCB0PXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRva2VuKTt0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKSxsLmV4dGVuc2lvblt0XT10aGlzLmV4dHJhY3RPbmVPck1vcmUoZSxjKX10aGlzLmF0dHJpYnV0ZXMuY2FuZGlkYXRlcy5wdXNoKGwpfXBhcnNlUmVtb3RlQ2FuZGlkYXRlKGUpe2NvbnN0IHQ9W107Zm9yKDs7KXtjb25zdCBpPXRoaXMuZXh0cmFjdE9uZU9yTW9yZShlLGEsWzEsNV0pO3RoaXMuY29uc3VtZUF0dHJpYnV0ZVNwYWNlKGUpO2NvbnN0IG49dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lQWRkcmVzcyk7dGhpcy5jb25zdW1lQXR0cmlidXRlU3BhY2UoZSk7Y29uc3Qgcj10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVQb3J0KTt0LnB1c2goe2NvbXBvbmVudElkOmksY29ubmVjdGlvbkFkZHJlc3M6bixwb3J0OnJ9KTt0cnl7dGhpcy5jb25zdW1lQXR0cmlidXRlU3BhY2UoZSl9Y2F0Y2goZSl7YnJlYWt9fXRoaXMuYXR0cmlidXRlcy5yZW1vdGVDYW5kaWRhdGVzTGlzdC5wdXNoKHQpfXBhcnNlRW5kT2ZDYW5kaWRhdGVzKCl7aWYodGhpcy5hdHRyaWJ1dGVzLmVuZE9mQ2FuZGlkYXRlcyl0aHJvdyBuZXcgRXJyb3IoXCJtdXN0IGJlIG9ubHkgb25lIGxpbmUgb2YgZW5kLW9mLWNhbmRpZGF0ZXNcIik7dGhpcy5hdHRyaWJ1dGVzLmVuZE9mQ2FuZGlkYXRlcz0hMH1wYXJzZVJ0cG1hcChlKXtjb25zdCB0PXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRva2VuKTt0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKTtjb25zdCBpPXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRpbGwsXCIvXCIpO3RoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZSxcIi9cIik7Y29uc3Qgbj17ZW5jb2RpbmdOYW1lOmksY2xvY2tSYXRlOnRoaXMuZXh0cmFjdE9uZU9yTW9yZShlLGEpfTt0aGlzLmF0RW5kKGUpfHxcIi9cIiE9PXRoaXMucGVla0NoYXIoZSl8fCh0aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWUsXCIvXCIpLG4uZW5jb2RpbmdQYXJhbWV0ZXJzPXBhcnNlSW50KHRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRpbGwpLDEwKSk7Y29uc3Qgcj10aGlzLmF0dHJpYnV0ZXMucGF5bG9hZHMuZmluZCgoZT0+ZS5wYXlsb2FkVHlwZT09PXBhcnNlSW50KHQsMTApKSk7cj9yLnJ0cE1hcD1uOnRoaXMuYXR0cmlidXRlcy5wYXlsb2Fkcy5wdXNoKHtwYXlsb2FkVHlwZTpwYXJzZUludCh0LDEwKSxydHBNYXA6bixydGNwRmVlZGJhY2tzOltdfSl9cGFyc2VQdGltZShlKXtpZih0aGlzLmF0dHJpYnV0ZXMucHRpbWUpdGhyb3cgbmV3IEVycm9yKFwibXVzdCBiZSBvbmx5IG9uZSBsaW5lIG9mIHB0aW1lXCIpO3RoaXMuYXR0cmlidXRlcy5wdGltZT10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUaWxsKX1wYXJzZU1heFB0aW1lKGUpe2lmKHRoaXMuYXR0cmlidXRlcy5tYXhQdGltZSl0aHJvdyBuZXcgRXJyb3IoXCJtdXN0IGJlIG9ubHkgb25lIGxpbmUgb2YgcHRpbWVcIik7dGhpcy5hdHRyaWJ1dGVzLm1heFB0aW1lPXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRpbGwpfXBhcnNlRGlyZWN0aW9uKGUpe2lmKHRoaXMuYXR0cmlidXRlcy5kaXJlY3Rpb24pdGhyb3cgbmV3IEVycm9yKFwibXVzdCBiZSBvbmx5IG9uZSBsaW5lIG9mIGRpcmVjdGlvbiBpbmZvXCIpO3RoaXMuYXR0cmlidXRlcy5kaXJlY3Rpb249ZS5hdHRGaWVsZH1wYXJzZVNTUkMoZSl7Y29uc3QgdD10aGlzLmV4dHJhY3RPbmVPck1vcmUoZSxhKTt0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKTtjb25zdCBpPXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRpbGwsXCI6XCIpO2xldCBuO1wiOlwiPT09dGhpcy5wZWVrQ2hhcihlKSYmKHRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZSxcIjpcIiksbj10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUaWxsKSk7Y29uc3Qgcj10aGlzLmF0dHJpYnV0ZXMuc3NyY3MuZmluZCgoZT0+ZS5zc3JjSWQ9PT1wYXJzZUludCh0LDEwKSkpO3I/ci5hdHRyaWJ1dGVzW2ldPW46dGhpcy5hdHRyaWJ1dGVzLnNzcmNzLnB1c2goe3NzcmNJZDpwYXJzZUludCh0LDEwKSxhdHRyaWJ1dGVzOntbaV06bn19KX1wYXJzZUZtdHAoZSl7Y29uc3QgdD10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUaWxsLG8pO3RoaXMuY29uc3VtZUF0dHJpYnV0ZVNwYWNlKGUpO2NvbnN0IGk9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVGlsbCksbj17fTtpLnNwbGl0KFwiO1wiKS5mb3JFYWNoKChlPT57bGV0W3QsaV09ZS5zcGxpdChcIj1cIik7dD1qcCh0KS5jYWxsKHQpO2NvbnN0IHI9XCJzdHJpbmdcIj09dHlwZW9mIGk/anAoaSkuY2FsbChpKTpudWxsO1wic3RyaW5nXCI9PXR5cGVvZiB0JiZ0Lmxlbmd0aD4wJiYoblt0XT1yKX0pKTtjb25zdCByPXRoaXMuYXR0cmlidXRlcy5wYXlsb2Fkcy5maW5kKChlPT5lLnBheWxvYWRUeXBlPT09cGFyc2VJbnQodCwxMCkpKTtyP3IuZm10cD17cGFyYW1ldGVyczpufTp0aGlzLmF0dHJpYnV0ZXMucGF5bG9hZHMucHVzaCh7cGF5bG9hZFR5cGU6cGFyc2VJbnQodCwxMCkscnRjcEZlZWRiYWNrczpbXSxmbXRwOntwYXJhbWV0ZXJzOm59fSl9cGFyc2VGbXRQYXJhbWV0ZXJzKGUpe2NvbnN0IHQ9e30saT10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUaWxsLFwiPVwiKTtlLl9jdXIrKztjb25zdCBuPXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRpbGwsXCI7XCIpO2Zvcih0W2ldPW47XCI7XCI9PT1lLmF0dFZhbHVlW2UuX2N1cl07KXtjb25zdCBpPXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRpbGwsXCI9XCIpO2UuX2N1cisrO2NvbnN0IG49dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVGlsbCxcIjtcIik7dFtpXT1ufXJldHVybiB0fXBhcnNlUnRjcEZiKGUpe2xldCB0PVwiXCI7dD1cIipcIj09PXRoaXMucGVla0NoYXIoZSk/dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lLFwiKlwiKTp0aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUaWxsLG8pLHRoaXMuY29uc3VtZUF0dHJpYnV0ZVNwYWNlKGUpO2NvbnN0IGk9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVGlsbCxvKTtsZXQgbjtpZihcInRyci1pbnRcIj09PWkpbj17dHlwZTppLGludGVydmFsOnRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRpbGwpfTtlbHNle2NvbnN0IHQ9e3R5cGU6aX07dGhpcy5wZWVrQ2hhcihlKT09PW8mJih0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKSx0LnBhcmFtZXRlcj10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUb2tlbiksdGhpcy5wZWVrQ2hhcihlKT09PW8mJih0LmFkZGl0aW9uYWw9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVGlsbCkpKSxuPXR9aWYoXCIqXCI9PT10KXRoaXMuYXR0cmlidXRlcy5ydGNwRmVlZGJhY2tXaWxkY2FyZHMucHVzaChuKTtlbHNle2NvbnN0IGU9dGhpcy5hdHRyaWJ1dGVzLnBheWxvYWRzLmZpbmQoKGU9PmUucGF5bG9hZFR5cGU9PT1wYXJzZUludCh0LDEwKSkpO2U/ZS5ydGNwRmVlZGJhY2tzLnB1c2gobik6dGhpcy5hdHRyaWJ1dGVzLnBheWxvYWRzLnB1c2goe3BheWxvYWRUeXBlOnBhcnNlSW50KHQsMTApLHJ0Y3BGZWVkYmFja3M6W25dfSl9fXBhcnNlUlRDUE11eCgpe2lmKHRoaXMuYXR0cmlidXRlcy5ydGNwTXV4KXRocm93IG5ldyBFcnJvcihcIm11c3QgYmUgc2luZ2xlIGxpbmUgb2YgcnRjcC1tdXhcIik7dGhpcy5hdHRyaWJ1dGVzLnJ0Y3BNdXg9ITB9cGFyc2VSVENQTXV4T25seSgpe2lmKHRoaXMuYXR0cmlidXRlcy5ydGNwTXV4T25seSl0aHJvdyBuZXcgRXJyb3IoXCJtdXN0IGJlIHNpbmdsZSBsaW5lIG9mIHJ0Y3Atb25seVwiKTt0aGlzLmF0dHJpYnV0ZXMucnRjcE11eE9ubHk9ITB9cGFyc2VSVENQUnNpemUoKXtpZih0aGlzLmF0dHJpYnV0ZXMucnRjcFJzaXplKXRocm93IG5ldyBFcnJvcihcIm11c3QgYmUgc2luZ2xlIGxpbmUgb2YgcnRjcC1yc2l6ZVwiKTt0aGlzLmF0dHJpYnV0ZXMucnRjcFJzaXplPSEwfXBhcnNlUlRDUChlKXtpZih0aGlzLmF0dHJpYnV0ZXMucnRjcCl0aHJvdyBuZXcgRXJyb3IoXCJtdXN0IGJlIHNpbmdsZSBsaW5lIG9mIHJ0Y3BcIik7Y29uc3QgdD17cG9ydDp0aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVQb3J0KX07dGhpcy5wZWVrQ2hhcihlKT09PW8mJih0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKSx0Lm5ldFR5cGU9dGhpcy5leHRyYWN0T25lT3JNb3JlKGUsbCksdGhpcy5jb25zdW1lQXR0cmlidXRlU3BhY2UoZSksdC5hZGRyZXNzVHlwZT10aGlzLmV4dHJhY3RPbmVPck1vcmUoZSxsKSx0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKSx0LmFkZHJlc3M9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lQWRkcmVzcykpLHRoaXMuYXR0cmlidXRlcy5ydGNwPXR9cGFyc2VNc2lkKGUpe2NvbnN0IHQ9e2lkOnRoaXMuZXh0cmFjdE9uZU9yTW9yZShlLGwsWzEsNjRdKX07dGhpcy5wZWVrQ2hhcihlKT09PW8mJih0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKSx0LmFwcGRhdGE9dGhpcy5leHRyYWN0T25lT3JNb3JlKGUsbCxbMSw2NF0pKSx0aGlzLmF0dHJpYnV0ZXMubXNpZHMucHVzaCh0KX1wYXJzZUltYWdlQXR0cihlKXt0aGlzLmF0dHJpYnV0ZXMuaW1hZ2VhdHRyLnB1c2goZS5hdHRWYWx1ZSl9cGFyc2VSaWQoZSl7Y29uc3QgdD10aGlzLmV4dHJhY3RPbmVPck1vcmUoZSwoZT0+aChlKXx8YShlKXx8XCJfXCI9PT1lfHxcIi1cIj09PWUpKTt0aGlzLmNvbnN1bWVBdHRyaWJ1dGVTcGFjZShlKTtjb25zdCBpPXtpZDp0LGRpcmVjdGlvbjp0aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUb2tlbikscGFyYW1zOltdfTtpZih0aGlzLnBlZWtDaGFyKGUpPT09byl7aWYodGhpcy5jb25zdW1lQXR0cmlidXRlU3BhY2UoZSksdGhpcy5wZWVrKGUsXCJwdD1cIikpe3RoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZSxcInB0PVwiKTtjb25zdCB0PVtdO2Zvcig7Oyl7Y29uc3QgaT10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUb2tlbik7dC5wdXNoKGkpO3RyeXt0aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWUsXCIsXCIpfWNhdGNoKGUpe2JyZWFrfX1pLnBheWxvYWRzPXQsdGhpcy5wZWVrQ2hhcihlKT09PW8mJnRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZSxvKX1mb3IoOzspe2NvbnN0IHQ9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVG9rZW4pO3N3aXRjaCh0KXtjYXNlXCJkZXBlbmRcIjp7Y29uc3Qgbj17dHlwZTp0LHJpZHM6dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lLFwiPVwiKS5zcGxpdChcIixcIil9O2kucGFyYW1zLnB1c2gobik7YnJlYWt9ZGVmYXVsdDp7Y29uc3Qgbj17dHlwZTp0fTtcIj1cIj09PXRoaXMucGVla0NoYXIoZSkmJih0aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWUsXCI9XCIpLG4udmFsPXRoaXMuZXh0cmFjdChlLHRoaXMuY29uc3VtZVRpbGwsXCI7XCIpKSxpLnBhcmFtcy5wdXNoKG4pfX10cnl7dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lLFwiO1wiKX1jYXRjaChlKXticmVha319fXRoaXMuYXR0cmlidXRlcy5yaWRzLnB1c2goaSl9cGFyc2VTaW11bGNhc3QoZSl7aWYodGhpcy5hdHRyaWJ1dGVzLnNpbXVsY2FzdCl0aHJvdyBuZXcgRXJyb3IoXCJtdXN0IGJlIHNpbmdsZSBsaW5lIG9mIHNpbXVsY2FzdFwiKTt0aGlzLmF0dHJpYnV0ZXMuc2ltdWxjYXN0PWUuYXR0VmFsdWUsdGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lVGlsbCl9cGFyc2VTY3RwUG9ydChlKXt0aGlzLmF0dHJpYnV0ZXMuc2N0cFBvcnQ9dGhpcy5leHRyYWN0T25lT3JNb3JlKGUsYSxbMSw1XSl9cGFyc2VNYXhNZXNzYWdlU2l6ZShlKXt0aGlzLmF0dHJpYnV0ZXMubWF4TWVzc2FnZVNpemU9dGhpcy5leHRyYWN0T25lT3JNb3JlKGUsYSxbMSx2b2lkIDBdKX1kaWdlc3QoKXtyZXR1cm4gdGhpcy5kaWdlc3RlZD0hMCx0aGlzLmF0dHJpYnV0ZXN9cGFyc2VNaWQoZSl7dGhpcy5hdHRyaWJ1dGVzLm1pZD10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUb2tlbil9cGFyc2VTU1JDR3JvdXAoZSl7Y29uc3QgdD10aGlzLmV4dHJhY3QoZSx0aGlzLmNvbnN1bWVUb2tlbiksaT1bXTtmb3IoOzspdHJ5e3RoaXMuY29uc3VtZUF0dHJpYnV0ZVNwYWNlKGUpO2NvbnN0IHQ9dGhpcy5leHRyYWN0KGUsdGhpcy5jb25zdW1lSW50ZWdlcik7aS5wdXNoKHBhcnNlSW50KHQsMTApKX1jYXRjaChlKXticmVha310aGlzLmF0dHJpYnV0ZXMuc3NyY0dyb3Vwcy5wdXNoKHtzZW1hbnRpYzp0LHNzcmNJZHM6aX0pfX1mdW5jdGlvbiBBKGUsdCxpKXtyZXR1cm4gdCBpbiBlP09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse3ZhbHVlOmksZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTplW3RdPWksZX1jbGFzcyBie2NvbnN0cnVjdG9yKCl7QSh0aGlzLFwiZW9sXCIscil9cHJpbnQoZSx0KXtsZXQgaT1cIlwiO3JldHVybiB0JiYodGhpcy5lb2w9dCksaSs9dGhpcy5wcmludFZlcnNpb24oZS52ZXJzaW9uKSxpKz10aGlzLnByaW50T3JpZ2luKGUub3JpZ2luKSxpKz10aGlzLnByaW50U2Vzc2lvbk5hbWUoZS5zZXNzaW9uTmFtZSksaSs9dGhpcy5wcmludEluZm9ybWF0aW9uKGUuaW5mb3JtYXRpb24pLGkrPXRoaXMucHJpbnRVcmkoZS51cmkpLGkrPXRoaXMucHJpbnRFbWFpbChlLmVtYWlscyksaSs9dGhpcy5wcmludFBob25lKGUucGhvbmVzKSxpKz10aGlzLnByaW50Q29ubmVjdGlvbihlLmNvbm5lY3Rpb24pLGkrPXRoaXMucHJpbnRCYW5kd2lkdGgoZS5iYW5kd2lkdGhzKSxpKz10aGlzLnByaW50VGltZUZpZWxkcyhlLnRpbWVGaWVsZHMpLGkrPXRoaXMucHJpbnRLZXkoZS5rZXkpLGkrPXRoaXMucHJpbnRTZXNzaW9uQXR0cmlidXRlcyhlLmF0dHJpYnV0ZXMpLGkrPXRoaXMucHJpbnRNZWRpYURlc2NyaXB0aW9uKGUubWVkaWFEZXNjcmlwdGlvbnMpLGl9cHJpbnRWZXJzaW9uKGUpe3JldHVyblwidj1cIi5jb25jYXQoZSkuY29uY2F0KHRoaXMuZW9sKX1wcmludE9yaWdpbihlKXtyZXR1cm5cIm89XCIuY29uY2F0KGUudXNlcm5hbWUsXCIgXCIpLmNvbmNhdChlLnNlc3NJZCxcIiBcIikuY29uY2F0KGUuc2Vzc1ZlcnNpb24sXCIgXCIpLmNvbmNhdChlLm5ldHR5cGUsXCIgXCIpLmNvbmNhdChlLmFkZHJ0eXBlLFwiIFwiKS5jb25jYXQoZS51bmljYXN0QWRkcmVzcykuY29uY2F0KHRoaXMuZW9sKX1wcmludFNlc3Npb25OYW1lKGUpe3JldHVybiBlP1wicz1cIi5jb25jYXQoZSkuY29uY2F0KHRoaXMuZW9sKTpcIlwifXByaW50SW5mb3JtYXRpb24oZSl7cmV0dXJuIGU/XCJpPVwiLmNvbmNhdChlKS5jb25jYXQodGhpcy5lb2wpOlwiXCJ9cHJpbnRVcmkoZSl7cmV0dXJuIGU/XCJ1PVwiLmNvbmNhdChlKS5jb25jYXQodGhpcy5lb2wpOlwiXCJ9cHJpbnRFbWFpbChlKXtsZXQgdD1cIlwiO2Zvcihjb25zdCBpIG9mIGUpdCs9XCJlPVwiLmNvbmNhdChpKS5jb25jYXQodGhpcy5lb2wpO3JldHVybiB0fXByaW50UGhvbmUoZSl7bGV0IHQ9XCJcIjtmb3IoY29uc3QgaSBvZiBlKXQrPVwiZT1cIi5jb25jYXQoaSkuY29uY2F0KHRoaXMuZW9sKTtyZXR1cm4gdH1wcmludENvbm5lY3Rpb24oZSl7cmV0dXJuIGU/XCJjPVwiLmNvbmNhdChlLm5ldHR5cGUsXCIgXCIpLmNvbmNhdChlLmFkZHJ0eXBlLFwiIFwiKS5jb25jYXQoZS5hZGRyZXNzKS5jb25jYXQodGhpcy5lb2wpOlwiXCJ9cHJpbnRCYW5kd2lkdGgoZSl7bGV0IHQ9XCJcIjtmb3IoY29uc3QgaSBvZiBlKXQrPVwiYj1cIi5jb25jYXQoaS5id3R5cGUsXCI6XCIpLmNvbmNhdChpLmJhbmR3aWR0aCkuY29uY2F0KHRoaXMuZW9sKTtyZXR1cm4gdH1wcmludFRpbWVGaWVsZHMoZSl7bGV0IHQ9XCJcIjtmb3IoY29uc3QgaSBvZiBlKXt0Kz1cInQ9XCIuY29uY2F0KGkudGltZS5zdGFydFRpbWUsXCIgXCIpLmNvbmNhdChpLnRpbWUuc3RhcnRUaW1lKS5jb25jYXQodGhpcy5lb2wpO2Zvcihjb25zdCBlIG9mIGkucmVwZWF0cyl0Kz1cInI9XCIuY29uY2F0KGUucmVwZWF0SW50ZXJ2YWwsXCIgXCIpLmNvbmNhdChlLnR5cGVkVGltZXMuam9pbihcIiBcIikpLmNvbmNhdCh0aGlzLmVvbCk7aS56b25lQWRqdXN0bWVudHMmJih0Kz1cIno9XCIsdCs9XCJ6PVwiLmNvbmNhdChpLnpvbmVBZGp1c3RtZW50cy5tYXAoKGU9PlwiXCIuY29uY2F0KGUudGltZSxcIiBcIikuY29uY2F0KGUuYmFjaz9cIi1cIjpcIlwiLFwiIFwiKS5jb25jYXQoZS50eXBlZFRpbWUpKSkuam9pbihcIiBcIikpLmNvbmNhdCh0aGlzLmVvbCksdCs9dGhpcy5lb2wpfXJldHVybiB0fXByaW50S2V5KGUpe3JldHVybiBlP1wiaz1cIi5jb25jYXQoZSkuY29uY2F0KHRoaXMuZW9sKTpcIlwifXByaW50QXR0cmlidXRlcyhlKXtsZXQgdD1cIlwiO2Zvcihjb25zdCBpIG9mIGUpdCs9XCJhPVwiLmNvbmNhdChpLmF0dEZpZWxkKS5jb25jYXQoaS5hdHRWYWx1ZT9cIjpcIi5jb25jYXQoaS5hdHRWYWx1ZSk6XCJcIikuY29uY2F0KHRoaXMuZW9sKTtyZXR1cm4gdH1wcmludE1lZGlhRGVzY3JpcHRpb24oZSl7bGV0IHQ9XCJcIjtmb3IoY29uc3QgaSBvZiBlKXQrPXRoaXMucHJpbnRNZWRpYShpLm1lZGlhKSx0Kz10aGlzLnByaW50SW5mb3JtYXRpb24oaS5pbmZvcm1hdGlvbiksdCs9dGhpcy5wcmludENvbm5lY3Rpb25zKGkuY29ubmVjdGlvbnMpLHQrPXRoaXMucHJpbnRCYW5kd2lkdGgoaS5iYW5kd2lkdGhzKSx0Kz10aGlzLnByaW50S2V5KGkua2V5KSx0Kz10aGlzLnByaW50TWVkaWFBdHRyaWJ1dGVzKGkpO3JldHVybiB0fXByaW50Q29ubmVjdGlvbnMoZSl7bGV0IHQ9XCJcIjtmb3IoY29uc3QgaSBvZiBlKXQrPXRoaXMucHJpbnRDb25uZWN0aW9uKGkpO3JldHVybiB0fXByaW50TWVkaWEoZSl7cmV0dXJuXCJtPVwiLmNvbmNhdChlLm1lZGlhVHlwZSxcIiBcIikuY29uY2F0KGUucG9ydCxcIiBcIikuY29uY2F0KGUucHJvdG9zLmpvaW4oXCIvXCIpLFwiIFwiKS5jb25jYXQoZS5mbXRzLmpvaW4oXCIgXCIpKS5jb25jYXQodGhpcy5lb2wpfXByaW50U2Vzc2lvbkF0dHJpYnV0ZXMoZSl7cmV0dXJuIG5ldyBPKHRoaXMuZW9sKS5wcmludChlKX1wcmludE1lZGlhQXR0cmlidXRlcyhlKXtyZXR1cm4gbmV3IE4odGhpcy5lb2wpLnByaW50KGUpfX1jbGFzcyB3e2NvbnN0cnVjdG9yKGUpe0EodGhpcyxcImVvbFwiLHZvaWQgMCksdGhpcy5lb2w9ZX1wcmludEljZVVmcmFnKGUpe3JldHVybiB2b2lkIDA9PT1lP1wiXCI6XCJhPWljZS11ZnJhZzpcIi5jb25jYXQoZSkuY29uY2F0KHRoaXMuZW9sKX1wcmludEljZVB3ZChlKXtyZXR1cm4gdm9pZCAwPT09ZT9cIlwiOlwiYT1pY2UtcHdkOlwiLmNvbmNhdChlKS5jb25jYXQodGhpcy5lb2wpfXByaW50SWNlT3B0aW9ucyhlKXtyZXR1cm4gdm9pZCAwPT09ZT9cIlwiOlwiYT1pY2Utb3B0aW9uczpcIi5jb25jYXQoZS5qb2luKG8pKS5jb25jYXQodGhpcy5lb2wpfXByaW50RmluZ2VycHJpbnRzKGUpe3JldHVybiBlLmxlbmd0aD4wP2UubWFwKChlPT5cImE9ZmluZ2VycHJpbnQ6XCIuY29uY2F0KGUuaGFzaEZ1bmN0aW9uKS5jb25jYXQobykuY29uY2F0KGUuZmluZ2VycHJpbnQpKSkuam9pbih0aGlzLmVvbCkrdGhpcy5lb2w6XCJcIn1wcmludEV4dG1hcChlKXtyZXR1cm4gZS5tYXAoKGU9PlwiYT1leHRtYXA6XCIuY29uY2F0KGUuZW50cnkpLmNvbmNhdChlLmRpcmVjdGlvbj9cIi9cIi5jb25jYXQoZS5kaXJlY3Rpb24pOlwiXCIpLmNvbmNhdChvKS5jb25jYXQoZS5leHRlbnNpb25OYW1lKS5jb25jYXQoZS5leHRlbnNpb25BdHRyaWJ1dGVzP1wiXCIuY29uY2F0KG8pLmNvbmNhdChlLmV4dGVuc2lvbkF0dHJpYnV0ZXMpOlwiXCIpLmNvbmNhdCh0aGlzLmVvbCkpKS5qb2luKFwiXCIpfXByaW50U2V0dXAoZSl7cmV0dXJuIHZvaWQgMD09PWU/XCJcIjpcImE9c2V0dXA6XCIuY29uY2F0KGUpLmNvbmNhdCh0aGlzLmVvbCl9cHJpbnRVbnJlY29nbml6ZWQoZSl7cmV0dXJuIGUubWFwKChlPT5cImE9XCIuY29uY2F0KGUuYXR0RmllbGQpLmNvbmNhdChlLmF0dFZhbHVlP1wiOlwiLmNvbmNhdChlLmF0dFZhbHVlKTpcIlwiKS5jb25jYXQodGhpcy5lb2wpKSkuam9pbihcIlwiKX19Y2xhc3MgTyBleHRlbmRzIHd7cHJpbnQoZSl7bGV0IHQ9XCJcIjtyZXR1cm4gdCs9dGhpcy5wcmludEdyb3VwcyhlLmdyb3VwcyksdCs9dGhpcy5wcmludE1zaWRTZW1hbnRpYyhlLm1zaWRTZW1hbnRpYyksdCs9dGhpcy5wcmludEljZUxpdGUoZS5pY2VMaXRlKSx0Kz10aGlzLnByaW50SWNlVWZyYWcoZS5pY2VVZnJhZyksdCs9dGhpcy5wcmludEljZVB3ZChlLmljZVB3ZCksdCs9dGhpcy5wcmludEljZU9wdGlvbnMoZS5pY2VPcHRpb25zKSx0Kz10aGlzLnByaW50RmluZ2VycHJpbnRzKGUuZmluZ2VycHJpbnRzKSx0Kz10aGlzLnByaW50U2V0dXAoZS5zZXR1cCksdCs9dGhpcy5wcmludFRsc0lkKGUudGxzSWQpLHQrPXRoaXMucHJpbnRJZGVudGl0eShlLmlkZW50aXRpZXMpLHQrPXRoaXMucHJpbnRFeHRtYXAoZS5leHRtYXBzKSx0Kz10aGlzLnByaW50VW5yZWNvZ25pemVkKGUudW5yZWNvZ25pemVkKSx0fXByaW50R3JvdXBzKGUpe2xldCB0PVwiXCI7cmV0dXJuIGUubGVuZ3RoPjAmJih0Kz1lLm1hcCgoZT0+XCJhPWdyb3VwOlwiLmNvbmNhdChlLnNlbWFudGljKS5jb25jYXQoZS5pZGVudGlmaWNhdGlvblRhZy5tYXAoKGU9PlwiXCIuY29uY2F0KG8pLmNvbmNhdChlKSkpLmpvaW4oXCJcIikpLmNvbmNhdCh0aGlzLmVvbCkpKS5qb2luKFwiXCIpKSx0fXByaW50SWNlTGl0ZShlKXtyZXR1cm4gdm9pZCAwPT09ZT9cIlwiOlwiYT1pY2UtbGl0ZVwiK3RoaXMuZW9sfXByaW50VGxzSWQoZSl7cmV0dXJuIGU/XCJhPXRscy1pZDpcIi5jb25jYXQoZSkuY29uY2F0KHRoaXMuZW9sKTpcIlwifXByaW50SWRlbnRpdHkoZSl7cmV0dXJuIDA9PT1lLmxlbmd0aD9cIlwiOmUubWFwKChlPT5cImE9aWRlbnRpdHk6XCIuY29uY2F0KGUuYXNzZXJ0aW9uVmFsdWUpLmNvbmNhdChlLmV4dGVuc2lvbnMubWFwKChlPT5cIlwiLmNvbmNhdChvKS5jb25jYXQoZS5uYW1lKS5jb25jYXQoZS52YWx1ZT9cIj1cIi5jb25jYXQoZS52YWx1ZSk6XCJcIikpKSkpKS5qb2luKHRoaXMuZW9sKSt0aGlzLmVvbH1wcmludE1zaWRTZW1hbnRpYyhlKXtpZighZSlyZXR1cm5cIlwiO2xldCB0PVwiYT1tc2lkLXNlbWFudGljOlwiLmNvbmNhdChlLnNlbWFudGljKTtyZXR1cm4gZS5hcHBseUZvckFsbD90Kz1cIlwiLmNvbmNhdChvLFwiKlwiKTplLmlkZW50aWZpZXJMaXN0Lmxlbmd0aD4wJiYodCs9ZS5pZGVudGlmaWVyTGlzdC5tYXAoKGU9PlwiXCIuY29uY2F0KG8pLmNvbmNhdChlKSkpKSx0K3RoaXMuZW9sfX1jbGFzcyBOIGV4dGVuZHMgd3twcmludChlKXtjb25zdCB0PWUuYXR0cmlidXRlcztsZXQgaT1cIlwiO3JldHVybiBpKz10aGlzLnByaW50UlRDUCh0LnJ0Y3ApLGkrPXRoaXMucHJpbnRJY2VVZnJhZyh0LmljZVVmcmFnKSxpKz10aGlzLnByaW50SWNlUHdkKHQuaWNlUHdkKSxpKz10aGlzLnByaW50SWNlT3B0aW9ucyh0LmljZU9wdGlvbnMpLGkrPXRoaXMucHJpbnRDYW5kaWRhdGVzKHQuY2FuZGlkYXRlcyksaSs9dGhpcy5wcmludFJlbW90ZUNhbmRpZGF0ZXNMaXN0KHQucmVtb3RlQ2FuZGlkYXRlc0xpc3QpLGkrPXRoaXMucHJpbnRFbmRPZkNhbmRpZGF0ZXModC5lbmRPZkNhbmRpZGF0ZXMpLGkrPXRoaXMucHJpbnRGaW5nZXJwcmludHModC5maW5nZXJwcmludHMpLGkrPXRoaXMucHJpbnRTZXR1cCh0LnNldHVwKSxpKz10aGlzLnByaW50TWlkKHQubWlkKSxpKz10aGlzLnByaW50RXh0bWFwKHQuZXh0bWFwcyksaSs9dGhpcy5wcmludFJUUFJlbGF0ZWQodCksaSs9dGhpcy5wcmludFB0aW1lKHQucHRpbWUpLGkrPXRoaXMucHJpbnRNYXhQdGltZSh0Lm1heFB0aW1lKSxpKz10aGlzLnByaW50RGlyZWN0aW9uKHQuZGlyZWN0aW9uKSxpKz10aGlzLnByaW50U1NSQ0dyb3Vwcyh0LnNzcmNHcm91cHMpLGkrPXRoaXMucHJpbnRTU1JDKHQuc3NyY3MpLGkrPXRoaXMucHJpbnRSVENQTXV4KHQucnRjcE11eCksaSs9dGhpcy5wcmludFJUQ1BNdXhPbmx5KHQucnRjcE11eE9ubHkpLGkrPXRoaXMucHJpbnRSVENQUnNpemUodC5ydGNwUnNpemUpLGkrPXRoaXMucHJpbnRNU0lkKHQubXNpZHMpLGkrPXRoaXMucHJpbnRJbWFnZWF0dHIodC5pbWFnZWF0dHIpLGkrPXRoaXMucHJpbnRSaWQodC5yaWRzKSxpKz10aGlzLnByaW50U2ltdWxjYXN0KHQuc2ltdWxjYXN0KSxpKz10aGlzLnByaW50U0NUUFBvcnQodC5zY3RwUG9ydCksaSs9dGhpcy5wcmludE1heE1lc3NhZ2VTaXplKHQubWF4TWVzc2FnZVNpemUpLGkrPXRoaXMucHJpbnRVbnJlY29nbml6ZWQodC51bnJlY29nbml6ZWQpLGl9cHJpbnRDYW5kaWRhdGVzKGUpe3JldHVybiBlLm1hcCgoZT0+XCJhPWNhbmRpZGF0ZTpcIi5jb25jYXQoZS5mb3VuZGF0aW9uKS5jb25jYXQobykuY29uY2F0KGUuY29tcG9uZW50SWQpLmNvbmNhdChvKS5jb25jYXQoZS50cmFuc3BvcnQpLmNvbmNhdChvKS5jb25jYXQoZS5wcmlvcml0eSkuY29uY2F0KG8pLmNvbmNhdChlLmNvbm5lY3Rpb25BZGRyZXNzKS5jb25jYXQobykuY29uY2F0KGUucG9ydCkuY29uY2F0KG8sXCJ0eXBcIikuY29uY2F0KG8pLmNvbmNhdChlLnR5cGUpLmNvbmNhdChlLnJlbEFkZHI/XCJcIi5jb25jYXQobyxcInJhZGRyXCIpLmNvbmNhdChvKS5jb25jYXQoZS5yZWxBZGRyKTpcIlwiKS5jb25jYXQoZS5yZWxQb3J0P1wiXCIuY29uY2F0KG8sXCJycG9ydFwiKS5jb25jYXQobykuY29uY2F0KGUucmVsUG9ydCk6XCJcIikuY29uY2F0KE9iamVjdC5rZXlzKGUuZXh0ZW5zaW9uKS5tYXAoKHQ9PlwiXCIuY29uY2F0KG8pLmNvbmNhdCh0KS5jb25jYXQobykuY29uY2F0KGUuZXh0ZW5zaW9uW3RdKSkpLmpvaW4oXCJcIikpLmNvbmNhdCh0aGlzLmVvbCkpKS5qb2luKFwiXCIpfXByaW50UmVtb3RlQ2FuZGlkYXRlc0xpc3QoZSl7cmV0dXJuIGUubWFwKChlPT5cImE9cmVtb3RlLWNhbmRpZGF0ZXM6XCIuY29uY2F0KGUuam9pbihvKSkuY29uY2F0KHRoaXMuZW9sKSkpLmpvaW4oXCJcIil9cHJpbnRFbmRPZkNhbmRpZGF0ZXMoZSl7cmV0dXJuIHZvaWQgMD09PWU/XCJcIjpcImE9ZW5kLW9mLWNhbmRpZGF0ZXNcIit0aGlzLmVvbH1wcmludFJUUFJlbGF0ZWQoZSl7aWYoIWUucGF5bG9hZHMpcmV0dXJuXCJcIjtjb25zdCB0PWUucGF5bG9hZHM7bGV0IGk9XCJcIjtpKz1lLnJ0Y3BGZWVkYmFja1dpbGRjYXJkcy5tYXAoKGU9PnRoaXMucHJpbnRSVENQRmVlZGJhY2soXCIqXCIsZSkpKS5qb2luKFwiXCIpO2Zvcihjb25zdCBlIG9mIHQpaSs9dGhpcy5wcmludFJ0cE1hcChlLnBheWxvYWRUeXBlLGUucnRwTWFwKSxpKz10aGlzLnByaW50Rm10cChlLnBheWxvYWRUeXBlLGUuZm10cCksaSs9ZS5ydGNwRmVlZGJhY2tzLm1hcCgodD0+dGhpcy5wcmludFJUQ1BGZWVkYmFjayhlLnBheWxvYWRUeXBlLHQpKSkuam9pbihcIlwiKTtyZXR1cm4gaX1wcmludEZtdHAoZSx0KXtpZighdClyZXR1cm5cIlwiO2NvbnN0IGk9T2JqZWN0LmtleXModC5wYXJhbWV0ZXJzKTtyZXR1cm4gMT09PWkubGVuZ3RoJiZudWxsPT09dC5wYXJhbWV0ZXJzW2lbMF1dP1wiYT1mbXRwOlwiLmNvbmNhdChlKS5jb25jYXQobykuY29uY2F0KGlbMF0pLmNvbmNhdCh0aGlzLmVvbCk6XCJhPWZtdHA6XCIuY29uY2F0KGUpLmNvbmNhdChvKS5jb25jYXQoT2JqZWN0LmtleXModC5wYXJhbWV0ZXJzKS5tYXAoKGU9PlwiXCIuY29uY2F0KGUsXCI9XCIpLmNvbmNhdCh0LnBhcmFtZXRlcnNbZV0pKSkuam9pbihcIjtcIikpLmNvbmNhdCh0aGlzLmVvbCl9cHJpbnRSdHBNYXAoZSx0KXtyZXR1cm4gdD9cImE9cnRwbWFwOlwiLmNvbmNhdChlKS5jb25jYXQobykuY29uY2F0KHQuZW5jb2RpbmdOYW1lLFwiL1wiKS5jb25jYXQodC5jbG9ja1JhdGUpLmNvbmNhdCh0LmVuY29kaW5nUGFyYW1ldGVycz9cIi9cIi5jb25jYXQodC5lbmNvZGluZ1BhcmFtZXRlcnMpOlwiXCIpLmNvbmNhdCh0aGlzLmVvbCk6XCJcIn1wcmludFJUQ1BGZWVkYmFjayhlLHQpe2xldCBpPVwiYT1ydGNwLWZiOlwiLmNvbmNhdChlKS5jb25jYXQobyksbj10O3JldHVyblwidHJyLWludFwiPT09bi50eXBlP2krPVwidHRyLWludFwiLmNvbmNhdChvKS5jb25jYXQobi5pbnRlcnZhbCk6KGkrPVwiXCIuY29uY2F0KG4udHlwZSksbi5wYXJhbWV0ZXImJihpKz1cIlwiLmNvbmNhdChvKS5jb25jYXQobi5wYXJhbWV0ZXIpLG4uYWRkaXRpb25hbCYmKGkrPVwiXCIuY29uY2F0KG8pLmNvbmNhdChuLmFkZGl0aW9uYWwpKSkpLGkrdGhpcy5lb2x9cHJpbnRQdGltZShlKXtyZXR1cm4gdm9pZCAwPT09ZT9cIlwiOlwiYT1wdGltZTpcIi5jb25jYXQoZSkuY29uY2F0KHRoaXMuZW9sKX1wcmludE1heFB0aW1lKGUpe3JldHVybiB2b2lkIDA9PT1lP1wiXCI6XCJhPW1heHB0aW1lOlwiLmNvbmNhdChlKS5jb25jYXQodGhpcy5lb2wpfXByaW50RGlyZWN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lP1wiXCI6XCJhPVwiLmNvbmNhdChlKS5jb25jYXQodGhpcy5lb2wpfXByaW50U1NSQyhlKXtyZXR1cm4gZS5tYXAoKGU9Pk9iamVjdC5rZXlzKGUuYXR0cmlidXRlcykubWFwKCh0PT5cImE9c3NyYzpcIi5jb25jYXQoZS5zc3JjSWQudG9TdHJpbmcoMTApKS5jb25jYXQobykuY29uY2F0KHQpLmNvbmNhdChlLmF0dHJpYnV0ZXNbdF0/XCI6XCIuY29uY2F0KGUuYXR0cmlidXRlc1t0XSk6XCJcIikuY29uY2F0KHRoaXMuZW9sKSkpLmpvaW4oXCJcIikpKS5qb2luKFwiXCIpfXByaW50UlRDUE11eChlKXtyZXR1cm4gdm9pZCAwPT09ZT9cIlwiOlwiYT1ydGNwLW11eFwiLmNvbmNhdCh0aGlzLmVvbCl9cHJpbnRSVENQTXV4T25seShlKXtyZXR1cm4gdm9pZCAwPT09ZT9cIlwiOlwiYT1ydGNwLW11eC1vbmx5XCIuY29uY2F0KHRoaXMuZW9sKX1wcmludFJUQ1BSc2l6ZShlKXtyZXR1cm4gdm9pZCAwPT09ZT9cIlwiOlwiYT1ydGNwLXJzaXplXCIuY29uY2F0KHRoaXMuZW9sKX1wcmludFJUQ1AoZSl7aWYodm9pZCAwPT09ZSlyZXR1cm5cIlwiO2xldCB0PVwiYT1ydGNwOlwiLmNvbmNhdChlLnBvcnQpO3JldHVybiBlLm5ldFR5cGUmJih0Kz1cIlwiLmNvbmNhdChvKS5jb25jYXQoZS5uZXRUeXBlKSksZS5hZGRyZXNzVHlwZSYmKHQrPVwiXCIuY29uY2F0KG8pLmNvbmNhdChlLmFkZHJlc3NUeXBlKSksZS5hZGRyZXNzJiYodCs9XCJcIi5jb25jYXQobykuY29uY2F0KGUuYWRkcmVzcykpLHQrdGhpcy5lb2x9cHJpbnRNU0lkKGUpe3JldHVybiBlLm1hcCgoZT0+XCJhPW1zaWQ6XCIuY29uY2F0KGUuaWQpLmNvbmNhdChlLmFwcGRhdGE/XCJcIi5jb25jYXQobykuY29uY2F0KGUuYXBwZGF0YSk6XCJcIikuY29uY2F0KHRoaXMuZW9sKSkpLmpvaW4oXCJcIil9cHJpbnRJbWFnZWF0dHIoZSl7cmV0dXJuIGUubWFwKChlPT5cImE9aW1hZ2VhdHRyOlwiLmNvbmNhdChlKS5jb25jYXQodGhpcy5lb2wpKSkuam9pbihcIlwiKX1wcmludFJpZChlKXtyZXR1cm4gZS5tYXAoKGU9PntsZXQgdD1cImE9cmlkOlwiLmNvbmNhdChlLmlkKS5jb25jYXQobykuY29uY2F0KGUuZGlyZWN0aW9uKTtyZXR1cm4gZS5wYXlsb2FkcyYmKHQrPVwiXCIuY29uY2F0KG8sXCJwdD1cIikuY29uY2F0KGUucGF5bG9hZHMuam9pbihcIixcIikpKSxlLnBhcmFtcy5sZW5ndGg+MCYmKHQrPVwiXCIuY29uY2F0KG8pLmNvbmNhdChlLnBhcmFtcy5tYXAoKGU9PlwiZGVwZW5kXCI9PT1lLnR5cGU/XCJkZXBlbmQ9XCIuY29uY2F0KGUucmlkcy5qb2luKFwiLFwiKSk6XCJcIi5jb25jYXQoZS50eXBlLFwiPVwiKS5jb25jYXQoZS52YWwpKSkuam9pbihcIjtcIikpKSx0K3RoaXMuZW9sfSkpLmpvaW4oXCJcIil9cHJpbnRTaW11bGNhc3QoZSl7cmV0dXJuIHZvaWQgMD09PWU/XCJcIjpcImE9c2ltdWxjYXN0OlwiLmNvbmNhdChlKS5jb25jYXQodGhpcy5lb2wpfXByaW50U0NUUFBvcnQoZSl7cmV0dXJuIHZvaWQgMD09PWU/XCJcIjpcImE9c2N0cC1wb3J0OlwiLmNvbmNhdChlKS5jb25jYXQodGhpcy5lb2wpfXByaW50TWF4TWVzc2FnZVNpemUoZSl7cmV0dXJuIHZvaWQgMD09PWU/XCJcIjpcImE9bWF4LW1lc3NhZ2Utc2l6ZTpcIi5jb25jYXQoZSkuY29uY2F0KHRoaXMuZW9sKX1wcmludE1pZChlKXtyZXR1cm4gdm9pZCAwPT09ZT9cIlwiOlwiYT1taWQ6XCIuY29uY2F0KGUpLmNvbmNhdCh0aGlzLmVvbCl9cHJpbnRTU1JDR3JvdXBzKGUpe3JldHVybiBlLm1hcCgoZT0+XCJhPXNzcmMtZ3JvdXA6XCIuY29uY2F0KGUuc2VtYW50aWMpLmNvbmNhdChlLnNzcmNJZHMubWFwKChlPT5cIlwiLmNvbmNhdChvKS5jb25jYXQoZS50b1N0cmluZygxMCkpKSkuam9pbihcIlwiKSkuY29uY2F0KHRoaXMuZW9sKSkpLmpvaW4oXCJcIil9fWZ1bmN0aW9uIEQoZSl7cmV0dXJuKG5ldyBDKS5wYXJzZShlKX1mdW5jdGlvbiBQKGUsdCl7cmV0dXJuKG5ldyBiKS5wcmludChlLHQpfX19LHQ9e307ZnVuY3Rpb24gaShuKXtpZih0W25dKXJldHVybiB0W25dLmV4cG9ydHM7dmFyIHI9dFtuXT17ZXhwb3J0czp7fX07cmV0dXJuIGVbbl0ocixyLmV4cG9ydHMsaSksci5leHBvcnRzfXJldHVybiBpLmQ9KGUsdCk9Pntmb3IodmFyIG4gaW4gdClpLm8odCxuKSYmIWkubyhlLG4pJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxuLHtlbnVtZXJhYmxlOiEwLGdldDp0W25dfSl9LGkubz0oZSx0KT0+T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCksaS5yPWU9PntcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSxpKDgpfSkoKTt2YXIgRlU9VlUuZXhwb3J0cztmdW5jdGlvbiBCVSgpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpYQShcIlNWQ19NT0RFXCIpO2lmKFhBKFwiRU5BQkxFX1NWQ1wiKSlyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW4gSXd9KGUpP2U6SXcuTDFUM31mdW5jdGlvbiBqVShlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gR1UoZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/alUoT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6alUoT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9ZnVuY3Rpb24gV1UoZSl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9LGk9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOnt9LG49YXJndW1lbnRzLmxlbmd0aD4zP2FyZ3VtZW50c1szXTp2b2lkIDA7Y29uc3R7ZmlsdGVyUlRYOnIsZmlsdGVyVmlkZW9GZWM6byxmaWx0ZXJBdWRpb0ZlYzpzLGZpbHRlckF1ZGlvQ29kZWM6YSxmaWx0ZXJWaWRlb0NvZGVjOmN9PXQse3VzZVhSOmR9PWk7bGV0IGw9W10sdT1bXSxoPVtdLHA9W10sXz0hMSxFPSExO2lmKEZVLnBhcnNlKGUpLm1lZGlhRGVzY3JpcHRpb25zLmZvckVhY2goKGU9PntuJiZuIT09ZS5hdHRyaWJ1dGVzLmRpcmVjdGlvbnx8KFwidmlkZW9cIiE9PWUubWVkaWEubWVkaWFUeXBlfHxffHwodT1lLmF0dHJpYnV0ZXMucGF5bG9hZHMscD1lLmF0dHJpYnV0ZXMuZXh0bWFwcyxfPSEwKSxcImF1ZGlvXCIhPT1lLm1lZGlhLm1lZGlhVHlwZXx8RXx8KGw9ZS5hdHRyaWJ1dGVzLnBheWxvYWRzLGg9ZS5hdHRyaWJ1dGVzLmV4dG1hcHMsRT0hMCkpfSkpLCFwfHwwPT09dS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGdldCB2aWRlbyBjYXBhYmlsaXRpZXMgZnJvbSBTRFAuXCIpO2lmKCFofHwwPT09bC5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGdldCBhdWRpbyBjYXBhYmlsaXRpZXMgZnJvbSBTRFAuXCIpO2lmKHUuZm9yRWFjaCgoZT0+e3ZhciB0O251bGwhPT0odD1lLnJ0cE1hcCkmJnZvaWQgMCE9PXQmJnQuY2xvY2tSYXRlJiYoZS5ydHBNYXAuY2xvY2tSYXRlPXBhcnNlSW50KGUucnRwTWFwLmNsb2NrUmF0ZSkpLGQmJmUucnRjcEZlZWRiYWNrcy5wdXNoKHt0eXBlOlwicnJ0clwifSl9KSksbC5mb3JFYWNoKChlPT57dmFyIHQ7bnVsbCE9PSh0PWUucnRwTWFwKSYmdm9pZCAwIT09dCYmdC5jbG9ja1JhdGUmJihlLnJ0cE1hcC5jbG9ja1JhdGU9cGFyc2VJbnQoZS5ydHBNYXAuY2xvY2tSYXRlKSksZCYmZS5ydGNwRmVlZGJhY2tzLnB1c2goe3R5cGU6XCJycnRyXCJ9KX0pKSxyJiYobD1sLmZpbHRlcigoZT0+e3ZhciB0O3JldHVyblwicnR4XCIhPT0obnVsbD09PSh0PWUucnRwTWFwKXx8dm9pZCAwPT09dD92b2lkIDA6dC5lbmNvZGluZ05hbWUudG9Mb3dlckNhc2UoKSl9KSksdT11LmZpbHRlcigoZT0+e3ZhciB0O3JldHVyblwicnR4XCIhPT0obnVsbD09PSh0PWUucnRwTWFwKXx8dm9pZCAwPT09dD92b2lkIDA6dC5lbmNvZGluZ05hbWUudG9Mb3dlckNhc2UoKSl9KSkpLG8mJih1PXUuZmlsdGVyKChlPT57dmFyIHQ7cmV0dXJuIS8ocmVkKXwodWxwZmVjKXwoZmxleGZlYykvaS50ZXN0KChudWxsPT09KHQ9ZS5ydHBNYXApfHx2b2lkIDA9PT10P3ZvaWQgMDp0LmVuY29kaW5nTmFtZSl8fFwiXCIpfSkpKSxzJiYobD1sLmZpbHRlcigoZT0+e3ZhciB0O3JldHVybiEvKHJlZCl8KHVscGZlYyl8KGZsZXhmZWMpL2kudGVzdCgobnVsbD09PSh0PWUucnRwTWFwKXx8dm9pZCAwPT09dD92b2lkIDA6dC5lbmNvZGluZ05hbWUpfHxcIlwiKX0pKSksYSYmKG51bGw9PWE/dm9pZCAwOmEubGVuZ3RoKT4wJiYobD1sLmZpbHRlcigoZT0+e3ZhciB0O3JldHVybiBEbihhKS5jYWxsKGEsKG51bGw9PT0odD1lLnJ0cE1hcCl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuZW5jb2RpbmdOYW1lLnRvTG93ZXJDYXNlKCkpfHxcIlwiKX0pKSksYyYmKG51bGw9PWM/dm9pZCAwOmMubGVuZ3RoKT4wKXtjb25zdCBlPXUuZmlsdGVyKChlPT57dmFyIHQ7cmV0dXJuIERuKGMpLmNhbGwoYywobnVsbD09PSh0PWUucnRwTWFwKXx8dm9pZCAwPT09dD92b2lkIDA6dC5lbmNvZGluZ05hbWUudG9Mb3dlckNhc2UoKSl8fFwiXCIpfSkpO3U9ZS5jb25jYXQocj9bXTpheChlLHUpKX1jb25zdCBmPVhBKFwiVU5TVVBQT1JURURfVklERU9fQ09ERUNcIik7cmV0dXJuIGYmJmYubGVuZ3RoPjAmJih1PXUuZmlsdGVyKChlPT4hKGUucnRwTWFwJiZEbihmKS5jYWxsKGYsZS5ydHBNYXAuZW5jb2RpbmdOYW1lLnRvTG93ZXJDYXNlKCkpKSkpKSx7YXVkaW9Db2RlY3M6bCx2aWRlb0NvZGVjczp1LGF1ZGlvRXh0ZW5zaW9uczpoLHZpZGVvRXh0ZW5zaW9uczpwfX1mdW5jdGlvbiBIVShlKXtjb25zdCB0PUZVLnBhcnNlKGUpO2xldCBpLG47Zm9yKGNvbnN0IGUgb2YgdC5tZWRpYURlc2NyaXB0aW9ucyl7aWYoIWkpe2NvbnN0IHQ9ZS5hdHRyaWJ1dGVzLmljZVVmcmFnLG49ZS5hdHRyaWJ1dGVzLmljZVB3ZDtpZighdHx8IW4pdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGdldCBpY2VVZnJhZyBvciBpY2VQd2QgZnJvbSBTRFAuXCIpO2k9e2ljZVVmcmFnOnQsaWNlUHdkOm59fWlmKCFuKXtjb25zdCB0PWUuYXR0cmlidXRlcy5maW5nZXJwcmludHM7dC5sZW5ndGg+MCYmKG49e2ZpbmdlcnByaW50czp0fSl9fWlmKCFuJiZ0LmF0dHJpYnV0ZXMuZmluZ2VycHJpbnRzLmxlbmd0aD4wJiYobj17ZmluZ2VycHJpbnRzOnQuYXR0cmlidXRlcy5maW5nZXJwcmludHN9KSwhbnx8IWkpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGdldCBpY2VQYXJhbWV0ZXJzIG9yIGR0bHNQYXJhbWV0ZXJzIGZyb20gU0RQLlwiKTtyZXR1cm57aWNlUGFyYW1ldGVyczppLGR0bHNQYXJhbWV0ZXJzOm59fWZ1bmN0aW9uIEtVKGUsdCl7Y29uc3QgaT1bXSxuPWUuYXR0cmlidXRlcy5zc3JjR3JvdXBzLmZpbHRlcigoZT0+XCJGSURcIj09PWUuc2VtYW50aWMpKSxyPWUuYXR0cmlidXRlcy5zc3JjR3JvdXBzLmZpbmQoKGU9PlwiU0lNXCI9PT1lLnNlbWFudGljKSksbz1lLmF0dHJpYnV0ZXMuc3NyY3M7aWYocilyLnNzcmNJZHMuZm9yRWFjaCgoZT0+e3ZhciByO2NvbnN0IG89bnVsbD09PShyPW4uZmluZCgodD0+dC5zc3JjSWRzWzBdPT09ZSkpKXx8dm9pZCAwPT09cj92b2lkIDA6ci5zc3JjSWRzWzFdO2kucHVzaCh7c3NyY0lkOmUscnR4OnQ/bzp2b2lkIDB9KX0pKTtlbHNlIGlmKG4ubGVuZ3RoPjApe2NvbnN0IGU9blswXS5zc3JjSWRzWzBdLHI9blswXS5zc3JjSWRzWzFdO2kucHVzaCh7c3NyY0lkOmUscnR4OnQ/cjp2b2lkIDB9KX1lbHNle2lmKDA9PT1vLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJObyBzc3JjcyBmb3VuZCBvbiBsb2NhbCBtZWRpYSBkZXNjcmlwdGlvbi5cIik7aS5wdXNoKHtzc3JjSWQ6b1swXS5zc3JjSWR9KX1yZXR1cm4gaX1mdW5jdGlvbiBZVShlLHQsaSl7Y29uc3R7Y25hbWU6bn09ZTtsZXQgcj1bXTt0JiYocj1xVSh0KSksMD09PXIubGVuZ3RoJiYocj1lLmljZVBhcmFtZXRlcnMuY2FuZGlkYXRlcy5tYXAoKGU9Pih7Zm91bmRhdGlvbjplLmZvdW5kYXRpb24sY29tcG9uZW50SWQ6XCIxXCIsdHJhbnNwb3J0OmUucHJvdG9jb2wscHJpb3JpdHk6ZS5wcmlvcml0eS50b1N0cmluZygpLGNvbm5lY3Rpb25BZGRyZXNzOmUuaXAscG9ydDplLnBvcnQudG9TdHJpbmcoKSx0eXBlOmUudHlwZSxleHRlbnNpb246e319KSkpLGZiLmRlYnVnKFwiVXNpbmcgY2FuZGlkYXRlcyBmcm9tIGdhdGV3YXkuXCIpKTtjb25zdCBvPXtmaW5nZXJwcmludHM6ZS5kdGxzUGFyYW1ldGVycy5maW5nZXJwcmludHMubWFwKChlPT4oe2hhc2hGdW5jdGlvbjplLmFsZ29yaXRobSxmaW5nZXJwcmludDplLmZpbmdlcnByaW50fSkpKX0scz17aWNlVWZyYWc6ZS5pY2VQYXJhbWV0ZXJzLmljZVVmcmFnLGljZVB3ZDplLmljZVBhcmFtZXRlcnMuaWNlUHdkfTtsZXQgYTtzd2l0Y2goZS5kdGxzUGFyYW1ldGVycy5yb2xlKXtjYXNlXCJzZXJ2ZXJcIjphPVwicGFzc2l2ZVwiO2JyZWFrO2Nhc2VcImNsaWVudFwiOmE9XCJhY3RpdmVcIjticmVhaztjYXNlXCJhdXRvXCI6YT1cImFjdHBhc3NcIn1jb25zdCBjPXJ4KGUucnRwQ2FwYWJpbGl0aWVzKSxkPVtdO3JldHVybiBBcnJheS5pc0FycmF5KGkpJiZpLmxlbmd0aD4wJiZpLmZvckVhY2goKGU9PntkLnB1c2goe2tpbmQ6ZE8uVklERU8sc3NyY0lkOmUudixydHg6ZS52X3J0eCxtc2xhYmVsOlwiXCIuY29uY2F0KGUudixcIl9cIikuY29uY2F0KGUuYSl9LHtraW5kOmRPLkFVRElPLHNzcmNJZDplLmEsbXNsYWJlbDpcIlwiLmNvbmNhdChlLnYsXCJfXCIpLmNvbmNhdChlLmEpfSl9KSkse2R0bHNQYXJhbWV0ZXJzOm8saWNlUGFyYW1ldGVyczpzLGNhbmRpZGF0ZXM6cixydHBDYXBhYmlsaXRpZXM6YyxzZXR1cDphLGNuYW1lOm4scHJlU1NSQ3M6ZH19ZnVuY3Rpb24gcVUoZSl7bGV0IHQ9W107cmV0dXJuIGUuaXAmJlwibnVtYmVyXCI9PXR5cGVvZiBlLnBvcnQmJih0PVt7Zm91bmRhdGlvbjpcInVkcGNhbmRpZGF0ZVwiLGNvbXBvbmVudElkOlwiMVwiLHRyYW5zcG9ydDpcInVkcFwiLHByaW9yaXR5OlwiMjEwMzI2NjMyM1wiLGNvbm5lY3Rpb25BZGRyZXNzOmUuaXAscG9ydDplLnBvcnQudG9TdHJpbmcoKSx0eXBlOlwiaG9zdFwiLGV4dGVuc2lvbjp7fX1dLGZiLmRlYnVnKFwiVXNpbmcgcmVtb3RlIGNhbmRpZGF0ZSBmcm9tIEFQIFwiLmNvbmNhdChlLmlwLFwiOlwiKS5jb25jYXQoZS5wb3J0KSksZS5pcDYmJih0LnB1c2goe2ZvdW5kYXRpb246XCJ1ZHBjYW5kaWRhdGVcIixjb21wb25lbnRJZDpcIjFcIix0cmFuc3BvcnQ6XCJ1ZHBcIixwcmlvcml0eTpcIjIxMDMyNjYzMjNcIixjb25uZWN0aW9uQWRkcmVzczplLmlwNixwb3J0OmUucG9ydC50b1N0cmluZygpLHR5cGU6XCJob3N0XCIsZXh0ZW5zaW9uOnt9fSksZmIuZGVidWcoXCJVc2luZyBJUFY2IHJlbW90ZSBjYW5kaWRhdGUgZnJvbSBBUCBcIi5jb25jYXQoZS5pcDYsXCI6XCIpLmNvbmNhdChlLnBvcnQpKSkpLHR9ZnVuY3Rpb24gelUoZSx0LGkpe2NvbnN0IG49W10scj1bXTtyZXR1cm4gZS5mb3JFYWNoKChlPT57bGV0e3NzcmNJZDpvLHJ0eDpzfT1lO2NvbnN0IGE9VEEoOCxcInRyYWNrLVwiKSxjPXtzc3JjSWQ6byxhdHRyaWJ1dGVzOkdVKHtsYWJlbDphLG1zbGFiZWw6aT1pfHxUQSgxMCxcIlwiKSxtc2lkOlwiXCIuY29uY2F0KGksXCIgXCIpLmNvbmNhdChhKX0sdCYme2NuYW1lOnR9KX07aWYobi5wdXNoKGMpLHZvaWQgMCE9PXMpe2NvbnN0IGU9e3NzcmNJZDpzLGF0dHJpYnV0ZXM6R1Uoe2xhYmVsOmEsbXNsYWJlbDppLG1zaWQ6XCJcIi5jb25jYXQoaSxcIiBcIikuY29uY2F0KGEpfSx0JiZ7Y25hbWU6dH0pfTtuLnB1c2goZSksci5wdXNoKHtzZW1hbnRpYzpcIkZJRFwiLHNzcmNJZHM6W28sc119KX19KSksZS5sZW5ndGg+MSYmci5wdXNoKHtzZW1hbnRpYzpcIlNJTVwiLHNzcmNJZHM6ZS5tYXAoKGU9PntsZXR7c3NyY0lkOnR9PWU7cmV0dXJuIHR9KSl9KSx7c3NyY3M6bixzc3JjR3JvdXBzOnJ9fWZ1bmN0aW9uIEpVKGUsdCl7dCBpbnN0YW5jZW9mIFRNJiZlLmF0dHJpYnV0ZXMucGF5bG9hZHMuZm9yRWFjaCgoZT0+e3ZhciBpO2NvbnN0IG49bnVsbD09PShpPWUucnRwTWFwKXx8dm9pZCAwPT09aT92b2lkIDA6aS5lbmNvZGluZ05hbWUudG9Mb3dlckNhc2UoKTtpZighbnx8LTE9PT1bXCJvcHVzXCIsXCJwY211XCIsXCJwY21hXCIsXCJnNzIyXCJdLmluZGV4T2YobikpcmV0dXJuO2UuZm10cHx8KGUuZm10cD17cGFyYW1ldGVyczp7fX0pLGUuZm10cC5wYXJhbWV0ZXJzLm1pbnB0aW1lPVwiMTBcIixlLmZtdHAucGFyYW1ldGVycy51c2VpbmJhbmRmZWM9XCIxXCI7Y29uc3Qgcj10Ll9lbmNvZGVyQ29uZmlnO3ImJlwicGNtdVwiIT09biYmXCJwY21hXCIhPT1uJiZcImc3MjJcIiE9PW4mJihyLmJpdHJhdGUmJiFadigpJiYoZS5mbXRwLnBhcmFtZXRlcnMubWF4YXZlcmFnZWJpdHJhdGU9XCJcIi5jb25jYXQoTWF0aC5mbG9vcigxZTMqci5iaXRyYXRlKSkpLHIuc2FtcGxlUmF0ZSYmKGUuZm10cC5wYXJhbWV0ZXJzLm1heHBsYXliYWNrcmF0ZT1cIlwiLmNvbmNhdChyLnNhbXBsZVJhdGUpLGUuZm10cC5wYXJhbWV0ZXJzW1wic3Byb3AtbWF4Y2FwdHVyZXJhdGVcIl09XCJcIi5jb25jYXQoci5zYW1wbGVSYXRlKSksci5zdGVyZW8mJihlLmZtdHAucGFyYW1ldGVycy5zdGVyZW89XCIxXCIsZS5mbXRwLnBhcmFtZXRlcnNbXCJzcHJvcC1zdGVyZW9cIl09XCIxXCIpKX0pKX1mdW5jdGlvbiBYVShlKXtjb25zdCB0PWUuYXR0cmlidXRlcy51bnJlY29nbml6ZWQuZmluZEluZGV4KChlPT5cIngtZ29vZ2xlLWZsYWdcIj09PWUuYXR0RmllbGQmJlwiY29uZmVyZW5jZVwiPT09ZS5hdHRWYWx1ZSkpOy0xIT09dCYmZS5hdHRyaWJ1dGVzLnVucmVjb2duaXplZC5zcGxpY2UodCwxKX1mdW5jdGlvbiBRVShlLHQpe3ZhciBpO2lmKCEodCBpbnN0YW5jZW9mIGFVJiZ0Ll9lbmNvZGVyQ29uZmlnJiYtMT09PXQuX2hpbnRzLmluZGV4T2YobUwuU0NSRUVOX1RSQUNLKSkpcmV0dXJuO2NvbnN0IG49dC5fZW5jb2RlckNvbmZpZztaUCgpLnN1cHBvcnRNaW5CaXRyYXRlJiZuLmJpdHJhdGVNaW4mJmUuYXR0cmlidXRlcy5wYXlsb2Fkcy5mb3JFYWNoKChlPT57dmFyIHQsaTtEbih0PVtcImgyNjRcIixcImgyNjVcIixcInZwOFwiLFwidnA5XCIsXCJhdjFcIl0pLmNhbGwodCwobnVsbD09PShpPWUucnRwTWFwKXx8dm9pZCAwPT09aT92b2lkIDA6aS5lbmNvZGluZ05hbWUudG9Mb3dlckNhc2UoKSl8fFwiXCIpJiYoZS5mbXRwfHwoZS5mbXRwPXtwYXJhbWV0ZXJzOnt9fSksZS5mbXRwLnBhcmFtZXRlcnNbXCJ4LWdvb2dsZS1taW4tYml0cmF0ZVwiXT1cIlwiLmNvbmNhdChuLmJpdHJhdGVNaW4pKX0pKSxaUCgpLnN1cHBvcnRNaW5CaXRyYXRlJiYhRG4oaT10Ll9oaW50cykuY2FsbChpLG1MLkxPV19TVFJFQU0pJiZuLmJpdHJhdGVNYXgmJmUuYXR0cmlidXRlcy5wYXlsb2Fkcy5mb3JFYWNoKChlPT57dmFyIHQsaTtEbih0PVtcImgyNjRcIixcImgyNjVcIixcInZwOFwiLFwidnA5XCIsXCJhdjFcIl0pLmNhbGwodCwobnVsbD09PShpPWUucnRwTWFwKXx8dm9pZCAwPT09aT92b2lkIDA6aS5lbmNvZGluZ05hbWUudG9Mb3dlckNhc2UoKSl8fFwiXCIpJiYoZS5mbXRwfHwoZS5mbXRwPXtwYXJhbWV0ZXJzOnt9fSksZS5mbXRwLnBhcmFtZXRlcnNbXCJ4LWdvb2dsZS1zdGFydC1iaXRyYXRlXCJdPVwiXCIuY29uY2F0KFhBKFwiWF9HT09HTEVfU1RBUlRfQklUUkFURVwiKXx8TWF0aC5mbG9vcihuLmJpdHJhdGVNYXgpKSl9KSl9ZnVuY3Rpb24gWlUoZSl7aWYoXCJ2aWRlb1wiIT09ZS5tZWRpYS5tZWRpYVR5cGUpcmV0dXJuO2NvbnN0IHQ9SHYoKTtpZih0Lm5hbWUhPT1Cdi5TQUZBUkkmJnQub3MhPT1Gdi5JT1MpcmV0dXJuO2NvbnN0IGk9ZS5hdHRyaWJ1dGVzLmV4dG1hcHMuZmluZEluZGV4KChlPT4vdmlkZW8tb3JpZW50YXRpb24vZy50ZXN0KGUuZXh0ZW5zaW9uTmFtZSkpKTstMSE9PWkmJmUuYXR0cmlidXRlcy5leHRtYXBzLnNwbGljZShpLDEpfWZ1bmN0aW9uICRVKGUsdCxpKXtpZighdClyZXR1cm47bGV0IG4scjtpZihcInZpZGVvXCI9PT1lLm1lZGlhLm1lZGlhVHlwZT8obj1pLnZpZGVvRXh0ZW5zaW9ucyxyPWkudmlkZW9Db2RlY3MpOihuPWkuYXVkaW9FeHRlbnNpb25zLHI9aS5hdWRpb0NvZGVjcyksITA9PT10LnR3Y2Mpe2NvbnN0IHQ9bi5maW5kKChlPT5cImh0dHA6Ly93d3cuaWV0Zi5vcmcvaWQvZHJhZnQtaG9sbWVyLXJtY2F0LXRyYW5zcG9ydC13aWRlLWNjLWV4dGVuc2lvbnMtMDFcIj09PWUuZXh0ZW5zaW9uTmFtZSkpO2lmKHQpe2UuYXR0cmlidXRlcy5leHRtYXBzLmZpbmQoKGU9PlwiaHR0cDovL3d3dy5pZXRmLm9yZy9pZC9kcmFmdC1ob2xtZXItcm1jYXQtdHJhbnNwb3J0LXdpZGUtY2MtZXh0ZW5zaW9ucy0wMVwiPT09ZS5leHRlbnNpb25OYW1lKSl8fGUuYXR0cmlidXRlcy5leHRtYXBzLnB1c2goe2VudHJ5OnQuZW50cnksZXh0ZW5zaW9uTmFtZTpcImh0dHA6Ly93d3cuaWV0Zi5vcmcvaWQvZHJhZnQtaG9sbWVyLXJtY2F0LXRyYW5zcG9ydC13aWRlLWNjLWV4dGVuc2lvbnMtMDFcIn0pO2NvbnN0IGk9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC5maWx0ZXIoKHQ9PiEhZS5maW5kKChlPT5lLnBheWxvYWRUeXBlPT09dC5wYXlsb2FkVHlwZSYmISFlLnJ0Y3BGZWVkYmFja3MuZmluZCgoZT0+XCJ0cmFuc3BvcnQtY2NcIj09PWUudHlwZSkpKSkpKX0ocixlLmF0dHJpYnV0ZXMucGF5bG9hZHMpO2kuZm9yRWFjaCgoZT0+e2UucnRjcEZlZWRiYWNrcy5maW5kKChlPT5cInRyYW5zcG9ydC1jY1wiPT09ZS50eXBlKSl8fGUucnRjcEZlZWRiYWNrcy5wdXNoKHt0eXBlOlwidHJhbnNwb3J0LWNjXCJ9KX0pKX19ZWxzZSBpZighMT09PXQudHdjYyl7Y29uc3QgdD1lLmF0dHJpYnV0ZXMuZXh0bWFwcy5maW5kSW5kZXgoKGU9PlwiaHR0cDovL3d3dy5pZXRmLm9yZy9pZC9kcmFmdC1ob2xtZXItcm1jYXQtdHJhbnNwb3J0LXdpZGUtY2MtZXh0ZW5zaW9ucy0wMVwiPT09ZS5leHRlbnNpb25OYW1lKSk7LTEhPT10JiZlLmF0dHJpYnV0ZXMuZXh0bWFwcy5zcGxpY2UodCwxKSxlLmF0dHJpYnV0ZXMucGF5bG9hZHMuZm9yRWFjaCgoZT0+e2NvbnN0IHQ9ZS5ydGNwRmVlZGJhY2tzLmZpbmRJbmRleCgoZT0+XCJ0cmFuc3BvcnQtY2NcIj09PWUudHlwZSkpOy0xIT09dCYmZS5ydGNwRmVlZGJhY2tzLnNwbGljZSh0LDEpfSkpfWlmKCEwPT09dC5yZW1iKXtjb25zdCB0PW4uZmluZCgoZT0+XCJodHRwOi8vd3d3LndlYnJ0Yy5vcmcvZXhwZXJpbWVudHMvcnRwLWhkcmV4dC9hYnMtc2VuZC10aW1lXCI9PT1lLmV4dGVuc2lvbk5hbWUpKTtpZih0KXtlLmF0dHJpYnV0ZXMuZXh0bWFwcy5maW5kKChlPT5cImh0dHA6Ly93d3cud2VicnRjLm9yZy9leHBlcmltZW50cy9ydHAtaGRyZXh0L2Ficy1zZW5kLXRpbWVcIj09PWUuZXh0ZW5zaW9uTmFtZSkpfHxlLmF0dHJpYnV0ZXMuZXh0bWFwcy5wdXNoKHtlbnRyeTp0LmVudHJ5LGV4dGVuc2lvbk5hbWU6XCJodHRwOi8vd3d3LndlYnJ0Yy5vcmcvZXhwZXJpbWVudHMvcnRwLWhkcmV4dC9hYnMtc2VuZC10aW1lXCJ9KTtjb25zdCBpPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQuZmlsdGVyKCh0PT4hIWUuZmluZCgoZT0+ZS5wYXlsb2FkVHlwZT09PXQucGF5bG9hZFR5cGUmJiEhZS5ydGNwRmVlZGJhY2tzLmZpbmQoKGU9PlwiZ29vZy1yZW1iXCI9PT1lLnR5cGUpKSkpKSl9KHIsZS5hdHRyaWJ1dGVzLnBheWxvYWRzKTtpLmZvckVhY2goKGU9PntlLnJ0Y3BGZWVkYmFja3MuZmluZCgoZT0+XCJnb29nLXJlbWJcIj09PWUudHlwZSkpfHxlLnJ0Y3BGZWVkYmFja3MucHVzaCh7dHlwZTpcImdvb2ctcmVtYlwifSl9KSl9fWVsc2UgaWYoITE9PT10LnJlbWIpe2NvbnN0IHQ9ZS5hdHRyaWJ1dGVzLmV4dG1hcHMuZmluZEluZGV4KChlPT5cImh0dHA6Ly93d3cud2VicnRjLm9yZy9leHBlcmltZW50cy9ydHAtaGRyZXh0L2Ficy1zZW5kLXRpbWVcIj09PWUuZXh0ZW5zaW9uTmFtZSkpOy0xIT09dCYmZS5hdHRyaWJ1dGVzLmV4dG1hcHMuc3BsaWNlKHQsMSksZS5hdHRyaWJ1dGVzLnBheWxvYWRzLmZvckVhY2goKGU9Pntjb25zdCB0PWUucnRjcEZlZWRiYWNrcy5maW5kSW5kZXgoKGU9PlwiZ29vZy1yZW1iXCI9PT1lLnR5cGUpKTstMSE9PXQmJmUucnRjcEZlZWRiYWNrcy5zcGxpY2UodCwxKX0pKX19ZnVuY3Rpb24gZXgoZSx0LGkpe2lmKFp2KCkpcmV0dXJuO2lmKFwidmlkZW9cIiE9PWUubWVkaWEubWVkaWFUeXBlKXJldHVybjtpZighKHQgaW5zdGFuY2VvZiBhVSkpcmV0dXJuO2lmKFwidnA5XCIhPT1pJiZcInZwOFwiIT09aSlyZXR1cm47aWYoXCJ2cDhcIj09PWkmJiFYQShcIlNJTVVMQ0FTVFwiKSlyZXR1cm47aWYoXCJ2cDlcIj09PWkmJlhBKFwiRU5BQkxFX1NWQ1wiKSlyZXR1cm47aWYodm9pZCAwPT09dC5fc2NhbGFiaWxpdHlNb2RlfHx0Ll9zY2FsYWJpbGl0eU1vZGUubnVtU3BhdGlhbExheWVyczw9MSlyZXR1cm47Y29uc3Qgbj1cInZwOFwiPT09aT8yOnQuX3NjYWxhYmlsaXR5TW9kZS5udW1TcGF0aWFsTGF5ZXJzLHI9ZS5hdHRyaWJ1dGVzLnNzcmNzWzBdLG89ZS5hdHRyaWJ1dGVzLnNzcmNHcm91cHMuZmluZCgoZT0+XCJGSURcIj09PWUuc2VtYW50aWMmJmUuc3NyY0lkc1swXT09PXIuc3NyY0lkKSkscz17c2VtYW50aWM6XCJTSU1cIixzc3JjSWRzOltyLnNzcmNJZF19O2ZvcihsZXQgdD0xO3Q8bjt0KyspZS5hdHRyaWJ1dGVzLnNzcmNzLnB1c2goe3NzcmNJZDpyLnNzcmNJZCt0LGF0dHJpYnV0ZXM6c0Eoci5hdHRyaWJ1dGVzKX0pLHMuc3NyY0lkcy5wdXNoKHIuc3NyY0lkK3QpLG8mJihlLmF0dHJpYnV0ZXMuc3NyY3MucHVzaCh7c3NyY0lkOm8uc3NyY0lkc1sxXSt0LGF0dHJpYnV0ZXM6c0Eoci5hdHRyaWJ1dGVzKX0pLGUuYXR0cmlidXRlcy5zc3JjR3JvdXBzLnB1c2goe3NlbWFudGljOlwiRklEXCIsc3NyY0lkczpbci5zc3JjSWQrdCxvLnNzcmNJZHNbMV0rdF19KSk7ZS5hdHRyaWJ1dGVzLnNzcmNHcm91cHMudW5zaGlmdChzKX1hc3luYyBmdW5jdGlvbiB0eCgpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fTtjb25zdCBpPW5ldyBSVENQZWVyQ29ubmVjdGlvbjtpLmFkZFRyYW5zY2VpdmVyKFwidmlkZW9cIix7ZGlyZWN0aW9uOlwic2VuZG9ubHlcIn0pLGkuYWRkVHJhbnNjZWl2ZXIoXCJhdWRpb1wiLHtkaXJlY3Rpb246XCJzZW5kb25seVwifSksaS5hZGRUcmFuc2NlaXZlcihcInZpZGVvXCIse2RpcmVjdGlvbjpcInJlY3Zvbmx5XCJ9KSxpLmFkZFRyYW5zY2VpdmVyKFwiYXVkaW9cIix7ZGlyZWN0aW9uOlwicmVjdm9ubHlcIn0pO2NvbnN0IG49KGF3YWl0IGkuY3JlYXRlT2ZmZXIoKSkuc2RwLHtzZW5kOnIscmVjdjpvLHNlbmRyZWN2OnN9PWZ1bmN0aW9uKCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9LGk9YXJndW1lbnRzLmxlbmd0aD4yP2FyZ3VtZW50c1syXTp2b2lkIDA7Y29uc3Qgbj1XVShpLGUsdCxcInNlbmRvbmx5XCIpLHI9V1UoaSxlLHQsXCJyZWN2b25seVwiKSxvPXthdWRpb0NvZGVjczpbXSxhdWRpb0V4dGVuc2lvbnM6W10sdmlkZW9Db2RlY3M6W10sdmlkZW9FeHRlbnNpb25zOltdfSxzPXthdWRpb0NvZGVjczpbXSxhdWRpb0V4dGVuc2lvbnM6W10sdmlkZW9Db2RlY3M6W10sdmlkZW9FeHRlbnNpb25zOltdfSxhPXthdWRpb0NvZGVjczpbXSxhdWRpb0V4dGVuc2lvbnM6W10sdmlkZW9Db2RlY3M6W10sdmlkZW9FeHRlbnNpb25zOltdfTtpZihueChuLHIsXCJ2aWRlb0V4dGVuc2lvbnNcIixvLHMsYSksbngobixyLFwidmlkZW9Db2RlY3NcIixvLHMsYSksbngobixyLFwiYXVkaW9FeHRlbnNpb25zXCIsbyxzLGEpLG54KG4scixcImF1ZGlvQ29kZWNzXCIsbyxzLGEpLFhBKFwiUkFJU0VfSDI2NF9CQVNFTElORV9QUklPUklUWVwiKSl7Y29uc3QgZT1hLnZpZGVvQ29kZWNzLmZpbmRJbmRleCgoZT0+e3ZhciB0LGk7cmV0dXJuXCJoMjY0XCI9PT0obnVsbD09PSh0PWUucnRwTWFwKXx8dm9pZCAwPT09dD92b2lkIDA6dC5lbmNvZGluZ05hbWUudG9Mb2NhbGVMb3dlckNhc2UoKSkmJlwiNDIwMDFmXCI9PT0obnVsbD09PShpPWUuZm10cCl8fHZvaWQgMD09PWk/dm9pZCAwOmkucGFyYW1ldGVyc1tcInByb2ZpbGUtbGV2ZWwtaWRcIl0pfSkpO2lmKC0xIT09ZSl7Y29uc3QgdD1hLnZpZGVvQ29kZWNzLmZpbmRJbmRleCgoZT0+e3ZhciB0O3JldHVyblwiaDI2NFwiPT09KG51bGw9PT0odD1lLnJ0cE1hcCl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuZW5jb2RpbmdOYW1lLnRvTG9jYWxlTG93ZXJDYXNlKCkpfSkpO2lmKHQ8ZSl7ZmIuZGVidWcoXCJyYWlzaW5nIEgyNjQgYmFzZWxpbmUgcHJvZmlsZSBwcmlvcml0eVwiKTtjb25zdCBpPWEudmlkZW9Db2RlY3NbZV07YS52aWRlb0NvZGVjcy5zcGxpY2UoZSwxKSxhLnZpZGVvQ29kZWNzLnNwbGljZSh0LDAsaSl9LTEhPT10JiYocy52aWRlb0NvZGVjcz1zLnZpZGVvQ29kZWNzLmZpbHRlcigoZT0+e3ZhciB0LGk7cmV0dXJuIShcImgyNjRcIj09PShudWxsPT09KHQ9ZS5ydHBNYXApfHx2b2lkIDA9PT10P3ZvaWQgMDp0LmVuY29kaW5nTmFtZS50b0xvY2FsZUxvd2VyQ2FzZSgpKSYmXCI0MjAwMWZcIiE9PShudWxsPT09KGk9ZS5mbXRwKXx8dm9pZCAwPT09aT92b2lkIDA6aS5wYXJhbWV0ZXJzW1wicHJvZmlsZS1sZXZlbC1pZFwiXSkpfSkpKSwtMSE9PXQmJlhBKFwiRklMVEVSX1NFTkRfSDI2NF9CQVNFTElORVwiKSYmKG8udmlkZW9Db2RlY3M9by52aWRlb0NvZGVjcy5maWx0ZXIoKGU9Pnt2YXIgdCxpO3JldHVybiEoXCJoMjY0XCI9PT0obnVsbD09PSh0PWUucnRwTWFwKXx8dm9pZCAwPT09dD92b2lkIDA6dC5lbmNvZGluZ05hbWUudG9Mb2NhbGVMb3dlckNhc2UoKSkmJlwiNDIwMDFmXCIhPT0obnVsbD09PShpPWUuZm10cCl8fHZvaWQgMD09PWk/dm9pZCAwOmkucGFyYW1ldGVyc1tcInByb2ZpbGUtbGV2ZWwtaWRcIl0pKX0pKSl9fXJldHVybntzZW5kOm8scmVjdjpzLHNlbmRyZWN2OmF9fShlLHQsbik7dHJ5e2kuY2xvc2UoKX1jYXRjaChlKXt9cmV0dXJue3NlbmQ6cixyZWN2Om8sc2VuZHJlY3Y6c319ZnVuY3Rpb24gaXgoKXtjb25zdCBlPXthdWRpb0NvZGVjczpbXSx2aWRlb0NvZGVjczpbXSxhdWRpb0V4dGVuc2lvbnM6W10sdmlkZW9FeHRlbnNpb25zOltdfSx0PVdVKGFyZ3VtZW50cy5sZW5ndGg+Mj9hcmd1bWVudHNbMl06dm9pZCAwLGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSxhcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e30sXCJyZWN2b25seVwiKSxpPXthdWRpb0NvZGVjczpbXSxhdWRpb0V4dGVuc2lvbnM6W10sdmlkZW9Db2RlY3M6W10sdmlkZW9FeHRlbnNpb25zOltdfSxuPXthdWRpb0NvZGVjczpbXSxhdWRpb0V4dGVuc2lvbnM6W10sdmlkZW9Db2RlY3M6W10sdmlkZW9FeHRlbnNpb25zOltdfSxyPXthdWRpb0NvZGVjczpbXSxhdWRpb0V4dGVuc2lvbnM6W10sdmlkZW9Db2RlY3M6W10sdmlkZW9FeHRlbnNpb25zOltdfTtpZihueChlLHQsXCJ2aWRlb0V4dGVuc2lvbnNcIixpLG4sciksbngoZSx0LFwidmlkZW9Db2RlY3NcIixpLG4sciksbngoZSx0LFwiYXVkaW9FeHRlbnNpb25zXCIsaSxuLHIpLG54KGUsdCxcImF1ZGlvQ29kZWNzXCIsaSxuLHIpLFhBKFwiUkFJU0VfSDI2NF9CQVNFTElORV9QUklPUklUWVwiKSl7Y29uc3QgZT1yLnZpZGVvQ29kZWNzLmZpbmRJbmRleCgoZT0+ZS5ydHBNYXAmJlwiaDI2NFwiPT09ZS5ydHBNYXAuZW5jb2RpbmdOYW1lLnRvTG9jYWxlTG93ZXJDYXNlKCkmJmUuZm10cCYmXCI0MjAwMWZcIj09PWUuZm10cC5wYXJhbWV0ZXJzW1wicHJvZmlsZS1sZXZlbC1pZFwiXSkpO2lmKC0xIT09ZSl7Y29uc3QgdD1yLnZpZGVvQ29kZWNzLmZpbmRJbmRleCgoZT0+ZS5ydHBNYXAmJlwiaDI2NFwiPT09ZS5ydHBNYXAuZW5jb2RpbmdOYW1lLnRvTG9jYWxlTG93ZXJDYXNlKCkpKTtpZih0PGUpe2ZiLmRlYnVnKFwicmFpc2luZyBIMjY0IGJhc2VsaW5lIHByb2ZpbGUgcHJpb3JpdHlcIik7Y29uc3QgaT1yLnZpZGVvQ29kZWNzW2VdO3IudmlkZW9Db2RlY3Muc3BsaWNlKGUsMSksci52aWRlb0NvZGVjcy5zcGxpY2UodCwwLGkpfS0xIT09dCYmKG4udmlkZW9Db2RlY3M9bi52aWRlb0NvZGVjcy5maWx0ZXIoKGU9PiEoZS5ydHBNYXAmJlwiaDI2NFwiPT09ZS5ydHBNYXAuZW5jb2RpbmdOYW1lLnRvTG9jYWxlTG93ZXJDYXNlKCkmJmUuZm10cCYmXCI0MjAwMWZcIiE9PWUuZm10cC5wYXJhbWV0ZXJzW1wicHJvZmlsZS1sZXZlbC1pZFwiXSkpKSl9fXJldHVybntzZW5kOmkscmVjdjpuLHNlbmRyZWN2OnJ9fWZ1bmN0aW9uIG54KGUsdCxpLG4scixvKXtpZihcInZpZGVvRXh0ZW5zaW9uc1wiPT09aXx8XCJhdWRpb0V4dGVuc2lvbnNcIj09PWkpe2NvbnN0IHM9W107cmV0dXJuIGVbaV0uZm9yRWFjaCgoZT0+e3RbaV0uc29tZSgoKHQsaSk9PntpZihlLmVudHJ5PT09dC5lbnRyeSYmZS5leHRlbnNpb25OYW1lPT09dC5leHRlbnNpb25OYW1lKXJldHVybiBzLnB1c2goaSksITB9KSk/b1tpXS5wdXNoKGUpOm5baV0ucHVzaChlKX0pKSx2b2lkIHRbaV0uZm9yRWFjaCgoKGUsdCk9PnstMT09PXMuaW5kZXhPZih0KSYmcltpXS5wdXNoKGUpfSkpfWlmKFwidmlkZW9Db2RlY3NcIj09PWl8fFwiYXVkaW9Db2RlY3NcIj09PWkpe2NvbnN0IHM9W107cmV0dXJuIGVbaV0uZm9yRWFjaCgoZT0+e3RbaV0uc29tZSgoKHQsaSk9PntpZihlLnBheWxvYWRUeXBlPT09dC5wYXlsb2FkVHlwZSYmSlNPTi5zdHJpbmdpZnkoZSk9PT1KU09OLnN0cmluZ2lmeSh0KSlyZXR1cm4gcy5wdXNoKGkpLCEwfSkpP29baV0ucHVzaChlKTpuW2ldLnB1c2goZSl9KSksdm9pZCB0W2ldLmZvckVhY2goKChlLHQpPT57LTE9PT1zLmluZGV4T2YodCkmJnJbaV0ucHVzaChlKX0pKX19ZnVuY3Rpb24gcngoZSl7Y29uc3R7c2VuZDp0LHJlY3Y6aSxzZW5kcmVjdjpufT1lO2lmKCFuKXtpZighdHx8IWkpdGhyb3cgbmV3IEVycm9yKFwiY2Fubm90IG1lcmdlIHJ0cCBjYXBhYmlsaXRpZXMgYmVjYXVzZSBvbmUgb2Ygc2VuZCBvciByZWN2IGlzIGVtcHR5IVwiKTtyZXR1cm57c2VuZDp0LHJlY3Y6aX19bGV0IHIsbztyZXR1cm4gdD8ocj17YXVkaW9Db2RlY3M6W10sYXVkaW9FeHRlbnNpb25zOltdLHZpZGVvQ29kZWNzOltdLHZpZGVvRXh0ZW5zaW9uczpbXX0sci5hdWRpb0NvZGVjcz1bLi4udC5hdWRpb0NvZGVjcywuLi5uLmF1ZGlvQ29kZWNzXSxyLnZpZGVvQ29kZWNzPVsuLi50LnZpZGVvQ29kZWNzLC4uLm4udmlkZW9Db2RlY3NdLHIuYXVkaW9FeHRlbnNpb25zPVsuLi50LmF1ZGlvRXh0ZW5zaW9ucywuLi5uLmF1ZGlvRXh0ZW5zaW9uc10sci52aWRlb0V4dGVuc2lvbnM9Wy4uLnQudmlkZW9FeHRlbnNpb25zLC4uLm4udmlkZW9FeHRlbnNpb25zXSk6cj1uLGk/KG89e2F1ZGlvQ29kZWNzOltdLGF1ZGlvRXh0ZW5zaW9uczpbXSx2aWRlb0NvZGVjczpbXSx2aWRlb0V4dGVuc2lvbnM6W119LG8uYXVkaW9Db2RlY3M9Wy4uLmkuYXVkaW9Db2RlY3MsLi4ubi5hdWRpb0NvZGVjc10sby52aWRlb0NvZGVjcz1bLi4uaS52aWRlb0NvZGVjcywuLi5uLnZpZGVvQ29kZWNzXSxvLmF1ZGlvRXh0ZW5zaW9ucz1bLi4uaS5hdWRpb0V4dGVuc2lvbnMsLi4ubi5hdWRpb0V4dGVuc2lvbnNdLG8udmlkZW9FeHRlbnNpb25zPVsuLi5pLnZpZGVvRXh0ZW5zaW9ucywuLi5uLnZpZGVvRXh0ZW5zaW9uc10pOm89bix7c2VuZDpyLHJlY3Y6b319ZnVuY3Rpb24gb3goZSl7aWYoXCJhdWRpb1wiIT09ZS5tZWRpYS5tZWRpYVR5cGUpcmV0dXJuO2UuYXR0cmlidXRlcy5wYXlsb2Fkcy5maWx0ZXIoKGU9Pnt2YXIgdDtyZXR1cm5cIm9wdXNcIj09PShudWxsPT09KHQ9ZS5ydHBNYXApfHx2b2lkIDA9PT10P3ZvaWQgMDp0LmVuY29kaW5nTmFtZS50b0xvd2VyQ2FzZSgpKX0pKS5mb3JFYWNoKChlPT57ZS5mbXRwfHwoZS5mbXRwPXtwYXJhbWV0ZXJzOnt9fSksZS5mbXRwLnBhcmFtZXRlcnMuc3RlcmVvPVwiMVwiLGUuZm10cC5wYXJhbWV0ZXJzW1wic3Byb3Atc3RlcmVvXCJdPVwiMVwifSkpfWZ1bmN0aW9uIHN4KGUsdCxpLG4pe2xldCByPVtdO2lmKGU9PT1kTy5WSURFTyl7aWYoWEEoXCJIMjY0X1BST0ZJTEVfTEVWRUxfSURcIikmJlwiaDI2NFwiPT09biYmKHI9dC52aWRlb0NvZGVjcy5maWx0ZXIoKGU9Pnt2YXIgdDtyZXR1cm4gRG4odD1lLnJ0cE1hcCYmZS5ydHBNYXAuZW5jb2RpbmdOYW1lLnRvTG93ZXJDYXNlKCl8fFwiXCIpLmNhbGwodCxuKSYmZSYmZS5mbXRwJiZlLmZtdHAucGFyYW1ldGVyc1tcInByb2ZpbGUtbGV2ZWwtaWRcIl09PT1YQShcIkgyNjRfUFJPRklMRV9MRVZFTF9JRFwiKX0pKSksIUFycmF5LmlzQXJyYXkocil8fDA9PT1yLmxlbmd0aCl7bGV0IGU9W107Y29uc3Qgbz1bXSxzPVtdLGE9W107aWYoaS52aWRlb0NvZGVjcy5mb3JFYWNoKCh0PT57Y29uc3QgaT10LnJ0cE1hcCYmdC5ydHBNYXAuZW5jb2RpbmdOYW1lLnRvTG93ZXJDYXNlKCl8fFwiXCI7RG4oaSkuY2FsbChpLG4pP2UucHVzaCh0KTpEbihpKS5jYWxsKGksXCJ2cDlcIik/by5wdXNoKHQpOkRuKGkpLmNhbGwoaSxcInZwOFwiKT9zLnB1c2godCk6RG4oaSkuY2FsbChpLFwiaDI2NFwiKSYmYS5wdXNoKHQpfSkpLDA9PT1lLmxlbmd0aCl7bGV0IHQ9XCJcIjswIT09by5sZW5ndGg/KGU9byx0PVwidnA5XCIpOjAhPT1zLmxlbmd0aD8oZT1zLHQ9XCJ2cDhcIik6MCE9PWEubGVuZ3RoJiYoZT1hLHQ9XCJoMjY0XCIpLGZiLndhcm5pbmcoXCJjb2RlYyBcIi5jb25jYXQobixcIiBub3QgaW5jbHVkZWQgaW4gcnRwQ2FwYWJpbGl0aWVzLCBmYWxsYmFjayB0byBkZWZhdWx0IHBheWxvYWRzOiBcIikuY29uY2F0KHQpKX0wIT09ZS5sZW5ndGgmJihyPXQudmlkZW9Db2RlY3MuZmlsdGVyKCh0PT5lLnNvbWUoKGU9PmUucGF5bG9hZFR5cGU9PT10LnBheWxvYWRUeXBlKSkpKSl9aWYoMD09PXIubGVuZ3RoJiYoZmIud2FybmluZyhcImNvZGVjIFwiLmNvbmNhdChuLFwiIG5vdCBpbmNsdWRlZCBpbiBydHBDYXBhYmlsaXRpZXMsIGZhbGxiYWNrIHRvIGRlZmF1bHQgcGF5bG9hZHM6IFwiKS5jb25jYXQodC52aWRlb0NvZGVjc1swXS5ydHBNYXAmJnQudmlkZW9Db2RlY3NbMF0ucnRwTWFwLmVuY29kaW5nTmFtZSkpLHI9dC52aWRlb0NvZGVjcyksWEEoXCJVU0VfUFVCX1JUWFwiKXx8WEEoXCJVU0VfU1VCX1JUWFwiKSl7Y29uc3QgZT1heChyLHQudmlkZW9Db2RlY3MpO3I9Wy4uLnIsLi4uZV19fWVsc2Ugcj10LmF1ZGlvQ29kZWNzLmZpbHRlcigoZT0+e3ZhciB0O3JldHVybiBEbih0PWUucnRwTWFwJiZlLnJ0cE1hcC5lbmNvZGluZ05hbWUudG9Mb3dlckNhc2UoKXx8XCJcIikuY2FsbCh0LG4pfSkpLDA9PT1yLmxlbmd0aCYmKGZiLndhcm5pbmcoXCJjb2RlYyBcIi5jb25jYXQobixcIiBub3QgaW5jbHVkZWQgaW4gcnRwQ2FwYWJpbGl0aWVzLCBmYWxsYmFjayB0byBvcHVzXCIpKSxyPXQuYXVkaW9Db2RlY3MuZmlsdGVyKChlPT57dmFyIHQ7cmV0dXJuIERuKHQ9ZS5ydHBNYXAmJmUucnRwTWFwLmVuY29kaW5nTmFtZS50b0xvd2VyQ2FzZSgpfHxcIlwiKS5jYWxsKHQsXCJvcHVzXCIpfSkpKTtyZXR1cm4gcn1mdW5jdGlvbiBheChlLHQpe2NvbnN0IGk9ZS5tYXAoKGU9PmUucGF5bG9hZFR5cGUudG9TdHJpbmcoKSkpO3JldHVybiB0LmZpbHRlcigoZT0+ZS5ydHBNYXAmJlwicnR4XCI9PT1lLnJ0cE1hcC5lbmNvZGluZ05hbWUmJmUuZm10cCYmZS5mbXRwLnBhcmFtZXRlcnMuYXB0JiZEbihpKS5jYWxsKGksZS5mbXRwJiZlLmZtdHAucGFyYW1ldGVycy5hcHQpKSl9YXN5bmMgZnVuY3Rpb24gY3goZSx0LGkpe2NvbnN0IG49dC50b1N0cmluZygpLHI9bHgobixcIm9mZmVyXCIsXCJyZW1vdGVcIixcImV4Y2hhbmdlU0RQXCIpO2F3YWl0IGUuc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJvZmZlclwiLHNkcDpufSk7Y29uc3Qgbz1hd2FpdCBlLmNyZWF0ZUFuc3dlcigpO2lmKCFvLnNkcCl0aHJvdyBuZXcgRXJyb3IoXCJjYW5ub3QgZ2V0IGFuc3dlciBzZHBcIik7bGV0IHM9by5zZHA7cz1keChzLGl8fHt9KSxudWxsPT1yfHxyKHN8fFwiXCIpLGF3YWl0IGUuc2V0TG9jYWxEZXNjcmlwdGlvbih7dHlwZTpcImFuc3dlclwiLHNkcDpzfSl9ZnVuY3Rpb24gZHgoZSx0LGkpe2NvbnN0IG49RlUucGFyc2UoZSkse3VzZVhSOnJ9PXQ7cmV0dXJuIG4ubWVkaWFEZXNjcmlwdGlvbnMuZm9yRWFjaCgoZT0+e3ZhciB0O2UuYXR0cmlidXRlcy5taWQmJihBcnJheS5pc0FycmF5KGkpJiYhRG4oaSkuY2FsbChpLGUuYXR0cmlidXRlcy5taWQpfHwoXCJhdWRpb1wiPT09ZS5tZWRpYS5tZWRpYVR5cGUmJm94KGUpLHImJkRuKHQ9W1wiYXVkaW9cIixcInZpZGVvXCJdKS5jYWxsKHQsZS5tZWRpYS5tZWRpYVR5cGUpJiZlLmF0dHJpYnV0ZXMucGF5bG9hZHMuZm9yRWFjaCgoZT0+ey0xPT09ZS5ydGNwRmVlZGJhY2tzLmZpbmRJbmRleCgoZT0+XCJycnRyXCI9PT1lLnR5cGUpKSYmZS5ydGNwRmVlZGJhY2tzLnB1c2goe3R5cGU6XCJycnRyXCJ9KX0pKSkpfSkpLEZVLnByaW50KG4pfWZ1bmN0aW9uIGx4KGUsdCxpLG4pe2lmKFhBKFwiU0RQX0xPR0dJTkdcIikpcmV0dXJuIGZiLnVwbG9hZChcImV4Y2hhbmdpbmcgXCIuY29uY2F0KGksXCIgXCIpLmNvbmNhdCh0LFwiIFNEUCBkdXJpbmcgUDJQQ29ubmVjdGlvbi5cIikuY29uY2F0KG4sXCJcXG5cIiksZSksXCJvZmZlclwiPT09dD9lPT57bHgoZSxcImFuc3dlclwiLFwibG9jYWxcIj09PWk/XCJyZW1vdGVcIjpcImxvY2FsXCIsbil9OnZvaWQgMH1mdW5jdGlvbiB1eChlLHQpe3JldHVybiB0eXBlb2YgWEEoZSk9PT10P1hBKGUpOnZvaWQgMH1mdW5jdGlvbiBoeChlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gcHgoZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/aHgoT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6aHgoT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9Y29uc3QgX3g9bmV3IE1hcDtjbGFzcyBFeCBleHRlbmRzIHh5e2dldCBzdGF0ZSgpe3JldHVybiB0aGlzLl9zdGF0ZX1zZXQgc3RhdGUoZSl7aWYoZT09PXRoaXMuX3N0YXRlKXJldHVybjtjb25zdCB0PXRoaXMuX3N0YXRlO3RoaXMuX3N0YXRlPWUsXCJESVNDT05ORUNURURcIj09PWUmJnRoaXMuX2Rpc2Nvbm5lY3RlZFJlYXNvbj90aGlzLmVtaXQoJHcuQ09OTkVDVElPTl9TVEFURV9DSEFOR0UsZSx0LHRoaXMuX2Rpc2Nvbm5lY3RlZFJlYXNvbik6dGhpcy5lbWl0KCR3LkNPTk5FQ1RJT05fU1RBVEVfQ0hBTkdFLGUsdCl9Z2V0IGpvaW5HYXRld2F5U3RhcnRUaW1lKCl7cmV0dXJuIHRoaXMuX2pvaW5HYXRld2F5U3RhcnRUaW1lfXNldCBqb2luR2F0ZXdheVN0YXJ0VGltZShlKXtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gc2V0IGpvaW5HYXRld2F5U3RhcnRUaW1lIGF0IFwiKS5jb25jYXQoZSkpLHRoaXMuX2pvaW5HYXRld2F5U3RhcnRUaW1lPWV9Y29uc3RydWN0b3IoZSx0KXtzdXBlcigpLEZnKHRoaXMsXCJzdG9yZVwiLHZvaWQgMCksRmcodGhpcyxcImpvaW5JbmZvXCIsdm9pZCAwKSxGZyh0aGlzLFwia2V5XCIsdm9pZCAwKSxGZyh0aGlzLFwibnRwT2Zmc2V0XCIsMCksRmcodGhpcyxcInNpZ25hbFwiLHZvaWQgMCksRmcodGhpcyxcInJvbGVcIix2b2lkIDApLEZnKHRoaXMsXCJpbkNoYW5uZWxJbmZvXCIse2pvaW5BdDpudWxsLGR1cmF0aW9uOjB9KSxGZyh0aGlzLFwic3BlY1wiLHZvaWQgMCksRmcodGhpcyxcIl9zdGF0ZVwiLFwiRElTQ09OTkVDVEVEXCIpLEZnKHRoaXMsXCJfc3RhdHNDb2xsZWN0b3JcIix2b2lkIDApLEZnKHRoaXMsXCJfZGlzY29ubmVjdGVkUmVhc29uXCIsdm9pZCAwKSxGZyh0aGlzLFwiaXNTaWduYWxSZWNvdmVyXCIsITEpLEZnKHRoaXMsXCJoYXNDaGFuZ2VCR1BBZGRyZXNzXCIsITEpLEZnKHRoaXMsXCJ0cmFmZmljU3RhdHNJbnRlcnZhbFwiLHZvaWQgMCksRmcodGhpcyxcIm5ldHdvcmtRdWFsaXR5SW50ZXJ2YWxcIix2b2lkIDApLEZnKHRoaXMsXCJfam9pbkdhdGV3YXlTdGFydFRpbWVcIiwwKSxGZyh0aGlzLFwiX3NpZ25hbFRpbWVvdXRcIiwhMSksRmcodGhpcyxcIl9jbGllbnRSb2xlT3B0aW9uc1wiLHZvaWQgMCksRmcodGhpcyxcIl9pc1Byb2FjdGl2ZUpvaW5cIiwhMSksdGhpcy5zdG9yZT1lLHRoaXMuc3BlYz10LHRoaXMuc2lnbmFsPXRoaXMuc3RvcmUudXNlUDJQP25ldyB4VShweChweCh7fSx0KSx7fSx7cmV0cnlDb25maWc6dC53ZWJzb2NrZXRSZXRyeUNvbmZpZ30pLGUpOm5ldyBLTyhweChweCh7fSx0KSx7fSx7cmV0cnlDb25maWc6dC53ZWJzb2NrZXRSZXRyeUNvbmZpZ30pLGUpLHRoaXMuX3N0YXRzQ29sbGVjdG9yPXQuc3RhdHNDb2xsZWN0b3IsdGhpcy5yb2xlPXQucm9sZXx8XCJhdWRpZW5jZVwiLHRoaXMuX2NsaWVudFJvbGVPcHRpb25zPXQuY2xpZW50Um9sZU9wdGlvbnMsdGhpcy5oYW5kbGVTaWduYWxFdmVudHMoKX1hc3luYyBqb2luKGUsdCxpKXt0aGlzLnN0b3JlLmpvaW5HYXRld2F5U3RhcnQoKSxcImRpc2FibGVkXCIhPT1lLmNsb3VkUHJveHlTZXJ2ZXImJih0aGlzLmhhc0NoYW5nZUJHUEFkZHJlc3M9ITApO2NvbnN0IG49RGF0ZS5ub3coKTtsZXQgcj1feC5nZXQoZS5jbmFtZSk7aWYocnx8KHI9bmV3IE1hcCxfeC5zZXQoZS5jbmFtZSxyKSksdGhpcy5faXNQcm9hY3RpdmVKb2luPSEwLHIuaGFzKGUudWlkKSl7Y29uc3QgdD1uZXcgeWIoUnkuVUlEX0NPTkZMSUNUKTt0aHJvdyB2Yi5qb2luR2F0ZXdheShlLnNpZCx7bHRzOm4sc3VjYzohMSxlYzp0LmNvZGUsYWRkcjpudWxsLHVpZDplLnVpZCxjaWQ6ZS5jaWQsZmlyc3RTdWNjZXNzOnRoaXMuX2lzUHJvYWN0aXZlSm9pbixhdm9pZEpvaW5TdGFydFRpbWU6dGhpcy5zdG9yZS5hdm9pZEpvaW5TdGFydCxpc1Byb3h5OiEhZS5wcm94eVNlcnZlcixzaWduYWxDaGFubmVsOlwiMFwiLHByZWxvYWQ6ZS5wcmVsb2FkfSksdGhpcy5faXNQcm9hY3RpdmVKb2luPSExLHR9ci5zZXQoZS51aWQsITApLHRoaXMuam9pbkluZm89ZSx0aGlzLmtleT10O2xldCBvPTA7dGhpcy5qb2luR2F0ZXdheVN0YXJ0VGltZT1uO2NvbnN0IHM9ZS5wcm94eVNlcnZlcjt0cnl7ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIHVzZSB3ZWJzb2NrZXQgam9pbiB1aWQgXCIpLmNvbmNhdChvKSk7Y29uc3QgdD1lLmdhdGV3YXlBZGRycy5tYXAoKHQ9PntsZXR7YWRkcmVzczppfT10O2NvbnN0W24scl09aS5zcGxpdChcIjpcIiksbz17aG9zdDpuLHBvcnQ6cn07cmV0dXJuIGUucHJveHlTZXJ2ZXImJihvLnByb3h5PWUucHJveHlTZXJ2ZXIpLG99KSk7bz0oYXdhaXQgdGhpcy5zaWduYWwuaW5pdCh0LGkpKS51aWQsZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIHdlYnNvY2tldCBqb2luIHVpZCBcIikuY29uY2F0KG8sXCIgY29zdCBcIikuY29uY2F0KERhdGUubm93KCktdGhpcy5qb2luR2F0ZXdheVN0YXJ0VGltZSkpfWNhdGNoKHQpe3ZhciBhO3Rocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBVc2VyIGpvaW4gZmFpbGVkXCIpLHQudG9TdHJpbmcoKSksdmIuam9pbkdhdGV3YXkoZS5zaWQse2x0czpuLHN1Y2M6ITEsZWM6KG51bGw9PT0oYT10LmRhdGEpfHx2b2lkIDA9PT1hP3ZvaWQgMDphLmRlc2MpfHx0LmNvZGUsZXJyb3JNc2c6dC5tZXNzYWdlLGFkZHI6dGhpcy5zaWduYWwudXJsLHVpZDplLnVpZCxjaWQ6ZS5jaWQsZmlyc3RTdWNjZXNzOnRoaXMuX2lzUHJvYWN0aXZlSm9pbixhdm9pZEpvaW5TdGFydFRpbWU6dGhpcy5zdG9yZS5hdm9pZEpvaW5TdGFydCxpc1Byb3h5OiEhcyxzaWduYWxDaGFubmVsOlwiMFwiLHByZWxvYWQ6ZS5wcmVsb2FkfSksdGhpcy5faXNQcm9hY3RpdmVKb2luPSExLHIuZGVsZXRlKGUudWlkKSx0aGlzLnNpZ25hbC5jbG9zZSgpLHR9cmV0dXJuIHRoaXMuc3RhdGU9XCJDT05ORUNURURcIix0aGlzLmluQ2hhbm5lbEluZm8uam9pbkF0PURhdGUubm93KCksZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIENvbm5lY3RlZCB0byBnYXRld2F5IHNlcnZlclwiKSksdGhpcy50cmFmZmljU3RhdHNJbnRlcnZhbD13aW5kb3cuc2V0SW50ZXJ2YWwoKCgpPT57dGhpcy51cGRhdGVUcmFmZmljU3RhdHMoKS5jYXRjaCgoZT0+e2ZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIGdldCB0cmFmZmljIHN0YXRzIGVycm9yXCIpLGUudG9TdHJpbmcoKSl9KSl9KSwzZTMpLHRoaXMubmV0d29ya1F1YWxpdHlJbnRlcnZhbD13aW5kb3cuc2V0SW50ZXJ2YWwoKCgpPT57bmF2aWdhdG9yJiZ2b2lkIDAhPT1uYXZpZ2F0b3Iub25MaW5lJiYhbmF2aWdhdG9yLm9uTGluZT90aGlzLmVtaXQoJHcuTkVUV09SS19RVUFMSVRZLHtkb3dubGlua05ldHdvcmtRdWFsaXR5OjYsdXBsaW5rTmV0d29ya1F1YWxpdHk6Nn0pOnRoaXMuX3NpZ25hbFRpbWVvdXQ/dGhpcy5lbWl0KCR3Lk5FVFdPUktfUVVBTElUWSx7ZG93bmxpbmtOZXR3b3JrUXVhbGl0eTo1LHVwbGlua05ldHdvcmtRdWFsaXR5OjV9KTpcIkNPTk5FQ1RFRFwiPT09dGhpcy5zdGF0ZSYmdGhpcy5fc3RhdHNDb2xsZWN0b3IudHJhZmZpY1N0YXRzP3RoaXMuZW1pdCgkdy5ORVRXT1JLX1FVQUxJVFkse3VwbGlua05ldHdvcmtRdWFsaXR5OiRPKHRoaXMuX3N0YXRzQ29sbGVjdG9yLnRyYWZmaWNTdGF0cy5CX3VucSksZG93bmxpbmtOZXR3b3JrUXVhbGl0eTokTyh0aGlzLl9zdGF0c0NvbGxlY3Rvci50cmFmZmljU3RhdHMuQl9kbnEpfSk6dGhpcy5lbWl0KCR3Lk5FVFdPUktfUVVBTElUWSx7dXBsaW5rTmV0d29ya1F1YWxpdHk6MCxkb3dubGlua05ldHdvcmtRdWFsaXR5OjB9KX0pLDJlMyksdGhpcy5zdG9yZS5qb2luR2F0ZXdheUVuZCgpLG99YXN5bmMgbGVhdmUoKXtsZXQgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXSYmYXJndW1lbnRzWzBdLHQ9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDA7aWYoXCJESVNDT05ORUNURURcIiE9PXRoaXMuc3RhdGUpe3QhPT1IeS5GQUxMQkFDSyYmKHRoaXMuc3RhdGU9XCJESVNDT05ORUNUSU5HXCIpO3RyeXtlfHx0aGlzLnNpZ25hbC5jb25uZWN0aW9uU3RhdGUhPT1Ody5DT05ORUNURUR8fGF3YWl0IGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQ9PT0xLzA/ZTpHaC5yYWNlKFtlLGZBKHQpXSl9KHRoaXMuc2lnbmFsLnJlcXVlc3QoUHcuTEVBVkUsdm9pZCAwLCEwKSwzZTMpfWNhdGNoKGUpe2ZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIGxlYXZlIHJlcXVlc3QgZmFpbGVkLCBpZ25vcmVcIiksZSl9dGhpcy5zaWduYWwuY2xvc2UodCksdCE9PUh5LkZBTExCQUNLJiYodGhpcy5zdGF0ZT1cIkRJU0NPTk5FQ1RFRFwiKSx0aGlzLnJlc2V0KCl9fWFzeW5jIHB1Ymxpc2goZSx0LGkpe2lmKFwiQ09OTkVDVEVEXCIhPT10aGlzLnN0YXRlJiZcIlJFQ09OTkVDVElOR1wiIT09dGhpcy5zdGF0ZSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJjYW4gbm90IHB1Ymxpc2ggd2hlbiBjb25uZWN0aW9uIHN0YXRlIGlzIFwiLmNvbmNhdCh0aGlzLnN0YXRlKSk7Y29uc3Qgbj17c3RhdGU6XCJvZmZlclwiLHAycF9pZDp0aGlzLnN0b3JlLnAycElkLG9ydGM6dCxtb2RlOnRoaXMuc3BlYy5tb2RlLGV4dGVuZDpYQShcIlBVQl9FWFRFTkRcIiksdHdjYzohIVhBKFwiUFVCTElTSF9UV0NDXCIpLHJ0eDohIVhBKFwiVVNFX1BVQl9SVFhcIil9O3RyeXtyZXR1cm4oYXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChQdy5QVUJMSVNILG4sITApKS5fbWVzc2FnZX1jYXRjaChuKXtpZihpJiZuLmRhdGEmJm4uZGF0YS5jb2RlPT09T3cuRVJSX1BVQkxJU0hfUkVRVUVTVF9JTlZBTElEKXJldHVybiBmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSByZWNlaXZlIHB1Ymxpc2ggZXJyb3IgY29kZSwgcmV0cnlcIiksbi50b1N0cmluZygpKSxhd2FpdCB0aGlzLnRyeVVucHViQmVmb3JlUmVwdWIoZSx0KSx0aGlzLnB1Ymxpc2goZSx0LCExKTt0aHJvdyBufX1hc3luYyBwdWJsaXNoRGF0YUNoYW5uZWwoZSx0LGkpe3ZhciBuO2lmKFwiQ09OTkVDVEVEXCIhPT10aGlzLnN0YXRlJiZcIlJFQ09OTkVDVElOR1wiIT09dGhpcy5zdGF0ZSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJjYW4gbm90IHB1Ymxpc2ggd2hlbiBjb25uZWN0aW9uIHN0YXRlIGlzIFwiLmNvbmNhdCh0aGlzLnN0YXRlKSk7Y29uc3Qgcj17c3RyZWFtX2lkOnQuc3RyZWFtSWQsb3JkZXJlZDp0Lm9yZGVyZWQ/MTowLG1heF9yZXRyYW5zX3RpbWVzOm51bGwhPT0obj10Lm1heFJldHJhbnNtaXRzKSYmdm9pZCAwIT09bj9uOjEwLGNoYW5uZWxfaWQ6dC5jaGFubmVsSWQsbWV0YWRhdGE6dC5tZXRhZGF0YX07dHJ5e2F3YWl0IHRoaXMuc2lnbmFsLnJlcXVlc3QoUHcuUFVCTElTSF9EQVRBU1RSRUFNLHIsITApfWNhdGNoKG4pe2lmKGkmJm4uZGF0YSYmbi5kYXRhLmNvZGU9PT1Pdy5FUlJfUFVCTElTSF9SRVFVRVNUX0lOVkFMSUQpcmV0dXJuIGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIHJlY2VpdmUgcHVibGlzaCBkYXRhY2hhbm5lbHMgZXJyb3IgY29kZSwgcmV0cnlcIiksbi50b1N0cmluZygpKSxhd2FpdCB0aGlzLnRyeVVucHViRGF0YUNoYW5uZWxCZWZvcmVSZXB1YihlLHQpLHRoaXMucHVibGlzaERhdGFDaGFubmVsKGUsdCwhMSk7dGhyb3cgbn19YXN5bmMgdW5wdWJsaXNoKGUsdCl7dHJ5e2lmKFwiQ09OTkVDVEVEXCIhPT10aGlzLnN0YXRlJiZcIlJFQ09OTkVDVElOR1wiIT09dGhpcy5zdGF0ZSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJjYW4gbm90IHB1Ymxpc2ggd2hlbiBjb25uZWN0aW9uIHN0YXRlIGlzIFwiLmNvbmNhdCh0aGlzLnN0YXRlKSk7YXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChQdy5VTlBVQkxJU0gse3N0cmVhbV9pZDp0LG9ydGM6ZX0sITApfWNhdGNoKGUpe2ZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIHVucHVibGlzaCB3YXJuaW5nOiBcIiksZSl9fWFzeW5jIHVucHVibGlzaERhdGFDaGFubmVsKGUpe3RyeXtpZihcIkNPTk5FQ1RFRFwiIT09dGhpcy5zdGF0ZSYmXCJSRUNPTk5FQ1RJTkdcIiE9PXRoaXMuc3RhdGUpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiY2FuIG5vdCBwdWJsaXNoIHdoZW4gY29ubmVjdGlvbiBzdGF0ZSBpcyBcIi5jb25jYXQodGhpcy5zdGF0ZSkpO2F3YWl0IEdoLmFsbChlLm1hcCgoZT0+dGhpcy5zaWduYWwucmVxdWVzdChQdy5VTlBVQkxJU0hfREFUQVNUUkVBTSx7Y2hhbm5lbF9pZDplfSwhMCkpKSl9Y2F0Y2goZSl7ZmIud2FybmluZyhcInVucHVibGlzaCBkYXRhY2hhbm5lbHMgd2FybmluZzogXCIsZSl9fWFzeW5jIHByZXN1YnNjcmliZShlLHQsaSl7aWYoXCJDT05ORUNURURcIiE9PXRoaXMuc3RhdGUmJlwiUkVDT05ORUNUSU5HXCIhPT10aGlzLnN0YXRlKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcImNhbiBub3QgcHJlc3Vic2NyaWJlIHdoZW4gY29ubmVjdGlvbiBzdGF0ZSBpcyBcIi5jb25jYXQodGhpcy5zdGF0ZSkpO2NvbnN0IG49e3N0cmVhbV9pZDplLHN0cmVhbV90eXBlOnQsbW9kZTp0aGlzLnNwZWMubW9kZSxjb2RlYzp0aGlzLnNwZWMuY29kZWMscDJwX2lkOnRoaXMuc3RvcmUucDJwSWQsdHdjYzohIVhBKFwiU1VCU0NSSUJFX1RXQ0NcIikscnR4OiEhWEEoXCJVU0VfU1VCX1JUWFwiKXx8dm9pZCAwLGV4dGVuZDpYQShcIlNVQl9FWFRFTkRcIiksc3ZjOkFycmF5LmlzQXJyYXkoWEEoXCJTVkNcIikpJiYwIT09WEEoXCJTVkNcIikubGVuZ3RoP1hBKFwiU1ZDXCIpOnZvaWQgMH07dHJ5e3JldHVybiBhd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KFB3LlBSRV9TVUJTQ1JJQkUsbiwhMCl9Y2F0Y2gobil7aWYoaSYmbi5kYXRhJiZuLmRhdGEuY29kZT09PU93LkVSUl9TVUJTQ1JJQkVfUkVRVUVTVF9JTlZBTElEKXJldHVybiBmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBwcmUtc3Vic2NyaWJlIGVycm9yLCByZXRyeVwiKSxuLnRvU3RyaW5nKCkpLHRoaXMucHJlc3Vic2NyaWJlKGUsdCwhMSk7dGhyb3cgbn19YXN5bmMgc3Vic2NyaWJlKGUsdCxpKXtpZihcIkNPTk5FQ1RFRFwiIT09dGhpcy5zdGF0ZSYmXCJSRUNPTk5FQ1RJTkdcIiE9PXRoaXMuc3RhdGUpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiY2FuIG5vdCBzdWJzY3JpYmUgd2hlbiBjb25uZWN0aW9uIHN0YXRlIGlzIFwiLmNvbmNhdCh0aGlzLnN0YXRlKSk7Y29uc3Qgbj17c3RyZWFtX2lkOmUsc3RyZWFtX3R5cGU6dC5zdHJlYW1fdHlwZSxtb2RlOnRoaXMuc3BlYy5tb2RlLGNvZGVjOnRoaXMuc3BlYy5jb2RlYyxwMnBfaWQ6dGhpcy5zdG9yZS5wMnBJZCx0d2NjOiEhWEEoXCJTVUJTQ1JJQkVfVFdDQ1wiKSxydHg6ISFYQShcIlVTRV9TVUJfUlRYXCIpLGV4dGVuZDpYQShcIlNVQl9FWFRFTkRcIiksc3NyY0lkOnQuc3NyY0lkLHN2YzpBcnJheS5pc0FycmF5KFhBKFwiU1ZDXCIpKSYmMCE9PVhBKFwiU1ZDXCIpLmxlbmd0aD9YQShcIlNWQ1wiKTp2b2lkIDB9O3RyeXtyZXR1cm4oYXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChQdy5TVUJTQ1JJQkUsbiwhMCkpLl9tZXNzYWdlfWNhdGNoKG4pe2lmKGkmJm4uZGF0YSYmbi5kYXRhLmNvZGU9PT1Pdy5FUlJfU1VCU0NSSUJFX1JFUVVFU1RfSU5WQUxJRClyZXR1cm4gZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gcmVjZWl2ZXIgc3Vic2NyaWJlIGVycm9yIGNvZGUsIHJldHJ5XCIpLG4udG9TdHJpbmcoKSksYXdhaXQgdGhpcy50cnlVbnN1YkJlZm9yZVJlc3ViKGUsdCksYXdhaXQgdGhpcy5zdWJzY3JpYmUoZSx0LCExKTt0aHJvdyBufX1hc3luYyBzdWJzY3JpYmVEYXRhQ2hhbm5lbChlLHQsaSl7aWYoXCJDT05ORUNURURcIiE9PXRoaXMuc3RhdGUmJlwiUkVDT05ORUNUSU5HXCIhPT10aGlzLnN0YXRlKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcImNhbiBub3Qgc3Vic2NyaWJlIGRhdGFjaGFubmVsIHdoZW4gY29ubmVjdGlvbiBzdGF0ZSBpcyBcIi5jb25jYXQodGhpcy5zdGF0ZSkpO2NvbnN0IG49e3VpZDplLHN0cmVhbV9pZDp0LmlkLGNoYW5uZWxfaWQ6dC5kYXRhY2hhbm5lbElkfTt0cnl7cmV0dXJuIHZvaWQgYXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChQdy5TVUJTQ1JJQkVfREFUQVNUUkVBTSxuLCEwKX1jYXRjaChuKXtpZihpJiZuLmRhdGEmJm4uZGF0YS5jb2RlPT09T3cuRVJSX1NVQlNDUklCRV9SRVFVRVNUX0lOVkFMSUQpcmV0dXJuIGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIHJlY2VpdmVyIHN1YnNjcmliZSBkYXRhY2hhbm5lbCBlcnJvciBjb2RlLCByZXRyeVwiKSxuLnRvU3RyaW5nKCkpLGF3YWl0IHRoaXMudHJ5VW5zdWJEYXRhQ2hhbm5lbEJlZm9yZVJlc3ViKGUsdCksYXdhaXQgdGhpcy5zdWJzY3JpYmVEYXRhQ2hhbm5lbChlLHQsITEpO3Rocm93IG59fWFzeW5jIHN1YnNjcmliZUFsbChlLHQpe2lmKFwiQ09OTkVDVEVEXCIhPT10aGlzLnN0YXRlJiZcIlJFQ09OTkVDVElOR1wiIT09dGhpcy5zdGF0ZSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJjYW4gbm90IG1hc3NTdWJzY3JpYmUgd2hlbiBjb25uZWN0aW9uIHN0YXRlIGlzIFwiLmNvbmNhdCh0aGlzLnN0YXRlKSk7Y29uc3QgaT17cDJwX2lkOnRoaXMuc3RvcmUucDJwSWQsdXNlcnM6ZSxkdHg6ITEscnR4OiEhWEEoXCJVU0VfU1VCX1JUWFwiKSx0d2NjOiEhWEEoXCJTVUJTQ1JJQkVfVFdDQ1wiKSxzdmM6QXJyYXkuaXNBcnJheShYQShcIlNWQ1wiKSkmJjAhPT1YQShcIlNWQ1wiKS5sZW5ndGg/WEEoXCJTVkNcIik6dm9pZCAwfTt0cnl7cmV0dXJuIGF3YWl0IHRoaXMuc2lnbmFsLnJlcXVlc3QoUHcuU1VCU0NSSUJFX1NUUkVBTVMsaSwhMCl9Y2F0Y2goaSl7aWYodCYmaS5kYXRhJiZpLmRhdGEuY29kZT09PU93LkVSUl9TVUJTQ1JJQkVfUkVRVUVTVF9JTlZBTElEKXJldHVybiBmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSByZWNlaXZlciBtYXNzU3Vic2NyaWJlIGVycm9yIGNvZGUsIHJldHJ5XCIpLGkudG9TdHJpbmcoKSksYXdhaXQgdGhpcy50cnlNYXNzVW5zdWJCZWZvcmVSZXN1YihlKSxhd2FpdCB0aGlzLnN1YnNjcmliZUFsbChlLCExKTt0aHJvdyBpfX1hc3luYyBzZXRWaWRlb1Byb2ZpbGUoZSl7Y29uc3QgdD1mdW5jdGlvbihlKXtpZighKGUuYml0cmF0ZU1heCYmZS5iaXRyYXRlTWluJiZlLmZyYW1lUmF0ZSYmZS5oZWlnaHQmJmUud2lkdGgpKXJldHVybjtsZXQgdD1lLmZyYW1lUmF0ZSxpPWUud2lkdGgsbj1lLmhlaWdodCxyPSEwO3JldHVyblwibnVtYmVyXCIhPXR5cGVvZiB0JiYodD10LmV4YWN0fHx0LmlkZWFsfHx0Lm1heHx8dC5taW58fDAsdHx8KHI9ITEpKSxcIm51bWJlclwiIT10eXBlb2YgaSYmKGk9aS5leGFjdHx8aS5pZGVhbHx8aS5tYXh8fGkubWlufHwwLGl8fChyPSExKSksXCJudW1iZXJcIiE9dHlwZW9mIG4mJihuPW4uZXhhY3R8fG4uaWRlYWx8fG4ubWF4fHxuLm1pbnx8MCx0fHwocj0hMSkpLHI/e3N0cmVhbV90eXBlOjAsd2lkdGg6aSxoZWlnaHQ6bixmcHM6dCxzdGFydF9icHM6MWUzKmUuYml0cmF0ZU1heCxtaW5fYnBzOjFlMyplLmJpdHJhdGVNaW4sdGFyZ2V0X2JwczoxZTMqZS5iaXRyYXRlTWF4fTp2b2lkIDB9KGUpO2lmKHQpcmV0dXJuIHRoaXMuc2lnbmFsLnJlcXVlc3QoUHcuU0VUX1ZJREVPX1BST0ZJTEUsdCk7ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIGVuY29kZXIgY29uZmlnIGlzIG5vdCBjb21wbGV0ZSwgZG8gbm90IHJlcG9ydCB0byBnYXRld2F5XCIpKX1hc3luYyB1bnN1YnNjcmliZShlLHQpe3RyeXthd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KFB3LlVOU1VCU0NSSUJFLHtwMnBfaWQ6dGhpcy5zdG9yZS5wMnBJZCxvcnRjOmUsc3RyZWFtX2lkOnR9LCEwKX1jYXRjaChlKXtmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSB1bnN1YnNjcmliZSB3YXJuaW5nOiBcIiksZSl9fWFzeW5jIHVuc3Vic2NyaWJlRGF0YUNoYW5uZWwoZSx0KXt0cnl7aWYoXCJDT05ORUNURURcIiE9PXRoaXMuc3RhdGUmJlwiUkVDT05ORUNUSU5HXCIhPT10aGlzLnN0YXRlKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcImNhbiBub3QgcHVibGlzaCB3aGVuIGNvbm5lY3Rpb24gc3RhdGUgaXMgXCIuY29uY2F0KHRoaXMuc3RhdGUpKTthd2FpdCBHaC5hbGwoZS5tYXAoKGU9PnRoaXMuc2lnbmFsLnJlcXVlc3QoUHcuVU5TVUJTQ1JJQkVfREFUQVNUUkVBTSx7c3RyZWFtX2lkOmUsdWlkOnR9LCEwKSkpKX1jYXRjaChlKXtmYi53YXJuaW5nKFwidW5zdWJzY3JpYmVEYXRhQ2hhbm5lbCB3YXJuaW5nOiBcIixlKX19YXN5bmMgbWFzc1Vuc3Vic2NyaWJlKGUpe3RyeXthd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KFB3LlVOU1VCU0NSSUJFX1NUUkVBTVMsZSwhMCl9Y2F0Y2goZSl7ZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gbWFzc1Vuc3Vic2NyaWJlQWxsIHdhcm5pbmc6IFwiKSxlKX19YXN5bmMgcmVjb25uZWN0UEMoZSl7Y29uc3R7aWNlUGFyYW1ldGVyczp0LGR0bHNQYXJhbWV0ZXJzOmkscnRwQ2FwYWJpbGl0aWVzOm59PWU7cmV0dXJue2dhdGV3YXlFc3RhYmxpc2hQYXJhbXM6YXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChQdy5DT05ORUNUX1BDLHtwMnBfaWQ6dGhpcy5zdG9yZS5wMnBJZCxzdHJlYW1faWQ6dGhpcy5zdG9yZS51aWQsb3J0Yzp7aWNlUGFyYW1ldGVyczp0LGR0bHNQYXJhbWV0ZXJzOmkscnRwQ2FwYWJpbGl0aWVzOm59fSwhMCksZ2F0ZXdheUFkZHJlc3M6dGhpcy5nZXRDdXJyZW50R2F0ZXdheUFkZHJlc3MoKX19Z2V0R2F0ZXdheUluZm8oKXtyZXR1cm4gdGhpcy5zaWduYWwucmVxdWVzdChQdy5HQVRFV0FZX0lORk8pfWFzeW5jIHJlbmV3VG9rZW4oZSl7YXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChQdy5SRU5FV19UT0tFTixlKSx0aGlzLmtleT1lLnRva2VufWFzeW5jIHNldENsaWVudFJvbGUoZSx0KXtpZih0JiYodGhpcy5fY2xpZW50Um9sZU9wdGlvbnM9T2JqZWN0LmFzc2lnbih7fSx0KSksXCJDT05ORUNURURcIiE9PXRoaXMuc3RhdGUpcmV0dXJuIHZvaWQodGhpcy5yb2xlPWUpO2xldCBpLG49MDtcImF1ZGllbmNlXCI9PT1lP3RoaXMuX2NsaWVudFJvbGVPcHRpb25zJiZ0aGlzLl9jbGllbnRSb2xlT3B0aW9ucy5kZWxheT8oaT10aGlzLl9jbGllbnRSb2xlT3B0aW9ucy5kZWxheSxuPTEpOm49dGhpcy5fY2xpZW50Um9sZU9wdGlvbnMmJnRoaXMuX2NsaWVudFJvbGVPcHRpb25zLmxldmVsP3RoaXMuX2NsaWVudFJvbGVPcHRpb25zLmxldmVsOjI6bj0wLGF3YWl0IHRoaXMuc2lnbmFsLnJlcXVlc3QoUHcuU0VUX0NMSUVOVF9ST0xFLHtyb2xlOmUsbGV2ZWw6bixkZWxheTppLGNsaWVudF90czpEYXRlLm5vdygpfSksdGhpcy5yb2xlPWV9YXN5bmMgc2V0UmVtb3RlVmlkZW9TdHJlYW1UeXBlKGUsdCl7YXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChQdy5TV0lUQ0hfVklERU9fU1RSRUFNLHtzdHJlYW1faWQ6ZSxzdHJlYW1fdHlwZTp0fSl9YXN5bmMgc2V0RGVmYXVsdFJlbW90ZVZpZGVvU3RyZWFtVHlwZShlKXthd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KFB3LkRFRkFVTFRfVklERU9fU1RSRUFNLHtzdHJlYW1fdHlwZTplfSl9YXN5bmMgc2V0U3RyZWFtRmFsbGJhY2tPcHRpb24oZSx0KXthd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KFB3LlNFVF9GQUxMQkFDS19PUFRJT04se3N0cmVhbV9pZDplLGZhbGxiYWNrX3R5cGU6dH0pfWFzeW5jIHBpY2tTVkNMYXllcihlLHQpe2F3YWl0IHRoaXMuc2lnbmFsLnJlcXVlc3QoUHcuUElDS19TVkNfTEFZRVIse3N0cmVhbV9pZDplLHNwYXRpYWxfbGF5ZXI6dC5zcGF0aWFsTGF5ZXIsdGVtcG9yYWxfbGF5ZXI6dC50ZW1wb3JhbExheWVyfSl9YXN5bmMgc2V0UlRNMkZsYWcoZSl7YXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChQdy5TRVRfUlRNMl9GTEFHLHtydG0yX2ZsYWc6ZX0pfWFzeW5jIHNlbmRFeHRlbnNpb25NZXNzYWdlKGUsdCxpKXtpZih0aGlzLnNpZ25hbCBpbnN0YW5jZW9mIHhVKXJldHVybiB0aGlzLnNpZ25hbC5zZW5kRXh0ZW5zaW9uTWVzc2FnZShlLHQsaSl9Z2V0SW5DaGFubmVsSW5mbygpe3JldHVybiB0aGlzLmluQ2hhbm5lbEluZm8uam9pbkF0JiYodGhpcy5pbkNoYW5uZWxJbmZvLmR1cmF0aW9uPURhdGUubm93KCktdGhpcy5pbkNoYW5uZWxJbmZvLmpvaW5BdCkscHgoe30sdGhpcy5pbkNoYW5uZWxJbmZvKX1hc3luYyBnZXRHYXRld2F5VmVyc2lvbigpe3JldHVybihhd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KFB3LkdBVEVXQVlfSU5GTykpLnZlcnNpb259cmVzZXQoKXtpZih0aGlzLmluQ2hhbm5lbEluZm8uam9pbkF0JiYodGhpcy5pbkNoYW5uZWxJbmZvLmR1cmF0aW9uPURhdGUubm93KCktdGhpcy5pbkNoYW5uZWxJbmZvLmpvaW5BdCx0aGlzLmluQ2hhbm5lbEluZm8uam9pbkF0PW51bGwpLHRoaXMudHJhZmZpY1N0YXRzSW50ZXJ2YWwmJih3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLnRyYWZmaWNTdGF0c0ludGVydmFsKSx0aGlzLnRyYWZmaWNTdGF0c0ludGVydmFsPXZvaWQgMCksdGhpcy5qb2luSW5mbyl7Y29uc3QgZT1feC5nZXQodGhpcy5qb2luSW5mby5jbmFtZSk7ZSYmZS5kZWxldGUodGhpcy5qb2luSW5mby51aWQpfXRoaXMuam9pbkluZm89dm9pZCAwLHRoaXMua2V5PXZvaWQgMCx0aGlzLm5ldHdvcmtRdWFsaXR5SW50ZXJ2YWwmJih3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLm5ldHdvcmtRdWFsaXR5SW50ZXJ2YWwpLHRoaXMubmV0d29ya1F1YWxpdHlJbnRlcnZhbD12b2lkIDApfXVwZGF0ZVR1cm5Db25maWdGcm9tU2lnbmFsKCl7aWYoIXRoaXMuam9pbkluZm8pcmV0dXJuO2NvbnN0IGU9ZnVuY3Rpb24oZSl7bGV0IHQ7cmV0dXJuIHQ9ZS5zdGFydHNXaXRoKFwiZGNcIik/ZS5tYXRjaCgvKGRjXFw6XFwvXFwvKT8oW146XSspOihcXGQrKS8pOmUubWF0Y2goLyh3c3NcXDpcXC9cXC8pPyhbXjpdKyk6KFxcZCspLyksdD97dXNlcm5hbWU6S0EudXNlcm5hbWUscGFzc3dvcmQ6S0EucGFzc3dvcmQsdHVyblNlcnZlclVSTDp0WzJdLHRjcHBvcnQ6cGFyc2VJbnQodFszXSkrMzAsdWRwcG9ydDpwYXJzZUludCh0WzNdKSszMCxmb3JjZXR1cm46ITF9Om51bGx9KChcImRpc2FibGVkXCI9PT10aGlzLmpvaW5JbmZvLmNsb3VkUHJveHlTZXJ2ZXI/dGhpcy5zaWduYWwudXJsOnRoaXMuam9pbkluZm8uZ2F0ZXdheUFkZHJzW3RoaXMuc2lnbmFsLmN1cnJlbnRVUkxJbmRleF0uYWRkcmVzcyl8fFwiXCIpO3RoaXMuam9pbkluZm8udHVyblNlcnZlci5zZXJ2ZXJzRnJvbUdhdGV3YXk9W10sZSYmXCJvZmZcIiE9PXRoaXMuam9pbkluZm8udHVyblNlcnZlci5tb2RlJiZcImRpc2FibGVkXCI9PT10aGlzLmpvaW5JbmZvLmNsb3VkUHJveHlTZXJ2ZXImJnRoaXMuam9pbkluZm8udHVyblNlcnZlci5zZXJ2ZXJzRnJvbUdhdGV3YXkucHVzaChweChweCh7fSxLQSkse30se3R1cm5TZXJ2ZXJVUkw6ZS50dXJuU2VydmVyVVJMLHRjcHBvcnQ6ZS50Y3Bwb3J0LHVkcHBvcnQ6ZS51ZHBwb3J0LHVzZXJuYW1lOnRoaXMuam9pbkluZm8udWlkLnRvU3RyaW5nKCkscGFzc3dvcmQ6dGhpcy5qb2luSW5mby50b2tlbn0pKX1hc3luYyB1cGRhdGVUcmFmZmljU3RhdHMoKXtpZihcIkNPTk5FQ1RFRFwiIT09dGhpcy5zdGF0ZSlyZXR1cm47Y29uc3QgZT1hd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KFB3LlRSQUZGSUNfU1RBVFMsdm9pZCAwLCEwKTtlLnRpbWVzdGFtcD1EYXRlLm5vdygpLG51bGwhPWUubnRwX29mZnNldCYmKHRoaXMubnRwT2Zmc2V0PWUubnRwX29mZnNldCksZS5wZWVyX2RlbGF5LmZvckVhY2goKGU9Pntjb25zdCB0PXRoaXMuX3N0YXRzQ29sbGVjdG9yLnRyYWZmaWNTdGF0cyYmdGhpcy5fc3RhdHNDb2xsZWN0b3IudHJhZmZpY1N0YXRzLnBlZXJfZGVsYXkuZmluZCgodD0+dC5wZWVyX3VpZD09PWUucGVlcl91aWQpKTt0JiZ0LkJfc3QhPT1lLkJfc3QmJm9BKCgoKT0+e3RoaXMuZW1pdCgkdy5TVFJFQU1fVFlQRV9DSEFOR0UsZS5wZWVyX3VpZCxlLkJfc3QpfSkpfSkpLHRoaXMuX3N0YXRzQ29sbGVjdG9yLnVwZGF0ZVRyYWZmaWNTdGF0cyhlKX1nZXRKb2luTWVzc2FnZShlKXtpZighdGhpcy5qb2luSW5mb3x8IXRoaXMua2V5KXRocm93IG5ldyB5YihSeS5VTkVYUEVDVEVEX0VSUk9SLFwiY2FuIG5vdCBnZW5lcmF0ZSBqb2luIG1lc3NhZ2UsIG5vIGpvaW4gaW5mb1wiKTtjb25zdCB0PU9iamVjdC5hc3NpZ24oe30sdGhpcy5qb2luSW5mby5hcFJlc3BvbnNlKTtsZXQgaT1YQShcIlJFUE9SVF9BUFBfU0NFTkFSSU9cIik7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGkpdHJ5e2k9SlNPTi5zdHJpbmdpZnkoaSl9Y2F0Y2goZSl7aT12b2lkIDB9aSYmaS5sZW5ndGg+MTI4JiYoaT12b2lkIDApO2NvbnN0IG49IShadigpfHx0eSg4Nyl8fGVMKCkpJiYoXCJib29sZWFuXCI9PXR5cGVvZiBYQShcIkVOQUJMRV9QUkVfU1VCXCIpJiZYQShcIkVOQUJMRV9QUkVfU1VCXCIpKSxyPSFlTCgpJiZ1eChcIkVOQUJMRV9QUkVBTExPQ19QQ1wiLFwiYm9vbGVhblwiKSxvPXB4KHtsaWNlbnNlOnRoaXMuam9pbkluZm8ubGljZW5zZSxwMnBfaWQ6dGhpcy5zdG9yZS5wMnBJZCxzZXNzaW9uX2lkOnRoaXMuam9pbkluZm8uc2lkLGFwcF9pZDp0aGlzLmpvaW5JbmZvLmFwcElkLGNoYW5uZWxfa2V5OnRoaXMua2V5LGNoYW5uZWxfbmFtZTp0aGlzLmpvaW5JbmZvLmNuYW1lLHNka192ZXJzaW9uOkdBLGJyb3dzZXI6bmF2aWdhdG9yLnVzZXJBZ2VudCxwcm9jZXNzX2lkOlhBKFwiUFJPQ0VTU19JRFwiKSxtb2RlOnRoaXMuc3RvcmUudXNlUDJQP1wicDJwXCI6dGhpcy5zcGVjLm1vZGUsY29kZWM6dGhpcy5zcGVjLmNvZGVjLHJvbGU6dGhpcy5yb2xlLGhhc19jaGFuZ2VkX2dhdGV3YXk6dGhpcy5oYXNDaGFuZ2VCR1BBZGRyZXNzLGFwX3Jlc3BvbnNlOnQsZXh0ZW5kOlhBKFwiSk9JTl9FWFRFTkRcIiksZGV0YWlsczp7Njp0aGlzLmpvaW5JbmZvLnN0cmluZ1VpZCxjc2VydmljZV9tYXA6XCJwcm94eTNcIj09PXRoaXMuam9pbkluZm8uY2xvdWRQcm94eVNlcnZlcj9cIjFcIjpcInByb3h5NVwiPT09dGhpcy5qb2luSW5mby5jbG91ZFByb3h5U2VydmVyP1wiMlwiOnZvaWQgMH0sZmVhdHVyZXM6e3Jlam9pbjohMH0sb3B0aW9uYWxJbmZvOnRoaXMuam9pbkluZm8ub3B0aW9uYWxJbmZvLGFwcFNjZW5hcmlvOmksYXR0cmlidXRlczp7dXNlckF0dHJpYnV0ZXM6e2VuYWJsZVB1Ymxpc2hlZFVzZXJMaXN0OlhBKFwiRU5BQkxFX1BVQkxJU0hFRF9VU0VSX0xJU1RcIiksbWF4U3Vic2NyaXB0aW9uOlhBKFwiTUFYX1NVQlNDUklQVElPTlwiKSxzdWJzY3JpYmVBdWRpb0ZpbHRlclRvcE46XCJudW1iZXJcIj09dHlwZW9mIFhBKFwiU1VCU0NSSUJFX0FVRElPX0ZJTFRFUl9UT1BOXCIpP1hBKFwiU1VCU0NSSUJFX0FVRElPX0ZJTFRFUl9UT1BOXCIpOnZvaWQgMCxlbmFibGVQdWJsaXNoQXVkaW9GaWx0ZXI6XCJib29sZWFuXCI9PXR5cGVvZiBYQShcIkVOQUJMRV9QVUJMSVNIX0FVRElPX0ZJTFRFUlwiKT9YQShcIkVOQUJMRV9QVUJMSVNIX0FVRElPX0ZJTFRFUlwiKTp2b2lkIDAsZW5hYmxlVXNlckxpY2Vuc2VDaGVjazpcImJvb2xlYW5cIj09dHlwZW9mIFhBKFwiRU5BQkxFX1VTRVJfTElDRU5TRV9DSEVDS1wiKT9YQShcIkVOQUJMRV9VU0VSX0xJQ0VOU0VfQ0hFQ0tcIik6dm9pZCAwLGVuYWJsZVJUWDohMD09PVhBKFwiVVNFX1BVQl9SVFhcIil8fCEwPT09WEEoXCJVU0VfU1VCX1JUWFwiKXx8dm9pZCAwLGRpc2FibGVGRUM6WEEoXCJESVNBQkxFX0ZFQ1wiKSxlbmFibGVOVFBSZXBvcnQ6ISFYQShcIkVOQUJMRV9OVFBfUkVQT1JUXCIpfHx2b2lkIDAsZW5hYmxlSW5zdGFudFZpZGVvOiEhWEEoXCJFTkFCTEVfSU5TVEFOVF9WSURFT1wiKXx8dm9pZCAwLGVuYWJsZUZ1bGxsaW5rQXZTeW5jOiEhWEEoXCJFTkFCTEVfRlVMTF9MSU5LX0FWX1NZTkNcIil8fHZvaWQgMCxlbmFibGVEYXRhU3RyZWFtMjp1eChcIkVOQUJMRV9EQVRBU1RSRUFNXzJcIixcImJvb2xlYW5cIiksZW5hYmxlQXV0RmVlZGJhY2s6ISFYQShcIkVOQUJMRV9BVVRfRkVFREJBQ0tcIil8fHZvaWQgMCxydG0yRmxhZzpcIm51bWJlclwiPT10eXBlb2YgdGhpcy5qb2luSW5mby5ydG1GbGFnP3RoaXMuam9pbkluZm8ucnRtRmxhZzp2b2lkIDAsZW5hYmxlVXNlckF1dG9SZWJhbGFuY2VDaGVjazohIVhBKFwiRU5BQkxFX1VTRVJfQVVUT19SRUJBTEFOQ0VfQ0hFQ0tcIiksZW5hYmxlWFI6dXgoXCJVU0VfWFJcIixcImJvb2xlYW5cIiksZW5hYmxlTG9zc2Jhc2VkQndlOnV4KFwiRU5BQkxFX0xPU1NCQVNFRF9CV0VcIixcImJvb2xlYW5cIiksZW5hYmxlQXV0Q0M6ISFYQShcIkVOQUJMRV9BVVRfQ0NcIil8fHZvaWQgMCxlbmFibGVDQ0ZhbGxiYWNrOnV4KFwiRU5BQkxFX0NDX0ZBTExCQUNLXCIsXCJib29sZWFuXCIpLGVuYWJsZVByZWFsbG9jUEM6cixwcmVTdWJOdW06bj91eChcIlBSRV9TVUJfTlVNXCIsXCJudW1iZXJcIik6dm9pZCAwLGVuYWJsZVB1YlRXQ0M6dXgoXCJQVUJMSVNIX1RXQ0NcIixcImJvb2xlYW5cIiksZW5hYmxlU3ViVFdDQzp1eChcIlNVQlNDUklCRV9UV0NDXCIsXCJib29sZWFuXCIpLGVuYWJsZVB1YlJUWDp1eChcIlVTRV9QVUJfUlRYXCIsXCJib29sZWFuXCIpLGVuYWJsZVN1YlJUWDp1eChcIlVTRV9TVUJfUlRYXCIsXCJib29sZWFuXCIpLGVuYWJsZVN1YlNWQzpYQShcIkVOQUJMRV9TVkNcIik/WEEoXCJFTkFCTEVfU1ZDX0RFRkFVTFRfQ09ERUNTXCIpOkFycmF5LmlzQXJyYXkoWEEoXCJTVkNcIikpJiYwIT09WEEoXCJTVkNcIikubGVuZ3RoP1hBKFwiU1ZDXCIpOnZvaWQgMH19LGpvaW5fdHM6dGhpcy5qb2luR2F0ZXdheVN0YXJ0VGltZX0sZSk7cmV0dXJuIHRoaXMuam9pbkluZm8uc3RyaW5nVWlkJiYoby5zdHJpbmdfdWlkPXRoaXMuam9pbkluZm8uc3RyaW5nVWlkKSx0aGlzLmpvaW5JbmZvLmFlc21vZGUmJnRoaXMuam9pbkluZm8uYWVzcGFzc3dvcmQmJihvLmFlc19tb2RlPXRoaXMuam9pbkluZm8uYWVzbW9kZSxYQShcIkVOQ1JZUFRfQUVTXCIpPyhvLmFlc19zZWNyZXQ9dGhpcy5qb2luSW5mby5hZXNwYXNzd29yZCxvLmFlc19lbmNyeXB0PSEwKTpvLmFlc19zZWNyZXQ9dGhpcy5qb2luSW5mby5hZXNwYXNzd29yZCx0aGlzLmpvaW5JbmZvLmFlc3NhbHQmJihvLmFlc19zYWx0PXRoaXMuam9pbkluZm8uYWVzc2FsdCkpLHQuYWRkcmVzc2VzW3RoaXMuc2lnbmFsLndlYnNvY2tldC5jdXJyZW50VVJMSW5kZXhdJiYoby5hcF9yZXNwb25zZS50aWNrZXQ9dC5hZGRyZXNzZXNbdGhpcy5zaWduYWwud2Vic29ja2V0LmN1cnJlbnRVUkxJbmRleF0udGlja2V0LGRlbGV0ZSB0LmFkZHJlc3Nlcyksdm9pZCAwIT09dGhpcy5qb2luSW5mby5kZWZhdWx0VmlkZW9TdHJlYW0mJihvLmRlZmF1bHRfdmlkZW9fc3RyZWFtPXRoaXMuam9pbkluZm8uZGVmYXVsdFZpZGVvU3RyZWFtKSxvfWdldFJlam9pbk1lc3NhZ2UoKXtpZighdGhpcy5qb2luSW5mbyl0aHJvdyBuZXcgeWIoUnkuVU5FWFBFQ1RFRF9FUlJPUixcImNhbiBub3QgZ2VuZXJhdGUgcmVqb2luIG1lc3NhZ2UsIG5vIGpvaW4gaW5mb1wiKTtyZXR1cm57c2Vzc2lvbl9pZDp0aGlzLmpvaW5JbmZvLnNpZCxjaGFubmVsX25hbWU6dGhpcy5qb2luSW5mby5jbmFtZSxjaWQ6dGhpcy5qb2luSW5mby5jaWQsdWlkOnRoaXMuam9pbkluZm8udWlkLHZpZDpOdW1iZXIodGhpcy5qb2luSW5mby52aWQpfX1oYW5kbGVTaWduYWxFdmVudHMoKXt0aGlzLnNpZ25hbC5vbihEdy5XU19SRUNPTk5FQ1RfV0FJVFRJTkdfRklOSVNILChlPT57dmFyIHQ7RG4odD1bXCJ0cnlOZXh0XCIsXCJyZWNvdmVyXCJdKS5jYWxsKHQsZSkmJnRoaXMuam9pbkluZm8mJnZiLmFkanVzdFNlc3Npb25TdGFydFRpbWUodGhpcy5qb2luSW5mby5zaWQpfSkpLHRoaXMuc2lnbmFsLm9uKER3LldTX1JFQ09OTkVDVF9DUkVBVEVfQ09OTkVDVElPTiwoZT0+e3RoaXMuam9pbkdhdGV3YXlTdGFydFRpbWU9RGF0ZS5ub3coKX0pKSx0aGlzLnNpZ25hbC5vbihEdy5XU19SRUNPTk5FQ1RJTkcsKGU9Pnt0aGlzLmpvaW5JbmZvJiZ2Yi5XZWJTb2NrZXRRdWl0KHRoaXMuam9pbkluZm8uc2lkLHtsdHM6RGF0ZS5ub3coKSxzdWNjOi0xLGNuYW1lOnRoaXMuam9pbkluZm8uY25hbWUsdWlkOnRoaXMuam9pbkluZm8udWlkLGNpZDp0aGlzLmpvaW5JbmZvLmNpZCxlcnJvckNvZGU6ZXx8SnkuTkVUV09SS19FUlJPUn0pLHRoaXMuam9pbkluZm8mJih0aGlzLnN0YXRlPVwiUkVDT05ORUNUSU5HXCIsdmIuc2Vzc2lvbkluaXQodGhpcy5qb2luSW5mby5zaWQse2x0czoobmV3IERhdGUpLmdldFRpbWUoKSxleHRlbmQ6dGhpcy5pc1NpZ25hbFJlY292ZXI/e3JlY292ZXI6ITB9OntyZWpvaW46ITB9LGNuYW1lOnRoaXMuam9pbkluZm8uY25hbWUsYXBwaWQ6dGhpcy5qb2luSW5mby5hcHBJZCxtb2RlOnRoaXMuc3BlYy5tb2RlLHN0cmluZ1VpZDp0aGlzLmpvaW5JbmZvLnN0cmluZ1VpZCxjaGFubmVsUHJvZmlsZTpcImxpdmVcIj09PXRoaXMuc3BlYy5tb2RlPzE6MCxjaGFubmVsTW9kZTowLGxzaWQ6dGhpcy5qb2luSW5mby5zaWQsY2xpZW50Um9sZTpcImF1ZGllbmNlXCI9PT10aGlzLnJvbGU/MjoxLGJ1aWxkRm9ybWF0OjJ9KSx0aGlzLmlzU2lnbmFsUmVjb3Zlcj0hMSx0aGlzLmpvaW5HYXRld2F5U3RhcnRUaW1lPURhdGUubm93KCkpfSkpLHRoaXMuc2lnbmFsLm9uKER3LldTX0NMT1NFRCwoZT0+e2xldCB0O3N3aXRjaChlKXtjYXNlIEh5LkxFQVZFOnQ9SnkuTEVBVkU7YnJlYWs7Y2FzZSBIeS5VSURfQkFOTkVEOmNhc2UgSHkuSVBfQkFOTkVEOmNhc2UgSHkuQ0hBTk5FTF9CQU5ORUQ6Y2FzZSBIeS5TRVJWRVJfRVJST1I6dD1KeS5TRVJWRVJfRVJST1I7YnJlYWs7Y2FzZSBIeS5GQUxMQkFDSzp0PUp5LkZBTExCQUNLO2JyZWFrO2Nhc2UgSHkuTElDRU5TRV9NSVNTSU5HOmNhc2UgSHkuTElDRU5TRV9FWFBJUkVEOmNhc2UgSHkuTElDRU5TRV9NSU5VVEVTX0VYQ0VFREVEOmNhc2UgSHkuTElDRU5TRV9QRVJJT0RfSU5WQUxJRDpjYXNlIEh5LkxJQ0VOU0VfTVVMVElQTEVfU0RLX1NFUlZJQ0U6Y2FzZSBIeS5MSUNFTlNFX0lMTEVHQUw6Y2FzZSBIeS5UT0tFTl9FWFBJUkU6dD1lO2JyZWFrO2RlZmF1bHQ6dD1KeS5ORVRXT1JLX0VSUk9SfWZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbc2lnbmFsXSB3ZWJzb2NrZXQgY2xvc2VkLCByZWFzb246IFwiKS5jb25jYXQodHx8XCJ1bmRlZmluZWQgLT4gXCIrSnkuTkVUV09SS19FUlJPUikpLHRoaXMuam9pbkluZm8mJnZiLldlYlNvY2tldFF1aXQodGhpcy5qb2luSW5mby5zaWQse2x0czpEYXRlLm5vdygpLHN1Y2M6ZT09PUh5LkxFQVZFPzE6LTEsY25hbWU6dGhpcy5qb2luSW5mby5jbmFtZSx1aWQ6dGhpcy5qb2luSW5mby51aWQsY2lkOnRoaXMuam9pbkluZm8uY2lkLGVycm9yQ29kZTp0fSksdGhpcy5fZGlzY29ubmVjdGVkUmVhc29uPWUsZSE9PUh5LkZBTExCQUNLJiYodGhpcy5zdGF0ZT1cIkRJU0NPTk5FQ1RFRFwiKSx0aGlzLnJlc2V0KCl9KSksdGhpcy5zaWduYWwub24oRHcuV1NfQ09OTkVDVEVELCgoKT0+e2lmKHRoaXMudXBkYXRlVHVybkNvbmZpZ0Zyb21TaWduYWwoKSx0aGlzLnN0YXRlPVwiQ09OTkVDVEVEXCIsdGhpcy5qb2luSW5mbyYmKFwiYXVkaWVuY2VcIj09PXRoaXMucm9sZSYmdGhpcy5fY2xpZW50Um9sZU9wdGlvbnMmJih0aGlzLl9jbGllbnRSb2xlT3B0aW9ucy5sZXZlbHx8dGhpcy5fY2xpZW50Um9sZU9wdGlvbnMuZGVsYXkpJiYoZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIHBhdGNoIHRvIHNlbmQgc2V0IGNsaWVudCByb2xlLCByb2xlOiBcIikuY29uY2F0KHRoaXMucm9sZSxcIiwgbW9kZTogXCIpLmNvbmNhdCh0aGlzLnNwZWMubW9kZSxcIiwgbGV2ZWw6IFwiKS5jb25jYXQodGhpcy5fY2xpZW50Um9sZU9wdGlvbnMubGV2ZWwsXCIsIGRlbGF5OiBcIikuY29uY2F0KHRoaXMuX2NsaWVudFJvbGVPcHRpb25zLmRlbGF5KSksdGhpcy5zZXRDbGllbnRSb2xlKHRoaXMucm9sZSx0aGlzLl9jbGllbnRSb2xlT3B0aW9ucykpLHZiLmpvaW5HYXRld2F5KHRoaXMuam9pbkluZm8uc2lkLHtsdHM6dGhpcy5qb2luR2F0ZXdheVN0YXJ0VGltZSxzdWNjOiEwLGVjOm51bGwsdmlkOnRoaXMuam9pbkluZm8udmlkLGFkZHI6dGhpcy5zaWduYWwudXJsLHVpZDp0aGlzLmpvaW5JbmZvLnVpZCxjaWQ6dGhpcy5qb2luSW5mby5jaWQsZmlyc3RTdWNjZXNzOnRoaXMuX2lzUHJvYWN0aXZlSm9pbixhdm9pZEpvaW5TdGFydFRpbWU6dGhpcy5zdG9yZS5hdm9pZEpvaW5TdGFydCxpc1Byb3h5OiEhdGhpcy5qb2luSW5mby5wcm94eVNlcnZlcixzaWduYWxDaGFubmVsOlwiMFwiLHByZWxvYWQ6dGhpcy5qb2luSW5mby5wcmVsb2FkfSksdGhpcy5faXNQcm9hY3RpdmVKb2luPSExLHRoaXMuam9pbkluZm8udXNlTG9jYWxBY2Nlc3NQb2ludCYmMT09PXRoaXMuam9pbkluZm8uc2V0TG9jYWxBUFZlcnNpb24pKXtjb25zdCBlPXRoaXMuc2lnbmFsLnVybCYmdGhpcy5zaWduYWwudXJsLm1hdGNoKC93c3NcXDpcXC9cXC8oW146XSspOihcXGQrKS8pO2lmKCFlKXJldHVybiB2b2lkIGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBzZXQgbG9jYWwgYWNjZXNzIHBvaW50IGFmdGVyIGpvaW5lZCBmYWlsZWQ6IFwiKS5jb25jYXQoZSkpO0pBKFwiRVZFTlRfUkVQT1JUX0RPTUFJTlwiLGVbMV0pLEpBKFwiRVZFTlRfUkVQT1JUX0JBQ0tVUF9ET01BSU5cIixlWzFdKSxKQShcIkxPR19VUExPQURfU0VSVkVSXCIsXCJcIi5jb25jYXQoZVsxXSxcIjo2NDQ0XCIpKX19KSksdGhpcy5zaWduYWwub24oa3cuT05fVVBMSU5LX1NUQVRTLChlPT57dGhpcy5fc3RhdHNDb2xsZWN0b3IudXBkYXRlVXBsaW5rU3RhdHMoZSl9KSksdGhpcy5zaWduYWwub24oRHcuUkVRVUVTVF9SRUNPVkVSLCgoZSx0LGkpPT57aWYoIXRoaXMuam9pbkluZm8pcmV0dXJuIGkobmV3IHliKFJ5LlVORVhQRUNURURfRVJST1IsXCJnYXRld2F5OiBjYW4gbm90IHJlY292ZXIsIG5vIGpvaW4gaW5mb1wiKSk7ZSYmKHRoaXMuam9pbkluZm8ubXVsdGlJUD1lLHRoaXMuaGFzQ2hhbmdlQkdQQWRkcmVzcz0hMCksdGhpcy5pc1NpZ25hbFJlY292ZXI9ITAsWnkodGhpcywkdy5SRVFVRVNUX05FV19HQVRFV0FZX0xJU1QpLnRoZW4odCkuY2F0Y2goaSl9KSksdGhpcy5zaWduYWwub24oRHcuUkVRVUVTVF9KT0lOX0lORk8sKGFzeW5jIGU9Pnt2YXIgdDtpZih0aGlzLnVwZGF0ZVR1cm5Db25maWdGcm9tU2lnbmFsKCksdGhpcy5zdG9yZS51c2VQMlApcmV0dXJuIHZvaWQgZSh0aGlzLmdldEpvaW5NZXNzYWdlKHtvcnRjOnt9fSkpO2NvbnN0e2ljZVBhcmFtZXRlcnM6aSxkdGxzUGFyYW1ldGVyczpuLHJ0cENhcGFiaWxpdGllczpyfT1hd2FpdCBaeSh0aGlzLCR3LlJFUVVFU1RfUDJQX0NPTk5FQ1RJT05fUEFSQU1TLHt0dXJuU2VydmVyOm51bGw9PT0odD10aGlzLmpvaW5JbmZvKXx8dm9pZCAwPT09dD92b2lkIDA6dC50dXJuU2VydmVyfSk7ZSh0aGlzLmdldEpvaW5NZXNzYWdlKHtvcnRjOntpY2VQYXJhbWV0ZXJzOmksZHRsc1BhcmFtZXRlcnM6bixydHBDYXBhYmlsaXRpZXM6cix2ZXJzaW9uOlwiMlwifX0pKX0pKSx0aGlzLnNpZ25hbC5vbihEdy5SRVFVRVNUX1JFSk9JTl9JTkZPLChlPT57ZSh0aGlzLmdldFJlam9pbk1lc3NhZ2UoKSl9KSksdGhpcy5zaWduYWwub24oRHcuUkVQT1JUX0pPSU5fR0FURVdBWSwoKGUsdCk9PntpZighdGhpcy5qb2luSW5mbylyZXR1cm47bGV0IGksbj1cIlwiO3ZhciByO2UgaW5zdGFuY2VvZiB5Yj8oaT0obnVsbD09PShyPWUuZGF0YSl8fHZvaWQgMD09PXI/dm9pZCAwOnIuZGVzYyl8fGUuY29kZSxuPWUubWVzc2FnZSk6aT1lO3ZiLmpvaW5HYXRld2F5KHRoaXMuam9pbkluZm8uc2lkLHtsdHM6dGhpcy5qb2luR2F0ZXdheVN0YXJ0VGltZSxzdWNjOiExLGVjOmksZXJyb3JNc2c6bixhZGRyOnQsdWlkOnRoaXMuam9pbkluZm8udWlkLGNpZDp0aGlzLmpvaW5JbmZvLmNpZCxmaXJzdFN1Y2Nlc3M6dGhpcy5faXNQcm9hY3RpdmVKb2luLGF2b2lkSm9pblN0YXJ0VGltZTp0aGlzLnN0b3JlLmF2b2lkSm9pblN0YXJ0LGlzUHJveHk6ISF0aGlzLmpvaW5JbmZvLnByb3h5U2VydmVyLHNpZ25hbENoYW5uZWw6XCIwXCIscHJlbG9hZDp0aGlzLmpvaW5JbmZvLnByZWxvYWR9KSx0aGlzLl9pc1Byb2FjdGl2ZUpvaW49ITF9KSksdGhpcy5zaWduYWwub24oRHcuSVNfUDJQX0RJU0NPTk5FQ1RFRCwoZT0+e2UodEEodGhpcywkdy5JU19QMlBfRElTQ09OTkVDVEVEKSl9KSksdGhpcy5zaWduYWwub24oRHcuRElTQ09OTkVDVF9QMlAsKCgpPT57dGhpcy5lbWl0KCR3LkRJU0NPTk5FQ1RfUDJQKX0pKSx0aGlzLnNpZ25hbC5vbihEdy5SRVFVRVNUX1NVQ0NFU1MsKCgpPT57dGhpcy5fc2lnbmFsVGltZW91dD0hMX0pKSx0aGlzLnNpZ25hbC5vbihEdy5SRVFVRVNUX1RJTUVPVVQsKCgpPT57dGhpcy5fc2lnbmFsVGltZW91dD0hMH0pKSx0aGlzLnNpZ25hbC5vbihEdy5KT0lOX1JFU1BPTlNFLChlPT57Y29uc3QgdD10aGlzLmdldEN1cnJlbnRHYXRld2F5QWRkcmVzcygpO3RoaXMuZW1pdCgkdy5KT0lOX1JFU1BPTlNFLGUsdCl9KSksdGhpcy5zaWduYWwub24oRHcuUFJFX0NPTk5FQ1RfUEMsKGFzeW5jKCk9PntpZih0aGlzLmpvaW5JbmZvKXt0aGlzLnVwZGF0ZVR1cm5Db25maWdGcm9tU2lnbmFsKCk7Y29uc3QgZT10aGlzLmdldEN1cnJlbnRHYXRld2F5QWRkcmVzcygpLHQ9WEEoXCJGSU5HRVJQUklOVFwiKXx8dGhpcy5qb2luSW5mby5hcFJlc3BvbnNlLmFkZHJlc3Nlc1t0aGlzLnNpZ25hbC5jdXJyZW50VVJMSW5kZXhdLmZpbmdlcnByaW50O2lmKGUmJnQpe2NvbnN0IGk9cVUoZSk7dGhpcy5lbWl0KCR3LlBSRV9DT05ORUNUX1BDLHtjYW5kaWRhdGVzOmksZmluZ2VycHJpbnQ6dH0pfX19KSksdGhpcy5zaWduYWwub24oRHcuUkVDT1ZFUl9OT1RJRklDQVRJT04sKGU9Pnt0aGlzLmpvaW5JbmZvJiZcInN0cmluZ1wiPT10eXBlb2YgWEEoXCJBUF9SRVFVRVNUX0RFVEFJTFwiKSYmKHRoaXMuam9pbkluZm8uYXBSZXF1ZXN0RGV0YWlsPVwiXCIuY29uY2F0KFhBKFwiQVBfUkVRVUVTVF9ERVRBSUxcIiksXCI7XCIpLmNvbmNhdChlKSl9KSl9YXN5bmMgdHJ5VW5zdWJCZWZvcmVSZXN1YihlLHQpe3RyeXthd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KFB3LlVOU1VCU0NSSUJFLHtwMnBfaWQ6dGhpcy5zdG9yZS5wMnBJZCxzdHJlYW1faWQ6ZSxvcnRjOlt0XX0sITApfWNhdGNoKGUpe3Rocm93IGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIHRyeVVuc3ViQmVmb3JlUmVzdWIgd2FybmluZ1wiKSxlKSxlfX1hc3luYyB0cnlVbnN1YkRhdGFDaGFubmVsQmVmb3JlUmVzdWIoZSx0KXt0cnl7YXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChQdy5VTlNVQlNDUklCRSx7c3RyZWFtX2lkOnQuaWR9LCEwKX1jYXRjaChlKXt0aHJvdyBmYi53YXJuaW5nKFwidW5zdWJzY3JpYmUgZGF0YWNoYW5uZWwgd2FybmluZ1wiLGUpLGV9fWFzeW5jIHRyeVVucHViQmVmb3JlUmVwdWIoZSx0KXt0cnl7YXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChQdy5VTlBVQkxJU0gse3N0cmVhbV9pZDplLG9ydGM6dH0sITApfWNhdGNoKGUpe3Rocm93IGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIHRyeVVucHViQmVmb3JlUmVwdWIgd2FybmluZzogXCIpLGUpLGV9fWFzeW5jIHRyeVVucHViRGF0YUNoYW5uZWxCZWZvcmVSZXB1YihlLHQpe3RyeXthd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KFB3LlVOUFVCTElTSF9EQVRBU1RSRUFNLHtjaGFubm5lbF9pZDp0LmNoYW5uZWxJZH0sITApfWNhdGNoKGUpe3Rocm93IGZiLndhcm5pbmcoXCJ1bnB1Ymxpc2ggZGF0YXN0cmVhbSB3YXJuaW5nOiBcIixlKSxlfX1hc3luYyB0cnlNYXNzVW5zdWJCZWZvcmVSZXN1YihlKXtjb25zdCB0PXt1c2VyczplLm1hcCgoZT0+KHtzdHJlYW1faWQ6ZS5zdHJlYW1faWQsc3RyZWFtX3R5cGU6ZS5zdHJlYW1fdHlwZX0pKSl9O3RyeXthd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KFB3LlVOU1VCU0NSSUJFX1NUUkVBTVMsdCwhMCl9Y2F0Y2goZSl7dGhyb3cgZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gdHJ5TWFzc1Vuc3ViQmVmb3JlUmVzdWIgd2FybmluZ1wiKSxlKSxlfX1hc3luYyBtdXRlTG9jYWwoZSx0KXtjb25zdCBpPXthY3Rpb246ZS5maW5kKChlPT5lLnN0cmVhbV90eXBlPT09WncuQXVkaW8pKT9cIm11dGVfbG9jYWxfYXVkaW9cIjpcIm11dGVfbG9jYWxfdmlkZW9cIixwMnBfaWQ6dGhpcy5zdG9yZS5wMnBJZCxvcnRjOmUsc3RyZWFtX2lkOnR9O3RyeXthd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KFB3LkNPTlRST0wsaSwhMCwhMCl9Y2F0Y2goZSl7dGhyb3cgZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gZ2F0ZXdheSBtdXRlTG9jYWwgd2FybmluZzogXCIpLGUpLGV9fWFzeW5jIHVubXV0ZUxvY2FsKGUsdCl7Y29uc3QgaT17YWN0aW9uOmUuZmluZCgoZT0+ZS5zdHJlYW1fdHlwZT09PVp3LkF1ZGlvKSk/XCJ1bm11dGVfbG9jYWxfYXVkaW9cIjpcInVubXV0ZV9sb2NhbF92aWRlb1wiLHAycF9pZDp0aGlzLnN0b3JlLnAycElkLG9ydGM6ZSxzdHJlYW1faWQ6dH07dHJ5e2F3YWl0IHRoaXMuc2lnbmFsLnJlcXVlc3QoUHcuQ09OVFJPTCxpLCEwLCEwKX1jYXRjaChlKXt0aHJvdyBmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBnYXRld2F5IHVubXV0ZUxvY2FsIHdhcm5pbmc6IFwiKSxlKSxlfX1hc3luYyBtdXRlUmVtb3RlKGUsdCl7Y29uc3QgaT17YWN0aW9uOmU9PT1kTy5BVURJTz9cIm11dGVfcmVtb3RlX2F1ZGlvXCI6XCJtdXRlX3JlbW90ZV92aWRlb1wiLHAycF9pZDp0aGlzLnN0b3JlLnAycElkLHN0cmVhbV9pZDp0fTt0cnl7YXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChQdy5DT05UUk9MLGksITAsITApfWNhdGNoKGUpe3Rocm93IGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIGdhdGV3YXkgbXV0ZVJlbW90ZSB3YXJuaW5nOiBcIiksZSksZX19YXN5bmMgdW5tdXRlUmVtb3RlKGUsdCl7Y29uc3QgaT17YWN0aW9uOmU9PT1kTy5BVURJTz9cInVubXV0ZV9yZW1vdGVfYXVkaW9cIjpcInVubXV0ZV9yZW1vdGVfdmlkZW9cIixwMnBfaWQ6dGhpcy5zdG9yZS5wMnBJZCxzdHJlYW1faWQ6dH07dHJ5e2F3YWl0IHRoaXMuc2lnbmFsLnJlcXVlc3QoUHcuQ09OVFJPTCxpLCEwLCEwKX1jYXRjaChlKXt0aHJvdyBmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBnYXRld2F5IHVubXV0ZVJlbW90ZSB3YXJuaW5nOiBcIiksZSksZX19dXBsb2FkV1JUQ1N0YXRzKGUpe3RoaXMuc2lnbmFsLnVwbG9hZFdSVENTdGF0cyhlKX11cGxvYWQoZSx0KXt0aGlzLnNpZ25hbC51cGxvYWQoZSx0KX1nZXRTaWduYWxSVFQoKXtyZXR1cm4gdGhpcy5zaWduYWwucnR0fWFzeW5jIHJlc3RhcnRJQ0UoZSl7Y29uc3QgdD17cDJwX2lkOnRoaXMuc3RvcmUucDJwSWQsc3RyZWFtX2lkOnRoaXMuc3RvcmUudWlkLG9ydGM6ZX07dHJ5e3JldHVybiBhd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KFB3LlJFU1RBUlRfSUNFLHQsITApfWNhdGNoKGUpe3Rocm93IGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFAyUENoYW5uZWwucmVzdGFydElDRSB3YXJuaW5nOiBcIiksZSksZX19cmVjb25uZWN0KCl7XCJDT05ORUNURURcIj09PXRoaXMuc3RhdGUmJnRoaXMuc2lnbmFsLnJlY29ubmVjdCh2b2lkIDAsSnkuUDJQX0ZBSUxFRCl9Z2V0Q3VycmVudEdhdGV3YXlBZGRyZXNzKCl7dmFyIGUsdDtpZighWEEoXCJHQVRFV0FZX1dTU19BRERSRVNTXCIpKXJldHVybiBYQShcIlVTRV9DQU5ESURBVEVfRlJPTV9BUF9ERVRBSUxcIikmJm51bGwhPT0oZT10aGlzLmpvaW5JbmZvKSYmdm9pZCAwIT09ZSYmZS5hcEdhdGV3YXlBZGRyZXNzPyhmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gdXNlIGNhbmRpZGF0ZSBmcm9tIGFwIGRldGFpbCwgXCIpLmNvbmNhdChKU09OLnN0cmluZ2lmeSh0aGlzLmpvaW5JbmZvLmFwR2F0ZXdheUFkZHJlc3MpKSksdGhpcy5qb2luSW5mby5hcEdhdGV3YXlBZGRyZXNzKTpudWxsIT09KHQ9dGhpcy5qb2luSW5mbykmJnZvaWQgMCE9PXQmJnQuZ2F0ZXdheUFkZHJzP3RoaXMuam9pbkluZm8uZ2F0ZXdheUFkZHJzW3RoaXMuc2lnbmFsLmN1cnJlbnRVUkxJbmRleF06dm9pZCAwfWFzeW5jIHNldFB1Ymxpc2hBdWRpb0ZpbHRlckVuYWJsZWQoZSl7YXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChQdy5TRVRfUEFSQU1FVEVSLHtlbmFibGVQdWJsaXNoQXVkaW9GaWx0ZXI6ZX0pfX1sZXQgZng9MCxteD0wO2Z1bmN0aW9uIFR4KGUsdCxpLG4pe3JldHVybiBuZXcgR2goKChyLG8pPT57dC50aW1lb3V0PXQudGltZW91dHx8WEEoXCJIVFRQX0NPTk5FQ1RfVElNRU9VVFwiKSx0LnJlc3BvbnNlVHlwZT10LnJlc3BvbnNlVHlwZXx8XCJqc29uXCIsdC5kYXRhJiYhaT8odC5kYXRhPUpTT04uc3RyaW5naWZ5KHQuZGF0YSksZngrPV9BKHQuZGF0YSkpOmkmJih0LmRhdGEuc2l6ZT9meCs9dC5kYXRhLnNpemU6dC5kYXRhIGluc3RhbmNlb2YgRm9ybURhdGE/ZngrPUVBKHQuZGF0YSk6ZngrPV9BKEpTT04uc3RyaW5naWZ5KHQuZGF0YSkpKSx0LmhlYWRlcnM9dC5oZWFkZXJzfHx7fSx0LmhlYWRlcnNbXCJDb250ZW50LVR5cGVcIl09dC5oZWFkZXJzW1wiQ29udGVudC1UeXBlXCJdfHxcImFwcGxpY2F0aW9uL2pzb25cIix0Lm1ldGhvZD1cIlBPU1RcIix0LnVybD1lLEx2LnJlcXVlc3QodCkudGhlbigoZT0+e1wic3RyaW5nXCI9PXR5cGVvZiBlLmRhdGE/bXgrPV9BKGUuZGF0YSk6ZS5kYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXJ8fGUuZGF0YSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXk/bXgrPWUuZGF0YS5ieXRlTGVuZ3RoOm14Kz1fQShKU09OLnN0cmluZ2lmeShlLmRhdGEpKSxuJiZyKHtkYXRhOmUuZGF0YSxoZWFkZXJzOmUuaGVhZGVyc30pLHIoZS5kYXRhKX0pKS5jYXRjaCgoZT0+e0x2LmlzQ2FuY2VsKGUpP28obmV3IHliKFJ5Lk9QRVJBVElPTl9BQk9SVEVELFwiY2FuY2VsIHRva2VuIGNhbmNlbGVkXCIpKTpcIkVDT05OQUJPUlRFRFwiPT09ZS5jb2RlP28obmV3IHliKFJ5Lk5FVFdPUktfVElNRU9VVCxlLm1lc3NhZ2UpKTplLnJlc3BvbnNlP28obmV3IHliKFJ5Lk5FVFdPUktfUkVTUE9OU0VfRVJST1IsZS5yZXNwb25zZS5zdGF0dXMpKTpvKG5ldyB5YihSeS5ORVRXT1JLX0VSUk9SLGUubWVzc2FnZSkpfSkpfSkpfVxuLyohIGZvcm1kYXRhLXBvbHlmaWxsLiBNSVQgTGljZW5zZS4gSmltbXkgVz9ydGluZyA8aHR0cHM6Ly9qaW1teS53YXJ0aW5nLnNlL29wZW5zb3VyY2U+ICovIWZ1bmN0aW9uKCl7dmFyIGU7ZnVuY3Rpb24gaShlKXt2YXIgdD0wO3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0PGUubGVuZ3RoP3tkb25lOiExLHZhbHVlOmVbdCsrXX06e2RvbmU6ITB9fX12YXIgbj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBPYmplY3QuZGVmaW5lUHJvcGVydGllcz9PYmplY3QuZGVmaW5lUHJvcGVydHk6ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBlPT1BcnJheS5wcm90b3R5cGV8fGU9PU9iamVjdC5wcm90b3R5cGV8fChlW3RdPWkudmFsdWUpLGV9O3ZhciByLG89ZnVuY3Rpb24oZSl7ZT1bXCJvYmplY3RcIj09dHlwZW9mIGdsb2JhbFRoaXMmJmdsb2JhbFRoaXMsZSxcIm9iamVjdFwiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3csXCJvYmplY3RcIj09dHlwZW9mIHNlbGYmJnNlbGYsXCJvYmplY3RcIj09dHlwZW9mIHQmJnRdO2Zvcih2YXIgaT0wO2k8ZS5sZW5ndGg7KytpKXt2YXIgbj1lW2ldO2lmKG4mJm4uTWF0aD09TWF0aClyZXR1cm4gbn10aHJvdyBFcnJvcihcIkNhbm5vdCBmaW5kIGdsb2JhbCBvYmplY3RcIil9KHRoaXMpO2Z1bmN0aW9uIHMoZSx0KXtpZih0KWU6e3ZhciBpPW87ZT1lLnNwbGl0KFwiLlwiKTtmb3IodmFyIHI9MDtyPGUubGVuZ3RoLTE7cisrKXt2YXIgcz1lW3JdO2lmKCEocyBpbiBpKSlicmVhayBlO2k9aVtzXX0odD10KHI9aVtlPWVbZS5sZW5ndGgtMV1dKSkhPXImJm51bGwhPXQmJm4oaSxlLHtjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6dH0pfX1mdW5jdGlvbiBhKGUpe3JldHVybihlPXtuZXh0OmV9KVtTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LGV9ZnVuY3Rpb24gYyhlKXt2YXIgdD1cInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3ImJmVbU3ltYm9sLml0ZXJhdG9yXTtyZXR1cm4gdD90LmNhbGwoZSk6e25leHQ6aShlKX19aWYocyhcIlN5bWJvbFwiLChmdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUsdCl7dGhpcy5BPWUsbih0aGlzLFwiZGVzY3JpcHRpb25cIix7Y29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnR9KX1pZihlKXJldHVybiBlO3QucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuQX07dmFyIGk9XCJqc2NvbXBfc3ltYm9sX1wiKygxZTkqTWF0aC5yYW5kb20oKT4+PjApK1wiX1wiLHI9MDtyZXR1cm4gZnVuY3Rpb24gZShuKXtpZih0aGlzIGluc3RhbmNlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yXCIpO3JldHVybiBuZXcgdChpKyhufHxcIlwiKStcIl9cIityKyssbil9fSkpLHMoXCJTeW1ib2wuaXRlcmF0b3JcIiwoZnVuY3Rpb24oZSl7aWYoZSlyZXR1cm4gZTtlPVN5bWJvbChcIlN5bWJvbC5pdGVyYXRvclwiKTtmb3IodmFyIHQ9XCJBcnJheSBJbnQ4QXJyYXkgVWludDhBcnJheSBVaW50OENsYW1wZWRBcnJheSBJbnQxNkFycmF5IFVpbnQxNkFycmF5IEludDMyQXJyYXkgVWludDMyQXJyYXkgRmxvYXQzMkFycmF5IEZsb2F0NjRBcnJheVwiLnNwbGl0KFwiIFwiKSxyPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBzPW9bdFtyXV07XCJmdW5jdGlvblwiPT10eXBlb2YgcyYmXCJmdW5jdGlvblwiIT10eXBlb2Ygcy5wcm90b3R5cGVbZV0mJm4ocy5wcm90b3R5cGUsZSx7Y29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGEoaSh0aGlzKSl9fSl9cmV0dXJuIGV9KSksXCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LnNldFByb3RvdHlwZU9mKXI9T2JqZWN0LnNldFByb3RvdHlwZU9mO2Vsc2V7dmFyIGQ7ZTp7dmFyIGw9e307dHJ5e2wuX19wcm90b19fPXthOiEwfSxkPWwuYTticmVhayBlfWNhdGNoKGUpe31kPSExfXI9ZD9mdW5jdGlvbihlLHQpe2lmKGUuX19wcm90b19fPXQsZS5fX3Byb3RvX18hPT10KXRocm93IG5ldyBUeXBlRXJyb3IoZStcIiBpcyBub3QgZXh0ZW5zaWJsZVwiKTtyZXR1cm4gZX06bnVsbH12YXIgdT1yO2Z1bmN0aW9uIGgoKXt0aGlzLm09ITEsdGhpcy5qPW51bGwsdGhpcy52PXZvaWQgMCx0aGlzLmg9MSx0aGlzLnU9dGhpcy5DPTAsdGhpcy5sPW51bGx9ZnVuY3Rpb24gcChlKXtpZihlLm0pdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IHJ1bm5pbmdcIik7ZS5tPSEwfWZ1bmN0aW9uIF8oZSx0KXtyZXR1cm4gZS5oPTMse3ZhbHVlOnR9fWZ1bmN0aW9uIEUoZSl7dGhpcy5nPW5ldyBoLHRoaXMuRz1lfWZ1bmN0aW9uIGYoZSx0LGksbil7dHJ5e3ZhciByPXQuY2FsbChlLmcuaixpKTtpZighKHIgaW5zdGFuY2VvZiBPYmplY3QpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJJdGVyYXRvciByZXN1bHQgXCIrcitcIiBpcyBub3QgYW4gb2JqZWN0XCIpO2lmKCFyLmRvbmUpcmV0dXJuIGUuZy5tPSExLHI7dmFyIG89ci52YWx1ZX1jYXRjaCh0KXtyZXR1cm4gZS5nLmo9bnVsbCxlLmcucyh0KSxtKGUpfXJldHVybiBlLmcuaj1udWxsLG4uY2FsbChlLmcsbyksbShlKX1mdW5jdGlvbiBtKGUpe2Zvcig7ZS5nLmg7KXRyeXt2YXIgdD1lLkcoZS5nKTtpZih0KXJldHVybiBlLmcubT0hMSx7dmFsdWU6dC52YWx1ZSxkb25lOiExfX1jYXRjaCh0KXtlLmcudj12b2lkIDAsZS5nLnModCl9aWYoZS5nLm09ITEsZS5nLmwpe2lmKHQ9ZS5nLmwsZS5nLmw9bnVsbCx0LkYpdGhyb3cgdC5EO3JldHVybnt2YWx1ZTp0LnJldHVybixkb25lOiEwfX1yZXR1cm57dmFsdWU6dm9pZCAwLGRvbmU6ITB9fWZ1bmN0aW9uIFQoZSl7dGhpcy5uZXh0PWZ1bmN0aW9uKHQpe3JldHVybiBlLm8odCl9LHRoaXMudGhyb3c9ZnVuY3Rpb24odCl7cmV0dXJuIGUucyh0KX0sdGhpcy5yZXR1cm49ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7cChlLmcpO3ZhciBpPWUuZy5qO3JldHVybiBpP2YoZSxcInJldHVyblwiaW4gaT9pLnJldHVybjpmdW5jdGlvbihlKXtyZXR1cm57dmFsdWU6ZSxkb25lOiEwfX0sdCxlLmcucmV0dXJuKTooZS5nLnJldHVybih0KSxtKGUpKX0oZSx0KX0sdGhpc1tTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9fWZ1bmN0aW9uIFMoZSx0KXtyZXR1cm4gdD1uZXcgVChuZXcgRSh0KSksdSYmZS5wcm90b3R5cGUmJnUodCxlLnByb3RvdHlwZSksdH1pZihoLnByb3RvdHlwZS5vPWZ1bmN0aW9uKGUpe3RoaXMudj1lfSxoLnByb3RvdHlwZS5zPWZ1bmN0aW9uKGUpe3RoaXMubD17RDplLEY6ITB9LHRoaXMuaD10aGlzLkN8fHRoaXMudX0saC5wcm90b3R5cGUucmV0dXJuPWZ1bmN0aW9uKGUpe3RoaXMubD17cmV0dXJuOmV9LHRoaXMuaD10aGlzLnV9LEUucHJvdG90eXBlLm89ZnVuY3Rpb24oZSl7cmV0dXJuIHAodGhpcy5nKSx0aGlzLmcuaj9mKHRoaXMsdGhpcy5nLmoubmV4dCxlLHRoaXMuZy5vKToodGhpcy5nLm8oZSksbSh0aGlzKSl9LEUucHJvdG90eXBlLnM9ZnVuY3Rpb24oZSl7cmV0dXJuIHAodGhpcy5nKSx0aGlzLmcuaj9mKHRoaXMsdGhpcy5nLmoudGhyb3csZSx0aGlzLmcubyk6KHRoaXMuZy5zKGUpLG0odGhpcykpfSxzKFwiQXJyYXkucHJvdG90eXBlLmVudHJpZXNcIiwoZnVuY3Rpb24oZSl7cmV0dXJuIGV8fGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7ZSBpbnN0YW5jZW9mIFN0cmluZyYmKGUrPVwiXCIpO3ZhciBpPTAsbj0hMSxyPXtuZXh0OmZ1bmN0aW9uKCl7aWYoIW4mJmk8ZS5sZW5ndGgpe3ZhciByPWkrKztyZXR1cm57dmFsdWU6dChyLGVbcl0pLGRvbmU6ITF9fXJldHVybiBuPSEwLHtkb25lOiEwLHZhbHVlOnZvaWQgMH19fTtyZXR1cm4gcltTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHJ9LHJ9KHRoaXMsKGZ1bmN0aW9uKGUsdCl7cmV0dXJuW2UsdF19KSl9fSkpLFwidW5kZWZpbmVkXCIhPXR5cGVvZiBCbG9iJiYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIEZvcm1EYXRhfHwhRm9ybURhdGEucHJvdG90eXBlLmtleXMpKXt2YXIgZz1mdW5jdGlvbihlLHQpe2Zvcih2YXIgaT0wO2k8ZS5sZW5ndGg7aSsrKXQoZVtpXSl9LFI9ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZSgvXFxyP1xcbnxcXHIvZyxcIlxcclxcblwiKX0sQz1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIHQgaW5zdGFuY2VvZiBCbG9iPyhpPXZvaWQgMCE9PWk/U3RyaW5nKGkrXCJcIik6XCJzdHJpbmdcIj09dHlwZW9mIHQubmFtZT90Lm5hbWU6XCJibG9iXCIsdC5uYW1lPT09aSYmXCJbb2JqZWN0IEJsb2JdXCIhPT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCl8fCh0PW5ldyBGaWxlKFt0XSxpKSksW1N0cmluZyhlKSx0XSk6W1N0cmluZyhlKSxTdHJpbmcodCldfSxJPWZ1bmN0aW9uKGUsdCl7aWYoZS5sZW5ndGg8dCl0aHJvdyBuZXcgVHlwZUVycm9yKHQrXCIgYXJndW1lbnQgcmVxdWlyZWQsIGJ1dCBvbmx5IFwiK2UubGVuZ3RoK1wiIHByZXNlbnQuXCIpfSx2PVwib2JqZWN0XCI9PXR5cGVvZiBnbG9iYWxUaGlzP2dsb2JhbFRoaXM6XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdz93aW5kb3c6XCJvYmplY3RcIj09dHlwZW9mIHNlbGY/c2VsZjp0aGlzLHk9di5Gb3JtRGF0YSxBPXYuWE1MSHR0cFJlcXVlc3QmJnYuWE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLnNlbmQsYj12LlJlcXVlc3QmJnYuZmV0Y2gsdz12Lm5hdmlnYXRvciYmdi5uYXZpZ2F0b3Iuc2VuZEJlYWNvbixPPXYuRWxlbWVudCYmdi5FbGVtZW50LnByb3RvdHlwZSxOPXYuU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWc7TiYmKEJsb2IucHJvdG90eXBlW05dfHwoQmxvYi5wcm90b3R5cGVbTl09XCJCbG9iXCIpLFwiRmlsZVwiaW4gdiYmIUZpbGUucHJvdG90eXBlW05dJiYoRmlsZS5wcm90b3R5cGVbTl09XCJGaWxlXCIpKTt0cnl7bmV3IEZpbGUoW10sXCJcIil9Y2F0Y2goZSl7di5GaWxlPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gZT1uZXcgQmxvYihlLGl8fHt9KSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLHtuYW1lOnt2YWx1ZTp0fSxsYXN0TW9kaWZpZWQ6e3ZhbHVlOisoaSYmdm9pZCAwIT09aS5sYXN0TW9kaWZpZWQ/bmV3IERhdGUoaS5sYXN0TW9kaWZpZWQpOm5ldyBEYXRlKX0sdG9TdHJpbmc6e3ZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuXCJbb2JqZWN0IEZpbGVdXCJ9fX0pLE4mJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLE4se3ZhbHVlOlwiRmlsZVwifSksZX19dmFyIEQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZSgvXFxuL2csXCIlMEFcIikucmVwbGFjZSgvXFxyL2csXCIlMERcIikucmVwbGFjZSgvXCIvZyxcIiUyMlwiKX0sUD1mdW5jdGlvbihlKXt0aGlzLmk9W107dmFyIHQ9dGhpcztlJiZnKGUuZWxlbWVudHMsKGZ1bmN0aW9uKGUpe2lmKGUubmFtZSYmIWUuZGlzYWJsZWQmJlwic3VibWl0XCIhPT1lLnR5cGUmJlwiYnV0dG9uXCIhPT1lLnR5cGUmJiFlLm1hdGNoZXMoXCJmb3JtIGZpZWxkc2V0W2Rpc2FibGVkXSAqXCIpKWlmKFwiZmlsZVwiPT09ZS50eXBlKXt2YXIgaT1lLmZpbGVzJiZlLmZpbGVzLmxlbmd0aD9lLmZpbGVzOltuZXcgRmlsZShbXSxcIlwiLHt0eXBlOlwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCJ9KV07ZyhpLChmdW5jdGlvbihpKXt0LmFwcGVuZChlLm5hbWUsaSl9KSl9ZWxzZVwic2VsZWN0LW11bHRpcGxlXCI9PT1lLnR5cGV8fFwic2VsZWN0LW9uZVwiPT09ZS50eXBlP2coZS5vcHRpb25zLChmdW5jdGlvbihpKXshaS5kaXNhYmxlZCYmaS5zZWxlY3RlZCYmdC5hcHBlbmQoZS5uYW1lLGkudmFsdWUpfSkpOlwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlP2UuY2hlY2tlZCYmdC5hcHBlbmQoZS5uYW1lLGUudmFsdWUpOihpPVwidGV4dGFyZWFcIj09PWUudHlwZT9SKGUudmFsdWUpOmUudmFsdWUsdC5hcHBlbmQoZS5uYW1lLGkpKX0pKX07aWYoKGU9UC5wcm90b3R5cGUpLmFwcGVuZD1mdW5jdGlvbihlLHQsaSl7SShhcmd1bWVudHMsMiksdGhpcy5pLnB1c2goQyhlLHQsaSkpfSxlLmRlbGV0ZT1mdW5jdGlvbihlKXtJKGFyZ3VtZW50cywxKTt2YXIgdD1bXTtlPVN0cmluZyhlKSxnKHRoaXMuaSwoZnVuY3Rpb24oaSl7aVswXSE9PWUmJnQucHVzaChpKX0pKSx0aGlzLmk9dH0sZS5lbnRyaWVzPWZ1bmN0aW9uIGUoKXt2YXIgdCxpPXRoaXM7cmV0dXJuIFMoZSwoZnVuY3Rpb24oZSl7aWYoMT09ZS5oJiYodD0wKSwzIT1lLmgpcmV0dXJuIHQ8aS5pLmxlbmd0aD9lPV8oZSxpLmlbdF0pOihlLmg9MCxlPXZvaWQgMCksZTt0KyssZS5oPTJ9KSl9LGUuZm9yRWFjaD1mdW5jdGlvbihlLHQpe0koYXJndW1lbnRzLDEpO2Zvcih2YXIgaT1jKHRoaXMpLG49aS5uZXh0KCk7IW4uZG9uZTtuPWkubmV4dCgpKXt2YXIgcj1jKG4udmFsdWUpO249ci5uZXh0KCkudmFsdWUscj1yLm5leHQoKS52YWx1ZSxlLmNhbGwodCxyLG4sdGhpcyl9fSxlLmdldD1mdW5jdGlvbihlKXtJKGFyZ3VtZW50cywxKTt2YXIgdD10aGlzLmk7ZT1TdHJpbmcoZSk7Zm9yKHZhciBpPTA7aTx0Lmxlbmd0aDtpKyspaWYodFtpXVswXT09PWUpcmV0dXJuIHRbaV1bMV07cmV0dXJuIG51bGx9LGUuZ2V0QWxsPWZ1bmN0aW9uKGUpe0koYXJndW1lbnRzLDEpO3ZhciB0PVtdO3JldHVybiBlPVN0cmluZyhlKSxnKHRoaXMuaSwoZnVuY3Rpb24oaSl7aVswXT09PWUmJnQucHVzaChpWzFdKX0pKSx0fSxlLmhhcz1mdW5jdGlvbihlKXtJKGFyZ3VtZW50cywxKSxlPVN0cmluZyhlKTtmb3IodmFyIHQ9MDt0PHRoaXMuaS5sZW5ndGg7dCsrKWlmKHRoaXMuaVt0XVswXT09PWUpcmV0dXJuITA7cmV0dXJuITF9LGUua2V5cz1mdW5jdGlvbiBlKCl7dmFyIHQsaSxuLHIsbz10aGlzO3JldHVybiBTKGUsKGZ1bmN0aW9uKGUpe2lmKDE9PWUuaCYmKHQ9YyhvKSxpPXQubmV4dCgpKSwzIT1lLmgpcmV0dXJuIGkuZG9uZT92b2lkKGUuaD0wKToobj1pLnZhbHVlLHI9YyhuKSxfKGUsci5uZXh0KCkudmFsdWUpKTtpPXQubmV4dCgpLGUuaD0yfSkpfSxlLnNldD1mdW5jdGlvbihlLHQsaSl7SShhcmd1bWVudHMsMiksZT1TdHJpbmcoZSk7dmFyIG49W10scj1DKGUsdCxpKSxvPSEwO2codGhpcy5pLChmdW5jdGlvbih0KXt0WzBdPT09ZT9vJiYobz0hbi5wdXNoKHIpKTpuLnB1c2godCl9KSksbyYmbi5wdXNoKHIpLHRoaXMuaT1ufSxlLnZhbHVlcz1mdW5jdGlvbiBlKCl7dmFyIHQsaSxuLHIsbz10aGlzO3JldHVybiBTKGUsKGZ1bmN0aW9uKGUpe2lmKDE9PWUuaCYmKHQ9YyhvKSxpPXQubmV4dCgpKSwzIT1lLmgpcmV0dXJuIGkuZG9uZT92b2lkKGUuaD0wKToobj1pLnZhbHVlLChyPWMobikpLm5leHQoKSxfKGUsci5uZXh0KCkudmFsdWUpKTtpPXQubmV4dCgpLGUuaD0yfSkpfSxQLnByb3RvdHlwZS5fYXNOYXRpdmU9ZnVuY3Rpb24oKXtmb3IodmFyIGU9bmV3IHksdD1jKHRoaXMpLGk9dC5uZXh0KCk7IWkuZG9uZTtpPXQubmV4dCgpKXt2YXIgbj1jKGkudmFsdWUpO2k9bi5uZXh0KCkudmFsdWUsbj1uLm5leHQoKS52YWx1ZSxlLmFwcGVuZChpLG4pfXJldHVybiBlfSxQLnByb3RvdHlwZS5fYmxvYj1mdW5jdGlvbigpe3ZhciBlPVwiLS0tLWZvcm1kYXRhLXBvbHlmaWxsLVwiK01hdGgucmFuZG9tKCksdD1bXSxpPVwiLS1cIitlKydcXHJcXG5Db250ZW50LURpc3Bvc2l0aW9uOiBmb3JtLWRhdGE7IG5hbWU9XCInO3JldHVybiB0aGlzLmZvckVhY2goKGZ1bmN0aW9uKGUsbil7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGU/dC5wdXNoKGkrRChSKG4pKSsnXCJcXHJcXG5cXHJcXG4nK1IoZSkrXCJcXHJcXG5cIik6dC5wdXNoKGkrRChSKG4pKSsnXCI7IGZpbGVuYW1lPVwiJytEKGUubmFtZSkrJ1wiXFxyXFxuQ29udGVudC1UeXBlOiAnKyhlLnR5cGV8fFwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCIpK1wiXFxyXFxuXFxyXFxuXCIsZSxcIlxcclxcblwiKX0pKSx0LnB1c2goXCItLVwiK2UrXCItLVwiKSxuZXcgQmxvYih0LHt0eXBlOlwibXVsdGlwYXJ0L2Zvcm0tZGF0YTsgYm91bmRhcnk9XCIrZX0pfSxQLnByb3RvdHlwZVtTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZW50cmllcygpfSxQLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVyblwiW29iamVjdCBGb3JtRGF0YV1cIn0sTyYmIU8ubWF0Y2hlcyYmKE8ubWF0Y2hlcz1PLm1hdGNoZXNTZWxlY3Rvcnx8Ty5tb3pNYXRjaGVzU2VsZWN0b3J8fE8ubXNNYXRjaGVzU2VsZWN0b3J8fE8ub01hdGNoZXNTZWxlY3Rvcnx8Ty53ZWJraXRNYXRjaGVzU2VsZWN0b3J8fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0oZT0odGhpcy5kb2N1bWVudHx8dGhpcy5vd25lckRvY3VtZW50KS5xdWVyeVNlbGVjdG9yQWxsKGUpKS5sZW5ndGg7MDw9LS10JiZlLml0ZW0odCkhPT10aGlzOyk7cmV0dXJuLTE8dH0pLE4mJihQLnByb3RvdHlwZVtOXT1cIkZvcm1EYXRhXCIpLEEpe3ZhciBMPXYuWE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLnNldFJlcXVlc3RIZWFkZXI7di5YTUxIdHRwUmVxdWVzdC5wcm90b3R5cGUuc2V0UmVxdWVzdEhlYWRlcj1mdW5jdGlvbihlLHQpe0wuY2FsbCh0aGlzLGUsdCksXCJjb250ZW50LXR5cGVcIj09PWUudG9Mb3dlckNhc2UoKSYmKHRoaXMuQj0hMCl9LHYuWE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLnNlbmQ9ZnVuY3Rpb24oZSl7ZSBpbnN0YW5jZW9mIFA/KGU9ZS5fYmxvYigpLHRoaXMuQnx8dGhpcy5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC1UeXBlXCIsZS50eXBlKSxBLmNhbGwodGhpcyxlKSk6QS5jYWxsKHRoaXMsZSl9fWImJih2LmZldGNoPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQmJnQuYm9keSYmdC5ib2R5IGluc3RhbmNlb2YgUCYmKHQuYm9keT10LmJvZHkuX2Jsb2IoKSksYi5jYWxsKHRoaXMsZSx0KX0pLHcmJih2Lm5hdmlnYXRvci5zZW5kQmVhY29uPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBQJiYodD10Ll9hc05hdGl2ZSgpKSx3LmNhbGwodGhpcyxlLHQpfSksdi5Gb3JtRGF0YT1QfX0oKTtjb25zdCBTeD0oKT0+e2NvbnN0IGU9WEEoXCJBUkVBU1wiKTswPT09ZS5sZW5ndGgmJmUucHVzaChpTy5HTE9CQUwpO3JldHVybiBKbihlKS5jYWxsKGUsKChlLHQsaSk9Pntjb25zdCBuPWd4KHQpO3JldHVybiBuPzA9PT1pP246XCJcIi5jb25jYXQoZSxcIixcIikuY29uY2F0KG4pOmV9KSxcIlwiKX0sZ3g9ZT0+ZT09PWlPLk9WRVJTRUE/XCJcIi5jb25jYXQock8uQVNJQSxcIixcIikuY29uY2F0KHJPLkVVUk9QRSxcIixcIikuY29uY2F0KHJPLkFGUklDQSxcIixcIikuY29uY2F0KHJPLk5PUlRIX0FNRVJJQ0EsXCIsXCIpLmNvbmNhdChyTy5TT1VUSF9BTUVSSUNBLFwiLFwiKS5jb25jYXQock8uT0NFQU5JQSk6ck9bZV0sUng9ZT0+e2NvbnN0IHQ9e0NPREU6XCJcIixXRUJDU19ET01BSU46W10sV0VCQ1NfRE9NQUlOX0JBQ0tVUF9MSVNUOltdLFBST1hZX0NTOltdLENEU19BUDpbXSxBQ0NPVU5UX1JFR0lTVEVSOltdLFVBUF9BUDpbXSxFVkVOVF9SRVBPUlRfRE9NQUlOOltdLEVWRU5UX1JFUE9SVF9CQUNLVVBfRE9NQUlOOltdLExPR19VUExPQURfU0VSVkVSOltdLFBST1hZX1NFUlZFUl9UWVBFMzpbXX07cmV0dXJuIGUubWFwKChlPT57Y29uc3QgaT1vT1tlXSxuPU9iamVjdC5rZXlzKGkpO24mJm4ubWFwKChlPT57XCJDT0RFXCIhPT1lJiYodFtlXT10W2VdLmNvbmNhdChpW2VdKSl9KSl9KSksdH0sQ3g9e0dMT0JBTDp7QVNJQTpbaU8uQ0hJTkEsaU8uSkFQQU4saU8uSU5ESUEsaU8uS09SRUEsaU8uSEtNQ10sRVVST1BFOltdLE5PUlRIX0FNRVJJQ0E6W2lPLlVTXSxTT1VUSF9BTUVSSUNBOltdLE9DRUFOSUE6W10sQUZSSUNBOltdfX0sSXg9T2JqZWN0LmtleXMoQ3hbaU8uR0xPQkFMXSksdng9W2lPLkNISU5BLGlPLk5PUlRIX0FNRVJJQ0EsaU8uRVVST1BFLGlPLkFTSUEsaU8uSkFQQU4saU8uSU5ESUEsaU8uT0NFQU5JQSxpTy5TT1VUSF9BTUVSSUNBLGlPLkFGUklDQSxpTy5LT1JFQSxpTy5IS01DLGlPLlVTXSx5eD1mdW5jdGlvbihlLHQpe2xldCBpPVtdO2lmKERuKGUpLmNhbGwoZSxpTy5HTE9CQUwpKXtjb25zdCBvPVtpTy5HTE9CQUwsaU8uT1ZFUlNFQV0scz1PYmplY3Qua2V5cyhvTyk7aWYodD09PWlPLkdMT0JBTCl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9QQVJBTVMsXCJHTE9CQUwgaXMgYW4gaW52YWxpZCBleGNsdWRlZEFyZWEgdmFsdWVcIik7aWYodD09PWlPLkNISU5BKWk9W2lPLk9WRVJTRUFdO2Vsc2UgaWYocj10LERuKEl4KS5jYWxsKEl4LHIpKXtjb25zdCBlPShuPXQsQ3hbaU8uR0xPQkFMXVtuXXx8W10pLHI9Wy4uLm8sdCwuLi5lXTtpPXMuZmlsdGVyKChlPT4hRG4ocikuY2FsbChyLGUpKSl9ZWxzZSBpZihmdW5jdGlvbihlKXtsZXQgdD0hMTtyZXR1cm4gSXguZm9yRWFjaCgoaT0+e3ZhciBuO0RuKG49Q3hbaU8uR0xPQkFMXVtpXSkuY2FsbChuLGUpJiYodD0hMCl9KSksdH0odCkpe2NvbnN0IGU9ZnVuY3Rpb24oZSl7bGV0IHQ7cmV0dXJuIEl4LmZvckVhY2goKGk9Pnt2YXIgbjtEbihuPUN4W2lPLkdMT0JBTF1baV0pLmNhbGwobixlKSYmKHQ9aSl9KSksdH0odCksbj1bLi4ubyxlLHRdO2k9cy5maWx0ZXIoKGU9PiFEbihuKS5jYWxsKG4sZSkpKX1lbHNlIGk9ZTtpPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9W107cmV0dXJuIHZ4LmZvckVhY2goKGk9PntEbihlKS5jYWxsKGUsaSkmJnQucHVzaChpKX0pKSx0LmNvbmNhdChlLmZpbHRlcigoZT0+IURuKHZ4KS5jYWxsKHZ4LGUpKSkpfShpKX1lbHNlIGk9ZTt2YXIgbixyO3JldHVybiBpfTtmdW5jdGlvbiBBeChlKXt2YXIgdCxpO2lmKCFlJiZEbih0PVhBKFwiQVJFQVNcIikpLmNhbGwodCxpTy5FWFRFTlNJT05TKSlyZXR1cm4gZmIuZGVidWcoXCJ1cGRhdGUgYXJlYSBmcm9tIGFwIDogcmVzZXRcIiksdm9pZCBieChBYiwhMCk7aWYoIURuKGk9WEEoXCJBUkVBU1wiKSkuY2FsbChpLGlPLkdMT0JBTCl8fCFlKXJldHVybjtsZXQgbj1vTy5FWFRFTlNJT05TO24mJihuPXtDT0RFOmd4KGlPLkVYVEVOU0lPTlMpLFdFQkNTX0RPTUFJTjpbXCJhcC13ZWItMS1cIi5jb25jYXQoZSxcIi5hZ29yYS5pb1wiKV0sV0VCQ1NfRE9NQUlOX0JBQ0tVUF9MSVNUOltcImFwLXdlYi0yLVwiLmNvbmNhdChlLFwiLmFwLnNkLXJ0bi5jb21cIildLFBST1hZX0NTOltcInByb3h5LWFwLXdlYi1cIi5jb25jYXQoZSxcIi5hZ29yYS5pb1wiKV0sQ0RTX0FQOltcImNkcy1hcC13ZWItMS1cIi5jb25jYXQoZSxcIi5hZ29yYS5pb1wiKSxcImNkcy1hcC13ZWItMi1cIi5jb25jYXQoZSxcIi5hcC5zZC1ydG4uY29tXCIpXSxBQ0NPVU5UX1JFR0lTVEVSOltcInN1YS1hcC13ZWItMS1cIi5jb25jYXQoZSxcIi5hZ29yYS5pb1wiKSxcInN1YS1hcC13ZWItMi1cIi5jb25jYXQoZSxcIi5hcC5zZC1ydG4uY29tXCIpXSxVQVBfQVA6W1widWFwLWFwLXdlYi0xLVwiLmNvbmNhdChlLFwiLmFnb3JhLmlvXCIpLFwidWFwLWFwLXdlYi0yLVwiLmNvbmNhdChlLFwiLmFwLnNkLXJ0bi5jb21cIildLEVWRU5UX1JFUE9SVF9ET01BSU46W1wic3RhdHNjb2xsZWN0b3ItMS1cIi5jb25jYXQoZSxcIi5hZ29yYS5pb1wiKV0sRVZFTlRfUkVQT1JUX0JBQ0tVUF9ET01BSU46W1wic3RhdHNjb2xsZWN0b3ItMi1cIi5jb25jYXQoZSxcIi5hZ29yYS5pb1wiKV0sTE9HX1VQTE9BRF9TRVJWRVI6W1wibG9nc2VydmljZS1cIi5jb25jYXQoZSxcIi5hZ29yYS5pb1wiKV0sUFJPWFlfU0VSVkVSX1RZUEUzOltcIndlYnJ0Yy1jbG91ZC1wcm94eS1cIi5jb25jYXQoZSxcIi5hZ29yYS5pb1wiKV19LGZiLmRlYnVnKFwidXBkYXRlIGFyZWEgZnJvbSBhcCBzdWNjZXNzOiBcIi5jb25jYXQoZSxcIixjb25maWcgaXMgXCIpLG4pLEpBKFwiQVJFQVNcIixbaU8uRVhURU5TSU9OU10sITApLE9iamVjdC5rZXlzKG4pLm1hcCgoZT0+e2lmKFwiTE9HX1VQTE9BRF9TRVJWRVJcIj09PWV8fFwiRVZFTlRfUkVQT1JUX0RPTUFJTlwiPT09ZXx8XCJFVkVOVF9SRVBPUlRfQkFDS1VQX0RPTUFJTlwiPT09ZXx8XCJQUk9YWV9TRVJWRVJfVFlQRTNcIj09PWUpe0pBKGUsbltlXVswXSl9ZWxzZSBKQShlLG5bZV0pfSkpKX1mdW5jdGlvbiBieChlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXSYmYXJndW1lbnRzWzFdO2NvbnN0IGk9dmIucmVwb3J0QXBpSW52b2tlKG51bGwse25hbWU6QnkuU0VUX0FSRUEsb3B0aW9uczplLHRhZzpqeS5UUkFDRVJ9KTt0cnl7bGV0IG49W107aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUmJihuPVtlXSksQXJyYXkuaXNBcnJheShlKSYmKGUuZm9yRWFjaCgoZT0+e2lmKCFEbihuTykuY2FsbChuTyxlKSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9QQVJBTVMsXCJpbnZhbGlkIGFyZWEgY29kZVwiKX0pKSxuPWUpLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkpe2NvbnN0e2FyZWFDb2RlOnQsZXhjbHVkZWRBcmVhOml9PWU7aWYoIXQpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfUEFSQU1TLFwiYXJlYSBjb2RlIGlzIG5lZWRlZFwiKTtsZXQgcj10O1wic3RyaW5nXCI9PXR5cGVvZiB0JiYocj1bdF0pLG49aT95eChyLGkpOnJ9aWYoIXQpe2lmKFFBLkFSRUFTKXtjb25zdCBlPW5ldyB5YihSeS5QUk9ISUJJVEVEX09QRVJBVElPTixcInNldEFyZWEgaXMgcHJvaGliaXRlZCBiZWNhdXNlIG9mIGNvbmZpZy1kaXN0cmlidXRlXCIpO3JldHVybiBpLm9uRXJyb3IoZSksdm9pZCBmYi53YXJuaW5nKFwic2V0QXJlYSBpcyBwcm9oaWJpdGVkIGJlY2F1c2Ugb2YgY29uZmlnLWRpc3RyaWJ1dGVcIil9aWYoRG4obikuY2FsbChuLGlPLkdMT0JBTCkmJlhBKFwiQVJFQVNcIik9PT1pTy5FWFRFTlNJT05TKXtjb25zdCBlPW5ldyB5YihSeS5QUk9ISUJJVEVEX09QRVJBVElPTixcInNldEFyZWEgaXMgcHJvaGliaXRlZCBiZWNhdXNlIG9mIGFwIGV4dGVuc2lvbnNcIik7cmV0dXJuIGkub25FcnJvcihlKSx2b2lkIGZiLndhcm5pbmcoXCJzZXRBcmVhIGlzIHByb2hpYml0ZWQgYmVjYXVzZSBvZiBhcCBleHRlbnNpb25zXCIpfX1KQShcIkFSRUFTXCIsbix0KTtjb25zdCByPVJ4KG4pO09iamVjdC5rZXlzKHIpLm1hcCgoZT0+e2lmKFwiTE9HX1VQTE9BRF9TRVJWRVJcIj09PWV8fFwiRVZFTlRfUkVQT1JUX0RPTUFJTlwiPT09ZXx8XCJFVkVOVF9SRVBPUlRfQkFDS1VQX0RPTUFJTlwiPT09ZXx8XCJQUk9YWV9TRVJWRVJfVFlQRTNcIj09PWUpe0pBKGUscltlXVswXSl9ZWxzZSBKQShlLHJbZV0pfSkpLGZiLmRlYnVnKFwic2V0IGFyZWEgc3VjY2VzczpcIixuLmpvaW4oXCIsXCIpKX1jYXRjaChlKXt0aHJvdyBpLm9uRXJyb3IoZSksZX1pLm9uU3VjY2VzcygpfWZ1bmN0aW9uIHd4KGUsdCl7dmFyIGk9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYobj1uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxpLnB1c2guYXBwbHkoaSxuKX1yZXR1cm4gaX1mdW5jdGlvbiBPeChlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgaT1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj93eChPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0ZnKGUsdCxpW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGkpKTp3eChPYmplY3QoaSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLHQpKX0pKX1yZXR1cm4gZX1sZXQgTng9MTtmdW5jdGlvbiBEeChlLHQsaSxuLHIpe054Kz0xO2NvbnN0IG89e3NpZDppLnNpZCxjb21tYW5kOlwiY29udmVyZ2VBbGxvY2F0ZUVkZ2VcIix1aWQ6XCI2NjZcIixhcHBJZDppLmFwcElkLHRzOk1hdGguZmxvb3IoRGF0ZS5ub3coKS8xZTMpLHNlcTpOeCxyZXF1ZXN0SWQ6TngsdmVyc2lvbjpHQSxjbmFtZTppLmNuYW1lfSxzPXtzZXJ2aWNlX25hbWU6dCxqc29uX2JvZHk6SlNPTi5zdHJpbmdpZnkobyl9O2xldCBhLGMsZD1lWzBdO3JldHVybiBrQSgoYXN5bmMoKT0+e2E9RGF0ZS5ub3coKTtjb25zdCBlPWF3YWl0IFR4KGQse2RhdGE6cyxjYW5jZWxUb2tlbjpuLGhlYWRlcnM6e1wiWC1QYWNrZXQtU2VydmljZS1UeXBlXCI6XCIwXCIsXCJYLVBhY2tldC1VUklcIjpcIjYxXCJ9fSk7aWYoYz1EYXRlLm5vdygpLWEsMCE9PWUuY29kZSl7Y29uc3QgdD1uZXcgeWIoUnkuVU5FWFBFQ1RFRF9SRVNQT05TRSxcImxpdmUgc3RyZWFtaW5nIGFwIGVycm9yLCBjb2RlXCIrZS5jb2RlLHtyZXRyeTohMCxyZXNwb25zZVRpbWU6Y30pO3Rocm93IGZiLmVycm9yKHQudG9TdHJpbmcoKSksdH1jb25zdCBpPUpTT04ucGFyc2UoZS5qc29uX2JvZHkpO2lmKDIwMCE9PWkuY29kZSl7Y29uc3QgZT1uZXcgeWIoUnkuVU5FWFBFQ1RFRF9SRVNQT05TRSxcImxpdmUgc3RyZWFtaW5nIGFwcCBjZW50ZXIgZXJyb3IsIGNvZGU6IFwiLmNvbmNhdChpLmNvZGUsXCIsIHJlYXNvbjogXCIpLmNvbmNhdChpLnJlYXNvbikse2NvZGU6aS5jb2RlLHJlc3BvbnNlVGltZTpjfSk7dGhyb3cgZmIuZXJyb3IoZS50b1N0cmluZygpKSxlfWlmKCFpLnNlcnZlcnN8fDA9PT1pLnNlcnZlcnMubGVuZ3RoKXtjb25zdCBlPW5ldyB5YihSeS5VTkVYUEVDVEVEX1JFU1BPTlNFLFwibGl2ZSBzdHJlYW1pbmcgYXBwIGNlbnRlciBlbXB0eSBzZXJ2ZXJcIix7Y29kZTppLmNvZGUscmVzcG9uc2VUaW1lOmN9KTt0aHJvdyBmYi5lcnJvcihlLnRvU3RyaW5nKCkpLGV9Y29uc3Qgcj1mdW5jdGlvbihlLHQpe3JldHVybnthZGRyZXNzTGlzdDplLnNlcnZlcnMubWFwKChlPT5cIndzczovL1wiLmNvbmNhdChlLmFkZHJlc3MucmVwbGFjZSgvXFwuL2csXCItXCIpLFwiLlwiKS5jb25jYXQoWEEoXCJXT1JLRVJfRE9NQUlOXCIpLFwiOlwiKS5jb25jYXQoZS53c3MsXCI/c2VydmljZU5hbWU9XCIpLmNvbmNhdChlbmNvZGVVUklDb21wb25lbnQodCkpKSksd29ya2VyVG9rZW46ZS53b3JrZXJUb2tlbix2aWQ6ZS52aWR9fShpLHQpO3JldHVybiBYQShcIkxJVkVfU1RSRUFNSU5HX0FERFJFU1NcIikmJihyLmFkZHJlc3NMaXN0PVhBKFwiTElWRV9TVFJFQU1JTkdfQUREUkVTU1wiKWluc3RhbmNlb2YgQXJyYXk/WEEoXCJMSVZFX1NUUkVBTUlOR19BRERSRVNTXCIpOltYQShcIkxJVkVfU1RSRUFNSU5HX0FERFJFU1NcIildKSxPeChPeCh7fSxyKSx7fSx7cmVzcG9uc2VUaW1lOmN9KX0pLCgobixyKT0+KHZiLmFwd29ya2VyRXZlbnQoaS5zaWQse3N1Y2Nlc3M6ITAsc2M6MjAwLHNlcnZpY2VOYW1lOnQscmVzcG9uc2VEZXRhaWw6SlNPTi5zdHJpbmdpZnkobi5hZGRyZXNzTGlzdCksZmlyc3RTdWNjZXNzOjA9PT1yLHJlc3BvbnNlVGltZTpjLHNlcnZlcklwOmVbciVlLmxlbmd0aF19KSwhMSkpLCgobixyKT0+KHZiLmFwd29ya2VyRXZlbnQoaS5zaWQse3N1Y2Nlc3M6ITEsc2M6bi5kYXRhJiZuLmRhdGEuY29kZXx8MjAwLHNlcnZpY2VOYW1lOnQscmVzcG9uc2VUaW1lOmMsc2VydmVySXA6ZVtyJWUubGVuZ3RoXX0pLCEhKG4uY29kZSE9PVJ5Lk9QRVJBVElPTl9BQk9SVEVEJiZuLmNvZGUhPT1SeS5VTkVYUEVDVEVEX1JFU1BPTlNFfHxuLmRhdGEmJm4uZGF0YS5yZXRyeSkmJihkPWVbKHIrMSklZS5sZW5ndGhdLCEwKSkpLHIpfWxldCBQeD0xO2Z1bmN0aW9uIEx4KGUsdCxpLG4pe2xldHt1cmw6cixhcmVhQ29kZTpvfT1lO2NvbnN0e2NsaWVudElkOnMsc2lkOmF9PXQsYz1EYXRlLm5vdygpO2xldCBkO2NvbnN0W2wsdV09VngodCxvLFtZTy5DSE9PU0VfU0VSVkVSXSk7bGV0IGg9aUEubmV0d29ya1N0YXRlO3JldHVybiBrQSgoYXN5bmMoKT0+e2gmJmlBLm5ldHdvcmtTdGF0ZT09PVh5Lk9GRkxJTkUmJmlBLm9ubGluZVdhaXRlciYmYXdhaXQgR2gucmFjZShbaUEub25saW5lV2FpdGVyLG1BKG4mJm4ubWF4UmV0cnlUaW1lb3V0fHxQQS5tYXhSZXRyeVRpbWVvdXQpXSksaD1pQS5uZXR3b3JrU3RhdGU7Y29uc3R7ZGF0YTplLGhlYWRlcnM6b309YXdhaXQgVHgocix7ZGF0YTpsLGNhbmNlbFRva2VuOmksaGVhZGVyczp7XCJDb250ZW50LVR5cGVcIjpcIm11bHRpcGFydC9mb3JtLWRhdGE7XCJ9fSwhMCwhMCk7ZD1cIjFcIj09PW8uaHR0cDM/MTotMSx2Yi5yZXBvcnRSZXNvdXJjZVRpbWluZyhyLGEpLE14KGUscix0LGMsW1lPLkNIT09TRV9TRVJWRVJdLGQpO2NvbnN0IHM9ZU4oZSxZTy5DSE9PU0VfU0VSVkVSKTtyZXR1cm4gVXgocyksWE8ocyxyKX0pLChlPT4oZSYmdmIuam9pbkNob29zZVNlcnZlcihhLHtsdHM6YyxzdWNjOiEwLGNzQWRkcjpyLG9waWQ6dSxzZXJ2ZXJMaXN0OmUuZ2F0ZXdheUFkZHJzLm1hcCgoZT0+ZS5hZGRyZXNzKSksZWM6bnVsbCxjaWQ6ZS5jaWQudG9TdHJpbmcoKSx1aWQ6ZS51aWQudG9TdHJpbmcoKSxjc0lwOmUuY3NJcCx1bmlsYnNTZXJ2ZXJJZHM6W1lPLkNIT09TRV9TRVJWRVJdLnRvU3RyaW5nKCksaXNIdHRwMzpkLGNvcnNzUmVnaW9uVGFnUmVxOnQuYXBSZXF1ZXN0RGV0YWlsLGNvcnNzUmVnaW9uVGFnUmVzOmUucmVzLmRldGFpbCYmZS5yZXMuZGV0YWlsWzM4XX0pLCExKSksKGU9PmUuY29kZSE9PVJ5Lk9QRVJBVElPTl9BQk9SVEVEJiYoZS5jb2RlPT09UnkuQ0FOX05PVF9HRVRfR0FURVdBWV9TRVJWRVI/ZS5kYXRhLnJldHJ5Oih2Yi5qb2luQ2hvb3NlU2VydmVyKGEse2x0czpjLHN1Y2M6ITEsY3NBZGRyOnIsc2VydmVyTGlzdDpudWxsLG9waWQ6dSxlYzplLmNvZGUsY3NJcDplLmRhdGEmJmUuZGF0YS5jc0lwLHVuaWxic1NlcnZlcklkczpbWU8uQ0hPT1NFX1NFUlZFUl0udG9TdHJpbmcoKSxleHRlbmQ6SlNPTi5zdHJpbmdpZnkoe25ldHdvcmtTdGF0ZTpofSksaXNIdHRwMzpkLGNvcnNzUmVnaW9uVGFnUmVxOnQuYXBSZXF1ZXN0RGV0YWlsfSksZmIud2FybmluZyhcIltcIi5jb25jYXQoc3x8XCJzaWQtXCIuY29uY2F0KGEuc2xpY2UoMCw2KSksXCJdIENob29zZSBzZXJ2ZXIgbmV0d29yayBlcnJvciwgcmV0cnlcIiksZSksITApKSksbil9ZnVuY3Rpb24ga3goZSx0LGksbil7bGV0IHIse3VybDpvLGFyZWFDb2RlOnMsc2VydmljZUlkczphfT1lO2NvbnN0IGM9RGF0ZS5ub3coKSxbZCxsXT1WeCh0LHMsYSk7bGV0IHU7cmV0dXJuIGtBKChhc3luYygpPT57dSYmaUEubmV0d29ya1N0YXRlPT09WHkuT0ZGTElORSYmaUEub25saW5lV2FpdGVyJiZhd2FpdCBHaC5yYWNlKFtpQS5vbmxpbmVXYWl0ZXIsbUEobiYmbi5tYXhSZXRyeVRpbWVvdXR8fFBBLm1heFJldHJ5VGltZW91dCldKSx1PWlBLm5ldHdvcmtTdGF0ZTtjb25zdHtkYXRhOmUsaGVhZGVyczpzfT1hd2FpdCBUeChvLHtkYXRhOmQsY2FuY2VsVG9rZW46aSxoZWFkZXJzOntcIkNvbnRlbnQtVHlwZVwiOlwibXVsdGlwYXJ0L2Zvcm0tZGF0YTtcIn19LCEwLCEwKTtyPVwiMVwiPT09cy5odHRwMz8xOi0xLHZiLnJlcG9ydFJlc291cmNlVGltaW5nKG8sdC5zaWQpLE14KGUsbyx0LGMsYSxyKTtjb25zdCBsPWVOKGUsWU8uQ0hPT1NFX1NFUlZFUiksaD1lTihlLFwicHJveHk1XCI9PT10LmNsb3VkUHJveHlTZXJ2ZXI/WU8uQ0xPVURfUFJPWFlfNTpcInByb3h5M1wiPT09dC5jbG91ZFByb3h5U2VydmVyfHxcInByb3h5NFwiPT09dC5jbG91ZFByb3h5U2VydmVyP1lPLkNMT1VEX1BST1hZOllPLkNMT1VEX1BST1hZX0ZBTExCQUNLKTtyZXR1cm4gVXgobCkse2dhdGV3YXlJbmZvOlhPKGwsbykscHJveHlJbmZvOmgsdXJsOm99fSksKGU9PihlLmdhdGV3YXlJbmZvJiZ2Yi5qb2luQ2hvb3NlU2VydmVyKHQuc2lkLHtsdHM6YyxzdWNjOiEwLGNzQWRkcjpvLHNlcnZlckxpc3Q6ZS5nYXRld2F5SW5mby5nYXRld2F5QWRkcnMubWFwKChlPT5lLmFkZHJlc3MpKSxlYzpudWxsLG9waWQ6bCxjaWQ6ZS5nYXRld2F5SW5mby5jaWQudG9TdHJpbmcoKSx1aWQ6ZS5nYXRld2F5SW5mby51aWQudG9TdHJpbmcoKSxjc0lwOmUuZ2F0ZXdheUluZm8uY3NJcCx1bmlsYnNTZXJ2ZXJJZHM6YS50b1N0cmluZygpLGlzSHR0cDM6cixjb3Jzc1JlZ2lvblRhZ1JlcTp0LmFwUmVxdWVzdERldGFpbCxjb3Jzc1JlZ2lvblRhZ1JlczplLmdhdGV3YXlJbmZvLnJlcy5kZXRhaWwmJmUuZ2F0ZXdheUluZm8ucmVzLmRldGFpbFszOF19KSxlLnByb3h5SW5mbyYmdmIuam9pbldlYlByb3h5QVAodC5zaWQse2x0czpjLHN1Y2VzczoxLGFwU2VydmVyQWRkcjpvLHR1cm5TZXJ2ZXJBZGRyTGlzdDplLnByb3h5SW5mby5hZGRyZXNzZXMubWFwKChlPT5lLmlwKSkuam9pbihcIixcIiksZXJyb3JDb2RlOm51bGwsZXZlbnRUeXBlOnQuY2xvdWRQcm94eVNlcnZlcix1bmlsYnNTZXJ2ZXJJZHM6YS50b1N0cmluZygpfSksITEpKSwoZT0+ZS5jb2RlIT09UnkuT1BFUkFUSU9OX0FCT1JURUQmJihlLmNvZGU9PT1SeS5DQU5fTk9UX0dFVF9HQVRFV0FZX1NFUlZFUj9lLmRhdGEucmV0cnk6KHZiLmpvaW5XZWJQcm94eUFQKHQuc2lkLHtsdHM6YyxzdWNlc3M6MCxhcFNlcnZlckFkZHI6byx0dXJuU2VydmVyQWRkckxpc3Q6bnVsbCxlcnJvckNvZGU6ZS5jb2RlLGV2ZW50VHlwZTp0LmNsb3VkUHJveHlTZXJ2ZXIsdW5pbGJzU2VydmVySWRzOmEudG9TdHJpbmcoKSxleHRlbmQ6SlNPTi5zdHJpbmdpZnkoe25ldHdvcmtTdGF0ZTp1fSl9KSxmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0LmNsaWVudElkLFwiXSBtdWx0aSB1bmlsYnMgbmV0d29yayBlcnJvciwgcmV0cnlcIiksZSksITApKSksbil9Y29uc3QgTXg9KGUsdCxpLG4scixvKT0+e2NvbnN0e3NpZDpzLGNsaWVudElkOmEsY2xvdWRQcm94eVNlcnZlcjpjfT1pLGQ9W10sbD1hPT57NDA5Nj09PWEuZmxhZz92Yi5qb2luQ2hvb3NlU2VydmVyKHMse2x0czpuLHN1Y2M6ITEsY3NBZGRyOnQsb3BpZDplLm9waWQsc2VydmVyTGlzdDpudWxsLGVjOmEuZXJyb3IubWVzc2FnZSxjc0lwOmEuZXJyb3IuZGF0YSYmYS5lcnJvci5kYXRhLmNzSXAsdW5pbGJzU2VydmVySWRzOnIudG9TdHJpbmcoKSxpc0h0dHAzOm8sY29yc3NSZWdpb25UYWdSZXE6aS5hcFJlcXVlc3REZXRhaWx9KToxMDQ4NTc2IT09YS5mbGFnJiY0MTk0MzA0IT09YS5mbGFnJiY0MTk0MzEwIT09YS5mbGFnfHx2Yi5qb2luV2ViUHJveHlBUChzLHtsdHM6bixzdWNlc3M6MCxhcFNlcnZlckFkZHI6dCx0dXJuU2VydmVyQWRkckxpc3Q6bnVsbCxlcnJvckNvZGU6YS5lcnJvci5jb2RlLGV2ZW50VHlwZTpjLHVuaWxic1NlcnZlcklkczpyLnRvU3RyaW5nKCl9KX07aWYoZS5yZXNwb25zZV9ib2R5LmZvckVhY2goKHQ9Pntjb25zdCBpPXQuYnVmZmVyLmNvZGU7aWYoMjM9PT10LnVyaSYmMD09PWkmJiF0LmJ1ZmZlci5lZGdlc19zZXJ2aWNlcylpZig0MTk0MzEwPT09dC5idWZmZXIuZmxhZylmYi53YXJuaW5nKFwibm8gZWRnZSBzZXJ2aWNlcyBpbiBhcCByZXNwb25zZSBvZiBwcm94eSBmYWxsYmFjaywgd2lsbCBub3Qgc2V0IHByb3h5IGluIGljZVNlcnZlcnNcIiksdC5idWZmZXIuZWRnZXNfc2VydmljZXM9W107ZWxzZXtjb25zdCBpPXtlcnJvcjpuZXcgeWIoUnkuQ0FOX05PVF9HRVRfR0FURVdBWV9TRVJWRVIsXCJubyBlZGdlIHNlcnZpY2VzIGluIGFwIHJlc3BvbnNlXCIse3JldHJ5OiEwLGNzSXA6ZS5kZXRhaWxbNTAyXX0pLGZsYWc6dC5idWZmZXIuZmxhZ307ZC5wdXNoKGkpLGwoaSl9aWYoMCE9PWkpe2NvbnN0IG49d08oaSkscj17ZXJyb3I6bmV3IHliKFJ5LkNBTl9OT1RfR0VUX0dBVEVXQVlfU0VSVkVSLG4uZGVzYyx7ZGVzYzpuLmRlc2MscmV0cnk6bi5yZXRyeSxjc0lwOmUuZGV0YWlsWzUwMl19KSxmbGFnOnQuYnVmZmVyLmZsYWd9OzQxOTQzMTA9PT10LmJ1ZmZlci5mbGFnP2ZiLndhcm5pbmcoci5lcnJvci50b1N0cmluZygpKTpkLnB1c2gociksbChyKX19KSksZC5sZW5ndGgpdGhyb3cgZmIud2FybmluZyhcIltcIi5jb25jYXQoYXx8XCJzaWQtXCIuY29uY2F0KHMuc2xpY2UoMCw2KSksXCJdIG11bHRpIHVuaWxicyBcIikuY29uY2F0KHQsXCIgZmFpbGVkLCBcIikuY29uY2F0KGQubWFwKChlPT5cImZsYWc6IFwiLmNvbmNhdChlLmZsYWcsXCIsIG1lc3NhZ2U6IFwiKS5jb25jYXQoZS5lcnJvci5tZXNzYWdlLFwiLCByZXRyeTogXCIpLmNvbmNhdChlLmVycm9yLmRhdGEucmV0cnkpKSkuam9pbihcIiB8IFwiKSkpLG5ldyB5YihSeS5DQU5fTk9UX0dFVF9HQVRFV0FZX1NFUlZFUixkLm1hcCgoZT0+XCJmbGFnOiBcIi5jb25jYXQoZS5mbGFnLFwiLCBtZXNzYWdlOiBcIikuY29uY2F0KGUuZXJyb3IubWVzc2FnZSkpKS5qb2luKFwiIHwgXCIpLHtyZXRyeTohIWQuZmluZCgoZT0+ZS5lcnJvci5kYXRhLnJldHJ5KSksY3NJcDplLmRldGFpbFs1MDJdLGRlc2M6Wy4uLm5ldyBTZXQoZC5tYXAoKGU9Pnt2YXIgdDtyZXR1cm4gbnVsbD09ZXx8bnVsbD09PSh0PWUuZXJyb3IpfHx2b2lkIDA9PT10fHxudWxsPT09KHQ9dC5kYXRhKXx8dm9pZCAwPT09dD92b2lkIDA6dC5kZXNjfSkpLmZpbHRlcigoZT0+ISFlKSkpXX0pfSxVeD1lPT57dmFyIHQsaSxuLHI7aWYoZS5hZGRyZXNzZXMmJjA9PT1lLmFkZHJlc3Nlcy5sZW5ndGgmJjA9PT1lLmNvZGUpdGhyb3cgbmV3IHliKFJ5LkNBTl9OT1RfR0VUX0dBVEVXQVlfU0VSVkVSLFwidm9pZCBnYXRld2F5IGFkZHJlc3NcIix7cmV0cnk6ITAsY3NJcDplLmRldGFpbCYmZS5kZXRhaWxbNTAyXX0pO1hBKFwiQVBfQVJFQVwiKSYmKG51bGwhPT0obj1lLmRldGFpbCkmJnZvaWQgMCE9PW4mJm5bMjNdJiZcInN0cmluZ1wiPT10eXBlb2YobnVsbD09PShyPWUuZGV0YWlsKXx8dm9pZCAwPT09cj92b2lkIDA6clsyM10pP0F4KGUuZGV0YWlsWzIzXS50b0xvd2VyQ2FzZSgpKTpBeCgpKTtpZihudWxsIT09KHQ9ZS5kZXRhaWwpJiZ2b2lkIDAhPT10JiZ0WzE5XSYmXCJzdHJpbmdcIj09dHlwZW9mKG51bGw9PT0oaT1lLmRldGFpbCl8fHZvaWQgMD09PWk/dm9pZCAwOmlbMTldKSl7Y29uc3QgdD1lLmRldGFpbFsxOV0saT1udWxsPT10P3ZvaWQgMDp0LnNwbGl0KFwiO1wiKTtmb3IobGV0IHQ9MDt0PGkubGVuZ3RoO3QrKyl7dmFyIG87Y29uc3Qgbj1qcChvPWlbdF0pLmNhbGwobyk7ZS5hZGRyZXNzZXNbdF0mJmkmJihlLmFkZHJlc3Nlc1t0XS5maW5nZXJwcmludD1uKX19aWYoWEEoXCJHQVRFV0FZX0FERFJFU1NcIikmJlhBKFwiR0FURVdBWV9BRERSRVNTXCIpLmxlbmd0aD4wKXtmYi5kZWJ1ZyhcImFzc2lnbiBnYXRld2F5IGFkZHJlc3MgdG9cIixYQShcIkdBVEVXQVlfQUREUkVTU1wiKSk7Y29uc3QgdD1YQShcIkdBVEVXQVlfQUREUkVTU1wiKS5tYXAoKHQ9Pnt2YXIgaSxuO2NvbnN0IHI9bnVsbCE9PShpPW51bGw9PT0obj1lLmFkZHJlc3Nlcy5maW5kKChlPT5lLmlwPT09dC5pcCYmZS5wb3J0PT09dC5wb3J0KSkpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmZpbmdlcnByaW50KSYmdm9pZCAwIT09aT9pOlwiXCI7cmV0dXJue2lwOnQuaXAscG9ydDp0LnBvcnQsdGlja2V0OmUuYWRkcmVzc2VzWzBdJiZlLmFkZHJlc3Nlc1swXS50aWNrZXQsZmluZ2VycHJpbnQ6cn19KSk7ZS5hZGRyZXNzZXM9dH19LHh4PShlLHQpPT57aWYoZS5yZXNwb25zZV9ib2R5JiZlLnJlc3BvbnNlX2JvZHkubGVuZ3RoKXtjb25zdCB0PWUucmVzcG9uc2VfYm9keVswXTtpZigwIT09dC5idWZmZXIuY29kZSl7Y29uc3QgZT13Tyh0LmJ1ZmZlci5jb2RlKTt0aHJvdyBuZXcgeWIoUnkuVVBEQVRFX1RJQ0tFVF9GQUlMRUQsXCJbXCIuY29uY2F0KHQuYnVmZmVyLmNvZGUsXCJdOiBcIikuY29uY2F0KGUuZGVzYykse3JldHJ5OmUucmV0cnl9KX1yZXR1cm4gdC5idWZmZXIudGlja2V0fXRocm93IGZiLmRlYnVnKFwidXBkYXRlIHRpY2tldCByZXF1ZXN0IHJlY2VpdmVkIGFwIHJlc3BvbnNlIHdpdGhvdXQgcmVzcG9uc2UgYm9keTpcIix0KSxuZXcgeWIoUnkuVVBEQVRFX1RJQ0tFVF9GQUlMRUQsXCJjYW5ub3QgZmluZCByZXNwb25zZSBib2R5IGZyb20gYXAgcmVzcG9uc2VcIix7cmV0cnk6ITF9KX0sVng9KGUsdCxpKT0+e2NvbnN0IG49TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjEwKioxMikscj17YXBwaWQ6ZS5hcHBJZCxjbGllbnRfdHM6RGF0ZS5ub3coKSxvcGlkOm4sc2lkOmUuc2lkLHJlcXVlc3RfYm9kaWVzOlt7dXJpOjIyLGJ1ZmZlcjp7Y25hbWU6ZS5jbmFtZSxkZXRhaWw6T3goT3goezY6ZS5zdHJpbmdVaWQsMTE6dCwxMjpYQShcIlVTRV9ORVdfVE9LRU5cIik/XCIxXCI6dm9pZCAwLDIyOnR9LGUuYXBSZXF1ZXN0RGV0YWlsP3szMzplLmFwUmVxdWVzdERldGFpbH06e30pLGUuYXBSVE0/ezI2OlwiUlRNMlwifTp7fSksa2V5OmUudG9rZW4sc2VydmljZV9pZHM6aSx1aWQ6ZS51aWR8fDB9fV19O3IucmVxdWVzdF9ib2RpZXMuZm9yRWFjaCgodD0+e2UubXVsdGlJUCYmZS5tdWx0aUlQLmdhdGV3YXlfaXAmJih0LmJ1ZmZlci5kZXRhaWxbNV09SlNPTi5zdHJpbmdpZnkoe3ZvY3NfaXA6W2UubXVsdGlJUC51bmlfbGJzX2lwXSx2b3NfaXA6W2UubXVsdGlJUC5nYXRld2F5X2lwXX0pKX0pKTtjb25zdCBvPW5ldyBGb3JtRGF0YTtyZXR1cm4gby5hcHBlbmQoXCJyZXF1ZXN0XCIsSlNPTi5zdHJpbmdpZnkocikpLFtvLG5dfSxGeD0oZSx0KT0+e2NvbnN0IGk9TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjEwKioxMiksbj17YXBwaWQ6ZS5hcHBJZCxjbGllbnRfdHM6RGF0ZS5ub3coKSxvcGlkOmksc2lkOmUuc2lkLHJlcXVlc3RfYm9kaWVzOlt7dXJpOjI4LGJ1ZmZlcjp7Y25hbWU6ZS5jbmFtZSxkZXRhaWw6ezE6XCJcIiw2OmUuc3RyaW5nVWlkLDEyOlwiMVwifSx0b2tlbjplLnRva2VuLHNlcnZpY2VfaWRzOnQsdWlkOmUudWlkfHwwLGVkZ2VzX3NlcnZpY2VzOmUuYXBSZXNwb25zZS5hZGRyZXNzZXMubWFwKChlPT4oe2lwOmUuaXAscG9ydDplLnBvcnR9KSkpfX1dfSxyPW5ldyBGb3JtRGF0YTtyZXR1cm4gci5hcHBlbmQoXCJyZXF1ZXN0XCIsSlNPTi5zdHJpbmdpZnkobikpLFtyLGldfTtsZXQgQng9MDtmdW5jdGlvbiBqeChlKXtyZXR1cm4gR2guYWxsKGUubWFwKChlPT5lLnRoZW4oKGU9Pnt0aHJvdyBlfSksKGU9PmUpKSkpKS50aGVuKChlPT57dGhyb3cgZX0pLChlPT5lKSl9Y29uc3QgR3g9YXN5bmMgZT0+e2xldHtmcmFnZW1lbnRMZW5ndGg6dCxyZWZlcmVuY2VMaXN0OmksYXN5bmNNYXBIYW5kbGVyOm4sYWxsRmFpbGVkaGFuZGxlcjpyLHByb21pc2VzQ29sbGVjdG9yOm99PWUscz0wO2NvbnN0IGE9dDtsZXQgYyxkPTA7Y29uc3QgbD1hc3luYygpPT57Y29uc3QgZT0oKCk9Pntjb25zdCBlPXMqYSx0PWUrYTtyZXR1cm4gaS5zbGljZShlLHQpLm1hcChuKX0pKCk7byYmby5wdXNoKC4uLmUpO3RyeXtjPWF3YWl0IGp4KGUpfWNhdGNoKGUpe2lmKGQrPWEscysrLCEoZD49aS5sZW5ndGgpKXJldHVybiB2b2lkIGF3YWl0IGwoKTtyKGUpfWUuZm9yRWFjaCgoZT0+ZS5jYW5jZWwoKSkpfTtyZXR1cm4gYXdhaXQgbCgpLGN9LFd4PWFzeW5jIGU9PntsZXR7cmVmZXJlbmNlTGlzdDp0LGFzeW5jTWFwSGFuZGxlcjppLGNsb3NlRm46bn09ZTtjb25zdCByPXQubGVuZ3RoO2xldCBvPTA7Y29uc3Qgcz1hc3luYygpPT57Y29uc3QgZT1pKHQuc2hpZnQoKSk7dHJ5e3JldHVybiBhd2FpdCBlfWNhdGNoKGUpe2lmKG8rKyxvPj1yfHxudWxsIT1uJiZuKGUpKXRocm93IGU7cmV0dXJuIHMoKX19O3JldHVybiBzKCl9O2FzeW5jIGZ1bmN0aW9uIEh4KGUsdCxpLG4pe2NvbnN0IHI9YXN5bmMgZnVuY3Rpb24oZSx0LGksbil7bGV0IHI9bnVsbDtjb25zdCBvPVtdLHM9YXN5bmMoKT0+e2NvbnN0IHI9WEEoXCJXRUJDU19ET01BSU5cIikuc2xpY2UoMCxYQShcIkFKQVhfUkVRVUVTVF9DT05DVVJSRU5UXCIpKS5tYXAoKHQ9Pih7dXJsOmUucHJveHlTZXJ2ZXI/XCJodHRwczovL1wiLmNvbmNhdChlLnByb3h5U2VydmVyLFwiL2FwLz91cmw9XCIpLmNvbmNhdCh0K1wiL2FwaS92Mi90cmFuc3BvbmQvd2VicnRjP3Y9MlwiKTpcImh0dHBzOi8vXCIuY29uY2F0KHQsXCIvYXBpL3YyL3RyYW5zcG9uZC93ZWJydGM/dj0yXCIpLGFyZWFDb2RlOlN4KCl9KSkpLHM9bi5yZWNvcmRKb2luQ2hhbm5lbFNlcnZpY2Uoe3N0YXJ0VHM6RGF0ZS5ub3coKSxzdGF0dXM6XCJwZW5kaW5nXCIsc2VydmljZTpcImNob29zZVNlcnZlclwiLHVybHM6ci5tYXAoKGU9PmUudXJsKSl9KSxhPWF3YWl0IEd4KHtmcmFnZW1lbnRMZW5ndGg6WEEoXCJGUkFHRU1FTlRfTEVOR1RIXCIpLHJlZmVyZW5jZUxpc3Q6cixhc3luY01hcEhhbmRsZXI6bj0+KGZiLmRlYnVnKFwiW1wiLmNvbmNhdChlLmNsaWVudElkLFwiXSBDb25uZWN0IHRvIGNob29zZV9zZXJ2ZXI6XCIpLG4udXJsKSxMeChuLGUsdCxpKSksYWxsRmFpbGVkaGFuZGxlcjplPT57dGhyb3cgbi5yZWNvcmRKb2luQ2hhbm5lbFNlcnZpY2Uoe2VuZFRzOkRhdGUubm93KCksc3RhdHVzOlwiZXJyb3JcIixlcnJvcnM6ZX0scyksZVswXX0scHJvbWlzZXNDb2xsZWN0b3I6b30pO3JldHVybiBuLnJlY29yZEpvaW5DaGFubmVsU2VydmljZSh7ZW5kVHM6RGF0ZS5ub3coKSxzdGF0dXM6XCJzdWNjZXNzXCJ9LHMpLGF9LGE9YXN5bmMoKT0+e2lmKGF3YWl0IG1BKDFlMyksbnVsbCE9PXIpcmV0dXJuIHI7Y29uc3Qgcz1YQShcIldFQkNTX0RPTUFJTl9CQUNLVVBfTElTVFwiKS5tYXAoKHQ9Pih7dXJsOmUucHJveHlTZXJ2ZXI/XCJodHRwczovL1wiLmNvbmNhdChlLnByb3h5U2VydmVyLFwiL2FwLz91cmw9XCIpLmNvbmNhdCh0K1wiL2FwaS92Mi90cmFuc3BvbmQvd2VicnRjP3Y9MlwiKTpcImh0dHBzOi8vXCIuY29uY2F0KHQsXCIvYXBpL3YyL3RyYW5zcG9uZC93ZWJydGM/dj0yXCIpLGFyZWFDb2RlOlN4KCl9KSkpLGE9bi5yZWNvcmRKb2luQ2hhbm5lbFNlcnZpY2Uoe2VuZFRzOnZvaWQgMCxzdGFydFRzOkRhdGUubm93KCksc3RhdHVzOlwicGVuZGluZ1wiLHNlcnZpY2U6XCJjaG9vc2VTZXJ2ZXJcIix1cmxzOnMubWFwKChlPT5lLnVybCkpfSksYz1hd2FpdCBHeCh7ZnJhZ2VtZW50TGVuZ3RoOlhBKFwiRlJBR0VNRU5UX0xFTkdUSFwiKSxyZWZlcmVuY2VMaXN0OnMsYXN5bmNNYXBIYW5kbGVyOm49PihmYi5kZWJ1ZyhcIltcIi5jb25jYXQoZS5jbGllbnRJZCxcIl0gQ29ubmVjdCB0byBiYWNrdXAgY2hvb3NlX3NlcnZlcjpcIiksbi51cmwpLEx4KG4sZSx0LGkpKSxhbGxGYWlsZWRoYW5kbGVyOmU9Pnt0aHJvdyBuLnJlY29yZEpvaW5DaGFubmVsU2VydmljZSh7ZW5kVHM6RGF0ZS5ub3coKSxzdGF0dXM6XCJlcnJvclwiLGVycm9yczplfSxhKSxlWzBdfSxwcm9taXNlc0NvbGxlY3RvcjpvfSk7cmV0dXJuIG4ucmVjb3JkSm9pbkNoYW5uZWxTZXJ2aWNlKHtlbmRUczpEYXRlLm5vdygpLHN0YXR1czpcInN1Y2Nlc3NcIn0sYSksY307dHJ5e3JldHVybiByPWF3YWl0IGp4KFtzKCksYSgpXSksby5sZW5ndGgmJm8uZm9yRWFjaCgoZT0+ZS5jYW5jZWwmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuY2FuY2VsJiZlLmNhbmNlbCgpKSkscn1jYXRjaChlKXt0aHJvdyBlWzBdfX0oZSx0LGksbik7cmV0dXJue2dhdGV3YXlJbmZvOmF3YWl0IHJ9fWFzeW5jIGZ1bmN0aW9uIEt4KGUsdCxpLG4scil7Y29uc3Qgbz1lLmNsb3VkUHJveHlTZXJ2ZXI7aWYoXCJkaXNhYmxlZFwiPT09byl7aWYoIW4pcmV0dXJuO2lmKGUudXNlTG9jYWxBY2Nlc3NQb2ludClyZXR1cm4gYXdhaXQgSHgoZSx0LGkscik7aWYoWEEoXCJKT0lOX1dJVEhfRkFMTEJBQ0tfTUVESUFfUFJPWFlcIikpe2NvbnN0e2dhdGV3YXlJbmZvOm4scHJveHlJbmZvOm99PWF3YWl0IFh4KGUsdCxpLHIpO2lmKGUudHVyblNlcnZlciYmXCJhdXRvXCIhPT1lLnR1cm5TZXJ2ZXIubW9kZSlyZXR1cm57Z2F0ZXdheUluZm86bn07Y29uc3QgYT1vLm1hcCgoZT0+KHt0dXJuU2VydmVyVVJMOmUuYWRkcmVzcyx0Y3Bwb3J0OmUudGNwcG9ydHx8S0EudGNwcG9ydCx1ZHBwb3J0OmUudWRwcG9ydHx8S0EudWRwcG9ydCx1c2VybmFtZTplLnVzZXJuYW1lfHxLQS51c2VybmFtZSxwYXNzd29yZDplLnBhc3N3b3JkfHxLQS5wYXNzd29yZCxmb3JjZXR1cm46ITEsc2VjdXJpdHk6ITB9KSkpO2lmKHIudXNlUDJQKXt2YXIgcztjb25zdCB0PW51bGwhPT0ocz1lLnVpZCkmJnZvaWQgMCE9PXM/czpuLnVpZCxpPVwiZ2xiOlwiLmNvbmNhdCh0LnRvU3RyaW5nKCkpLHI9YXdhaXQgVXkoaSksYz1vLm1hcCgoZT0+KHt0dXJuU2VydmVyVVJMOmUuYWRkcmVzcyx0Y3Bwb3J0OmUudGNwcG9ydHx8S0EudGNwcG9ydCx1ZHBwb3J0OmUudWRwcG9ydHx8S0EudWRwcG9ydCx1c2VybmFtZTppLHBhc3N3b3JkOnIsZm9yY2V0dXJuOiExLHNlY3VyaXR5OiEwfSkpKTthLnB1c2goLi4uYyl9cmV0dXJuIGUudHVyblNlcnZlcj17bW9kZTpcIm1hbnVhbFwiLHNlcnZlcnM6YX0se2dhdGV3YXlJbmZvOm59fXJldHVybiBhd2FpdCBIeChlLHQsaSxyKX1jb25zdHtwcm94eUluZm86YSxnYXRld2F5SW5mbzpjfT1hd2FpdCBYeChlLHQsaSxyKSxkPXtnYXRld2F5SW5mbzpjfSxsPWEubWFwKChlPT4oe3R1cm5TZXJ2ZXJVUkw6ZS5hZGRyZXNzLHRjcHBvcnQ6XCJwcm94eTNcIj09PW8/dm9pZCAwOmUudGNwcG9ydD9lLnRjcHBvcnQ6S0EudGNwcG9ydCx1ZHBwb3J0OlwicHJveHk0XCI9PT1vP3ZvaWQgMDplLnVkcHBvcnQ/ZS51ZHBwb3J0OktBLnVkcHBvcnQsdXNlcm5hbWU6ZS51c2VybmFtZXx8S0EudXNlcm5hbWUscGFzc3dvcmQ6ZS5wYXNzd29yZHx8S0EucGFzc3dvcmQsZm9yY2V0dXJuOlwicHJveHk0XCIhPT1vLHNlY3VyaXR5OlwicHJveHk1XCI9PT1vfSkpKTtpZihyLnVzZVAyUCl7dmFyIHU7Y29uc3QgdD1udWxsIT09KHU9ZS51aWQpJiZ2b2lkIDAhPT11P3U6Yy51aWQsaT1cImdsYjpcIi5jb25jYXQodC50b1N0cmluZygpKSxuPWF3YWl0IFV5KGkpLHI9YS5tYXAoKGU9Pih7dHVyblNlcnZlclVSTDplLmFkZHJlc3MsdGNwcG9ydDpcInByb3h5M1wiPT09bz92b2lkIDA6ZS50Y3Bwb3J0fHxLQS50Y3Bwb3J0LHVkcHBvcnQ6XCJwcm94eTRcIj09PW8/dm9pZCAwOmUudWRwcG9ydHx8S0EudWRwcG9ydCx1c2VybmFtZTppLHBhc3N3b3JkOm4sZm9yY2V0dXJuOlwicHJveHk0XCIhPT1vLHNlY3VyaXR5OlwicHJveHk1XCI9PT1vfSkpKTtsLnB1c2goLi4ucil9cmV0dXJuIGUudHVyblNlcnZlcj17bW9kZTpcIm1hbnVhbFwiLHNlcnZlcnM6bH0sZmIuZGVidWcoXCJbXCIuY29uY2F0KGUuY2xpZW50SWQsXCJdIHNldCBwcm94eSBzZXJ2ZXI6IFwiKS5jb25jYXQoZS5wcm94eVNlcnZlcixcIiwgbW9kZTogXCIpLmNvbmNhdChvKSksZH1hc3luYyBmdW5jdGlvbiBZeChlLHQsaSxuLHIpe2NvbnN0IG89WEEoXCJBQ0NPVU5UX1JFR0lTVEVSXCIpLnNsaWNlKDAsWEEoXCJBSkFYX1JFUVVFU1RfQ09OQ1VSUkVOVFwiKSk7bGV0IHM9W107cz10LnByb3h5U2VydmVyP28ubWFwKChlPT5cImh0dHBzOi8vXCIuY29uY2F0KHQucHJveHlTZXJ2ZXIsXCIvYXAvP3VybD1cIikuY29uY2F0KGUrXCIvYXBpL3YxXCIpKSk6by5tYXAoKGU9PlwiaHR0cHM6Ly9cIi5jb25jYXQoZSxcIi9hcGkvdjFcIikpKTtjb25zdCBhPW51bGw9PXI/dm9pZCAwOnIucmVjb3JkSm9pbkNoYW5uZWxTZXJ2aWNlKHtzdGFydFRzOkRhdGUubm93KCksc3RhdHVzOlwicGVuZGluZ1wiLHNlcnZpY2U6XCJzdHJpbmdVSURcIix1cmxzOnN9KTt0cnl7Y29uc3Qgbz1hd2FpdCBhc3luYyBmdW5jdGlvbihlLHQsaSxuLHIpe2NvbnN0IG89RGF0ZS5ub3coKSxzPXtzaWQ6aS5zaWQsb3BpZDoxMCxhcHBpZDppLmFwcElkLHN0cmluZ191aWQ6dH07bGV0IGE9ZVswXTtjb25zdCBjPWF3YWl0IGtBKCgoKT0+VHgoYStcIlwiLmNvbmNhdCgtMT09PWEuaW5kZXhPZihcIj9cIik/XCI/XCI6XCImXCIsXCJhY3Rpb249c3RyaW5ndWlkXCIpLHtkYXRhOnMsY2FuY2VsVG9rZW46bixoZWFkZXJzOntcIlgtUGFja2V0LVNlcnZpY2UtVHlwZVwiOjAsXCJYLVBhY2tldC1VUklcIjo3Mn19KSksKChpLG4pPT57aWYoMD09PWkuY29kZSl7aWYoaS51aWQ8PTB8fGkudWlkPj1NYXRoLnBvdygyLDMyKSl0aHJvdyBmYi5lcnJvcihcIkludmFsaWQgVWludCBVaWQgXCIuY29uY2F0KHQsXCIgPT4gXCIpLmNvbmNhdChpLnVpZCksaSksdmIucmVxVXNlckFjY291bnQocy5zaWQse2x0czpvLHN1Y2Nlc3M6ITEsc2VydmVyQWRkcjphLHN0cmluZ1VpZDpzLnN0cmluZ191aWQsdWlkOmkudWlkLGVycm9yQ29kZTpSeS5JTlZBTElEX1VJTlRfVUlEX0ZST01fU1RSSU5HX1VJRCxleHRlbmQ6c30pLG5ldyB5YihSeS5JTlZBTElEX1VJTlRfVUlEX0ZST01fU1RSSU5HX1VJRCk7cmV0dXJuIHZiLnJlcVVzZXJBY2NvdW50KHMuc2lkLHtsdHM6byxzdWNjZXNzOiEwLHNlcnZlckFkZHI6YSxzdHJpbmdVaWQ6cy5zdHJpbmdfdWlkLHVpZDppLnVpZCxlcnJvckNvZGU6bnVsbCxleHRlbmQ6c30pLCExfWNvbnN0IHI9d08oaS5jb2RlKTtyZXR1cm4gci5yZXRyeSYmKGE9ZVsobisxKSVlLmxlbmd0aF0pLHZiLnJlcVVzZXJBY2NvdW50KHMuc2lkLHtsdHM6byxzdWNjZXNzOiExLHNlcnZlckFkZHI6YSxzdHJpbmdVaWQ6cy5zdHJpbmdfdWlkLHVpZDppLnVpZCxlcnJvckNvZGU6ci5kZXNjLGV4dGVuZDpzfSksci5yZXRyeX0pLCgodCxpKT0+dC5jb2RlIT09UnkuT1BFUkFUSU9OX0FCT1JURUQmJih2Yi5yZXFVc2VyQWNjb3VudChzLnNpZCx7bHRzOm8sc3VjY2VzczohMSxzZXJ2ZXJBZGRyOmEsc3RyaW5nVWlkOnMuc3RyaW5nX3VpZCx1aWQ6bnVsbCxlcnJvckNvZGU6dC5jb2RlLGV4dGVuZDpzfSksYT1lWyhpKzEpJWUubGVuZ3RoXSwhMCkpLHIpO2lmKDAhPT1jLmNvZGUpe2NvbnN0IGU9d08oYy5jb2RlKTt0aHJvdyBuZXcgeWIoUnkuVU5FWFBFQ1RFRF9SRVNQT05TRSxlLmRlc2MpfXJldHVybiBjfShzLGUsdCxpLG4pO3JldHVybiBudWxsPT1yfHxyLnJlY29yZEpvaW5DaGFubmVsU2VydmljZSh7c3RhdHVzOlwic3VjY2Vzc1wiLGVuZFRzOkRhdGUubm93KCl9LGEpLG8udWlkfWNhdGNoKGUpe3Rocm93IG51bGw9PXJ8fHIucmVjb3JkSm9pbkNoYW5uZWxTZXJ2aWNlKHtzdGF0dXM6XCJlcnJvclwiLGVuZFRzOkRhdGUubm93KCksZXJyb3JzOltlXX0sYSksZX19YXN5bmMgZnVuY3Rpb24gcXgoZSx0LGkpe2NvbnN0IG49WEEoXCJBQ0NPVU5UX1JFR0lTVEVSXCIpO2xldCByPVtdO3I9dC5wcm94eVNlcnZlcj9uLm1hcCgoZT0+XCJodHRwczovL1wiLmNvbmNhdCh0LnByb3h5U2VydmVyLFwiL2FwLz91cmw9XCIpLmNvbmNhdChlK1wiL2FwaS92MVwiKSkpOm4ubWFwKChlPT5cImh0dHBzOi8vXCIuY29uY2F0KGUsXCIvYXBpL3YxXCIpKSk7dHJ5e2NvbnN0IG49YXdhaXQgV3goe3JlZmVyZW5jZUxpc3Q6cixhc3luY01hcEhhbmRsZXI6bj0+YXN5bmMgZnVuY3Rpb24oZSx0LGksbil7Y29uc3Qgcj1EYXRlLm5vdygpLG89e3NpZDppLnNpZCxvcGlkOjEwLGFwcGlkOmkuYXBwSWQsc3RyaW5nX3VpZDp0fTt0cnl7Y29uc3QgdD1hd2FpdCBUeChlK1wiXCIuY29uY2F0KC0xPT09ZS5pbmRleE9mKFwiP1wiKT9cIj9cIjpcIiZcIixcImFjdGlvbj1zdHJpbmd1aWRcIikse2RhdGE6byxjYW5jZWxUb2tlbjpuLGhlYWRlcnM6e1wiWC1QYWNrZXQtU2VydmljZS1UeXBlXCI6MCxcIlgtUGFja2V0LVVSSVwiOjcyfX0pO2lmKDAhPT10LmNvZGUpe2NvbnN0IGU9d08odC5jb2RlKTt0aHJvdyBuZXcgeWIoUnkuVU5FWFBFQ1RFRF9SRVNQT05TRSxcInByZWxvYWQgc3VhIGVycm9yOlwiLmNvbmNhdChlLmRlc2MpLGUpfWlmKHQudWlkPD0wfHx0LnVpZD49TWF0aC5wb3coMiwzMikpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfVUlOVF9VSURfRlJPTV9TVFJJTkdfVUlEKTtyZXR1cm57cmVxdWVzdFRpbWU6cix1cmw6ZSxyZXE6byx1aWQ6dC51aWQsZWxhcHNlOkRhdGUubm93KCktcn19Y2F0Y2goZSl7dGhyb3cgZX19KG4sZSx0LGkpLGNsb3NlRm46ZT0+ZS5jb2RlPT09UnkuT1BFUkFUSU9OX0FCT1JURUR8fGUuY29kZT09PVJ5LlVORVhQRUNURURfUkVTUE9OU0UmJiFlLmRhdGEucmV0cnl9KTtyZXR1cm4gbn1jYXRjaChlKXt0aHJvdyBlfX1hc3luYyBmdW5jdGlvbiB6eChlLHQsaSl7Y29uc3Qgbj1YQShcIkNEU19BUFwiKS5zbGljZSgwLFhBKFwiQUpBWF9SRVFVRVNUX0NPTkNVUlJFTlRcIikpLm1hcCgodD0+ZS5wcm94eVNlcnZlcj9cImh0dHBzOi8vXCIuY29uY2F0KGUucHJveHlTZXJ2ZXIsXCIvYXAvP3VybD1cIikuY29uY2F0KHQrXCIvYXBpL3YxXCIpOlwiaHR0cHM6Ly9cIi5jb25jYXQodCxcIi9hcGkvdjE/YWN0aW9uPWNvbmZpZ1wiKSkpLHI9bi5tYXAoKG49PmZ1bmN0aW9uKGUsdCxpLG4pe2NvbnN0IHI9SHYoKSxvPXtmbGFnOjY0LGNpcGhlcl9tZXRob2Q6MCxmZWF0dXJlczp7ZGV2aWNlOnIubmFtZSxzeXN0ZW06ci5vcyxzeXN0ZW1fZ2VuZXJhbDpuYXZpZ2F0b3IudXNlckFnZW50LHZlbmRvcjp0LmFwcElkLHZlcnNpb246R0EsY25hbWU6dC5jbmFtZSxzaWQ6dC5zaWQsc2Vzc2lvbl9pZDp0LnNpZCxkZXRhaWw6XCJcIixwcm94eVNlcnZlcjp0LnByb3h5U2VydmVyfX07cmV0dXJuIGtBKCgoKT0+VHgoZSx7ZGF0YTpvLHRpbWVvdXQ6MWUzLGNhbmNlbFRva2VuOmksaGVhZGVyczp7XCJYLVBhY2tldC1TZXJ2aWNlLVR5cGVcIjowLFwiWC1QYWNrZXQtVVJJXCI6NTR9fSkpLHZvaWQgMCwoZT0+ZS5jb2RlIT09UnkuT1BFUkFUSU9OX0FCT1JURUQpLG4pfShuLGUsdCxpKSkpO2xldCBvPW51bGwscz1udWxsLGE9e307dHJ5e289YXdhaXQgangocil9Y2F0Y2goZSl7aWYoZS5jb2RlPT09UnkuT1BFUkFUSU9OX0FCT1JURUQpdGhyb3cgZTtzPWV9ci5mb3JFYWNoKChlPT5lLmNhbmNlbCgpKSk7aWYodmIucmVwb3J0QXBpSW52b2tlKGUuc2lkLHtuYW1lOkJ5LlJFUVVFU1RfQ09ORklHX0RJU1RSSUJVVEUsb3B0aW9uczp7ZXJyb3I6cyxyZXM6b319KS5vblN1Y2Nlc3MoKSxvJiZvLnRlc3RfdGFncyl0cnl7YT1mdW5jdGlvbihlKXtpZighZS50ZXN0X3RhZ3MpcmV0dXJue307Y29uc3QgdD1lLnRlc3RfdGFncyxpPU9iamVjdC5rZXlzKHQpLG49e307cmV0dXJuIGkuZm9yRWFjaCgoZT0+e3ZhciBpO2NvbnN0IHI9anAoaT1lLnNsaWNlKDQpKS5jYWxsKGkpLG89SlNPTi5wYXJzZSh0W2VdKVsxXTtuW3JdPW99KSksbn0obyl9Y2F0Y2goZSl7fXJldHVybiBhfWFzeW5jIGZ1bmN0aW9uIEp4KGUsdCl7Y29uc3QgaT1YQShcIldFQkNTX0RPTUFJTlwiKS5jb25jYXQoWEEoXCJXRUJDU19ET01BSU5fQkFDS1VQX0xJU1RcIikpLm1hcCgoZT0+KHt1cmw6XCJodHRwczovL1wiLmNvbmNhdChlLFwiL2FwaS92Mi90cmFuc3BvbmQvd2VicnRjP3Y9MlwiKSxhcmVhQ29kZTpTeCgpLHNlcnZpY2VJZHM6W1lPLkNIT09TRV9TRVJWRVIsWU8uQ0xPVURfUFJPWFlfRkFMTEJBQ0tdfSkpKTt0cnl7Y29uc3Qgbj1hd2FpdCBXeCh7cmVmZXJlbmNlTGlzdDppLGFzeW5jTWFwSGFuZGxlcjppPT5hc3luYyBmdW5jdGlvbihlLHQsaSl7bGV0IG4se3VybDpyLGFyZWFDb2RlOm8sc2VydmljZUlkczpzfT1lO2NvbnN0IGE9RGF0ZS5ub3coKSxbYyxkXT1WeCh0LG8scyk7bGV0IGw9aUEubmV0d29ya1N0YXRlO3RyeXtsJiZpQS5uZXR3b3JrU3RhdGU9PT1YeS5PRkZMSU5FJiZpQS5vbmxpbmVXYWl0ZXImJmF3YWl0IEdoLnJhY2UoW2lBLm9ubGluZVdhaXRlcixtQShQQS5tYXhSZXRyeVRpbWVvdXQpXSksbD1pQS5uZXR3b3JrU3RhdGU7Y29uc3R7ZGF0YTplLGhlYWRlcnM6dH09YXdhaXQgVHgocix7ZGF0YTpjLGNhbmNlbFRva2VuOmksaGVhZGVyczp7XCJDb250ZW50LVR5cGVcIjpcIm11bHRpcGFydC9mb3JtLWRhdGE7XCJ9fSwhMCwhMCk7bj1cIjFcIj09PXQuaHR0cDM/MTotMTtjb25zdCBvPWU9Pntjb25zdCB0PVtdO2lmKGUucmVzcG9uc2VfYm9keS5mb3JFYWNoKChpPT57Y29uc3Qgbj1pLmJ1ZmZlci5jb2RlO2lmKDIzPT09aS51cmkmJjA9PT1uJiYhaS5idWZmZXIuZWRnZXNfc2VydmljZXMpaWYoNDE5NDMxMD09PWkuYnVmZmVyLmZsYWcpaS5idWZmZXIuZWRnZXNfc2VydmljZXM9W107ZWxzZXtjb25zdCBuPXtlcnJvcjpuZXcgeWIoUnkuQ0FOX05PVF9HRVRfR0FURVdBWV9TRVJWRVIsXCJubyBlZGdlIHNlcnZpY2VzIGluIGFwIHJlc3BvbnNlXCIse3JldHJ5OiEwLGNzSXA6ZS5kZXRhaWxbNTAyXX0pLGZsYWc6aS5idWZmZXIuZmxhZ307dC5wdXNoKG4pfWlmKDAhPT1uKXtjb25zdCByPXdPKG4pLG89e2Vycm9yOm5ldyB5YihSeS5DQU5fTk9UX0dFVF9HQVRFV0FZX1NFUlZFUixyLmRlc2Mse2Rlc2M6ci5kZXNjLHJldHJ5OnIucmV0cnksY3NJcDplLmRldGFpbFs1MDJdfSksZmxhZzppLmJ1ZmZlci5mbGFnfTs0MTk0MzEwPT09aS5idWZmZXIuZmxhZz9mYi53YXJuaW5nKG8uZXJyb3IudG9TdHJpbmcoKSk6dC5wdXNoKG8pfX0pKSx0Lmxlbmd0aCl0aHJvdyBuZXcgeWIoUnkuQ0FOX05PVF9HRVRfR0FURVdBWV9TRVJWRVIsdC5tYXAoKGU9PlwiZmxhZzogXCIuY29uY2F0KGUuZmxhZyxcIiwgbWVzc2FnZTogXCIpLmNvbmNhdChlLmVycm9yLm1lc3NhZ2UpKSkuam9pbihcIiB8IFwiKSx7cmV0cnk6ISF0LmZpbmQoKGU9PmUuZXJyb3IuZGF0YS5yZXRyeSkpLGNzSXA6ZS5kZXRhaWxbNTAyXSxkZXNjOlsuLi5uZXcgU2V0KHQubWFwKChlPT57dmFyIHQ7cmV0dXJuIG51bGw9PWV8fG51bGw9PT0odD1lLmVycm9yKXx8dm9pZCAwPT09dHx8bnVsbD09PSh0PXQuZGF0YSl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuZGVzY30pKS5maWx0ZXIoKGU9PiEhZSkpKV19KX07byhlKTtjb25zdCBzPWVOKGUsWU8uQ0hPT1NFX1NFUlZFUiksdT1lTihlLFlPLkNMT1VEX1BST1hZX0ZBTExCQUNLKTtyZXR1cm4gVXgocykse2dhdGV3YXlJbmZvOlhPKHMscikscHJveHlJbmZvOnUsb3BpZDpkLHJlcXVlc3RUaW1lOmEsdXJsOnIsaXNIdHRwMzpuLGVsYXBzZTpEYXRlLm5vdygpLWF9fWNhdGNoKGUpe3Rocm93IGV9fShpLGUsdCksY2xvc2VGbjplPT5lLmNvZGU9PT1SeS5PUEVSQVRJT05fQUJPUlRFRHx8ZS5jb2RlPT09UnkuQ0FOX05PVF9HRVRfR0FURVdBWV9TRVJWRVImJiFlLmRhdGEucmV0cnl9KTtyZXR1cm4gbn1jYXRjaChlKXt0aHJvdyBlfX1hc3luYyBmdW5jdGlvbiBYeChlLHQsaSxuKXtjb25zdCByPVhBKFwiUFJPWFlfU0VSVkVSX1RZUEUzXCIpLG89KGUsdCxpKT0+e2xldCBuPWl8fHI7cmV0dXJuIEFycmF5LmlzQXJyYXkobikmJihuPXQlMj09MD9yWzFdOnJbMF0pLFwiaHR0cHM6Ly9cIi5jb25jYXQobixcIi9hcC8/dXJsPVwiKS5jb25jYXQoZSl9O2xldCBzPW51bGw7Y29uc3QgYT1bXSxjPWFzeW5jKCk9Pntjb25zdCByPVhBKFwiV0VCQ1NfRE9NQUlOXCIpLnNsaWNlKDAsWEEoXCJBSkFYX1JFUVVFU1RfQ09OQ1VSUkVOVFwiKSkubWFwKCgodCxpKT0+e2xldCBuO3JldHVybiBuPVwiZGlzYWJsZWRcIj09PWUuY2xvdWRQcm94eVNlcnZlciYmZS5wcm94eVNlcnZlcj9vKFwiXCIuY29uY2F0KHQsXCIvYXBpL3YyL3RyYW5zcG9uZC93ZWJydGM/dj0yXCIpLGksZS5wcm94eVNlcnZlcik6XCJkaXNhYmxlZFwiPT09ZS5jbG91ZFByb3h5U2VydmVyfHxcImZhbGxiYWNrXCI9PT1lLmNsb3VkUHJveHlTZXJ2ZXI/XCJodHRwczovL1wiLmNvbmNhdCh0LFwiL2FwaS92Mi90cmFuc3BvbmQvd2VicnRjP3Y9MlwiKTpvKFwiXCIuY29uY2F0KHQsXCIvYXBpL3YyL3RyYW5zcG9uZC93ZWJydGM/dj0yXCIpLGkpLHt1cmw6bixhcmVhQ29kZTpTeCgpLHNlcnZpY2VJZHM6W1lPLkNIT09TRV9TRVJWRVIsXCJwcm94eTVcIj09PWUuY2xvdWRQcm94eVNlcnZlcj9ZTy5DTE9VRF9QUk9YWV81OlwicHJveHkzXCI9PT1lLmNsb3VkUHJveHlTZXJ2ZXJ8fFwicHJveHk0XCI9PT1lLmNsb3VkUHJveHlTZXJ2ZXI/WU8uQ0xPVURfUFJPWFk6WU8uQ0xPVURfUFJPWFlfRkFMTEJBQ0tdfX0pKSxzPW4ucmVjb3JkSm9pbkNoYW5uZWxTZXJ2aWNlKHtzdGFydFRzOkRhdGUubm93KCksc3RhdHVzOlwicGVuZGluZ1wiLHNlcnZpY2U6XCJjaG9vc2VTZXJ2ZXJcIix1cmxzOnIubWFwKChlPT5lLnVybCkpfSksYz1hd2FpdCBHeCh7ZnJhZ2VtZW50TGVuZ3RoOlhBKFwiRlJBR0VNRU5UX0xFTkdUSFwiKSxyZWZlcmVuY2VMaXN0OnIsYXN5bmNNYXBIYW5kbGVyOm49PihmYi5kZWJ1ZyhcIltcIi5jb25jYXQoZS5jbGllbnRJZCxcIl0gQ29ubmVjdCB0byBjaG9vc2Vfc2VydmVyOlwiKSxuLnVybCksa3gobixlLHQsaSkpLGFsbEZhaWxlZGhhbmRsZXI6ZT0+e3Rocm93IG4ucmVjb3JkSm9pbkNoYW5uZWxTZXJ2aWNlKHtlbmRUczpEYXRlLm5vdygpLHN0YXR1czpcImVycm9yXCIsZXJyb3JzOmV9LHMpLGVbMF19LHByb21pc2VzQ29sbGVjdG9yOmF9KTtyZXR1cm4gbi5yZWNvcmRKb2luQ2hhbm5lbFNlcnZpY2Uoe2VuZFRzOkRhdGUubm93KCksc3RhdHVzOlwic3VjY2Vzc1wifSxzKSxjfSxkPWFzeW5jKCk9PntpZihhd2FpdCBtQSgxZTMpLG51bGwhPT1zKXJldHVybiBzO2NvbnN0IHI9WEEoXCJXRUJDU19ET01BSU5fQkFDS1VQX0xJU1RcIikubWFwKCgodCxpKT0+e2xldCBuO3JldHVybiBuPVwiZGlzYWJsZWRcIj09PWUuY2xvdWRQcm94eVNlcnZlciYmZS5wcm94eVNlcnZlcj9vKFwiXCIuY29uY2F0KHQsXCIvYXBpL3YyL3RyYW5zcG9uZC93ZWJydGM/dj0yXCIpLGksZS5wcm94eVNlcnZlcik6XCJkaXNhYmxlZFwiPT09ZS5jbG91ZFByb3h5U2VydmVyfHxcImZhbGxiYWNrXCI9PT1lLmNsb3VkUHJveHlTZXJ2ZXI/XCJodHRwczovL1wiLmNvbmNhdCh0LFwiL2FwaS92Mi90cmFuc3BvbmQvd2VicnRjP3Y9MlwiKTpvKFwiXCIuY29uY2F0KHQsXCIvYXBpL3YyL3RyYW5zcG9uZC93ZWJydGM/dj0yXCIpLGkpLHt1cmw6bixhcmVhQ29kZTpTeCgpLHNlcnZpY2VJZHM6W1lPLkNIT09TRV9TRVJWRVIsXCJwcm94eTVcIj09PWUuY2xvdWRQcm94eVNlcnZlcj9ZTy5DTE9VRF9QUk9YWV81OlwicHJveHkzXCI9PT1lLmNsb3VkUHJveHlTZXJ2ZXJ8fFwicHJveHk0XCI9PT1lLmNsb3VkUHJveHlTZXJ2ZXI/WU8uQ0xPVURfUFJPWFk6WU8uQ0xPVURfUFJPWFlfRkFMTEJBQ0tdfX0pKSxjPW4ucmVjb3JkSm9pbkNoYW5uZWxTZXJ2aWNlKHtzdGFydFRzOkRhdGUubm93KCksc3RhdHVzOlwicGVuZGluZ1wiLHNlcnZpY2U6XCJjaG9vc2VTZXJ2ZXJcIix1cmxzOnIubWFwKChlPT5lLnVybCkpfSksZD1hd2FpdCBHeCh7ZnJhZ2VtZW50TGVuZ3RoOlhBKFwiRlJBR0VNRU5UX0xFTkdUSFwiKSxyZWZlcmVuY2VMaXN0OnIsYXN5bmNNYXBIYW5kbGVyOm49PihmYi5kZWJ1ZyhcIltcIi5jb25jYXQoZS5jbGllbnRJZCxcIl0gQ29ubmVjdCB0byBiYWNrdXAgY2hvb3NlX3NlcnZlcjpcIiksbi51cmwpLGt4KG4sZSx0LGkpKSxhbGxGYWlsZWRoYW5kbGVyOmU9Pnt0aHJvdyBuLnJlY29yZEpvaW5DaGFubmVsU2VydmljZSh7ZW5kVHM6RGF0ZS5ub3coKSxzdGF0dXM6XCJlcnJvclwiLGVycm9yczplfSxjKSxlWzBdfSxwcm9taXNlc0NvbGxlY3RvcjphfSk7cmV0dXJuIG4ucmVjb3JkSm9pbkNoYW5uZWxTZXJ2aWNlKHtlbmRUczpEYXRlLm5vdygpLHN0YXR1czpcInN1Y2Nlc3NcIn0sYyksZH07bGV0IGwsdSxoO3RyeXsoe2dhdGV3YXlJbmZvOmwscHJveHlJbmZvOnUsdXJsOmh9PWF3YWl0IGp4KFtjKCksZCgpXSkpfWNhdGNoKGUpe3Rocm93IGVbMF19aWYoYS5sZW5ndGgmJmEuZm9yRWFjaCgoZT0+ZS5jYW5jZWwmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuY2FuY2VsJiZlLmNhbmNlbCgpKSksIWx8fCF1KXRocm93IG5ldyB5YihSeS5VTkVYUEVDVEVEX0VSUk9SLFwibWlzc2luZyBnYXRld2F5IG9yIHByb3h5IHJlc3BvbnNlXCIpLnByaW50KCk7aWYoZS5hcFVybD1oLFwiZGlzYWJsZWRcIiE9PWUuY2xvdWRQcm94eVNlcnZlciYmQXJyYXkuaXNBcnJheShyKSYmaCl7Y29uc3QgdD0vXmh0dHBzPzpcXC9cXC8oLis/KShcXC8uKik/JC8uZXhlYyhoKVsxXTtEbihyKS5jYWxsKHIsdCkmJihlLnByb3h5U2VydmVyPXQsZmIuc2V0UHJveHlTZXJ2ZXIodCksdmIuc2V0UHJveHlTZXJ2ZXIodCkpfXJldHVybiBzPXtnYXRld2F5SW5mbzpsLHByb3h5SW5mbzphd2FpdCB0Tih1LGwudWlkKX0sc31hc3luYyBmdW5jdGlvbiBReChlLHQsaSl7Y29uc3Qgbj1YQShcIlVBUF9BUFwiKS5zbGljZSgwLFhBKFwiQUpBWF9SRVFVRVNUX0NPTkNVUlJFTlRcIikpLm1hcCgodD0+ZS5wcm94eVNlcnZlcj9cImh0dHBzOi8vXCIuY29uY2F0KGUucHJveHlTZXJ2ZXIsXCIvYXAvP3VybD1cIikuY29uY2F0KHQrXCIvYXBpL3YxP2FjdGlvbj11YXBcIik6XCJodHRwczovL1wiLmNvbmNhdCh0LFwiL2FwaS92MT9hY3Rpb249dWFwXCIpKSkscj1uLm1hcCgobj0+ZnVuY3Rpb24oZSx0LGksbil7Y29uc3Qgcj17Y29tbWFuZDpcImNvbnZlcmdlQWxsb2NhdGVFZGdlXCIsc2lkOnQuc2lkLGFwcElkOnQuYXBwSWQsdG9rZW46dC50b2tlbix0czpEYXRlLm5vdygpLHZlcnNpb246R0EsY25hbWU6dC5jbmFtZSx1aWQ6dC51aWQudG9TdHJpbmcoKSxyZXF1ZXN0SWQ6UHgsc2VxOlB4fTtQeCs9MTtjb25zdCBvPXtzZXJ2aWNlX25hbWU6XCJ0ZWxlX2NoYW5uZWxcIixqc29uX2JvZHk6SlNPTi5zdHJpbmdpZnkocil9O3JldHVybiBrQSgoYXN5bmMoKT0+e2NvbnN0IHQ9YXdhaXQgVHgoZSx7ZGF0YTpvLGNhbmNlbFRva2VuOmksaGVhZGVyczp7XCJYLVBhY2tldC1TZXJ2aWNlLVR5cGVcIjowLFwiWC1QYWNrZXQtVVJJXCI6NjF9fSk7aWYoMCE9PXQuY29kZSl7Y29uc3QgZT1uZXcgeWIoUnkuVU5FWFBFQ1RFRF9SRVNQT05TRSxcImNyb3NzIGNoYW5uZWwgYXAgZXJyb3IsIGNvZGVcIit0LmNvZGUse3JldHJ5OiEwfSk7dGhyb3cgZmIuZXJyb3IoZS50b1N0cmluZygpKSxlfWNvbnN0IG49SlNPTi5wYXJzZSh0Lmpzb25fYm9keSk7aWYoMjAwIT09bi5jb2RlKXtjb25zdCBlPW5ldyB5YihSeS5VTkVYUEVDVEVEX1JFU1BPTlNFLFwiY3Jvc3MgY2hhbm5lbCBhcHAgY2VudGVyIGVycm9yLCBjb2RlOiBcIi5jb25jYXQobi5jb2RlLFwiLCByZWFzb246IFwiKS5jb25jYXQobi5yZWFzb24pKTt0aHJvdyBmYi5lcnJvcihlLnRvU3RyaW5nKCkpLGV9aWYoIW4uc2VydmVyc3x8MD09PW4uc2VydmVycy5sZW5ndGgpe2NvbnN0IGU9bmV3IHliKFJ5LlVORVhQRUNURURfUkVTUE9OU0UsXCJjcm9zcyBjaGFubmVsIGFwcCBjZW50ZXIgZW1wdHkgc2VydmVyXCIpO3Rocm93IGZiLmVycm9yKGUudG9TdHJpbmcoKSksZX1yZXR1cm57dmlkOm4udmlkLHdvcmtlclRva2VuOm4ud29ya2VyVG9rZW4sYWRkcmVzc0xpc3Q6KFhBKFwiQ0hBTk5FTF9NRURJQV9SRUxBWV9TRVJWRVJTXCIpfHxuLnNlcnZlcnMpLm1hcCgoZT0+XCJ3c3M6Ly9cIi5jb25jYXQoZS5hZGRyZXNzLnJlcGxhY2UoL1xcLi9nLFwiLVwiKSxcIi5cIikuY29uY2F0KFhBKFwiV09SS0VSX0RPTUFJTlwiKSxcIjpcIikuY29uY2F0KGUud3NzKSkpfX0pLHZvaWQgMCwoZT0+ISEoZS5jb2RlIT09UnkuT1BFUkFUSU9OX0FCT1JURUQmJmUuY29kZSE9PVJ5LlVORVhQRUNURURfUkVTUE9OU0V8fGUuZGF0YSYmZS5kYXRhLnJldHJ5KSksbil9KG4sZSx0LGkpKSk7dHJ5e2NvbnN0IGU9YXdhaXQgangocik7cmV0dXJuIHIuZm9yRWFjaCgoZT0+ZS5jYW5jZWwoKSkpLGV9Y2F0Y2goZSl7dGhyb3cgZVswXX19YXN5bmMgZnVuY3Rpb24gWngoZSx0LGkpe2xldCBuPW51bGw7Y29uc3Qgcj1bXSxvPWFzeW5jIG89Pntjb25zdCBzPVhBKG8/XCJXRUJDU19ET01BSU5fQkFDS1VQX0xJU1RcIjpcIldFQkNTX0RPTUFJTlwiKS5tYXAoKHQ9PmUucHJveHlTZXJ2ZXI/XCJodHRwczovL1wiLmNvbmNhdChlLnByb3h5U2VydmVyLFwiL2FwLz91cmw9XCIpLmNvbmNhdCh0K1wiL2FwaS92Mi90cmFuc3BvbmQvd2VicnRjP3Y9MlwiKTpcImh0dHBzOi8vXCIuY29uY2F0KHQsXCIvYXBpL3YyL3RyYW5zcG9uZC93ZWJydGM/dj0yXCIpKSk7cmV0dXJuIG8mJihhd2FpdCBtQSgxZTMpLG51bGwhPT1uKT9uOmF3YWl0IEd4KHtmcmFnZW1lbnRMZW5ndGg6WEEoXCJGUkFHRU1FTlRfTEVOR1RIXCIpLHJlZmVyZW5jZUxpc3Q6cyxhc3luY01hcEhhbmRsZXI6bj0+KGZiLmRlYnVnKFwiW1wiLmNvbmNhdChlLmNsaWVudElkLFwiXSB1cGRhdGUgdGlja2V0LCBDb25uZWN0IHRvIFwiKS5jb25jYXQobz9cImJhY2t1cFwiOlwiXCIsXCIgY2hvb3NlX3NlcnZlcjpcIiksbiksZnVuY3Rpb24oZSx0LGksbil7Y29uc3Rbcl09RngodCxbWU8uQ0hPT1NFX1NFUlZFUl0pO2xldCBvPWlBLm5ldHdvcmtTdGF0ZTtyZXR1cm4ga0EoKGFzeW5jKCk9PntvJiZpQS5uZXR3b3JrU3RhdGU9PT1YeS5PRkZMSU5FJiZpQS5vbmxpbmVXYWl0ZXImJmF3YWl0IEdoLnJhY2UoW2lBLm9ubGluZVdhaXRlcixtQShuJiZuLm1heFJldHJ5VGltZW91dHx8UEEubWF4UmV0cnlUaW1lb3V0KV0pLG89aUEubmV0d29ya1N0YXRlO2NvbnN0IHQ9YXdhaXQgVHgoZSx7ZGF0YTpyLGNhbmNlbFRva2VuOmksaGVhZGVyczp7XCJDb250ZW50LVR5cGVcIjpcIm11bHRpcGFydC9mb3JtLWRhdGE7XCJ9fSwhMCk7cmV0dXJuIHh4KHQsZSl9KSwoKCk9PiExKSwoZT0+ZS5jb2RlIT09UnkuT1BFUkFUSU9OX0FCT1JURUQmJihlLmNvZGU9PT1SeS5VUERBVEVfVElDS0VUX0ZBSUxFRD9lLmRhdGEucmV0cnk6KGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHQuY2xpZW50SWQsXCJdIHVwZGF0ZSB0aWNrZXQgbmV0d29yayBlcnJvciwgcmV0cnlcIiksZSksITApKSksbil9KG4sZSx0LGkpKSxhbGxGYWlsZWRoYW5kbGVyOmU9Pnt0aHJvdyBlWzBdfSxwcm9taXNlc0NvbGxlY3RvcjpyfSl9O3RyeXtyZXR1cm4gbj1hd2FpdCBqeChbbyghMSksbyghMCldKSxyLmxlbmd0aCYmci5mb3JFYWNoKChlPT5lLmNhbmNlbCYmXCJmdW5jdGlvblwiPT10eXBlb2YgZS5jYW5jZWwmJmUuY2FuY2VsKCkpKSxufWNhdGNoKGUpe3Rocm93IGVbMF19fWZ1bmN0aW9uICR4KGUsdCl7dmFyIGk9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYobj1uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxpLnB1c2guYXBwbHkoaSxuKX1yZXR1cm4gaX1mdW5jdGlvbiBlVihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgaT1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj8keChPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0ZnKGUsdCxpW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGkpKTokeChPYmplY3QoaSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLHQpKX0pKX1yZXR1cm4gZX1jbGFzcyB0ViBleHRlbmRzIHh5e2dldCBpc1N1Y2Nlc3MoKXtyZXR1cm4hIXRoaXMuY29uZmlnc31jb25zdHJ1Y3Rvcigpe3N1cGVyKCksRmcodGhpcyxcImNvbmZpZ3NcIix2b2lkIDApLEZnKHRoaXMsXCJqb2luSW5mb1wiLHZvaWQgMCksRmcodGhpcyxcImNhbmNlbFRva2VuXCIsdm9pZCAwKSxGZyh0aGlzLFwicmV0cnlDb25maWdcIix7dGltZW91dDozZTMsdGltZW91dEZhY3RvcjoxLjUsbWF4UmV0cnlDb3VudDoxLG1heFJldHJ5VGltZW91dDoxZTR9KSxGZyh0aGlzLFwiaW50ZXJ2YWxcIix2b2lkIDApLEZnKHRoaXMsXCJtdXRleFwiLG5ldyBOQShcImNvbmZpZy1kaXN0cmlidXRlXCIpKSxGZyh0aGlzLFwibXV0YWJsZVBhcmFtc1JlYWRcIiwhMSl9c3RhcnRHZXRDb25maWdEaXN0cmlidXRlKGUsdCl7dGhpcy5qb2luSW5mbz1lLHRoaXMuY2FuY2VsVG9rZW49dCx0aGlzLmludGVydmFsJiZ0aGlzLnN0b3BHZXRDb25maWdEaXN0cmlidXRlKCksWEEoXCJFTkFCTEVfQ09ORklHX0RJU1RSSUJVVEVcIikmJih0aGlzLnVwZGF0ZUNvbmZpZ0Rpc3RyaWJ1dGUoKSx0aGlzLmludGVydmFsPXdpbmRvdy5zZXRJbnRlcnZhbCgoKCk9Pnt0aGlzLnVwZGF0ZUNvbmZpZ0Rpc3RyaWJ1dGUoKX0pLFhBKFwiQ09ORklHX0RJU1RSSUJVVEVfSU5URVJWQUxcIikpKX1zdG9wR2V0Q29uZmlnRGlzdHJpYnV0ZSgpe3RoaXMuaW50ZXJ2YWwmJmNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCksdGhpcy5pbnRlcnZhbD12b2lkIDAsdGhpcy5qb2luSW5mbz12b2lkIDAsdGhpcy5jYW5jZWxUb2tlbj12b2lkIDB9YXN5bmMgYXdhaXRDb25maWdEaXN0cmlidXRlQ29tcGxldGUoKXtpZighdGhpcy5tdXRleC5pc0xvY2tlZClyZXR1cm47KGF3YWl0IHRoaXMubXV0ZXgubG9jaygpKSgpfWFzeW5jIHVwZGF0ZUNvbmZpZ0Rpc3RyaWJ1dGUoKXtpZighdGhpcy5tdXRhYmxlUGFyYW1zUmVhZCl7dGhpcy5tdXRhYmxlUGFyYW1zUmVhZD0hMDt2Yi5yZXBvcnRBcGlJbnZva2UobnVsbCx7b3B0aW9uczp2b2lkIDAsbmFtZTpCeS5MT0FEX0NPTkZJR19GUk9NX0xPQ0FMU1RPUkFHRSx0YWc6ankuVFJBQ0VSfSkub25TdWNjZXNzKEpTT04uc3RyaW5naWZ5KFFBKSl9aWYoIXRoaXMuam9pbkluZm98fCF0aGlzLmNhbmNlbFRva2VufHwhdGhpcy5yZXRyeUNvbmZpZylyZXR1cm4gdm9pZCBmYi5kZWJ1ZyhcIltjb25maWctZGlzdHJpYnV0ZV0gZ2V0IGNvbmZpZyBkaXN0cmlidXRlIGludGVycnVwdGVkIGhhdmUgbm8gam9pbmluZm9cIik7bGV0IGU7Y29uc3QgdD1hd2FpdCB0aGlzLm11dGV4LmxvY2soKTt0cnl7ZT1hd2FpdCB6eCh0aGlzLmpvaW5JbmZvLHRoaXMuY2FuY2VsVG9rZW4sdGhpcy5yZXRyeUNvbmZpZyksZmIuZGVidWcoXCJbY29uZmlnLWRpc3RyaWJ1dGVdIGdldCBjb25maWcgZGlzdHJpYnV0ZVwiLEpTT04uc3RyaW5naWZ5KGUpKSxlLmxpbWl0X2JpdHJhdGUmJnRoaXMuaGFuZGxlQml0cmF0ZUxpbWl0KGUubGltaXRfYml0cmF0ZSksdGhpcy5jYWNoZUdsb2JhbFBhcmFtZXRlckNvbmZpZyhlKSx0aGlzLmNvbmZpZ3M9ZX1jYXRjaChlKXtjb25zdCB0PW5ldyB5YihSeS5ORVRXT1JLX1JFU1BPTlNFX0VSUk9SLGUpO2ZiLndhcm5pbmcoXCJbY29uZmlnLWRpc3RyaWJ1dGVdIFwiLmNvbmNhdCh0LnRvU3RyaW5nKCkpKX1maW5hbGx5e3QoKX19Z2V0Qml0cmF0ZUxpbWl0KCl7cmV0dXJuIHRoaXMuY29uZmlncz90aGlzLmNvbmZpZ3MubGltaXRfYml0cmF0ZTp2b2lkIDB9aGFuZGxlQml0cmF0ZUxpbWl0KGUpe3ZhciB0Oyh0PWUpJiZ0LnVwbGluayYmdC5pZCYmdm9pZCAwIT09dC51cGxpbmsubWF4X2JpdHJhdGUmJnZvaWQgMCE9PXQudXBsaW5rLm1pbl9iaXRyYXRlJiYodGhpcy5jb25maWdzJiZ0aGlzLmNvbmZpZ3MubGltaXRfYml0cmF0ZT90aGlzLmNvbmZpZ3MmJnRoaXMuY29uZmlncy5saW1pdF9iaXRyYXRlJiZ0aGlzLmNvbmZpZ3MubGltaXRfYml0cmF0ZS5pZCE9PWUuaWQmJnRoaXMuZW1pdChzTy5VUERBVEVfQklUUkFURV9MSU1JVCxlKTp0aGlzLmVtaXQoc08uVVBEQVRFX0JJVFJBVEVfTElNSVQsZSkpfWdldExvd1N0cmVhbUNvbmZpZ0Rpc3RyaWJ1dGUoKXtyZXR1cm4gdGhpcy5jb25maWdzJiZ0aGlzLmNvbmZpZ3MubGltaXRfYml0cmF0ZSYmZVYoe30sdGhpcy5jb25maWdzLmxpbWl0X2JpdHJhdGUubG93X3N0cmVhbV91cGxpbmspfWNhY2hlR2xvYmFsUGFyYW1ldGVyQ29uZmlnKGUpe3ZhciB0O2NvbnN0IGk9YUUodD1PYmplY3Qua2V5cyhlKS5maWx0ZXIoKGU9Pi9ed2VicnRjX25nX2dsb2JhbF9wYXJhbWV0ZXIvLnRlc3QoZSkpKSkuY2FsbCh0KTtmb3IobGV0IHQ9MDt0PGkubGVuZ3RoO3QrKylmb3IobGV0IG49aS5sZW5ndGgtMTtuPnQ7bi0tKXtjb25zdCB0PWlbbl07aWYoXCJudW1iZXJcIj09dHlwZW9mIGVbdF0uX19wcmlvcml0eSl7Y29uc3Qgcj1lW3RdLl9fcHJpb3JpdHksbz1pW24tMV07aWYoXCJudW1iZXJcIj09dHlwZW9mIGVbb10uX19wcmlvcml0eSl7aWYoIShyPmVbb10uX19wcmlvcml0eSkpY29udGludWU7e2NvbnN0IGU9dDtpW25dPWlbbi0xXSxpW24tMV09ZX19ZWxzZXtjb25zdCBlPXQ7aVtuXT1pW24tMV0saVtuLTFdPWV9fX1jb25zdCBuPXt9O2kuZm9yRWFjaCgodD0+e2NvbnN0IGk9ZVt0XSxyPWkuX19leHBpcmVzO09iamVjdC5rZXlzKGkpLmZvckVhY2goKGU9PntcIl9fcHJpb3JpdHlcIj09PWV8fFwiX19leHBpcmVzXCI9PT1lfHxPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixlKXx8KG5bZV09ZVYoe3ZhbHVlOmlbZV19LHImJntleHBpcmVzOnJ9KSl9KSl9KSk7dHJ5eyFmdW5jdGlvbihlKXt0cnl7Y29uc3QgdD1EYXRlLm5vdygpO09iamVjdC5rZXlzKGUpLmZvckVhY2goKGk9Pntzd2l0Y2goaSl7Y2FzZVwiRU5BQkxFX0VWRU5UX1JFUE9SVFwiOmNhc2VcIlVQTE9BRF9MT0dcIjpjYXNlXCJFTkFCTEVfQUdfQURBUFRBVElPTlwiOmNhc2VcIkZPUkNFX0FHX0hJR0hfRlJBTUVSQVRFXCI6Y2FzZVwiRk9SQ0VfU1VQUE9SVF9BR19BREFQVEFUSU9OXCI6Y2FzZVwiRU5DT0RFUl9DT05GSUdfTElNSVRcIjpjYXNlXCJDQU1FUkFfQ0FQVFVSRV9DT05GSUdcIjpjYXNlXCJFTkFCTEVfUFJFTE9BRFwiOmlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh6QSxpKSl7Y29uc3R7dmFsdWU6bixleHBpcmVzOnJ9PWVbaV07aWYociYmcjw9dClyZXR1cm47UUFbaV09bix6QVtpXT1uLGZiLmRlYnVnKFwiVXBkYXRlIGdsb2JhbCBwYXJhbWV0ZXJzIGZyb20gY29uZmlnIGRpc3RyaWJ1dGVcIixpLG4pfX19KSl9Y2F0Y2godCl7ZmIuZXJyb3IoXCJFcnJvciB1cGRhdGUgY29uZmlnIGltbWVkaWF0ZWx5OiBcIi5jb25jYXQoZSksdC5tZXNzYWdlKX19KG4pO2NvbnN0IGU9SlNPTi5zdHJpbmdpZnkobiksdD13aW5kb3cuYnRvYShlKTt3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ3ZWJzZGtfbmdfZ2xvYmFsX3BhcmFtZXRlclwiLHQpLGZiLmRlYnVnKFwiQ2FjaGluZyBnbG9iYWwgcGFyYW1ldGVycyBcIi5jb25jYXQoZSkpfWNhdGNoKGUpe2ZiLmVycm9yKFwiRXJyb3IgY2FjaGluZyBnbG9iYWwgcGFyYW1ldGVyczpcIixlLm1lc3NhZ2UpfX19Y2xhc3MgaVYgZXh0ZW5kcyB4eXtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksRmcodGhpcyxcInJlc3VsdFN0b3JhZ2VcIixuZXcgTWFwKX1zZXRMb2NhbEF1ZGlvU3RhdHMoZSx0LGkpe3RoaXMucmVjb3JkKFwiQVVESU9fSU5QVVRfTEVWRUxfVE9PX0xPV1wiLGUsdGhpcy5jaGVja0F1ZGlvSW5wdXRMZXZlbChpLHQpKSx0aGlzLnJlY29yZChcIlNFTkRfQVVESU9fQklUUkFURV9UT09fTE9XXCIsZSx0aGlzLmNoZWNrU2VuZEF1ZGlvQml0cmF0ZShpLHQpKX1zZXRMb2NhbFZpZGVvU3RhdHMoZSx0LGkpe3RoaXMucmVjb3JkKFwiU0VORF9WSURFT19CSVRSQVRFX1RPT19MT1dcIixlLHRoaXMuY2hlY2tTZW5kVmlkZW9CaXRyYXRlKGksdCkpLHRoaXMucmVjb3JkKFwiRlJBTUVSQVRFX0lOUFVUX1RPT19MT1dcIixlLHRoaXMuY2hlY2tGcmFtZXJhdGVJbnB1dChpLHQpKSx0aGlzLnJlY29yZChcIkZSQU1FUkFURV9TRU5UX1RPT19MT1dcIixlLHRoaXMuY2hlY2tGcmFtZXJhdGVTZW50KGkpKX1zZXRSZW1vdGVBdWRpb1N0YXRzKGUsdCl7Y29uc3QgaT1lLmdldFVzZXJJZCgpO3RoaXMucmVjb3JkKFwiQVVESU9fT1VUUFVUX0xFVkVMX1RPT19MT1dcIixpLHRoaXMuY2hlY2tBdWRpb091dHB1dExldmVsKHQpKX1zZXRSZW1vdGVWaWRlb1N0YXRzKGUsdCl7Y29uc3QgaT1lLmdldFVzZXJJZCgpO3RoaXMucmVjb3JkKFwiUkVDVl9WSURFT19ERUNPREVfRkFJTEVEXCIsaSx0aGlzLmNoZWNrVmlkZW9EZWNvZGUodCkpfXJlY29yZChlLHQsaSl7aWYoWEEoXCJTVEFUU19VUERBVEVfSU5URVJWQUxcIik+NTAwKXJldHVybjt0aGlzLnJlc3VsdFN0b3JhZ2UuaGFzKGUpfHx0aGlzLnJlc3VsdFN0b3JhZ2Uuc2V0KGUse3Jlc3VsdDpbXSxpc1ByZXZOb3JtYWw6ITB9KTtjb25zdCBuPXRoaXMucmVzdWx0U3RvcmFnZS5nZXQoZSk7aWYobiYmKG4ucmVzdWx0LnB1c2goaSksbi5yZXN1bHQubGVuZ3RoPj01KSl7dmFyIHI7Y29uc3QgaT1EbihyPW4ucmVzdWx0KS5jYWxsKHIsITApO24uaXNQcmV2Tm9ybWFsJiYhaSYmdGhpcy5lbWl0KFwiZXhjZXB0aW9uXCIsblZbZV0sZSx0KSwhbi5pc1ByZXZOb3JtYWwmJmkmJnRoaXMuZW1pdChcImV4Y2VwdGlvblwiLG5WW2VdKzJlMyxlK1wiX1JFQ09WRVJcIix0KSxuLmlzUHJldk5vcm1hbD1pLG4ucmVzdWx0PVtdfX1jaGVja0F1ZGlvT3V0cHV0TGV2ZWwoZSl7cmV0dXJuIShlLnJlY2VpdmVCaXRyYXRlPjAmJjA9PT1lLnJlY2VpdmVMZXZlbCl9Y2hlY2tBdWRpb0lucHV0TGV2ZWwoZSx0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIFJNJiYhdC5pc0FjdGl2ZXx8KCEhdC5tdXRlZHx8MCE9PWUuc2VuZFZvbHVtZUxldmVsKX1jaGVja0ZyYW1lcmF0ZUlucHV0KGUsdCl7bGV0IGk9bnVsbDt0Ll9lbmNvZGVyQ29uZmlnJiZ0Ll9lbmNvZGVyQ29uZmlnLmZyYW1lUmF0ZSYmKGk9UU8odC5fZW5jb2RlckNvbmZpZy5mcmFtZVJhdGUpKTtjb25zdCBuPWUuY2FwdHVyZUZyYW1lUmF0ZTtyZXR1cm4haXx8IW58fCEoaT4xMCYmbjw1fHxpPDEwJiZpPj01JiZuPD0xKX1jaGVja0ZyYW1lcmF0ZVNlbnQoZSl7cmV0dXJuIShlLmNhcHR1cmVGcmFtZVJhdGUmJmUuc2VuZEZyYW1lUmF0ZSYmZS5jYXB0dXJlRnJhbWVSYXRlPjUmJmUuc2VuZEZyYW1lUmF0ZTw9MSl9Y2hlY2tTZW5kVmlkZW9CaXRyYXRlKGUsdCl7cmV0dXJuISF0Lm11dGVkfHwwIT09ZS5zZW5kQml0cmF0ZX1jaGVja1NlbmRBdWRpb0JpdHJhdGUoZSx0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIFJNJiYhdC5pc0FjdGl2ZXx8KCEhdC5tdXRlZHx8MCE9PWUuc2VuZEJpdHJhdGUpfWNoZWNrVmlkZW9EZWNvZGUoZSl7cmV0dXJuIDA9PT1lLnJlY2VpdmVCaXRyYXRlfHwwIT09ZS5kZWNvZGVGcmFtZVJhdGV9fWNvbnN0IG5WPXtGUkFNRVJBVEVfSU5QVVRfVE9PX0xPVzoxMDAxLEZSQU1FUkFURV9TRU5UX1RPT19MT1c6MTAwMixTRU5EX1ZJREVPX0JJVFJBVEVfVE9PX0xPVzoxMDAzLFJFQ1ZfVklERU9fREVDT0RFX0ZBSUxFRDoxMDA1LEFVRElPX0lOUFVUX0xFVkVMX1RPT19MT1c6MjAwMSxBVURJT19PVVRQVVRfTEVWRUxfVE9PX0xPVzoyMDAyLFNFTkRfQVVESU9fQklUUkFURV9UT09fTE9XOjIwMDN9O2NvbnN0IHJWPW5ldyBjbGFzc3ttYXJrU3Vic2NyaWJlU3RhcnQoZSx0KXtwZXJmb3JtYW5jZS5tYXJrKFwiYWdvcmEtd2ViLXNkay9cIi5jb25jYXQoZSxcIi9zdWJzY3JpYmUtXCIpLmNvbmNhdCh0KSl9bWFya1B1Ymxpc2hTdGFydChlLHQpe3BlcmZvcm1hbmNlLm1hcmsoXCJhZ29yYS13ZWItc2RrL1wiLmNvbmNhdChlLFwiL3B1Ymxpc2gtXCIpLmNvbmNhdCh0KSl9bWVhc3VyZUZyb21TdWJzY3JpYmVTdGFydChlLHQpe2NvbnN0IGk9cGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5TmFtZShcImFnb3JhLXdlYi1zZGsvXCIuY29uY2F0KGUsXCIvc3Vic2NyaWJlLVwiKS5jb25jYXQodCkpO2lmKGkubGVuZ3RoPjApe2NvbnN0IGU9aVtpLmxlbmd0aC0xXTtyZXR1cm4gTWF0aC5yb3VuZChwZXJmb3JtYW5jZS5ub3coKS1lLnN0YXJ0VGltZSl9cmV0dXJuIDB9bWVhc3VyZUZyb21QdWJsaXNoU3RhcnQoZSx0KXtjb25zdCBpPXBlcmZvcm1hbmNlLmdldEVudHJpZXNCeU5hbWUoXCJhZ29yYS13ZWItc2RrL1wiLmNvbmNhdChlLFwiL3B1Ymxpc2gtXCIpLmNvbmNhdCh0KSk7aWYoaS5sZW5ndGg+MCl7Y29uc3QgZT1pW2kubGVuZ3RoLTFdO3JldHVybiBNYXRoLnJvdW5kKHBlcmZvcm1hbmNlLm5vdygpLWUuc3RhcnRUaW1lKX1yZXR1cm4gMH19O3ZhciBvVj1pKGllLk9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpLHNWPXdpLGFWPXFpLmluZGV4T2YsY1Y9Qm4sZFY9dihbXS5pbmRleE9mKSxsVj0hIWRWJiYxL2RWKFsxXSwxLC0wKTwwO3NWKHt0YXJnZXQ6XCJBcnJheVwiLHByb3RvOiEwLGZvcmNlZDpsVnx8IWNWKFwiaW5kZXhPZlwiKX0se2luZGV4T2Y6ZnVuY3Rpb24oZSl7dmFyIHQ9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDA7cmV0dXJuIGxWP2RWKHRoaXMsZSx0KXx8MDphVih0aGlzLGUsdCl9fSk7dmFyIHVWPVhpKFwiQXJyYXlcIikuaW5kZXhPZixoVj1sLHBWPXVWLF9WPUFycmF5LnByb3RvdHlwZSxFVj1mdW5jdGlvbihlKXt2YXIgdD1lLmluZGV4T2Y7cmV0dXJuIGU9PT1fVnx8aFYoX1YsZSkmJnQ9PT1fVi5pbmRleE9mP3BWOnR9LGZWPWkoRVYpO2Z1bmN0aW9uIG1WKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgaSxuLHI9ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBpLG4scj17fSxvPVdiKGUpO2ZvcihuPTA7bjxvLmxlbmd0aDtuKyspaT1vW25dLGZWKHQpLmNhbGwodCxpKT49MHx8KHJbaV09ZVtpXSk7cmV0dXJuIHJ9KGUsdCk7aWYob1Ype3ZhciBvPW9WKGUpO2ZvcihuPTA7bjxvLmxlbmd0aDtuKyspaT1vW25dLGZWKHQpLmNhbGwodCxpKT49MHx8T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsaSkmJihyW2ldPWVbaV0pfXJldHVybiByfWZ1bmN0aW9uIFRWKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGUubWFwKChlPT5lKSk7aWYoIVNWKGUpKXJldHVybiBlO2NvbnN0IHQ9e307Zm9yKGNvbnN0IGkgaW4gZSl7Y29uc3Qgbj1lW2ldO1NWKG4pfHxBcnJheS5pc0FycmF5KG4pP3RbaV09VFYobik6dFtpXT1ufXJldHVybiB0fWZ1bmN0aW9uIFNWKGUpe3JldHVybiEoXCJvYmplY3RcIiE9dHlwZW9mIGV8fEFycmF5LmlzQXJyYXkoZSl8fCFlKX1jbGFzcyBnVntjb25zdHJ1Y3RvcihlKXtGZyh0aGlzLFwiaW5wdXRcIixbXSksRmcodGhpcyxcInNpemVcIix2b2lkIDApLHRoaXMuc2l6ZT1lfWFkZChlKXt0aGlzLmlucHV0LnB1c2goZSksdGhpcy5pbnB1dC5sZW5ndGg+dGhpcy5zaXplJiZ0aGlzLmlucHV0LnNwbGljZSgwLDEpfWRpZmZNZWFuKCl7cmV0dXJuIDA9PT10aGlzLmlucHV0Lmxlbmd0aD8wOih0aGlzLmlucHV0W3RoaXMuaW5wdXQubGVuZ3RoLTFdLXRoaXMuaW5wdXRbMF0pL3RoaXMuaW5wdXQubGVuZ3RofX1jb25zdCBSVj17YWRkcmVzczpcInVua25vd25cIixjYW5kaWRhdGVUeXBlOlwidW5rbm93blwiLGlkOlwidW5rbm93blwiLHBvcnQ6MCxwcmlvcml0eTowLHByb3RvY29sOlwidW5rbm93blwiLHR5cGU6XCJ1bmtub3duXCJ9LENWPXt0aW1lc3RhbXA6MCxiaXRyYXRlOnthY3R1YWxFbmNvZGVkOjAsdHJhbnNtaXQ6MH0sc2VuZFBhY2tldExvc3NSYXRlOjAscmVjdlBhY2tldExvc3NSYXRlOjAsdmlkZW9SZWN2OltdLHZpZGVvU2VuZDpbXSxhdWRpb1JlY3Y6W10sYXVkaW9TZW5kOltdLHNlbGVjdGVkQ2FuZGlkYXRlUGFpcjp7aWQ6XCJ1bmtub3duXCIsbG9jYWxDYW5kaWRhdGU6UlYscmVtb3RlQ2FuZGlkYXRlOlJWfX0sSVY9e2ZpcnNDb3VudDowLG5hY2tzQ291bnQ6MCxwbGlzQ291bnQ6MCxmcmFtZXNEZWNvZGVDb3VudDowLGZyYW1lc0RlY29kZUludGVydmFsOjAsZnJhbWVzRGVjb2RlRnJlZXplVGltZTowLGRlY29kZUZyYW1lUmF0ZTowLGJ5dGVzOjAscGFja2V0c0xvc3Q6MCxwYWNrZXRMb3N0UmF0ZTowLHBhY2tldHM6MCxzc3JjOjAscXBTdW1QZXJGcmFtZTowLGZyYW1lc0Ryb3BwZWRDb3VudDowLG91dHB1dEZyYW1lUmF0ZTowfSx2Vj17Zmlyc0NvdW50OjAsbmFja3NDb3VudDowLHBsaXNDb3VudDowLGZyYW1lQ291bnQ6MCxieXRlczowLHBhY2tldHM6MCxwYWNrZXRzTG9zdDowLHBhY2tldExvc3RSYXRlOjAsc3NyYzowLHJ0dE1zOjAsaml0dGVyTXM6MCxxcFN1bVBlckZyYW1lOjB9LHlWPXtieXRlczowLHBhY2tldHM6MCxwYWNrZXRzTG9zdDowLHBhY2tldExvc3RSYXRlOjAsc3NyYzowLHJ0dE1zOjAsaml0dGVyTXM6MH0sQVY9e2ppdHRlckJ1ZmZlck1zOjAsaml0dGVyTXM6MCxieXRlczowLHBhY2tldHNMb3N0OjAscGFja2V0TG9zdFJhdGU6MCxwYWNrZXRzRGlzY2FyZGVkOjAscGFja2V0czowLHNzcmM6MCxyZWNlaXZlZEZyYW1lczowLGRyb3BwZWRGcmFtZXM6MCxjb25jZWFsZWRTYW1wbGVzOjB9O2Z1bmN0aW9uIGJWKGUsdCl7dmFyIGk9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYobj1uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxpLnB1c2guYXBwbHkoaSxuKX1yZXR1cm4gaX1mdW5jdGlvbiB3VihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgaT1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj9iVihPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0ZnKGUsdCxpW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGkpKTpiVihPYmplY3QoaSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLHQpKX0pKX1yZXR1cm4gZX1jbGFzcyBPVntjb25zdHJ1Y3RvcihlLHQpe0ZnKHRoaXMsXCJvbkZpcnN0VmlkZW9SZWNlaXZlZFwiLHZvaWQgMCksRmcodGhpcyxcIm9uRmlyc3RWaWRlb0RlY29kZWRcIix2b2lkIDApLEZnKHRoaXMsXCJvbkZpcnN0QXVkaW9SZWNlaXZlZFwiLHZvaWQgMCksRmcodGhpcyxcIm9uRmlyc3RWaWRlb0RlY29kZWRUaW1lb3V0XCIsdm9pZCAwKSxGZyh0aGlzLFwib25GaXJzdEF1ZGlvRGVjb2RlZFwiLHZvaWQgMCksRmcodGhpcyxcIm9uU2VsZWN0ZWRMb2NhbENhbmRpZGF0ZUNoYW5nZWRcIix2b2lkIDApLEZnKHRoaXMsXCJvblNlbGVjdGVkUmVtb3RlQ2FuZGlkYXRlQ2hhbmdlZFwiLHZvaWQgMCksRmcodGhpcyxcInZpZGVvSXNSZWFkeVwiLCExKSxGZyh0aGlzLFwidmlkZW9Jc1JlYWR5MlwiLHt9KSxGZyh0aGlzLFwicGNcIix2b2lkIDApLEZnKHRoaXMsXCJvcHRpb25zXCIsdm9pZCAwKSxGZyh0aGlzLFwiaW50ZXJ2YWxUaW1lclwiLHZvaWQgMCksRmcodGhpcyxcInN0YXRzXCIsVFYoQ1YpKSxGZyh0aGlzLFwiaXNGaXJzdFZpZGVvUmVjZWl2ZWRcIix7fSksRmcodGhpcyxcImlzRmlyc3RWaWRlb0RlY29kZWRcIix7fSksRmcodGhpcyxcImlzRmlyc3RBdWRpb1JlY2VpdmVkXCIse30pLEZnKHRoaXMsXCJpc0ZpcnN0QXVkaW9EZWNvZGVkXCIse30pLEZnKHRoaXMsXCJpc0ZpcnN0VmlkZW9EZWNvZGVkVGltZW91dFwiLHt9KSxGZyh0aGlzLFwibG9zc1JhdGVXaW5kb3dTdGF0c1wiLFtdKSx0aGlzLnBjPWUsdGhpcy5vcHRpb25zPXQsdGhpcy5pbnRlcnZhbFRpbWVyPXdpbmRvdy5zZXRJbnRlcnZhbCgoYXN5bmMoKT0+e3RoaXMudXBkYXRlU3RhdHMoKX0pLHRoaXMub3B0aW9ucy51cGRhdGVJbnRlcnZhbCl9Z2V0U3RhdHMoKXtyZXR1cm4gdGhpcy5zdGF0c31nZXRTZWxlY3RlZENhbmRpZGF0ZVBhaXIoKXtyZXR1cm4gbmV3IEdoKChlPT57ZSh7bG9jYWw6d1Yoe30sUlYpLHJlbW90ZTp3Vih7fSxSVil9KX0pKX1zZXRWaWRlb0lzUmVhZHkoZSl7dGhpcy52aWRlb0lzUmVhZHk9ZX1zZXRWaWRlb0lzUmVhZHkyKGUsdCl7dGhpcy52aWRlb0lzUmVhZHkyW2VdPXR9Z2V0VmlkZW9Jc1JlYWR5KGUpe3JldHVybiB0aGlzLnZpZGVvSXNSZWFkeTJbZV18fCExfXNldElzRmlyc3RBdWRpb0RlY29kZWQoZSl7fWRlc3Ryb3koKXt3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsVGltZXIpLHRoaXMucGM9dm9pZCAwfWNhbGNMb3NzUmF0ZShlKXt0aGlzLmxvc3NSYXRlV2luZG93U3RhdHMucHVzaChlKSx0aGlzLmxvc3NSYXRlV2luZG93U3RhdHMubGVuZ3RoPnRoaXMub3B0aW9ucy5sb3NzUmF0ZUludGVydmFsJiZ0aGlzLmxvc3NSYXRlV2luZG93U3RhdHMuc3BsaWNlKDAsMSk7Y29uc3QgdD10aGlzLmxvc3NSYXRlV2luZG93U3RhdHMubGVuZ3RoLGk9W1widmlkZW9TZW5kXCIsXCJhdWRpb1NlbmRcIixcInZpZGVvUmVjdlwiLFwiYXVkaW9SZWN2XCJdO2xldCBuPTAscj0wLG89MCxzPTA7Zm9yKGNvbnN0IGEgb2YgaSllW2FdLmZvckVhY2goKChlLGkpPT57aWYoIXRoaXMubG9zc1JhdGVXaW5kb3dTdGF0c1t0LTFdW2FdW2ldfHwhdGhpcy5sb3NzUmF0ZVdpbmRvd1N0YXRzWzBdW2FdW2ldKXJldHVybjtjb25zdCBjPXRoaXMubG9zc1JhdGVXaW5kb3dTdGF0c1t0LTFdW2FdW2ldLnBhY2tldHMtdGhpcy5sb3NzUmF0ZVdpbmRvd1N0YXRzWzBdW2FdW2ldLnBhY2tldHMsZD10aGlzLmxvc3NSYXRlV2luZG93U3RhdHNbdC0xXVthXVtpXS5wYWNrZXRzTG9zdC10aGlzLmxvc3NSYXRlV2luZG93U3RhdHNbMF1bYV1baV0ucGFja2V0c0xvc3Q7XCJ2aWRlb1NlbmRcIj09PWF8fFwiYXVkaW9TZW5kXCI9PT1hPyhuKz1jLG8rPWQpOihyKz1jLHMrPWQpLE51bWJlci5pc05hTihjKXx8TnVtYmVyLmlzTmFOKGMpP2UucGFja2V0TG9zdFJhdGU9MDplLnBhY2tldExvc3RSYXRlPWM8PTB8fGQ8PTA/MDpkLyhjK2QpfSkpO2Uuc2VuZFBhY2tldExvc3NSYXRlPW48PTB8fG88PTA/MDpvLyhuK28pLGUucmVjdlBhY2tldExvc3NSYXRlPXI8PTB8fHM8PTA/MDpzLyhyK3MpfX1mdW5jdGlvbiBOVihlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gRFYoZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/TlYoT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6TlYoT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9Y2xhc3MgUFYgZXh0ZW5kcyBPVntjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksRmcodGhpcyxcIl9zdGF0c1wiLENWKSxGZyh0aGlzLFwibGFzdERlY29kZVZpZGVvUmVjZWl2ZXJTdGF0c1wiLG5ldyBNYXApfWFzeW5jIHVwZGF0ZVN0YXRzKCl7Y29uc3QgZT1hd2FpdCB0aGlzLl9nZXRTdGF0cygpLHQ9dGhpcy5zdGF0c1Jlc3BvbnNlc1RvT2JqZWN0cyhlKTt0aGlzLl9zdGF0cz1UVihDVik7Y29uc3QgaT10LmZpbHRlcigoZT0+XCJzc3JjXCI9PT1lLnR5cGUpKTt0aGlzLnByb2Nlc3NTU1JDU3RhdHMoaSk7Y29uc3Qgbj10LmZpbmQoKGU9PlwiVmlkZW9Cd2VcIj09PWUudHlwZSkpO24mJnRoaXMucHJvY2Vzc0JhbmR3aWR0aFN0YXRzKG4pLHRoaXMuX3N0YXRzLnRpbWVzdGFtcD1EYXRlLm5vdygpLHRoaXMuY2FsY0xvc3NSYXRlKHRoaXMuX3N0YXRzKSx0aGlzLnN0YXRzPXRoaXMuX3N0YXRzfXByb2Nlc3NCYW5kd2lkdGhTdGF0cyhlKXt0aGlzLl9zdGF0cy5iaXRyYXRlPXthY3R1YWxFbmNvZGVkOk51bWJlcihlLmdvb2dBY3R1YWxFbmNCaXRyYXRlKSx0YXJnZXRFbmNvZGVkOk51bWJlcihlLmdvb2dUYXJnZXRFbmNCaXRyYXRlKSxyZXRyYW5zbWl0Ok51bWJlcihlLmdvb2dSZXRyYW5zbWl0Qml0cmF0ZSksdHJhbnNtaXQ6TnVtYmVyKGUuZ29vZ1RyYW5zbWl0Qml0cmF0ZSl9LHRoaXMuX3N0YXRzLnNlbmRCYW5kd2lkdGg9TnVtYmVyKGUuZ29vZ0F2YWlsYWJsZVNlbmRCYW5kd2lkdGgpfXByb2Nlc3NTU1JDU3RhdHMoZSl7ZS5mb3JFYWNoKChlPT57dmFyIHQ7Y29uc3QgaT1Ebih0PWUuaWQpLmNhbGwodCxcInNlbmRcIik7c3dpdGNoKFwiXCIuY29uY2F0KGUubWVkaWFUeXBlLFwiX1wiKS5jb25jYXQoaT9cInNlbmRcIjpcInJlY3ZcIikpe2Nhc2VcInZpZGVvX3NlbmRcIjp7Y29uc3QgdD1UVih2Vik7dC5jb2RlYz1lLmdvb2dDb2RlY05hbWUsdC5hZGFwdGlvbkNoYW5nZVJlYXNvbj1cIm5vbmVcIixlLmdvb2dDcHVMaW1pdGVkUmVzb2x1dGlvbiYmKHQuYWRhcHRpb25DaGFuZ2VSZWFzb249XCJjcHVcIiksZS5nb29nQmFuZHdpZHRoTGltaXRlZFJlc29sdXRpb24mJih0LmFkYXB0aW9uQ2hhbmdlUmVhc29uPVwiYmFuZHdpZHRoXCIpLHQuYXZnRW5jb2RlTXM9TnVtYmVyKGUuZ29vZ0F2Z0VuY29kZU1zKSx0LmlucHV0RnJhbWU9e3dpZHRoOk51bWJlcihlLmdvb2dGcmFtZVdpZHRoSW5wdXQpfHxOdW1iZXIoZS5nb29nRnJhbWVXaWR0aFNlbnQpLGhlaWdodDpOdW1iZXIoZS5nb29nRnJhbWVIZWlnaHRJbnB1dCl8fE51bWJlcihlLmdvb2dGcmFtZUhlaWdodFNlbnQpLGZyYW1lUmF0ZTpOdW1iZXIoZS5nb29nRnJhbWVSYXRlSW5wdXQpfSx0LnNlbnRGcmFtZT17d2lkdGg6TnVtYmVyKGUuZ29vZ0ZyYW1lV2lkdGhTZW50KSxoZWlnaHQ6TnVtYmVyKGUuZ29vZ0ZyYW1lSGVpZ2h0U2VudCksZnJhbWVSYXRlOk51bWJlcihlLmdvb2dGcmFtZVJhdGVJbnB1dCl9LHQuZmlyc0NvdW50PU51bWJlcihlLmdvb2dGaXJSZWNlaXZlZCksdC5uYWNrc0NvdW50PU51bWJlcihlLmdvb2dOYWNrc1JlY2VpdmVkKSx0LnBsaXNDb3VudD1OdW1iZXIoZS5nb29nUGxpc1JlY2VpdmVkKSx0LmZyYW1lQ291bnQ9TnVtYmVyKGUuZnJhbWVzRW5jb2RlZCksdC5ieXRlcz1OdW1iZXIoZS5ieXRlc1NlbnQpLHQucGFja2V0cz1OdW1iZXIoZS5wYWNrZXRzU2VudCksdC5wYWNrZXRzTG9zdD1OdW1iZXIoZS5wYWNrZXRzTG9zdCksdC5zc3JjPU51bWJlcihlLnNzcmMpLHQucnR0TXM9TnVtYmVyKGUuZ29vZ1J0dHx8MCksdGhpcy5fc3RhdHMudmlkZW9TZW5kLnB1c2godCksdGhpcy5fc3RhdHMucnR0PXQucnR0TXM7YnJlYWt9Y2FzZVwidmlkZW9fcmVjdlwiOntjb25zdCB0PVRWKElWKSxpPXRoaXMubGFzdERlY29kZVZpZGVvUmVjZWl2ZXJTdGF0cy5nZXQoTnVtYmVyKGUuc3NyYykpO2lmKHQuY29kZWM9ZS5nb29nQ29kZWNOYW1lLHQudGFyZ2V0RGVsYXlNcz1OdW1iZXIoZS5nb29nVGFyZ2V0RGVsYXlNcyksdC5yZW5kZXJEZWxheU1zPU51bWJlcihlLmdvb2dSZW5kZXJEZWxheU1zKSx0LmN1cnJlbnREZWxheU1zPU51bWJlcihlLmdvb2dDdXJyZW50RGVsYXlNcyksdC5taW5QbGF5b3V0RGVsYXlNcz1OdW1iZXIoZS5nb29nTWluUGxheW91dERlbGF5TXMpLHQuZGVjb2RlTXM9TnVtYmVyKGUuZ29vZ0RlY29kZU1zKSx0Lm1heERlY29kZU1zPU51bWJlcihlLmdvb2dNYXhEZWNvZGVNcyksdC5yZWNlaXZlZEZyYW1lPXt3aWR0aDpOdW1iZXIoZS5nb29nRnJhbWVXaWR0aFJlY2VpdmVkKSxoZWlnaHQ6TnVtYmVyKGUuZ29vZ0ZyYW1lSGVpZ2h0UmVjZWl2ZWQpLGZyYW1lUmF0ZTpOdW1iZXIoZS5nb29nRnJhbWVSYXRlUmVjZWl2ZWQpfSx0LmRlY29kZWRGcmFtZT17d2lkdGg6TnVtYmVyKGUuZ29vZ0ZyYW1lV2lkdGhSZWNlaXZlZCksaGVpZ2h0Ok51bWJlcihlLmdvb2dGcmFtZUhlaWdodFJlY2VpdmVkKSxmcmFtZVJhdGU6TnVtYmVyKGUuZ29vZ0ZyYW1lUmF0ZURlY29kZWQpfSx0LmRlY29kZUZyYW1lUmF0ZT1OdW1iZXIoZS5nb29nRnJhbWVSYXRlRGVjb2RlZCksdC5vdXRwdXRGcmFtZT17d2lkdGg6TnVtYmVyKGUuZ29vZ0ZyYW1lV2lkdGhSZWNlaXZlZCksaGVpZ2h0Ok51bWJlcihlLmdvb2dGcmFtZUhlaWdodFJlY2VpdmVkKSxmcmFtZVJhdGU6TnVtYmVyKGUuZ29vZ0ZyYW1lUmF0ZU91dHB1dCl9LHQuaml0dGVyQnVmZmVyTXM9TnVtYmVyKGUuZ29vZ0ppdHRlckJ1ZmZlck1zKSx0LmZpcnNDb3VudD1OdW1iZXIoZS5nb29nRmlyc1NlbnQpLHQubmFja3NDb3VudD1OdW1iZXIoZS5nb29nTmFja3NTZW50KSx0LnBsaXNDb3VudD1OdW1iZXIoZS5nb29nUGxpc1NlbnQpLHQuZnJhbWVzRGVjb2RlQ291bnQ9TnVtYmVyKGUuZnJhbWVzRGVjb2RlZCksdC5ieXRlcz1OdW1iZXIoZS5ieXRlc1JlY2VpdmVkKSx0LnBhY2tldHM9TnVtYmVyKGUucGFja2V0c1JlY2VpdmVkKSx0LnBhY2tldHNMb3N0PU51bWJlcihlLnBhY2tldHNMb3N0KSx0LnNzcmM9TnVtYmVyKGUuc3NyYyksdC5wYWNrZXRzPjAmJiF0aGlzLmlzRmlyc3RWaWRlb1JlY2VpdmVkW3Quc3NyY10mJih0aGlzLm9uRmlyc3RWaWRlb1JlY2VpdmVkJiZ0aGlzLm9uRmlyc3RWaWRlb1JlY2VpdmVkKHQuc3NyYyksdGhpcy5pc0ZpcnN0VmlkZW9SZWNlaXZlZFt0LnNzcmNdPSEwKSx0LmZyYW1lc0RlY29kZUNvdW50PjAmJiF0aGlzLmlzRmlyc3RWaWRlb0RlY29kZWRbdC5zc3JjXSYmKHRoaXMub25GaXJzdFZpZGVvRGVjb2RlZCYmdGhpcy5vbkZpcnN0VmlkZW9EZWNvZGVkKHQuc3NyYyx0LmRlY29kZWRGcmFtZS53aWR0aCx0LmRlY29kZWRGcmFtZS5oZWlnaHQpLHRoaXMuaXNGaXJzdFZpZGVvRGVjb2RlZFt0LnNzcmNdPSEwKSxpKXtjb25zdCBuPWkuc3RhdHMscj1EYXRlLm5vdygpLWkubHRzO3QuZnJhbWVzRGVjb2RlRnJlZXplVGltZT1uLmZyYW1lc0RlY29kZUZyZWV6ZVRpbWUsdC5mcmFtZXNEZWNvZGVJbnRlcnZhbD1uLmZyYW1lc0RlY29kZUludGVydmFsLHQuZnJhbWVzRGVjb2RlQ291bnQ+bi5mcmFtZXNEZWNvZGVDb3VudCYmdGhpcy5pc0ZpcnN0VmlkZW9EZWNvZGVkW3Quc3NyY10/KGkubHRzPURhdGUubm93KCksdC5mcmFtZXNEZWNvZGVJbnRlcnZhbD1yLHQuZnJhbWVzRGVjb2RlSW50ZXJ2YWw+PXRoaXMub3B0aW9ucy5mcmVlemVSYXRlTGltaXQmJih0aGlzLmdldFZpZGVvSXNSZWFkeShwYXJzZUludChlLnNzcmMsMTApKT90LmZyYW1lc0RlY29kZUZyZWV6ZVRpbWUrPXQuZnJhbWVzRGVjb2RlSW50ZXJ2YWw6dGhpcy5zZXRWaWRlb0lzUmVhZHkyKHBhcnNlSW50KGUuc3NyYywxMCksITApKSk6dC5mcmFtZXNEZWNvZGVDb3VudDxpLnN0YXRzLmZyYW1lc0RlY29kZUNvdW50JiYodC5mcmFtZXNEZWNvZGVJbnRlcnZhbD0wKX10aGlzLmxhc3REZWNvZGVWaWRlb1JlY2VpdmVyU3RhdHMuc2V0KHQuc3NyYyx7c3RhdHM6RFYoe30sdCksbHRzOkRhdGUubm93KCl9KSx0aGlzLl9zdGF0cy52aWRlb1JlY3YucHVzaCh0KTticmVha31jYXNlXCJhdWRpb19yZWN2XCI6e2NvbnN0IHQ9VFYoQVYpO3QuY29kZWM9ZS5nb29nQ29kZWNOYW1lLHQub3V0cHV0TGV2ZWw9TWF0aC5hYnMoTnVtYmVyKGUuYXVkaW9PdXRwdXRMZXZlbCkpLzMyNzY3LHQuZGVjb2RpbmdDTkc9TnVtYmVyKGUuZ29vZ0RlY29kaW5nQ05HKSx0LmRlY29kaW5nQ1ROPU51bWJlcihlLmdvb2dEZWNvZGluZ0NUTiksdC5kZWNvZGluZ0NUU0c9TnVtYmVyKGUuZ29vZ0RlY29kaW5nQ1RTRyksdC5kZWNvZGluZ05vcm1hbD1OdW1iZXIoZS5nb29nRGVjb2RpbmdOb3JtYWwpLHQuZGVjb2RpbmdQTEM9TnVtYmVyKGUuZ29vZ0RlY29kaW5nUExDKSx0LmRlY29kaW5nUExDQ05HPU51bWJlcihlLmdvb2dEZWNvZGluZ1BMQ0NORyksdC5leHBhbmRSYXRlPU51bWJlcihlLmdvb2dFeHBhbmRSYXRlKSx0LmFjY2VsZXJhdGVSYXRlPU51bWJlcihlLmdvb2dBY2NlbGVyYXRlUmF0ZSksdC5wcmVlbXB0aXZlRXhwYW5kUmF0ZT1OdW1iZXIoZS5nb29nUHJlZW1wdGl2ZUV4cGFuZFJhdGUpLHQuc2Vjb25kYXJ5RGVjb2RlZFJhdGU9TnVtYmVyKGUuZ29vZ1NlY29uZGFyeURlY29kZWRSYXRlKSx0LnNwZWVjaEV4cGFuZFJhdGU9TnVtYmVyKGUuZ29vZ1NwZWVjaEV4cGFuZFJhdGUpLHQucHJlZmVycmVkSml0dGVyQnVmZmVyTXM9TnVtYmVyKGUuZ29vZ1ByZWZlcnJlZEppdHRlckJ1ZmZlck1zKSx0LmppdHRlckJ1ZmZlck1zPU51bWJlcihlLmdvb2dKaXR0ZXJCdWZmZXJNcyksdC5qaXR0ZXJNcz1OdW1iZXIoZS5nb29nSml0dGVyUmVjZWl2ZWQpLHQuYnl0ZXM9TnVtYmVyKGUuYnl0ZXNSZWNlaXZlZCksdC5wYWNrZXRzPU51bWJlcihlLnBhY2tldHNSZWNlaXZlZCksdC5wYWNrZXRzTG9zdD1OdW1iZXIoZS5wYWNrZXRzTG9zdCksdC5zc3JjPU51bWJlcihlLnNzcmMpLHQucmVjZWl2ZWRGcmFtZXM9TnVtYmVyKGUuZ29vZ0RlY29kaW5nQ1ROKXx8TnVtYmVyKGUucGFja2V0c1JlY2VpdmVkKSx0LmRyb3BwZWRGcmFtZXM9TnVtYmVyKGUuZ29vZ0RlY29kaW5nUExDKStOdW1iZXIoZS5nb29nRGVjb2RpbmdQTENDTkcpfHxOdW1iZXIoZS5wYWNrZXRzTG9zdCksdC5yZWNlaXZlZEZyYW1lcz4wJiYhdGhpcy5pc0ZpcnN0QXVkaW9SZWNlaXZlZFt0LnNzcmNdJiYodGhpcy5vbkZpcnN0QXVkaW9SZWNlaXZlZCYmdGhpcy5vbkZpcnN0QXVkaW9SZWNlaXZlZCh0LnNzcmMpLHRoaXMuaXNGaXJzdEF1ZGlvUmVjZWl2ZWRbdC5zc3JjXT0hMCksdC5kZWNvZGluZ05vcm1hbD4wJiYhdGhpcy5pc0ZpcnN0QXVkaW9EZWNvZGVkW3Quc3NyY10mJih0aGlzLm9uRmlyc3RBdWRpb0RlY29kZWQmJnRoaXMub25GaXJzdEF1ZGlvRGVjb2RlZCh0LnNzcmMpLHRoaXMuaXNGaXJzdEF1ZGlvRGVjb2RlZFt0LnNzcmNdPSEwKSx0aGlzLl9zdGF0cy5hdWRpb1JlY3YucHVzaCh0KTticmVha31jYXNlXCJhdWRpb19zZW5kXCI6e2NvbnN0IHQ9VFYoeVYpO3QuY29kZWM9ZS5nb29nQ29kZWNOYW1lLHQuaW5wdXRMZXZlbD1NYXRoLmFicyhOdW1iZXIoZS5hdWRpb0lucHV0TGV2ZWwpKS8zMjc2Nyx0LmFlY1JldHVybkxvc3M9TnVtYmVyKGUuZ29vZ0VjaG9DYW5jZWxsYXRpb25SZXR1cm5Mb3NzfHwwKSx0LmFlY1JldHVybkxvc3NFbmhhbmNlbWVudD1OdW1iZXIoZS5nb29nRWNob0NhbmNlbGxhdGlvblJldHVybkxvc3NFbmhhbmNlbWVudHx8MCksdC5yZXNpZHVhbEVjaG9MaWtlbGlob29kPU51bWJlcihlLmdvb2dSZXNpZHVhbEVjaG9MaWtlbGlob29kfHwwKSx0LnJlc2lkdWFsRWNob0xpa2VsaWhvb2RSZWNlbnRNYXg9TnVtYmVyKGUuZ29vZ1Jlc2lkdWFsRWNob0xpa2VsaWhvb2RSZWNlbnRNYXh8fDApLHQuYnl0ZXM9TnVtYmVyKGUuYnl0ZXNTZW50KSx0LnBhY2tldHM9TnVtYmVyKGUucGFja2V0c1NlbnQpLHQucGFja2V0c0xvc3Q9TnVtYmVyKGUucGFja2V0c0xvc3QpLHQuc3NyYz1OdW1iZXIoZS5zc3JjKSx0LnJ0dE1zPU51bWJlcihlLmdvb2dSdHR8fDApLHRoaXMuX3N0YXRzLnJ0dD10LnJ0dE1zLHRoaXMuX3N0YXRzLmF1ZGlvU2VuZC5wdXNoKHQpO2JyZWFrfX19KSl9X2dldFN0YXRzKCl7cmV0dXJuIG5ldyBHaCgoKGUsdCk9Pnt0aGlzLnBjLmdldFN0YXRzKGUsdCl9KSl9c3RhdHNSZXNwb25zZXNUb09iamVjdHMoZSl7Y29uc3QgdD1bXTtyZXR1cm4gZS5yZXN1bHQoKS5mb3JFYWNoKChlPT57Y29uc3QgaT17aWQ6ZS5pZCx0aW1lc3RhbXA6ZS50aW1lc3RhbXAudmFsdWVPZigpLnRvU3RyaW5nKCksdHlwZTplLnR5cGV9O2UubmFtZXMoKS5mb3JFYWNoKCh0PT57aVt0XT1lLnN0YXQodCl9KSksdC5wdXNoKGkpfSkpLHR9fWZ1bmN0aW9uIExWKGUsdCl7dmFyIGk9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYobj1uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxpLnB1c2guYXBwbHkoaSxuKX1yZXR1cm4gaX1mdW5jdGlvbiBrVihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgaT1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj9MVihPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0ZnKGUsdCxpW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGkpKTpMVihPYmplY3QoaSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLHQpKX0pKX1yZXR1cm4gZX1jbGFzcyBNViBleHRlbmRzIE9We2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSxGZyh0aGlzLFwiX3N0YXRzXCIsQ1YpLEZnKHRoaXMsXCJyZXBvcnRcIix2b2lkIDApLEZnKHRoaXMsXCJsYXN0RGVjb2RlVmlkZW9SZWNlaXZlclN0YXRzXCIsbmV3IE1hcCksRmcodGhpcyxcImxhc3RWaWRlb0ZyYW1lc1JlY3ZcIixuZXcgTWFwKSxGZyh0aGlzLFwibGFzdFZpZGVvRnJhbWVzU2VudFwiLG5ldyBNYXApLEZnKHRoaXMsXCJsYXN0VmlkZW9GcmFtZXNEZWNvZGVcIixuZXcgTWFwKSxGZyh0aGlzLFwibGFzdFZpZGVvRnJhbWVzT3V0cHV0XCIsbmV3IE1hcCksRmcodGhpcyxcImxhc3RWaWRlb0pCRGVsYXlcIixuZXcgTWFwKSxGZyh0aGlzLFwibGFzdEF1ZGlvSkJEZWxheVwiLG5ldyBNYXApLEZnKHRoaXMsXCJtZWRpYUJ5dGVzU2VudFwiLG5ldyBNYXApLEZnKHRoaXMsXCJtZWRpYUJ5dGVzUmV0cmFuc21pdFwiLG5ldyBNYXApLEZnKHRoaXMsXCJtZWRpYUJ5dGVzVGFyZ2V0RW5jb2RlXCIsbmV3IE1hcCksRmcodGhpcyxcImxhc3RFbmNvZGVyTXNcIixuZXcgTWFwKX1hc3luYyB1cGRhdGVTdGF0cygpe3RoaXMucmVwb3J0PWF3YWl0IHRoaXMucGMuZ2V0U3RhdHMoKSx0aGlzLl9zdGF0cz1UVihDViksdGhpcy5yZXBvcnQuZm9yRWFjaCgoZT0+e3N3aXRjaChlLnR5cGUpe2Nhc2UgdncuT1VUQk9VTkQ6Y2FzZSB2dy5JTkJPVU5EOntjb25zdCB0PWUubWVkaWFUeXBlfHxlLmtpbmQsaT0hdCYmXCJmcmFtZVdpZHRoXCJpbiBlLG49IXQmJiEoXCJmcmFtZVdpZHRoXCJpbiBlKTtlLnR5cGU9PT12dy5PVVRCT1VORD9cImF1ZGlvXCI9PT10fHxuP3RoaXMucHJvY2Vzc0F1ZGlvT3V0Ym91bmRTdGF0cyhlKTooXCJ2aWRlb1wiPT09dHx8aSkmJnRoaXMucHJvY2Vzc1ZpZGVvT3V0Ym91bmRTdGF0cyhlKTplLnR5cGU9PT12dy5JTkJPVU5EJiYoXCJhdWRpb1wiPT09dHx8bj90aGlzLnByb2Nlc3NBdWRpb0luYm91bmRTdGF0cyhlKTooXCJ2aWRlb1wiPT09dHx8aSkmJnRoaXMucHJvY2Vzc1ZpZGVvSW5ib3VuZFN0YXRzKGUpKTticmVha31jYXNlIHZ3LlRSQU5TUE9SVDp7Y29uc3QgdD10aGlzLnJlcG9ydC5nZXQoZS5zZWxlY3RlZENhbmRpZGF0ZVBhaXJJZCk7dCYmdGhpcy5wcm9jZXNzQ2FuZGlkYXRlUGFpclN0YXRzKHQpO2JyZWFrfWNhc2UgdncuQ0FORElEQVRFX1BBSVI6ZS5zZWxlY3RlZCYmdGhpcy5wcm9jZXNzQ2FuZGlkYXRlUGFpclN0YXRzKGUpfX0pKSx0aGlzLnVwZGF0ZVNlbmRCaXRyYXRlKCksdGhpcy5fc3RhdHMudGltZXN0YW1wPURhdGUubm93KCksdGhpcy5jYWxjTG9zc1JhdGUodGhpcy5fc3RhdHMpLHRoaXMuc3RhdHM9dGhpcy5fc3RhdHN9YXN5bmMgZ2V0U2VsZWN0ZWRDYW5kaWRhdGVQYWlyKCl7Y29uc3QgZT1hd2FpdCB0aGlzLnBjLmdldFN0YXRzKCksdD17bG9jYWw6a1Yoe30sUlYpLHJlbW90ZTprVih7fSxSVil9O3JldHVybiBlLmZvckVhY2goKGk9PntsZXQgbjtpZihpLnR5cGU9PT12dy5UUkFOU1BPUlQmJihuPWUuZ2V0KGkuc2VsZWN0ZWRDYW5kaWRhdGVQYWlySWQpKSxpLnR5cGU9PT12dy5DQU5ESURBVEVfUEFJUiYmaS5zZWxlY3RlZCYmKG49aSksbil7Y29uc3QgaT0oZSx0KT0+e2UudHlwZT10LnR5cGUsZS5pZD10LmlkLHQuYWRkcmVzcyYmKGUuYWRkcmVzcz10LmFkZHJlc3MpLHQuY2FuZGlkYXRlVHlwZSYmKGUuY2FuZGlkYXRlVHlwZT10LmNhbmRpZGF0ZVR5cGUpLHQucG9ydCYmKGUucG9ydD10LnBvcnQpLHQucHJpb3JpdHkmJihlLnByaW9yaXR5PXQucHJpb3JpdHkpLHQucHJvdG9jb2wmJihlLnByb3RvY29sPXQucHJvdG9jb2wpLHQucmVsYXlQcm90b2NvbCYmKGUucmVsYXlQcm90b2NvbD10LnJlbGF5UHJvdG9jb2wpfTtpZihuLmxvY2FsQ2FuZGlkYXRlSWQpe2NvbnN0IHI9ZS5nZXQobi5sb2NhbENhbmRpZGF0ZUlkKTtyJiZpKHQubG9jYWwscil9aWYobi5yZW1vdGVDYW5kaWRhdGVJZCl7Y29uc3Qgcj1lLmdldChuLnJlbW90ZUNhbmRpZGF0ZUlkKTtyJiZpKHQucmVtb3RlLHIpfX19KSksdH1wcm9jZXNzQ2FuZGlkYXRlUGFpclN0YXRzKGUpe2lmKHRoaXMuX3N0YXRzLnNlbmRCYW5kd2lkdGg9ZS5hdmFpbGFibGVPdXRnb2luZ0JpdHJhdGV8fDAsZS5jdXJyZW50Um91bmRUcmlwVGltZSYmKHRoaXMuX3N0YXRzLnJ0dD0xZTMqZS5jdXJyZW50Um91bmRUcmlwVGltZSksdGhpcy5fc3RhdHMudmlkZW9TZW5kLmZvckVhY2goKHQ9PntlLmN1cnJlbnRSb3VuZFRyaXBUaW1lJiYodC5ydHRNcz0xZTMqZS5jdXJyZW50Um91bmRUcmlwVGltZSl9KSksdGhpcy5fc3RhdHMuYXVkaW9TZW5kLmZvckVhY2goKHQ9PntlLmN1cnJlbnRSb3VuZFRyaXBUaW1lJiYodC5ydHRNcz0xZTMqZS5jdXJyZW50Um91bmRUcmlwVGltZSl9KSksdGhpcy5fc3RhdHMuc2VsZWN0ZWRDYW5kaWRhdGVQYWlyLmlkPWUuaWQsZS5sb2NhbENhbmRpZGF0ZUlkKXtjb25zdCB0PXRoaXMucmVwb3J0LmdldChlLmxvY2FsQ2FuZGlkYXRlSWQpO3QmJnRoaXMucHJvY2Vzc0NhbmRpZGF0ZVN0YXRzKHQpfWlmKGUucmVtb3RlQ2FuZGlkYXRlSWQpe2NvbnN0IHQ9dGhpcy5yZXBvcnQuZ2V0KGUucmVtb3RlQ2FuZGlkYXRlSWQpO3QmJnRoaXMucHJvY2Vzc0NhbmRpZGF0ZVN0YXRzKHQpfX1wcm9jZXNzQ2FuZGlkYXRlU3RhdHMoZSl7bGV0IHQ7ZS50eXBlPT09dncuTE9DQUxfQ0FORElEQVRFJiYodD10aGlzLl9zdGF0cy5zZWxlY3RlZENhbmRpZGF0ZVBhaXIubG9jYWxDYW5kaWRhdGUpLGUudHlwZT09PXZ3LlJFTU9URV9DQU5ESURBVEUmJih0PXRoaXMuX3N0YXRzLnNlbGVjdGVkQ2FuZGlkYXRlUGFpci5yZW1vdGVDYW5kaWRhdGUpLHQmJih0LnR5cGU9ZS50eXBlLHQuaWQ9ZS5pZCxlLmFkZHJlc3MmJih0LmFkZHJlc3M9ZS5hZGRyZXNzKSxlLmNhbmRpZGF0ZVR5cGUmJih0LmNhbmRpZGF0ZVR5cGU9ZS5jYW5kaWRhdGVUeXBlKSxlLnBvcnQmJih0LnBvcnQ9ZS5wb3J0KSxlLnByaW9yaXR5JiYodC5wcmlvcml0eT1lLnByaW9yaXR5KSxlLnByb3RvY29sJiYodC5wcm90b2NvbD1lLnByb3RvY29sKSxlLnJlbGF5UHJvdG9jb2wmJih0LnJlbGF5UHJvdG9jb2w9ZS5yZWxheVByb3RvY29sKSxlLnR5cGU9PT12dy5MT0NBTF9DQU5ESURBVEUmJnRoaXMuc3RhdHMuc2VsZWN0ZWRDYW5kaWRhdGVQYWlyLmxvY2FsQ2FuZGlkYXRlLmlkIT09dC5pZCYmdGhpcy5vblNlbGVjdGVkTG9jYWxDYW5kaWRhdGVDaGFuZ2VkJiZ0aGlzLm9uU2VsZWN0ZWRMb2NhbENhbmRpZGF0ZUNoYW5nZWQoa1Yoe30sdCksa1Yoe30sdGhpcy5zdGF0cy5zZWxlY3RlZENhbmRpZGF0ZVBhaXIubG9jYWxDYW5kaWRhdGUpKSxlLnR5cGU9PT12dy5SRU1PVEVfQ0FORElEQVRFJiZ0aGlzLnN0YXRzLnNlbGVjdGVkQ2FuZGlkYXRlUGFpci5yZW1vdGVDYW5kaWRhdGUuaWQhPT10LmlkJiZ0aGlzLm9uU2VsZWN0ZWRSZW1vdGVDYW5kaWRhdGVDaGFuZ2VkJiZ0aGlzLm9uU2VsZWN0ZWRSZW1vdGVDYW5kaWRhdGVDaGFuZ2VkKGtWKHt9LHQpLGtWKHt9LHRoaXMuc3RhdHMuc2VsZWN0ZWRDYW5kaWRhdGVQYWlyLnJlbW90ZUNhbmRpZGF0ZSkpKX1wcm9jZXNzQXVkaW9JbmJvdW5kU3RhdHMoZSl7bGV0IHQ9dGhpcy5fc3RhdHMuYXVkaW9SZWN2LmZpbmQoKHQ9PnQuc3NyYz09PWUuc3NyYykpO3R8fCh0PVRWKEFWKSx0aGlzLl9zdGF0cy5hdWRpb1JlY3YucHVzaCh0KSksdC5zc3JjPWUuc3NyYyx0LnBhY2tldHM9ZS5wYWNrZXRzUmVjZWl2ZWQsdC5wYWNrZXRzTG9zdD1lLnBhY2tldHNMb3N0LHQucGFja2V0c0Rpc2NhcmRlZD1lLnBhY2tldHNEaXNjYXJkZWQsdC5ieXRlcz1lLmJ5dGVzUmVjZWl2ZWQsdC5qaXR0ZXJNcz0xZTMqZS5qaXR0ZXIsdGhpcy5wcm9jZXNzQXVkaW9UcmFja1JlY2VpdmVyU3RhdHMoZSxlLnRyYWNrSWQsdCksZS5jb2RlY0lkJiYodC5jb2RlYz10aGlzLmdldENvZGVjRnJvbUNvZGVjU3RhdHMoZS5jb2RlY0lkKSksdC5yZWNlaXZlZEZyYW1lc3x8KHQucmVjZWl2ZWRGcmFtZXM9ZS5wYWNrZXRzUmVjZWl2ZWQpLHQuZHJvcHBlZEZyYW1lc3x8KHQuZHJvcHBlZEZyYW1lcz1lLnBhY2tldHNMb3N0KSx0LnJlY2VpdmVkRnJhbWVzPjAmJiF0aGlzLmlzRmlyc3RBdWRpb1JlY2VpdmVkW3Quc3NyY10mJih0aGlzLm9uRmlyc3RBdWRpb1JlY2VpdmVkJiZ0aGlzLm9uRmlyc3RBdWRpb1JlY2VpdmVkKHQuc3NyYyksdGhpcy5pc0ZpcnN0QXVkaW9SZWNlaXZlZFt0LnNzcmNdPSEwKSx0Lm91dHB1dExldmVsJiZ0Lm91dHB1dExldmVsPjAmJiF0aGlzLmlzRmlyc3RBdWRpb0RlY29kZWRbdC5zc3JjXSYmKHRoaXMub25GaXJzdEF1ZGlvRGVjb2RlZCYmdGhpcy5vbkZpcnN0QXVkaW9EZWNvZGVkKHQuc3NyYyksdGhpcy5pc0ZpcnN0QXVkaW9EZWNvZGVkW3Quc3NyY109ITApLFwibnVtYmVyXCI9PXR5cGVvZiBlLmNvbmNlYWxlZFNhbXBsZXMmJih0LmNvbmNlYWxlZFNhbXBsZXM9ZS5jb25jZWFsZWRTYW1wbGVzKX1wcm9jZXNzVmlkZW9JbmJvdW5kU3RhdHMoZSl7bGV0IHQ9dGhpcy5fc3RhdHMudmlkZW9SZWN2LmZpbmQoKHQ9PnQuc3NyYz09PWUuc3NyYykpO3R8fCh0PVRWKElWKSx0aGlzLl9zdGF0cy52aWRlb1JlY3YucHVzaCh0KSksdC5zc3JjPWUuc3NyYyx0LnBhY2tldHM9ZS5wYWNrZXRzUmVjZWl2ZWQsdC5wYWNrZXRzTG9zdD1lLnBhY2tldHNMb3N0LHQuYnl0ZXM9ZS5ieXRlc1JlY2VpdmVkLHQuZmlyc0NvdW50PWUuZmlyQ291bnQsdC5uYWNrc0NvdW50PWUubmFja0NvdW50LHQucGxpc0NvdW50PWUucGxpQ291bnQsdC5mcmFtZXNEZWNvZGVDb3VudD1lLmZyYW1lc0RlY29kZWQsdC5mcmFtZXNEcm9wcGVkQ291bnQ9ZS5mcmFtZXNEcm9wcGVkLHQudG90YWxJbnRlckZyYW1lRGVsYXk9ZS50b3RhbEludGVyRnJhbWVEZWxheSx0LnRvdGFsU3F1YXJlZEludGVyRnJhbWVEZWxheT1lLnRvdGFsU3F1YXJlZEludGVyRnJhbWVEZWxheSx0LnRvdGFsRnJlZXplc0R1cmF0aW9uPWUudG90YWxGcmVlemVzRHVyYXRpb247Y29uc3QgaT10aGlzLmxhc3REZWNvZGVWaWRlb1JlY2VpdmVyU3RhdHMuZ2V0KHQuc3NyYyksbj10aGlzLmxhc3RWaWRlb0ZyYW1lc0RlY29kZS5nZXQodC5zc3JjKSxyPXRoaXMubGFzdFZpZGVvRnJhbWVzT3V0cHV0LmdldCh0LnNzcmMpLG89RGF0ZS5ub3coKTtpZih0LmZyYW1lc0RlY29kZUNvdW50PjAmJiF0aGlzLmlzRmlyc3RWaWRlb0RlY29kZWRbdC5zc3JjXSl7Y29uc3QgZT10LmRlY29kZWRGcmFtZT90LmRlY29kZWRGcmFtZS53aWR0aDowLGk9dC5kZWNvZGVkRnJhbWU/dC5kZWNvZGVkRnJhbWUuaGVpZ2h0OjA7dGhpcy5vbkZpcnN0VmlkZW9EZWNvZGVkJiZ0aGlzLm9uRmlyc3RWaWRlb0RlY29kZWQodC5zc3JjLGUsaSksdGhpcy5pc0ZpcnN0VmlkZW9EZWNvZGVkW3Quc3NyY109ITB9aWYoaSl7Y29uc3Qgbj1pLnN0YXRzLHI9by1pLmx0czt0LmZyYW1lc0RlY29kZUZyZWV6ZVRpbWU9bi5mcmFtZXNEZWNvZGVGcmVlemVUaW1lLHQuZnJhbWVzRGVjb2RlSW50ZXJ2YWw9bi5mcmFtZXNEZWNvZGVJbnRlcnZhbCwhdGhpcy5pc0ZpcnN0VmlkZW9EZWNvZGVkW3Quc3NyY10mJnI+dGhpcy5vcHRpb25zLmZpcnN0VmlkZW9EZWNvZGVkVGltZW91dCYmIXRoaXMuaXNGaXJzdFZpZGVvRGVjb2RlZFRpbWVvdXRbdC5zc3JjXSYmKHRoaXMub25GaXJzdFZpZGVvRGVjb2RlZFRpbWVvdXQmJnRoaXMub25GaXJzdFZpZGVvRGVjb2RlZFRpbWVvdXQodC5zc3JjKSx0aGlzLmlzRmlyc3RWaWRlb0RlY29kZWRUaW1lb3V0W3Quc3NyY109ITApLHQuZnJhbWVzRGVjb2RlQ291bnQ+bi5mcmFtZXNEZWNvZGVDb3VudCYmdGhpcy5pc0ZpcnN0VmlkZW9EZWNvZGVkW3Quc3NyY10/KGkubHRzPURhdGUubm93KCksdC5mcmFtZXNEZWNvZGVJbnRlcnZhbD1yLHQuZnJhbWVzRGVjb2RlSW50ZXJ2YWw+PXRoaXMub3B0aW9ucy5mcmVlemVSYXRlTGltaXQmJih0aGlzLmdldFZpZGVvSXNSZWFkeShwYXJzZUludChlLnNzcmMpKT90LmZyYW1lc0RlY29kZUZyZWV6ZVRpbWUrPXQuZnJhbWVzRGVjb2RlSW50ZXJ2YWw6dGhpcy5zZXRWaWRlb0lzUmVhZHkyKHBhcnNlSW50KGUuc3NyYywxMCksITApKSk6dC5mcmFtZXNEZWNvZGVDb3VudDxuLmZyYW1lc0RlY29kZUNvdW50JiYodC5mcmFtZXNEZWNvZGVJbnRlcnZhbD0wKSxlLmZyYW1lc0RlY29kZWQmJmUucXBTdW0mJihpLnN0YXRzLmZyYW1lc0RlY29kZUNvdW50PmUuZnJhbWVzRGVjb2RlZD90LnFwU3VtUGVyRnJhbWU9ZS5xcFN1bS9lLmZyYW1lc0RlY29kZWQ6dC5xcFN1bVBlckZyYW1lPShlLnFwU3VtLWkucXBTdW0pLyhlLmZyYW1lc0RlY29kZWQtaS5zdGF0cy5mcmFtZXNEZWNvZGVDb3VudCkpfW4mJm8tbi5sdHM+PTgwMD8odC5kZWNvZGVGcmFtZVJhdGU9TWF0aC5yb3VuZCgodC5mcmFtZXNEZWNvZGVDb3VudC1uLmNvdW50KS8oKG8tbi5sdHMpLzFlMykpLHRoaXMubGFzdFZpZGVvRnJhbWVzRGVjb2RlLnNldCh0LnNzcmMse2NvdW50OnQuZnJhbWVzRGVjb2RlQ291bnQsbHRzOm8scmF0ZTp0LmRlY29kZUZyYW1lUmF0ZX0pKTpuP3QuZGVjb2RlRnJhbWVSYXRlPW4ucmF0ZTp0aGlzLmxhc3RWaWRlb0ZyYW1lc0RlY29kZS5zZXQodC5zc3JjLHtjb3VudDp0LmZyYW1lc0RlY29kZUNvdW50LGx0czpvLHJhdGU6MH0pLHQuZnJhbWVzRHJvcHBlZENvdW50JiZlLmZyYW1lc1JlY2VpdmVkJiYociYmby1yLmx0cz49ODAwPyh0Lm91dHB1dEZyYW1lUmF0ZT1NYXRoLnJvdW5kKChlLmZyYW1lc1JlY2VpdmVkLXQuZnJhbWVzRHJvcHBlZENvdW50LXIuY291bnQpLygoby1yLmx0cykvMWUzKSksdGhpcy5sYXN0VmlkZW9GcmFtZXNPdXRwdXQuc2V0KHQuc3NyYyx7Y291bnQ6ZS5mcmFtZXNSZWNlaXZlZC10LmZyYW1lc0Ryb3BwZWRDb3VudCxsdHM6byxyYXRlOk1hdGgubWF4KHQub3V0cHV0RnJhbWVSYXRlLDApfSkpOnI/dC5vdXRwdXRGcmFtZVJhdGU9ci5yYXRlOnRoaXMubGFzdFZpZGVvRnJhbWVzT3V0cHV0LnNldCh0LnNzcmMse2NvdW50OmUuZnJhbWVzUmVjZWl2ZWQtdC5mcmFtZXNEcm9wcGVkQ291bnQsbHRzOm8scmF0ZTowfSkpLGUudG90YWxEZWNvZGVUaW1lJiYodC5kZWNvZGVNcz0xZTMqZS50b3RhbERlY29kZVRpbWUpLHRoaXMucHJvY2Vzc1ZpZGVvVHJhY2tSZWNlaXZlclN0YXRzKGUsZS50cmFja0lkLHQpLGUuY29kZWNJZCYmKHQuY29kZWM9dGhpcy5nZXRDb2RlY0Zyb21Db2RlY1N0YXRzKGUuY29kZWNJZCkpLGUuZnJhbWVyYXRlTWVhbiYmKHQuZnJhbWVzUmF0ZUZpcmVmb3g9ZS5mcmFtZXJhdGVNZWFuKSx0LnBhY2tldHM+MCYmIXRoaXMuaXNGaXJzdFZpZGVvUmVjZWl2ZWRbdC5zc3JjXSYmKHRoaXMub25GaXJzdFZpZGVvUmVjZWl2ZWQmJnRoaXMub25GaXJzdFZpZGVvUmVjZWl2ZWQodC5zc3JjKSx0aGlzLmlzRmlyc3RWaWRlb1JlY2VpdmVkW3Quc3NyY109ITApLHRoaXMubGFzdERlY29kZVZpZGVvUmVjZWl2ZXJTdGF0cy5zZXQodC5zc3JjLHtzdGF0czprVih7fSx0KSxsdHM6aT9pLmx0czpEYXRlLm5vdygpLHFwU3VtOmUucXBTdW19KX1wcm9jZXNzVmlkZW9PdXRib3VuZFN0YXRzKGUpe2xldCB0PXRoaXMuX3N0YXRzLnZpZGVvU2VuZC5maW5kKCh0PT50LnNzcmM9PT1lLnNzcmMpKTt0fHwodD1UVih2ViksdGhpcy5fc3RhdHMudmlkZW9TZW5kLnB1c2godCkpO2NvbnN0IGk9dGhpcy5tZWRpYUJ5dGVzU2VudC5nZXQoZS5zc3JjKTtpZihpKWkuYWRkKGUuYnl0ZXNTZW50KTtlbHNle2NvbnN0IHQ9bmV3IGdWKDEwKTt0LmFkZChlLmJ5dGVzU2VudCksdGhpcy5tZWRpYUJ5dGVzU2VudC5zZXQoZS5zc3JjLHQpfWlmKHZvaWQgMCE9PWUucmV0cmFuc21pdHRlZEJ5dGVzU2VudCl7Y29uc3QgdD10aGlzLm1lZGlhQnl0ZXNSZXRyYW5zbWl0LmdldChlLnNzcmMpO2lmKHQpdC5hZGQoZS5yZXRyYW5zbWl0dGVkQnl0ZXNTZW50KTtlbHNle2NvbnN0IHQ9bmV3IGdWKDEwKTt0LmFkZChlLnJldHJhbnNtaXR0ZWRCeXRlc1NlbnQpLHRoaXMubWVkaWFCeXRlc1JldHJhbnNtaXQuc2V0KGUuc3NyYyx0KX19aWYoZS50b3RhbEVuY29kZWRCeXRlc1RhcmdldCl7Y29uc3QgdD10aGlzLm1lZGlhQnl0ZXNUYXJnZXRFbmNvZGUuZ2V0KGUuc3NyYyk7aWYodCl0LmFkZChlLnRvdGFsRW5jb2RlZEJ5dGVzVGFyZ2V0KTtlbHNle2NvbnN0IHQ9bmV3IGdWKDEwKTt0LmFkZChlLnRvdGFsRW5jb2RlZEJ5dGVzVGFyZ2V0KSx0aGlzLm1lZGlhQnl0ZXNUYXJnZXRFbmNvZGUuc2V0KGUuc3NyYyx0KX19aWYodC5zc3JjPWUuc3NyYyx0LmJ5dGVzPWUuYnl0ZXNTZW50LHQucGFja2V0cz1lLnBhY2tldHNTZW50LHQuZmlyc0NvdW50PWUuZmlyQ291bnQsdC5uYWNrc0NvdW50PWUubmFja0NvdW50LHQucGxpc0NvdW50PWUucGxpQ291bnQsdC5mcmFtZUNvdW50PWUuZnJhbWVzRW5jb2RlZCx0LmFkYXB0aW9uQ2hhbmdlUmVhc29uPWUucXVhbGl0eUxpbWl0YXRpb25SZWFzb24sdC5zY2FsYWJpbGl0eU1vZGU9ZS5zY2FsYWJpbGl0eU1vZGUsZS50b3RhbEVuY29kZVRpbWUmJmUuZnJhbWVzRW5jb2RlZCl7Y29uc3QgaT10aGlzLmxhc3RFbmNvZGVyTXMuZ2V0KGUuc3NyYyk7aWYoIWl8fGkubGFzdEZyYW1lQ291bnQ+ZS5mcmFtZXNFbmNvZGVkKXQuYXZnRW5jb2RlTXM9MWUzKmUudG90YWxFbmNvZGVUaW1lL2UuZnJhbWVzRW5jb2RlZDtlbHNle2NvbnN0IG49ZS5mcmFtZXNFbmNvZGVkLWkubGFzdEZyYW1lQ291bnQscj1lLnRvdGFsRW5jb2RlVGltZS1pLmxhc3RFbmNvZGVyVGltZTt0LmF2Z0VuY29kZU1zPTFlMypyL259fWlmKGUuZnJhbWVzRW5jb2RlZCYmZS5xcFN1bSl7Y29uc3QgaT10aGlzLmxhc3RFbmNvZGVyTXMuZ2V0KGUuc3NyYyk7IWl8fGkubGFzdEZyYW1lQ291bnQ+ZS5mcmFtZXNFbmNvZGVkP3QucXBTdW1QZXJGcmFtZT1lLnFwU3VtL2UuZnJhbWVzRW5jb2RlZDp0LnFwU3VtUGVyRnJhbWU9KGUucXBTdW0taS5sYXN0UXBTdW0pLyhlLmZyYW1lc0VuY29kZWQtaS5sYXN0RnJhbWVDb3VudCl9aWYodGhpcy5sYXN0RW5jb2Rlck1zLnNldChlLnNzcmMse2xhc3RGcmFtZUNvdW50OmUuZnJhbWVzRW5jb2RlZCxsYXN0RW5jb2RlclRpbWU6ZS50b3RhbEVuY29kZVRpbWUsbGFzdFFwU3VtOmUucXBTdW0sbHRzOkRhdGUubm93KCl9KSxlLmNvZGVjSWQmJih0LmNvZGVjPXRoaXMuZ2V0Q29kZWNGcm9tQ29kZWNTdGF0cyhlLmNvZGVjSWQpKSxlLm1lZGlhU291cmNlSWQmJnRoaXMucHJvY2Vzc1ZpZGVvTWVkaWFTb3VyY2UoZS5tZWRpYVNvdXJjZUlkLHQpLHRoaXMucHJvY2Vzc1ZpZGVvVHJhY2tTZW5kZXJTdGF0cyhlLGUudHJhY2tJZCx0KSxlLnJlbW90ZUlkKXRoaXMucHJvY2Vzc1JlbW90ZUluYm91bmRTdGF0cyhlLnJlbW90ZUlkLHQpO2Vsc2V7Y29uc3QgaT10aGlzLmZpbmRSZW1vdGVTdGF0c0lkKGUuc3NyYyx2dy5SRU1PVEVfSU5CT1VORCk7aSYmdGhpcy5wcm9jZXNzUmVtb3RlSW5ib3VuZFN0YXRzKGksdCl9fXByb2Nlc3NBdWRpb091dGJvdW5kU3RhdHMoZSl7bGV0IHQ9dGhpcy5fc3RhdHMuYXVkaW9TZW5kLmZpbmQoKHQ9PnQuc3NyYz09PWUuc3NyYykpO2lmKHR8fCh0PVRWKHlWKSx0aGlzLl9zdGF0cy5hdWRpb1NlbmQucHVzaCh0KSksdC5zc3JjPWUuc3NyYyx0LnBhY2tldHM9ZS5wYWNrZXRzU2VudCx0LmJ5dGVzPWUuYnl0ZXNTZW50LGUubWVkaWFTb3VyY2VJZCYmdGhpcy5wcm9jZXNzQXVkaW9NZWRpYVNvdXJjZShlLm1lZGlhU291cmNlSWQsdCksZS5jb2RlY0lkJiYodC5jb2RlYz10aGlzLmdldENvZGVjRnJvbUNvZGVjU3RhdHMoZS5jb2RlY0lkKSksdGhpcy5wcm9jZXNzQXVkaW9UcmFja1NlbmRlclN0YXRzKGUsZS50cmFja0lkLHQpLGUucmVtb3RlSWQpdGhpcy5wcm9jZXNzUmVtb3RlSW5ib3VuZFN0YXRzKGUucmVtb3RlSWQsdCk7ZWxzZXtjb25zdCBpPXRoaXMuZmluZFJlbW90ZVN0YXRzSWQoZS5zc3JjLHZ3LlJFTU9URV9JTkJPVU5EKTtpJiZ0aGlzLnByb2Nlc3NSZW1vdGVJbmJvdW5kU3RhdHMoaSx0KX19ZmluZFJlbW90ZVN0YXRzSWQoZSx0KXt2YXIgaTtjb25zdCBuPUFycmF5LmZyb20oX04oaT10aGlzLnJlcG9ydCkuY2FsbChpKSkuZmluZCgoaT0+aS50eXBlPT09dCYmaS5zc3JjPT09ZSkpO3JldHVybiBuP24uaWQ6bnVsbH1wcm9jZXNzVmlkZW9NZWRpYVNvdXJjZShlLHQpe2NvbnN0IGk9dGhpcy5yZXBvcnQuZ2V0KGUpO2kmJmkud2lkdGgmJmkuaGVpZ2h0JiZpLmZyYW1lc1BlclNlY29uZCYmKHQuaW5wdXRGcmFtZT17d2lkdGg6aS53aWR0aCxoZWlnaHQ6aS5oZWlnaHQsZnJhbWVSYXRlOmkuZnJhbWVzUGVyU2Vjb25kfSl9cHJvY2Vzc0F1ZGlvTWVkaWFTb3VyY2UoZSx0KXtjb25zdCBpPXRoaXMucmVwb3J0LmdldChlKTtpJiYodC5pbnB1dExldmVsPWkuYXVkaW9MZXZlbCl9cHJvY2Vzc1ZpZGVvVHJhY2tTZW5kZXJTdGF0cyhlLHQsaSl7dmFyIG4scixvLHM7Y29uc3QgYT10P3RoaXMucmVwb3J0LmdldCh0KTp2b2lkIDAsYz1udWxsIT09KG49bnVsbD09YT92b2lkIDA6YS5mcmFtZXNTZW50KSYmdm9pZCAwIT09bj9uOmUuZnJhbWVzU2VudDtpZihcIm51bWJlclwiIT10eXBlb2YgYylyZXR1cm47bGV0IGQ9bnVsbCE9PShyPW51bGw9PWE/dm9pZCAwOmEuZnJhbWVXaWR0aCkmJnZvaWQgMCE9PXI/cjplLmZyYW1lV2lkdGgsbD1udWxsIT09KG89bnVsbD09YT92b2lkIDA6YS5mcmFtZUhlaWdodCkmJnZvaWQgMCE9PW8/bzplLmZyYW1lSGVpZ2h0LHU9bnVsbCE9PShzPW51bGw9PWE/dm9pZCAwOmEuZnJhbWVzUGVyU2Vjb25kKSYmdm9pZCAwIT09cz9zOmUuZnJhbWVzUGVyU2Vjb25kO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBkJiZcIm51bWJlclwiPT10eXBlb2YgbHx8KGQ9MCxsPTApLG51bGw9PXUpe2NvbnN0IGU9RGF0ZS5ub3coKSx0PXRoaXMubGFzdFZpZGVvRnJhbWVzU2VudC5nZXQoaS5zc3JjKTt0JiZlLXQubHRzPj04MDA/KHU9TWF0aC5yb3VuZCgoYy10LmNvdW50KS8oKGUtdC5sdHMpLzFlMykpLHRoaXMubGFzdFZpZGVvRnJhbWVzU2VudC5zZXQoaS5zc3JjLHtjb3VudDpjLGx0czplLHJhdGU6dX0pKTp0P3U9dC5yYXRlOnRoaXMubGFzdFZpZGVvRnJhbWVzU2VudC5zZXQoaS5zc3JjLHtjb3VudDpjLGx0czplLHJhdGU6MH0pfWkuc2VudEZyYW1lPXt3aWR0aDpkLGhlaWdodDpsLGZyYW1lUmF0ZTpNYXRoLm1heCgwLHUpfX1wcm9jZXNzVmlkZW9UcmFja1JlY2VpdmVyU3RhdHMoZSx0LGkpe3ZhciBuLHIsbyxzLGE7Y29uc3QgYz10P3RoaXMucmVwb3J0LmdldCh0KTp2b2lkIDAsZD1udWxsIT09KG49bnVsbD09Yz92b2lkIDA6Yy5mcmFtZXNSZWNlaXZlZCkmJnZvaWQgMCE9PW4/bjplLmZyYW1lc1JlY2VpdmVkLGw9bnVsbCE9PShyPW51bGw9PWM/dm9pZCAwOmMuZnJhbWVXaWR0aCkmJnZvaWQgMCE9PXI/cjplLmZyYW1lV2lkdGgsdT1udWxsIT09KG89bnVsbD09Yz92b2lkIDA6Yy5mcmFtZUhlaWdodCkmJnZvaWQgMCE9PW8/bzplLmZyYW1lSGVpZ2h0LGg9bnVsbCE9PShzPW51bGw9PWM/dm9pZCAwOmMuaml0dGVyQnVmZmVyRGVsYXkpJiZ2b2lkIDAhPT1zP3M6ZS5qaXR0ZXJCdWZmZXJEZWxheSxwPW51bGwhPT0oYT1udWxsPT1jP3ZvaWQgMDpjLmppdHRlckJ1ZmZlckVtaXR0ZWRDb3VudCkmJnZvaWQgMCE9PWE/YTplLmppdHRlckJ1ZmZlckVtaXR0ZWRDb3VudDtpZihcIm51bWJlclwiPT10eXBlb2YgZCl7Y29uc3QgZT10aGlzLmxhc3RWaWRlb0ZyYW1lc1JlY3YuZ2V0KGkuc3NyYyksdD1EYXRlLm5vdygpO2kuZnJhbWVzUmVjZWl2ZWRDb3VudD1kO2xldCBuPTA7ZSYmdC1lLmx0cz49ODAwPyhuPU1hdGgucm91bmQoKGQtZS5jb3VudCkvKCh0LWUubHRzKS8xZTMpKSx0aGlzLmxhc3RWaWRlb0ZyYW1lc1JlY3Yuc2V0KGkuc3NyYyx7Y291bnQ6ZCxsdHM6dCxyYXRlOm59KSk6ZT9uPWUucmF0ZTp0aGlzLmxhc3RWaWRlb0ZyYW1lc1JlY3Yuc2V0KGkuc3NyYyx7Y291bnQ6ZCxsdHM6dCxyYXRlOjB9KSxpLnJlY2VpdmVkRnJhbWU9e3dpZHRoOmx8fDAsaGVpZ2h0OnV8fDAsZnJhbWVSYXRlOm58fDB9LGkuZGVjb2RlZEZyYW1lPXt3aWR0aDpsfHwwLGhlaWdodDp1fHwwLGZyYW1lUmF0ZTppLmRlY29kZUZyYW1lUmF0ZXx8MH0saS5vdXRwdXRGcmFtZT17d2lkdGg6bHx8MCxoZWlnaHQ6dXx8MCxmcmFtZVJhdGU6aS5vdXRwdXRGcmFtZVJhdGV8fGkuZGVjb2RlRnJhbWVSYXRlfHwwfX1pZihoJiZwKXtjb25zdCBlPXRoaXMubGFzdFZpZGVvSkJEZWxheS5nZXQoaS5zc3JjKXx8e2ppdHRlckJ1ZmZlckRlbGF5OjAsaml0dGVyQnVmZmVyRW1pdHRlZENvdW50OjAsaml0dGVyQnVmZmVyTXM6MH07bGV0IHQ9ZS5qaXR0ZXJCdWZmZXJNcztjb25zdCBuPXAtZS5qaXR0ZXJCdWZmZXJFbWl0dGVkQ291bnQ7bj4wJiYodD0xZTMqKGgtZS5qaXR0ZXJCdWZmZXJEZWxheSkvbiksaS5qaXR0ZXJCdWZmZXJNcz10LGkuY3VycmVudERlbGF5TXM9TWF0aC5yb3VuZCh0KSx0aGlzLmxhc3RWaWRlb0pCRGVsYXkuc2V0KGkuc3NyYyx7aml0dGVyQnVmZmVyRGVsYXk6aCxqaXR0ZXJCdWZmZXJFbWl0dGVkQ291bnQ6cCxqaXR0ZXJCdWZmZXJNczppLmN1cnJlbnREZWxheU1zfSl9fXByb2Nlc3NBdWRpb1RyYWNrU2VuZGVyU3RhdHMoZSx0LGkpe3ZhciBuLHIsbyxzO2NvbnN0IGE9dD90aGlzLnJlcG9ydC5nZXQodCk6dm9pZCAwLGM9bnVsbCE9PShuPW51bGwhPT0ocj1udWxsPT1hP3ZvaWQgMDphLmVjaG9SZXR1cm5Mb3NzKSYmdm9pZCAwIT09cj9yOmUuZWNob1JldHVybkxvc3MpJiZ2b2lkIDAhPT1uP246MCxkPW51bGwhPT0obz1udWxsIT09KHM9bnVsbD09YT92b2lkIDA6YS5lY2hvUmV0dXJuTG9zc0VuaGFuY2VtZW50KSYmdm9pZCAwIT09cz9zOmUuZWNob1JldHVybkxvc3NFbmhhbmNlbWVudCkmJnZvaWQgMCE9PW8/bzowO2kuYWVjUmV0dXJuTG9zcz1jLGkuYWVjUmV0dXJuTG9zc0VuaGFuY2VtZW50PWR9cHJvY2Vzc0F1ZGlvVHJhY2tSZWNlaXZlclN0YXRzKGUsdCxpKXt2YXIgbixyLG8scyxhLGMsZDtjb25zdCBsPXQ/dGhpcy5yZXBvcnQuZ2V0KHQpOnZvaWQgMCx1PW51bGwhPT0obj1udWxsPT1sP3ZvaWQgMDpsLnJlbW92ZWRTYW1wbGVzRm9yQWNjZWxlcmF0aW9uKSYmdm9pZCAwIT09bj9uOmUucmVtb3ZlZFNhbXBsZXNGb3JBY2NlbGVyYXRpb24saD1udWxsIT09KHI9bnVsbD09bD92b2lkIDA6bC50b3RhbFNhbXBsZXNSZWNlaXZlZCkmJnZvaWQgMCE9PXI/cjplLnRvdGFsU2FtcGxlc1JlY2VpdmVkLHA9bnVsbCE9PShvPW51bGw9PWw/dm9pZCAwOmwuaml0dGVyQnVmZmVyRGVsYXkpJiZ2b2lkIDAhPT1vP286ZS5qaXR0ZXJCdWZmZXJEZWxheSxfPW51bGwhPT0ocz1udWxsPT1sP3ZvaWQgMDpsLmppdHRlckJ1ZmZlckVtaXR0ZWRDb3VudCkmJnZvaWQgMCE9PXM/czplLmppdHRlckJ1ZmZlckVtaXR0ZWRDb3VudCxFPW51bGwhPT0oYT1udWxsPT1sP3ZvaWQgMDpsLmF1ZGlvTGV2ZWwpJiZ2b2lkIDAhPT1hP2E6bnVsbD09ZT92b2lkIDA6ZS5hdWRpb0xldmVsLGY9bnVsbCE9PShjPW51bGw9PWw/dm9pZCAwOmwudG90YWxTYW1wbGVzRHVyYXRpb24pJiZ2b2lkIDAhPT1jP2M6bnVsbD09ZT92b2lkIDA6ZS50b3RhbFNhbXBsZXNEdXJhdGlvbixtPW51bGwhPT0oZD1udWxsPT1sP3ZvaWQgMDpsLmNvbmNlYWxlZFNhbXBsZXMpJiZ2b2lkIDAhPT1kP2Q6ZS5jb25jZWFsZWRTYW1wbGVzO2lmKHUmJmgmJihpLmFjY2VsZXJhdGVSYXRlPXUvaCkscCYmXyl7Y29uc3QgZT10aGlzLmxhc3RBdWRpb0pCRGVsYXkuZ2V0KGkuc3NyYyl8fHtqaXR0ZXJCdWZmZXJEZWxheTowLGppdHRlckJ1ZmZlckVtaXR0ZWRDb3VudDowLGppdHRlckJ1ZmZlck1zOjB9O2xldCB0PWUuaml0dGVyQnVmZmVyTXM7Y29uc3Qgbj1fLWUuaml0dGVyQnVmZmVyRW1pdHRlZENvdW50O24+MCYmKHQ9MWUzKihwLWUuaml0dGVyQnVmZmVyRGVsYXkpL24pLGkuaml0dGVyQnVmZmVyTXM9TWF0aC5yb3VuZCh0KSx0aGlzLmxhc3RBdWRpb0pCRGVsYXkuc2V0KGkuc3NyYyx7aml0dGVyQnVmZmVyRGVsYXk6cCxqaXR0ZXJCdWZmZXJFbWl0dGVkQ291bnQ6XyxqaXR0ZXJCdWZmZXJNczppLmppdHRlckJ1ZmZlck1zfSl9aS5vdXRwdXRMZXZlbD1FO2xldCBUPTE5MjA7ZiYmaCYmKFQ9aC9mLzUwLGkucmVjZWl2ZWRGcmFtZXM9TWF0aC5yb3VuZChoL1QpKSxtJiYoaS5kcm9wcGVkRnJhbWVzPU1hdGgucm91bmQobS9UKSl9cHJvY2Vzc1JlbW90ZUluYm91bmRTdGF0cyhlLHQpe2NvbnN0IGk9dGhpcy5yZXBvcnQuZ2V0KGUpO2kmJih0LnBhY2tldHNMb3N0PWkucGFja2V0c0xvc3QsaS5yb3VuZFRyaXBUaW1lJiYodC5ydHRNcz0xZTMqaS5yb3VuZFRyaXBUaW1lKSxpLmppdHRlciYmKHQuaml0dGVyTXM9MWUzKmkuaml0dGVyKSxpLnRpbWVzdGFtcCYmKHQudGltZXN0YW1wPWkudGltZXN0YW1wKSl9Z2V0Q29kZWNGcm9tQ29kZWNTdGF0cyhlKXtjb25zdCB0PXRoaXMucmVwb3J0LmdldChlKTtpZighdClyZXR1cm5cIlwiO2NvbnN0IGk9dC5taW1lVHlwZS5tYXRjaCgvXFwvKC4qKSQvKTtyZXR1cm4gaSYmaVsxXT9pWzFdOlwiXCJ9dXBkYXRlU2VuZEJpdHJhdGUoKXtsZXQgZT0wLHQ9bnVsbCxpPW51bGw7dGhpcy5tZWRpYUJ5dGVzU2VudC5mb3JFYWNoKCh0PT57ZSs9dC5kaWZmTWVhbigpfSkpLHRoaXMubWVkaWFCeXRlc1JldHJhbnNtaXQuZm9yRWFjaCgoZT0+e3Q9bnVsbD09PXQ/ZS5kaWZmTWVhbigpOnQrZS5kaWZmTWVhbigpfSkpLHRoaXMubWVkaWFCeXRlc1RhcmdldEVuY29kZS5mb3JFYWNoKChlPT57aT1udWxsPT09aT9lLmRpZmZNZWFuKCk6aStlLmRpZmZNZWFuKCl9KSk7Y29uc3Qgbj1udWxsIT09dD9lLXQ6ZTt0aGlzLl9zdGF0cy5iaXRyYXRlPXthY3R1YWxFbmNvZGVkOjgqbi8odGhpcy5vcHRpb25zLnVwZGF0ZUludGVydmFsLzFlMyksdHJhbnNtaXQ6OCplLyh0aGlzLm9wdGlvbnMudXBkYXRlSW50ZXJ2YWwvMWUzKX0sbnVsbCE9PXQmJih0aGlzLl9zdGF0cy5iaXRyYXRlLnJldHJhbnNtaXQ9OCp0Lyh0aGlzLm9wdGlvbnMudXBkYXRlSW50ZXJ2YWwvMWUzKSksbnVsbCE9PWkmJih0aGlzLl9zdGF0cy5iaXRyYXRlLnRhcmdldEVuY29kZWQ9OCppLyh0aGlzLm9wdGlvbnMudXBkYXRlSW50ZXJ2YWwvMWUzKSl9fWNsYXNzIFVWIGV4dGVuZHMgT1Z7dXBkYXRlU3RhdHMoKXtyZXR1cm4gR2gucmVzb2x2ZSgpfX1mdW5jdGlvbiB4VihlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06MjUwLGk9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOjgsbj1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106NTAwLHI9YXJndW1lbnRzLmxlbmd0aD40JiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0/YXJndW1lbnRzWzRdOjFlNDtjb25zdCBvPWZ1bmN0aW9uKCl7Y29uc3QgZT1uYXZpZ2F0b3IudXNlckFnZW50LnRvTG9jYWxlTG93ZXJDYXNlKCkubWF0Y2goL2Nocm9tZVxcL1tcXGRdKi9pKTtyZXR1cm4gZSYmZVswXT9OdW1iZXIoZVswXS5zcGxpdChcIi9cIilbMV0pOm51bGx9KCk7cmV0dXJuIG8/bzw3Nj9uZXcgUFYoZSx7dXBkYXRlSW50ZXJ2YWw6dCxsb3NzUmF0ZUludGVydmFsOmksZnJlZXplUmF0ZUxpbWl0Om4sZmlyc3RWaWRlb0RlY29kZWRUaW1lb3V0OnJ9KTpuZXcgTVYoZSx7dXBkYXRlSW50ZXJ2YWw6dCxsb3NzUmF0ZUludGVydmFsOmksZnJlZXplUmF0ZUxpbWl0Om4sZmlyc3RWaWRlb0RlY29kZWRUaW1lb3V0OnJ9KTpmdW5jdGlvbihlKXtpZighd2luZG93LlJUQ1N0YXRzUmVwb3J0KXJldHVybiExO2NvbnN0IHQ9ZS5nZXRTdGF0cygpO3JldHVybiEhKHQgaW5zdGFuY2VvZiBHaHx8ZnVuY3Rpb24oZSl7cmV0dXJuISFlJiYoXCJvYmplY3RcIj09dHlwZW9mIGV8fFwiZnVuY3Rpb25cIj09dHlwZW9mIGUpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLnRoZW59KHQpKX0oZSk/bmV3IE1WKGUse3VwZGF0ZUludGVydmFsOnQsbG9zc1JhdGVJbnRlcnZhbDppLGZyZWV6ZVJhdGVMaW1pdDpuLGZpcnN0VmlkZW9EZWNvZGVkVGltZW91dDpyfSk6bmV3IFVWKGUse3VwZGF0ZUludGVydmFsOnQsbG9zc1JhdGVJbnRlcnZhbDppLGZyZWV6ZVJhdGVMaW1pdDpuLGZpcnN0VmlkZW9EZWNvZGVkVGltZW91dDpyfSl9bGV0IFZWPWNsYXNze2dldCBsb2NhbENhcGFiaWxpdGllcygpe3JldHVybiBzQSh0aGlzLl9sb2NhbENhcGFiaWxpdGllcyl9Z2V0IHJ0cENhcGFiaWxpdGllcygpe3JldHVybiBzQSh0aGlzLl9ydHBDYXBhYmlsaXRpZXMpfWdldCBjYW5kaWRhdGVzKCl7cmV0dXJuIHNBKHRoaXMuX2NhbmRpZGF0ZXMpfWdldCBpY2VQYXJhbWV0ZXJzKCl7cmV0dXJuIHNBKHRoaXMuX2ljZVBhcmFtZXRlcnMpfWdldCBkdGxzUGFyYW1ldGVycygpe3JldHVybiBzQSh0aGlzLl9kdGxzUGFyYW1ldGVycyl9Y29uc3RydWN0b3IoZSl7RmcodGhpcyxcInNlc3Npb25EZXNjXCIsdm9pZCAwKSxGZyh0aGlzLFwiX2xvY2FsQ2FwYWJpbGl0aWVzXCIsdm9pZCAwKSxGZyh0aGlzLFwiX3J0cENhcGFiaWxpdGllc1wiLHZvaWQgMCksRmcodGhpcyxcIl9jYW5kaWRhdGVzXCIsdm9pZCAwKSxGZyh0aGlzLFwiX2ljZVBhcmFtZXRlcnNcIix2b2lkIDApLEZnKHRoaXMsXCJfZHRsc1BhcmFtZXRlcnNcIix2b2lkIDApLEZnKHRoaXMsXCJzZXR1cFwiLHZvaWQgMCksRmcodGhpcyxcImN1cnJlbnRNaWRJbmRleFwiLHZvaWQgMCksRmcodGhpcyxcImNuYW1lXCIsXCJvL2kxNHU5cEpyeFJLQXN1XCIpLEZnKHRoaXMsXCJmaXJlZm94U3NyY01pZE1hcFwiLG5ldyBNYXApLGU9c0EoZSk7Y29uc3R7cmVtb3RlSWNlUGFyYW1ldGVyczp0LHJlbW90ZUR0bHNQYXJhbWV0ZXJzOmksY2FuZGlkYXRlczpuLHJlbW90ZVJUUENhcGFiaWxpdGllczpyLGxvY2FsQ2FwYWJpbGl0aWVzOm8sZGlyZWN0aW9uOnMsc2V0dXA6YSx2aWRlb0NvZGVjOmMsYXVkaW9Db2RlYzpkfT1lO2xldCBsO3RoaXMuc2V0dXA9YSxsPXM9PT1Ndy5SRUNFSVZFX09OTFk/RlUucGFyc2UoXCJ2PTBcXG5vPS0gMCAwIElOIElQNCAxMjcuMC4wLjFcXG5zPUFnb3JhR2F0ZXdheVxcbnQ9MCAwXFxuYT1ncm91cDpCVU5ETEUgMCAxXFxuYT1tc2lkLXNlbWFudGljOiBXTVNcXG5hPWV4dG1hcC1hbGxvdy1taXhlZFxcbm09dmlkZW8gOSBVRFAvVExTL1JUUC9TQVZQRiAwXFxuYz1JTiBJUDQgMTI3LjAuMC4xXFxuYT1ydGNwOjkgSU4gSVA0IDAuMC4wLjBcXG5hPXNlbmRvbmx5XFxuYT1ydGNwLW11eFxcbmE9cnRjcC1yc2l6ZVxcbmE9bWlkOjBcXG5tPWF1ZGlvIDkgVURQL1RMUy9SVFAvU0FWUEYgMFxcbmM9SU4gSVA0IDEyNy4wLjAuMVxcbmE9cnRjcDo5IElOIElQNCAwLjAuMC4wXFxuYT1zZW5kb25seVxcbmE9cnRjcC1tdXhcXG5hPXJ0Y3AtcnNpemVcXG5hPW1pZDoxXFxuXCIpOkZVLnBhcnNlKFwidj0wXFxubz0tIDAgMCBJTiBJUDQgMTI3LjAuMC4xXFxucz1BZ29yYUdhdGV3YXlcXG50PTAgMFxcbmE9Z3JvdXA6QlVORExFIDAgMVxcbmE9bXNpZC1zZW1hbnRpYzogV01TXFxuYT1leHRtYXAtYWxsb3ctbWl4ZWRcXG5tPXZpZGVvIDkgVURQL1RMUy9SVFAvU0FWUEYgMFxcbmM9SU4gSVA0IDEyNy4wLjAuMVxcbmE9cnRjcDo5IElOIElQNCAwLjAuMC4wXFxuYT1yZWN2b25seVxcbmE9cnRjcC1tdXhcXG5hPXJ0Y3AtcnNpemVcXG5hPW1pZDowXFxubT1hdWRpbyA5IFVEUC9UTFMvUlRQL1NBVlBGIDBcXG5jPUlOIElQNCAxMjcuMC4wLjFcXG5hPXJ0Y3A6OSBJTiBJUDQgMC4wLjAuMFxcbmE9cmVjdm9ubHlcXG5hPXJ0Y3AtbXV4XFxuYT1ydGNwLXJzaXplXFxuYT1taWQ6MVxcblwiKSx0aGlzLl9ydHBDYXBhYmlsaXRpZXM9cix0aGlzLl9jYW5kaWRhdGVzPW4sdGhpcy5faWNlUGFyYW1ldGVycz10LHRoaXMuX2R0bHNQYXJhbWV0ZXJzPWksdGhpcy5fbG9jYWxDYXBhYmlsaXRpZXM9bztjb25zdCB1PXM9PT1Ndy5SRUNFSVZFX09OTFk/dGhpcy5ydHBDYXBhYmlsaXRpZXMuc2VuZDp0aGlzLnJ0cENhcGFiaWxpdGllcy5yZWN2LGg9cz09PU13LlJFQ0VJVkVfT05MWT90aGlzLl9sb2NhbENhcGFiaWxpdGllcy5yZWN2OnRoaXMuX2xvY2FsQ2FwYWJpbGl0aWVzLnNlbmQscD1zPT09TXcuUkVDRUlWRV9PTkxZP3Iuc2VuZC52aWRlb0NvZGVjczpzeChkTy5WSURFTyx1LGgsYyksXz1zPT09TXcuUkVDRUlWRV9PTkxZP3Iuc2VuZC5hdWRpb0NvZGVjczpzeChkTy5BVURJTyx1LGgsZCk7Zm9yKGNvbnN0IGUgb2YgbC5tZWRpYURlc2NyaXB0aW9ucyllLmF0dHJpYnV0ZXMuaWNlVWZyYWc9dC5pY2VVZnJhZyxlLmF0dHJpYnV0ZXMuaWNlUHdkPXQuaWNlUHdkLGUuYXR0cmlidXRlcy5maW5nZXJwcmludHM9aS5maW5nZXJwcmludHMsZS5hdHRyaWJ1dGVzLmNhbmRpZGF0ZXM9bixlLmF0dHJpYnV0ZXMuc2V0dXA9dGhpcy5zZXR1cCxcImFwcGxpY2F0aW9uXCI9PT1lLm1lZGlhLm1lZGlhVHlwZSYmKGUuYXR0cmlidXRlcy5zY3RwUG9ydD1cIjUwMDBcIiksXCJ2aWRlb1wiPT09ZS5tZWRpYS5tZWRpYVR5cGUmJihlLm1lZGlhLmZtdHM9cC5tYXAoKGU9PmUucGF5bG9hZFR5cGUudG9TdHJpbmcoMTApKSksZS5hdHRyaWJ1dGVzLnBheWxvYWRzPXAsZS5hdHRyaWJ1dGVzLmV4dG1hcHM9dS52aWRlb0V4dGVuc2lvbnMpLFwiYXVkaW9cIj09PWUubWVkaWEubWVkaWFUeXBlJiYoZS5tZWRpYS5mbXRzPV8ubWFwKChlPT5lLnBheWxvYWRUeXBlLnRvU3RyaW5nKDEwKSkpLGUuYXR0cmlidXRlcy5wYXlsb2Fkcz1fLGUuYXR0cmlidXRlcy5leHRtYXBzPXUuYXVkaW9FeHRlbnNpb25zLG94KGUpKTt0aGlzLnNlc3Npb25EZXNjPWwsdGhpcy5jdXJyZW50TWlkSW5kZXg9bC5tZWRpYURlc2NyaXB0aW9ucy5sZW5ndGgtMX10b1N0cmluZygpe3JldHVybiBGVS5wcmludCh0aGlzLnNlc3Npb25EZXNjKX1oYXNNaWQoZSl7cmV0dXJuIEFycmF5LmlzQXJyYXkoZSk/ZS5ldmVyeSgoZT0+dGhpcy5oYXNNaWQoZSkpKTp0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLnNvbWUoKHQ9PnQuYXR0cmlidXRlcy5taWQ9PT1lKSl9c2VuZChlLHQsaSxuLHIpe2k9aS5yZXBsYWNlKC8gL2csXCItXCIpO2NvbnN0e3NzcmNzOm8sc3NyY0dyb3VwczpzfT16VSh0LHRoaXMuY25hbWUsWEEoXCJTWU5DX0dST1VQXCIpP2k6dm9pZCAwKSxhPXRoaXMuZmluZFByZWxvYWRNZWRpYURlc2Mobyk7aWYoYSl7aWYoWnYoKSYmdGhpcy5maXJlZm94U3NyY01pZE1hcC5zZXQob1swXS5zc3JjSWQsYS5hdHRyaWJ1dGVzLm1pZCksciYmKHIudHdjY3x8ci5yZW1iKSl7Y29uc3QgZT10aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmluZGV4T2YoYSk7cmV0dXJuIHRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnNbZV09dGhpcy5tdW5nU2VuZE1lZGlhRGVzYyhhLHIpLHttaWQ6YS5hdHRyaWJ1dGVzLm1pZCxuZWVkRXhjaGFuZ2VTRFA6ITB9fXJldHVybnttaWQ6YS5hdHRyaWJ1dGVzLm1pZCxuZWVkRXhjaGFuZ2VTRFA6ITF9fXtjb25zdCB0PXRoaXMuZmluZEF2YWlsYWJsZU1lZGlhSW5kZXgoZSxvLG4pO2xldCBpO3JldHVybi0xPT09dD8oaT10aGlzLmNyZWF0ZU9yUmVjeWNsZVNlbmRNZWRpYShlLG8scyxcInNlbmRvbmx5XCIsbixyKSx0aGlzLnVwZGF0ZUJ1bmRsZU1pZHMoKSk6KGk9c0EodGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9uc1t0XSksaS5hdHRyaWJ1dGVzLmRpcmVjdGlvbj1cInNlbmRvbmx5XCIsaS5hdHRyaWJ1dGVzLnNzcmNzPW8saS5hdHRyaWJ1dGVzLnNzcmNHcm91cHM9cyx0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zW3RdPXRoaXMubXVuZ1NlbmRNZWRpYURlc2MoaSxyKSksWnYoKSYmdGhpcy5maXJlZm94U3NyY01pZE1hcC5zZXQob1swXS5zc3JjSWQsaS5hdHRyaWJ1dGVzLm1pZCkse25lZWRFeGNoYW5nZVNEUDohMCxtaWQ6aS5hdHRyaWJ1dGVzLm1pZH19fXN0b3BTZW5kaW5nKGUpe2NvbnN0IHQ9dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5maWx0ZXIoKHQ9PnQuYXR0cmlidXRlcy5taWQmJi0xIT09ZS5pbmRleE9mKHQuYXR0cmlidXRlcy5taWQpKSk7aWYodC5sZW5ndGghPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJtZWRpYURlc2NyaXB0aW9ucycgbGVuZ3RoIGRvZXNuJ3QgbWF0Y2ggbWlkcycgbGVuZ3RoIHdoZW4gY2FsbGluZyBSZW1vdGVTRFAuc3RvcFNlbmRpbmcuXCIpO3QuZm9yRWFjaCgoZT0+e2UuYXR0cmlidXRlcy5zc3Jjcz1bXX0pKSx0aGlzLnVwZGF0ZUJ1bmRsZU1pZHMoKX1yZWNlaXZlKGUsdCxpKXtjb25zdCBuPVtdO3JldHVybiBlLmZvckVhY2goKGU9Pntjb25zdCByPWUuX21lZGlhU3RyZWFtVHJhY2sua2luZCxvPXRoaXMuZmluZEF2YWlsYWJsZVJlY3ZNZWRpYUluZGV4KHIpO2xldCBzLGE9ITE7LTE9PT1vPyhhPSEwLHM9dGhpcy5jcmVhdGVPclJlY3ljbGVSZWN2TWVkaWEoZSxbXSxcInJlY3Zvbmx5XCIsdCxpKSx0aGlzLnVwZGF0ZUJ1bmRsZU1pZHMoKSk6KHM9c0EodGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9uc1tvXSkscy5hdHRyaWJ1dGVzLmRpcmVjdGlvbj1cInJlY3Zvbmx5XCIpLG4ucHVzaCh7bWlkOnMuYXR0cmlidXRlcy5taWQsbmVlZENyZWF0ZVRyYW5zY2VpdmVyOmF9KX0pKSxufXN0b3BSZWNlaXZpbmcoZSl7Y29uc3QgdD10aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmZpbHRlcigodD0+LTEhPT1lLmluZGV4T2YodC5hdHRyaWJ1dGVzLm1pZCkpKTtpZih0Lmxlbmd0aCE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIk1lZGlhRGVzY3JpcHRpb25zJyBsZW5ndGggZG9lc24ndCBtYXRjaCBtaWRzJ3MgbGVuZ3RoIHdoZW4gY2FsbGluZyBSZW1vdGVTRFAucmVjZWl2ZS5cIik7dC5mb3JFYWNoKChlPT57ZS5tZWRpYS5wb3J0PVwiMFwiLGUuYXR0cmlidXRlcy5kaXJlY3Rpb249XCJpbmFjdGl2ZVwifSkpLHRoaXMudXBkYXRlQnVuZGxlTWlkcygpfWFkZFJlbW90ZUNhbmRpZGF0ZShlKXtjb25zdHtmb3VuZGF0aW9uOnQscHJvdG9jb2w6aSxhZGRyZXNzOm4scG9ydDpyLHR5cGU6byxyZWxhdGVkQWRkcmVzczpzLHJlbGF0ZWRQb3J0OmEscHJpb3JpdHk6Y309bmV3IFJUQ0ljZUNhbmRpZGF0ZShlKSxkPXtmb3VuZGF0aW9uOm51bGwhPXQ/dDpcIlwiLGNvbXBvbmVudElkOlwiMVwiLHRyYW5zcG9ydDpudWxsIT1pP2k6XCJcIixwcmlvcml0eTpjP2MrXCJcIjpcIlwiLGNvbm5lY3Rpb25BZGRyZXNzOm51bGwhPW4/bjpcIlwiLHBvcnQ6cj9yK1wiXCI6XCJcIix0eXBlOm8/bytcIlwiOlwiXCIscmVsQWRkcjpudWxsIT1zP3M6XCJcIixyZWxQb3J0OmE/YStcIlwiOlwiXCIsZXh0ZW5zaW9uOnt9fTt0aGlzLmNhbmRpZGF0ZXMuc29tZSgoZT0+ZS5wcmlvcml0eT09PWQucHJpb3JpdHkmJmUuY29ubmVjdGlvbkFkZHJlc3M9PT1kLmNvbm5lY3Rpb25BZGRyZXNzJiZlLnBvcnQ9PT1kLnBvcnQpKXx8KHRoaXMuX2NhbmRpZGF0ZXMucHVzaChkKSx0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmZvckVhY2goKGU9PntlLmF0dHJpYnV0ZXMuY2FuZGlkYXRlcz10aGlzLmNhbmRpZGF0ZXN9KSkpfWNsZWFyUmVtb3RlQ2FuZGlkYXRlKCl7dGhpcy5fY2FuZGlkYXRlcz1bXSx0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zWzBdLmF0dHJpYnV0ZXMuY2FuZGlkYXRlcz10aGlzLl9jYW5kaWRhdGVzfWNyZWF0ZU9yUmVjeWNsZVJlY3ZNZWRpYShlLHQsaSxuLHIpe2NvbnN0IG89ZS5fbWVkaWFTdHJlYW1UcmFjay5raW5kLHM9dGhpcy5ydHBDYXBhYmlsaXRpZXMucmVjdixhPXN4KG8scyx0aGlzLmxvY2FsQ2FwYWJpbGl0aWVzLnNlbmQsbz09PWRPLkFVRElPP3I6biksYz1vPT09ZE8uVklERU8/cy52aWRlb0V4dGVuc2lvbnM6cy5hdWRpb0V4dGVuc2lvbnMsZD1cIlwiLmNvbmNhdCgrK3RoaXMuY3VycmVudE1pZEluZGV4KTtsZXQgbD17bWVkaWE6e21lZGlhVHlwZTpvLHBvcnQ6XCI5XCIscHJvdG9zOltcIlVEUFwiLFwiVExTXCIsXCJSVFBcIixcIlNBVlBGXCJdLGZtdHM6YS5tYXAoKGU9PmUucGF5bG9hZFR5cGUudG9TdHJpbmcoMTApKSl9LGNvbm5lY3Rpb25zOlt7bmV0dHlwZTpcIklOXCIsYWRkcnR5cGU6XCJJUDRcIixhZGRyZXNzOlwiMTI3LjAuMC4xXCJ9XSxiYW5kd2lkdGhzOltdLGF0dHJpYnV0ZXM6e2ljZVVmcmFnOnRoaXMuaWNlUGFyYW1ldGVycy5pY2VVZnJhZyxpY2VQd2Q6dGhpcy5pY2VQYXJhbWV0ZXJzLmljZVB3ZCx1bnJlY29nbml6ZWQ6W10sY2FuZGlkYXRlczpbXSxleHRtYXBzOmMsZmluZ2VycHJpbnRzOnRoaXMuZHRsc1BhcmFtZXRlcnMuZmluZ2VycHJpbnRzLGltYWdlYXR0cjpbXSxtc2lkczpbXSxyZW1vdGVDYW5kaWRhdGVzTGlzdDpbXSxyaWRzOltdLHNzcmNzOnQsc3NyY0dyb3VwczpbXSxydGNwRmVlZGJhY2tXaWxkY2FyZHM6W10scGF5bG9hZHM6YSxydGNwOntwb3J0OlwiOVwiLG5ldFR5cGU6XCJJTlwiLGFkZHJlc3NUeXBlOlwiSVA0XCIsYWRkcmVzczpcIjAuMC4wLjBcIn0sc2V0dXA6dGhpcy5zZXR1cCxkaXJlY3Rpb246aSxydGNwTXV4OiEwLHJ0Y3BSc2l6ZTohMCxtaWQ6XCJcIi5jb25jYXQoZCl9fTtsPXRoaXMubXVuZ1JlY3ZNZWRpYURzZWMobCxlKTtjb25zdCB1PXRoaXMuZmluZEZpcnN0Q2xvc2VkTWVkaWEobyk7aWYodSl7Y29uc3QgZT10aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmluZGV4T2YodSk7dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9uc1tlXT1sfWVsc2UgdGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5wdXNoKGwpO3JldHVybiBsfW11dGVSZW1vdGUoZSl7Y29uc3QgdD10aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmZpbHRlcigodD0+RG4oZSkuY2FsbChlLHQuYXR0cmlidXRlcy5taWR8fFwiXCIpKSk7aWYodC5sZW5ndGghPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJtZWRpYURlc2NyaXB0aW9ucycgbGVuZ3RoIGRvZXNuJ3QgbWF0Y2ggbWlkcycgbGVuZ3RoIHdoZW4gY2FsbGluZyBSZW1vdGVTRFAubXV0ZVJlbW90ZS5cIik7dC5mb3JFYWNoKChlPT57ZS5hdHRyaWJ1dGVzLmRpcmVjdGlvbj1cImluYWN0aXZlXCJ9KSl9dW5tdXRlUmVtb3RlKGUpe2NvbnN0IHQ9dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5maWx0ZXIoKHQ9PkRuKGUpLmNhbGwoZSx0LmF0dHJpYnV0ZXMubWlkfHxcIlwiKSkpO2lmKHQubGVuZ3RoIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwibWVkaWFEZXNjcmlwdGlvbnMnIGxlbmd0aCBkb2Vzbid0IG1hdGNoIG1pZHMnIGxlbmd0aCB3aGVuIGNhbGxpbmcgUmVtb3RlU0RQLm11dGVSZW1vdGUuXCIpO3QuZm9yRWFjaCgoZT0+e2UuYXR0cmlidXRlcy5kaXJlY3Rpb249XCJyZWN2b25seVwifSkpfWZpbmRBdmFpbGFibGVNZWRpYUluZGV4KGUsdCxpKXtyZXR1cm4gdGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5maW5kSW5kZXgoKG49Pntjb25zdCByPW4ubWVkaWEubWVkaWFUeXBlPT09ZSYmXCIwXCIhPT1uLm1lZGlhLnBvcnQmJihcInNlbmRvbmx5XCI9PT1uLmF0dHJpYnV0ZXMuZGlyZWN0aW9ufHxcInNlbmRyZWN2XCI9PT1uLmF0dHJpYnV0ZXMuZGlyZWN0aW9uKSYmMD09PW4uYXR0cmlidXRlcy5zc3Jjcy5sZW5ndGg7aWYoWnYoKSl7aWYocil7Y29uc3QgZT10aGlzLmZpcmVmb3hTc3JjTWlkTWFwLmdldCh0WzBdLnNzcmNJZCk7cmV0dXJuIShlfHxcIjBcIiE9PW4uYXR0cmlidXRlcy5taWQmJlwiMVwiIT09bi5hdHRyaWJ1dGVzLm1pZCl8fCEoIWV8fGUhPT1uLmF0dHJpYnV0ZXMubWlkKX1yZXR1cm4hMX1yZXR1cm4gciYmbi5hdHRyaWJ1dGVzLm1pZD09PWl9KSl9ZmluZEF2YWlsYWJsZVJlY3ZNZWRpYUluZGV4KGUpe3JldHVybiB0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmZpbmRJbmRleCgodD0+e2NvbnN0IGk9dC5tZWRpYS5tZWRpYVR5cGU9PT1lJiZcIjBcIiE9PXQubWVkaWEucG9ydCYmKFwicmVjdm9ubHlcIj09PXQuYXR0cmlidXRlcy5kaXJlY3Rpb258fFwic2VuZHJlY3ZcIj09PXQuYXR0cmlidXRlcy5kaXJlY3Rpb24pO3JldHVyblwiMFwiIT09dC5hdHRyaWJ1dGVzLm1pZCYmXCIxXCIhPT10LmF0dHJpYnV0ZXMubWlkJiZpfSkpfXByZWRpY3RSZWNlaXZpbmdNaWRzKGUpe2NvbnN0IHQ9W107Zm9yKGxldCBpPTA7aTxlO2krKyl0LnB1c2goKHRoaXMuY3VycmVudE1pZEluZGV4K2krMSkudG9TdHJpbmcoMTApKTtyZXR1cm4gdH1yZXN0YXJ0SUNFKGUpe2U9c0EoZSksdGhpcy5faWNlUGFyYW1ldGVycz1lLHRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuZm9yRWFjaCgodD0+e3QuYXR0cmlidXRlcy5pY2VVZnJhZz1lLmljZVVmcmFnLHQuYXR0cmlidXRlcy5pY2VQd2Q9ZS5pY2VQd2R9KSl9Y3JlYXRlT3JSZWN5Y2xlU2VuZE1lZGlhKGUsdCxpLG4scixvKXtjb25zdCBzPXRoaXMucnRwQ2FwYWJpbGl0aWVzLnNlbmQsYT1lPT09ZE8uVklERU8/cy52aWRlb0NvZGVjczpzLmF1ZGlvQ29kZWNzLGM9ZT09PWRPLlZJREVPP3MudmlkZW9FeHRlbnNpb25zOnMuYXVkaW9FeHRlbnNpb25zO1p2KCkmJihyPVwiXCIuY29uY2F0KCsrdGhpcy5jdXJyZW50TWlkSW5kZXgpKTtsZXQgZD17bWVkaWE6e21lZGlhVHlwZTplLHBvcnQ6XCI5XCIscHJvdG9zOltcIlVEUFwiLFwiVExTXCIsXCJSVFBcIixcIlNBVlBGXCJdLGZtdHM6YS5tYXAoKGU9PmUucGF5bG9hZFR5cGUudG9TdHJpbmcoMTApKSl9LGNvbm5lY3Rpb25zOlt7bmV0dHlwZTpcIklOXCIsYWRkcnR5cGU6XCJJUDRcIixhZGRyZXNzOlwiMTI3LjAuMC4xXCJ9XSxiYW5kd2lkdGhzOltdLGF0dHJpYnV0ZXM6e2ljZVVmcmFnOnRoaXMuaWNlUGFyYW1ldGVycy5pY2VVZnJhZyxpY2VQd2Q6dGhpcy5pY2VQYXJhbWV0ZXJzLmljZVB3ZCx1bnJlY29nbml6ZWQ6W10sY2FuZGlkYXRlczpbXSxleHRtYXBzOmMsZmluZ2VycHJpbnRzOnRoaXMuZHRsc1BhcmFtZXRlcnMuZmluZ2VycHJpbnRzLGltYWdlYXR0cjpbXSxtc2lkczpbXSxyZW1vdGVDYW5kaWRhdGVzTGlzdDpbXSxyaWRzOltdLHNzcmNzOnQsc3NyY0dyb3VwczppLHJ0Y3BGZWVkYmFja1dpbGRjYXJkczpbXSxwYXlsb2FkczphLHJ0Y3A6e3BvcnQ6XCI5XCIsbmV0VHlwZTpcIklOXCIsYWRkcmVzc1R5cGU6XCJJUDRcIixhZGRyZXNzOlwiMC4wLjAuMFwifSxzZXR1cDp0aGlzLnNldHVwLGRpcmVjdGlvbjpuLHJ0Y3BNdXg6ITAscnRjcFJzaXplOiEwLG1pZDpyfX07ZD10aGlzLm11bmdTZW5kTWVkaWFEZXNjKGQsbyk7Y29uc3QgbD10aGlzLmZpbmRGaXJzdENsb3NlZE1lZGlhKGUpO2lmKGwpe2NvbnN0IGU9dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5pbmRleE9mKGwpO3RoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnNbZV09ZH1lbHNlIHRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMucHVzaChkKTtyZXR1cm4gZH1tdW5nUmVjdk1lZGlhRHNlYyhlLHQsaSl7Y29uc3Qgbj1zQShlKTtyZXR1cm4gWFUobiksSlUobix0KSxRVShuLHQpLFpVKG4pLCRVKG4saSx0aGlzLmxvY2FsQ2FwYWJpbGl0aWVzLnNlbmQpLG59bXVuZ1NlbmRNZWRpYURlc2MoZSx0KXtjb25zdCBpPXNBKGUpO3JldHVybiAkVShpLHQsdGhpcy5sb2NhbENhcGFiaWxpdGllcy5yZWN2KSxveChpKSxpfXVwZGF0ZVJlY3ZNZWRpYShlLHQpe2NvbnN0IGk9dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5maW5kSW5kZXgoKHQ9PnQuYXR0cmlidXRlcy5taWQ9PT1lKSk7aWYoLTEhPT1pKXtjb25zdCBlPXRoaXMubXVuZ1JlY3ZNZWRpYURzZWModGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9uc1tpXSx0KTt0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zW2ldPWV9fXVwZGF0ZUJ1bmRsZU1pZHMoKXt0aGlzLnNlc3Npb25EZXNjLmF0dHJpYnV0ZXMuZ3JvdXBzWzBdLmlkZW50aWZpY2F0aW9uVGFnPXRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuZmlsdGVyKChlPT5cIjBcIiE9PWUubWVkaWEucG9ydCkpLm1hcCgoZT0+ZS5hdHRyaWJ1dGVzLm1pZCkpfWZpbmRQcmVsb2FkTWVkaWFEZXNjKGUpe3JldHVybiB0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmZpbmQoKHQ9Pnt2YXIgaTtyZXR1cm4obnVsbD09PShpPXQuYXR0cmlidXRlcyl8fHZvaWQgMD09PWl8fG51bGw9PT0oaT1pLnNzcmNzWzBdKXx8dm9pZCAwPT09aT92b2lkIDA6aS5zc3JjSWQpPT09ZVswXS5zc3JjSWR9KSl9ZmluZEZpcnN0Q2xvc2VkTWVkaWEoZSl7cmV0dXJuIHRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuZmluZCgodD0+WnYoKT9cIjBcIj09PXQubWVkaWEucG9ydCYmdC5tZWRpYS5tZWRpYVR5cGU9PT1lOlwiMFwiPT09dC5tZWRpYS5wb3J0KSl9fTtjb25zdCBGVj1bXCJzZHBcIl07dmFyIEJWO2Z1bmN0aW9uIGpWKGUsdCl7dmFyIGk9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYobj1uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxpLnB1c2guYXBwbHkoaSxuKX1yZXR1cm4gaX1mdW5jdGlvbiBHVihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgaT1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj9qVihPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0ZnKGUsdCxpW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGkpKTpqVihPYmplY3QoaSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLHQpKX0pKX1yZXR1cm4gZX1sZXQgV1Y9KEJWPWNsYXNzIGUgZXh0ZW5kcyBhT3tnZXQgY3VycmVudExvY2FsRGVzY3JpcHRpb24oKXtyZXR1cm4gdGhpcy5wZWVyQ29ubmVjdGlvbi5jdXJyZW50TG9jYWxEZXNjcmlwdGlvbn1nZXQgY3VycmVudFJlbW90ZURlc2NyaXB0aW9uKCl7cmV0dXJuIHRoaXMucGVlckNvbm5lY3Rpb24uY3VycmVudFJlbW90ZURlc2NyaXB0aW9ufWdldCBwZWVyQ29ubmVjdGlvblN0YXRlKCl7cmV0dXJuIHRoaXMucGVlckNvbm5lY3Rpb24uY29ubmVjdGlvblN0YXRlfWdldCBpY2VDb25uZWN0aW9uU3RhdGUoKXtyZXR1cm4gdGhpcy5wZWVyQ29ubmVjdGlvbi5pY2VDb25uZWN0aW9uU3RhdGV9Z2V0IGR0bHNUcmFuc3BvcnRTdGF0ZSgpe3ZhciBlLHQ7cmV0dXJuIG51bGwhPT0oZT1udWxsPT09KHQ9dGhpcy5wZWVyQ29ubmVjdGlvbi5nZXRSZWNlaXZlcnMoKVswXSl8fHZvaWQgMD09PXR8fG51bGw9PT0odD10LnRyYW5zcG9ydCl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuc3RhdGUpJiZ2b2lkIDAhPT1lP2U6bnVsbH1nZXQgbG9jYWxDb2RlY3MoKXtyZXR1cm5bXX1zZXQgaXNJblJlc3RhcnRJY2UoZSl7dGhpcy5faXNJblJlc3RhcnRJY2U9ZX1nZXQgaXNJblJlc3RhcnRJY2UoKXtyZXR1cm4gdGhpcy5faXNJblJlc3RhcnRJY2V9Y29uc3RydWN0b3IodCxpLG4pe3N1cGVyKHQsaSksRmcodGhpcyxcImRpcmVjdGlvblwiLHZvaWQgMCksRmcodGhpcyxcIm5hbWVcIix2b2lkIDApLEZnKHRoaXMsXCJzdG9yZVwiLHZvaWQgMCksRmcodGhpcyxcInNwZWNcIix2b2lkIDApLEZnKHRoaXMsXCJwZWVyQ29ubmVjdGlvblwiLHZvaWQgMCksRmcodGhpcyxcImluaXRpYWxPZmZlclwiLHZvaWQgMCksRmcodGhpcyxcInRyYW5zcG9ydFwiLHZvaWQgMCksRmcodGhpcyxcInN0YXRzRmlsdGVyXCIsdm9pZCAwKSxGZyh0aGlzLFwibG9jYWxDYW5kaWRhdGVDb3VudFwiLDApLEZnKHRoaXMsXCJfaXNJblJlc3RhcnRJY2VcIiwhMSksRmcodGhpcyxcIm11dGV4XCIsbmV3IE5BKFwiUDJQQ29ubmVjdGlvbi1tdXRleFwiKSksRmcodGhpcyxcIm9uTG9jYWxDYW5kaWRhdGVcIix2b2lkIDApLEZnKHRoaXMsXCJyZW1vdGVTRFBcIix2b2lkIDApLEZnKHRoaXMsXCJwZW5kaW5nQ2FuZGlkYXRlc1wiLFtdKSxGZyh0aGlzLFwibG9jYWxDYXBhYmlsaXRpZXNcIix2b2lkIDApLEZnKHRoaXMsXCJpc1JlYWR5XCIsITEpLEZnKHRoaXMsXCJyZXN0YXJ0Q250XCIsMCksRmcodGhpcyxcImN1clR1cm5TZXJ2ZXJJbmRleFwiLDApLHRoaXMuc3RvcmU9aSx0aGlzLnNwZWM9dCx0aGlzLnBlZXJDb25uZWN0aW9uPW5ldyBSVENQZWVyQ29ubmVjdGlvbihlLnJlc29sdmVQQ0NvbmZpZ3VyYXRpb24odCxpLnAycFRyYW5zcG9ydCkse29wdGlvbmFsOlt7Z29vZ0RzY3A6ITB9XX0pLHRoaXMuZGlyZWN0aW9uPW51bGwhPW4/bjpNdy5TRU5EX09OTFksdGhpcy5uYW1lPXRoaXMuZGlyZWN0aW9uPT09TXcuU0VORF9PTkxZP1wic2VuZFAyUENvbm5lY3Rpb25cIjpcInJlY3ZQMlBDb25uZWN0aW9uXCIsdGhpcy5zdGF0c0ZpbHRlcj14Vih0aGlzLnBlZXJDb25uZWN0aW9uLFhBKFwiU1RBVFNfVVBEQVRFX0lOVEVSVkFMXCIpLHZvaWQgMCxadigpPzEyMDA6dm9pZCAwKSx0aGlzLmJpbmRQQ0V2ZW50cygpLHRoaXMuYmluZFN0YXRzRXZlbnRzKCksdGhpcy5zdG9yZS5wMnBJZD10aGlzLnN0b3JlLnAycElkKzF9YXN5bmMgZXN0YWJsaXNoKGUpe3RyeXtjb25zdCB0PWF3YWl0IHR4KCk7aWYodGhpcy5sb2NhbENhcGFiaWxpdGllcz1yeCh0KSxlKXtjb25zdHtzZHA6dH09ZSxpPW1WKGUsRlYpLG49ZnVuY3Rpb24oKXtjb25zdCBlPXthdWRpb0NvZGVjczpbXSx2aWRlb0NvZGVjczpbXSxhdWRpb0V4dGVuc2lvbnM6W10sdmlkZW9FeHRlbnNpb25zOltdfSx0PVdVKGFyZ3VtZW50cy5sZW5ndGg+Mj9hcmd1bWVudHNbMl06dm9pZCAwLGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSxhcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e30sXCJzZW5kb25seVwiKSxpPXthdWRpb0NvZGVjczpbXSxhdWRpb0V4dGVuc2lvbnM6W10sdmlkZW9Db2RlY3M6W10sdmlkZW9FeHRlbnNpb25zOltdfSxuPXthdWRpb0NvZGVjczpbXSxhdWRpb0V4dGVuc2lvbnM6W10sdmlkZW9Db2RlY3M6W10sdmlkZW9FeHRlbnNpb25zOltdfSxyPXthdWRpb0NvZGVjczpbXSxhdWRpb0V4dGVuc2lvbnM6W10sdmlkZW9Db2RlY3M6W10sdmlkZW9FeHRlbnNpb25zOltdfTtpZihueCh0LGUsXCJ2aWRlb0V4dGVuc2lvbnNcIixpLG4sciksbngodCxlLFwidmlkZW9Db2RlY3NcIixpLG4sciksbngodCxlLFwiYXVkaW9FeHRlbnNpb25zXCIsaSxuLHIpLG54KHQsZSxcImF1ZGlvQ29kZWNzXCIsaSxuLHIpLFhBKFwiUkFJU0VfSDI2NF9CQVNFTElORV9QUklPUklUWVwiKSl7Y29uc3QgZT1yLnZpZGVvQ29kZWNzLmZpbmRJbmRleCgoZT0+ZS5ydHBNYXAmJlwiaDI2NFwiPT09ZS5ydHBNYXAuZW5jb2RpbmdOYW1lLnRvTG9jYWxlTG93ZXJDYXNlKCkmJmUuZm10cCYmXCI0MjAwMWZcIj09PWUuZm10cC5wYXJhbWV0ZXJzW1wicHJvZmlsZS1sZXZlbC1pZFwiXSkpO2lmKC0xIT09ZSl7Y29uc3QgdD1yLnZpZGVvQ29kZWNzLmZpbmRJbmRleCgoZT0+ZS5ydHBNYXAmJlwiaDI2NFwiPT09ZS5ydHBNYXAuZW5jb2RpbmdOYW1lLnRvTG9jYWxlTG93ZXJDYXNlKCkpKTtpZih0PGUpe2ZiLmRlYnVnKFwicmFpc2luZyBIMjY0IGJhc2VsaW5lIHByb2ZpbGUgcHJpb3JpdHlcIik7Y29uc3QgaT1yLnZpZGVvQ29kZWNzW2VdO3IudmlkZW9Db2RlY3Muc3BsaWNlKGUsMSksci52aWRlb0NvZGVjcy5zcGxpY2UodCwwLGkpfS0xIT09dCYmWEEoXCJGSUxURVJfU0VORF9IMjY0X0JBU0VMSU5FXCIpJiYoaS52aWRlb0NvZGVjcz1pLnZpZGVvQ29kZWNzLmZpbHRlcigoZT0+IShlLnJ0cE1hcCYmXCJoMjY0XCI9PT1lLnJ0cE1hcC5lbmNvZGluZ05hbWUudG9Mb2NhbGVMb3dlckNhc2UoKSYmZS5mbXRwJiZcIjQyMDAxZlwiIT09ZS5mbXRwLnBhcmFtZXRlcnNbXCJwcm9maWxlLWxldmVsLWlkXCJdKSkpKX19cmV0dXJue3NlbmQ6aSxyZWN2Om4sc2VuZHJlY3Y6cn19KHt9LHt9LHQpO3RoaXMucmVtb3RlU0RQPW5ldyBWVih7cmVtb3RlSWNlUGFyYW1ldGVyczppLmljZVBhcmFtZXRlcnMscmVtb3RlRHRsc1BhcmFtZXRlcnM6aS5kdGxzUGFyYW1ldGVycyxjYW5kaWRhdGVzOltdLHJlbW90ZVJUUENhcGFiaWxpdGllczpuLGxvY2FsQ2FwYWJpbGl0aWVzOnRoaXMubG9jYWxDYXBhYmlsaXRpZXMsZGlyZWN0aW9uOnRoaXMuZGlyZWN0aW9uLHNldHVwOlwiYWN0cGFzc1wiLHZpZGVvQ29kZWM6dGhpcy5zdG9yZS5jb2RlYyxhdWRpb0NvZGVjOnRoaXMuc3RvcmUuYXVkaW9Db2RlY30pLGF3YWl0IHRoaXMuc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJvZmZlclwiLHNkcDp0aGlzLnJlbW90ZVNEUC50b1N0cmluZygpfSksdGhpcy5pc1JlYWR5PSEwO2NvbnN0IHI9YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5jcmVhdGVBbnN3ZXIoKTtpZighci5zZHApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGdldCBhbnN3ZXIgc2RwIHdoZW4gdHJ5aW5nIHRvIGVzdGFibGlzaCBQZWVyQ29ubmVjdGlvbi5cIik7Y29uc3Qgbz1IVShyLnNkcCk7YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRMb2NhbERlc2NyaXB0aW9uKHIpO2NvbnN0IHM9YXdhaXQgaXgoe30se30sci5zZHApO3RoaXMubG9jYWxDYXBhYmlsaXRpZXM9cngocyk7Y29uc3QgYT10aGlzLnBlZXJDb25uZWN0aW9uLmdldFRyYW5zY2VpdmVycygpWzBdO3JldHVybiBudWxsIT1hJiZhLnJlY2VpdmVyJiZhLnJlY2VpdmVyLnRyYW5zcG9ydCYmdGhpcy50cnlCaW5kVHJhbnNwb3J0RXZlbnRzKGEucmVjZWl2ZXIudHJhbnNwb3J0KSxHVihHVih7fSxvKSx7fSx7c2RwOnIuc2RwfSl9e3RoaXMucGVlckNvbm5lY3Rpb24uYWRkVHJhbnNjZWl2ZXIoXCJ2aWRlb1wiLHtkaXJlY3Rpb246XCJzZW5kb25seVwifSksdGhpcy5wZWVyQ29ubmVjdGlvbi5hZGRUcmFuc2NlaXZlcihcImF1ZGlvXCIse2RpcmVjdGlvbjpcInNlbmRvbmx5XCJ9KTtjb25zdCBlPWF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uY3JlYXRlT2ZmZXIoKTtpZighZS5zZHApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGdldCBpbml0aWFsT2ZmZXIuc2RwIHdoZW4gdHJ5aW5nIHRvIGVzdGFibGlzaCBQZWVyQ29ubmVjdGlvbi5cIik7Y29uc3QgdD1IVShlLnNkcCk7cmV0dXJuIHRoaXMuaW5pdGlhbE9mZmVyPWUsR1YoR1Yoe30sdCkse30se3NkcDplLnNkcH0pfX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuR0VUX0xPQ0FMX0NPTk5FQ1RJT05fUEFSQU1TX0ZBSUxFRCxlLnRvU3RyaW5nKCkpfX1hc3luYyBjb25uZWN0KGUpe3RyeXtpZighdGhpcy5pbml0aWFsT2ZmZXIpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGVzdGFibGlzaCBQMlBDb25uZWN0aW9uIHdpdGhvdXQgaW5pdGlhbCBvZmZlci5cIik7YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRMb2NhbERlc2NyaXB0aW9uKHRoaXMuaW5pdGlhbE9mZmVyKTtjb25zdHtzZHA6dCxpY2VQYXJhbWV0ZXJzOmksZHRsc1BhcmFtZXRlcnM6bn09ZSxyPWF3YWl0IGl4KHt9LHt9LHQpO3RoaXMucmVtb3RlU0RQPW5ldyBWVih7cmVtb3RlSWNlUGFyYW1ldGVyczppLHJlbW90ZUR0bHNQYXJhbWV0ZXJzOm4sY2FuZGlkYXRlczpbXSxyZW1vdGVSVFBDYXBhYmlsaXRpZXM6cixsb2NhbENhcGFiaWxpdGllczp0aGlzLmxvY2FsQ2FwYWJpbGl0aWVzLGRpcmVjdGlvbjp0aGlzLmRpcmVjdGlvbixzZXR1cDpcImFjdGl2ZVwiLHZpZGVvQ29kZWM6dGhpcy5zdG9yZS5jb2RlYyxhdWRpb0NvZGVjOnRoaXMuc3RvcmUuYXVkaW9Db2RlY30pLGF3YWl0IHRoaXMuc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJhbnN3ZXJcIixzZHA6dGhpcy5yZW1vdGVTRFAudG9TdHJpbmcoKX0pO2NvbnN0IG89dGhpcy5wZWVyQ29ubmVjdGlvbi5nZXRUcmFuc2NlaXZlcnMoKVswXTtudWxsIT1vJiZvLnNlbmRlciYmby5zZW5kZXIudHJhbnNwb3J0JiZ0aGlzLnRyeUJpbmRUcmFuc3BvcnRFdmVudHMoby5zZW5kZXIudHJhbnNwb3J0KX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuRVhDSEFOR0VfU0RQX0ZBSUxFRCxcIlAyUENvbm5lY3Rpb24uY29ubmVjdCBmYWlsZWQ7IFwiLmNvbmNhdChlLnRvU3RyaW5nKCkpKX19YXN5bmMgYWRkUmVtb3RlQ2FuZGlkYXRlKGUpe3RyeXtlJiZ0aGlzLnBlbmRpbmdDYW5kaWRhdGVzLnB1c2goZSksdGhpcy5wZWVyQ29ubmVjdGlvbi5yZW1vdGVEZXNjcmlwdGlvbiYmdGhpcy5pc1JlYWR5JiYodGhpcy5wZW5kaW5nQ2FuZGlkYXRlcy5mb3JFYWNoKChlPT57dGhpcy5wZWVyQ29ubmVjdGlvbi5hZGRJY2VDYW5kaWRhdGUoZSl9KSksdGhpcy5wZW5kaW5nQ2FuZGlkYXRlcz1bXSl9Y2F0Y2goZSl7dGhyb3cgbmV3IEN5KFJ5LkFERF9DQU5ESURBVEVfRkFJTEVELFwiUDJQQ29ubmVjdGlvbi5hZGRSZW1vdGVDYW5kaWRhdGUgZmFpbGVkOyBcIi5jb25jYXQoZS50b1N0cmluZygpKSl9fXNlbmQoZSx0LGkpe3ZhciBuPXRoaXM7cmV0dXJuIFlJKChmdW5jdGlvbiooKXtjb25zdCByPXlpZWxkIHFJKG4ubXV0ZXgubG9jayhcIkZyb20gUDJQQ29ubmVjdGlvbi5zZW5kXCIpKTt0cnl7aWYoIW4ucmVtb3RlU0RQKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjYWxsIFAyUENvbm5lY3Rpb24uc2VuZCBiZWZvcmUgcmVtb3RlIFNEUCBjcmVhdGVkXCIpO2NvbnN0IG89W10scz1uLnJlbW90ZVNEUC5yZWNlaXZlKGUsdCxpKTtlLmZvckVhY2goKChlLHQpPT57aWYoc1t0XS5uZWVkQ3JlYXRlVHJhbnNjZWl2ZXIpe2NvbnN0IHQ9bi5wZWVyQ29ubmVjdGlvbi5hZGRUcmFuc2NlaXZlcihlLl9tZWRpYVN0cmVhbVRyYWNrLHtkaXJlY3Rpb246XCJzZW5kb25seVwifSk7by5wdXNoKHQpLGUuX3VwZGF0ZVJ0cFRyYW5zY2VpdmVyKHQpfWVsc2V7Y29uc3QgaT1uLnBlZXJDb25uZWN0aW9uLmdldFRyYW5zY2VpdmVycygpLmZpbmQoKGU9PmUubWlkPT09c1t0XS5taWQpKTtpZighaSl0aHJvdyBuZXcgRXJyb3IoXCJjYW5ub3QgZmluZCB0cmFuc2NlaXZlciB3aGVuIHNlbmRQZWVyY29ubmVjdGlvbiBzZW5kLCBtaWQgaXMgXCIuY29uY2F0KHNbdF0ubWlkKSk7by5wdXNoKGkpLGUuX3VwZGF0ZVJ0cFRyYW5zY2VpdmVyKGkpfX0pKSxadigpJiYhMD09PVhBKFwiU0lNVUxDQVNUXCIpJiYoeWllbGQgcUkobi5hcHBseVNpbXVsY2FzdEZvckZpcmVmb3gobyxlKSkpO2NvbnN0IGE9cy5tYXAoKGU9PmUubWlkKSksYz15aWVsZCBxSShuLnBlZXJDb25uZWN0aW9uLmNyZWF0ZU9mZmVyKCkpLGQ9bi5tdW5nU2VuZE9mZmVyU0RQKGMuc2RwLGUsYSksbD1GVS5wYXJzZShkKSx1PWEubWFwKChlPT57Y29uc3QgdD1sLm1lZGlhRGVzY3JpcHRpb25zLmZpbmQoKHQ9PnQuYXR0cmlidXRlcy5taWQ9PT1lKSk7aWYoIXQpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGV4dHJhY3Qgc3NyYyBmcm9tIG1lZGlhRGVzY3JpcHRpb24uXCIpO3JldHVybiBLVSh0LFhBKFwiVVNFX1BVQl9SVFhcIikpfSkpLGg9by5tYXAoKChlLHQpPT57Y29uc3QgaT1hW3RdO3JldHVybntsb2NhbFNTUkM6dVt0XSxpZDppfX0pKTt5aWVsZCBxSShuLnBlZXJDb25uZWN0aW9uLnNldExvY2FsRGVzY3JpcHRpb24oe3R5cGU6XCJvZmZlclwiLHNkcDpkfSkpO3RyeXt5aWVsZCBofWNhdGNoKGUpe2NvbnN0IHQ9bi5yZW1vdGVTRFAudG9TdHJpbmcoKTt0aHJvdyB5aWVsZCBxSShuLnBlZXJDb25uZWN0aW9uLnNldExvY2FsRGVzY3JpcHRpb24oe3R5cGU6XCJvZmZlclwiLHNkcDpkfSkpLHlpZWxkIHFJKG4ucGVlckNvbm5lY3Rpb24uc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJhbnN3ZXJcIixzZHA6dH0pKSx5aWVsZCBxSShuLnN0b3BTZW5kaW5nKGEsITApKSxlfXlpZWxkIHFJKG4uYXBwbHlTaW11bGNhc3RFbmNvZGluZ3MobyxlKSkseWllbGQgcUkobi5hcHBseVNlbmRFbmNvZGluZ3MobyxlKSk7Y29uc3QgcD1uLnJlbW90ZVNEUC50b1N0cmluZygpLF89bi5sb2dTRFBFeGNoYW5nZShkLFwib2ZmZXJcIixcImxvY2FsXCIsXCJzZW5kXCIpO3JldHVybiBudWxsPT1ffHxfKHApLHlpZWxkIHFJKG4uc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJhbnN3ZXJcIixzZHA6cH0pKSxvLm1hcCgoKGUsdCk9Pntjb25zdCBpPWFbdF07cmV0dXJue2xvY2FsU1NSQzp1W3RdLGlkOml9fSkpfWNhdGNoKGUpe3Rocm93IGUgaW5zdGFuY2VvZiBDeT9lOm5ldyBDeShSeS5FWENIQU5HRV9TRFBfRkFJTEVELFwiUDJQQ29ubmVjdGlvbi5zZW5kIGZhaWxlZDsgXCIuY29uY2F0KGUudG9TdHJpbmcoKSkpfWZpbmFsbHl7cigpfX0pKSgpfWFzeW5jIHN0b3BTZW5kaW5nKGUsdCl7Y29uc3QgaT10P3ZvaWQgMDphd2FpdCB0aGlzLm11dGV4LmxvY2soXCJGcm9tIFAyUENvbm5lY3Rpb24uc3RvcFNlbmRpbmdcIik7dHJ5e2lmKCF0aGlzLnJlbW90ZVNEUCl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgY2FsbCBQMlBDb25uZWN0aW9uLnN0b3BTZW5kaW5nIGJlZm9yZSByZW1vdGUgU0RQIGNyZWF0ZWRcIik7Y29uc3QgdD10aGlzLnBlZXJDb25uZWN0aW9uLmdldFRyYW5zY2VpdmVycygpLmZpbHRlcigodD0+LTEhPT1lLmluZGV4T2YodC5taWQpKSk7aWYodC5sZW5ndGghPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJUcmFuc2NlaXZlcnMnIGxlbmd0aCAoXCIuY29uY2F0KHQubGVuZ3RoLFwiKSBkb2Vzbid0IG1hdGNoIG1pZHMnIGxlbmd0aCAoXCIpLmNvbmNhdChlLmxlbmd0aCxcIikgd2hlbiB0cnlpbmcgdG8gY2FsbCBQMlBDb25uZWN0aW9uLnN0b3BTZW5kaW5nLlwiKSk7dC5tYXAoKGU9Pnt2YXIgdDtlLmRpcmVjdGlvbj1cImluYWN0aXZlXCIsbnVsbD09PSh0PWUuc3RvcCl8fHZvaWQgMD09PXR8fHQuY2FsbChlKX0pKTtjb25zdCBuPWF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uY3JlYXRlT2ZmZXIoKSxyPXRoaXMubG9nU0RQRXhjaGFuZ2Uobi5zZHB8fFwiXCIsXCJvZmZlclwiLFwibG9jYWxcIixcInN0b3BTZW5kaW5nXCIpO2F3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbihuKSx0aGlzLnJlbW90ZVNEUC5zdG9wUmVjZWl2aW5nKGUpO2NvbnN0IG89dGhpcy5yZW1vdGVTRFAudG9TdHJpbmcoKTtudWxsPT1yfHxyKG8pLGF3YWl0IHRoaXMuc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJhbnN3ZXJcIixzZHA6b30pfWNhdGNoKGUpe3Rocm93IG5ldyBDeShSeS5FWENIQU5HRV9TRFBfRkFJTEVELFwiUDJQQ29ubmVjdGlvbi5zdG9wU2VuZGluZyBmYWlsZWQ7IFwiLmNvbmNhdChlLnRvU3RyaW5nKCkpKX1maW5hbGx5e2kmJmkoKX19YXN5bmMgcmVjZWl2ZShlLHQsaSxuKXt0cnl7aWYoIXRoaXMucmVtb3RlU0RQKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjYWxsIFAyUENvbm5lY3Rpb24ucmVjZWl2ZSBcIi5jb25jYXQoZSxcIiBiZWZvcmUgcmVtb3RlU0RQIGNyZWF0ZWQuXCIpKTtjb25zdHttaWQ6cixuZWVkRXhjaGFuZ2VTRFA6b309dGhpcy5yZW1vdGVTRFAuc2VuZChlLHQsaSxuKTtpZihvKXtjb25zdCB0PXRoaXMucmVtb3RlU0RQLnRvU3RyaW5nKCksaT10aGlzLmxvZ1NEUEV4Y2hhbmdlKHQsXCJvZmZlclwiLFwicmVtb3RlXCIsXCJyZWNlaXZlXCIpO2F3YWl0IHRoaXMuc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJvZmZlclwiLHNkcDp0fSk7Y29uc3Qgbj1hd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLmNyZWF0ZUFuc3dlcigpLG89dGhpcy5tdW5nUmVjZWl2ZUFuc3dlclNEUChuLnNkcCxyLGUpO251bGw9PWl8fGkob3x8XCJcIiksYXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRMb2NhbERlc2NyaXB0aW9uKHt0eXBlOlwiYW5zd2VyXCIsc2RwOm99KSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW1AyUENvbm5lY3Rpb25dIHJlY2VpdmUgXCIpLmNvbmNhdChlLFwiIGJ5IGV4Y2hhbmdpbmcgU0RQLlwiKSl9ZWxzZSBmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW1AyUENvbm5lY3Rpb25dIHJlY2VpdmUgXCIpLmNvbmNhdChlLFwiIG5vIG5lZWQgdG8gZXhjaGFuZ2UgU0RQLlwiKSk7Y29uc3Qgcz10aGlzLnBlZXJDb25uZWN0aW9uLmdldFRyYW5zY2VpdmVycygpLmZpbmQoKGU9PmUubWlkPT09cikpO2lmKCFzfHxudWxsPT09cy5taWQpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGdldCB0cmFuc2NlaXZlciBhZnRlciBzZXRMb2NhbERlc2NyaXB0aW9uLlwiKTtyZXR1cm57dHJhY2s6cy5yZWNlaXZlci50cmFjayxtaWQ6cy5taWQsdHJhbnNjZWl2ZXI6c319Y2F0Y2goZSl7dGhyb3cgbmV3IEN5KFJ5LkVYQ0hBTkdFX1NEUF9GQUlMRUQsXCJQMlBDb25uZWN0aW9uLnJlY2VpdmUgZmFpbGVkOyBcIi5jb25jYXQoZS50b1N0cmluZygpKSl9fWFzeW5jIG1vY2tSZWNlaXZlKGUsdCxpLG4pe3RyeXtpZighdGhpcy5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi5yZWNlaXZlIFwiLmNvbmNhdChlLFwiIGJlZm9yZSByZW1vdGVTRFAgY3JlYXRlZC5cIikpO2NvbnN0e21pZDpyLG5lZWRFeGNoYW5nZVNEUDpvfT10aGlzLnJlbW90ZVNEUC5zZW5kKGUsdCxpLG4pO2lmKG8pe2NvbnN0IHQ9dGhpcy5yZW1vdGVTRFAudG9TdHJpbmcoKSxpPXRoaXMubG9nU0RQRXhjaGFuZ2UodCxcIm9mZmVyXCIsXCJyZW1vdGVcIixcInJlY2VpdmVcIik7YXdhaXQgdGhpcy5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcIm9mZmVyXCIsc2RwOnR9KTtjb25zdCBuPWF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uY3JlYXRlQW5zd2VyKCksbz10aGlzLm11bmdSZWNlaXZlQW5zd2VyU0RQKG4uc2RwLHIsZSk7bnVsbD09aXx8aShvfHxcIlwiKSxhd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLnNldExvY2FsRGVzY3JpcHRpb24oe3R5cGU6XCJhbnN3ZXJcIixzZHA6b30pLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbUDJQQ29ubmVjdGlvbl0gcmVjZWl2ZSBcIikuY29uY2F0KGUsXCIgYnkgZXhjaGFuZ2luZyBTRFAuXCIpKX1lbHNlIGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbUDJQQ29ubmVjdGlvbl0gcmVjZWl2ZSBcIikuY29uY2F0KGUsXCIgbm8gbmVlZCB0byBleGNoYW5nZSBTRFAuXCIpKX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuRVhDSEFOR0VfU0RQX0ZBSUxFRCxcIlAyUENvbm5lY3Rpb24ucmVjZWl2ZSBmYWlsZWQ7IFwiLmNvbmNhdChlLnRvU3RyaW5nKCkpKX19YXN5bmMgc3RvcFJlY2VpdmluZyhlKXt0cnl7aWYoIXRoaXMucmVtb3RlU0RQKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjYWxsIFAyUENvbm5lY3Rpb24uc3RvcFJlY2VpdmluZyBiZWZvcmUgcmVtb3RlIFNEUCBjcmVhdGVkLlwiKTt0aGlzLnJlbW90ZVNEUC5zdG9wU2VuZGluZyhlKTtjb25zdCB0PXRoaXMucmVtb3RlU0RQLnRvU3RyaW5nKCksaT10aGlzLmxvZ1NEUEV4Y2hhbmdlKHQsXCJvZmZlclwiLFwicmVtb3RlXCIsXCJzdG9wUmVjZWl2aW5nXCIpO2F3YWl0IHRoaXMuc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJvZmZlclwiLHNkcDp0fSk7Y29uc3Qgbj1hd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLmNyZWF0ZUFuc3dlcigpO251bGw9PWl8fGkobi5zZHB8fFwiXCIpLGF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbihuKX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuRVhDSEFOR0VfU0RQX0ZBSUxFRCxcIlAyUENvbm5lY3Rpb24gc3RvcFJlY2VpdmluZyBmYWlsZWQ7IFwiLmNvbmNhdChlLnRvU3RyaW5nKCkpKX19YXN5bmMgcmVzdGFydElDRSh0KXt0cnl7aWYodGhpcy5zdG9yZS5wMnBUcmFuc3BvcnQ9PT1IQS5BdXRvJiYodGhpcy5zdG9yZS5wMnBUcmFuc3BvcnQ9SEEuU2RSdG4sWlAoKS5zdXBwb3J0UENTZXRDb25maWd1cmF0aW9uJiZ0aGlzLnBlZXJDb25uZWN0aW9uLnNldENvbmZpZ3VyYXRpb24oZS5yZXNvbHZlUENDb25maWd1cmF0aW9uKHRoaXMuc3BlYyx0aGlzLnN0b3JlLnAycFRyYW5zcG9ydCkpKSx0aGlzLnJlc3RhcnRDbnQ+MyYmKHRoaXMucmVzdGFydENudD0wLFpQKCkuc3VwcG9ydFBDU2V0Q29uZmlndXJhdGlvbiYmdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRDb25maWd1cmF0aW9uKGUucmVzb2x2ZVBDQ29uZmlndXJhdGlvbih0aGlzLnNwZWMsdGhpcy5zdG9yZS5wMnBUcmFuc3BvcnQsKyt0aGlzLmN1clR1cm5TZXJ2ZXJJbmRleCkpKSwhdCl7dGhpcy5yZXN0YXJ0Q250KyssdGhpcy5pc1JlYWR5PSExO2NvbnN0IGU9YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5jcmVhdGVPZmZlcih7aWNlUmVzdGFydDohMH0pO2lmKCFlLnNkcCl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgcmVzdGFydElDRSBiZWNhdXNlIHJlc3RhcnQgb2ZmZXIgU0RQIGRvZXMgbm90IGV4aXN0LlwiKTtjb25zdHtpY2VQYXJhbWV0ZXJzOnR9PUhVKGUuc2RwKTtyZXR1cm4gdGhpcy5zdG9yZS5kZXNjcmlwdGlvblN0YXJ0KCksdGhpcy5kaXJlY3Rpb249PT1Ndy5TRU5EX09OTFkmJmF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbihlKSx0fWlmKCF0aGlzLnJlbW90ZVNEUCl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgY2FsbCBQMlBDb25uZWN0aW9uLnN0b3BSZWNlaXZpbmcgYmVmb3JlIHJlbW90ZSBTRFAgY3JlYXRlZC5cIik7aWYodGhpcy5yZW1vdGVTRFAucmVzdGFydElDRSh0KSx0aGlzLnN0b3JlLmRlc2NyaXB0aW9uU3RhcnQoKSx0aGlzLmRpcmVjdGlvbj09PU13LlJFQ0VJVkVfT05MWSl7dGhpcy5yZXN0YXJ0Q250KyssYXdhaXQgdGhpcy5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcIm9mZmVyXCIsc2RwOnRoaXMucmVtb3RlU0RQLnRvU3RyaW5nKCl9KTtjb25zdCBlPWF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uY3JlYXRlQW5zd2VyKCk7aWYoIWUuc2RwKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBnZXQgYW5zd2VyIHNkcCB3aGVuIHRyeWluZyB0byBpY2VSZXN0YXJ0LlwiKTtjb25zdHtpY2VQYXJhbWV0ZXJzOnR9PUhVKGUuc2RwKTtyZXR1cm4gYXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRMb2NhbERlc2NyaXB0aW9uKGUpLHR9YXdhaXQgdGhpcy5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcImFuc3dlclwiLHNkcDp0aGlzLnJlbW90ZVNEUC50b1N0cmluZygpfSksdGhpcy5pc1JlYWR5PSEwfWNhdGNoKGUpe3Rocm93IG5ldyBDeShSeS5FWENIQU5HRV9TRFBfRkFJTEVELFwiUDJQQ29ubmVjdGlvbiBzdG9wUmVjZWl2aW5nIGZhaWxlZDsgXCIuY29uY2F0KGUudG9TdHJpbmcoKSkpfX1jbG9zZSgpe3ZhciBlO3RoaXMucGVlckNvbm5lY3Rpb24uY2xvc2UoKSx0aGlzLnBlZXJDb25uZWN0aW9uLm9uaWNlY2FuZGlkYXRlPW51bGwsbnVsbD09PShlPXRoaXMub25Db25uZWN0aW9uU3RhdGVDaGFuZ2UpfHx2b2lkIDA9PT1lfHxlLmNhbGwodGhpcyxcImNsb3NlZFwiKSx0aGlzLnRyeVVuYmluZFRyYW5zcG9ydEV2ZW50cygpLHRoaXMudW5iaW5kUENFdmVudHMoKSx0aGlzLnVuYmluZFN0YXRzRXZlbnRzKCksdGhpcy50cmFuc3BvcnQ9dm9pZCAwLHRoaXMuc3RhdHNGaWx0ZXIuZGVzdHJveSgpfWdldFN0YXRzKCl7cmV0dXJuIHRoaXMuc3RhdHNGaWx0ZXIuZ2V0U3RhdHMoKX1nZXRSZW1vdGVWaWRlb0lzUmVhZHkoZSl7cmV0dXJuIHRoaXMuc3RhdHNGaWx0ZXIuZ2V0VmlkZW9Jc1JlYWR5KGUpfWFzeW5jIHVwZGF0ZUVuY29kZXJDb25maWcoZSx0KXt0cnl7aWYoIXRoaXMucmVtb3RlU0RQKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjYWxsIFAyUENvbm5lY3Rpb24udXBkYXRlRW5jb2RlckNvbmZpZyBiZWZvcmUgcmVtb3RlIFNEUCBjcmVhdGVkLlwiKTtjb25zdCBpPWF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uY3JlYXRlT2ZmZXIoKSxuPXRoaXMubXVuZ1NlbmRPZmZlclNEUChpLnNkcCxbdF0sW2VdKTt0aGlzLnJlbW90ZVNEUC51cGRhdGVSZWN2TWVkaWEoZSx0KTtjb25zdCByPXRoaXMucmVtb3RlU0RQLnRvU3RyaW5nKCksbz10aGlzLmxvZ1NEUEV4Y2hhbmdlKG4sXCJvZmZlclwiLFwibG9jYWxcIixcInVwZGF0ZUVuY29kZXJDb25maWdcIik7YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRMb2NhbERlc2NyaXB0aW9uKHt0eXBlOlwib2ZmZXJcIixzZHA6bn0pLG51bGw9PW98fG8ociksYXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcImFuc3dlclwiLHNkcDpyfSl9Y2F0Y2goZSl7dGhyb3cgbmV3IEN5KFJ5LkVYQ0hBTkdFX1NEUF9GQUlMRUQsZS50b1N0cmluZygpKX19YXN5bmMgdXBkYXRlU2VuZFBhcmFtZXRlcnMoZSx0KXtjb25zdCBpPXRoaXMucGVlckNvbm5lY3Rpb24uZ2V0VHJhbnNjZWl2ZXJzKCkuZmlsdGVyKCh0PT50Lm1pZD09PWUpKTsxPT09aS5sZW5ndGgmJih0aGlzLmlzVlA4U2ltdWxjYXN0KHQpP1p2KCl8fGF3YWl0IHRoaXMuYXBwbHlTaW11bGNhc3RFbmNvZGluZ3MoaSxbdF0pOmF3YWl0IHRoaXMuYXBwbHlTZW5kRW5jb2RpbmdzKGksW3RdKSl9c2V0U3RhdHNSZW1vdGVWaWRlb0lzUmVhZHkoZSx0KXt0aGlzLnN0YXRzRmlsdGVyLnNldFZpZGVvSXNSZWFkeTIoZSx0KX1hc3luYyByZXBsYWNlVHJhY2soZSx0KXtjb25zdCBpPXRoaXMucGVlckNvbm5lY3Rpb24uZ2V0VHJhbnNjZWl2ZXJzKCkuZmluZCgoZT0+ZS5taWQ9PT10KSk7aSYmYXdhaXQgaS5zZW5kZXIucmVwbGFjZVRyYWNrKGUuX21lZGlhU3RyZWFtVHJhY2spfWFzeW5jIGdldFNlbGVjdGVkQ2FuZGlkYXRlUGFpcigpe2NvbnN0IGU9dGhpcy5wZWVyQ29ubmVjdGlvbi5nZXRSZWNlaXZlcnMoKTtpZihlLmxlbmd0aD4wJiZlWzBdLnRyYW5zcG9ydCYmZVswXS50cmFuc3BvcnQuaWNlVHJhbnNwb3J0JiZlWzBdLnRyYW5zcG9ydC5pY2VUcmFuc3BvcnQuZ2V0U2VsZWN0ZWRDYW5kaWRhdGVQYWlyJiZlWzBdLnRyYW5zcG9ydC5pY2VUcmFuc3BvcnQuZ2V0U2VsZWN0ZWRDYW5kaWRhdGVQYWlyKCkpe2NvbnN0IHQ9ZVswXS50cmFuc3BvcnQuaWNlVHJhbnNwb3J0LHtsb2NhbDppLHJlbW90ZTpufT10LmdldFNlbGVjdGVkQ2FuZGlkYXRlUGFpcigpO3JldHVybntsb2NhbDpHVihHVih7fSxSVikse30se2NhbmRpZGF0ZVR5cGU6aS50eXBlLHByb3RvY29sOmkucHJvdG9jb2wsYWRkcmVzczppLmFkZHJlc3MscG9ydDppLnBvcnR9KSxyZW1vdGU6R1YoR1Yoe30sUlYpLHt9LHtjYW5kaWRhdGVUeXBlOm4udHlwZSxwcm90b2NvbDpuLnByb3RvY29sLGFkZHJlc3M6bi5hZGRyZXNzLHBvcnQ6bi5wb3J0fSl9fXJldHVybiB0aGlzLnN0YXRzRmlsdGVyLmdldFNlbGVjdGVkQ2FuZGlkYXRlUGFpcigpfWJpbmRQQ0V2ZW50cygpe3RoaXMucGVlckNvbm5lY3Rpb24ub25pY2Vjb25uZWN0aW9uc3RhdGVjaGFuZ2U9KCk9Pnt2YXIgZSx0O0RuKGU9W1wiY29ubmVjdGVkXCIsXCJjb21wbGV0ZWRcIl0pLmNhbGwoZSx0aGlzLnBlZXJDb25uZWN0aW9uLmljZUNvbm5lY3Rpb25TdGF0ZSkmJih0aGlzLmlzUmVhZHk9ITEpLG51bGw9PT0odD10aGlzLm9uSUNFQ29ubmVjdGlvblN0YXRlQ2hhbmdlKXx8dm9pZCAwPT09dHx8dC5jYWxsKHRoaXMsdGhpcy5wZWVyQ29ubmVjdGlvbi5pY2VDb25uZWN0aW9uU3RhdGUpfSx0aGlzLnBlZXJDb25uZWN0aW9uLm9uY29ubmVjdGlvbnN0YXRlY2hhbmdlPSgpPT57dmFyIGU7XCJjb25uZWN0ZWRcIj09PXRoaXMucGVlckNvbm5lY3Rpb24uY29ubmVjdGlvblN0YXRlJiYodGhpcy5yZXN0YXJ0Q250PTApLG51bGw9PT0oZT10aGlzLm9uQ29ubmVjdGlvblN0YXRlQ2hhbmdlKXx8dm9pZCAwPT09ZXx8ZS5jYWxsKHRoaXMsdGhpcy5wZWVyQ29ubmVjdGlvbi5jb25uZWN0aW9uU3RhdGUpfSx0aGlzLnN0YXJ0SUNFQ2FuZGlkYXRlKCl9c3RhcnRJQ0VDYW5kaWRhdGUoKXt0aGlzLnBlZXJDb25uZWN0aW9uLm9uaWNlY2FuZGlkYXRlfHwodGhpcy5sb2NhbENhbmRpZGF0ZUNvdW50PTAsdGhpcy5wZWVyQ29ubmVjdGlvbi5vbmljZWNhbmRpZGF0ZT1lPT57aWYoZS5jYW5kaWRhdGUpe3ZhciB0O2lmKGUuY2FuZGlkYXRlLmNhbmRpZGF0ZSludWxsPT09KHQ9dGhpcy5vbkxvY2FsQ2FuZGlkYXRlKXx8dm9pZCAwPT09dHx8dC5jYWxsKHRoaXMsZS5jYW5kaWRhdGUudG9KU09OKCkpO3RoaXMubG9jYWxDYW5kaWRhdGVDb3VudCs9MX1lbHNlIGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbcGMtXCIpLmNvbmNhdCh0aGlzLnN0b3JlLnAycElkLFwiXSBsb2NhbCBjYW5kaWRhdGUgY291bnRcIiksdGhpcy5sb2NhbENhbmRpZGF0ZUNvdW50KX0pfXVuYmluZFBDRXZlbnRzKCl7dGhpcy5wZWVyQ29ubmVjdGlvbi5vbmljZWNvbm5lY3Rpb25zdGF0ZWNoYW5nZT1udWxsLHRoaXMucGVlckNvbm5lY3Rpb24ub25jb25uZWN0aW9uc3RhdGVjaGFuZ2U9bnVsbCx0aGlzLnBlZXJDb25uZWN0aW9uLm9uc2lnbmFsaW5nc3RhdGVjaGFuZ2U9bnVsbCx0aGlzLnBlZXJDb25uZWN0aW9uLm9uaWNlY2FuZGlkYXRlZXJyb3I9bnVsbCx0aGlzLnBlZXJDb25uZWN0aW9uLm9uaWNlY2FuZGlkYXRlPW51bGwsdGhpcy5wZWVyQ29ubmVjdGlvbi5vbnRyYWNrPW51bGx9c3RhdGljIHJlc29sdmVQQ0NvbmZpZ3VyYXRpb24odCxpKXtsZXQgbj1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06MDtjb25zdCByPXtpY2VTZXJ2ZXJzOltdfTt2YXIgbzt0LmljZVNlcnZlcnM/ci5pY2VTZXJ2ZXJzPXQuaWNlU2VydmVyczp0LnR1cm5TZXJ2ZXImJlwib2ZmXCIhPT10LnR1cm5TZXJ2ZXIubW9kZSYmKEt5KHQudHVyblNlcnZlci5zZXJ2ZXJzKT9yLmljZVNlcnZlcnM9dC50dXJuU2VydmVyLnNlcnZlcnM6KHIuaWNlU2VydmVycyYmci5pY2VTZXJ2ZXJzLnB1c2goLi4uZS50dXJuU2VydmVyQ29uZmlnVG9JY2VTZXJ2ZXJzKHQudHVyblNlcnZlci5zZXJ2ZXJzLGksbikpLFhBKFwiVVNFX1RVUk5fU0VSVkVSX09GX0dBVEVXQVlcIikmJnIuaWNlU2VydmVycyYmdC50dXJuU2VydmVyLnNlcnZlcnNGcm9tR2F0ZXdheSYmci5pY2VTZXJ2ZXJzLnB1c2goLi4uZS50dXJuU2VydmVyQ29uZmlnVG9JY2VTZXJ2ZXJzKHQudHVyblNlcnZlci5zZXJ2ZXJzRnJvbUdhdGV3YXksaSxuKSksRG4obz1bSEEuUmVsYXksSEEuU2RSdG5dKS5jYWxsKG8saSkmJihyLmljZVRyYW5zcG9ydFBvbGljeT1cInJlbGF5XCIpLFhBKFwiRk9SQ0VfVFVSTl9UQ1BcIik/ci5pY2VUcmFuc3BvcnRQb2xpY3k9XCJyZWxheVwiOnQudHVyblNlcnZlci5zZXJ2ZXJzLmNvbmNhdCh0LnR1cm5TZXJ2ZXIuc2VydmVyc0Zyb21HYXRld2F5fHxbXSkuZm9yRWFjaCgoZT0+e2UuZm9yY2V0dXJuJiYoci5pY2VUcmFuc3BvcnRQb2xpY3k9XCJyZWxheVwiKX0pKSkpO3JldHVybiBYQShcIkVOQUJMRV9FTkNPREVEX1RSQU5TRk9STVwiKSYmWlAoKS5zdXBwb3J0V2ViUlRDRW5jb2RlZFRyYW5zZm9ybSYmKHIuZW5jb2RlZEluc2VydGFibGVTdHJlYW1zPSEwKSxmYi5kZWJ1ZyhcIlAyUENvbm5lY3Rpb24gcDJwVHJhbnNwb3J0IGlzIFwiLmNvbmNhdChpKSkscn1zdGF0aWMgdHVyblNlcnZlckNvbmZpZ1RvSWNlU2VydmVycyhlLHQpe2xldCBpPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTowO2NvbnN0IG49W10scj1lLmZpbHRlcigoZT0+ZS50Y3Bwb3J0KSk7ZmIuZGVidWcoXCJQMlBDb25uZWN0aW9uIHR1cm5TZXJ2ZXJzIGlzIFwiLmNvbmNhdChyLFwiLCBjdXJyZW50IGluZGV4IGlzIFwiKS5jb25jYXQoaSkpO2NvbnN0IG89ci5sZW5ndGg+aT9yW2ldOnJbMF07c3dpdGNoKHQpe2Nhc2UgSEEuU2RSdG46Y29uc3QgdD1lLmZpbHRlcigoZT0+e3ZhciB0O3JldHVybiBEbih0PWUudXNlcm5hbWUpLmNhbGwodCxcImdsYjpcIikmJmUudHVyblNlcnZlclVSTD09ZS50dXJuU2VydmVyVVJMfSkpLHI9dC5sZW5ndGg+aT90W2ldOnRbMF07ciYmKG4ucHVzaCh7dXNlcm5hbWU6ci51c2VybmFtZSxjcmVkZW50aWFsOnIucGFzc3dvcmQsY3JlZGVudGlhbFR5cGU6XCJwYXNzd29yZFwiLHVybHM6XCJ0dXJuOlwiLmNvbmNhdChKTyhyLnR1cm5TZXJ2ZXJVUkwpLFwiOlwiKS5jb25jYXQoci50Y3Bwb3J0LFwiP3RyYW5zcG9ydD11ZHBcIil9KSxuLnB1c2goe3VzZXJuYW1lOnIudXNlcm5hbWUsY3JlZGVudGlhbDpyLnBhc3N3b3JkLGNyZWRlbnRpYWxUeXBlOlwicGFzc3dvcmRcIix1cmxzOlwidHVybnM6XCIuY29uY2F0KEpPKHIudHVyblNlcnZlclVSTCksXCI6XCIpLmNvbmNhdChyLnRjcHBvcnQsXCI/dHJhbnNwb3J0PXRjcFwiKX0pKTticmVhaztjYXNlIEhBLlJlbGF5Om8mJihuLnB1c2goe3VzZXJuYW1lOm8udXNlcm5hbWUsY3JlZGVudGlhbDpvLnBhc3N3b3JkLGNyZWRlbnRpYWxUeXBlOlwicGFzc3dvcmRcIix1cmxzOlwidHVybjpcIi5jb25jYXQoby50dXJuU2VydmVyVVJMLFwiOlwiKS5jb25jYXQoby50Y3Bwb3J0LFwiP3RyYW5zcG9ydD11ZHBcIil9KSxuLnB1c2goe3VzZXJuYW1lOm8udXNlcm5hbWUsY3JlZGVudGlhbDpvLnBhc3N3b3JkLGNyZWRlbnRpYWxUeXBlOlwicGFzc3dvcmRcIix1cmxzOlwidHVybnM6XCIuY29uY2F0KEpPKG8udHVyblNlcnZlclVSTCksXCI6XCIpLmNvbmNhdChvLnRjcHBvcnQsXCI/dHJhbnNwb3J0PXRjcFwiKX0pKTticmVhaztkZWZhdWx0Om8mJihuLnB1c2goe3VzZXJuYW1lOm8udXNlcm5hbWUsY3JlZGVudGlhbDpvLnBhc3N3b3JkLGNyZWRlbnRpYWxUeXBlOlwicGFzc3dvcmRcIix1cmxzOlwidHVybjpcIi5jb25jYXQoby50dXJuU2VydmVyVVJMLFwiOlwiKS5jb25jYXQoby50Y3Bwb3J0LFwiP3RyYW5zcG9ydD11ZHBcIil9KSxuLnB1c2goe3VzZXJuYW1lOm8udXNlcm5hbWUsY3JlZGVudGlhbDpvLnBhc3N3b3JkLGNyZWRlbnRpYWxUeXBlOlwicGFzc3dvcmRcIix1cmxzOlwidHVybnM6XCIuY29uY2F0KEpPKG8udHVyblNlcnZlclVSTCksXCI6XCIpLmNvbmNhdChvLnRjcHBvcnQsXCI/dHJhbnNwb3J0PXRjcFwiKX0pLG4ucHVzaCh7dXNlcm5hbWU6by51c2VybmFtZSxjcmVkZW50aWFsOm8ucGFzc3dvcmQsY3JlZGVudGlhbFR5cGU6XCJwYXNzd29yZFwiLHVybHM6XCJzdHVuOlwiLmNvbmNhdChvLnR1cm5TZXJ2ZXJVUkwsXCI6XCIpLmNvbmNhdChvLnRjcHBvcnQpfSkpfXJldHVybiBufXRyeUJpbmRUcmFuc3BvcnRFdmVudHMoZSl7aWYoZSl7dGhpcy50cmFuc3BvcnQ9ZSxlLm9uc3RhdGVjaGFuZ2U9KCk9Pnt2YXIgdDtudWxsIT1lJiZlLnN0YXRlJiYobnVsbD09PSh0PXRoaXMub25EVExTVHJhbnNwb3J0U3RhdGVDaGFuZ2UpfHx2b2lkIDA9PT10fHx0LmNhbGwodGhpcyxlLnN0YXRlKSl9LGUub25lcnJvcj1lPT57dmFyIHQ7bnVsbD09PSh0PXRoaXMub25EVExTVHJhbnNwb3J0RXJyb3IpfHx2b2lkIDA9PT10fHx0LmNhbGwodGhpcyxcImVycm9yXCJpbiBlP2UuZXJyb3I6ZSl9O2NvbnN0IHQ9ZS5pY2VUcmFuc3BvcnQ7dCYmKHQub25zdGF0ZWNoYW5nZT0oKT0+e2NvbnN0IHQ9bnVsbD09ZT92b2lkIDA6ZS5pY2VUcmFuc3BvcnQuc3RhdGU7dmFyIGk7dCYmKG51bGw9PT0oaT10aGlzLm9uSUNFVHJhbnNwb3J0U3RhdGVDaGFuZ2UpfHx2b2lkIDA9PT1pfHxpLmNhbGwodGhpcyx0KSl9LHQuZ2V0U2VsZWN0ZWRDYW5kaWRhdGVQYWlyJiYodC5vbnNlbGVjdGVkY2FuZGlkYXRlcGFpcmNoYW5nZT0oKT0+e2lmKHQuZ2V0U2VsZWN0ZWRDYW5kaWRhdGVQYWlyKCkpe2NvbnN0e2xvY2FsOmUscmVtb3RlOml9PXQuZ2V0U2VsZWN0ZWRDYW5kaWRhdGVQYWlyKCk7ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW3BjLVwiKS5jb25jYXQodGhpcy5zdG9yZS5wMnBJZCxcIl0gc2VsZWN0ZWRjYW5kaWRhdGVwYWlyY2hhbmdlOiBsb2NhbCBcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KHtjYW5kaWRhdGVUeXBlOmUudHlwZSxwcm90b2NvbDplLnByb3RvY29sfSksXCIsIHJlbW90ZSBcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KHtjYW5kaWRhdGVUeXBlOmkudHlwZSxwcm90b2NvbDppLnByb3RvY29sLGFkZHJlc3M6aS5hZGRyZXNzLHBvcnQ6aS5wb3J0fSksXCIgKVwiKSl9fSkpfX10cnlVbmJpbmRUcmFuc3BvcnRFdmVudHMoKXt0aGlzLnRyYW5zcG9ydCYmKHRoaXMudHJhbnNwb3J0Lm9uc3RhdGVjaGFuZ2U9bnVsbCx0aGlzLnRyYW5zcG9ydC5vbmVycm9yPW51bGwsdGhpcy50cmFuc3BvcnQuaWNlVHJhbnNwb3J0JiYodGhpcy50cmFuc3BvcnQuaWNlVHJhbnNwb3J0Lm9uc3RhdGVjaGFuZ2U9bnVsbCkpfWFzeW5jIHVwZGF0ZVJ0cFNlbmRlckVuY29kaW5ncyhlLHQpe3ZhciBpO2lmKCF0KXt0PXRoaXMucGVlckNvbm5lY3Rpb24uZ2V0U2VuZGVycygpLmZpbmQoKHQ9PnQudHJhY2s9PT1lLl9tZWRpYVN0cmVhbVRyYWNrKSl9aWYoIXQpcmV0dXJuIGZiLndhcm4oXCJbXCIuY29uY2F0KGUuZ2V0VHJhY2tJZCgpLFwiXSBubyBydHBTZW5kZXIgZm91bmR9XCIpKTtpZih0aGlzLmlzVlA4U2ltdWxjYXN0KGUpKXJldHVybiBmYi53YXJuKFwiW3VwZGF0ZVJ0cFNlbmRlckVuY29kaW5nc10gVHJhY2sgaXMgVlA4IHNpbXVsY2FzdCwgcGxlYXNlIGFwcGx5IHNpbXVsY2FzdCBlbmNvZGluZ3NcIik7aWYoIVpQKCkuc3VwcG9ydFNldFJ0cFNlbmRlclBhcmFtZXRlcnMpcmV0dXJuIGZiLndhcm4oXCJbdXBkYXRlUnRwU2VuZGVyRW5jb2RpbmdzXSBCcm93c2VyIG5vdCBzdXBwb3J0IHNldCBydHAtc2VuZGVyIHBhcmFtZXRlcnNcIik7Y29uc3Qgbj17fSxyPXt9O3N3aXRjaChlLl9vcHRpbWl6YXRpb25Nb2RlKXtjYXNlXCJtb3Rpb25cIjpuLmRlZ3JhZGF0aW9uUHJlZmVyZW5jZT1cIm1haW50YWluLWZyYW1lcmF0ZVwiO2JyZWFrO2Nhc2VcImRldGFpbFwiOm4uZGVncmFkYXRpb25QcmVmZXJlbmNlPVwibWFpbnRhaW4tcmVzb2x1dGlvblwiO2JyZWFrO2RlZmF1bHQ6bi5kZWdyYWRhdGlvblByZWZlcmVuY2U9XCJiYWxhbmNlZFwifWlmKGUuX2VuY29kZXJDb25maWcpe3ZhciBvO2NvbnN0e2JpdHJhdGVNYXg6dCxmcmFtZVJhdGU6aSxzY2FsZVJlc29sdXRpb25Eb3duQnk6bn09ZS5fZW5jb2RlckNvbmZpZzt0JiYoci5tYXhCaXRyYXRlPTFlMyp0KSxEbihvPWUuX2hpbnRzKS5jYWxsKG8sbUwuTE9XX1NUUkVBTSkmJihpJiYoci5tYXhGcmFtZXJhdGU9UU8oaSkpLG4mJm4+PTEmJihyLnNjYWxlUmVzb2x1dGlvbkRvd25CeT1uKSl9aWYoWEEoXCJEU0NQX1RZUEVcIikmJkV5KCkpe3ZhciBzO2NvbnN0IGU9WEEoXCJEU0NQX1RZUEVcIik7RG4ocz1bXCJ2ZXJ5LWxvd1wiLFwibG93XCIsXCJtZWRpdW1cIixcImhpZ2hcIl0pLmNhbGwocyxlKSYmKHIubmV0d29ya1ByaW9yaXR5PWUpfWNvbnN0IGE9dC5nZXRQYXJhbWV0ZXJzKCksYz1udWxsPT09KGk9YS5lbmNvZGluZ3MpfHx2b2lkIDA9PT1pP3ZvaWQgMDppWzBdO1p2KCkmJiFjJiYobi5lbmNvZGluZ3M9W3JdKSxjJiZPYmplY3QuYXNzaWduKGMsciksT2JqZWN0LmFzc2lnbihhLG4pLGZiLmRlYnVnKFwiW1wiLmNvbmNhdChlLmdldFRyYWNrSWQoKSxcIl0gdXBkYXRlUnRwU2VuZGVyRW5jb2RpbmdzOiBcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KGEuZW5jb2RpbmdzKSkpLGF3YWl0IHQuc2V0UGFyYW1ldGVycyhhKX1hc3luYyBhcHBseVNlbmRFbmNvZGluZ3MoZSx0KXt0cnl7aWYoIVpQKCkuc3VwcG9ydFNldFJ0cFNlbmRlclBhcmFtZXRlcnMpcmV0dXJuO2lmKGUubGVuZ3RoIT09dC5sZW5ndGgpcmV0dXJuO2ZvcihsZXQgaT0wO2k8ZS5sZW5ndGg7aSsrKXtjb25zdCBuPWVbaV0scj10W2ldO3IgaW5zdGFuY2VvZiBhVSYmIXRoaXMuaXNWUDhTaW11bGNhc3QocikmJmF3YWl0IHRoaXMudXBkYXRlUnRwU2VuZGVyRW5jb2RpbmdzKHIsbi5zZW5kZXIpfX1jYXRjaChlKXtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gQXBwbHkgUlRQU2VuZEVuY29kaW5ncyBmYWlsZWQuXCIpKX19bXVuZ1NlbmRPZmZlclNEUChlLHQsaSl7Y29uc3Qgbj1GVS5wYXJzZShlKTtyZXR1cm4gdC5mb3JFYWNoKCgoZSx0KT0+e2NvbnN0IHI9aVt0XSxvPW4ubWVkaWFEZXNjcmlwdGlvbnMuZmluZCgoZT0+ZS5hdHRyaWJ1dGVzLm1pZD09PXIpKTtvJiYoSlUobyxlKSxleChvLGUsdGhpcy5zdG9yZS5jb2RlYykpfSkpLEZVLnByaW50KG4pfWJpbmRTdGF0c0V2ZW50cygpe3RoaXMuc3RhdHNGaWx0ZXIub25GaXJzdEF1ZGlvUmVjZWl2ZWQ9ZT0+e3ZhciB0O251bGw9PT0odD10aGlzLm9uRmlyc3RBdWRpb1JlY2VpdmVkKXx8dm9pZCAwPT09dHx8dC5jYWxsKHRoaXMsZSl9LHRoaXMuc3RhdHNGaWx0ZXIub25GaXJzdFZpZGVvUmVjZWl2ZWQ9ZT0+e3ZhciB0O251bGw9PT0odD10aGlzLm9uRmlyc3RWaWRlb1JlY2VpdmVkKXx8dm9pZCAwPT09dHx8dC5jYWxsKHRoaXMsZSl9LHRoaXMuc3RhdHNGaWx0ZXIub25GaXJzdEF1ZGlvRGVjb2RlZD1lPT57dmFyIHQ7bnVsbD09PSh0PXRoaXMub25GaXJzdEF1ZGlvRGVjb2RlZCl8fHZvaWQgMD09PXR8fHQuY2FsbCh0aGlzLGUpfSx0aGlzLnN0YXRzRmlsdGVyLm9uRmlyc3RWaWRlb0RlY29kZWQ9KGUsdCxpKT0+e3ZhciBuO251bGw9PT0obj10aGlzLm9uRmlyc3RWaWRlb0RlY29kZWQpfHx2b2lkIDA9PT1ufHxuLmNhbGwodGhpcyxlLHQsaSl9LHRoaXMuc3RhdHNGaWx0ZXIub25TZWxlY3RlZExvY2FsQ2FuZGlkYXRlQ2hhbmdlZD0oZSx0KT0+e3ZhciBpO251bGw9PT0oaT10aGlzLm9uU2VsZWN0ZWRMb2NhbENhbmRpZGF0ZUNoYW5nZWQpfHx2b2lkIDA9PT1pfHxpLmNhbGwodGhpcyxlLHQpfSx0aGlzLnN0YXRzRmlsdGVyLm9uU2VsZWN0ZWRSZW1vdGVDYW5kaWRhdGVDaGFuZ2VkPShlLHQpPT57dmFyIGk7bnVsbD09PShpPXRoaXMub25TZWxlY3RlZFJlbW90ZUNhbmRpZGF0ZUNoYW5nZWQpfHx2b2lkIDA9PT1pfHxpLmNhbGwodGhpcyxlLHQpfSx0aGlzLnN0YXRzRmlsdGVyLm9uRmlyc3RWaWRlb0RlY29kZWRUaW1lb3V0PWU9Pnt2YXIgdDtudWxsPT09KHQ9dGhpcy5vbkZpcnN0VmlkZW9EZWNvZGVkVGltZW91dCl8fHZvaWQgMD09PXR8fHQuY2FsbCh0aGlzLGUpfX11bmJpbmRTdGF0c0V2ZW50cygpe3RoaXMuc3RhdHNGaWx0ZXIub25GaXJzdEF1ZGlvUmVjZWl2ZWQ9dm9pZCAwLHRoaXMuc3RhdHNGaWx0ZXIub25GaXJzdFZpZGVvUmVjZWl2ZWQ9dm9pZCAwLHRoaXMuc3RhdHNGaWx0ZXIub25GaXJzdEF1ZGlvRGVjb2RlZD12b2lkIDAsdGhpcy5zdGF0c0ZpbHRlci5vbkZpcnN0VmlkZW9EZWNvZGVkPXZvaWQgMCx0aGlzLnN0YXRzRmlsdGVyLm9uU2VsZWN0ZWRMb2NhbENhbmRpZGF0ZUNoYW5nZWQ9dm9pZCAwLHRoaXMuc3RhdHNGaWx0ZXIub25TZWxlY3RlZFJlbW90ZUNhbmRpZGF0ZUNoYW5nZWQ9dm9pZCAwLHRoaXMuc3RhdHNGaWx0ZXIub25GaXJzdFZpZGVvRGVjb2RlZFRpbWVvdXQ9dm9pZCAwfWFzeW5jIGFwcGx5U2ltdWxjYXN0Rm9yRmlyZWZveChlLHQpe2lmKGUubGVuZ3RoPT09dC5sZW5ndGgpZm9yKGxldCBhPTA7YTxlLmxlbmd0aDthKyspe3ZhciBpLG4scixvLHM7Y29uc3QgYz1lW2FdLGQ9dFthXTtpZihkIGluc3RhbmNlb2YgYVUmJiFEbihpPWQuX2hpbnRzKS5jYWxsKGksbUwuTE9XX1NUUkVBTSkmJm51bGwhPT0obj1kLl9lbmNvZGVyQ29uZmlnKSYmdm9pZCAwIT09biYmbi5iaXRyYXRlTWF4JiYobnVsbD09PShyPWQuX2VuY29kZXJDb25maWcpfHx2b2lkIDA9PT1yP3ZvaWQgMDpyLmJpdHJhdGVNYXgpPjIwMCYmbnVsbCE9PShvPWQuX3NjYWxhYmlsaXR5TW9kZSkmJnZvaWQgMCE9PW8mJm8ubnVtU3BhdGlhbExheWVycyYmKG51bGw9PT0ocz1kLl9zY2FsYWJpbGl0eU1vZGUpfHx2b2lkIDA9PT1zP3ZvaWQgMDpzLm51bVNwYXRpYWxMYXllcnMpPjEmJlwidnA4XCI9PT10aGlzLnN0b3JlLmNvZGVjKXtjb25zdCBlPXt9LHQ9e2hpZ2g6MWUzKihkLl9lbmNvZGVyQ29uZmlnLmJpdHJhdGVNYXgtNTApLG1lZGl1bTo1ZTR9O2UuZW5jb2RpbmdzPVt7cmlkOlwibVwiLGFjdGl2ZTohMCxtYXhCaXRyYXRlOnQubWVkaXVtLHNjYWxlUmVzb2x1dGlvbkRvd25CeTo0fSx7cmlkOlwiaFwiLGFjdGl2ZTohMCxtYXhCaXRyYXRlOnQuaGlnaH1dO2NvbnN0IGk9Yy5zZW5kZXIuZ2V0UGFyYW1ldGVycygpO2F3YWl0IGMuc2VuZGVyLnNldFBhcmFtZXRlcnMoT2JqZWN0LmFzc2lnbihpLGUpKX19fWFzeW5jIGFwcGx5U2ltdWxjYXN0RW5jb2RpbmdzKGUsdCl7aWYoIVp2KCkmJmUubGVuZ3RoPT09dC5sZW5ndGgpZm9yKGxldCBpPTA7aTxlLmxlbmd0aDtpKyspe2NvbnN0IG49dFtpXTtpZihuIGluc3RhbmNlb2YgYVUmJnRoaXMuaXNWUDhTaW11bGNhc3Qobikpe2NvbnN0IHQ9ZVtpXSxyPXt9LG89e2hpZ2g6MWUzKihuLl9lbmNvZGVyQ29uZmlnLmJpdHJhdGVNYXgtNTApLG1lZGl1bTo1ZTR9O3IuZW5jb2RpbmdzPVt7YWN0aXZlOiEwLGFkYXB0aXZlUHRpbWU6ITEsbmV0d29ya1ByaW9yaXR5OlwiaGlnaFwiLHByaW9yaXR5OlwiaGlnaFwiLG1heEJpdHJhdGU6by5oaWdofSx7YWN0aXZlOiEwLGFkYXB0aXZlUHRpbWU6ITEsbmV0d29ya1ByaW9yaXR5OlwibG93XCIscHJpb3JpdHk6XCJsb3dcIixtYXhCaXRyYXRlOm8ubWVkaXVtLHNjYWxlUmVzb2x1dGlvbkRvd25CeTo0fV07Y29uc3Qgcz10LnNlbmRlci5nZXRQYXJhbWV0ZXJzKCk7YXdhaXQgdC5zZW5kZXIuc2V0UGFyYW1ldGVycyhPYmplY3QuYXNzaWduKHMscikpfX19aXNWUDhTaW11bGNhc3QoZSl7dmFyIHQsaSxuLHIsbztyZXR1cm4hIShlIGluc3RhbmNlb2YgYVUmJlhBKFwiU0lNVUxDQVNUXCIpJiZcInZwOFwiPT09dGhpcy5zdG9yZS5jb2RlYyYmIURuKHQ9ZS5faGludHMpLmNhbGwodCxtTC5MT1dfU1RSRUFNKSYmbnVsbCE9PShpPWUuX2VuY29kZXJDb25maWcpJiZ2b2lkIDAhPT1pJiZpLmJpdHJhdGVNYXgmJihudWxsPT09KG49ZS5fZW5jb2RlckNvbmZpZyl8fHZvaWQgMD09PW4/dm9pZCAwOm4uYml0cmF0ZU1heCk+MjAwJiZudWxsIT09KHI9ZS5fc2NhbGFiaWxpdHlNb2RlKSYmdm9pZCAwIT09ciYmci5udW1TcGF0aWFsTGF5ZXJzJiYobnVsbD09PShvPWUuX3NjYWxhYmlsaXR5TW9kZSl8fHZvaWQgMD09PW8/dm9pZCAwOm8ubnVtU3BhdGlhbExheWVycyk+MSl9bG9nU0RQRXhjaGFuZ2UoZSx0LGksbil7aWYoWEEoXCJTRFBfTE9HR0lOR1wiKSlyZXR1cm4gZmIudXBsb2FkKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBleGNoYW5naW5nIFwiKS5jb25jYXQoaSxcIiBcIikuY29uY2F0KHQsXCIgU0RQIGR1cmluZyBQMlBDb25uZWN0aW9uLlwiKS5jb25jYXQobixcIlxcblwiKSxlKSxcIm9mZmVyXCI9PT10P2U9Pnt0aGlzLmxvZ1NEUEV4Y2hhbmdlKGUsXCJhbnN3ZXJcIixcImxvY2FsXCI9PT1pP1wicmVtb3RlXCI6XCJsb2NhbFwiLG4pfTp2b2lkIDB9YXN5bmMgbXV0ZUxvY2FsKGUpe3RyeXtpZighdGhpcy5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi5tdXRlTG9jYWwgYmVmb3JlIHJlbW90ZSBTRFAgY3JlYXRlZC5cIik7Y29uc3QgdD10aGlzLnBlZXJDb25uZWN0aW9uLmdldFRyYW5zY2VpdmVycygpLmZpbHRlcigodD0+dC5taWQmJi0xIT09ZS5pbmRleE9mKHQubWlkKSkpO2lmKHQubGVuZ3RoIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiVHJhbnNjZWl2ZXJzJyBsZW5ndGggZG9lc24ndCBtYXRjaCBtaWRzJyBsZW5ndGguXCIpO3QubWFwKChlPT57ZS5kaXJlY3Rpb249XCJpbmFjdGl2ZVwifSkpO2NvbnN0IGk9YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5jcmVhdGVPZmZlcigpLG49dGhpcy5sb2dTRFBFeGNoYW5nZShpLnNkcHx8XCJcIixcIm9mZmVyXCIsXCJsb2NhbFwiLFwibXV0ZUxvY2FsXCIpO2F3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbihpKSx0aGlzLnJlbW90ZVNEUC5tdXRlUmVtb3RlKGUpO2NvbnN0IHI9dGhpcy5yZW1vdGVTRFAudG9TdHJpbmcoKTtudWxsPT1ufHxuKHIpLGF3YWl0IHRoaXMuc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJhbnN3ZXJcIixzZHA6cn0pfWNhdGNoKGUpe3Rocm93IG5ldyBDeShSeS5FWENIQU5HRV9TRFBfRkFJTEVELFwiUDJQQ29ubmVjdGlvbi5tdXRlTG9jYWwgZmFpbGVkOyBcIi5jb25jYXQoZS50b1N0cmluZygpKSl9fWFzeW5jIHVubXV0ZUxvY2FsKGUpe3RyeXtpZighdGhpcy5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi51bm11dGVMb2NhbCBiZWZvcmUgcmVtb3RlIFNEUCBjcmVhdGVkLlwiKTtjb25zdCB0PXRoaXMucGVlckNvbm5lY3Rpb24uZ2V0VHJhbnNjZWl2ZXJzKCkuZmlsdGVyKCh0PT50Lm1pZCYmLTEhPT1lLmluZGV4T2YodC5taWQpKSk7aWYodC5sZW5ndGghPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJUcmFuc2NlaXZlcnMnIGxlbmd0aCBkb2Vzbid0IG1hdGNoIG1pZHMnIGxlbmd0aC5cIik7dC5tYXAoKGFzeW5jIGU9PntlLmRpcmVjdGlvbj1cInNlbmRvbmx5XCJ9KSk7Y29uc3QgaT1hd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLmNyZWF0ZU9mZmVyKCksbj10aGlzLmxvZ1NEUEV4Y2hhbmdlKGkuc2RwfHxcIlwiLFwib2ZmZXJcIixcImxvY2FsXCIsXCJ1bm11dGVMb2NhbFwiKTthd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLnNldExvY2FsRGVzY3JpcHRpb24oaSksdGhpcy5yZW1vdGVTRFAudW5tdXRlUmVtb3RlKGUpO2NvbnN0IHI9dGhpcy5yZW1vdGVTRFAudG9TdHJpbmcoKTtudWxsPT1ufHxuKHIpLGF3YWl0IHRoaXMuc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJhbnN3ZXJcIixzZHA6cn0pfWNhdGNoKGUpe3Rocm93IG5ldyBDeShSeS5FWENIQU5HRV9TRFBfRkFJTEVELFwiUDJQQ29ubmVjdGlvbi51bm11dGVMb2NhbCBmYWlsZWQ7IFwiLmNvbmNhdChlLnRvU3RyaW5nKCkpKX19YXN5bmMgZ2V0UmVtb3RlU1NSQyhlLHQpe3ZhciBpLG47aWYodD1udWxsIT09KGk9dCkmJnZvaWQgMCE9PWk/aTpudWxsPT09KG49dGhpcy5jdXJyZW50UmVtb3RlRGVzY3JpcHRpb24pfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLnNkcCl7dmFyIHI7Y29uc3QgaT1udWxsPT09KHI9RlUucGFyc2UodCkubWVkaWFEZXNjcmlwdGlvbnMuZmluZCgodD0+dC5hdHRyaWJ1dGVzLm1pZD09PWUpKSl8fHZvaWQgMD09PXI/dm9pZCAwOnIuYXR0cmlidXRlcy5zc3JjcztyZXR1cm4gbnVsbD09aT92b2lkIDA6aVswXS5zc3JjSWR9fWFzeW5jIHNldFJlbW90ZURlc2NyaXB0aW9uKGUpe3ZhciB0O2F3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0UmVtb3RlRGVzY3JpcHRpb24oZSksRG4odD1bXCJjb25uZWN0ZWRcIixcImNvbXBsZXRlZFwiXSkuY2FsbCh0LHRoaXMucGVlckNvbm5lY3Rpb24uaWNlQ29ubmVjdGlvblN0YXRlKXx8KHRoaXMuaXNSZWFkeT0hMCx0aGlzLmFkZFJlbW90ZUNhbmRpZGF0ZSgpKX1tdW5nUmVjZWl2ZUFuc3dlclNEUChlLHQsaSl7Y29uc3Qgbj1GVS5wYXJzZShlKSxyPW4ubWVkaWFEZXNjcmlwdGlvbnMuZmluZCgoZT0+ZS5hdHRyaWJ1dGVzLm1pZD09PXQpKTtyZXR1cm4gciYmaT09PWRPLkFVRElPJiZcImF1ZGlvXCI9PT1yLm1lZGlhLm1lZGlhVHlwZSYmb3gociksRlUucHJpbnQobil9fSxDdyhCVi5wcm90b3R5cGUsXCJlc3RhYmxpc2hcIixbSFZdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoQlYucHJvdG90eXBlLFwiZXN0YWJsaXNoXCIpLEJWLnByb3RvdHlwZSksQ3coQlYucHJvdG90eXBlLFwiY29ubmVjdFwiLFtIVl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihCVi5wcm90b3R5cGUsXCJjb25uZWN0XCIpLEJWLnByb3RvdHlwZSksQ3coQlYucHJvdG90eXBlLFwicmVjZWl2ZVwiLFtIVl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihCVi5wcm90b3R5cGUsXCJyZWNlaXZlXCIpLEJWLnByb3RvdHlwZSksQ3coQlYucHJvdG90eXBlLFwibW9ja1JlY2VpdmVcIixbSFZdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoQlYucHJvdG90eXBlLFwibW9ja1JlY2VpdmVcIiksQlYucHJvdG90eXBlKSxDdyhCVi5wcm90b3R5cGUsXCJzdG9wUmVjZWl2aW5nXCIsW0hWXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKEJWLnByb3RvdHlwZSxcInN0b3BSZWNlaXZpbmdcIiksQlYucHJvdG90eXBlKSxDdyhCVi5wcm90b3R5cGUsXCJyZXN0YXJ0SUNFXCIsW0hWXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKEJWLnByb3RvdHlwZSxcInJlc3RhcnRJQ0VcIiksQlYucHJvdG90eXBlKSxDdyhCVi5wcm90b3R5cGUsXCJjbG9zZVwiLFtIVl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihCVi5wcm90b3R5cGUsXCJjbG9zZVwiKSxCVi5wcm90b3R5cGUpLEN3KEJWLnByb3RvdHlwZSxcInVwZGF0ZUVuY29kZXJDb25maWdcIixbSFZdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoQlYucHJvdG90eXBlLFwidXBkYXRlRW5jb2RlckNvbmZpZ1wiKSxCVi5wcm90b3R5cGUpLEN3KEJWLnByb3RvdHlwZSxcInVwZGF0ZVNlbmRQYXJhbWV0ZXJzXCIsW0hWXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKEJWLnByb3RvdHlwZSxcInVwZGF0ZVNlbmRQYXJhbWV0ZXJzXCIpLEJWLnByb3RvdHlwZSksQ3coQlYucHJvdG90eXBlLFwicmVwbGFjZVRyYWNrXCIsW0hWXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKEJWLnByb3RvdHlwZSxcInJlcGxhY2VUcmFja1wiKSxCVi5wcm90b3R5cGUpLEN3KEJWLnByb3RvdHlwZSxcIm11dGVMb2NhbFwiLFtIVl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihCVi5wcm90b3R5cGUsXCJtdXRlTG9jYWxcIiksQlYucHJvdG90eXBlKSxDdyhCVi5wcm90b3R5cGUsXCJ1bm11dGVMb2NhbFwiLFtIVl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihCVi5wcm90b3R5cGUsXCJ1bm11dGVMb2NhbFwiKSxCVi5wcm90b3R5cGUpLEJWKTtmdW5jdGlvbiBIVihlLHQsaSl7Y29uc3Qgbj1lW3RdO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIG4pdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHVzZSBtdXRleCBvbiBvYmplY3QgcHJvcGVydHkuXCIpO3JldHVybiBpLnZhbHVlPWFzeW5jIGZ1bmN0aW9uKCl7Y29uc3QgZT10aGlzLm11dGV4LGk9YXdhaXQgZS5sb2NrKFwiRnJvbSBQMlBDb25uZWN0aW9uLlwiLmNvbmNhdCh0KSk7dHJ5e2Zvcih2YXIgcj1hcmd1bWVudHMubGVuZ3RoLG89bmV3IEFycmF5KHIpLHM9MDtzPHI7cysrKW9bc109YXJndW1lbnRzW3NdO3JldHVybiBhd2FpdCBuLmFwcGx5KHRoaXMsbyl9ZmluYWxseXtpKCl9fSxpfWZ1bmN0aW9uIEtWKGUsdCl7bGV0IGk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInZpZGVvXCIpLG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtpLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsXCJkaXNwbGF5Om5vbmVcIiksbi5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLFwiZGlzcGxheTpub25lXCIpLGkuc2V0QXR0cmlidXRlKFwibXV0ZWRcIixcIlwiKSxpLm11dGVkPSEwLGkuc2V0QXR0cmlidXRlKFwiYXV0b3BsYXlcIixcIlwiKSxpLmF1dG9wbGF5PSEwLGkuc2V0QXR0cmlidXRlKFwicGxheXNpbmxpbmVcIixcIlwiKSxuLndpZHRoPVFPKHQud2lkdGgpLG4uaGVpZ2h0PVFPKHQuaGVpZ2h0KTtjb25zdCByPVFPKHQuZnJhbWVyYXRlfHwxNSk7ZG9jdW1lbnQuYm9keS5hcHBlbmQoaSksZG9jdW1lbnQuYm9keS5hcHBlbmQobik7bGV0IG89ZS5fbWVkaWFTdHJlYW1UcmFjaztpLnNyY09iamVjdD1uZXcgTWVkaWFTdHJlYW0oW29dKSxpLnBsYXkoKTtjb25zdCBzPW4uZ2V0Q29udGV4dChcIjJkXCIpO2lmKCFzKXRocm93IG5ldyB5YihSeS5VTkVYUEVDVEVEX0VSUk9SLFwiY2FuIG5vdCBnZXQgY2FudmFzIGNvbnRleHRcIik7Y29uc3QgYT1aUCgpLGM9bi5jYXB0dXJlU3RyZWFtKGEuc3VwcG9ydFJlcXVlc3RGcmFtZT8wOnIpLmdldFZpZGVvVHJhY2tzKClbMF07Yy5jYW52YXN8fChjLmNhbnZhcz1uKSxuLnN0YXJ0Q2FwdHVyZT0oKT0+e2lmKCFpKXJldHVybiBuLnN0b3BDYXB0dXJlJiZuLnN0b3BDYXB0dXJlKCk7aWYoaS5wYXVzZWQmJmkucGxheSgpLGkudmlkZW9IZWlnaHQ+MiYmaS52aWRlb1dpZHRoPjIpe2NvbnN0IGU9aS52aWRlb1dpZHRoLHQ9aS52aWRlb0hlaWdodC9lLHI9bi53aWR0aCp0O01hdGguYWJzKHItbi5oZWlnaHQpPj0yJiYoZmIuZGVidWcoXCJhZGp1c3QgbG93IHN0cmVhbSByZXNvbHV0aW9uXCIsXCJcIi5jb25jYXQobi53aWR0aCxcInhcIikuY29uY2F0KG4uaGVpZ2h0LFwiIC0+IFwiKS5jb25jYXQobi53aWR0aCxcInhcIikuY29uY2F0KHIpKSxuLmhlaWdodD1yKX1zLmRyYXdJbWFnZShpLDAsMCxuLndpZHRoLG4uaGVpZ2h0KSxjLnJlcXVlc3RGcmFtZSYmYy5yZXF1ZXN0RnJhbWUoKSxvIT09ZS5fbWVkaWFTdHJlYW1UcmFjayYmKG89ZS5fbWVkaWFTdHJlYW1UcmFjayxpLnNyY09iamVjdD1uZXcgTWVkaWFTdHJlYW0oW29dKSl9LG4uc3RvcENhcHR1cmU9UUwoKCgpPT5uLnN0YXJ0Q2FwdHVyZSYmbi5zdGFydENhcHR1cmUoKSkscik7Y29uc3QgZD1jLnN0b3A7cmV0dXJuIGMuc3RvcD0oKT0+e2QuY2FsbChjKSxpJiYoaS5yZW1vdmUoKSxpLnNyY09iamVjdD1udWxsLGk9bnVsbCksbiYmKG4ud2lkdGg9MCxuLnJlbW92ZSgpLG4uc3RvcENhcHR1cmUmJm4uc3RvcENhcHR1cmUoKSxuLnN0YXJ0Q2FwdHVyZT12b2lkIDAsbi5zdG9wQ2FwdHVyZT12b2lkIDAsbj1udWxsKSxmYi5kZWJ1ZyhcImNsZWFuIGxvdyBzdHJlYW0gcmVuZGVyZXJcIil9LGN9dmFyIFlWPWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuSEVJR0hUPTIwMzNdPVwiSEVJR0hUXCIsZVtlLkZSQU1FX1JBVEU9MjAzNF09XCJGUkFNRV9SQVRFXCIsZVtlLldJRFRIPTIwMzVdPVwiV0lEVEhcIixlfShZVnx8e30pLHFWPWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuRlJBTUVfUkFURT0yMDAyXT1cIkZSQU1FX1JBVEVcIixlW2UuV0lEVEg9MjAwM109XCJXSURUSFwiLGVbZS5IRUlHSFQ9MjAwNF09XCJIRUlHSFRcIixlW2UuUEFDS0FHRV9MT1NUPTIwMDVdPVwiUEFDS0FHRV9MT1NUXCIsZVtlLkFWR19FTkNPREU9MjAwN109XCJBVkdfRU5DT0RFXCIsZVtlLk5BQ0tTPTIwMDldPVwiTkFDS1NcIixlW2UuUExJUz0yMDEwXT1cIlBMSVNcIixlW2UuRklSUz0yMDExXT1cIkZJUlNcIixlW2UuQklUUkFURT0yMDEyXT1cIkJJVFJBVEVcIixlW2UuUEFDS0FHRV9SQVRFPTIwMzFdPVwiUEFDS0FHRV9SQVRFXCIsZVtlLkFEQVBUQVRJT049MjAzMl09XCJBREFQVEFUSU9OXCIsZVtlLkFDVFVBTF9FTkNPREVEPTIwNjBdPVwiQUNUVUFMX0VOQ09ERURcIixlW2UuQkFORFdJRFRIPTIwNjFdPVwiQkFORFdJRFRIXCIsZVtlLlJFVFJBTlNNSVQ9MjA2Ml09XCJSRVRSQU5TTUlUXCIsZVtlLlRBUkdFVF9FTkNPREVEPTIwNjRdPVwiVEFSR0VUX0VOQ09ERURcIixlW2UuVFJBTlNNSVQ9MjA2Nl09XCJUUkFOU01JVFwiLGVbZS5GUkVFWkU9MjA4Ml09XCJGUkVFWkVcIixlW2UuRElTQUJMRUQ9MjA5NV09XCJESVNBQkxFRFwiLGVbZS5QTEFZRVJfU1RBVFVTPTIxMjhdPVwiUExBWUVSX1NUQVRVU1wiLGVbZS5RUF9TVU09MjE0M109XCJRUF9TVU1cIixlfShxVnx8e30pLHpWPWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuQklUUkFURT0yMDY5XT1cIkJJVFJBVEVcIixlW2UuUEFDS0FHRV9MT1NUPTIwNzBdPVwiUEFDS0FHRV9MT1NUXCIsZVtlLlBBQ0tBR0VfUkFURT0yMDcxXT1cIlBBQ0tBR0VfUkFURVwiLGVbZS5IRUlHSFQ9MjA3M109XCJIRUlHSFRcIixlW2UuRlJBTUVfUkFURT0yMDc1XT1cIkZSQU1FX1JBVEVcIixlW2UuV0lEVEg9MjA3N109XCJXSURUSFwiLGV9KHpWfHx7fSksSlY9ZnVuY3Rpb24oZSl7cmV0dXJuIGVbZS5KSVRURVI9LTFdPVwiSklUVEVSXCIsZVtlLlBBQ0tBR0VfTE9TVD0yMDE0XT1cIlBBQ0tBR0VfTE9TVFwiLGVbZS5XSURUSD0yMDE4XT1cIldJRFRIXCIsZVtlLkhFSUdIVD0yMDE5XT1cIkhFSUdIVFwiLGVbZS5GUkFNRV9SQVRFPTIwMjBdPVwiRlJBTUVfUkFURVwiLGVbZS5KSVRURVJfQlVGRkVSPTIwMjNdPVwiSklUVEVSX0JVRkZFUlwiLGVbZS5DVVJSRU5UX0RFTEFZPTIwMjRdPVwiQ1VSUkVOVF9ERUxBWVwiLGVbZS5OQUNLUz0yMDI2XT1cIk5BQ0tTXCIsZVtlLlBMSVM9MjAyN109XCJQTElTXCIsZVtlLkZJUlM9MjAyOF09XCJGSVJTXCIsZVtlLkJJVFJBVEU9MjAyOV09XCJCSVRSQVRFXCIsZVtlLlBBQ0tBR0VfUkFURT0yMDc4XT1cIlBBQ0tBR0VfUkFURVwiLGVbZS5GUkVFWkU9MjA4NF09XCJGUkVFWkVcIixlW2UuRElTQUJMRUQ9MjEwMV09XCJESVNBQkxFRFwiLGVbZS5QTEFZRVJfU1RBVFVTPTIxMjldPVwiUExBWUVSX1NUQVRVU1wiLGVbZS5RUF9TVU09MjE0NF09XCJRUF9TVU1cIixlW2UuSV9GUkFNRV9ERUxBWT0yMTQ5XT1cIklfRlJBTUVfREVMQVlcIixlfShKVnx8e30pLFhWPWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuRlJBTUVfUkFURV9ERUNPREU9MjAyMV09XCJGUkFNRV9SQVRFX0RFQ09ERVwiLGVbZS5GUkFNRV9SQVRFX1JFTkRFUj0yMDIyXT1cIkZSQU1FX1JBVEVfUkVOREVSXCIsZVtlLkZSQU1FX1JBVEVfT1VUUFVUPTIxNTVdPVwiRlJBTUVfUkFURV9PVVRQVVRcIixlW2UuRlJFRVpFX1RJTUU9MjEwOV09XCJGUkVFWkVfVElNRVwiLGVbZS5GUkVFWkVfVElNRV9SRU5ERVI9MjE0N109XCJGUkVFWkVfVElNRV9SRU5ERVJcIixlW2UuRlJFRVpFX0RVUkFUSU9OPTIxNTZdPVwiRlJFRVpFX0RVUkFUSU9OXCIsZX0oWFZ8fHt9KSxRVj1mdW5jdGlvbihlKXtyZXR1cm4gZVtlLlBDTV9MRVZFTD0yMTA0XT1cIlBDTV9MRVZFTFwiLGV9KFFWfHx7fSksWlY9ZnVuY3Rpb24oZSl7cmV0dXJuIGVbZS5QQUNLQUdFX0xPU1Q9LTFdPVwiUEFDS0FHRV9MT1NUXCIsZVtlLkxFVkVMPTIwMzhdPVwiTEVWRUxcIixlW2UuQklUUkFURT0yMDM5XT1cIkJJVFJBVEVcIixlW2UuUEFDS0FHRV9SQVRFPTIwNDBdPVwiUEFDS0FHRV9SQVRFXCIsZVtlLkFFQ19SRVRVUk5fTE9TUz0yMDQxXT1cIkFFQ19SRVRVUk5fTE9TU1wiLGVbZS5BRUNfUkVUVVJOX0xPU1NfRU5IPTIwNDJdPVwiQUVDX1JFVFVSTl9MT1NTX0VOSFwiLGVbZS5GUkVFWkU9MjA4MV09XCJGUkVFWkVcIixlW2UuRElTQUJMRUQ9MjA5Nl09XCJESVNBQkxFRFwiLGV9KFpWfHx7fSksJFY9ZnVuY3Rpb24oZSl7cmV0dXJuIGVbZS5CSVRSQVRFPTIwNDRdPVwiQklUUkFURVwiLGVbZS5QQUNLQUdFX0xPU1Q9MjA0NV09XCJQQUNLQUdFX0xPU1RcIixlW2UuUEFDS0FHRV9SQVRFPTIwNDZdPVwiUEFDS0FHRV9SQVRFXCIsZVtlLkNVUlJFTlRfREVMQVk9MjA0N109XCJDVVJSRU5UX0RFTEFZXCIsZVtlLkpJVFRFUl9CVUZGRVI9MjA1NF09XCJKSVRURVJfQlVGRkVSXCIsZVtlLkpJVFRFUj0yMDU1XT1cIkpJVFRFUlwiLGVbZS5GUkVFWkU9MjA4M109XCJGUkVFWkVcIixlW2UuRElTQUJMRUQ9MjEwMl09XCJESVNBQkxFRFwiLGVbZS5QQ01fTEVWRUw9MjEwNV09XCJQQ01fTEVWRUxcIixlW2UuUExBWUVSX1NUQVRVUz0yMTMwXT1cIlBMQVlFUl9TVEFUVVNcIixlW2UuQ09OQ0VBTEVEX1NBTVBMRVM9MjE0OF09XCJDT05DRUFMRURfU0FNUExFU1wiLGV9KCRWfHx7fSksZUY9ZnVuY3Rpb24oZSl7cmV0dXJuIGVbZS5GUkVFWkVfVElNRT0tMV09XCJGUkVFWkVfVElNRVwiLGVbZS5MRVZFTD0yMDQzXT1cIkxFVkVMXCIsZX0oZUZ8fHt9KSx0Rj1mdW5jdGlvbihlKXtyZXR1cm4gZVtlLlJUVD0yMDA2XT1cIlJUVFwiLGVbZS5DT05OX1RZUEU9ODAxXT1cIkNPTk5fVFlQRVwiLGV9KHRGfHx7fSk7Y29uc3QgaUY9MWUzLG5GPTM7ZnVuY3Rpb24gckYoZSx0LGkpe251bGwhPWkmJk51bWJlci5pc0Zpbml0ZShpKSYmKGVbdF09TWF0aC5yb3VuZChNYXRoLm1heCgwLGkpKSl9ZnVuY3Rpb24gb0YoZSl7Y29uc3QgdD17W3RGLkNPTk5fVFlQRV06MCxbdEYuUlRUXTplLnJ0dH07c3dpdGNoKGUuc2VsZWN0ZWRDYW5kaWRhdGVQYWlyLmxvY2FsQ2FuZGlkYXRlLmNhbmRpZGF0ZVR5cGUpe2Nhc2VcInJlbGF5XCI6e2NvbnN0IGk9ZS5zZWxlY3RlZENhbmRpZGF0ZVBhaXIubG9jYWxDYW5kaWRhdGUucmVsYXlQcm90b2NvbDtcInVkcFwiPT09aSYmKHRbdEYuQ09OTl9UWVBFXT0xKSxcInRjcFwiPT09aSYmKHRbdEYuQ09OTl9UWVBFXT0zKSxcInRsc1wiPT09aSYmKHRbdEYuQ09OTl9UWVBFXT00KTticmVha31jYXNlXCJzcmZseFwiOnRbdEYuQ09OTl9UWVBFXT0yfXJldHVybiB0fWZ1bmN0aW9uIHNGKGUpe2xldCB0PTA7c3dpdGNoKGUpe2Nhc2VcIm5vbmVcIjp0PTA7YnJlYWs7Y2FzZVwiY3B1XCI6dD0xO2JyZWFrO2Nhc2VcImJhbmR3aWR0aFwiOnQ9MjticmVhaztjYXNlXCJvdGhlclwiOnQ9M31yZXR1cm4gdH1jbGFzcyBhRiBleHRlbmRzIHh5e2NvbnN0cnVjdG9yKGUpe3N1cGVyKCksRmcodGhpcyxcInN0b3JlXCIsdm9pZCAwKSxGZyh0aGlzLFwidXBsb2FkV1JUQ1N0YXRzVGltZXJcIix2b2lkIDApLEZnKHRoaXMsXCJ1cGxvYWRPdXRib3VuZERlbm9pc2VyU3RhdHNUaW1lclwiLHZvaWQgMCksRmcodGhpcyxcInVwbG9hZEV4dFN0YXRzVGltZXJcIix2b2lkIDApLEZnKHRoaXMsXCJ1cGxvYWRFeHRVc2FnZVN0YXRzVGltZXJcIix2b2lkIDApLEZnKHRoaXMsXCJ1cGxvYWRJbmJvdW5kRXh0U3RhdHNUaW1lclwiLHZvaWQgMCksRmcodGhpcyxcInJlcXVlc3RTdGF0c1wiLHZvaWQgMCksRmcodGhpcyxcInJlcXVlc3RUcmFuc3BvcnRTdGF0c1wiLHZvaWQgMCksRmcodGhpcyxcInJlcXVlc3RMb2NhbE1lZGlhXCIsdm9pZCAwKSxGZyh0aGlzLFwicmVxdWVzdFJlbW90ZU1lZGlhXCIsdm9pZCAwKSxGZyh0aGlzLFwicmVxdWVzdEFsbFRyYWNrc1wiLHZvaWQgMCksRmcodGhpcyxcInJlcXVlc3RWaWRlb0lzUmVhZHlcIix2b2lkIDApLEZnKHRoaXMsXCJyZXF1ZXN0VXBsb2FkU3RhdHNcIix2b2lkIDApLEZnKHRoaXMsXCJyZXF1ZXN0VXBsb2FkXCIsdm9pZCAwKSxGZyh0aGlzLFwidXBsb2FkT3V0Ym91bmRTdGFydGVkXCIsITEpLEZnKHRoaXMsXCJ1cGxvYWRJbmJvdW5kU3RhcnRlZFwiLCExKSxGZyh0aGlzLFwidXBsb2FkVHJhbnNwb3J0U3RhcnRlZFwiLCExKSxGZyh0aGlzLFwidXBsb2FkRXh0ZW5zaW9uVXNhZ2VTdGFydGVkXCIsITEpLEZnKHRoaXMsXCJsYXN0UmVjdlN0YXRzXCIsdm9pZCAwKSxGZyh0aGlzLFwibGFzdFNlbmRTdGF0c1wiLHZvaWQgMCksRmcodGhpcyxcImxhc3RGdWxsUmVjdlN0YXRzXCIsdm9pZCAwKSxGZyh0aGlzLFwibGFzdEZ1bGxTZW5kU3RhdHNcIix2b2lkIDApLEZnKHRoaXMsXCJuZWVkVXBsb2FkUmVuZGVyRnJlZXplVGltZVwiLCEwKSx0aGlzLnN0b3JlPWV9dXBsb2FkV1JUQ1N0YXRzKGUpe2lmKCF0aGlzLnJlcXVlc3RTdGF0c3x8IXRoaXMucmVxdWVzdFVwbG9hZFN0YXRzKXJldHVybjtsZXQgdCxpO2lmKHRoaXMudXBsb2FkVHJhbnNwb3J0U3RhcnRlZCYmKHQ9dGhpcy5yZXF1ZXN0U3RhdHMoKSx0aGlzLnN0b3JlLnVzZVAyUCYmKGk9dGhpcy5yZXF1ZXN0U3RhdHMoITApKSksIXQmJnRoaXMudXBsb2FkT3V0Ym91bmRTdGFydGVkJiYodD10aGlzLnJlcXVlc3RTdGF0cygpKSwhaSYmdGhpcy51cGxvYWRJbmJvdW5kU3RhcnRlZCYmKGk9dGhpcy5yZXF1ZXN0U3RhdHMoITApKSx0fHxpKXtjb25zdCBuPXt9O2lmKHRoaXMudXBsb2FkVHJhbnNwb3J0U3RhcnRlZCYmdCl7Y29uc3Qgcj10aGlzLmdldFRyYW5zcG9ydFN0YXRzKHQsaSxlKTtyJiYobi5taXNjPVtyXSl9aWYodGhpcy51cGxvYWRPdXRib3VuZFN0YXJ0ZWQmJnQpe2NvbnN0IGk9dGhpcy5nZXRPdXRib3VuZFN0YXRzKHQsZT90aGlzLmxhc3RTZW5kU3RhdHM6dGhpcy5sYXN0RnVsbFNlbmRTdGF0cyxlKTtpJiYobi5vdXRib3VuZD1baV0pfWlmKHRoaXMudXBsb2FkSW5ib3VuZFN0YXJ0ZWQmJmkpe2NvbnN0IHQ9dGhpcy5nZXRJbmJvdW5kU3RhdHMoaSxlP3RoaXMubGFzdFJlY3ZTdGF0czp0aGlzLmxhc3RGdWxsUmVjdlN0YXRzLGUpO3QmJihuLmluYm91bmQ9dCl9dGhpcy5yZXF1ZXN0VXBsb2FkU3RhdHMobil9dGhpcy5sYXN0UmVjdlN0YXRzPWksdGhpcy5sYXN0U2VuZFN0YXRzPXQsZXx8KHRoaXMubGFzdEZ1bGxSZWN2U3RhdHM9aSx0aGlzLmxhc3RGdWxsU2VuZFN0YXRzPXQpfXN0YXJ0VXBsb2FkV1JUQ1N0YXRzKCl7aWYodGhpcy51cGxvYWRXUlRDU3RhdHNUaW1lcilyZXR1cm47bGV0IGU9MTt0aGlzLnVwbG9hZFdSVENTdGF0c1RpbWVyPXdpbmRvdy5zZXRJbnRlcnZhbCgoKCk9PntpZighdGhpcy51cGxvYWRUcmFuc3BvcnRTdGFydGVkJiYhdGhpcy51cGxvYWRJbmJvdW5kU3RhcnRlZCYmIXRoaXMudXBsb2FkT3V0Ym91bmRTdGFydGVkKXJldHVybiB0aGlzLnN0b3BVcGxvYWRXUlRDU3RhdHMoKTt0aGlzLnVwbG9hZFdSVENTdGF0cyhlIT09bkYpLCsrZT09PW5GKzEmJihlPTEpfSksaUYpfXN0b3BVcGxvYWRXUlRDU3RhdHMoKXt3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLnVwbG9hZFdSVENTdGF0c1RpbWVyKSx0aGlzLnVwbG9hZFdSVENTdGF0c1RpbWVyPXZvaWQgMCx0aGlzLmxhc3RTZW5kU3RhdHMmJih0aGlzLmxhc3RTZW5kU3RhdHMudmlkZW9TZW5kPVtdLHRoaXMubGFzdFNlbmRTdGF0cy5hdWRpb1NlbmQ9W10sdGhpcy5sYXN0U2VuZFN0YXRzPXZvaWQgMCksdGhpcy5sYXN0UmVjdlN0YXRzJiYodGhpcy5sYXN0UmVjdlN0YXRzLnZpZGVvUmVjdj1bXSx0aGlzLmxhc3RSZWN2U3RhdHMuYXVkaW9SZWN2PVtdLHRoaXMubGFzdFJlY3ZTdGF0cz12b2lkIDApfWdldFRyYW5zcG9ydFN0YXRzKGUsdCxpKXtpZighdGhpcy5yZXF1ZXN0U3RhdHMpcmV0dXJuO2lmKGkpcmV0dXJuIG51bGw9PWUucnR0P3ZvaWQgMDp7YWRkaXRpb246e1t0Ri5SVFRdOmUucnR0LFt0Ri5DT05OX1RZUEVdOnZvaWQgMH19O2NvbnN0IG49b0YoZSk7aWYodGhpcy5zdG9yZS51c2VQMlApe2lmKHQpe2NvbnN0IGU9b0YodCk7blt0Ri5DT05OX1RZUEVdKz1lW3RGLkNPTk5fVFlQRV08PDN9blt0Ri5DT05OX1RZUEVdKz0xMTB9ZWxzZSBuW3RGLkNPTk5fVFlQRV0rPTEwMDtyZXR1cm57YWRkaXRpb246bn19Z2V0T3V0Ym91bmRTdGF0cyhlLHQsaSl7aWYoIXRoaXMucmVxdWVzdFVwbG9hZFN0YXRzfHwhdGhpcy5yZXF1ZXN0TG9jYWxNZWRpYSlyZXR1cm47Y29uc3Qgbj10aGlzLnJlcXVlc3RMb2NhbE1lZGlhKCk7aWYoIW58fDA9PT1uLmxlbmd0aClyZXR1cm47bGV0IHIsbyxzO3JldHVybiBuLmZvckVhY2goKG49PntsZXRbYSx7dHJhY2s6Yyxzc3JjczpkfV09bjtzd2l0Y2goYSl7Y2FzZSBoTy5Mb2NhbFZpZGVvTG93VHJhY2s6Y2FzZSBoTy5Mb2NhbFZpZGVvVHJhY2s6aWYoYT09PWhPLkxvY2FsVmlkZW9UcmFjayl7Y29uc3Qgbj1mdW5jdGlvbihlLHQsaSxuLHIpe2NvbnN0IG89dC52aWRlb1NlbmQuZmluZCgodD0+dC5zc3JjPT09ZSkpO2lmKCFvKXJldHVybjtjb25zdCBzPXt9LHtzZW50RnJhbWU6YSxpbnB1dEZyYW1lOmN9PW87aWYoYyYmYSl7Y29uc3QgZT1jLmZyYW1lUmF0ZSx0PWEuZnJhbWVSYXRlO3NbcVYuRlJFRVpFXT1mdW5jdGlvbihlLHQpe2xldCBpPSEwO3JldHVybiBpPSEoZTw9NSkmJihlPD0xMD90PDM6ZTw9MjA/dDw0OnQ8NSksaX0oZSx0KT8xOjB9aWYockYocyxxVi5RUF9TVU0sby5xcFN1bVBlckZyYW1lKSxyKXJldHVybiBzO3N3aXRjaChhJiYockYocyxxVi5IRUlHSFQsYS5oZWlnaHQpLHJGKHMscVYuV0lEVEgsYS53aWR0aCksckYocyxxVi5GUkFNRV9SQVRFLGEuZnJhbWVSYXRlKSksc1txVi5ESVNBQkxFRF09bi5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjayYmIW4uX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suZW5hYmxlZHx8bi5fbWVkaWFTdHJlYW1UcmFjayYmIW4uX21lZGlhU3RyZWFtVHJhY2suZW5hYmxlZD8xOjAsby5hZGFwdGlvbkNoYW5nZVJlYXNvbil7Y2FzZVwibm9uZVwiOnNbcVYuQURBUFRBVElPTl09MDticmVhaztjYXNlXCJjcHVcIjpzW3FWLkFEQVBUQVRJT05dPTE7YnJlYWs7Y2FzZVwiYmFuZHdpZHRoXCI6c1txVi5BREFQVEFUSU9OXT0yO2JyZWFrO2Nhc2VcIm90aGVyXCI6c1txVi5BREFQVEFUSU9OXT0zfWxldCBkPTA7by5hZGFwdGlvbkNoYW5nZVJlYXNvbiYmKGQrPXNGKG8uYWRhcHRpb25DaGFuZ2VSZWFzb24pKSx0LnF1YWxpdHlMaW1pdGF0aW9uUmVhc29uJiYoZCs9c0YodC5xdWFsaXR5TGltaXRhdGlvblJlYXNvbik8PDMpLHNbcVYuQURBUFRBVElPTl09ZCxzW3FWLlBMQVlFUl9TVEFUVVNdPXhMW24uX3BsYXllcj9uLl9wbGF5ZXIudmlkZW9FbGVtZW50U3RhdHVzOlwidW5pbml0XCJdLHJGKHMscVYuTkFDS1Msby5uYWNrc0NvdW50KSxyRihzLHFWLlBMSVMsby5wbGlzQ291bnQpLHJGKHMscVYuRklSUyxvLmZpcnNDb3VudCksckYocyxxVi5BVkdfRU5DT0RFLG8uYXZnRW5jb2RlTXMpO2NvbnN0IGw9aSYmaS52aWRlb1NlbmQuZmluZCgodD0+dC5zc3JjPT09ZSkpO2lmKGwpe2xldCBlPXI/aUY6aUYqbkY7bC50aW1lc3RhbXAmJm8udGltZXN0YW1wJiYoZT1vLnRpbWVzdGFtcC1sLnRpbWVzdGFtcCksbnVsbCE9bC5wYWNrZXRzJiZudWxsIT1vLnBhY2tldHMmJnJGKHMscVYuUEFDS0FHRV9SQVRFLDFlMyooby5wYWNrZXRzLWwucGFja2V0cykvZSksbnVsbCE9by5wYWNrZXRzTG9zdCYmbnVsbCE9bC5wYWNrZXRzTG9zdCYmckYocyxxVi5QQUNLQUdFX0xPU1Qsby5wYWNrZXRzTG9zdC1sLnBhY2tldHNMb3N0KSxudWxsIT1sLmJ5dGVzJiZudWxsIT1vLmJ5dGVzJiZyRihzLHFWLkJJVFJBVEUsOCooby5ieXRlcy1sLmJ5dGVzKS9lKX1yZXR1cm4gc30oZFswXS5zc3JjSWQsZSx0LGMsaSkscj1pP251bGw6ZnVuY3Rpb24oZSx0LGkpe2NvbnN0IG49dC52aWRlb1NlbmQuZmluZCgodD0+dC5zc3JjPT09ZSkpO2lmKCFuKXJldHVybiBudWxsO2NvbnN0IHI9e30sbz1uLmlucHV0RnJhbWUscz1vJiZvLmhlaWdodHx8aSYmaS52aWRlb0hlaWdodHx8MCxhPW8mJm8ud2lkdGh8fGkmJmkudmlkZW9XaWR0aHx8MCxjPW8mJm8uZnJhbWVSYXRlfHwwO3JldHVybiByRihyLFlWLkhFSUdIVCxzKSxyRihyLFlWLldJRFRILGEpLHJGKHIsWVYuRlJBTUVfUkFURSxjKSxyfShkWzBdLnNzcmNJZCxlLGMpLHM9aT9udWxsOmZ1bmN0aW9uKGUpe2NvbnN0IHQ9e307cmV0dXJuIHJGKHQscVYuUkVUUkFOU01JVCxlLmJpdHJhdGUucmV0cmFuc21pdCksckYodCxxVi5UQVJHRVRfRU5DT0RFRCxlLmJpdHJhdGUudGFyZ2V0RW5jb2RlZCksckYodCxxVi5BQ1RVQUxfRU5DT0RFRCxlLmJpdHJhdGUuYWN0dWFsRW5jb2RlZCksckYodCxxVi5UUkFOU01JVCxlLmJpdHJhdGUudHJhbnNtaXQpLHJGKHQscVYuQkFORFdJRFRILGUuc2VuZEJhbmR3aWR0aCksdH0oZSk7bz1PYmplY3QuYXNzaWduKHt9LG4scixzKX1lbHNlIHM9aT92b2lkIDA6ZnVuY3Rpb24oZSx0LGkpe2NvbnN0IG49dC52aWRlb1NlbmQuZmluZCgodD0+dC5zc3JjPT09ZSkpO2lmKCFuKXJldHVybjtjb25zdCByPXt9LG89bi5zZW50RnJhbWU7aWYobyYmKHJGKHIselYuSEVJR0hULG8uaGVpZ2h0KSxyRihyLHpWLldJRFRILG8ud2lkdGgpLHJGKHIselYuRlJBTUVfUkFURSxvLmZyYW1lUmF0ZSkpLGkpe2NvbnN0IHQ9aS52aWRlb1NlbmQuZmluZCgodD0+dC5zc3JjPT09ZSkpO2lmKHQpe2xldCBlPWlGKm5GO3QudGltZXN0YW1wJiZuLnRpbWVzdGFtcCYmKGU9bi50aW1lc3RhbXAtdC50aW1lc3RhbXApLG51bGwhPXQucGFja2V0cyYmbnVsbCE9bi5wYWNrZXRzJiZyRihyLHpWLlBBQ0tBR0VfUkFURSwxZTMqKG4ucGFja2V0cy10LnBhY2tldHMpL2UpLG51bGwhPW4ucGFja2V0c0xvc3QmJm51bGwhPXQucGFja2V0c0xvc3QmJnJGKHIselYuUEFDS0FHRV9MT1NULG4ucGFja2V0c0xvc3QtdC5wYWNrZXRzTG9zdCksbnVsbCE9dC5ieXRlcyYmbnVsbCE9bi5ieXRlcyYmckYocix6Vi5CSVRSQVRFLDgqKG4uYnl0ZXMtdC5ieXRlcykvZSl9fXJldHVybiByfShkWzBdLnNzcmNJZCxlLHQpO2JyZWFrO2Nhc2UgaE8uTG9jYWxBdWRpb1RyYWNrOnI9aT92b2lkIDA6ZnVuY3Rpb24oZSx0LGksbil7Y29uc3Qgcj10LmF1ZGlvU2VuZC5maW5kKCh0PT50LnNzcmM9PT1lKSk7aWYoIXIpcmV0dXJuO2NvbnN0IG89e307b1taVi5ESVNBQkxFRF09bi5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjayYmIW4uX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suZW5hYmxlZHx8bi5fbWVkaWFTdHJlYW1UcmFjayYmIW4uX21lZGlhU3RyZWFtVHJhY2suZW5hYmxlZD8xOjA7Y29uc3Qgcz0xMDAqbi5fc291cmNlLmdldEFjY3VyYXRlVm9sdW1lTGV2ZWwoKSxhPXIuaW5wdXRMZXZlbDtpZihudWxsIT1hKXtjb25zdCBlPU1hdGguY2VpbCg1MCpNYXRoLmxvZzEwKDEwMCphKzEpKTtyRihvLFpWLkxFVkVMLGUpfWVsc2UgckYobyxaVi5MRVZFTCxzKTtyRihvLFFWLlBDTV9MRVZFTCxzKSxyRihvLFpWLkFFQ19SRVRVUk5fTE9TUyxyLmFlY1JldHVybkxvc3MpLHJGKG8sWlYuQUVDX1JFVFVSTl9MT1NTX0VOSCxyLmFlY1JldHVybkxvc3NFbmhhbmNlbWVudCksb1taVi5GUkVFWkVdPTA7Y29uc3QgYz1pJiZpLmF1ZGlvU2VuZC5maW5kKCh0PT50LnNzcmM9PT1lKSk7aWYoYyl7bGV0IGU9aUYqbkY7Yy50aW1lc3RhbXAmJnIudGltZXN0YW1wJiYoZT1yLnRpbWVzdGFtcC1jLnRpbWVzdGFtcCksbnVsbCE9Yy5ieXRlcyYmbnVsbCE9ci5ieXRlcyYmckYobyxaVi5CSVRSQVRFLDgqKHIuYnl0ZXMtYy5ieXRlcykvZSksbnVsbCE9Yy5wYWNrZXRzJiZudWxsIT1yLnBhY2tldHMmJnJGKG8sWlYuUEFDS0FHRV9SQVRFLDFlMyooci5wYWNrZXRzLWMucGFja2V0cykvZSl9cmV0dXJuIG99KGRbMF0uc3NyY0lkLGUsdCxjKX19KSkse2hpZ2g6byxsb3c6cyxhdWRpbzpyfX1nZXRJbmJvdW5kU3RhdHMoZSx0LGkpe2lmKCF0aGlzLnJlcXVlc3RSZW1vdGVNZWRpYSlyZXR1cm47Y29uc3Qgbj10aGlzLnJlcXVlc3RSZW1vdGVNZWRpYSgpfHxbXSxyPVtdO3JldHVybiBuLmZvckVhY2goKG49PntsZXRbbyxzXT1uO2NvbnN0IGE9e3BlZXI6by51aWR9O2lmKHMuaGFzKGRPLlZJREVPKSYmby52aWRlb1RyYWNrKXtjb25zdCBuPW8uX3ZpZGVvU1NSQyYmdGhpcy5yZXF1ZXN0VmlkZW9Jc1JlYWR5JiZ0aGlzLnJlcXVlc3RWaWRlb0lzUmVhZHkoby5fdmlkZW9TU1JDKXx8ITEscj1vLnZpZGVvVHJhY2s/ZnVuY3Rpb24oZSx0LGksbixyLG8scyl7dmFyIGE7Y29uc3QgYz10LnZpZGVvUmVjdi5maW5kKCh0PT50LnNzcmM9PT1lKSk7aWYoIWMpcmV0dXJuO2NvbnN0IGQ9e30se3JlY2VpdmVkRnJhbWU6bCxvdXRwdXRGcmFtZTp1LGRlY29kZUZyYW1lUmF0ZTpofT1jLHA9aSYmaS52aWRlb1JlY3YuZmluZCgodD0+dC5zc3JjPT09ZSkpO2lmKGRbSlYuRlJFRVpFXT1yJiZERi5pc1JlbW90ZVZpZGVvRnJlZXplKG4sYyxwKT8xOjAsckYoZCxYVi5GUkFNRV9SQVRFX0RFQ09ERSxoKSxyRihkLEpWLlFQX1NVTSxjLnFwU3VtUGVyRnJhbWUpLGMuZnJhbWVzUmF0ZUZpcmVmb3gmJnJGKGQsSlYuRlJBTUVfUkFURSxjLmZyYW1lc1JhdGVGaXJlZm94KSxsJiZyRihkLEpWLkZSQU1FX1JBVEUsbC5mcmFtZVJhdGUpLHApe2NvbnN0IGU9dC50aW1lc3RhbXAtaS50aW1lc3RhbXB8fChzP2lGOm5GKmlGKTtudWxsIT1jLnBhY2tldHNMb3N0JiZudWxsIT1wLnBhY2tldHNMb3N0JiZyRihkLEpWLlBBQ0tBR0VfTE9TVCxjLnBhY2tldHNMb3N0LXAucGFja2V0c0xvc3QpLG51bGwhPXAuYnl0ZXMmJm51bGwhPWMuYnl0ZXMmJnJGKGQsSlYuQklUUkFURSw4KihjLmJ5dGVzLXAuYnl0ZXMpL2UpLG51bGwhPXAucGFja2V0cyYmbnVsbCE9Yy5wYWNrZXRzJiZyRihkLEpWLlBBQ0tBR0VfUkFURSwxZTMqKGMucGFja2V0cy1wLnBhY2tldHMpL2UpfWlmKHMpcmV0dXJuIGQ7bD8ockYoZCxKVi5IRUlHSFQsbC5oZWlnaHQpLHJGKGQsSlYuV0lEVEgsbC53aWR0aCkpOm4mJihyRihkLEpWLkhFSUdIVCxuLl92aWRlb0hlaWdodHx8MCksckYoZCxKVi5XSURUSCxuLl92aWRlb1dpZHRofHwwKSksdSYmckYoZCxYVi5GUkFNRV9SQVRFX09VVFBVVCx1LmZyYW1lUmF0ZSk7Y29uc3QgXz1udWxsPT09KGE9bi5fcGxheWVyKXx8dm9pZCAwPT09YT92b2lkIDA6YS5yZW5kRnJhbWVSYXRlLnRvRml4ZWQoMCk7aWYoXyYmckYoZCxYVi5GUkFNRV9SQVRFX1JFTkRFUiwrXyksckYoZCxKVi5KSVRURVJfQlVGRkVSLGMuaml0dGVyQnVmZmVyTXMpLHJGKGQsSlYuQ1VSUkVOVF9ERUxBWSxjLmN1cnJlbnREZWxheU1zKSxyRihkLEpWLkZJUlMsYy5maXJzQ291bnQpLHJGKGQsSlYuTkFDS1MsYy5uYWNrc0NvdW50KSxyRihkLEpWLlBMSVMsYy5wbGlzQ291bnQpLG4pe2RbSlYuRElTQUJMRURdPW4uX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suZW5hYmxlZCYmbi5fbWVkaWFTdHJlYW1UcmFjay5lbmFibGVkPzA6MTtjb25zdCBlPW4uX3BsYXllcjtpZihlKXtjb25zdHtmcmVlemVUaW1lQ291bnRlckxpc3Q6dCxyZW5kZXJGcmVlemVBY2NUaW1lOmksdmlkZW9FbGVtZW50U3RhdHVzOm59PWU7aWYodCYmdC5sZW5ndGg+MCYmckYoZCxYVi5GUkVFWkVfVElNRSx0LnNwbGljZSgwLDEpWzBdKSxvJiZcInZpc2libGVcIj09PXlVLnZpc2liaWxpdHkmJm49PT1NTC5QTEFZSU5HJiZaUCgpLnN1cHBvcnRSZXF1ZXN0VmlkZW9GcmFtZUNhbGxiYWNrKXtjb25zdCB0PU1hdGgubWluKDZlMyxpKTtlLnJlbmRlckZyZWV6ZUFjY1RpbWU9TWF0aC5tYXgoMCxpLXQpLHJGKGQsWFYuRlJFRVpFX1RJTUVfUkVOREVSLHQpfWlmKFwibnVtYmVyXCI9PXR5cGVvZiBjLnRvdGFsRnJlZXplc0R1cmF0aW9uKXtjb25zdCBlPXAmJnAudG90YWxGcmVlemVzRHVyYXRpb24/Yy50b3RhbEZyZWV6ZXNEdXJhdGlvbi1wLnRvdGFsRnJlZXplc0R1cmF0aW9uOmMudG90YWxGcmVlemVzRHVyYXRpb247ckYoZCxYVi5GUkVFWkVfRFVSQVRJT04sMWUzKmUpfX19aWYoZFtKVi5QTEFZRVJfU1RBVFVTXT14TFtuLl9wbGF5ZXI/bi5fcGxheWVyLnZpZGVvRWxlbWVudFN0YXR1czpcInVuaW5pdFwiXSxwJiZ2b2lkIDAhPT1jLnRvdGFsSW50ZXJGcmFtZURlbGF5JiZ2b2lkIDAhPT1jLnRvdGFsU3F1YXJlZEludGVyRnJhbWVEZWxheSYmdm9pZCAwIT09cC50b3RhbEludGVyRnJhbWVEZWxheSYmdm9pZCAwIT09cC50b3RhbFNxdWFyZWRJbnRlckZyYW1lRGVsYXkpe2NvbnN0IGU9Yy50b3RhbEludGVyRnJhbWVEZWxheS1wLnRvdGFsSW50ZXJGcmFtZURlbGF5LHQ9Yy50b3RhbFNxdWFyZWRJbnRlckZyYW1lRGVsYXktcC50b3RhbFNxdWFyZWRJbnRlckZyYW1lRGVsYXksaT1jLmZyYW1lc0RlY29kZUNvdW50LXAuZnJhbWVzRGVjb2RlQ291bnQsbj1lL2kqMWUzLHI9TWF0aC5yb3VuZCgxZTMqTWF0aC5zcXJ0KCh0LU1hdGgucG93KGUsMikvaSkvaSkpOyFpc05hTihyKSYmbityPk1hdGgubWF4KDMqbixuKzE1MCkmJihkW0pWLklfRlJBTUVfREVMQVldPXIpfXJldHVybiBkfShvLl92aWRlb1NTUkMsZSx0LG8udmlkZW9UcmFjaywhMD09PW4sdGhpcy5uZWVkVXBsb2FkUmVuZGVyRnJlZXplVGltZSxpKTp2b2lkIDA7ciYmKGEudmlkZW89cil9aWYocy5oYXMoZE8uQVVESU8pJiZvLmF1ZGlvVHJhY2spe2NvbnN0IG49by5hdWRpb1RyYWNrP2Z1bmN0aW9uKGUsdCxpLG4scil7Y29uc3Qgbz10LmF1ZGlvUmVjdi5maW5kKCh0PT50LnNzcmM9PT1lKSk7aWYoIW8pcmV0dXJuO2NvbnN0IHM9e30sYT1pJiZpLmF1ZGlvUmVjdi5maW5kKCh0PT50LnNzcmM9PT1lKSkse3JlY2VpdmVkRnJhbWVzOmMsZHJvcHBlZEZyYW1lczpkfT1vO3ZhciBsLHU7aWYockYocywkVi5KSVRURVIsby5qaXR0ZXJNcyksbnVsbCE9YyYmbnVsbCE9ZCYmKHNbJFYuRlJFRVpFXT0odT1kLDA9PT0obD1jKXx8MTAwKnUvbD4yMD8xOjApKSxhKXtjb25zdCBlPXQudGltZXN0YW1wLWkudGltZXN0YW1wfHwocj9pRjppRipuRik7bnVsbCE9by5wYWNrZXRzJiZudWxsIT1hLnBhY2tldHMmJnJGKHMsJFYuUEFDS0FHRV9SQVRFLDFlMyooby5wYWNrZXRzLWEucGFja2V0cykvZSksbnVsbCE9YS5ieXRlcyYmbnVsbCE9by5ieXRlcyYmckYocywkVi5CSVRSQVRFLDgqKG8uYnl0ZXMtYS5ieXRlcykvZSksbnVsbCE9by5wYWNrZXRzTG9zdCYmbnVsbCE9YS5wYWNrZXRzTG9zdCYmckYocywkVi5QQUNLQUdFX0xPU1Qsby5wYWNrZXRzTG9zdC1hLnBhY2tldHNMb3N0KX1pZihyKXJldHVybiBzO2NvbnN0IGg9MTAwKm4uX3NvdXJjZS5nZXRBY2N1cmF0ZVZvbHVtZUxldmVsKCkscD1vLm91dHB1dExldmVsO2lmKG51bGwhPXApe2NvbnN0IGU9TWF0aC5jZWlsKDUwKk1hdGgubG9nMTAoMTAwKnArMSkpO3JGKHMsZUYuTEVWRUwsZSl9aWYockYocywkVi5QQ01fTEVWRUwsaCksbiYmKHNbJFYuRElTQUJMRURdPW4uX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suZW5hYmxlZCYmbi5fbWVkaWFTdHJlYW1UcmFjay5lbmFibGVkPzA6MSksckYocywkVi5KSVRURVJfQlVGRkVSLG8uaml0dGVyQnVmZmVyTXMpLHJGKHMsJFYuQ1VSUkVOVF9ERUxBWSxvLmppdHRlckJ1ZmZlck1zKSxzWyRWLlBMQVlFUl9TVEFUVVNdPXhMW21rLmdldFBsYXllclN0YXRlKG4uZ2V0VHJhY2tJZCgpKV0sYSl7Y29uc3QgZT1vLmNvbmNlYWxlZFNhbXBsZXMtYS5jb25jZWFsZWRTYW1wbGVzO2U+MCYmckYocywkVi5DT05DRUFMRURfU0FNUExFUyxlKX1yZXR1cm4gc30oby5fYXVkaW9TU1JDLGUsdCxvLmF1ZGlvVHJhY2ssaSk6dm9pZCAwO24mJihhLmF1ZGlvPW4pfShhLnZpZGVvfHxhLmF1ZGlvKSYmci5wdXNoKGEpfSkpLHRoaXMubmVlZFVwbG9hZFJlbmRlckZyZWV6ZVRpbWU9IXRoaXMubmVlZFVwbG9hZFJlbmRlckZyZWV6ZVRpbWUscn1zdGFydFVwbG9hZFRyYW5zcG9ydFN0YXRzKCl7dGhpcy51cGxvYWRUcmFuc3BvcnRTdGFydGVkPSEwLHRoaXMudXBsb2FkV1JUQ1N0YXRzVGltZXJ8fHRoaXMuc3RhcnRVcGxvYWRXUlRDU3RhdHMoKX1zdG9wVXBsb2FkVHJhbnNwb3J0U3RhdHMoKXt0aGlzLnVwbG9hZFRyYW5zcG9ydFN0YXJ0ZWQ9ITF9c3RhcnRVcGxvYWRPdXRib3VuZFN0YXRzKCl7dGhpcy51cGxvYWRPdXRib3VuZFN0YXJ0ZWR8fCh0aGlzLnVwbG9hZE91dGJvdW5kU3RhcnRlZD0hMCx0aGlzLnVwbG9hZFdSVENTdGF0c1RpbWVyfHx0aGlzLnN0YXJ0VXBsb2FkV1JUQ1N0YXRzKCksdGhpcy51cGxvYWRPdXRib3VuZERlbm9pc2VyU3RhdHNUaW1lciYmd2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy51cGxvYWRPdXRib3VuZERlbm9pc2VyU3RhdHNUaW1lciksdGhpcy51cGxvYWRPdXRib3VuZERlbm9pc2VyU3RhdHNUaW1lcj13aW5kb3cuc2V0SW50ZXJ2YWwoKCgpPT57aWYoIXRoaXMucmVxdWVzdEFsbFRyYWNrc3x8IXRoaXMucmVxdWVzdFVwbG9hZClyZXR1cm47Y29uc3QgZT0odGhpcy5yZXF1ZXN0QWxsVHJhY2tzKCl8fFtdKS5maW5kKChlPT5lIGluc3RhbmNlb2YgU00pKTtpZihlJiZlLl9leHRlcm5hbC5nZXREZW5vaXNlclN0YXRzKXtjb25zdCB0PWUuX2V4dGVybmFsLmdldERlbm9pc2VyU3RhdHMoKTt0JiZ0aGlzLnJlcXVlc3RVcGxvYWQoTHcuREVOT0lTRVJfU1RBVFMsdCl9fSksMmUzKSx0aGlzLnVwbG9hZEV4dFN0YXRzVGltZXImJndpbmRvdy5jbGVhckludGVydmFsKHRoaXMudXBsb2FkRXh0U3RhdHNUaW1lciksdGhpcy51cGxvYWRFeHRTdGF0c1RpbWVyPXdpbmRvdy5zZXRJbnRlcnZhbCgoKCk9PntpZighdGhpcy5yZXF1ZXN0QWxsVHJhY2tzfHwhdGhpcy5yZXF1ZXN0VXBsb2FkKXJldHVybjt0aGlzLnJlcXVlc3RBbGxUcmFja3MoKS5mb3JFYWNoKChlPT57ZS5nZXRQcm9jZXNzb3JTdGF0cygpLmZvckVhY2goKGU9Pnt0aGlzLnJlcXVlc3RVcGxvYWQmJnRoaXMucmVxdWVzdFVwbG9hZChlLnR5cGUsZS5zdGF0cyl9KSl9KSl9KSwyZTMpKX1zdG9wVXBsb2FkT3V0Ym91bmRTdGF0cygpe3RoaXMudXBsb2FkT3V0Ym91bmRTdGFydGVkJiYodGhpcy51cGxvYWRPdXRib3VuZFN0YXJ0ZWQ9ITEsdGhpcy5sYXN0U2VuZFN0YXRzJiYodGhpcy5sYXN0U2VuZFN0YXRzLnZpZGVvU2VuZD1bXSx0aGlzLmxhc3RTZW5kU3RhdHMuYXVkaW9TZW5kPVtdLHRoaXMubGFzdFNlbmRTdGF0cz12b2lkIDApLHRoaXMudXBsb2FkT3V0Ym91bmREZW5vaXNlclN0YXRzVGltZXImJndpbmRvdy5jbGVhckludGVydmFsKHRoaXMudXBsb2FkT3V0Ym91bmREZW5vaXNlclN0YXRzVGltZXIpLHRoaXMudXBsb2FkT3V0Ym91bmREZW5vaXNlclN0YXRzVGltZXI9dm9pZCAwKX1zdGFydFVwbG9hZEluYm91bmRTdGF0cygpe3RoaXMudXBsb2FkSW5ib3VuZFN0YXJ0ZWR8fCh0aGlzLnVwbG9hZEluYm91bmRTdGFydGVkPSEwLHRoaXMudXBsb2FkV1JUQ1N0YXRzVGltZXJ8fHRoaXMuc3RhcnRVcGxvYWRXUlRDU3RhdHMoKSx0aGlzLnVwbG9hZEluYm91bmRFeHRTdGF0c1RpbWVyJiZ3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLnVwbG9hZEluYm91bmRFeHRTdGF0c1RpbWVyKSx0aGlzLnVwbG9hZEluYm91bmRFeHRTdGF0c1RpbWVyPXdpbmRvdy5zZXRJbnRlcnZhbCgoKCk9PntpZighdGhpcy5yZXF1ZXN0VXBsb2FkfHwhdGhpcy5yZXF1ZXN0UmVtb3RlTWVkaWEpcmV0dXJuOyh0aGlzLnJlcXVlc3RSZW1vdGVNZWRpYSgpfHxbXSkuZm9yRWFjaCgoZT0+e2xldFt0LGldPWU7aWYoaS5oYXMoZE8uVklERU8pJiZ0LnZpZGVvVHJhY2spe3QudmlkZW9UcmFjay5nZXRQcm9jZXNzb3JTdGF0cygpLmZvckVhY2goKGU9Pnt0aGlzLnJlcXVlc3RVcGxvYWQmJnRoaXMucmVxdWVzdFVwbG9hZChlLnR5cGUsZS5zdGF0cyl9KSl9aWYoaS5oYXMoZE8uQVVESU8pJiZ0LmF1ZGlvVHJhY2spe3QuYXVkaW9UcmFjay5nZXRQcm9jZXNzb3JTdGF0cygpLmZvckVhY2goKGU9Pnt0aGlzLnJlcXVlc3RVcGxvYWQmJnRoaXMucmVxdWVzdFVwbG9hZChlLnR5cGUsZS5zdGF0cyl9KSl9fSkpfSksMmUzKSl9c3RvcFVwbG9hZEluYm91bmRTdGF0cygpe3RoaXMudXBsb2FkSW5ib3VuZFN0YXJ0ZWQmJih0aGlzLnVwbG9hZEluYm91bmRTdGFydGVkPSExLHRoaXMubGFzdFJlY3ZTdGF0cyYmKHRoaXMubGFzdFJlY3ZTdGF0cy52aWRlb1JlY3Y9W10sdGhpcy5sYXN0UmVjdlN0YXRzLmF1ZGlvUmVjdj1bXSx0aGlzLmxhc3RSZWN2U3RhdHM9dm9pZCAwKSl9c3RhcnRVcGxvYWRFeHRlbnNpb25Vc2FnZVN0YXRzKCl7aWYodGhpcy51cGxvYWRFeHRlbnNpb25Vc2FnZVN0YXJ0ZWQpcmV0dXJuO3RoaXMudXBsb2FkRXh0ZW5zaW9uVXNhZ2VTdGFydGVkPSEwLHRoaXMudXBsb2FkRXh0VXNhZ2VTdGF0c1RpbWVyJiZ3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLnVwbG9hZEV4dFVzYWdlU3RhdHNUaW1lcik7Y29uc3QgZT1uZXcgTWFwO3RoaXMudXBsb2FkRXh0VXNhZ2VTdGF0c1RpbWVyPXdpbmRvdy5zZXRJbnRlcnZhbCgoYXN5bmMoKT0+e2NvbnN0IHQ9RGF0ZS5ub3coKSxpPXtjb25uZWN0aW9uSW50ZXJ2YWw6WEEoXCJFWFRFTlNJT05fVVNBR0VfVVBMT0FEX0lOVEVSVkFMXCIpLzFlMyxkZXRhaWxzOltdLGx0czp0fTtsZXQgbj1bXTtjb25zdCByPXRoaXMucmVxdWVzdEFsbFRyYWNrcyYmdGhpcy5yZXF1ZXN0QWxsVHJhY2tzKCl8fFtdO2Zvcihjb25zdCBlIG9mIHIpIWUubXV0ZWQmJmUuZW5hYmxlZCYmKG49bi5jb25jYXQoYXdhaXQgZS5nZXRQcm9jZXNzb3JVc2FnZSgpKSk7Y29uc3Qgbz10aGlzLnJlcXVlc3RSZW1vdGVNZWRpYSYmdGhpcy5yZXF1ZXN0UmVtb3RlTWVkaWEoKXx8W107Zm9yKGNvbnN0W2UsdF1vZiBvKXQuaGFzKGRPLlZJREVPKSYmZS52aWRlb1RyYWNrJiYobj1uLmNvbmNhdChhd2FpdCBlLnZpZGVvVHJhY2suZ2V0UHJvY2Vzc29yVXNhZ2UoKSkpLHQuaGFzKGRPLkFVRElPKSYmZS5hdWRpb1RyYWNrJiYobj1uLmNvbmNhdChhd2FpdCBlLmF1ZGlvVHJhY2suZ2V0UHJvY2Vzc29yVXNhZ2UoKSkpO2lmKDA9PT1uLmxlbmd0aClyZXR1cm47aS5kZXRhaWxzPWZ1bmN0aW9uKGUsdCl7Y29uc3QgaT17fTtmb3IoY29uc3R7aWQ6cyx2YWx1ZTphLGxldmVsOmMsZGlyZWN0aW9uOmR9b2YgZSl7dmFyIG47Y29uc3QgZT1udWxsIT09KG49dC5nZXQocykpJiZ2b2lkIDAhPT1uP246MCxsPTI9PT1hP2UrWEEoXCJFWFRFTlNJT05fVVNBR0VfVVBMT0FEX0lOVEVSVkFMXCIpLzFlMzplO3ZhciByLG87dC5zZXQocyxsKSxpW3NdPygyPT09YSYmKGlbc10udmFsdWU9YSksYz5pW3NdLmxldmVsJiYoaVtzXS5sZXZlbD1jKSxcInJlbW90ZVwiPT09ZCYmKGlbc10ucmVtb3RlVWlkQ291bnQrPTEpLGlbc10udG90YWxUcz1udWxsIT09KHI9dC5nZXQocykpJiZ2b2lkIDAhPT1yP3I6MCk6aVtzXT17dmFsdWU6YSxsZXZlbDpjLHJlbW90ZVVpZENvdW50OlwibG9jYWxcIj09PWQ/MDoxLHRvdGFsVHM6bnVsbCE9PShvPXQuZ2V0KHMpKSYmdm9pZCAwIT09bz9vOjB9fXJldHVybiBPYmplY3Qua2V5cyhpKS5tYXAoKGU9Pntjb25zdHtsZXZlbDp0LHZhbHVlOm4sdG90YWxUczpyfT1pW2VdO3JldHVybntpZDplLGxldmVsOnQsdmFsdWU6bix0b3RhbFRzOnJ9fSkpfShuLGUpO2NvbnN0IHM9RGF0ZS5ub3coKSxhPXM+dD9zOnQrMTt0aGlzLnJlcXVlc3RVcGxvYWQmJnRoaXMucmVxdWVzdFVwbG9hZChMdy5FWFRFTlNJT05fVVNBR0VfU1RBVFMse3VzYWdlU3RhdHM6aSxzZW5kVHM6YX0pfSksWEEoXCJFWFRFTlNJT05fVVNBR0VfVVBMT0FEX0lOVEVSVkFMXCIpKX1zdG9wVXBsb2FkRXh0ZW5zaW9uVXNhZ2VTdGF0cygpe3RoaXMudXBsb2FkRXh0ZW5zaW9uVXNhZ2VTdGFydGVkJiYodGhpcy51cGxvYWRFeHRlbnNpb25Vc2FnZVN0YXJ0ZWQ9ITEsdGhpcy51cGxvYWRFeHRVc2FnZVN0YXRzVGltZXImJndpbmRvdy5jbGVhckludGVydmFsKHRoaXMudXBsb2FkRXh0VXNhZ2VTdGF0c1RpbWVyKSx0aGlzLnVwbG9hZEV4dFVzYWdlU3RhdHNUaW1lcj12b2lkIDApfX1jbGFzcyBjRntnZXQgaGFzVmlkZW8oKXtyZXR1cm4gdGhpcy5fdmlkZW9fZW5hYmxlZF8mJiF0aGlzLl92aWRlb19tdXRlZF8mJnRoaXMuX3ZpZGVvX2FkZGVkX31nZXQgaGFzQXVkaW8oKXtyZXR1cm4gdGhpcy5fYXVkaW9fZW5hYmxlZF8mJiF0aGlzLl9hdWRpb19tdXRlZF8mJnRoaXMuX2F1ZGlvX2FkZGVkX31nZXQgYXVkaW9UcmFjaygpe2lmKHRoaXMuaGFzQXVkaW98fHRoaXMuX2F1ZGlvX3ByZV9zdWJzY3JpYmVkKXJldHVybiB0aGlzLl9hdWRpb1RyYWNrfWdldCB2aWRlb1RyYWNrKCl7aWYodGhpcy5oYXNWaWRlb3x8dGhpcy5fdmlkZW9fcHJlX3N1YnNjcmliZWQpcmV0dXJuIHRoaXMuX3ZpZGVvVHJhY2t9Z2V0IGRhdGFDaGFubmVscygpe3JldHVybiB0aGlzLl9kYXRhQ2hhbm5lbHN9Y29uc3RydWN0b3IoZSx0KXtGZyh0aGlzLFwidWlkXCIsdm9pZCAwKSxGZyh0aGlzLFwiX3VpbnRpZFwiLHZvaWQgMCksRmcodGhpcyxcIl90cnVzdF9pbl9yb29tX1wiLCEwKSxGZyh0aGlzLFwiX3RydXN0X2F1ZGlvX2VuYWJsZWRfc3RhdGVfXCIsITApLEZnKHRoaXMsXCJfdHJ1c3RfdmlkZW9fZW5hYmxlZF9zdGF0ZV9cIiwhMCksRmcodGhpcyxcIl90cnVzdF9hdWRpb19tdXRlX3N0YXRlX1wiLCEwKSxGZyh0aGlzLFwiX3RydXN0X3ZpZGVvX211dGVfc3RhdGVfXCIsITApLEZnKHRoaXMsXCJfYXVkaW9fbXV0ZWRfXCIsITEpLEZnKHRoaXMsXCJfdmlkZW9fbXV0ZWRfXCIsITEpLEZnKHRoaXMsXCJfYXVkaW9fZW5hYmxlZF9cIiwhMCksRmcodGhpcyxcIl92aWRlb19lbmFibGVkX1wiLCEwKSxGZyh0aGlzLFwiX2F1ZGlvX2FkZGVkX1wiLCExKSxGZyh0aGlzLFwiX3ZpZGVvX2FkZGVkX1wiLCExKSxGZyh0aGlzLFwiX2lzX3ByZV9jcmVhdGVkXCIsITEpLEZnKHRoaXMsXCJfdmlkZW9fcHJlX3N1YnNjcmliZWRcIiwhMSksRmcodGhpcyxcIl9hdWRpb19wcmVfc3Vic2NyaWJlZFwiLCExKSxGZyh0aGlzLFwiX3RydXN0X3ZpZGVvX3N0cmVhbV9hZGRlZF9zdGF0ZV9cIiwhMCksRmcodGhpcyxcIl90cnVzdF9hdWRpb19zdHJlYW1fYWRkZWRfc3RhdGVfXCIsITApLEZnKHRoaXMsXCJfYXVkaW9UcmFja1wiLHZvaWQgMCksRmcodGhpcyxcIl92aWRlb1RyYWNrXCIsdm9pZCAwKSxGZyh0aGlzLFwiX2RhdGFDaGFubmVsc1wiLFtdKSxGZyh0aGlzLFwiX2F1ZGlvU1NSQ1wiLHZvaWQgMCksRmcodGhpcyxcIl92aWRlb1NTUkNcIix2b2lkIDApLEZnKHRoaXMsXCJfYXVkaW9PcnRjXCIsdm9pZCAwKSxGZyh0aGlzLFwiX3ZpZGVvT3J0Y1wiLHZvaWQgMCksRmcodGhpcyxcIl9jbmFtZVwiLHZvaWQgMCksRmcodGhpcyxcIl9ydHhTc3JjSWRcIix2b2lkIDApLEZnKHRoaXMsXCJfdmlkZW9NaWRcIix2b2lkIDApLEZnKHRoaXMsXCJfYXVkaW9NaWRcIix2b2lkIDApLHRoaXMudWlkPWUsdGhpcy5fdWludGlkPXR9fWxldCBkRj1mdW5jdGlvbihlKXtyZXR1cm4gZS5TRU5EX09OTFk9XCJTRU5EX09OTFlcIixlLlJFQ0VJVkVfT05MWT1cIlJFQ0VJVkVfT05MWVwiLGV9KHt9KTtmdW5jdGlvbiBsRihlLHQpe3ZhciBpO2xldCBuO3N3aXRjaCh0KXtjYXNlIGhPLkxvY2FsQXVkaW9UcmFjazpuPVp3LkF1ZGlvO2JyZWFrO2Nhc2UgaE8uTG9jYWxWaWRlb1RyYWNrOm49RG4oaT1lLl9oaW50cykuY2FsbChpLG1MLlNDUkVFTl9UUkFDSyk/WncuU2NyZWVuOlp3LkhpZ2g7YnJlYWs7Y2FzZSBoTy5Mb2NhbFZpZGVvTG93VHJhY2s6bj1ady5Mb3d9cmV0dXJuIG59ZnVuY3Rpb24gdUYoZSl7Y29uc3QgdD1aUCgpO2lmKGUuc29tZSgoZT0+ZS5fYnlwYXNzV2ViQXVkaW8pKSl0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcImNhbm5vdCBwdWJsaXNoIG11bHRpcGxlIHRyYWNrcyB3aGljaCBvbmUgb2YgdGhlbSBjb25maWd1cmVkIHdpdGggYnlwYXNzV2ViQXVkaW9cIik7aWYoIXQud2ViQXVkaW9NZWRpYVN0cmVhbURlc3QpdGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQsXCJjYW5ub3QgcHVibGlzaCBtdWx0aXBsZSB0cmFja3MgYmVjYXVzZSB5b3VyIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBhdWRpbyBtaXhpbmdcIil9ZnVuY3Rpb24gaEYoZSx0KXt1RihlKTtjb25zdCBpPXR8fG5ldyBSTTtyZXR1cm4gZS5mb3JFYWNoKChlPT5pLmFkZEF1ZGlvVHJhY2soZSkpKSxpfXZhciBwRixfRixFRixmRixtRixURixTRixnRixSRixDRixJRix2RjtmdW5jdGlvbiB5RihlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gQUYoZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/eUYoT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6eUYoT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9bGV0IGJGPShwRj13RihkRi5TRU5EX09OTFkpLF9GPXdGKGRGLlNFTkRfT05MWSksRUY9d0YoKSxmRj13RihkRi5SRUNFSVZFX09OTFkpLG1GPXdGKGRGLlJFQ0VJVkVfT05MWSksVEY9d0YoZEYuUkVDRUlWRV9PTkxZKSxTRj13RihkRi5SRUNFSVZFX09OTFkpLGdGPXdGKGRGLlJFQ0VJVkVfT05MWSksUkY9d0YoZEYuUkVDRUlWRV9PTkxZKSxDRj13RigpLElGPXdGKGRGLlJFQ0VJVkVfT05MWSksdkY9Y2xhc3MgZXh0ZW5kcyB4eXtnZXQgc3RhdGUoKXtyZXR1cm4gdGhpcy5fc3RhdGV9c2V0IHN0YXRlKGUpe2NvbnN0IHQ9dGhpcy5fc3RhdGU7dGhpcy5fc3RhdGU9ZSx0aGlzLmVtaXQoX08uU3RhdGVDaGFuZ2UsdCx0aGlzLl9zdGF0ZSl9Y29uc3RydWN0b3IoZSx0KXtzdXBlcigpLEZnKHRoaXMsXCJpc1BsYW5CXCIsITEpLEZnKHRoaXMsXCJzdG9yZVwiLHZvaWQgMCksRmcodGhpcyxcInN0YXRzVXBsb2FkZXJcIix2b2lkIDApLEZnKHRoaXMsXCJzZW5kQ29ubmVjdGlvblwiLHZvaWQgMCksRmcodGhpcyxcInJlY3ZDb25uZWN0aW9uXCIsdm9pZCAwKSxGZyh0aGlzLFwibG9jYWxUcmFja01hcFwiLG5ldyBNYXApLEZnKHRoaXMsXCJyZW1vdGVVc2VyTWFwXCIsbmV3IE1hcCksRmcodGhpcyxcImxvY2FsRGF0YUNoYW5uZWxzXCIsW10pLEZnKHRoaXMsXCJwZW5kaW5nTG9jYWxUcmFja3NcIixbXSksRmcodGhpcyxcInBlbmRpbmdSZW1vdGVUcmFja3NcIixbXSksRmcodGhpcyxcInN0YXRzQ29sbGVjdG9yXCIsdm9pZCAwKSxGZyh0aGlzLFwiZHRsc0ZhaWxlZENvdW50XCIsMCksRmcodGhpcyxcInNlbmRNdXRleFwiLG5ldyBOQShcIlAyUENoYW5uZWwyLXNlbmQtbXV0ZXhcIikpLEZnKHRoaXMsXCJyZWN2TXV0ZXhcIixuZXcgTkEoXCJQMlBDaGFubmVsMi1yZWN2LW11dGV4XCIpKSxGZyh0aGlzLFwiX3N0YXRlXCIscE8uRGlzY29ubmVjdGVkKSxGZyh0aGlzLFwiX3Jlc3RhcnRTdGF0ZXNcIixbXCJkaXNjb25uZWN0ZWRcIixcImZhaWxlZFwiXSksRmcodGhpcyxcInJlY29ubmVjdEludGVydmFsXCIsdm9pZCAwKSxGZyh0aGlzLFwidXBsb2FkVW5wbGlua1N0YXJ0ZWRcIiwhMSksRmcodGhpcyxcInVwbG9hZERvd25saW5rU3RhcnRlZFwiLCExKSxGZyh0aGlzLFwidXBsaW5rU3RhdGVVcGxvYWRJbnRlcnZhbFwiLHZvaWQgMCksRmcodGhpcyxcImRvd25saW5rU3RhdHNVcGxvYWRJbnRlcnZhbFwiLHZvaWQgMCksRmcodGhpcyxcImhhbmRsZU11dGVMb2NhbFRyYWNrXCIsKGFzeW5jKGUsdCxpKT0+e2NvbnN0IG49YXdhaXQgdGhpcy5zZW5kTXV0ZXgubG9jayhcIkxvY2tpbmcgZnJvbSBQMlBDaGFubmVsMi5oYW5kbGVNdXRlTG9jYWxUcmFja1wiKTt0cnl7aWYoIXRoaXMuc2VuZENvbm5lY3Rpb258fHRoaXMuc3RhdGUhPT1wTy5Db25uZWN0ZWQpcmV0dXJuIHZvaWQgaShuZXcgQ3koUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJDYW5ub3QgY2FsbCBQMlBDaGFubmVsMi5oYW5kbGVNdXRlTG9jYWxUcmFjayBiZWZvcmUgc2VuZENvbm5lY3Rpb24gZXN0YWJsaXNoZWQuXCIpKTtjb25zdCBzPXRoaXMuZmlsdGVyVG9iZU11dGVkVHJhY2tzKGUpO2lmKDA9PT1zLmxlbmd0aClyZXR1cm4gdm9pZCB0KCk7Y29uc3QgYT1zLmZpbmQoKGU9PlwidmlkZW9Mb3dUcmFja1wiPT09ZVswXSkpO2lmKGEpe2FbMV0udHJhY2suX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suc3RvcCgpfWF3YWl0IHRoaXMuc2VuZENvbm5lY3Rpb24ubXV0ZUxvY2FsKHMubWFwKChlPT57bGV0Wyx7aWQ6dH1dPWU7cmV0dXJuIHR9KSkpO2xldCBjPSExO3ZhciByLG87aWYoXCJ2aWRlb1wiPT09ZS50cmFja01lZGlhVHlwZSljPSEobnVsbD09PShyPXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxBdWRpb1RyYWNrKSl8fHZvaWQgMD09PXJ8fCFyLnRyYWNrLl9tdXRlZCk7ZWxzZSBjPXZvaWQgMD09PShudWxsPT09KG89dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbFZpZGVvVHJhY2spKXx8dm9pZCAwPT09bz92b2lkIDA6by5pZCk7Y29uc3QgZD10aGlzLmNyZWF0ZU11dGVNZXNzYWdlKHMpO2F3YWl0ICR5KHRoaXMsX08uUmVxdWVzdE11dGVMb2NhbCxkKTtjb25zdCBsPVwidmlkZW9cIj09PWUudHJhY2tNZWRpYVR5cGU/eU8uTVVURV9MT0NBTF9WSURFTzp5Ty5NVVRFX0xPQ0FMX0FVRElPO2F3YWl0ICR5KHRoaXMsX08uUmVxdWVzdFAyUE11dGVMb2NhbCx7YWN0aW9uOmwsbWVzc2FnZTpkLGlzTXV0ZUFsbDpjfSksdCgpfWNhdGNoKGUpe2koZSl9ZmluYWxseXtuKCl9fSkpLEZnKHRoaXMsXCJoYW5kbGVVbm11dGVMb2NhbFRyYWNrXCIsKGFzeW5jKGUsdCxpKT0+e2NvbnN0IG49YXdhaXQgdGhpcy5zZW5kTXV0ZXgubG9jayhcIkxvY2tpbmcgZnJvbSBQMlBDaGFubmVsMi5oYW5kbGVVbm11dGVMb2NhbFRyYWNrXCIpO3RyeXtpZighdGhpcy5zZW5kQ29ubmVjdGlvbnx8dGhpcy5zdGF0ZSE9PXBPLkNvbm5lY3RlZClyZXR1cm4gdm9pZCBpKG5ldyBDeShSeS5JTlZBTElEX09QRVJBVElPTixcIkNhbm5vdCBjYWxsIFAyUENoYW5uZWwyLmhhbmRsZVVubXV0ZUxvY2FsVHJhY2sgYmVmb3JlIHNlbmRDb25uZWN0aW9uIGVzdGFibGlzaGVkLlwiKSk7Y29uc3Qgcj10aGlzLmZpbHRlclRvYmVVbm11dGVkVHJhY2tzKGUpO2lmKDA9PT1yLmxlbmd0aClyZXR1cm4gdm9pZCB0KCk7YXdhaXQgdGhpcy5zZW5kQ29ubmVjdGlvbi51bm11dGVMb2NhbChyLm1hcCgoZT0+e2xldFsse2lkOnR9XT1lO3JldHVybiB0fSkpKTtjb25zdCBvPXRoaXMuY3JlYXRlVW5tdXRlTWVzc2FnZShyKSxzPVwidmlkZW9cIj09PWUudHJhY2tNZWRpYVR5cGU/eU8uVU5NVVRFX0xPQ0FMX1ZJREVPOnlPLlVOTVVURV9MT0NBTF9BVURJTzthd2FpdCAkeSh0aGlzLF9PLlJlcXVlc3RQMlBNdXRlTG9jYWwse2FjdGlvbjpzLG1lc3NhZ2U6b30pLHQoKX1jYXRjaChlKXtpKGUpfWZpbmFsbHl7bigpfX0pKSxGZyh0aGlzLFwiaGFuZGxlVXBkYXRlVmlkZW9FbmNvZGVyXCIsKGFzeW5jKGUsdCxpKT0+e2NvbnN0IG49YXdhaXQgdGhpcy5zZW5kTXV0ZXgubG9jayhcIkxvY2tpbmcgZnJvbSBQMlBDaGFubmVsMi5oYW5kbGVTZXRWaWRlb0VuY29kZXJcIik7dHJ5e2NvbnN0IGk9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbFZpZGVvVHJhY2spO2lmKCF0aGlzLnNlbmRDb25uZWN0aW9ufHwhaXx8aS50cmFjayE9PWV8fHRoaXMuc3RhdGUhPT1wTy5Db25uZWN0ZWQpcmV0dXJuIHZvaWQgdCgpO2NvbnN0e2lkOnIsdHJhY2s6b309aTtyJiYoYXdhaXQgdGhpcy5zZW5kQ29ubmVjdGlvbi51cGRhdGVTZW5kUGFyYW1ldGVycyhyLG8pLGF3YWl0IHRoaXMuc2VuZENvbm5lY3Rpb24udXBkYXRlRW5jb2RlckNvbmZpZyhyLG8pLHRoaXMuZW1pdChfTy5VcGRhdGVWaWRlb0VuY29kZXIsbykpLHQoKX1jYXRjaChlKXtpKGUpfWZpbmFsbHl7bigpfX0pKSxGZyh0aGlzLFwiaGFuZGxlVXBkYXRlVmlkZW9TZW5kUGFyYW1ldGVyc1wiLChhc3luYyhlLHQsaSk9Pntjb25zdCBuPWF3YWl0IHRoaXMuc2VuZE11dGV4LmxvY2soXCJMb2NraW5nIGZyb20gUDJQQ2hhbm5lbDIuaGFuZGxlVXBkYXRlVmlkZW9TZW5kUGFyYW1ldGVyc1wiKTt0cnl7Y29uc3QgaT10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsVmlkZW9UcmFjayk7aWYoIXRoaXMuc2VuZENvbm5lY3Rpb258fCFpfHxpLnRyYWNrIT09ZXx8dGhpcy5zdGF0ZSE9PXBPLkNvbm5lY3RlZClyZXR1cm4gdm9pZCB0KCk7Y29uc3R7aWQ6cix0cmFjazpvfT1pO3ImJmF3YWl0IHRoaXMuc2VuZENvbm5lY3Rpb24udXBkYXRlU2VuZFBhcmFtZXRlcnMocixvKSx0KCl9Y2F0Y2goZSl7aShlKX1maW5hbGx5e24oKX19KSksRmcodGhpcyxcImhhbmRsZVJlcGxhY2VUcmFja1wiLChhc3luYyhlLHQsaSxuKT0+e2xldCByO2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBQMlBDaGFubmVsMiBoYW5kbGVSZXBsYWNlVHJhY2sgZm9yIFt0cmFjay1pZC1cIikuY29uY2F0KGUuZ2V0VHJhY2tJZCgpLFwiXVwiKSksXCJib29sZWFuXCI9PXR5cGVvZiBuJiZufHwocj1hd2FpdCB0aGlzLnNlbmRNdXRleC5sb2NrKFwiRnJvbSBQMlBDaGFubmVsMi5oYW5kbGVSZXBsYWNlVHJhY2tcIikpO3RyeXt2YXIgbztjb25zdCBpPUFycmF5LmZyb20odGhpcy5sb2NhbFRyYWNrTWFwLmVudHJpZXMoKSkuZmluZCgodD0+e2xldFsse3RyYWNrOml9XT10O3JldHVybiBlPT09aX0pKTtpZighdGhpcy5zZW5kQ29ubmVjdGlvbnx8IWl8fHZvaWQgMD09PWlbMV0uaWR8fHRoaXMuc3RhdGUhPT1wTy5Db25uZWN0ZWQpcmV0dXJuIHZvaWQgdCgpO2lmKGF3YWl0KG51bGw9PT0obz10aGlzLnNlbmRDb25uZWN0aW9uKXx8dm9pZCAwPT09bz92b2lkIDA6by5yZXBsYWNlVHJhY2soZSxpWzFdLmlkKSksaVswXT09PWhPLkxvY2FsVmlkZW9UcmFjayYmWlAoKS5zdXBwb3J0RHVhbFN0cmVhbUVuY29kaW5nKXtjb25zdCB0PXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxWaWRlb0xvd1RyYWNrKTtpZih0KXtjb25zdCBpPWUuX21lZGlhU3RyZWFtVHJhY2suY2xvbmUoKTt0LnRyYWNrLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrLnN0b3AoKSx0LnRyYWNrLl9tZWRpYVN0cmVhbVRyYWNrPWksdC50cmFjay5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjaz1pLGF3YWl0IG5ldyBHaCgoKGUsaSk9Pnt0aGlzLmhhbmRsZVJlcGxhY2VUcmFjayh0LnRyYWNrLGUsaSwhMCl9KSl9fXQoKX1jYXRjaChlKXtpKGUpfWZpbmFsbHl7dmFyIHM7bnVsbD09PShzPXIpfHx2b2lkIDA9PT1zfHxzKCl9fSkpLEZnKHRoaXMsXCJoYW5kbGVHZXRMb2NhbFZpZGVvU3RhdHNcIiwoZT0+e2UodGhpcy5zdGF0c0NvbGxlY3Rvci5nZXRMb2NhbFZpZGVvVHJhY2tTdGF0cygpKX0pKSxGZyh0aGlzLFwiaGFuZGxlR2V0TG9jYWxBdWRpb1N0YXRzXCIsKGU9PntlKHRoaXMuc3RhdHNDb2xsZWN0b3IuZ2V0TG9jYWxBdWRpb1RyYWNrU3RhdHMoKSl9KSksRmcodGhpcyxcImhhbmRsZUdldFJlbW90ZVZpZGVvU3RhdHNcIiwoZT0+dGhpcy5zdGF0c0NvbGxlY3Rvci5nZXRSZW1vdGVWaWRlb1RyYWNrU3RhdHMoZS51aWQpW2UudWlkXSkpLEZnKHRoaXMsXCJoYW5kbGVHZXRSZW1vdGVBdWRpb1N0YXRzXCIsKGU9PnRoaXMuc3RhdHNDb2xsZWN0b3IuZ2V0UmVtb3RlQXVkaW9UcmFja1N0YXRzKGUudWlkKVtlLnVpZF0pKSx0aGlzLnN0b3JlPWUsdGhpcy5zdGF0c0NvbGxlY3Rvcj10LHRoaXMuc3RhdHNDb2xsZWN0b3IuYWRkUDJQQ2hhbm5lbCh0aGlzKSx0aGlzLnN0YXRzVXBsb2FkZXI9bmV3IGFGKGUpLHRoaXMuYmluZFN0YXRzVXBsb2FkZXJFdmVudHMoKSx0aGlzLnJlY29ubmVjdEludGVydmFsPXdpbmRvdy5zZXRJbnRlcnZhbCgoKCk9PntbdGhpcy5zZW5kQ29ubmVjdGlvbix0aGlzLnJlY3ZDb25uZWN0aW9uXS5mb3JFYWNoKChlPT57ZSYmKFwiZGlzY29ubmVjdGVkXCIhPT1lLmljZUNvbm5lY3Rpb25TdGF0ZSYmXCJmYWlsZWRcIiE9PWUuaWNlQ29ubmVjdGlvblN0YXRlfHx0aGlzLmhhbmRsZURpc2Nvbm5lY3QoZS5kaXJlY3Rpb24pKX0pKX0pLFhBKFwiSUNFX1JFU1RBUlRfSU5URVJWQUxcIikpfWFzeW5jIHN0YXJ0UDJQQ29ubmVjdGlvbihlLHQpe3Rocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwicDJwIG1vZGUgZG9lcyBub3Qgc3VwcG9ydCBzdGFydFAyUENvbm5lY3Rpb24uXCIpfWFzeW5jIGNvbm5lY3QoZSl7dGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQsXCJwMnAgbW9kZSBkb2VzIG5vdCBzdXBwb3J0IGNvbm5lY3QuXCIpfWFzeW5jIHN0YXJ0UDJQKGUsdCl7bGV0IGk7dHJ5e2lmKHQpe3RoaXMucmVjdkNvbm5lY3Rpb24mJihmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBQMlBDaGFubmVsLnN0YXJ0UDJQIHJlc2V0IHJlY3ZDb25uZWN0aW9uLlwiKSksdGhpcy5yZWN2Q29ubmVjdGlvbi5jbG9zZSgpLHRoaXMudW5iaW5kQ29ubmVjdGlvbkV2ZW50cyh0aGlzLnJlY3ZDb25uZWN0aW9uKSksaT1hd2FpdCB0aGlzLnJlY3ZNdXRleC5sb2NrKFwiRnJvbSBQMlBDaGFubmVsLnN0YXJ0UDJQXCIpLHRoaXMucmVjdkNvbm5lY3Rpb249bmV3IFdWKGUsdGhpcy5zdG9yZSxNdy5SRUNFSVZFX09OTFkpLHRoaXMuYmluZENvbm5lY3Rpb25FdmVudHModGhpcy5yZWN2Q29ubmVjdGlvbik7Y29uc3Qgbj1hd2FpdCB0aGlzLnJlY3ZDb25uZWN0aW9uLmVzdGFibGlzaCh0KTtyZXR1cm57aWNlUGFyYW1ldGVyczpuLmljZVBhcmFtZXRlcnMsZHRsc1BhcmFtZXRlcnM6bi5kdGxzUGFyYW1ldGVycyxzZHA6bi5zZHB9fXt0aGlzLnN0YXRlPXBPLk5ldyx0aGlzLnNlbmRDb25uZWN0aW9uJiYoZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gUDJQQ2hhbm5lbC5zdGFydFAyUCByZXNldCBzZW5kQ29ubmVjdGlvbi5cIikpLHRoaXMuc2VuZENvbm5lY3Rpb24uY2xvc2UoKSx0aGlzLnVuYmluZENvbm5lY3Rpb25FdmVudHModGhpcy5zZW5kQ29ubmVjdGlvbikpLGk9YXdhaXQgdGhpcy5zZW5kTXV0ZXgubG9jayhcIkZyb20gUDJQQ2hhbm5lbC5zdGFydFAyUFwiKSx0aGlzLnNlbmRDb25uZWN0aW9uPW5ldyBXVihlLHRoaXMuc3RvcmUpLHRoaXMuc3RvcmUucGVlckNvbm5lY3Rpb25TdGFydCgpLHRoaXMuYmluZENvbm5lY3Rpb25FdmVudHModGhpcy5zZW5kQ29ubmVjdGlvbik7Y29uc3QgdD1hd2FpdCB0aGlzLnNlbmRDb25uZWN0aW9uLmVzdGFibGlzaCgpO3JldHVybntpY2VQYXJhbWV0ZXJzOnQuaWNlUGFyYW1ldGVycyxkdGxzUGFyYW1ldGVyczp0LmR0bHNQYXJhbWV0ZXJzLHNkcDp0LnNkcH19fWZpbmFsbHl7aSYmaSgpfX1hc3luYyBwMnBDb25uZWN0KGUpe2lmKCF0aGlzLnNlbmRDb25uZWN0aW9uKXRocm93IG5ldyBDeShSeS5VTkVYUEVDVEVEX0VSUk9SLFwiQ2Fubm90IFAyUENoYW5uZWwyLnAycENvbm5lY3QgYmVmb3JlIFAyUENoYW5uZWwyLnN0YXJ0UDJQQ29ubmVjdGlvbiAuXCIpO3RoaXMuc3RvcmUucGVlckNvbm5lY3Rpb25TdGFydCgpLGF3YWl0IHRoaXMuc2VuZENvbm5lY3Rpb24uY29ubmVjdChlKSx0aGlzLnN0YXRzVXBsb2FkZXIuc3RhcnRVcGxvYWRUcmFuc3BvcnRTdGF0cygpLHRoaXMuc3RhdHNVcGxvYWRlci5zdGFydFVwbG9hZEV4dGVuc2lvblVzYWdlU3RhdHMoKSx0aGlzLnN0YXRlPXBPLkNvbm5lY3RlZH1hc3luYyBhZGRSZW1vdGVDYW5kaWRhdGUoZSx0KXtpZih0PT09TXcuUkVDRUlWRV9PTkxZKXtpZighdGhpcy5zZW5kQ29ubmVjdGlvbil0aHJvdyBuZXcgQ3koUnkuVU5FWFBFQ1RFRF9FUlJPUixcIkNhbm5vdCBQMlBDaGFubmVsMi5jb25uZWN0IGJlZm9yZSBQMlBDaGFubmVsMi5hZGRSZW1vdGVDYW5kaWRhdGUgLlwiKTthd2FpdCB0aGlzLnNlbmRDb25uZWN0aW9uLmFkZFJlbW90ZUNhbmRpZGF0ZShlKX1lbHNle2lmKCF0aGlzLnJlY3ZDb25uZWN0aW9uKXRocm93IG5ldyBDeShSeS5VTkVYUEVDVEVEX0VSUk9SLFwiQ2Fubm90IFAyUENoYW5uZWwyLmNvbm5lY3QgYmVmb3JlIFAyUENoYW5uZWwyLmFkZFJlbW90ZUNhbmRpZGF0ZSAuXCIpO2F3YWl0IHRoaXMucmVjdkNvbm5lY3Rpb24uYWRkUmVtb3RlQ2FuZGlkYXRlKGUpfX1wdWJsaXNoKGUsdCxpKXt2YXIgbj10aGlzO3JldHVybiBZSSgoZnVuY3Rpb24qKCl7Y29uc3Qgcj15aWVsZCBxSShuLnNlbmRNdXRleC5sb2NrKFwiRnJvbSBQMlBDaGFubmVsLnB1Ymxpc2hcIikpO3RyeXtpZighbi5zZW5kQ29ubmVjdGlvbnx8bi5zdGF0ZSE9PXBPLkNvbm5lY3RlZCl7bi50aHJvd0lmVHJhY2tUeXBlTm90TWF0Y2goZSk7Y29uc3QgdD1lLmZpbHRlcigoZT0+LTE9PT1uLnBlbmRpbmdMb2NhbFRyYWNrcy5pbmRleE9mKGUpKSk7cmV0dXJuIHZvaWQobi5wZW5kaW5nTG9jYWxUcmFja3M9bi5wZW5kaW5nTG9jYWxUcmFja3MuY29uY2F0KHQpKX1uLnN0b3JlLnB1YklkPW4uc3RvcmUucHViSWQrMSxyVi5tYXJrUHVibGlzaFN0YXJ0KG4uc3RvcmUuY2xpZW50SWQsbi5zdG9yZS5wdWJJZCk7Y29uc3Qgbz1uLmZpbHRlclRvYmVQdWJsaXNoZWRUcmFja3MoZSx0LGkpO2lmKDA9PT1vLmxlbmd0aClyZXR1cm4gdm9pZCh5aWVsZCBxSShuLnRyeVRvVW5tdXRlQXVkaW8oZSkpKTtvLmZvckVhY2goKGU9PntsZXR7dHJhY2s6dCx0eXBlOml9PWU7Y29uc3Qgcj1EYXRlLm5vdygpO24uc3RvcmUucHVibGlzaCh0LmdldFRyYWNrSWQoKSxpPT09aE8uTG9jYWxBdWRpb1RyYWNrP1wiYXVkaW9cIjpcInZpZGVvXCIscil9KSksbi5iaW5kTG9jYWxUcmFja0V2ZW50cyhvKTtjb25zdCBzPXlpZWxkIHFJKG4uc2VuZENvbm5lY3Rpb24uc2VuZChvLm1hcCgoZT0+e2xldHt0cmFjazp0fT1lO3JldHVybiB0fSkpLG4uc3RvcmUuY29kZWMsbi5zdG9yZS5hdWRpb0NvZGVjKSksYT0oeWllbGQgcUkocy5uZXh0KCkpKS52YWx1ZSxjPW4uY3JlYXRlR2F0ZXdheVB1Ymxpc2hNZXNzYWdlKG8sYSk7dHJ5e3lpZWxkIGN9Y2F0Y2goZSl7dGhyb3cgcy50aHJvdyhlKSwobnVsbD09ZT92b2lkIDA6ZS5jb2RlKT09PVJ5LldTX0FCT1JUJiZvLmZvckVhY2goKGU9PntsZXR7dHJhY2s6dH09ZTstMT09PW4ucGVuZGluZ0xvY2FsVHJhY2tzLmluZGV4T2YodCkmJm4ucGVuZGluZ0xvY2FsVHJhY2tzLnB1c2godCl9KSksbi51bmJpbmRMb2NhbFRyYWNrRXZlbnRzKG8pLGV9eWllbGQgcUkocy5uZXh0KCkpLG8uZm9yRWFjaCgoZT0+e2xldHt0eXBlOnR9PWU7bi5zdGF0c0NvbGxlY3Rvci5hZGRMb2NhbFN0YXRzKHQpfSkpLG4uc3RhdHNVcGxvYWRlci5zdGFydFVwbG9hZE91dGJvdW5kU3RhdHMoKSxuLmFzc2lnbkxvY2FsVHJhY2tzKG8sYSksby5mb3JFYWNoKChlPT57bGV0e3RyYWNrOnQsdHlwZTppfT1lO2NvbnN0IHI9RGF0ZS5ub3coKTtuLnN0b3JlLnB1Ymxpc2godC5nZXRUcmFja0lkKCksaT09PWhPLkxvY2FsQXVkaW9UcmFjaz9cImF1ZGlvXCI6XCJ2aWRlb1wiLHZvaWQgMCxyKX0pKSxuLnN0YXJ0VXBsb2FkVXBsaW5rU3RhdGUoKX1maW5hbGx5e3IoKX19KSkoKX1hc3luYyB1bnB1Ymxpc2goZSl7aWYoIXRoaXMuc2VuZENvbm5lY3Rpb258fHRoaXMuc3RhdGUhPT1wTy5Db25uZWN0ZWQpcmV0dXJuIHZvaWQoMD09PWUubGVuZ3RoP3RoaXMucGVuZGluZ0xvY2FsVHJhY2tzLmxlbmd0aD0wOnRoaXMucGVuZGluZ0xvY2FsVHJhY2tzPXRoaXMucGVuZGluZ0xvY2FsVHJhY2tzLmZpbHRlcigodD0+IURuKGUpLmNhbGwoZSx0KSkpKTtjb25zdCB0PXRoaXMuZmlsdGVyVG9iZVVucHVibGlzaGVkVHJhY2tzKGUpO2lmKDA9PT10Lmxlbmd0aClyZXR1cm47Y29uc3QgaT10LmZpbmQoKGU9PlwidmlkZW9Mb3dUcmFja1wiPT09ZVswXSkpO2lmKGkpe2lbMV0udHJhY2suY2xvc2UoKX1jb25zdCBuPXRoaXMuY3JlYXRlR2F0ZXdheVVucHVibGlzaE1lc3NhZ2UodCk7aWYoYXdhaXQgdGhpcy5zZW5kQ29ubmVjdGlvbi5zdG9wU2VuZGluZyh0Lm1hcCgoZT0+e2xldFsse2lkOnR9XT1lO3JldHVybiB0fSkpKSx0aGlzLndpdGhkcmF3TG9jYWxUcmFja3ModCksdGhpcy51bmJpbmRMb2NhbFRyYWNrRXZlbnRzKHQubWFwKChlPT57bGV0W3Qse3RyYWNrOml9XT1lO3JldHVybnt0eXBlOnQsdHJhY2s6aX19KSkpLHQuZm9yRWFjaCgoZT0+e2xldFt0XT1lO3RoaXMuc3RhdHNDb2xsZWN0b3IucmVtb3ZlTG9jYWxTdGF0cyh0KX0pKSwwPT09dGhpcy5sb2NhbFRyYWNrTWFwLnNpemUmJih0aGlzLnN0YXRzVXBsb2FkZXIuc3RvcFVwbG9hZE91dGJvdW5kU3RhdHMoKSx0aGlzLnN0b3BVcGxvYWRVcGxpbmtTdGF0ZSgpKSx0aGlzLnNlbmRDb25uZWN0aW9uJiZ0aGlzLnN0YXRlPT09cE8uQ29ubmVjdGVkKXtpZihpKXtpWzFdLnRyYWNrLmNsb3NlKCl9cmV0dXJuIG59ZS5mb3JFYWNoKChlPT57Y29uc3QgdD10aGlzLnBlbmRpbmdMb2NhbFRyYWNrcy5pbmRleE9mKGUpOy0xIT09dCYmdGhpcy5wZW5kaW5nTG9jYWxUcmFja3Muc3BsaWNlKHQsMSl9KSl9c3RhcnRVcGxvYWRVcGxpbmtTdGF0ZSgpe2lmKHRoaXMudXBsb2FkVW5wbGlua1N0YXJ0ZWQpcmV0dXJuO3RoaXMudXBsb2FkVW5wbGlua1N0YXJ0ZWQ9ITAsdGhpcy51cGxpbmtTdGF0ZVVwbG9hZEludGVydmFsJiZ3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLnVwbGlua1N0YXRlVXBsb2FkSW50ZXJ2YWwpO2NvbnN0IGU9KCk9Pntjb25zdCBlPVtdLHQ9W107QXJyYXkuZnJvbSh0aGlzLmxvY2FsVHJhY2tNYXAuZW50cmllcygpKS5mb3JFYWNoKChpPT57bGV0W24se3RyYWNrOnIsc3NyY3M6b31dPWk7Y29uc3Qgcz17c3RyZWFtX3R5cGU6bEYocixuKSxzc3JjczpvfTtyLl9tdXRlZHx8IXIuX2VuYWJsZWQ/ZS5wdXNoKHMpOnQucHVzaChzKX0pKSxlLmxlbmd0aD4wJiZlLmZvckVhY2goKGU9PnskeSh0aGlzLF9PLlJlcXVlc3RNdXRlTG9jYWwsW2VdKX0pKSx0Lmxlbmd0aD4wJiZ0LmZvckVhY2goKGU9PnskeSh0aGlzLF9PLlJlcXVlc3RVbm11dGVMb2NhbCxbZV0pfSkpfTtlKCksdGhpcy51cGxpbmtTdGF0ZVVwbG9hZEludGVydmFsPXdpbmRvdy5zZXRJbnRlcnZhbCgoKCk9PntlKCl9KSwzZTMpfXN0b3BVcGxvYWRVcGxpbmtTdGF0ZSgpe3RoaXMudXBsb2FkVW5wbGlua1N0YXJ0ZWQmJih0aGlzLnVwbG9hZFVucGxpbmtTdGFydGVkPSExLHRoaXMudXBsaW5rU3RhdGVVcGxvYWRJbnRlcnZhbCYmd2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy51cGxpbmtTdGF0ZVVwbG9hZEludGVydmFsKSl9cHVibGlzaExvd1N0cmVhbShlKXtyZXR1cm4gWUkoKGZ1bmN0aW9uKigpe3Rocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwicDJwIG1vZGUgZG9lcyBub3Qgc3VwcG9ydCBwdWJsaXNoTG93U3RyZWFtLlwiKX0pKSgpfWFzeW5jIHJlcHVibGlzaCgpe3RoaXMucGVuZGluZ0xvY2FsVHJhY2tzLmxlbmd0aD4wJiYoZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIEVtaXQgUDJQQ2hhbm5lbEV2ZW50cy5SZXF1ZXN0UmVQdWJsaXNoIHRvIHJlcHVibGlzaCB0cmFja3MuXCIpKSxhd2FpdCBaeSh0aGlzLF9PLlJlcXVlc3RSZVB1Ymxpc2gsdGhpcy5wZW5kaW5nTG9jYWxUcmFja3MpLHRoaXMuZW1pdChfTy5NZWRpYVJlY29ubmVjdEVuZCx0aGlzLnN0b3JlLnVpZCksdGhpcy5wZW5kaW5nTG9jYWxUcmFja3M9W10pfWFzeW5jIHVucHVibGlzaExvd1N0cmVhbSgpe3Rocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwicDJwIG1vZGUgZG9lcyBub3Qgc3VwcG9ydCB1bnB1Ymxpc2hMb3dTdHJlYW0uXCIpfWFzeW5jIHN1YnNjcmliZShlLHQsaSxuKXt2YXIgcjtpZighdGhpcy5yZWN2Q29ubmVjdGlvbil0aHJvdyBuZXcgQ3koUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJDYW5ub3Qgc3Vic2NyaWJlIHJlbW90ZSB1c2VyIHdoZW4gcmVjdkNvbm5lY3Rpb24gZGlzY29ubmVjdGVkLlwiKTtpZihudWxsIT09KHI9dGhpcy5yZW1vdGVVc2VyTWFwLmdldChlKSkmJnZvaWQgMCE9PXImJnIuaGFzKHQpKXJldHVybjtjb25zdHt0cmFjazpvLG1pZDpzLHRyYW5zY2VpdmVyOmF9PWF3YWl0IHRoaXMucmVjdkNvbm5lY3Rpb24ucmVjZWl2ZSh0LFt7c3NyY0lkOml9XSxTdHJpbmcoZS51aWQpLG4pO3Q9PT1kTy5BVURJTz8oZS5fYXVkaW9UcmFjaz9lLl9hdWRpb1RyYWNrLl91cGRhdGVPcmlnaW5NZWRpYVN0cmVhbVRyYWNrKG8pOihlLl9hdWRpb1RyYWNrPW5ldyB2VShvLGUudWlkLGUuX3VpbnRpZCx0aGlzLnN0b3JlKSxmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbXCIpLmNvbmNhdCh0aGlzLnN0b3JlLnAycElkLFwiXSBjcmVhdGUgcmVtb3RlIGF1ZGlvIHRyYWNrOiBcIikuY29uY2F0KGUuX2F1ZGlvVHJhY2suZ2V0VHJhY2tJZCgpKSkpLGEmJmUuX2F1ZGlvVHJhY2suX3VwZGF0ZVJ0cFRyYW5zY2VpdmVyKGEpLHRoaXMuYmluZFJlbW90ZVRyYWNrRXZlbnRzKGUsZS5fYXVkaW9UcmFjaykpOihlLl92aWRlb1NTUkM9aSxlLl92aWRlb1RyYWNrP2UuX3ZpZGVvVHJhY2suX3VwZGF0ZU9yaWdpbk1lZGlhU3RyZWFtVHJhY2sobyk6KGUuX3ZpZGVvVHJhY2s9bmV3IElVKG8sZS51aWQsZS5fdWludGlkLHRoaXMuc3RvcmUpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFtcIikuY29uY2F0KHRoaXMuc3RvcmUucDJwSWQsXCJdIGNyZWF0ZSByZW1vdGUgdmlkZW8gdHJhY2s6IFwiKS5jb25jYXQoZS5fdmlkZW9UcmFjay5nZXRUcmFja0lkKCkpKSksYSYmZS5fdmlkZW9UcmFjay5fdXBkYXRlUnRwVHJhbnNjZWl2ZXIoYSksdGhpcy5iaW5kUmVtb3RlVHJhY2tFdmVudHMoZSxlLl92aWRlb1RyYWNrKSk7Y29uc3QgYz10aGlzLnJlbW90ZVVzZXJNYXAuZ2V0KGUpO2M/Yy5zZXQodCxzKTp0aGlzLnJlbW90ZVVzZXJNYXAuc2V0KGUsbmV3IE1hcChbW3Qsc11dKSksdGhpcy5zdGF0c0NvbGxlY3Rvci5hZGRSZW1vdGVTdGF0cyhlLnVpZCksdGhpcy5zdGF0c1VwbG9hZGVyLnN0YXJ0VXBsb2FkSW5ib3VuZFN0YXRzKCksdGhpcy5zdGFydFVwbG9hZERvd25saW5rU3RhdGUoKTtjb25zdCBkPXRoaXMucGVuZGluZ1JlbW90ZVRyYWNrcy5maW5kSW5kZXgoKGk9PntsZXR7dXNlcjpuLGtpbmQ6cn09aTtyZXR1cm4gbi51aWQ9PT1lLnVpZCYmdD09PXJ9KSk7LTEhPT1kJiYodGhpcy5wZW5kaW5nUmVtb3RlVHJhY2tzLnNwbGljZShkLDEpLHRoaXMuZW1pdChfTy5NZWRpYVJlY29ubmVjdEVuZCxlLnVpZCkpfWFzeW5jIG1vY2tTdWJzY3JpYmUoZSx0LGksbil7aWYoIXRoaXMucmVjdkNvbm5lY3Rpb24pdGhyb3cgbmV3IEN5KFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiQ2Fubm90IHN1YnNjcmliZSByZW1vdGUgdXNlciB3aGVuIHJlY3ZDb25uZWN0aW9uIGRpc2Nvbm5lY3RlZC5cIik7YXdhaXQgdGhpcy5yZWN2Q29ubmVjdGlvbi5tb2NrUmVjZWl2ZSh0LFt7c3NyY0lkOml9XSxTdHJpbmcoZS51aWQpLG4pfWFzeW5jIHVuc3Vic2NyaWJlKGUsdCxpKXtjb25zdCBuPXRoaXMucGVuZGluZ1JlbW90ZVRyYWNrcy5maWx0ZXIoKGk9PntsZXR7dXNlcjpuLGtpbmQ6cn09aTtyZXR1cm4gdm9pZCAwIT09dD9uLnVpZD09PWUudWlkJiZ0PT09cjpuLnVpZD09PWUudWlkfSkpO2lmKG4uZm9yRWFjaCgoZT0+e2NvbnN0IHQ9dGhpcy5wZW5kaW5nUmVtb3RlVHJhY2tzLmluZGV4T2YoZSk7dGhpcy5wZW5kaW5nUmVtb3RlVHJhY2tzLnNwbGljZSh0LDEpfSkpLHRoaXMucmVjdkNvbm5lY3Rpb258fGl8fG4uZm9yRWFjaCgodD0+e2xldHtraW5kOml9PXQ7dmFyIG47aWYoaT09PWRPLkFVRElPKW51bGw9PT0obj1lLl9hdWRpb1RyYWNrKXx8dm9pZCAwPT09bnx8bi5fZGVzdHJveSgpLGUuX2F1ZGlvVHJhY2s9dm9pZCAwO2Vsc2UgaWYoaT09PWRPLlZJREVPKXt2YXIgcjtudWxsPT09KHI9ZS5fdmlkZW9UcmFjayl8fHZvaWQgMD09PXJ8fHIuX2Rlc3Ryb3koKSxlLl92aWRlb1RyYWNrPXZvaWQgMH19KSksIXRoaXMucmVjdkNvbm5lY3Rpb24pcmV0dXJuO2NvbnN0IHI9dGhpcy5maWx0ZXJUb2JlVW5TdWJzY3JpYmVkVHJhY2tzKGUsdCk7MCE9PXIubGVuZ3RoJiYoYXdhaXQgdGhpcy5yZWN2Q29ubmVjdGlvbi5zdG9wUmVjZWl2aW5nKHIubWFwKChlPT57bGV0Wyx7aWQ6dH1dPWU7cmV0dXJuIHR9KSkpLHRoaXMud2l0aGRyYXdSZW1vdGVUcmFja3MociksMD09PXRoaXMucmVtb3RlVXNlck1hcC5zaXplJiYodGhpcy5zdGF0c1VwbG9hZGVyLnN0b3BVcGxvYWRJbmJvdW5kU3RhdHMoKSx0aGlzLnN0b3BVcGxvYWREb3dubGlua1N0YXRlKCkpLHIuZm9yRWFjaCgoZT0+e2xldFt0LHtraW5kOm59XT1lO3ZhciByLG87bj09PWRPLlZJREVPJiZ0Ll92aWRlb1NTUkMmJihudWxsPT09KHI9dGhpcy5yZWN2Q29ubmVjdGlvbil8fHZvaWQgMD09PXJ8fHIuc2V0U3RhdHNSZW1vdGVWaWRlb0lzUmVhZHkodC5fdmlkZW9TU1JDLCExKSk7aWYobj09PWRPLlZJREVPKXRoaXMudW5iaW5kUmVtb3RlVHJhY2tFdmVudHModC5fdmlkZW9UcmFjayksaXx8KG51bGw9PT0obz10Ll92aWRlb1RyYWNrKXx8dm9pZCAwPT09b3x8by5fZGVzdHJveSgpLHQuX3ZpZGVvVHJhY2s9dm9pZCAwKTtlbHNlIGlmKG49PT1kTy5BVURJTyl7dmFyIHM7aWYodGhpcy51bmJpbmRSZW1vdGVUcmFja0V2ZW50cyh0Ll9hdWRpb1RyYWNrKSwhaSludWxsPT09KHM9dC5fYXVkaW9UcmFjayl8fHZvaWQgMD09PXN8fHMuX2Rlc3Ryb3koKSx0Ll9hdWRpb1RyYWNrPXZvaWQgMH19KSksci5mb3JFYWNoKChlPT57bGV0Wyx7a2luZDp0fV09ZTskeSh0aGlzLF9PLlJlcXVlc3RQMlBNdXRlUmVtb3RlLHQpfSkpKX1zdGFydFVwbG9hZERvd25saW5rU3RhdGUoKXtpZih0aGlzLnVwbG9hZERvd25saW5rU3RhcnRlZClyZXR1cm47dGhpcy51cGxvYWREb3dubGlua1N0YXJ0ZWQ9ITAsdGhpcy5kb3dubGlua1N0YXRzVXBsb2FkSW50ZXJ2YWwmJndpbmRvdy5jbGVhckludGVydmFsKHRoaXMuZG93bmxpbmtTdGF0c1VwbG9hZEludGVydmFsKTtjb25zdCBlPSgpPT5BcnJheS5mcm9tKHRoaXMucmVtb3RlVXNlck1hcC5lbnRyaWVzKCkpLmZvckVhY2goKGU9PntsZXRbLHRdPWU7W2RPLlZJREVPLGRPLkFVRElPXS5mb3JFYWNoKChlPT57dC5oYXMoZSk/JHkodGhpcyxfTy5SZXF1ZXN0UDJQVW5tdXRlUmVtb3RlLGUpOiR5KHRoaXMsX08uUmVxdWVzdFAyUE11dGVSZW1vdGUsZSl9KSl9KSk7ZSgpLHRoaXMuZG93bmxpbmtTdGF0c1VwbG9hZEludGVydmFsPXdpbmRvdy5zZXRJbnRlcnZhbCgoKCk9PntlKCl9KSwzZTMpfXN0b3BVcGxvYWREb3dubGlua1N0YXRlKCl7dGhpcy51cGxvYWREb3dubGlua1N0YXJ0ZWQmJih0aGlzLnVwbG9hZERvd25saW5rU3RhcnRlZD0hMSx0aGlzLmRvd25saW5rU3RhdHNVcGxvYWRJbnRlcnZhbCYmd2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy5kb3dubGlua1N0YXRzVXBsb2FkSW50ZXJ2YWwpKX1nZXRBbGxEYXRhQ2hhbm5lbHMoKXtyZXR1cm4gdGhpcy5sb2NhbERhdGFDaGFubmVsc31hc3luYyBtYXNzU3Vic2NyaWJlKGUpe3Rocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwicDJwIG1vZGUgZG9lcyBub3Qgc3VwcG9ydCBtYXNzU3Vic2NyaWJlLlwiKX1hc3luYyBtYXNzU3Vic2NyaWJlTm9Mb2NrKGUpe3Rocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwicDJwIG1vZGUgZG9lcyBub3Qgc3VwcG9ydCBtYXNzU3Vic2NyaWJlTm9Mb2NrLlwiKX1hc3luYyBtYXNzVW5zdWJzY3JpYmUoZSl7dGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQsXCJwMnAgbW9kZSBkb2VzIG5vdCBzdXBwb3J0IG1hc3NVbnN1YnNjcmliZS5cIil9YXN5bmMgbWFzc1Vuc3Vic2NyaWJlTm9Mb2NrKGUpe3Rocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwicDJwIG1vZGUgZG9lcyBub3Qgc3VwcG9ydCBtYXNzVW5zdWJzY3JpYmVOb0xvY2suXCIpfWFzeW5jIG11dGVSZW1vdGUoZSx0KXtpZighdGhpcy5yZWN2Q29ubmVjdGlvbilyZXR1cm47Y29uc3QgaT10aGlzLnJlbW90ZVVzZXJNYXAuZ2V0KGUpO2lmKCFpKXJldHVybiB2b2lkIGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFAyUENoYW5uZWwyLm11dGVSZW1vdGUgaGFzIG5vIHJlbW90ZSB1c2VyIFwiKS5jb25jYXQoZS51aWQsXCIuXCIpKTtpZighaS5nZXQodCkpcmV0dXJuIHZvaWQgZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gUDJQQ2hhbm5lbDIubXV0ZVJlbW90ZSBoYXMgbm8gcmVtb3RlIHVzZXIgXCIpLmNvbmNhdChlLnVpZCxcIiBtZWRpYSB0eXBlIFwiKS5jb25jYXQodCxcIi5cIikpO2NvbnN0IG49dD09PWRPLlZJREVPP2UuX3ZpZGVvU1NSQzplLl9hdWRpb1NTUkM7dm9pZCAwIT09biYmdGhpcy5yZWN2Q29ubmVjdGlvbi5zZXRTdGF0c1JlbW90ZVZpZGVvSXNSZWFkeShuLCExKX1hc3luYyB1bm11dGVSZW1vdGUoZSx0KXtyZXR1cm4gdGhpcy51bm11dGVSZW1vdGVOb0xvY2soZSx0KX1hc3luYyB1bm11dGVSZW1vdGVOb0xvY2soZSx0KXtpZighdGhpcy5yZWN2Q29ubmVjdGlvbilyZXR1cm47Y29uc3QgaT10aGlzLnJlbW90ZVVzZXJNYXAuZ2V0KGUpO2lmKCFpKXJldHVybiB2b2lkIGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFAyUENoYW5uZWwyLnVubXV0ZVJlbW90ZSBoYXMgbm8gcmVtb3RlIHVzZXIgXCIpLmNvbmNhdChlLnVpZCxcIi5cIikpO2kuZ2V0KHQpfHxmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBQMlBDaGFubmVsMi51bm11dGVSZW1vdGUgaGFzIG5vIHJlbW90ZSB1c2VyIFwiKS5jb25jYXQoZS51aWQsXCIgbWVkaWEgdHlwZSBcIikuY29uY2F0KHQsXCIuXCIpKX1nZXRBbGxUcmFja3MoZSl7Y29uc3QgdD10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsQXVkaW9UcmFjayk7aWYoKG51bGw9PXQ/dm9pZCAwOnQudHJhY2spaW5zdGFuY2VvZiBSTSl7Y29uc3QgaT10LnRyYWNrO3JldHVybiBBcnJheS5mcm9tKHRoaXMubG9jYWxUcmFja01hcC5lbnRyaWVzKCkpLmZpbHRlcigoZT0+e2xldFt0XT1lO3JldHVybiB0IT09aE8uTG9jYWxBdWRpb1RyYWNrfSkpLmZpbHRlcigodD0+e2xldFtpXT10O3JldHVybiEoZSYmaT09PWhPLkxvY2FsVmlkZW9Mb3dUcmFjayl9KSkubWFwKChlPT57bGV0Wyx7dHJhY2s6dH1dPWU7cmV0dXJuIHR9KSkuY29uY2F0KGkudHJhY2tMaXN0KX1yZXR1cm4gQXJyYXkuZnJvbSh0aGlzLmxvY2FsVHJhY2tNYXAuZW50cmllcygpKS5maWx0ZXIoKHQ9PntsZXRbaV09dDtyZXR1cm4hKGUmJmk9PT1oTy5Mb2NhbFZpZGVvTG93VHJhY2spfSkpLm1hcCgoZT0+e2xldFsse3RyYWNrOnR9XT1lO3JldHVybiB0fSkpfXJlcG9ydFB1Ymxpc2hFdmVudChlLHQsaSxuLHIpe2lmKGUpe2NvbnN0IGk9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbEF1ZGlvVHJhY2spLG89bj90aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsVmlkZW9Mb3dUcmFjayk6dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbFZpZGVvVHJhY2spO3ZiLnB1Ymxpc2godGhpcy5zdG9yZS5zZXNzaW9uSWQse2V2ZW50RWxhcHNlOnJWLm1lYXN1cmVGcm9tUHVibGlzaFN0YXJ0KHRoaXMuc3RvcmUuY2xpZW50SWQsdGhpcy5zdG9yZS5wdWJJZCksc3VjYzplLGVjOnQsYXVkaW9OYW1lOm51bGw9PWk/dm9pZCAwOmkudHJhY2suZ2V0VHJhY2tMYWJlbCgpLHZpZGVvTmFtZTpudWxsPT1vP3ZvaWQgMDpvLnRyYWNrLmdldFRyYWNrTGFiZWwoKSxzY3JlZW5zaGFyZTotMSE9PShudWxsPT1vP3ZvaWQgMDpvLnRyYWNrLl9oaW50cy5pbmRleE9mKG1MLlNDUkVFTl9UUkFDSykpLGF1ZGlvOiEhaSx2aWRlbzohIW8scDJwaWQ6dGhpcy5zdG9yZS5wMnBJZCxwdWJsaXNoUmVxdWVzdGlkOnRoaXMuc3RvcmUucHViSWQsZXh0ZW5kOnJ9KX1lbHNle3ZhciBvO2l8fChpPVtdKTtjb25zdCBzPWkuZmluZCgoZT0+ZSBpbnN0YW5jZW9mIFRNKSksYT1uP251bGw9PT0obz10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsVmlkZW9UcmFjaykpfHx2b2lkIDA9PT1vP3ZvaWQgMDpvLnRyYWNrOmkuZmluZCgoZT0+ZSBpbnN0YW5jZW9mIGFVKSk7dmIucHVibGlzaCh0aGlzLnN0b3JlLnNlc3Npb25JZCx7ZXZlbnRFbGFwc2U6clYubWVhc3VyZUZyb21QdWJsaXNoU3RhcnQodGhpcy5zdG9yZS5jbGllbnRJZCx0aGlzLnN0b3JlLnB1YklkKSxzdWNjOmUsZWM6dCxhdWRpb05hbWU6bnVsbD09cz92b2lkIDA6cy5nZXRUcmFja0xhYmVsKCksdmlkZW9OYW1lOm51bGw9PWE/dm9pZCAwOmEuZ2V0VHJhY2tMYWJlbCgpLHNjcmVlbnNoYXJlOi0xIT09KG51bGw9PWE/dm9pZCAwOmEuX2hpbnRzLmluZGV4T2YobUwuU0NSRUVOX1RSQUNLKSksYXVkaW86ISFzLHZpZGVvOiEhYSxwMnBpZDp0aGlzLnN0b3JlLnAycElkLHB1Ymxpc2hSZXF1ZXN0aWQ6dGhpcy5zdG9yZS5wdWJJZCxleHRlbmQ6cn0pfX1yZXBvcnRTdWJzY3JpYmVFdmVudChlLHQsaSxuKXtjb25zdCByPW49PT1kTy5WSURFTz9pLl92aWRlb1NTUkM6aS5fYXVkaW9TU1JDO3ImJnZiLnN1YnNjcmliZSh0aGlzLnN0b3JlLnNlc3Npb25JZCx7c3VjYzplLGVjOnQsdmlkZW86bj09PWRPLlZJREVPLGF1ZGlvOm49PT1kTy5BVURJTyxwZWVyaWQ6aS51aWQsc3Vic2NyaWJlUmVxdWVzdGlkOm49PT1kTy5WSURFTz9pLl92aWRlb1NTUkM6aS5fYXVkaW9TU1JDLHAycGlkOnRoaXMuc3RvcmUucDJwSWQsZXZlbnRFbGFwc2U6clYubWVhc3VyZUZyb21TdWJzY3JpYmVTdGFydCh0aGlzLnN0b3JlLmNsaWVudElkLHIpfSl9cmVzZXQoKXtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gUDJQQ2hhbm5lbDIucmVzZXRcIikpLHRoaXMuc2VuZE11dGV4PW5ldyBOQShcIlAyUENoYW5uZWwyLXNlbmQtbXV0ZXhcIiksdGhpcy5zZW5kTXV0ZXg9bmV3IE5BKFwiUDJQQ2hhbm5lbDItcmVjdi1tdXRleFwiKSx0aGlzLnNlbmRDb25uZWN0aW9uJiYodGhpcy5zZW5kQ29ubmVjdGlvbi5jbG9zZSgpLHRoaXMudW5iaW5kQ29ubmVjdGlvbkV2ZW50cyh0aGlzLnNlbmRDb25uZWN0aW9uKSx0aGlzLnNlbmRDb25uZWN0aW9uPXZvaWQgMCksdGhpcy5yZWN2Q29ubmVjdGlvbiYmKHRoaXMucmVjdkNvbm5lY3Rpb24uY2xvc2UoKSx0aGlzLnVuYmluZENvbm5lY3Rpb25FdmVudHModGhpcy5yZWN2Q29ubmVjdGlvbiksdGhpcy5yZWN2Q29ubmVjdGlvbj12b2lkIDApLHRoaXMuc3RhdHNVcGxvYWRlci5zdG9wVXBsb2FkT3V0Ym91bmRTdGF0cygpLHRoaXMuc3RhdHNVcGxvYWRlci5zdG9wVXBsb2FkSW5ib3VuZFN0YXRzKCksdGhpcy5zdGF0c1VwbG9hZGVyLnN0b3BVcGxvYWRUcmFuc3BvcnRTdGF0cygpLHRoaXMuc3RhdHNVcGxvYWRlci5zdG9wVXBsb2FkRXh0ZW5zaW9uVXNhZ2VTdGF0cygpLHRoaXMuc3RvcFVwbG9hZFVwbGlua1N0YXRlKCksdGhpcy5zdG9wVXBsb2FkRG93bmxpbmtTdGF0ZSgpLHRoaXMudW5iaW5kTG9jYWxUcmFja0V2ZW50cygpLHRoaXMudW5iaW5kQWxsUmVtb3RlVHJhY2tFdmVudHMoKSx0aGlzLnVuYmluZFJ0cFRyYW5zY2VpdmVyKCk7Y29uc3QgZT10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsQXVkaW9UcmFjayk7aWYoKG51bGw9PWU/dm9pZCAwOmUudHJhY2spaW5zdGFuY2VvZiBSTSl7aWYoZS50cmFjay50cmFja0xpc3QubGVuZ3RoPjApe2NvbnN0IHQ9ZS50cmFjaztlLnRyYWNrLnRyYWNrTGlzdC5mb3JFYWNoKChlPT57dC5yZW1vdmVBdWRpb1RyYWNrKGUpfSkpfWUudHJhY2suY2xvc2UoKX10aGlzLmxvY2FsVHJhY2tNYXAuY2xlYXIoKSx0aGlzLnJlbW90ZVVzZXJNYXAuY2xlYXIoKSx0aGlzLnN0YXRzQ29sbGVjdG9yLnJlbW92ZVJlbW90ZVN0YXRzKCksdGhpcy5zdGF0c0NvbGxlY3Rvci5yZW1vdmVMb2NhbFN0YXRzKCksdGhpcy5kdGxzRmFpbGVkQ291bnQ9MCx0aGlzLnBlbmRpbmdMb2NhbFRyYWNrcz1bXSx0aGlzLnBlbmRpbmdSZW1vdGVUcmFja3M9W10sdGhpcy5yZWNvbm5lY3RJbnRlcnZhbCYmKHdpbmRvdy5jbGVhckludGVydmFsKHRoaXMucmVjb25uZWN0SW50ZXJ2YWwpLHRoaXMucmVjb25uZWN0SW50ZXJ2YWw9dm9pZCAwKSx0aGlzLnN0YXRlPXBPLkRpc2Nvbm5lY3RlZH1nZXRTdGF0cyhlKXt2YXIgdCxpO3JldHVybiBlP251bGw9PT0oaT10aGlzLnJlY3ZDb25uZWN0aW9uKXx8dm9pZCAwPT09aT92b2lkIDA6aS5nZXRTdGF0cygpOm51bGw9PT0odD10aGlzLnNlbmRDb25uZWN0aW9uKXx8dm9pZCAwPT09dD92b2lkIDA6dC5nZXRTdGF0cygpfWdldFJlbW90ZVZpZGVvSXNSZWFkeShlKXt2YXIgdDtyZXR1cm4obnVsbD09PSh0PXRoaXMucmVjdkNvbm5lY3Rpb24pfHx2b2lkIDA9PT10P3ZvaWQgMDp0LmdldFJlbW90ZVZpZGVvSXNSZWFkeShlKSl8fCExfWdldExvY2FsQXVkaW9Wb2x1bWUoKXtjb25zdCBlPXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxBdWRpb1RyYWNrKTtpZihlKXJldHVybiBlLnRyYWNrLmdldFZvbHVtZUxldmVsKCl9Z2V0TG9jYWxWaWRlb1NpemUoKXtjb25zdCBlPXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxWaWRlb1RyYWNrKTtpZihlKXJldHVybnt3aWR0aDplLnRyYWNrLnZpZGVvV2lkdGh8fDAsaGVpZ2h0OmUudHJhY2sudmlkZW9IZWlnaHR8fDB9fWdldEVuY29kZXJDb25maWcoZSl7Y29uc3QgdD10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGUpO3JldHVybiB0JiZ0LnRyYWNrIGluc3RhbmNlb2YgYVV8fHQmJnQudHJhY2sgaW5zdGFuY2VvZiBUTT90LnRyYWNrLl9lbmNvZGVyQ29uZmlnOnZvaWQgMH1nZXRMb2NhbE1lZGlhKGUpe3JldHVybiB0aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGUpfWhhc0xvY2FsTWVkaWEoKXtyZXR1cm4gdGhpcy5sb2NhbFRyYWNrTWFwLnNpemU+MH1oYXNSZW1vdGVNZWRpYShlLHQpe2lmKCFlKXJldHVybiB0aGlzLnJlbW90ZVVzZXJNYXAuc2l6ZT4wO2NvbnN0IGk9dGhpcy5yZW1vdGVVc2VyTWFwLmdldChlKTtyZXR1cm4hIWkmJighdHx8aS5oYXModCkpfWFzeW5jIGhhc1JlbW90ZU1lZGlhV2l0aExvY2soZSx0KXtpZighZSlyZXR1cm4gdGhpcy5yZW1vdGVVc2VyTWFwLnNpemU+MDtjb25zdCBpPXRoaXMucmVtb3RlVXNlck1hcC5nZXQoZSk7cmV0dXJuISFpJiYoIXR8fGkuaGFzKHQpKX1nZXRSZW1vdGVNZWRpYShlKXt2YXIgdDtjb25zdCBpPUFycmF5LmZyb20oZF8odD10aGlzLnJlbW90ZVVzZXJNYXApLmNhbGwodCkpLmZpbmQoKHQ9PnQudWlkPT09ZSkpO3JldHVybiBpP3thdWRpb1RyYWNrOmkuYXVkaW9UcmFjayxhdWRpb1NTUkM6aS5fYXVkaW9TU1JDLHZpZGVvVHJhY2s6aS52aWRlb1RyYWNrLHZpZGVvU1NSQzppLl92aWRlb1NTUkN9Ont9fWdldEF1ZGlvTGV2ZWxzKCl7bGV0IGU9QXJyYXkuZnJvbSh0aGlzLnJlbW90ZVVzZXJNYXAuZW50cmllcygpKS5tYXAoKGU9PntsZXRbdF09ZTtyZXR1cm57dWlkOnQudWlkLGxldmVsOnQuYXVkaW9UcmFjaz8xMDAqdC5hdWRpb1RyYWNrLl9zb3VyY2UuZ2V0QWNjdXJhdGVWb2x1bWVMZXZlbCgpOjB9fSkpO2NvbnN0IHQ9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbEF1ZGlvVHJhY2spO3JldHVybiB0JiZlLnB1c2goe2xldmVsOjEwMCp0LnRyYWNrLl9zb3VyY2UuZ2V0QWNjdXJhdGVWb2x1bWVMZXZlbCgpLHVpZDp0aGlzLnN0b3JlLnVpZH0pLGU9YUUoZSkuY2FsbChlLCgoZSx0KT0+ZS5sZXZlbC10LmxldmVsKSksZX1hc3luYyBkaXNjb25uZWN0Rm9yUmVjb25uZWN0KCl7dGhpcy5zZW5kQ29ubmVjdGlvbiYmdGhpcy5yZWN2Q29ubmVjdGlvbiYmKGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBQMlBDaGFubmVsMi5kaXNjb25uZWN0Rm9yUmVjb25uZWN0IGNsb3NpbmcgUDJQQ29ubmVjdGlvblwiKSksdGhpcy5zdGF0ZT1wTy5SZWNvbm5lY3RpbmcsWEEoXCJLRUVQX0xBU1RfRlJBTUVcIikmJjAhPT10aGlzLnJlbW90ZVVzZXJNYXAuc2l6ZSYmQXJyYXkuZnJvbSh0aGlzLnJlbW90ZVVzZXJNYXAuZW50cmllcygpKS5mb3JFYWNoKChlPT57bGV0W3RdPWU7dmFyIGk7dC5fdmlkZW9UcmFjayYmdC5fdmlkZW9UcmFjay5fcGxheWVyJiYobnVsbD09PShpPXQuX3ZpZGVvVHJhY2suX3BsYXllci5nZXRWaWRlb0VsZW1lbnQoKSl8fHZvaWQgMD09PWl8fGkucGF1c2UoKSx0Ll92aWRlb1RyYWNrLl9wbGF5ZXIuaXNLZWVwTGFzdEZyYW1lPSEwLHQuX3ZpZGVvVHJhY2suX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suc3RvcCgpKX0pKSx0aGlzLnNlbmRDb25uZWN0aW9uLmNsb3NlKCksdGhpcy51bmJpbmRDb25uZWN0aW9uRXZlbnRzKHRoaXMuc2VuZENvbm5lY3Rpb24pLHRoaXMuc2VuZENvbm5lY3Rpb249dm9pZCAwLHRoaXMucmVjdkNvbm5lY3Rpb24uY2xvc2UoKSx0aGlzLnVuYmluZENvbm5lY3Rpb25FdmVudHModGhpcy5yZWN2Q29ubmVjdGlvbiksdGhpcy5yZWN2Q29ubmVjdGlvbj12b2lkIDAsMCE9PXRoaXMubG9jYWxUcmFja01hcC5zaXplJiYoQXJyYXkuZnJvbSh0aGlzLmxvY2FsVHJhY2tNYXAuZW50cmllcygpKS5mb3JFYWNoKChlPT57dmFyIHQ7bGV0W2kse3RyYWNrOm59XT1lO3N3aXRjaChpKXtjYXNlIGhPLkxvY2FsVmlkZW9UcmFjazpEbih0PW4uX2hpbnRzKS5jYWxsKHQsbUwuTE9XX1NUUkVBTSk/bi5jbG9zZSgpOnRoaXMucGVuZGluZ0xvY2FsVHJhY2tzLnB1c2gobik7YnJlYWs7Y2FzZSBoTy5Mb2NhbEF1ZGlvVHJhY2s6biBpbnN0YW5jZW9mIFJNP3RoaXMucGVuZGluZ0xvY2FsVHJhY2tzPXRoaXMucGVuZGluZ0xvY2FsVHJhY2tzLmNvbmNhdChuLnRyYWNrTGlzdCk6dGhpcy5wZW5kaW5nTG9jYWxUcmFja3MucHVzaChuKTtjYXNlIGhPLkxvY2FsVmlkZW9Mb3dUcmFjazp9fSkpLHRoaXMuZW1pdChfTy5NZWRpYVJlY29ubmVjdFN0YXJ0LHRoaXMuc3RvcmUudWlkKSksdGhpcy51bmJpbmRMb2NhbFRyYWNrRXZlbnRzKCksdGhpcy5sb2NhbFRyYWNrTWFwLmNsZWFyKCksMCE9PXRoaXMucmVtb3RlVXNlck1hcC5zaXplJiZBcnJheS5mcm9tKHRoaXMucmVtb3RlVXNlck1hcC5lbnRyaWVzKCkpLmZvckVhY2goKGU9PntsZXRbdCxpXT1lO0FycmF5LmZyb20oZF8oaSkuY2FsbChpKSkuZm9yRWFjaCgoZT0+e3RoaXMuc2V0UGVuZGluZ1JlbW90ZU1lZGlhKHQsZSl9KSksdGhpcy5lbWl0KF9PLk1lZGlhUmVjb25uZWN0U3RhcnQsdC51aWQpfSkpLHRoaXMudW5iaW5kQWxsUmVtb3RlVHJhY2tFdmVudHMoKSx0aGlzLnJlbW90ZVVzZXJNYXAuY2xlYXIoKSx0aGlzLnN0b3BVcGxvYWRVcGxpbmtTdGF0ZSgpLHRoaXMuc3RvcFVwbG9hZERvd25saW5rU3RhdGUoKSx0aGlzLnN0YXRzVXBsb2FkZXIuc3RvcFVwbG9hZE91dGJvdW5kU3RhdHMoKSx0aGlzLnN0YXRzVXBsb2FkZXIuc3RvcFVwbG9hZEluYm91bmRTdGF0cygpLHRoaXMuc3RhdHNVcGxvYWRlci5zdG9wVXBsb2FkVHJhbnNwb3J0U3RhdHMoKSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gUDJQQ2hhbm5lbDIgZGlzY29ubmVjdGVkLCB3YWl0aW5nIHRvIHJlY29ubmVjdC5cIikpKX1oYXNQZW5kaW5nUmVtb3RlTWVkaWEoZSx0KXtmb3IoY29uc3QgaSBvZiB0aGlzLnBlbmRpbmdSZW1vdGVUcmFja3Mpe2NvbnN0e3VzZXI6bixraW5kOnJ9PWk7aWYoKGUgaW5zdGFuY2VvZiBjRj9lLnVpZDplKT09PW4udWlkJiZ0PT09cilyZXR1cm4hMH1yZXR1cm4hMX1zZXRQZW5kaW5nUmVtb3RlTWVkaWEoZSx0KXt0aGlzLmhhc1BlbmRpbmdSZW1vdGVNZWRpYShlLHQpfHx0aGlzLnBlbmRpbmdSZW1vdGVUcmFja3MucHVzaCh7dXNlcjplLGtpbmQ6dH0pfWFzeW5jIHJlc3RhcnRJQ0UoZSx0KXtsZXQgaSxuO2lmKGU9PT1Ndy5TRU5EX09OTFkpe2lmKCF0aGlzLnNlbmRDb25uZWN0aW9uKXRocm93IG5ldyBDeShSeS5JTlZBTElEX09QRVJBVElPTixcIkNhbm5vdCBjYWxsIFAyUENoYW5uZWwyLmhhbmRsZU11dGVMb2NhbFRyYWNrIGJlZm9yZSBzZW5kQ29ubmVjdGlvbiBlc3RhYmxpc2hlZC5cIik7aT1hd2FpdCB0aGlzLnNlbmRNdXRleC5sb2NrKFwiRnJvbSBQMlBDaGFubmVsLnJlc3RhcnRJQ0VcIiksbj10aGlzLnNlbmRDb25uZWN0aW9ufWVsc2V7aWYoIXRoaXMucmVjdkNvbm5lY3Rpb24pdGhyb3cgbmV3IEN5KFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiQ2Fubm90IGNhbGwgUDJQQ2hhbm5lbDIuaGFuZGxlTXV0ZUxvY2FsVHJhY2sgYmVmb3JlIHJlY3ZDb25uZWN0aW9uIGVzdGFibGlzaGVkLlwiKTtpPWF3YWl0IHRoaXMucmVjdk11dGV4LmxvY2soXCJGcm9tIFAyUENoYW5uZWwucmVzdGFydElDRVwiKSxuPXRoaXMucmVjdkNvbm5lY3Rpb259dHJ5e2lmKHQpe2NvbnN0IGU9YXdhaXQgbi5yZXN0YXJ0SUNFKHQpO3JldHVybiBuLmlzSW5SZXN0YXJ0SWNlPSExLGV9e2NvbnN0IGU9YXdhaXQgbi5yZXN0YXJ0SUNFKCk7aWYoZSl7Y29uc3QgdD1hd2FpdCBaeSh0aGlzLF9PLlJlcXVlc3RQMlBSZXN0YXJ0SUNFLHtkaXJlY3Rpb246TXcuUkVDRUlWRV9PTkxZLGljZVBhcmFtZXRlcjplfSk7YXdhaXQgbi5yZXN0YXJ0SUNFKHQpLG4uaXNJblJlc3RhcnRJY2U9ITF9fX1maW5hbGx5e2koKX19Z2V0VXBsaW5rTmV0d29ya1F1YWxpdHkoKXtpZighdGhpcy5zZW5kQ29ubmVjdGlvbilyZXR1cm4gMDtjb25zdCBlPXRoaXMuc2VuZENvbm5lY3Rpb24uZ2V0U3RhdHMoKSx0PXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxWaWRlb1RyYWNrKSxpPXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxBdWRpb1RyYWNrKSxuPWUudmlkZW9TZW5kLmZpbmQoKGU9Pnt2YXIgaTtyZXR1cm4gZS5zc3JjPT09KG51bGw9PXR8fG51bGw9PT0oaT10LnNzcmNzKXx8dm9pZCAwPT09aT92b2lkIDA6aVswXS5zc3JjSWQpfSkpLHI9ZS5hdWRpb1NlbmQuZmluZCgoZT0+e3ZhciB0O3JldHVybiBlLnNzcmM9PT0obnVsbD09aXx8bnVsbD09PSh0PWkuc3NyY3MpfHx2b2lkIDA9PT10P3ZvaWQgMDp0WzBdLnNzcmNJZCl9KSk7aWYoIW58fCFyKXJldHVybiAxO2NvbnN0IG89ZUEodGhpcyxfTy5OZWVkU2lnbmFsUlRUKSxzPW4/bi5ydHRNczp2b2lkIDAsYT1yP3IucnR0TXM6dm9pZCAwLGM9cyYmYT8ocythKS8yOnN8fGEsZD0oYyYmbz8oYytvKS8yOmN8fG8pfHwwLGw9MTAwKmUuc2VuZFBhY2tldExvc3NSYXRlKi43LzUwKy4zKmQvMTUwMCx1PWw8LjE3PzE6bDwuMzY/MjpsPC41OT8zOmw8LjE/NDo1LGg9bnVsbD09dD92b2lkIDA6dC50cmFjaztpZihoJiZoLl9lbmNvZGVyQ29uZmlnJiYtMT09PWguX2hpbnRzLmluZGV4T2YobUwuU0NSRUVOX1RSQUNLKSl7Y29uc3QgdD1oLl9lbmNvZGVyQ29uZmlnLmJpdHJhdGVNYXgsaT1lLmJpdHJhdGUuYWN0dWFsRW5jb2RlZDtpZih0JiZpKXtjb25zdCBlPSgxZTMqdC1pKS8oMWUzKnQpO3JldHVybiBiYltlPC4xNT8wOmU8LjM/MTplPC40NT8yOmU8LjY/Mzo0XVt1XX19cmV0dXJuIHV9Z2V0RG93bmxpbmtOZXR3b3JrUXVhbGl0eSgpe2lmKCF0aGlzLnJlY3ZDb25uZWN0aW9uKXJldHVybiAwO2NvbnN0IGU9dGhpcy5yZWN2Q29ubmVjdGlvbi5nZXRTdGF0cygpO2xldCB0PTA7cmV0dXJuIEFycmF5LmZyb20odGhpcy5yZW1vdGVVc2VyTWFwLmVudHJpZXMoKSkuZm9yRWFjaCgoaT0+e2xldFtuXT1pO2NvbnN0IHI9bi5fYXVkaW9TU1JDLG89bi5fdmlkZW9TU1JDLHM9ZS5hdWRpb1JlY3YuZmluZCgoZT0+ZS5zc3JjPT09cikpLGE9ZS52aWRlb1JlY3YuZmluZCgoZT0+ZS5zc3JjPT09bykpO2lmKCFzJiYhYSlyZXR1cm4gdm9pZCh0Kz0xKTtjb25zdCBjPWVBKHRoaXMsX08uTmVlZFNpZ25hbFJUVCksZD1lLnJ0dCxsPShkJiZjPyhkK2MpLzI6ZHx8Yyl8fDAsdT1zP3Muaml0dGVyTXM6dm9pZCAwLGg9ZS5yZWN2UGFja2V0TG9zc1JhdGU7bGV0IHA9LjcqaCoxMDAvNTArLjMqbC8xNTAwO3UmJihwPS42KmgqMTAwLzUwKy4yKmwvMTUwMCsuMip1LzQwMCk7dCs9cDwuMT8xOnA8LjE3PzI6cDwuMzY/MzpwPC41OT80OjV9KSksdGhpcy5yZW1vdGVVc2VyTWFwLnNpemU+MD9NYXRoLnJvdW5kKHQvdGhpcy5yZW1vdGVVc2VyTWFwLnNpemUpOnR9YXN5bmMgbXV0ZUxvY2FsVHJhY2soZSl7cmV0dXJuIG5ldyBHaCgoKHQsaSk9Pnt0aGlzLmhhbmRsZU11dGVMb2NhbFRyYWNrKGUsdCxpKX0pKX1maWx0ZXJUb2JlUHVibGlzaGVkVHJhY2tzKGUsdCxpKXtjb25zdCBuPVtdLHI9WlAoKSxvPXRoaXMuZ2V0QWxsVHJhY2tzKCk7ZT1yQShlPWUuZmlsdGVyKChlPT4tMT09PW8uaW5kZXhPZihlKSkpKTtsZXQgcz0hMSxhPSExO2Zvcihjb25zdCBvIG9mIGUpe2lmKG8gaW5zdGFuY2VvZiBhVSYmKHRoaXMubG9jYWxUcmFja01hcC5oYXMoaE8uTG9jYWxWaWRlb1RyYWNrKXx8cz9uZXcgQ3koUnkuQ0FOX05PVF9QVUJMSVNIX01VTFRJUExFX1ZJREVPX1RSQUNLUykudGhyb3coKToobi5wdXNoKHt0cmFjazpvLHR5cGU6aE8uTG9jYWxWaWRlb1RyYWNrfSkscz0hMCksdCkpe2NvbnN0IGU9dGhpcy5nZXRMb3dWaWRlb1RyYWNrKG8saSk7bi5wdXNoKHt0cmFjazplLHR5cGU6aE8uTG9jYWxWaWRlb0xvd1RyYWNrfSl9aWYobyBpbnN0YW5jZW9mIFRNKXtjb25zdCBlPXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxBdWRpb1RyYWNrKTtpZihlKXtpZighKGUudHJhY2sgaW5zdGFuY2VvZiBSTSkpdGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQsXCJjYW5ub3QgcHVibGlzaCBtdWx0aXBsZSB0cmFja3Mgd2hpY2ggb25lIG9mIHRoZW0gY29uZmlndXJlZCB3aXRoIGJ5cGFzc1dlYkF1ZGlvIG9yIHlvdXIgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IGF1ZGlvIG1peGluZ1wiKTtpZihvLl9ieXBhc3NXZWJBdWRpbyl0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcImNhbm5vdCBwdWJsaXNoIG11bHRpcGxlIHRyYWNrcyB3aGljaCBvbmUgb2YgdGhlbSBjb25maWd1cmVkIHdpdGggYnlwYXNzV2ViQXVkaW9cIik7ZS50cmFjay5hZGRBdWRpb1RyYWNrKG8pLHRoaXMuYmluZExvY2FsQXVkaW9UcmFja0V2ZW50cyhvLCEwKX1lbHNlIGlmKGEpe2NvbnN0IGU9bi5maW5kKChlPT57bGV0e3R5cGU6dH09ZTtyZXR1cm4gdD09PWhPLkxvY2FsQXVkaW9UcmFja30pKTtpZighKGUudHJhY2sgaW5zdGFuY2VvZiBSTSkpdGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQsXCJjYW5ub3QgcHVibGlzaCBtdWx0aXBsZSB0cmFja3Mgd2hpY2ggb25lIG9mIHRoZW0gY29uZmlndXJlZCB3aXRoIGJ5cGFzc1dlYkF1ZGlvIG9yIHlvdXIgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IGF1ZGlvIG1peGluZ1wiKTtpZihvLl9ieXBhc3NXZWJBdWRpbyl0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcImNhbm5vdCBwdWJsaXNoIG11bHRpcGxlIHRyYWNrcyB3aGljaCBvbmUgb2YgdGhlbSBjb25maWd1cmVkIHdpdGggYnlwYXNzV2ViQXVkaW9cIik7ZS50cmFjay5hZGRBdWRpb1RyYWNrKG8pfWVsc2V7aWYoIXIud2ViQXVkaW9NZWRpYVN0cmVhbURlc3R8fG8gaW5zdGFuY2VvZiBSTXx8by5fYnlwYXNzV2ViQXVkaW8pbi5wdXNoKHt0cmFjazpvLHR5cGU6aE8uTG9jYWxBdWRpb1RyYWNrfSk7ZWxzZXtjb25zdCBlPW5ldyBSTTtlLmFkZEF1ZGlvVHJhY2sobyksbi5wdXNoKHt0cmFjazplLHR5cGU6aE8uTG9jYWxBdWRpb1RyYWNrfSl9YT0hMH19fXJldHVybiBufWZpbHRlclRvYmVVbnB1Ymxpc2hlZFRyYWNrcyhlKXtjb25zdCB0PVtdLGk9dGhpcy5nZXRBbGxUcmFja3MoKTtlPXJBKGU9ZS5maWx0ZXIoKGU9Pi0xIT09aS5pbmRleE9mKGUpKSkpO2Zvcihjb25zdCBpIG9mIGUpe2lmKGkgaW5zdGFuY2VvZiBUTSl7Y29uc3QgZT10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsQXVkaW9UcmFjayk7aWYoIWUpY29udGludWU7ZS50cmFjayBpbnN0YW5jZW9mIFJNPyhlLnRyYWNrLnJlbW92ZUF1ZGlvVHJhY2soaSksdGhpcy51bmJpbmRMb2NhbEF1ZGlvVHJhY2tFdmVudHMoaSksMD09PWUudHJhY2sudHJhY2tMaXN0Lmxlbmd0aCYmKHQucHVzaChbaE8uTG9jYWxBdWRpb1RyYWNrLGVdKSxlLnRyYWNrLmNsb3NlKCkpKTp0LnB1c2goW2hPLkxvY2FsQXVkaW9UcmFjayxlXSl9aWYoaSBpbnN0YW5jZW9mIGFVKXtjb25zdCBlPXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxWaWRlb1RyYWNrKTtpZighZSljb250aW51ZTt0LnB1c2goW2hPLkxvY2FsVmlkZW9UcmFjayxlXSk7Y29uc3QgaT10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsVmlkZW9Mb3dUcmFjayk7aSYmdC5wdXNoKFtoTy5Mb2NhbFZpZGVvTG93VHJhY2ssaV0pfX1yZXR1cm4gdH1iaW5kTG9jYWxUcmFja0V2ZW50cyhlKXtlLmZvckVhY2goKGU9PntsZXR7dHJhY2s6dCx0eXBlOml9PWU7c3dpdGNoKGkpe2Nhc2UgaE8uTG9jYWxWaWRlb1RyYWNrOnQuYWRkTGlzdGVuZXIoZkwuR0VUX1NUQVRTLHRoaXMuaGFuZGxlR2V0TG9jYWxWaWRlb1N0YXRzKSx0LmFkZExpc3RlbmVyKGZMLk5FRURfRElTQUJMRV9UUkFDSyx0aGlzLmhhbmRsZU11dGVMb2NhbFRyYWNrKSx0LmFkZExpc3RlbmVyKGZMLk5FRURfRU5BQkxFX1RSQUNLLHRoaXMuaGFuZGxlVW5tdXRlTG9jYWxUcmFjayksdC5hZGRMaXN0ZW5lcihmTC5ORUVEX1VQREFURV9WSURFT19FTkNPREVSLHRoaXMuaGFuZGxlVXBkYXRlVmlkZW9FbmNvZGVyKSx0LmFkZExpc3RlbmVyKGZMLk5FRURfVVBEQVRFX1ZJREVPX1NFTkRfUEFSQU1FVEVSUyx0aGlzLmhhbmRsZVVwZGF0ZVZpZGVvU2VuZFBhcmFtZXRlcnMpLHQuYWRkTGlzdGVuZXIoZkwuTkVFRF9SRVBMQUNFX1RSQUNLLHRoaXMuaGFuZGxlUmVwbGFjZVRyYWNrKSx0LmFkZExpc3RlbmVyKGZMLk5FRURfTVVURV9UUkFDSyx0aGlzLmhhbmRsZU11dGVMb2NhbFRyYWNrKSx0LmFkZExpc3RlbmVyKGZMLk5FRURfVU5NVVRFX1RSQUNLLHRoaXMuaGFuZGxlVW5tdXRlTG9jYWxUcmFjayk7YnJlYWs7Y2FzZSBoTy5Mb2NhbEF1ZGlvVHJhY2s6dGhpcy5iaW5kTG9jYWxBdWRpb1RyYWNrRXZlbnRzKHQpO2Nhc2UgaE8uTG9jYWxWaWRlb0xvd1RyYWNrOn19KSl9YmluZExvY2FsQXVkaW9UcmFja0V2ZW50cyhlLHQpe2UgaW5zdGFuY2VvZiBSTT9lLnRyYWNrTGlzdC5mb3JFYWNoKChlPT57ZS5hZGRMaXN0ZW5lcihmTC5ORUVEX0RJU0FCTEVfVFJBQ0ssdGhpcy5oYW5kbGVNdXRlTG9jYWxUcmFjayksZS5hZGRMaXN0ZW5lcihmTC5ORUVEX0VOQUJMRV9UUkFDSyx0aGlzLmhhbmRsZVVubXV0ZUxvY2FsVHJhY2spLGUuYWRkTGlzdGVuZXIoZkwuR0VUX1NUQVRTLHRoaXMuaGFuZGxlR2V0TG9jYWxBdWRpb1N0YXRzKSxlLmFkZExpc3RlbmVyKGZMLk5FRURfTVVURV9UUkFDSyx0aGlzLmhhbmRsZU11dGVMb2NhbFRyYWNrKSxlLmFkZExpc3RlbmVyKGZMLk5FRURfVU5NVVRFX1RSQUNLLHRoaXMuaGFuZGxlVW5tdXRlTG9jYWxUcmFjayl9KSk6KGUuYWRkTGlzdGVuZXIoZkwuR0VUX1NUQVRTLHRoaXMuaGFuZGxlR2V0TG9jYWxBdWRpb1N0YXRzKSxlLmFkZExpc3RlbmVyKGZMLk5FRURfRElTQUJMRV9UUkFDSyx0aGlzLmhhbmRsZU11dGVMb2NhbFRyYWNrKSxlLmFkZExpc3RlbmVyKGZMLk5FRURfRU5BQkxFX1RSQUNLLHRoaXMuaGFuZGxlVW5tdXRlTG9jYWxUcmFjayksZS5hZGRMaXN0ZW5lcihmTC5ORUVEX01VVEVfVFJBQ0ssdGhpcy5oYW5kbGVNdXRlTG9jYWxUcmFjayksZS5hZGRMaXN0ZW5lcihmTC5ORUVEX1VOTVVURV9UUkFDSyx0aGlzLmhhbmRsZVVubXV0ZUxvY2FsVHJhY2spLHR8fGUuYWRkTGlzdGVuZXIoZkwuTkVFRF9SRVBMQUNFX1RSQUNLLHRoaXMuaGFuZGxlUmVwbGFjZVRyYWNrKSl9dW5iaW5kTG9jYWxUcmFja0V2ZW50cyhlKXtlfHwoZT1BcnJheS5mcm9tKHRoaXMubG9jYWxUcmFja01hcC5lbnRyaWVzKCkpLm1hcCgoZT0+e2xldFt0LHt0cmFjazppfV09ZTtyZXR1cm57dHJhY2s6aSx0eXBlOnR9fSkpKSxlLmZvckVhY2goKGU9PntsZXR7dHJhY2s6dCx0eXBlOml9PWU7c3dpdGNoKGkpe2Nhc2UgaE8uTG9jYWxWaWRlb1RyYWNrOnQub2ZmKGZMLkdFVF9TVEFUUyx0aGlzLmhhbmRsZUdldExvY2FsVmlkZW9TdGF0cyksdC5vZmYoZkwuTkVFRF9ESVNBQkxFX1RSQUNLLHRoaXMuaGFuZGxlTXV0ZUxvY2FsVHJhY2spLHQub2ZmKGZMLk5FRURfRU5BQkxFX1RSQUNLLHRoaXMuaGFuZGxlVW5tdXRlTG9jYWxUcmFjayksdC5vZmYoZkwuTkVFRF9VUERBVEVfVklERU9fRU5DT0RFUix0aGlzLmhhbmRsZVVwZGF0ZVZpZGVvRW5jb2RlciksdC5vZmYoZkwuTkVFRF9VUERBVEVfVklERU9fU0VORF9QQVJBTUVURVJTLHRoaXMuaGFuZGxlVXBkYXRlVmlkZW9TZW5kUGFyYW1ldGVycyksdC5vZmYoZkwuTkVFRF9SRVBMQUNFX1RSQUNLLHRoaXMuaGFuZGxlUmVwbGFjZVRyYWNrKSx0Lm9mZihmTC5ORUVEX01VVEVfVFJBQ0ssdGhpcy5oYW5kbGVNdXRlTG9jYWxUcmFjayksdC5vZmYoZkwuTkVFRF9VTk1VVEVfVFJBQ0ssdGhpcy5oYW5kbGVVbm11dGVMb2NhbFRyYWNrKTticmVhaztjYXNlIGhPLkxvY2FsQXVkaW9UcmFjazp0aGlzLnVuYmluZExvY2FsQXVkaW9UcmFja0V2ZW50cyh0KTtjYXNlIGhPLkxvY2FsVmlkZW9Mb3dUcmFjazp9fSkpfXVuYmluZExvY2FsQXVkaW9UcmFja0V2ZW50cyhlKXtlIGluc3RhbmNlb2YgUk0/ZS50cmFja0xpc3QuZm9yRWFjaCgoZT0+e2Uub2ZmKGZMLk5FRURfRElTQUJMRV9UUkFDSyx0aGlzLmhhbmRsZU11dGVMb2NhbFRyYWNrKSxlLm9mZihmTC5ORUVEX0VOQUJMRV9UUkFDSyx0aGlzLmhhbmRsZVVubXV0ZUxvY2FsVHJhY2spLGUub2ZmKGZMLkdFVF9TVEFUUyx0aGlzLmhhbmRsZUdldExvY2FsQXVkaW9TdGF0cyksZS5vZmYoZkwuTkVFRF9NVVRFX1RSQUNLLHRoaXMuaGFuZGxlTXV0ZUxvY2FsVHJhY2spLGUub2ZmKGZMLk5FRURfVU5NVVRFX1RSQUNLLHRoaXMuaGFuZGxlVW5tdXRlTG9jYWxUcmFjayl9KSk6KGUub2ZmKGZMLkdFVF9TVEFUUyx0aGlzLmhhbmRsZUdldExvY2FsQXVkaW9TdGF0cyksZS5vZmYoZkwuTkVFRF9ESVNBQkxFX1RSQUNLLHRoaXMuaGFuZGxlTXV0ZUxvY2FsVHJhY2spLGUub2ZmKGZMLk5FRURfRU5BQkxFX1RSQUNLLHRoaXMuaGFuZGxlVW5tdXRlTG9jYWxUcmFjayksZS5vZmYoZkwuTkVFRF9SRVBMQUNFX1RSQUNLLHRoaXMuaGFuZGxlUmVwbGFjZVRyYWNrKSxlLm9mZihmTC5ORUVEX01VVEVfVFJBQ0ssdGhpcy5oYW5kbGVNdXRlTG9jYWxUcmFjayksZS5vZmYoZkwuTkVFRF9VTk1VVEVfVFJBQ0ssdGhpcy5oYW5kbGVVbm11dGVMb2NhbFRyYWNrKSl9YmluZFJlbW90ZVRyYWNrRXZlbnRzKGUsdCl7dCBpbnN0YW5jZW9mIElVJiZ0LmFkZExpc3RlbmVyKGZMLkdFVF9TVEFUUywodD0+e3QodGhpcy5oYW5kbGVHZXRSZW1vdGVWaWRlb1N0YXRzKGUpKX0pKSx0IGluc3RhbmNlb2YgdlUmJnQuYWRkTGlzdGVuZXIoZkwuR0VUX1NUQVRTLCh0PT57dCh0aGlzLmhhbmRsZUdldFJlbW90ZUF1ZGlvU3RhdHMoZSkpfSkpfXVuYmluZFJlbW90ZVRyYWNrRXZlbnRzKGUpe2UmJmUucmVtb3ZlQWxsTGlzdGVuZXJzKGZMLkdFVF9TVEFUUyl9dW5iaW5kQWxsUmVtb3RlVHJhY2tFdmVudHMoKXtBcnJheS5mcm9tKHRoaXMucmVtb3RlVXNlck1hcC5lbnRyaWVzKCkpLmZvckVhY2goKGU9PntsZXRbdCxpXT1lO2kuaGFzKGRPLkFVRElPKSYmdGhpcy51bmJpbmRSZW1vdGVUcmFja0V2ZW50cyh0Ll9hdWRpb1RyYWNrKSxpLmhhcyhkTy5WSURFTykmJnRoaXMudW5iaW5kUmVtb3RlVHJhY2tFdmVudHModC5fdmlkZW9UcmFjayl9KSl9Y3JlYXRlR2F0ZXdheVB1Ymxpc2hNZXNzYWdlKGUsdCl7cmV0dXJuIGUubWFwKCgoZSxpKT0+e3ZhciBuO2xldCByLHt0cmFjazpvLHR5cGU6c309ZTtzd2l0Y2gocyl7Y2FzZSBoTy5Mb2NhbEF1ZGlvVHJhY2s6cj1ady5BdWRpbzticmVhaztjYXNlIGhPLkxvY2FsVmlkZW9UcmFjazpyPURuKG49by5faGludHMpLmNhbGwobixtTC5TQ1JFRU5fVFJBQ0spP1p3LlNjcmVlbjpady5IaWdoO2JyZWFrO2Nhc2UgaE8uTG9jYWxWaWRlb0xvd1RyYWNrOnI9WncuTG93fXJldHVybntraW5kOnM9PT1oTy5Mb2NhbEF1ZGlvVHJhY2s/ZE8uQVVESU86ZE8uVklERU8sc3RyZWFtX3R5cGU6cixtaWQ6dFtpXS5pZCxzc3Jjczp0W2ldLmxvY2FsU1NSQyxpc011dGVkOm8ubXV0ZWR8fCFvLmVuYWJsZWR9fSkpfWNyZWF0ZUdhdGV3YXlVbnB1Ymxpc2hNZXNzYWdlKGUpe3JldHVybiBlLm1hcCgoZT0+e3ZhciB0O2xldCBpLFtuLHt0cmFjazpyLHNzcmNzOm8saWQ6c31dPWU7c3dpdGNoKG4pe2Nhc2UgaE8uTG9jYWxWaWRlb1RyYWNrOmk9RG4odD1yLl9oaW50cykuY2FsbCh0LG1MLlNDUkVFTl9UUkFDSyk/WncuU2NyZWVuOlp3LkhpZ2g7YnJlYWs7Y2FzZSBoTy5Mb2NhbEF1ZGlvVHJhY2s6aT1ady5BdWRpbzticmVhaztjYXNlIGhPLkxvY2FsVmlkZW9Mb3dUcmFjazppPVp3Lkxvd31yZXR1cm57c3RyZWFtX3R5cGU6aSxzc3JjczpvLG1pZDpzfX0pKX1hc3NpZ25Mb2NhbFRyYWNrcyhlLHQpe2UuZm9yRWFjaCgoKGUsaSk9PntsZXR7dHJhY2s6bix0eXBlOnJ9PWU7dGhpcy5sb2NhbFRyYWNrTWFwLnNldChyLHt0cmFjazpuLGlkOnRbaV0uaWQsc3NyY3M6dFtpXS5sb2NhbFNTUkN9KX0pKX13aXRoZHJhd0xvY2FsVHJhY2tzKGUpe2UuZm9yRWFjaCgoZT0+e2xldFt0XT1lO3RoaXMubG9jYWxUcmFja01hcC5kZWxldGUodCl9KSl9YmluZENvbm5lY3Rpb25FdmVudHMoZSl7ZS5vbkNvbm5lY3Rpb25TdGF0ZUNoYW5nZT1hc3luYyB0PT57dmFyIGk7ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW3AycElkOiBcIikuY29uY2F0KHRoaXMuc3RvcmUucDJwSWQsXCJdOiBcIikuY29uY2F0KGUubmFtZSxcIi5vbkNvbm5lY3Rpb25TdGF0ZUNoYW5nZShcIikuY29uY2F0KHQsXCIpXCIpKSx0aGlzLmVtaXQoX08uUGVlckNvbm5lY3Rpb25TdGF0ZUNoYW5nZSx0KSxcImNvbm5lY3RlZFwiIT09dHx8dGhpcy5zdG9yZS5rZXlNZXRyaWNzLnBlZXJDb25uZWN0aW9uRW5kfHx0aGlzLnN0b3JlLnBlZXJDb25uZWN0aW9uRW5kKCksXCJjb25uZWN0ZWRcIj09PXQmJihlLmlzSW5SZXN0YXJ0SWNlPSExKSxEbihpPXRoaXMuX3Jlc3RhcnRTdGF0ZXMpLmNhbGwoaSx0KSYmIWUuaXNJblJlc3RhcnRJY2UmJihcImRpc2Nvbm5lY3RlZFwiPT09dCYmYXdhaXQgbUEoODAwKSxcImRpc2Nvbm5lY3RlZFwiIT09ZS5pY2VDb25uZWN0aW9uU3RhdGUmJlwiZmFpbGVkXCIhPT1lLmljZUNvbm5lY3Rpb25TdGF0ZXx8dGhpcy5oYW5kbGVEaXNjb25uZWN0KGUuZGlyZWN0aW9uKSl9LGUub25JQ0VDb25uZWN0aW9uU3RhdGVDaGFuZ2U9ZT0+e1wiY29ubmVjdGVkXCIhPT1lfHx0aGlzLnN0b3JlLmtleU1ldHJpY3MuaWNlQ29ubmVjdGlvbkVuZHx8dGhpcy5zdG9yZS5pY2VDb25uZWN0aW9uRW5kKCksZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW3AycElkOiBcIikuY29uY2F0KHRoaXMuc3RvcmUucDJwSWQsXCJdOiBQMlBDb25uZWN0aW9uLm9uSUNFQ29ubmVjdGlvblN0YXRlQ2hhbmdlKFwiKS5jb25jYXQoZSxcIilcIikpLHZiLnJlcG9ydEFwaUludm9rZSh0aGlzLnN0b3JlLnNlc3Npb25JZCx7bmFtZTpcIklDRUNvbm5lY3Rpb25TdGF0ZUNoYW5nZVwiLG9wdGlvbnM6ZSx0YWc6ankuVFJBQ0VSfSkub25TdWNjZXNzKCksdGhpcy5lbWl0KF9PLkljZUNvbm5lY3Rpb25TdGF0ZUNoYW5nZSxlKX0sZS5vbklDRVRyYW5zcG9ydFN0YXRlQ2hhbmdlPWU9PntmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbcDJwSWQ6IFwiKS5jb25jYXQodGhpcy5zdG9yZS5wMnBJZCxcIl06IFAyUENvbm5lY3Rpb24ub25JQ0VUcmFuc3BvcnRTdGF0ZUNoYW5nZShcIikuY29uY2F0KGUsXCIpXCIpKX0sZS5vbkRUTFNUcmFuc3BvcnRTdGF0ZUNoYW5nZT1lPT57ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW3AycElkOiBcIikuY29uY2F0KHRoaXMuc3RvcmUucDJwSWQsXCJdOiBQMlBDb25uZWN0aW9uLm9uRFRMU1RyYW5zcG9ydFN0YXRlQ2hhbmdlKFwiKS5jb25jYXQoZSxcIilcIikpfSxlLm9uRFRMU1RyYW5zcG9ydEVycm9yPWU9PntmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbcDJwSWQ6IFwiKS5jb25jYXQodGhpcy5zdG9yZS5wMnBJZCxcIl06IFAyUENvbm5lY3Rpb24ub25EVExTVHJhbnNwb3J0RXJyb3IoXCIpLmNvbmNhdChlLFwiKVwiKSl9LGUub25GaXJzdEF1ZGlvRGVjb2RlZD1lPT57dmFyIHQ7Y29uc3QgaT1BcnJheS5mcm9tKGRfKHQ9dGhpcy5yZW1vdGVVc2VyTWFwKS5jYWxsKHQpKS5maW5kKCh0PT50Ll9hdWRpb1NTUkM9PT1lKSk7dmFyIG47aSYmKHRoaXMuc3RvcmUuc3Vic2NyaWJlKGkudWlkLFwiYXVkaW9cIix2b2lkIDAsdm9pZCAwLHZvaWQgMCxEYXRlLm5vdygpKSxudWxsPT09KG49aS5hdWRpb1RyYWNrKXx8dm9pZCAwPT09bnx8bi5lbWl0KElMLkZJUlNUX0ZSQU1FX0RFQ09ERUQpLHZiLmZpcnN0UmVtb3RlRnJhbWUodGhpcy5zdG9yZS5zZXNzaW9uSWQsZ2IuRklSU1RfQVVESU9fREVDT0RFLFJiLkZJUlNUX0FVRElPX0RFQ09ERSx7cGVlcjppLl91aW50aWQsc3Vic2NyaWJlRWxhcHNlOnJWLm1lYXN1cmVGcm9tU3Vic2NyaWJlU3RhcnQodGhpcy5zdG9yZS5jbGllbnRJZCxlKSxzdWJzY3JpYmVSZXF1ZXN0aWQ6ZSxwMnBpZDp0aGlzLnN0b3JlLnAycElkfSkpfSxlLm9uRmlyc3RBdWRpb1JlY2VpdmVkPWU9Pnt2YXIgdDtjb25zdCBpPUFycmF5LmZyb20oZF8odD10aGlzLnJlbW90ZVVzZXJNYXApLmNhbGwodCkpLmZpbmQoKHQ9PnQuX2F1ZGlvU1NSQz09PWUpKTtpJiZ2Yi5maXJzdFJlbW90ZUZyYW1lKHRoaXMuc3RvcmUuc2Vzc2lvbklkLGdiLkZJUlNUX0FVRElPX1JFQ0VJVkVELFJiLkZJUlNUX0FVRElPX1JFQ0VJVkVELHtwZWVyOmkuX3VpbnRpZCxzdWJzY3JpYmVFbGFwc2U6clYubWVhc3VyZUZyb21TdWJzY3JpYmVTdGFydCh0aGlzLnN0b3JlLmNsaWVudElkLGUpLHN1YnNjcmliZVJlcXVlc3RpZDplLHAycGlkOnRoaXMuc3RvcmUucDJwSWR9KX0sZS5vbkZpcnN0VmlkZW9EZWNvZGVkPShlLHQsaSk9Pnt0aGlzLnJlcG9ydFZpZGVvRmlyc3RGcmFtZURlY29kZWQoZSx0LGkpfSxlLm9uRmlyc3RWaWRlb1JlY2VpdmVkPWU9Pnt2YXIgdDtjb25zdCBpPUFycmF5LmZyb20oZF8odD10aGlzLnJlbW90ZVVzZXJNYXApLmNhbGwodCkpLmZpbmQoKHQ9PnQuX3ZpZGVvU1NSQz09PWUpKTtpJiZ2Yi5maXJzdFJlbW90ZUZyYW1lKHRoaXMuc3RvcmUuc2Vzc2lvbklkLGdiLkZJUlNUX1ZJREVPX1JFQ0VJVkVELFJiLkZJUlNUX1ZJREVPX1JFQ0VJVkVELHtwZWVyOmkuX3VpbnRpZCxzdWJzY3JpYmVFbGFwc2U6clYubWVhc3VyZUZyb21TdWJzY3JpYmVTdGFydCh0aGlzLnN0b3JlLmNsaWVudElkLGUpLHN1YnNjcmliZVJlcXVlc3RpZDplLHAycGlkOnRoaXMuc3RvcmUucDJwSWR9KX0sZS5vblNlbGVjdGVkTG9jYWxDYW5kaWRhdGVDaGFuZ2VkPShlLHQpPT57Y29uc3QgaT1cInJlbGF5XCI9PT1lLmNhbmRpZGF0ZVR5cGUsbj1cInJlbGF5XCI9PT10LmNhbmRpZGF0ZVR5cGU7XCJ1bmtub3duXCIhPT10LmNhbmRpZGF0ZVR5cGUmJmk9PT1ufHx0aGlzLmVtaXQoX08uQ29ubmVjdGlvblR5cGVDaGFuZ2UsaSksZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW3AycElkOiBcIikuY29uY2F0KHRoaXMuc3RvcmUucDJwSWQsXCJdOiBQMlBDb25uZWN0aW9uLlNlbGVjdGVkTG9jYWxDYW5kaWRhdGVDaGFuZ2VkKFwiKS5jb25jYXQoSlNPTi5zdHJpbmdpZnkobk4odCkpLFwiIC0+IFwiKS5jb25jYXQoSlNPTi5zdHJpbmdpZnkobk4oZSkpLFwiKVwiKSl9LGUub25TZWxlY3RlZFJlbW90ZUNhbmRpZGF0ZUNoYW5nZWQ9KGUsdCk9PntmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbcDJwSWQ6IFwiKS5jb25jYXQodGhpcy5zdG9yZS5wMnBJZCxcIl06IFAyUENvbm5lY3Rpb24uU2VsZWN0ZWRSZW1vdGVDYW5kaWRhdGVDaGFuZ2VkKFwiKS5jb25jYXQoSlNPTi5zdHJpbmdpZnkobk4odCkpLFwiIC0+IFwiKS5jb25jYXQoSlNPTi5zdHJpbmdpZnkobk4oZSkpLFwiKVwiKSl9LGUub25GaXJzdFZpZGVvRGVjb2RlZFRpbWVvdXQ9ZT0+e3RoaXMucmVwb3J0VmlkZW9GaXJzdEZyYW1lRGVjb2RlZChlLHZvaWQgMCx2b2lkIDAsITApfSxlLm9uTG9jYWxDYW5kaWRhdGU9dD0+e3RoaXMuZW1pdChfTy5Mb2NhbENhbmRpZGF0ZSx7Y2FuZGlkYXRlOnQsZGlyZWN0aW9uOmUuZGlyZWN0aW9ufSl9fXVuYmluZENvbm5lY3Rpb25FdmVudHMoZSl7ZS5vbkNvbm5lY3Rpb25TdGF0ZUNoYW5nZT12b2lkIDAsZS5vbklDRUNvbm5lY3Rpb25TdGF0ZUNoYW5nZT12b2lkIDAsZS5vbklDRVRyYW5zcG9ydFN0YXRlQ2hhbmdlPXZvaWQgMCxlLm9uRFRMU1RyYW5zcG9ydFN0YXRlQ2hhbmdlPXZvaWQgMCxlLm9uRFRMU1RyYW5zcG9ydEVycm9yPXZvaWQgMCxlLm9uRmlyc3RBdWRpb0RlY29kZWQ9dm9pZCAwLGUub25GaXJzdEF1ZGlvUmVjZWl2ZWQ9dm9pZCAwLGUub25GaXJzdFZpZGVvRGVjb2RlZD12b2lkIDAsZS5vbkZpcnN0VmlkZW9SZWNlaXZlZD12b2lkIDAsZS5vblNlbGVjdGVkTG9jYWxDYW5kaWRhdGVDaGFuZ2VkPXZvaWQgMCxlLm9uU2VsZWN0ZWRSZW1vdGVDYW5kaWRhdGVDaGFuZ2VkPXZvaWQgMCxlLm9uRmlyc3RWaWRlb0RlY29kZWRUaW1lb3V0PXZvaWQgMCxlLm9uTG9jYWxDYW5kaWRhdGU9dm9pZCAwfWFzeW5jIGhhbmRsZURpc2Nvbm5lY3QoZSl7Y29uc3QgdD1lPT09TXcuU0VORF9PTkxZP3RoaXMuc2VuZENvbm5lY3Rpb246dGhpcy5yZWN2Q29ubmVjdGlvbjt0JiYhdC5pc0luUmVzdGFydEljZSYmKHQuaXNJblJlc3RhcnRJY2U9ITAsZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFtQMlBDaGFubmVsLVwiKS5jb25jYXQodC5uYW1lLFwiXSBzdGFydCB1c2UgcmVzdGFydElDRVwiKSksZT09PU13LlNFTkRfT05MWT90aGlzLnJlc3RhcnRJQ0UoZSk6WnkodGhpcyxfTy5SZXF1ZXN0UDJQUmVzdGFydElDRSx7ZGlyZWN0aW9uOk13LlNFTkRfT05MWX0pKX1maWx0ZXJUb2JlTXV0ZWRUcmFja3MoZSl7Y29uc3QgdD1bXTtpZigtMT09PXRoaXMuZ2V0QWxsVHJhY2tzKCkuaW5kZXhPZihlKSlyZXR1cm4gdDtjb25zdCBpPXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxBdWRpb1RyYWNrKTtpZihlIGluc3RhbmNlb2YgVE0mJihudWxsPT1pP3ZvaWQgMDppLnRyYWNrKWluc3RhbmNlb2YgUk0pcmV0dXJuIGkudHJhY2suaXNBY3RpdmV8fHQucHVzaChbaE8uTG9jYWxBdWRpb1RyYWNrLGldKSx0O2NvbnN0IG49QXJyYXkuZnJvbSh0aGlzLmxvY2FsVHJhY2tNYXAuZW50cmllcygpKS5maW5kKCh0PT57bGV0Wyx7dHJhY2s6aX1dPXQ7cmV0dXJuIGU9PT1pfSkpO2lmKG4mJih0LnB1c2gobiksblswXT09PWhPLkxvY2FsVmlkZW9UcmFjaykpe2NvbnN0IGU9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbFZpZGVvTG93VHJhY2spO2UmJnQucHVzaChbaE8uTG9jYWxWaWRlb0xvd1RyYWNrLGVdKX1yZXR1cm4gdH1maWx0ZXJUb2JlVW5tdXRlZFRyYWNrcyhlKXtjb25zdCB0PVtdLGk9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbEF1ZGlvVHJhY2spO2lmKGUgaW5zdGFuY2VvZiBUTSYmKG51bGw9PWk/dm9pZCAwOmkudHJhY2spaW5zdGFuY2VvZiBSTSlyZXR1cm4gaS50cmFjay5pc0FjdGl2ZSYmdC5wdXNoKFtoTy5Mb2NhbEF1ZGlvVHJhY2ssaV0pLHQ7Y29uc3Qgbj1BcnJheS5mcm9tKHRoaXMubG9jYWxUcmFja01hcC5lbnRyaWVzKCkpLmZpbmQoKHQ9PntsZXRbLHt0cmFjazppfV09dDtyZXR1cm4gZT09PWl9KSk7aWYobilpZihuWzBdPT09aE8uTG9jYWxWaWRlb1RyYWNrKXt0LnB1c2gobik7Y29uc3QgZT10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsVmlkZW9Mb3dUcmFjayk7ZSYmdC5wdXNoKFtoTy5Mb2NhbFZpZGVvTG93VHJhY2ssZV0pfWVsc2UgdC5wdXNoKG4pO3JldHVybiB0fWNyZWF0ZU11dGVNZXNzYWdlKGUpe3JldHVybiBlLm1hcCgoZT0+e3ZhciB0O2xldCBpLFtuLHt0cmFjazpyLHNzcmNzOm8saWQ6c31dPWU7c3dpdGNoKG4pe2Nhc2UgaE8uTG9jYWxBdWRpb1RyYWNrOmk9WncuQXVkaW87YnJlYWs7Y2FzZSBoTy5Mb2NhbFZpZGVvVHJhY2s6aT1Ebih0PXIuX2hpbnRzKS5jYWxsKHQsbUwuU0NSRUVOX1RSQUNLKT9ady5TY3JlZW46WncuSGlnaDticmVhaztjYXNlIGhPLkxvY2FsVmlkZW9Mb3dUcmFjazppPVp3Lkxvd31yZXR1cm57c3RyZWFtX3R5cGU6aSxzc3JjczpvLG1pZDpzfX0pKX1jcmVhdGVVbm11dGVNZXNzYWdlKGUpe3JldHVybiBlLm1hcCgoZT0+e3ZhciB0O2xldCBpLFtuLHt0cmFjazpyLHNzcmNzOm8saWQ6c31dPWU7c3dpdGNoKG4pe2Nhc2UgaE8uTG9jYWxBdWRpb1RyYWNrOmk9WncuQXVkaW87YnJlYWs7Y2FzZSBoTy5Mb2NhbFZpZGVvVHJhY2s6aT1Ebih0PXIuX2hpbnRzKS5jYWxsKHQsbUwuU0NSRUVOX1RSQUNLKT9ady5TY3JlZW46WncuSGlnaDticmVhaztjYXNlIGhPLkxvY2FsVmlkZW9Mb3dUcmFjazppPVp3Lkxvd31yZXR1cm57c3RyZWFtX3R5cGU6aSxzc3JjczpvLG1pZDpzfX0pKX1maWx0ZXJUb2JlVW5TdWJzY3JpYmVkVHJhY2tzKGUsdCl7Y29uc3QgaT1bXSxuPXRoaXMucmVtb3RlVXNlck1hcC5nZXQoZSk7aWYoIW4pcmV0dXJuIGk7aWYodCl7Y29uc3Qgcj1uLmdldCh0KTtpZighcilyZXR1cm4gaTtpLnB1c2goW2Use2tpbmQ6dCxpZDpyfV0pfWVsc2UgQXJyYXkuZnJvbShuLmVudHJpZXMoKSkuZm9yRWFjaCgodD0+e2xldFtuLHJdPXQ7aS5wdXNoKFtlLHtraW5kOm4saWQ6cn1dKX0pKTtyZXR1cm4gaX1jcmVhdGVVbnN1YnNjcmliZU1lc3NhZ2UoZSl7Y29uc3QgdD1bXTtyZXR1cm4gZS5mb3JFYWNoKChlPT57bGV0W2kse2tpbmQ6bixpZDpyfV09ZTtzd2l0Y2gobil7Y2FzZSBkTy5WSURFTzpyZXR1cm4gdm9pZChpLl92aWRlb1NTUkMmJnQucHVzaCh7c3RyZWFtX3R5cGU6ZE8uVklERU8sc3NyY0lkOmkuX3ZpZGVvU1NSQ30pKTtjYXNlIGRPLkFVRElPOnJldHVybiB2b2lkKGkuX2F1ZGlvU1NSQyYmdC5wdXNoKHtzdHJlYW1fdHlwZTpkTy5BVURJTyxzc3JjSWQ6aS5fYXVkaW9TU1JDfSkpfX0pKSx0fXdpdGhkcmF3UmVtb3RlVHJhY2tzKGUpe2UuZm9yRWFjaCgoZT0+e2xldFt0LHtraW5kOml9XT1lO2NvbnN0IG49dGhpcy5yZW1vdGVVc2VyTWFwLmdldCh0KTtuJiYobi5kZWxldGUoaSksMD09PUFycmF5LmZyb20obi5lbnRyaWVzKCkpLmxlbmd0aCYmdGhpcy5yZW1vdGVVc2VyTWFwLmRlbGV0ZSh0KSl9KSl9YXN5bmMgdXBkYXRlQml0cmF0ZUxpbWl0KGUpe2NvbnN0IHQ9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbFZpZGVvVHJhY2spLGk9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbFZpZGVvTG93VHJhY2spO3QmJmF3YWl0IHQudHJhY2suc2V0Qml0cmF0ZUxpbWl0KGUudXBsaW5rKSxpJiZlLmxvd19zdHJlYW1fdXBsaW5rJiZhd2FpdCBpLnRyYWNrLnNldEJpdHJhdGVMaW1pdCh7bWF4X2JpdHJhdGU6ZS5sb3dfc3RyZWFtX3VwbGluay5iaXRyYXRlLG1pbl9iaXRyYXRlOmUubG93X3N0cmVhbV91cGxpbmsuYml0cmF0ZXx8MH0pfWlzUDJQRGlzY29ubmVjdGVkKCl7aWYodGhpcy5zZW5kQ29ubmVjdGlvbiYmdGhpcy5yZWN2Q29ubmVjdGlvbil7Y29uc3QgZT10aGlzLnNlbmRDb25uZWN0aW9uLnBlZXJDb25uZWN0aW9uU3RhdGUsdD10aGlzLnJlY3ZDb25uZWN0aW9uLnBlZXJDb25uZWN0aW9uU3RhdGU7cmV0dXJuXCJjb25uZWN0ZWRcIiE9PWUmJlwiY29ubmVjdGVkXCIhPT10fXJldHVybiEwfWFzeW5jIHRyeVRvVW5tdXRlQXVkaW8oZSl7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0KyspaWYoZVt0XWluc3RhbmNlb2YgVE0pe2NvbnN0IGk9dGhpcy5maWx0ZXJUb2JlVW5tdXRlZFRyYWNrcyhlW3RdKTtpZigwPT09aS5sZW5ndGgpY29udGludWU7Y29uc3Qgbj10aGlzLmNyZWF0ZVVubXV0ZU1lc3NhZ2UoaSk7cmV0dXJuIHZvaWQgYXdhaXQgJHkodGhpcyxfTy5SZXF1ZXN0VW5tdXRlTG9jYWwsbil9fWJpbmRTdGF0c1VwbG9hZGVyRXZlbnRzKCl7dGhpcy5zdGF0c1VwbG9hZGVyLnJlcXVlc3RTdGF0cz1lPT50aGlzLmdldFN0YXRzKGUpLHRoaXMuc3RhdHNVcGxvYWRlci5yZXF1ZXN0TG9jYWxNZWRpYT0oKT0+QXJyYXkuZnJvbSh0aGlzLmxvY2FsVHJhY2tNYXAuZW50cmllcygpKS5maWx0ZXIoKGU9PntsZXRbLHtzc3Jjczp0fV09ZTtyZXR1cm4hIXR9KSksdGhpcy5zdGF0c1VwbG9hZGVyLnJlcXVlc3RSZW1vdGVNZWRpYT0oKT0+QXJyYXkuZnJvbSh0aGlzLnJlbW90ZVVzZXJNYXAuZW50cmllcygpKSx0aGlzLnN0YXRzVXBsb2FkZXIucmVxdWVzdFZpZGVvSXNSZWFkeT1lPT57dmFyIHQ7cmV0dXJuIShudWxsPT09KHQ9dGhpcy5yZWN2Q29ubmVjdGlvbil8fHZvaWQgMD09PXR8fCF0LmdldFJlbW90ZVZpZGVvSXNSZWFkeShlKSl9LHRoaXMuc3RhdHNVcGxvYWRlci5yZXF1ZXN0VXBsb2FkPShlLHQpPT50aGlzLmVtaXQoX08uUmVxdWVzdFVwbG9hZCxlLHQpLHRoaXMuc3RhdHNVcGxvYWRlci5yZXF1ZXN0VXBsb2FkU3RhdHM9ZT0+dGhpcy5lbWl0KF9PLlJlcXVlc3RVcGxvYWRTdGF0cyxlKSx0aGlzLnN0YXRzVXBsb2FkZXIucmVxdWVzdEFsbFRyYWNrcz0oKT0+dGhpcy5nZXRBbGxUcmFja3MoKX11bmJpbmRTdGF0c1VwbG9hZGVyRXZlbnRzKCl7dGhpcy5zdGF0c1VwbG9hZGVyLnJlcXVlc3RTdGF0cz12b2lkIDAsdGhpcy5zdGF0c1VwbG9hZGVyLnJlcXVlc3RMb2NhbE1lZGlhPXZvaWQgMCx0aGlzLnN0YXRzVXBsb2FkZXIucmVxdWVzdFJlbW90ZU1lZGlhPXZvaWQgMCx0aGlzLnN0YXRzVXBsb2FkZXIucmVxdWVzdFZpZGVvSXNSZWFkeT12b2lkIDB9YXN5bmMgcmVxdWVzdFJlY29ubmVjdCgpe3RoaXMuZHRsc0ZhaWxlZENvdW50Kz0xLGF3YWl0IG1BKExBKHRoaXMuZHRsc0ZhaWxlZENvdW50LFBBKSksdGhpcy5lbWl0KF9PLlJlcXVlc3RSZWNvbm5lY3QpfWFzeW5jIHJlY29ubmVjdFAyUCgpe31jYW5QdWJsaXNoTG93U3RyZWFtKCl7cmV0dXJuIHRoaXMubG9jYWxUcmFja01hcC5oYXMoaE8uTG9jYWxWaWRlb1RyYWNrKXx8dGhpcy5wZW5kaW5nTG9jYWxUcmFja3Muc29tZSgoZT0+ZSBpbnN0YW5jZW9mIGFVKSl9dGhyb3dJZlRyYWNrVHlwZU5vdE1hdGNoKGUpe2lmKGUuZmlsdGVyKChlPT5lIGluc3RhbmNlb2YgYVUpKS5sZW5ndGg+MSl0aHJvdyBuZXcgQ3koUnkuQ0FOX05PVF9QVUJMSVNIX01VTFRJUExFX1ZJREVPX1RSQUNLUyk7aWYoZS5maWx0ZXIoKGU9PmUgaW5zdGFuY2VvZiBUTSkpLmxlbmd0aD4xJiYoZS5zb21lKChlPT5lIGluc3RhbmNlb2YgVE0mJmUuX2J5cGFzc1dlYkF1ZGlvKSl8fCFaUCgpLndlYkF1ZGlvTWVkaWFTdHJlYW1EZXN0KSl0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcImNhbm5vdCBwdWJsaXNoIG11bHRpcGxlIHRyYWNrcyB3aGljaCBvbmUgb2YgdGhlbSBjb25maWd1cmVkIHdpdGggYnlwYXNzV2ViQXVkaW8gb3IgeW91ciBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBNZWRpYVN0cmVhbURlc3ROb2RlXCIpO2Zvcihjb25zdCB0IG9mIGUpe2lmKHQgaW5zdGFuY2VvZiBhVSYmdGhpcy5wZW5kaW5nTG9jYWxUcmFja3Muc29tZSgoZT0+ZSBpbnN0YW5jZW9mIGFVKSkpdGhyb3cgbmV3IEN5KFJ5LkNBTl9OT1RfUFVCTElTSF9NVUxUSVBMRV9WSURFT19UUkFDS1MpO2lmKHQgaW5zdGFuY2VvZiBUTSYmdGhpcy5wZW5kaW5nTG9jYWxUcmFja3Muc29tZSgoZT0+ZSBpbnN0YW5jZW9mIFRNKSkmJighWlAoKS53ZWJBdWRpb01lZGlhU3RyZWFtRGVzdHx8dC5fYnlwYXNzV2ViQXVkaW98fHRoaXMucGVuZGluZ0xvY2FsVHJhY2tzLnNvbWUoKGU9PmUgaW5zdGFuY2VvZiBUTSYmZS5fYnlwYXNzV2ViQXVkaW8pKSkpdGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQsXCJjYW5ub3QgcHVibGlzaCBtdWx0aXBsZSB0cmFja3Mgd2hpY2ggb25lIG9mIHRoZW0gY29uZmlndXJlZCB3aXRoIGJ5cGFzc1dlYkF1ZGlvIG9yIHlvdXIgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgTWVkaWFTdHJlYW1EZXN0Tm9kZVwiKX19Z2V0TG93VmlkZW9UcmFjayhlLHQpe2NvbnN0IGk9IVhBKFwiRElTQUJMRV9EVUFMX1NUUkVBTV9VU0VfRU5DT0RJTkdcIikmJlpQKCkuc3VwcG9ydER1YWxTdHJlYW1FbmNvZGluZyxuPUFGKEFGKHt9LHt3aWR0aDoxNjAsaGVpZ2h0OjEyMCxmcmFtZXJhdGU6MTUsYml0cmF0ZTo1MH0pLHQpO2xldCByO3I9aT9lLl9tZWRpYVN0cmVhbVRyYWNrLmNsb25lKCk6S1YoZSxuKTtjb25zdCBvPVRBKDgsXCJ0cmFjay1sb3ctXCIpLHM9bmV3IGFVKHIsQUYoQUYoe30saSYme3NjYWxlUmVzb2x1dGlvbkRvd25CeTppTihuLGUpfSkse30se2ZyYW1lUmF0ZTpuLmZyYW1lcmF0ZSxiaXRyYXRlTWF4Om4uYml0cmF0ZSxiaXRyYXRlTWluOm4uYml0cmF0ZX0pLHZvaWQgMCx2b2lkIDAsbyk7cmV0dXJuIHMub24oUkwuVFJBTlNDRUlWRVJfVVBEQVRFRCwodD0+e2UuX3VwZGF0ZVJ0cFRyYW5zY2VpdmVyKHQsVEwuTE9XX1NUUkVBTSl9KSkscy5faGludHMucHVzaChtTC5MT1dfU1RSRUFNKSxlLmFkZExpc3RlbmVyKGZMLk5FRURfQ0xPU0UsKCgpPT57cy5jbG9zZSgpfSkpLHN9YXN5bmMgZ2xvYmFsTG9jaygpe3JldHVybiB0aGlzLnJlY3ZNdXRleC5sb2NrKFwiRnJvbSBQMlBDaGFubmVsMi5nbG9iYWxMb2NrXCIpfXJlcG9ydFZpZGVvRmlyc3RGcmFtZURlY29kZWQoZSx0LGksbil7dmFyIHI7Y29uc3Qgbz1BcnJheS5mcm9tKGRfKHI9dGhpcy5yZW1vdGVVc2VyTWFwKS5jYWxsKHIpKS5maW5kKCh0PT50Ll92aWRlb1NTUkM9PT1lKSk7aWYobyl7bnx8dGhpcy5zdG9yZS5zdWJzY3JpYmUoby51aWQsXCJ2aWRlb1wiLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCxEYXRlLm5vdygpKTtjb25zdCByPXRoaXMuc3RvcmUua2V5TWV0cmljcyxzPXIuc3Vic2NyaWJlLmZpbmQoKGU9PmUudXNlcklkPT09by51aWQmJlwidmlkZW9cIj09PWUudHlwZSkpO3ZiLmZpcnN0UmVtb3RlVmlkZW9EZWNvZGUodGhpcy5zdG9yZS5zZXNzaW9uSWQsZ2IuRklSU1RfVklERU9fREVDT0RFLFJiLkZJUlNUX1ZJREVPX0RFQ09ERSx7cGVlcjpvLl91aW50aWQsdmlkZW93aWR0aDp0LHZpZGVvaGVpZ2h0Omksc3Vic2NyaWJlRWxhcHNlOnJWLm1lYXN1cmVGcm9tU3Vic2NyaWJlU3RhcnQodGhpcy5zdG9yZS5jbGllbnRJZCxlKSxzdWJzY3JpYmVSZXF1ZXN0aWQ6ZSxwMnBpZDp0aGlzLnN0b3JlLnAycElkLGFwRW5kOnIucmVxdWVzdEFQRW5kfHwwLGFwU3RhcnQ6ci5yZXF1ZXN0QVBTdGFydHx8MCxqb2luR3dFbmQ6ci5qb2luR2F0ZXdheUVuZHx8MCxqb2luR3dTdGFydDpyLmpvaW5HYXRld2F5U3RhcnR8fDAscGNFbmQ6ci5wZWVyQ29ubmVjdGlvbkVuZHx8MCxwY1N0YXJ0OnIucGVlckNvbm5lY3Rpb25TdGFydHx8MCxzdWJzY3JpYmVyRW5kOihudWxsPT1zP3ZvaWQgMDpzLnN1YnNjcmliZUVuZCl8fDAsc3Vic2NyaWJlclN0YXJ0OihudWxsPT1zP3ZvaWQgMDpzLnN1YnNjcmliZVN0YXJ0KXx8MCx2aWRlb0FkZE5vdGlmeToobnVsbD09cz92b2lkIDA6cy5zdHJlYW1BZGRlZCl8fDAsc3RhdGU6bj8xOjB9KX19YXN5bmMgcmVtb3RlTWVkaWFTc3JjQ2hhbmdlZChlLHQsaSl7aWYoIXRoaXMucmVjdkNvbm5lY3Rpb24pcmV0dXJuITE7Y29uc3Qgbj10aGlzLnJlbW90ZVVzZXJNYXAuZ2V0KGUpO2lmKCFuKXJldHVybiExO2NvbnN0IHI9bi5nZXQodCk7aWYoIXIpcmV0dXJuITE7Y29uc3Qgbz1hd2FpdCB0aGlzLnJlY3ZDb25uZWN0aW9uLmdldFJlbW90ZVNTUkMocik7cmV0dXJuIHZvaWQgMCE9PW8mJm8hPT1pfWlzUHJlU3ViU2NyaWJlKGUpe3JldHVybiExfWFzeW5jIHB1Ymxpc2hEYXRhQ2hhbm5lbChlKXt0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCl9YXN5bmMgdW5wdWJsaXNoRGF0YUNoYW5uZWwoZSl7dGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQpfWFzeW5jIHN1YnNjcmliZURhdGFDaGFubmVsKGUsdCl7dGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQpfWFzeW5jIHVuc3Vic2NyaWJlRGF0YUNoYW5uZWwoZSx0KXt0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCl9aGFzUGVuZGluZ1JlbW90ZURhdGFDaGFubmVsKGUsdCl7dGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQpfXNldFBlbmRpbmdSZW1vdGVEYXRhQ2hhbm5lbChlLHQpe3Rocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVEKX1hc3luYyBwcmVDb25uZWN0KGUpe3Rocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVEKX1nZXRFc3RhYmxpc2hQYXJhbXMoKXt0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCl9YXN5bmMgcmVTdWJzY3JpYmUoZSl7dGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQpfWFzeW5jIHVwZGF0ZVZpZGVvU3RyZWFtUGFyYW1ldGVyKGUsdCl7dGhyb3cgbmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQpfXVuYmluZFJ0cFRyYW5zY2VpdmVyKCl7MCE9PXRoaXMubG9jYWxUcmFja01hcC5zaXplJiZBcnJheS5mcm9tKHRoaXMubG9jYWxUcmFja01hcC5lbnRyaWVzKCkpLmZvckVhY2goKGU9PntsZXRbdCx7dHJhY2s6aX1dPWU7dD09PWhPLkxvY2FsVmlkZW9Mb3dUcmFjaz9pLl91cGRhdGVSdHBUcmFuc2NlaXZlcih2b2lkIDAsVEwuTE9XX1NUUkVBTSk6aS5fdXBkYXRlUnRwVHJhbnNjZWl2ZXIodm9pZCAwKX0pKX19LEN3KHZGLnByb3RvdHlwZSxcInAycENvbm5lY3RcIixbcEZdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodkYucHJvdG90eXBlLFwicDJwQ29ubmVjdFwiKSx2Ri5wcm90b3R5cGUpLEN3KHZGLnByb3RvdHlwZSxcInVucHVibGlzaFwiLFtfRl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih2Ri5wcm90b3R5cGUsXCJ1bnB1Ymxpc2hcIiksdkYucHJvdG90eXBlKSxDdyh2Ri5wcm90b3R5cGUsXCJ1bnB1Ymxpc2hMb3dTdHJlYW1cIixbRUZdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodkYucHJvdG90eXBlLFwidW5wdWJsaXNoTG93U3RyZWFtXCIpLHZGLnByb3RvdHlwZSksQ3codkYucHJvdG90eXBlLFwic3Vic2NyaWJlXCIsW2ZGXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHZGLnByb3RvdHlwZSxcInN1YnNjcmliZVwiKSx2Ri5wcm90b3R5cGUpLEN3KHZGLnByb3RvdHlwZSxcIm1vY2tTdWJzY3JpYmVcIixbbUZdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodkYucHJvdG90eXBlLFwibW9ja1N1YnNjcmliZVwiKSx2Ri5wcm90b3R5cGUpLEN3KHZGLnByb3RvdHlwZSxcInVuc3Vic2NyaWJlXCIsW1RGXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHZGLnByb3RvdHlwZSxcInVuc3Vic2NyaWJlXCIpLHZGLnByb3RvdHlwZSksQ3codkYucHJvdG90eXBlLFwibXV0ZVJlbW90ZVwiLFtTRl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih2Ri5wcm90b3R5cGUsXCJtdXRlUmVtb3RlXCIpLHZGLnByb3RvdHlwZSksQ3codkYucHJvdG90eXBlLFwidW5tdXRlUmVtb3RlXCIsW2dGXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHZGLnByb3RvdHlwZSxcInVubXV0ZVJlbW90ZVwiKSx2Ri5wcm90b3R5cGUpLEN3KHZGLnByb3RvdHlwZSxcImhhc1JlbW90ZU1lZGlhV2l0aExvY2tcIixbUkZdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodkYucHJvdG90eXBlLFwiaGFzUmVtb3RlTWVkaWFXaXRoTG9ja1wiKSx2Ri5wcm90b3R5cGUpLEN3KHZGLnByb3RvdHlwZSxcImRpc2Nvbm5lY3RGb3JSZWNvbm5lY3RcIixbQ0ZdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodkYucHJvdG90eXBlLFwiZGlzY29ubmVjdEZvclJlY29ubmVjdFwiKSx2Ri5wcm90b3R5cGUpLEN3KHZGLnByb3RvdHlwZSxcInJlbW90ZU1lZGlhU3NyY0NoYW5nZWRcIixbSUZdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodkYucHJvdG90eXBlLFwicmVtb3RlTWVkaWFTc3JjQ2hhbmdlZFwiKSx2Ri5wcm90b3R5cGUpLHZGKTtmdW5jdGlvbiB3RihlKXtyZXR1cm4gZnVuY3Rpb24odCxpLG4pe2NvbnN0IHI9dFtpXTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiByKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCB1c2UgbXV0ZXggb24gb2JqZWN0IHByb3BlcnR5LlwiKTtyZXR1cm4gbi52YWx1ZT1hc3luYyBmdW5jdGlvbigpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KHQpLG89MDtvPHQ7bysrKW5bb109YXJndW1lbnRzW29dO3N3aXRjaChlKXtjYXNlIGRGLlNFTkRfT05MWTp7Y29uc3QgZT1hd2FpdCB0aGlzLnNlbmRNdXRleC5sb2NrKFwiRnJvbSBQMlBDaGFubmVsMi5cIi5jb25jYXQoaSkpO3RyeXtyZXR1cm4gYXdhaXQgci5hcHBseSh0aGlzLG4pfWZpbmFsbHl7ZSgpfX1jYXNlIGRGLlJFQ0VJVkVfT05MWTp7Y29uc3QgZT1hd2FpdCB0aGlzLnJlY3ZNdXRleC5sb2NrKFwiRnJvbSBQMlBDaGFubmVsMi5cIi5jb25jYXQoaSkpO3RyeXtyZXR1cm4gYXdhaXQgci5hcHBseSh0aGlzLG4pfWZpbmFsbHl7ZSgpfX1kZWZhdWx0Ontjb25zdCBlPWF3YWl0IHRoaXMuc2VuZE11dGV4LmxvY2soXCJGcm9tIFAyUENoYW5uZWwyLlwiLmNvbmNhdChpKSksdD1hd2FpdCB0aGlzLnJlY3ZNdXRleC5sb2NrKFwiRnJvbSBQMlBDaGFubmVsMi5cIi5jb25jYXQoaSkpO3RyeXtyZXR1cm4gYXdhaXQgci5hcHBseSh0aGlzLG4pfWZpbmFsbHl7ZSgpLHQoKX19fX0sbn19ZnVuY3Rpb24gT0YoZSx0KXt2YXIgaT1PYmplY3Qua2V5cyhlKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgbj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO3QmJihuPW4uZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHQpLmVudW1lcmFibGV9KSkpLGkucHVzaC5hcHBseShpLG4pfXJldHVybiBpfWZ1bmN0aW9uIE5GKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBpPW51bGwhPWFyZ3VtZW50c1t0XT9hcmd1bWVudHNbdF06e307dCUyP09GKE9iamVjdChpKSwhMCkuZm9yRWFjaCgoZnVuY3Rpb24odCl7RmcoZSx0LGlbdF0pfSkpOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoaSkpOk9GKE9iamVjdChpKSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGksdCkpfSkpfXJldHVybiBlfWNsYXNzIERGe2NvbnN0cnVjdG9yKGUpe0ZnKHRoaXMsXCJzdG9yZVwiLHZvaWQgMCksRmcodGhpcyxcIm9uU3RhdHNFeGNlcHRpb25cIix2b2lkIDApLEZnKHRoaXMsXCJvblVwbG9hZFB1Ymxpc2hEdXJhdGlvblwiLHZvaWQgMCksRmcodGhpcyxcIm9uU3RhdHNDaGFuZ2VkXCIsdm9pZCAwKSxGZyh0aGlzLFwibG9jYWxTdGF0c1wiLG5ldyBNYXApLEZnKHRoaXMsXCJyZW1vdGVTdGF0c1wiLG5ldyBNYXApLEZnKHRoaXMsXCJ1cGRhdGVTdGF0c0ludGVydmFsXCIsdm9pZCAwKSxGZyh0aGlzLFwidHJhZmZpY1N0YXRzXCIsdm9pZCAwKSxGZyh0aGlzLFwidHJhZmZpY1N0YXRzUGVlckxpc3RcIixbXSksRmcodGhpcyxcInVwbGlua1N0YXRzXCIsdm9pZCAwKSxGZyh0aGlzLFwiZXhjZXB0aW9uTW9uaXRvclwiLHZvaWQgMCksRmcodGhpcyxcInAycENoYW5uZWxcIix2b2lkIDApLEZnKHRoaXMsXCJzY2FsYWJpbGl0eU1vZGVcIixJdy5MMVQxKSxGZyh0aGlzLFwidXBkYXRlU3RhdHNcIiwoKCk9Pnt0aGlzLnAycENoYW5uZWwmJih0aGlzLnVwZGF0ZVJlbW90ZVN0YXRzKHRoaXMucDJwQ2hhbm5lbCksdGhpcy51cGRhdGVMb2NhbFN0YXRzKHRoaXMucDJwQ2hhbm5lbCkpfSkpLHRoaXMuc3RvcmU9ZSx0aGlzLmV4Y2VwdGlvbk1vbml0b3I9bmV3IGlWLHRoaXMuZXhjZXB0aW9uTW9uaXRvci5vbihcImV4Y2VwdGlvblwiLCgoZSx0LGkpPT57dGhpcy5vblN0YXRzRXhjZXB0aW9uJiZ0aGlzLm9uU3RhdHNFeGNlcHRpb24oZSx0LGkpfSkpfXN0YXJ0VXBkYXRlU3RhdHMoKXt0aGlzLnVwZGF0ZVN0YXRzSW50ZXJ2YWx8fCh0aGlzLnVwZGF0ZVN0YXRzSW50ZXJ2YWw9d2luZG93LnNldEludGVydmFsKHRoaXMudXBkYXRlU3RhdHMsMWUzKSl9c3RvcFVwZGF0ZVN0YXRzKCl7dGhpcy51cGRhdGVTdGF0c0ludGVydmFsJiYod2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy51cGRhdGVTdGF0c0ludGVydmFsKSx0aGlzLnVwZGF0ZVN0YXRzSW50ZXJ2YWw9dm9pZCAwKX1yZXNldCgpe3RoaXMubG9jYWxTdGF0cz1uZXcgTWFwLHRoaXMucmVtb3RlU3RhdHM9bmV3IE1hcCx0aGlzLnRyYWZmaWNTdGF0cz12b2lkIDAsdGhpcy50cmFmZmljU3RhdHNQZWVyTGlzdD1bXSx0aGlzLnVwbGlua1N0YXRzPXZvaWQgMH1nZXRMb2NhbEF1ZGlvVHJhY2tTdGF0cygpe3JldHVybiB0aGlzLmxvY2FsU3RhdHMuZ2V0KGhPLkxvY2FsQXVkaW9UcmFjayl8fE5GKHt9LEFMKX1nZXRMb2NhbFZpZGVvVHJhY2tTdGF0cygpe3JldHVybiB0aGlzLmxvY2FsU3RhdHMuZ2V0KGhPLkxvY2FsVmlkZW9UcmFjayl8fE5GKHt9LGJMKX1nZXRSZW1vdGVBdWRpb1RyYWNrU3RhdHMoZSl7Y29uc3QgdD0oZSx0KT0+e2lmKCF0aGlzLnRyYWZmaWNTdGF0cylyZXR1cm4gdDtjb25zdCBpPXRoaXMudHJhZmZpY1N0YXRzLnBlZXJfZGVsYXkuZmluZCgodD0+dC5wZWVyX3VpZD09PWUpKTtyZXR1cm4gaSYmKHQucHVibGlzaER1cmF0aW9uPWkuQl9wcGFkKyhEYXRlLm5vdygpLXRoaXMudHJhZmZpY1N0YXRzLnRpbWVzdGFtcCkpLHR9LGk9e307aWYoZSl7dmFyIG47Y29uc3Qgcj1udWxsPT09KG49dGhpcy5yZW1vdGVTdGF0cy5nZXQoZSkpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmF1ZGlvU3RhdHM7ciYmKGlbZV09dChlLHIpKX1lbHNlIEFycmF5LmZyb20odGhpcy5yZW1vdGVTdGF0cy5lbnRyaWVzKCkpLmZvckVhY2goKGU9PntsZXRbbix7YXVkaW9TdGF0czpyfV09ZTtyJiYoaVtuXT10KG4scikpfSkpO3JldHVybiBpfWdldFJlbW90ZU5ldHdvcmtRdWFsaXR5U3RhdHMoZSl7Y29uc3QgdD17fTtpZihlKXt2YXIgaTtjb25zdCBuPW51bGw9PT0oaT10aGlzLnJlbW90ZVN0YXRzLmdldChlKSl8fHZvaWQgMD09PWk/dm9pZCAwOmkubmV0d29ya1N0YXRzO24mJih0W2VdPW4pfWVsc2UgQXJyYXkuZnJvbSh0aGlzLnJlbW90ZVN0YXRzLmVudHJpZXMoKSkuZm9yRWFjaCgoZT0+e2xldFtpLHtuZXR3b3JrU3RhdHM6bn1dPWU7biYmKHRbaV09bil9KSk7cmV0dXJuIHR9Z2V0UmVtb3RlVmlkZW9UcmFja1N0YXRzKGUpe2NvbnN0IHQ9KGUsdCk9PntpZighdGhpcy50cmFmZmljU3RhdHMpcmV0dXJuIHQ7Y29uc3QgaT10aGlzLnRyYWZmaWNTdGF0cy5wZWVyX2RlbGF5LmZpbmQoKHQ9PnQucGVlcl91aWQ9PT1lKSk7cmV0dXJuIGkmJih0LnB1Ymxpc2hEdXJhdGlvbj1pLkJfcHB2ZCsoRGF0ZS5ub3coKS10aGlzLnRyYWZmaWNTdGF0cy50aW1lc3RhbXApKSx0fSxpPXt9O2lmKGUpe3ZhciBuO2NvbnN0IHI9bnVsbD09PShuPXRoaXMucmVtb3RlU3RhdHMuZ2V0KGUpKXx8dm9pZCAwPT09bj92b2lkIDA6bi52aWRlb1N0YXRzO3ImJihpW2VdPXQoZSxyKSl9ZWxzZSBBcnJheS5mcm9tKHRoaXMucmVtb3RlU3RhdHMuZW50cmllcygpKS5mb3JFYWNoKChlPT57bGV0W24se3ZpZGVvU3RhdHM6cn1dPWU7ciYmKGlbbl09dChuLHIpKX0pKTtyZXR1cm4gaX1nZXRSVENTdGF0cygpe2xldCBlPTAsdD0wLGk9MCxuPTA7Y29uc3Qgcj10aGlzLmxvY2FsU3RhdHMuZ2V0KGhPLkxvY2FsQXVkaW9UcmFjayk7ciYmKGUrPXIuc2VuZEJ5dGVzLHQrPXIuc2VuZEJpdHJhdGUpO2NvbnN0IG89dGhpcy5sb2NhbFN0YXRzLmdldChoTy5Mb2NhbFZpZGVvVHJhY2spO28mJihlKz1vLnNlbmRCeXRlcyx0Kz1vLnNlbmRCaXRyYXRlKTtjb25zdCBzPXRoaXMubG9jYWxTdGF0cy5nZXQoaE8uTG9jYWxWaWRlb0xvd1RyYWNrKTtzJiYoZSs9cy5zZW5kQnl0ZXMsdCs9cy5zZW5kQml0cmF0ZSksdGhpcy5yZW1vdGVTdGF0cy5mb3JFYWNoKChlPT57bGV0e2F1ZGlvU3RhdHM6dCx2aWRlb1N0YXRzOnJ9PWU7dCYmKGkrPXQucmVjZWl2ZUJ5dGVzLG4rPXQucmVjZWl2ZUJpdHJhdGUpLHImJihpKz1yLnJlY2VpdmVCeXRlcyxuKz1yLnJlY2VpdmVCaXRyYXRlKX0pKTtsZXQgYT0xO3JldHVybiB0aGlzLnRyYWZmaWNTdGF0cyYmKGErPXRoaXMudHJhZmZpY1N0YXRzLnBlZXJfZGVsYXkubGVuZ3RoKSx7RHVyYXRpb246MCxVc2VyQ291bnQ6YSxTZW5kQml0cmF0ZTp0LFNlbmRCeXRlczplLFJlY3ZCeXRlczppLFJlY3ZCaXRyYXRlOm4sT3V0Z29pbmdBdmFpbGFibGVCYW5kd2lkdGg6dGhpcy51cGxpbmtTdGF0cz90aGlzLnVwbGlua1N0YXRzLkJfdWFiLzFlMzowLFJUVDp0aGlzLnRyYWZmaWNTdGF0cz8yKnRoaXMudHJhZmZpY1N0YXRzLkJfYWNkOjB9fWFkZExvY2FsU3RhdHMoZSl7dGhpcy5sb2NhbFN0YXRzLnNldChlLHZvaWQgMCl9cmVtb3ZlTG9jYWxTdGF0cyhlKXtlP3RoaXMubG9jYWxTdGF0cy5kZWxldGUoZSk6dGhpcy5sb2NhbFN0YXRzLmNsZWFyKCl9YWRkUmVtb3RlU3RhdHMoZSl7dGhpcy5yZW1vdGVTdGF0cy5zZXQoZSx7fSl9cmVtb3ZlUmVtb3RlU3RhdHMoZSl7ZT90aGlzLnJlbW90ZVN0YXRzLmRlbGV0ZShlKTp0aGlzLnJlbW90ZVN0YXRzLmNsZWFyKCl9YWRkUDJQQ2hhbm5lbChlKXt0aGlzLnAycENoYW5uZWw9ZX11cGRhdGVUcmFmZmljU3RhdHMoZSl7ZS5wZWVyX2RlbGF5PWUucGVlcl9kZWxheS5maWx0ZXIoKGU9PnZvaWQgMCE9PWUuQl9wcGFkfHx2b2lkIDAhPT1lLkJfcHB2ZCkpO2UucGVlcl9kZWxheS5maWx0ZXIoKGU9Pi0xPT09dGhpcy50cmFmZmljU3RhdHNQZWVyTGlzdC5pbmRleE9mKGUucGVlcl91aWQpKSkuZm9yRWFjaCgoZT0+e3ZhciB0O2NvbnN0IGk9bnVsbD09PSh0PXRoaXMucDJwQ2hhbm5lbCl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuZ2V0UmVtb3RlTWVkaWEoZS5wZWVyX3VpZCksbj1udWxsIT1pJiZpLnZpZGVvU1NSQz9yVi5tZWFzdXJlRnJvbVN1YnNjcmliZVN0YXJ0KHRoaXMuc3RvcmUuY2xpZW50SWQsaS52aWRlb1NTUkMpOjAscj1udWxsIT1pJiZpLmF1ZGlvU1NSQz9yVi5tZWFzdXJlRnJvbVN1YnNjcmliZVN0YXJ0KHRoaXMuc3RvcmUuY2xpZW50SWQsaS5hdWRpb1NTUkMpOjA7dm9pZCAwIT09ZS5CX3BwYWQmJnZvaWQgMCE9PWUuQl9wcHZkJiYodGhpcy5vblVwbG9hZFB1Ymxpc2hEdXJhdGlvbiYmdGhpcy5vblVwbG9hZFB1Ymxpc2hEdXJhdGlvbihlLnBlZXJfdWlkLGUuQl9wcGFkLGUuQl9wcHZkLG4+cj9uOnIpLHRoaXMudHJhZmZpY1N0YXRzUGVlckxpc3QucHVzaChlLnBlZXJfdWlkKSl9KSksdGhpcy50cmFmZmljU3RhdHM9ZX11cGRhdGVVcGxpbmtTdGF0cyhlKXt0aGlzLnVwbGlua1N0YXRzJiZ0aGlzLnVwbGlua1N0YXRzLkJfZmlyIT09ZS5CX2ZpciYmZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdOiBQZXJpb2QgZmlyIGNoYW5nZXMgdG8gXCIpLmNvbmNhdChlLkJfZmlyKSksdGhpcy51cGxpbmtTdGF0cz1lfXN0YXRpYyBpc1JlbW90ZVZpZGVvRnJlZXplKGUsdCxpKXtpZighZSlyZXR1cm4hMTtjb25zdCBuPSEhaSYmdC5mcmFtZXNEZWNvZGVGcmVlemVUaW1lPmkuZnJhbWVzRGVjb2RlRnJlZXplVGltZSxyPSFpfHx0LmZyYW1lc0RlY29kZUNvdW50PmkuZnJhbWVzRGVjb2RlQ291bnQ7cmV0dXJuIG58fCFyfXN0YXRpYyBpc1JlbW90ZUF1ZGlvRnJlZXplKGUpe3JldHVybiEhZSYmZS5faXNGcmVlemUoKX1pc0xvY2FsVmlkZW9GcmVlemUoZSl7cmV0dXJuISghZS5pbnB1dEZyYW1lfHwhZS5zZW50RnJhbWUpJiYoZS5pbnB1dEZyYW1lLmZyYW1lUmF0ZT41JiZlLnNlbnRGcmFtZS5mcmFtZVJhdGU8Myl9dXBkYXRlTG9jYWxTdGF0cyhlKXtBcnJheS5mcm9tKHRoaXMubG9jYWxTdGF0cy5lbnRyaWVzKCkpLmZvckVhY2goKHQ9PntsZXRbaSxuXT10O3N3aXRjaChpKXtjYXNlIGhPLkxvY2FsVmlkZW9UcmFjazpjYXNlIGhPLkxvY2FsVmlkZW9Mb3dUcmFjazp7Y29uc3QgdD1uLG89TkYoe30sYkwpLHM9ZS5nZXRTdGF0cygpLGE9ZS5nZXRMb2NhbE1lZGlhKGkpO2lmKHMpe2NvbnN0IGk9cy52aWRlb1NlbmQuZmluZCgoZT0+ZS5zc3JjPT09KG51bGw9PWE/dm9pZCAwOmEuc3NyY3NbMF0uc3NyY0lkKSkpO2lmKGkpe2NvbnN0IG49ZS5nZXRMb2NhbFZpZGVvU2l6ZSgpLHI9ZS5nZXRFbmNvZGVyQ29uZmlnKGhPLkxvY2FsVmlkZW9UcmFjayk7XCJIMjY0XCIhPT1pLmNvZGVjJiZcIkgyNjVcIiE9PWkuY29kZWMmJlwiVlA4XCIhPT1pLmNvZGVjJiZcIlZQOVwiIT09aS5jb2RlYyYmXCJBVjFYXCIhPT1pLmNvZGVjJiZcIkFWMVwiIT09aS5jb2RlY3x8KG8uY29kZWNUeXBlPWkuY29kZWMpLG8uc2VuZEJ5dGVzPWkuYnl0ZXMsby5zZW5kQml0cmF0ZT10PzgqTWF0aC5tYXgoMCxvLnNlbmRCeXRlcy10LnNlbmRCeXRlcyk6MCxpLmlucHV0RnJhbWU/KG8uY2FwdHVyZUZyYW1lUmF0ZT1pLmlucHV0RnJhbWUuZnJhbWVSYXRlLG8uY2FwdHVyZVJlc29sdXRpb25IZWlnaHQ9aS5pbnB1dEZyYW1lLmhlaWdodCxvLmNhcHR1cmVSZXNvbHV0aW9uV2lkdGg9aS5pbnB1dEZyYW1lLndpZHRoKTpuJiYoby5jYXB0dXJlUmVzb2x1dGlvbldpZHRoPW4ud2lkdGgsby5jYXB0dXJlUmVzb2x1dGlvbkhlaWdodD1uLmhlaWdodCksaS5zZW50RnJhbWU/KG8uc2VuZEZyYW1lUmF0ZT1pLnNlbnRGcmFtZS5mcmFtZVJhdGUsby5zZW5kUmVzb2x1dGlvbkhlaWdodD1pLnNlbnRGcmFtZS5oZWlnaHQsby5zZW5kUmVzb2x1dGlvbldpZHRoPWkuc2VudEZyYW1lLndpZHRoKTpuJiYoby5zZW5kUmVzb2x1dGlvbldpZHRoPW4ud2lkdGgsby5zZW5kUmVzb2x1dGlvbkhlaWdodD1uLmhlaWdodCksaS5hdmdFbmNvZGVNcyYmKG8uZW5jb2RlRGVsYXk9aS5hdmdFbmNvZGVNcyksciYmci5iaXRyYXRlTWF4JiYoby50YXJnZXRTZW5kQml0cmF0ZT0xZTMqci5iaXRyYXRlTWF4KSxvLnNlbmRQYWNrZXRzPWkucGFja2V0cyxvLnNlbmRQYWNrZXRzTG9zdD1pLnBhY2tldHNMb3N0LG8uc2VuZEppdHRlck1zPWkuaml0dGVyTXMsby5zZW5kUnR0TXM9aS5ydHRNcyxvLnRvdGFsRHVyYXRpb249dD90LnRvdGFsRHVyYXRpb24rMToxLG8udG90YWxGcmVlemVUaW1lPXQ/dC50b3RhbEZyZWV6ZVRpbWU6MCx0aGlzLmlzTG9jYWxWaWRlb0ZyZWV6ZShpKSYmKG8udG90YWxGcmVlemVUaW1lKz0xKSxpLnNjYWxhYmlsaXR5TW9kZSYmdGhpcy5zY2FsYWJpbGl0eU1vZGUhPT1pLnNjYWxhYmlsaXR5TW9kZSYmKGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXTogVGhlIHNjYWxhYmlsaXR5TW9kZSBvZiB0aGUgdmlkZW8gc2VuZGluZyBzdHJlYW0gaXMgXCIpLmNvbmNhdChpLnNjYWxhYmlsaXR5TW9kZSkpLHRoaXMuc2NhbGFiaWxpdHlNb2RlPWkuc2NhbGFiaWxpdHlNb2RlKX10aGlzLnRyYWZmaWNTdGF0cyYmKG8uY3VycmVudFBhY2tldExvc3NSYXRlPSh0aGlzLnRyYWZmaWNTdGF0cy5CX3B2bHI0fHwwKS8xMDApfXZhciByO2lmKHRoaXMubG9jYWxTdGF0cy5zZXQoaSxvKSwobnVsbD09dD92b2lkIDA6dC5zZW5kUmVzb2x1dGlvbldpZHRoKSE9PW8uc2VuZFJlc29sdXRpb25XaWR0aHx8KG51bGw9PXQ/dm9pZCAwOnQuc2VuZFJlc29sdXRpb25IZWlnaHQpIT09by5zZW5kUmVzb2x1dGlvbkhlaWdodCludWxsPT09KHI9dGhpcy5vblN0YXRzQ2hhbmdlZCl8fHZvaWQgMD09PXJ8fHIuY2FsbCh0aGlzLFwicmVzb2x1dGlvblwiLHt3aWR0aDpvLnNlbmRSZXNvbHV0aW9uV2lkdGgsaGVpZ2h0Om8uc2VuZFJlc29sdXRpb25IZWlnaHR9KTtvJiZhJiZ0aGlzLmV4Y2VwdGlvbk1vbml0b3Iuc2V0TG9jYWxWaWRlb1N0YXRzKHRoaXMuc3RvcmUudWlkLGEudHJhY2ssbyk7YnJlYWt9Y2FzZSBoTy5Mb2NhbEF1ZGlvVHJhY2s6e2NvbnN0IHQ9bixyPU5GKHt9LEFMKSxvPWUuZ2V0U3RhdHMoKSxzPWUuZ2V0TG9jYWxNZWRpYShpKTtpZihvKXtjb25zdCBpPW8uYXVkaW9TZW5kLmZpbmQoKGU9PmUuc3NyYz09PShudWxsPT1zP3ZvaWQgMDpzLnNzcmNzWzBdLnNzcmNJZCkpKTtpZihpKXtpZihcIm9wdXNcIiE9PWkuY29kZWMmJlwiYWFjXCIhPT1pLmNvZGVjJiZcIlBDTVVcIiE9PWkuY29kZWMmJlwiUENNQVwiIT09aS5jb2RlYyYmXCJHNzIyXCIhPT1pLmNvZGVjfHwoci5jb2RlY1R5cGU9aS5jb2RlYyksaS5pbnB1dExldmVsKXIuc2VuZFZvbHVtZUxldmVsPU1hdGgucm91bmQoMzI3NjcqaS5pbnB1dExldmVsKTtlbHNle2NvbnN0IHQ9ZS5nZXRMb2NhbEF1ZGlvVm9sdW1lKCk7dCYmKHIuc2VuZFZvbHVtZUxldmVsPU1hdGgucm91bmQoMzI3NjcqdCkpfXIuc2VuZEJ5dGVzPWkuYnl0ZXMsci5zZW5kUGFja2V0cz1pLnBhY2tldHMsci5zZW5kUGFja2V0c0xvc3Q9aS5wYWNrZXRzTG9zdCxyLnNlbmRKaXR0ZXJNcz1pLmppdHRlck1zLHIuc2VuZFJ0dE1zPWkucnR0TXMsci5zZW5kQml0cmF0ZT10PzgqTWF0aC5tYXgoMCxyLnNlbmRCeXRlcy10LnNlbmRCeXRlcyk6MH19dGhpcy50cmFmZmljU3RhdHMmJihyLmN1cnJlbnRQYWNrZXRMb3NzUmF0ZT0odGhpcy50cmFmZmljU3RhdHMuQl9wYWxyNHx8MCkvMTAwKSx0aGlzLmxvY2FsU3RhdHMuc2V0KGhPLkxvY2FsQXVkaW9UcmFjayxyKSxyJiZzJiZ0aGlzLmV4Y2VwdGlvbk1vbml0b3Iuc2V0TG9jYWxBdWRpb1N0YXRzKHRoaXMuc3RvcmUudWlkLHMudHJhY2sscik7YnJlYWt9fX0pKX11cGRhdGVSZW1vdGVTdGF0cyhlKXtBcnJheS5mcm9tKHRoaXMucmVtb3RlU3RhdHMuZW50cmllcygpKS5mb3JFYWNoKCh0PT57dmFyIGksbjtsZXRbcix7dmlkZW9TdGF0czpvLGF1ZGlvU3RhdHM6cyx2aWRlb1BjU3RhdHM6YX1dPXQ7Y29uc3QgYz1zLGQ9byxsPWEsdT1ORih7fSx3TCksaD1ORih7fSxOTCkscD1ORih7fSxPTCkse2F1ZGlvVHJhY2s6Xyx2aWRlb1RyYWNrOkUsYXVkaW9TU1JDOmYsdmlkZW9TU1JDOm19PWUuZ2V0UmVtb3RlTWVkaWEocik7bGV0IFQ7VD1lIGluc3RhbmNlb2YgYkY/ZS5nZXRTdGF0cyghMCk6ZS5nZXRTdGF0cygpO2NvbnN0IFM9bnVsbD09PShpPVQpfHx2b2lkIDA9PT1pP3ZvaWQgMDppLmF1ZGlvUmVjdi5maW5kKChlPT5lLnNzcmM9PT1mKSksZz1udWxsPT09KG49VCl8fHZvaWQgMD09PW4/dm9pZCAwOm4udmlkZW9SZWN2LmZpbmQoKGU9PmUuc3NyYz09PW0pKSxSPXRoaXMudHJhZmZpY1N0YXRzJiZ0aGlzLnRyYWZmaWNTdGF0cy5wZWVyX2RlbGF5LmZpbmQoKGU9PmUucGVlcl91aWQ9PT1yKSk7aWYoUyYmKFwib3B1c1wiIT09Uy5jb2RlYyYmXCJhYWNcIiE9PVMuY29kZWMmJlwiUENNVVwiIT09Uy5jb2RlYyYmXCJQQ01BXCIhPT1TLmNvZGVjJiZcIkc3MjJcIiE9PVMuY29kZWN8fCh1LmNvZGVjVHlwZT1TLmNvZGVjKSxTLm91dHB1dExldmVsP3UucmVjZWl2ZUxldmVsPU1hdGgucm91bmQoMzI3NjcqUy5vdXRwdXRMZXZlbCk6XyYmKHUucmVjZWl2ZUxldmVsPU1hdGgucm91bmQoMzI3NjcqXy5nZXRWb2x1bWVMZXZlbCgpKSksdS5yZWNlaXZlQnl0ZXM9Uy5ieXRlcyx1LnJlY2VpdmVQYWNrZXRzPVMucGFja2V0cyx1LnJlY2VpdmVQYWNrZXRzTG9zdD1TLnBhY2tldHNMb3N0LHUucmVjZWl2ZVBhY2tldHNEaXNjYXJkZWQ9Uy5wYWNrZXRzRGlzY2FyZGVkLHUucGFja2V0TG9zc1JhdGU9dS5yZWNlaXZlUGFja2V0c0xvc3QvKHUucmVjZWl2ZVBhY2tldHMrdS5yZWNlaXZlUGFja2V0c0xvc3QpLHUucmVjZWl2ZUJpdHJhdGU9Yz84Kk1hdGgubWF4KDAsdS5yZWNlaXZlQnl0ZXMtYy5yZWNlaXZlQnl0ZXMpOjAsdS50b3RhbER1cmF0aW9uPWM/Yy50b3RhbER1cmF0aW9uKzE6MSx1LnRvdGFsRnJlZXplVGltZT1jP2MudG90YWxGcmVlemVUaW1lOjAsdS5mcmVlemVSYXRlPXUudG90YWxGcmVlemVUaW1lL3UudG90YWxEdXJhdGlvbix1LnJlY2VpdmVEZWxheT1TLmppdHRlckJ1ZmZlck1zLHUudG90YWxEdXJhdGlvbj4xMCYmREYuaXNSZW1vdGVBdWRpb0ZyZWV6ZShfKSYmKHUudG90YWxGcmVlemVUaW1lKz0xKSksZyl7XCJIMjY0XCIhPT1nLmNvZGVjJiZcIkgyNjVcIiE9PWcuY29kZWMmJlwiVlA4XCIhPT1nLmNvZGVjJiZcIlZQOVwiIT09Zy5jb2RlYyYmXCJBVjFYXCIhPT1nLmNvZGVjJiZcIkFWMVwiIT09Zy5jb2RlY3x8KGguY29kZWNUeXBlPWcuY29kZWMpLGgucmVjZWl2ZUJ5dGVzPWcuYnl0ZXMsaC5yZWNlaXZlQml0cmF0ZT1kPzgqTWF0aC5tYXgoMCxoLnJlY2VpdmVCeXRlcy1kLnJlY2VpdmVCeXRlcyk6MCxoLmRlY29kZUZyYW1lUmF0ZT1nLmRlY29kZUZyYW1lUmF0ZTwwPzA6Zy5kZWNvZGVGcmFtZVJhdGUsaC5yZW5kZXJGcmFtZVJhdGU9Zy5kZWNvZGVGcmFtZVJhdGU8MD8wOmcuZGVjb2RlRnJhbWVSYXRlLGcub3V0cHV0RnJhbWUmJihoLnJlbmRlckZyYW1lUmF0ZT1nLm91dHB1dEZyYW1lLmZyYW1lUmF0ZSksZy5yZWNlaXZlZEZyYW1lPyhoLnJlY2VpdmVGcmFtZVJhdGU9Zy5yZWNlaXZlZEZyYW1lLmZyYW1lUmF0ZSxoLnJlY2VpdmVSZXNvbHV0aW9uSGVpZ2h0PWcucmVjZWl2ZWRGcmFtZS5oZWlnaHQsaC5yZWNlaXZlUmVzb2x1dGlvbldpZHRoPWcucmVjZWl2ZWRGcmFtZS53aWR0aCk6RSYmKGgucmVjZWl2ZVJlc29sdXRpb25IZWlnaHQ9RS5fdmlkZW9IZWlnaHR8fDAsaC5yZWNlaXZlUmVzb2x1dGlvbldpZHRoPUUuX3ZpZGVvV2lkdGh8fDApLHZvaWQgMCE9PWcuZnJhbWVzUmF0ZUZpcmVmb3gmJihoLnJlY2VpdmVGcmFtZVJhdGU9TWF0aC5yb3VuZChnLmZyYW1lc1JhdGVGaXJlZm94KSksaC5yZWNlaXZlUGFja2V0cz1nLnBhY2tldHMsaC5yZWNlaXZlUGFja2V0c0xvc3Q9Zy5wYWNrZXRzTG9zdCxoLnBhY2tldExvc3NSYXRlPWgucmVjZWl2ZVBhY2tldHNMb3N0LyhoLnJlY2VpdmVQYWNrZXRzK2gucmVjZWl2ZVBhY2tldHNMb3N0KSxoLnRvdGFsRHVyYXRpb249ZD9kLnRvdGFsRHVyYXRpb24rMToxLGgudG90YWxGcmVlemVUaW1lPWQ/ZC50b3RhbEZyZWV6ZVRpbWU6MCxoLnJlY2VpdmVEZWxheT1nLmppdHRlckJ1ZmZlck1zfHwwO2NvbnN0IHQ9ISFtJiZlLmdldFJlbW90ZVZpZGVvSXNSZWFkeShtKTtFJiZ0JiZERi5pc1JlbW90ZVZpZGVvRnJlZXplKEUsZyxsKSYmKGgudG90YWxGcmVlemVUaW1lKz0xKSxoLmZyZWV6ZVJhdGU9aC50b3RhbEZyZWV6ZVRpbWUvaC50b3RhbER1cmF0aW9ufVImJih1LmVuZDJFbmREZWxheT1SLkJfYWQsaC5lbmQyRW5kRGVsYXk9Ui5CX3ZkLHUudHJhbnNwb3J0RGVsYXk9Ui5CX2VkLGgudHJhbnNwb3J0RGVsYXk9Ui5CX2VkLHUuY3VycmVudFBhY2tldExvc3NSYXRlPVIuQl9lYWxyNC8xMDAsaC5jdXJyZW50UGFja2V0TG9zc1JhdGU9Ui5CX2V2bHI0LzEwMCxwLnVwbGlua05ldHdvcmtRdWFsaXR5PVIuQl9wdW5xP1IuQl9wdW5xOjAscC5kb3dubGlua05ldHdvcmtRdWFsaXR5PVIuQl9wZG5xP1IuQl9wZG5xOjApLHRoaXMucmVtb3RlU3RhdHMuc2V0KHIse2F1ZGlvU3RhdHM6dSx2aWRlb1N0YXRzOmgsdmlkZW9QY1N0YXRzOmcsbmV0d29ya1N0YXRzOnB9KSxfJiZ0aGlzLmV4Y2VwdGlvbk1vbml0b3Iuc2V0UmVtb3RlQXVkaW9TdGF0cyhfLHUpLEUmJnRoaXMuZXhjZXB0aW9uTW9uaXRvci5zZXRSZW1vdGVWaWRlb1N0YXRzKEUsaCl9KSl9fWNsYXNzIFBGe2NvbnN0cnVjdG9yKCl7RmcodGhpcyxcImRlc3RDaGFubmVsTWVkaWFJbmZvc1wiLG5ldyBNYXApLEZnKHRoaXMsXCJzcmNDaGFubmVsTWVkaWFJbmZvXCIsdm9pZCAwKX1zZXRTcmNDaGFubmVsSW5mbyhlKXtxdyhlKSx0aGlzLnNyY0NoYW5uZWxNZWRpYUluZm89ZX1hZGREZXN0Q2hhbm5lbEluZm8oZSl7cXcoZSksdGhpcy5kZXN0Q2hhbm5lbE1lZGlhSW5mb3Muc2V0KGUuY2hhbm5lbE5hbWUsZSl9cmVtb3ZlRGVzdENoYW5uZWxJbmZvKGUpe3h3KGUpLHRoaXMuZGVzdENoYW5uZWxNZWRpYUluZm9zLmRlbGV0ZShlKX1nZXRTcmNDaGFubmVsTWVkaWFJbmZvKCl7cmV0dXJuIHRoaXMuc3JjQ2hhbm5lbE1lZGlhSW5mb31nZXREZXN0Q2hhbm5lbE1lZGlhSW5mbygpe3JldHVybiB0aGlzLmRlc3RDaGFubmVsTWVkaWFJbmZvc319ZnVuY3Rpb24gTEYoZSl7aWYoIShlIGluc3RhbmNlb2YgUEYpKXtyZXR1cm4gbmV3IHliKFJ5LklOVkFMSURfUEFSQU1TLFwiQ29uZmlnIHNob3VsZCBiZSBpbnN0YW5jZSBvZiBbQ2hhbm5lbE1lZGlhUmVsYXlDb25maWd1cmF0aW9uXVwiKS50aHJvdygpfWNvbnN0IHQ9ZS5nZXRTcmNDaGFubmVsTWVkaWFJbmZvKCksaT1lLmdldERlc3RDaGFubmVsTWVkaWFJbmZvKCk7aWYoIXQpe3JldHVybiBuZXcgeWIoUnkuSU5WQUxJRF9QQVJBTVMsXCJzcmNDaGFubmVsTWVkaWFJbmZvIHNob3VsZCBub3QgYmUgZW1wdHlcIikudGhyb3coKX1pZigwPT09aS5zaXplKXtyZXR1cm4gbmV3IHliKFJ5LklOVkFMSURfUEFSQU1TLFwiZGVzdENoYW5uZWxNZWRpYUluZm8gc2hvdWxkIG5vdCBiZSBlbXB0eVwiKS50aHJvdygpfX1mdW5jdGlvbiBrRihlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gTUYoZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/a0YoT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6a0YoT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9dmFyIFVGO2Z1bmN0aW9uIHhGKGUsdCl7dmFyIGk9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYobj1uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxpLnB1c2guYXBwbHkoaSxuKX1yZXR1cm4gaX1mdW5jdGlvbiBWRihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgaT1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj94RihPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0ZnKGUsdCxpW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGkpKTp4RihPYmplY3QoaSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLHQpKX0pKX1yZXR1cm4gZX1sZXQgRkY9KFVGPWNsYXNzIGUgZXh0ZW5kcyBjT3tnZXQgcGVlckNvbm5lY3Rpb25TdGF0ZSgpe3JldHVybiB0aGlzLnBlZXJDb25uZWN0aW9uLmNvbm5lY3Rpb25TdGF0ZX1nZXQgaWNlQ29ubmVjdGlvblN0YXRlKCl7cmV0dXJuIHRoaXMucGVlckNvbm5lY3Rpb24uaWNlQ29ubmVjdGlvblN0YXRlfWdldCBjdXJyZW50TG9jYWxEZXNjcmlwdGlvbigpe3JldHVybiB0aGlzLnBlZXJDb25uZWN0aW9uLmN1cnJlbnRMb2NhbERlc2NyaXB0aW9ufWdldCBjdXJyZW50UmVtb3RlRGVzY3JpcHRpb24oKXtyZXR1cm4gdGhpcy5wZWVyQ29ubmVjdGlvbi5jdXJyZW50UmVtb3RlRGVzY3JpcHRpb259Z2V0IGxvY2FsQ29kZWNzKCl7cmV0dXJuWy4uLm5ldyBTZXQodGhpcy5sb2NhbENhcGFiaWxpdGllcyYmdGhpcy5sb2NhbENhcGFiaWxpdGllcy52aWRlb0NvZGVjcy5tYXAoKGU9PmUucnRwTWFwJiZlLnJ0cE1hcC5lbmNvZGluZ05hbWUudG9Mb3dlckNhc2UoKXx8XCJcIikpLmZpbHRlcigoZT0+e3ZhciB0O3JldHVybiBEbih0PU9iamVjdC5rZXlzKGViKSkuY2FsbCh0LGUpfSkpKV19Y29uc3RydWN0b3IodCxpKXtzdXBlcih0LGkpLEZnKHRoaXMsXCJzdG9yZVwiLHZvaWQgMCksRmcodGhpcyxcInBlZXJDb25uZWN0aW9uXCIsdm9pZCAwKSxGZyh0aGlzLFwicmVtb3RlU0RQXCIsdm9pZCAwKSxGZyh0aGlzLFwiaW5pdGlhbE9mZmVyXCIsdm9pZCAwKSxGZyh0aGlzLFwic3RhdHNGaWx0ZXJcIix2b2lkIDApLEZnKHRoaXMsXCJ1c2VSVFhcIiwhMSksRmcodGhpcyxcImxvY2FsQ2FwYWJpbGl0aWVzXCIsdm9pZCAwKSxGZyh0aGlzLFwibG9jYWxDYW5kaWRhdGVDb3VudFwiLDApLEZnKHRoaXMsXCJhbGxDYW5kaWRhdGVzUmVjZWl2ZWRcIiwhMSksRmcodGhpcyxcImVzdGFibGlzaFByb21pc2VcIix2b2lkIDApLEZnKHRoaXMsXCJtdXRleFwiLG5ldyBOQShcIlAyUENvbm5lY3Rpb24tbXV0ZXhcIikpLHRoaXMuc3RvcmU9aSx0aGlzLnBlZXJDb25uZWN0aW9uPW5ldyBSVENQZWVyQ29ubmVjdGlvbihlLnJlc29sdmVQQ0NvbmZpZ3VyYXRpb24odCkse29wdGlvbmFsOlt7Z29vZ0RzY3A6ITB9XX0pLHRoaXMuc3RhdHNGaWx0ZXI9eFYodGhpcy5wZWVyQ29ubmVjdGlvbixYQShcIlNUQVRTX1VQREFURV9JTlRFUlZBTFwiKSx2b2lkIDAsWnYoKT8xMjAwOnZvaWQgMCksdGhpcy5iaW5kUENFdmVudHMoKSx0aGlzLmJpbmRTdGF0c0V2ZW50cygpLHRoaXMuc3RvcmUucDJwSWQ9dGhpcy5zdG9yZS5wMnBJZCsxLHRoaXMuZXN0YWJsaXNoUHJvbWlzZT10aGlzLmVzdGFibGlzaCgpfWFzeW5jIGVzdGFibGlzaCgpe3RyeXtjb25zdCBlPWF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uY3JlYXRlT2ZmZXIoe29mZmVyVG9SZWNlaXZlQXVkaW86ITAsb2ZmZXJUb1JlY2VpdmVWaWRlbzohMH0pO2lmKCFlLnNkcCl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZ2V0IGluaXRpYWxPZmZlci5zZHAgd2hlbiB0cnlpbmcgdG8gZXN0YWJsaXNoIFBlZXJDb25uZWN0aW9uLlwiKTtjb25zdCB0PUhVKGUuc2RwKSxpPVdVKGUuc2RwLHtmaWx0ZXJSVFg6IXRoaXMudXNlUlRYLGZpbHRlclZpZGVvRmVjOlhBKFwiRklMVEVSX1ZJREVPX0ZFQ1wiKSxmaWx0ZXJBdWRpb0ZlYzpYQShcIkZJTFRFUl9BVURJT19GRUNcIiksZmlsdGVyQXVkaW9Db2RlYzpbXCJvcHVzXCJdfSk7cmV0dXJuIHRoaXMubG9jYWxDYXBhYmlsaXRpZXM9aSx0aGlzLmluaXRpYWxPZmZlcj1lLFZGKFZGKHt9LHQpLHt9LHtydHBDYXBhYmlsaXRpZXM6e3NlbmQ6e2F1ZGlvQ29kZWNzOltdLGF1ZGlvRXh0ZW5zaW9uczpbXSx2aWRlb0NvZGVjczpbXSx2aWRlb0V4dGVuc2lvbnM6W119LHJlY3Y6e2F1ZGlvQ29kZWNzOltdLGF1ZGlvRXh0ZW5zaW9uczpbXSx2aWRlb0NvZGVjczpbXSx2aWRlb0V4dGVuc2lvbnM6W119LHNlbmRyZWN2Oml9LG9mZmVyU0RQOmUuc2RwfSl9Y2F0Y2goZSl7dGhyb3cgbmV3IEN5KFJ5LkdFVF9MT0NBTF9DT05ORUNUSU9OX1BBUkFNU19GQUlMRUQsZS50b1N0cmluZygpKX19YXN5bmMgdXBkYXRlUmVtb3RlQ29ubmVjdCgpe31hc3luYyBjb25uZWN0KGUpe3RyeXtpZighdGhpcy5pbml0aWFsT2ZmZXIpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGVzdGFibGlzaCBQMlBDb25uZWN0aW9uIHdpdGhvdXQgaW5pdGlhbCBvZmZlci5cIik7dGhpcy5yZW1vdGVTRFA9bmV3IGNsYXNze2NvbnN0cnVjdG9yKGUpe0ZnKHRoaXMsXCJzZXNzaW9uRGVzY1wiLHZvaWQgMCksRmcodGhpcyxcImxvY2FsQ2FwYWJpbGl0aWVzXCIsdm9pZCAwKSxGZyh0aGlzLFwicnRwQ2FwYWJpbGl0aWVzXCIsdm9pZCAwKSxGZyh0aGlzLFwiY2FuZGlkYXRlc1wiLHZvaWQgMCksRmcodGhpcyxcImljZVBhcmFtZXRlcnNcIix2b2lkIDApLEZnKHRoaXMsXCJkdGxzUGFyYW1ldGVyc1wiLHZvaWQgMCksRmcodGhpcyxcInNldHVwXCIsdm9pZCAwKSxGZyh0aGlzLFwiY3VycmVudE1pZEluZGV4XCIsdm9pZCAwKSxGZyh0aGlzLFwiY25hbWVcIix2b2lkIDApLGU9c0EoZSk7Y29uc3R7aWNlUGFyYW1ldGVyczp0LGR0bHNQYXJhbWV0ZXJzOmksY2FuZGlkYXRlczpuLHJ0cENhcGFiaWxpdGllczpyLHNldHVwOm8sbG9jYWxDYXBhYmlsaXRpZXM6cyxzZGtDb2RlYzphLGNuYW1lOmN9PWUsZD1GVS5wYXJzZShcInY9MFxcbm89LSAwIDAgSU4gSVA0IDEyNy4wLjAuMVxcbnM9QWdvcmFHYXRld2F5XFxudD0wIDBcXG5hPWdyb3VwOkJVTkRMRSBhdWRpbyB2aWRlb1xcbmE9bXNpZC1zZW1hbnRpYzogV01TXFxuYT1pY2UtbGl0ZVxcbm09YXVkaW8gOSBVRFAvVExTL1JUUC9TQVZQRiAwXFxuYz1JTiBJUDQgMTI3LjAuMC4xXFxuYT1ydGNwOjkgSU4gSVA0IDAuMC4wLjBcXG5hPXNlbmRyZWN2XFxuYT1ydGNwLW11eFxcbmE9cnRjcC1yc2l6ZVxcbmE9bWlkOmF1ZGlvXFxubT12aWRlbyA5IFVEUC9UTFMvUlRQL1NBVlBGIDBcXG5jPUlOIElQNCAxMjcuMC4wLjFcXG5hPXJ0Y3A6OSBJTiBJUDQgMC4wLjAuMFxcbmE9c2VuZHJlY3ZcXG5hPXJ0Y3AtbXV4XFxuYT1ydGNwLXJzaXplXFxuYT1taWQ6dmlkZW9cXG5cIik7dGhpcy5ydHBDYXBhYmlsaXRpZXM9cix0aGlzLmNhbmRpZGF0ZXM9bix0aGlzLmljZVBhcmFtZXRlcnM9dCx0aGlzLmR0bHNQYXJhbWV0ZXJzPWksdGhpcy5zZXR1cD1vLHRoaXMubG9jYWxDYXBhYmlsaXRpZXM9cyx0aGlzLmNuYW1lPWM7Zm9yKGxldCBlPTA7ZTxkLm1lZGlhRGVzY3JpcHRpb25zLmxlbmd0aDtlKyspe2NvbnN0IHM9ZC5tZWRpYURlc2NyaXB0aW9uc1tlXTtpZihzLmF0dHJpYnV0ZXMuaWNlVWZyYWc9dC5pY2VVZnJhZyxzLmF0dHJpYnV0ZXMuaWNlUHdkPXQuaWNlUHdkLHMuYXR0cmlidXRlcy5maW5nZXJwcmludHM9aS5maW5nZXJwcmludHMscy5hdHRyaWJ1dGVzLmNhbmRpZGF0ZXM9bixzLmF0dHJpYnV0ZXMuc2V0dXA9byxcInZpZGVvXCI9PT1zLm1lZGlhLm1lZGlhVHlwZSl7cy5tZWRpYS5mbXRzPXIudmlkZW9Db2RlY3MubWFwKChlPT5lLnBheWxvYWRUeXBlLnRvU3RyaW5nKDEwKSkpO2xldCBlPXIudmlkZW9Db2RlY3MuZmlsdGVyKChlPT57dmFyIHQsaTtyZXR1cm4gbnVsbD09PSh0PWUucnRwTWFwKXx8dm9pZCAwPT09dD92b2lkIDA6RG4oaT10LmVuY29kaW5nTmFtZS50b0xvd2VyQ2FzZSgpKS5jYWxsKGksYSl9KSk7MD09PWUubGVuZ3RoJiYoZT1yLnZpZGVvQ29kZWNzKSxzLmF0dHJpYnV0ZXMucGF5bG9hZHM9ZSxzLmF0dHJpYnV0ZXMuZXh0bWFwcz1yLnZpZGVvRXh0ZW5zaW9uc31cImF1ZGlvXCI9PT1zLm1lZGlhLm1lZGlhVHlwZSYmKHMubWVkaWEuZm10cz1yLmF1ZGlvQ29kZWNzLm1hcCgoZT0+ZS5wYXlsb2FkVHlwZS50b1N0cmluZygxMCkpKSxzLmF0dHJpYnV0ZXMucGF5bG9hZHM9ci5hdWRpb0NvZGVjcyxzLmF0dHJpYnV0ZXMuZXh0bWFwcz1yLmF1ZGlvRXh0ZW5zaW9ucyksZC5tZWRpYURlc2NyaXB0aW9uc1tlXT10aGlzLm11bmdNZWRpYURlc2Mocyl9dGhpcy5zZXNzaW9uRGVzYz1kLHRoaXMuY3VycmVudE1pZEluZGV4PWQubWVkaWFEZXNjcmlwdGlvbnMubGVuZ3RoLTF9dG9TdHJpbmcoKXtyZXR1cm4gRlUucHJpbnQodGhpcy5zZXNzaW9uRGVzYyl9c2VuZChlLHQsaSl7Y29uc3R7c3NyY3M6bixzc3JjR3JvdXBzOnJ9PXpVKHQsdGhpcy5jbmFtZSksbz10aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmZpbmQoKHQ9PmU9PT1kTy5WSURFTz9cInZpZGVvXCI9PT10Lm1lZGlhLm1lZGlhVHlwZTpcImF1ZGlvXCI9PT10Lm1lZGlhLm1lZGlhVHlwZSkpLHM9blswXS5hdHRyaWJ1dGVzLmxhYmVsLGE9blswXS5hdHRyaWJ1dGVzLm1zbGFiZWw7cmV0dXJuIG8uYXR0cmlidXRlcy5zc3Jjcz1vLmF0dHJpYnV0ZXMuc3NyY3MuY29uY2F0KG4pLG8uYXR0cmlidXRlcy5zc3JjR3JvdXBzPW8uYXR0cmlidXRlcy5zc3JjR3JvdXBzLmNvbmNhdChyKSx7aWQ6cyxtc2xhYmVsOmF9fWJhdGNoU2VuZChlKXtyZXR1cm4gZS5tYXAoKGU9PntsZXR7a2luZDp0LHNzcmNNc2c6aX09ZTtyZXR1cm4gdGhpcy5zZW5kKHQsaSx2b2lkIDApfSkpfXN0b3BTZW5kaW5nKGUpe3RoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuZm9yRWFjaCgodD0+e2NvbnN0IGk9W10sbj1bXSxyPVtdO3QuYXR0cmlidXRlcy5zc3Jjcy5mb3JFYWNoKCh0PT57RG4oZSkuY2FsbChlLHQuYXR0cmlidXRlcy5sYWJlbHx8XCJcIik/ci5wdXNoKHQpOmkucHVzaCh0KX0pKSx0LmF0dHJpYnV0ZXMuc3NyY0dyb3Vwcy5mb3JFYWNoKChlPT57dmFyIHQ7RG4odD1yLm1hcCgoZT0+ZS5zc3JjSWQpKSkuY2FsbCh0LGUuc3NyY0lkc1swXSl8fG4ucHVzaChlKX0pKSx0LmF0dHJpYnV0ZXMuc3NyY3M9aSx0LmF0dHJpYnV0ZXMuc3NyY0dyb3Vwcz1ufSkpfW11dGUoZSl7Y29uc3QgdD10aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmZpbmQoKHQ9PnQuYXR0cmlidXRlcy5taWQ9PT1lKSk7aWYoIXQpdGhyb3cgbmV3IEVycm9yKFwibWVkaWFEZXNjcmlwdGlvbiBub3QgZm91bmQgd2l0aCBcIi5jb25jYXQoZSxcIiBpbiByZW1vdGUgU0RQIHdoZW4gY2FsbGluZyBSZW1vdGVTRFAubXV0ZS5cIikpO3QuYXR0cmlidXRlcy5kaXJlY3Rpb249XCJpbmFjdGl2ZVwifXVubXV0ZShlKXtjb25zdCB0PXRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuZmluZCgodD0+dC5hdHRyaWJ1dGVzLm1pZD09PWUpKTtpZighdCl0aHJvdyBuZXcgRXJyb3IoXCJtZWRpYURlc2NyaXB0aW9uIG5vdCBmb3VuZCB3aXRoIFwiLmNvbmNhdChlLFwiIGluIHJlbW90ZSBTRFAgd2hlbiBjYWxsaW5nIFJlbW90ZVNEUC51bm11dGUuXCIpKTt0LmF0dHJpYnV0ZXMuZGlyZWN0aW9uPVwic2VuZG9ubHlcIn1yZWNlaXZlKGUsdCxpKXtlLmZvckVhY2goKChlLHQpPT57Y29uc3QgaT1lLl9tZWRpYVN0cmVhbVRyYWNrLG49dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5maW5kSW5kZXgoKGU9PmUuYXR0cmlidXRlcy5taWQ9PT1pLmtpbmQpKSxyPXRoaXMubXVuZ1JlY3ZNZWRpYURzZWModGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9uc1tuXSxlKTt0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zW25dPXJ9KSl9c3RvcFJlY2VpdmluZyhlKXt9dXBkYXRlQ2FuZGlkYXRlcyhlKXtlPT09bE8uVENQP3RoaXMuY2FuZGlkYXRlcy5mb3JFYWNoKChlPT57LTE9PT10aGlzLmNhbmRpZGF0ZXMuZmluZEluZGV4KCh0PT5cInRjcFwiPT09dC50cmFuc3BvcnQmJnQuY29ubmVjdGlvbkFkZHJlc3M9PT1lLmNvbm5lY3Rpb25BZGRyZXNzJiZ0LnBvcnQ9PT1lLnBvcnQpKSYmdGhpcy5jYW5kaWRhdGVzLnB1c2goTUYoTUYoe30sZSkse30se2ZvdW5kYXRpb246XCJ0Y3BjYW5kaWRhdGVcIixwcmlvcml0eTpOdW1iZXIoZS5wcmlvcml0eSktMStcIlwiLHRyYW5zcG9ydDpcInRjcFwiLHBvcnQ6TnVtYmVyKGUucG9ydCkrOTArXCJcIn0pKX0pKTp0aGlzLmNhbmRpZGF0ZXM9dGhpcy5jYW5kaWRhdGVzLmZpbHRlcigoZT0+XCJ0Y3BcIiE9PWUudHJhbnNwb3J0KSk7Zm9yKGNvbnN0IGUgb2YgdGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucyllLmF0dHJpYnV0ZXMuY2FuZGlkYXRlcz10aGlzLmNhbmRpZGF0ZXN9cmVzdGFydElDRShlKXtlPXNBKGUpLHRoaXMuaWNlUGFyYW1ldGVycz1lLHRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuZm9yRWFjaCgodD0+e3QuYXR0cmlidXRlcy5pY2VVZnJhZz1lLmljZVVmcmFnLHQuYXR0cmlidXRlcy5pY2VQd2Q9ZS5pY2VQd2R9KSl9cHJlZGljdFJlY2VpdmluZ01pZHMoZSl7Y29uc3QgdD1bXTtmb3IobGV0IGk9MDtpPGU7aSsrKXQucHVzaCgodGhpcy5jdXJyZW50TWlkSW5kZXgraSsxKS50b1N0cmluZygxMCkpO3JldHVybiB0fW11bmdSZWN2TWVkaWFEc2VjKGUsdCl7Y29uc3QgaT1zQShlKTtyZXR1cm4gSlUoaSx0KSxRVShpLHQpLGl9dXBkYXRlUmVjdk1lZGlhKGUsdCl7Y29uc3QgaT10aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmZpbmRJbmRleCgodD0+dC5hdHRyaWJ1dGVzLm1pZD09PWUpKTtpZigtMSE9PWkpe2NvbnN0IGU9dGhpcy5tdW5nUmVjdk1lZGlhRHNlYyh0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zW2ldLHQpO3RoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnNbaV09ZX19YnVtcE1pZChlKXt0aGlzLmN1cnJlbnRNaWRJbmRleCs9ZX11cGRhdGVUcmFja0xhYmVsKGUsdCxpKXtjb25zdCBuPXRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuZmluZCgodD0+ZT09PWRPLlZJREVPP1widmlkZW9cIj09PXQuYXR0cmlidXRlcy5taWQ6XCJhdWRpb1wiPT09dC5hdHRyaWJ1dGVzLm1pZCkpO2lmKG4pe2NvbnN0IGU9bi5hdHRyaWJ1dGVzLnNzcmNzLmZpbmQoKGU9PmUuYXR0cmlidXRlcy5sYWJlbD09PXQpKTt2YXIgcjtlJiYoZS5hdHRyaWJ1dGVzLmxhYmVsPWksbnVsbD09PShyPWUuYXR0cmlidXRlcy5tc2lkKXx8dm9pZCAwPT09cnx8ci5yZXBsYWNlKHQsaSkpfX1tdW5nTWVkaWFEZXNjKGUpe2NvbnN0IHQ9c0EoZSk7cmV0dXJuIFhVKHQpLGZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZS5hdHRyaWJ1dGVzLmV4dG1hcHMuZmluZCgoZT0+XCJodHRwOi8vd3d3LmlldGYub3JnL2lkL2RyYWZ0LWhvbG1lci1ybWNhdC10cmFuc3BvcnQtd2lkZS1jYy1leHRlbnNpb25zLTAxXCI9PT1lLmV4dGVuc2lvbk5hbWUpKTt0JiZlLmF0dHJpYnV0ZXMuZXh0bWFwcy5zcGxpY2UoZS5hdHRyaWJ1dGVzLmV4dG1hcHMuaW5kZXhPZih0KSwxKSxlLmF0dHJpYnV0ZXMucGF5bG9hZHMuZm9yRWFjaCgoZT0+e2NvbnN0IHQ9ZS5ydGNwRmVlZGJhY2tzLmZpbmRJbmRleCgoZT0+XCJ0cmFuc3BvcnQtY2NcIj09PWUudHlwZSkpOy0xIT09dCYmZS5ydGNwRmVlZGJhY2tzLnNwbGljZSh0LDEpfSkpfSh0KSx0fWdldFNTUkMoZSl7Zm9yKGNvbnN0IHQgb2YgdGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucylmb3IoY29uc3QgaSBvZiB0LmF0dHJpYnV0ZXMuc3NyY3MpaWYoaS5hdHRyaWJ1dGVzLmxhYmVsPT09ZSlyZXR1cm5baV19fShWRihWRih7fSxlKSx7fSx7cnRwQ2FwYWJpbGl0aWVzOmUucnRwQ2FwYWJpbGl0aWVzLnNlbmQsbG9jYWxDYXBhYmlsaXRpZXM6dGhpcy5sb2NhbENhcGFiaWxpdGllcyxzZGtDb2RlYzp0aGlzLnN0b3JlLmNvZGVjfSkpO2NvbnN0IHQ9dGhpcy5yZW1vdGVTRFAudG9TdHJpbmcoKTthd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLnNldExvY2FsRGVzY3JpcHRpb24odGhpcy5pbml0aWFsT2ZmZXIpLGF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJhbnN3ZXJcIixzZHA6dH0pfWNhdGNoKGUpe3Rocm93IG5ldyBDeShSeS5FWENIQU5HRV9TRFBfRkFJTEVELFwiUDJQQ29ubmVjdGlvbi5jb25uZWN0IGZhaWxlZDsgXCIuY29uY2F0KGUudG9TdHJpbmcoKSkpfX1hc3luYyB1cGRhdGVSZW1vdGVSVFBDYXBhYmlsaXRpZXMoZSx0KXt0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcIlBsYW5iIG1vZGUgZG9lcyBub3Qgc3VwcG9ydCBjcmVhdGVEYXRhQ2hhbm5lbHMuXCIpfWdldFByZU1lZGlhKGUpe31zZW5kKGUsdCl7dmFyIGk9dGhpcztyZXR1cm4gWUkoKGZ1bmN0aW9uKigpe2NvbnN0IG49eWllbGQgcUkoaS5tdXRleC5sb2NrKCkpO3RyeXtpZighaS5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi5zZW5kIGJlZm9yZSByZW1vdGUgU0RQIGNyZWF0ZWRcIik7Y29uc3Qgcj1lLm1hcCgoZT0+aS5wZWVyQ29ubmVjdGlvbi5hZGRUcmFjayhlLl9tZWRpYVN0cmVhbVRyYWNrKSkpLG89eWllbGQgcUkoaS5wZWVyQ29ubmVjdGlvbi5jcmVhdGVPZmZlcigpKSxzPUZVLnBhcnNlKG8uc2RwKSxhPWUubWFwKChlPT57Y29uc3QgdD1lLl9tZWRpYVN0cmVhbVRyYWNrLG49cy5tZWRpYURlc2NyaXB0aW9ucy5maW5kKChlPT5lLmF0dHJpYnV0ZXMubWlkPT09dC5raW5kKSk7aWYoIW4pdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGV4dHJhY3Qgc3NyYyBmcm9tIG1lZGlhRGVzY3JpcHRpb24uXCIpO3JldHVybiBmdW5jdGlvbihlLHQsaSl7Y29uc3Qgbj1lLmF0dHJpYnV0ZXMuc3NyY3MuZmlsdGVyKChlPT5lLmF0dHJpYnV0ZXMubGFiZWw9PT10KSkscj1lLmF0dHJpYnV0ZXMuc3NyY0dyb3VwcztpZigwPT09bi5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGV4dHJhY3Qgc3NyYyBmcm9tIHBsYW4tYiBTRFAuXCIpO2lmKHImJm4ubGVuZ3RoPjEpe2NvbnN0IGU9ci5maW5kKChlPT4tMSE9PWUuc3NyY0lkcy5pbmRleE9mKG5bMF0uc3NyY0lkKSkpO3JldHVybiBlP1t7c3NyY0lkOmUuc3NyY0lkc1swXSxydHg6aT9lLnNzcmNJZHNbMV06dm9pZCAwfV06W3tzc3JjSWQ6blswXS5zc3JjSWR9XX1yZXR1cm5be3NzcmNJZDpuWzBdLnNzcmNJZH1dfShuLHQuaWQsaS51c2VSVFgpfSkpO2xldCBjO3RyeXtjPXlpZWxkIGF9Y2F0Y2goZSl7dGhyb3cgci5mb3JFYWNoKChlPT57WHYoKSYmZS5yZXBsYWNlVHJhY2sobnVsbCksaS5wZWVyQ29ubmVjdGlvbi5yZW1vdmVUcmFjayhlKX0pKSxlfWNvbnN0IGQ9aS5tdW5nU2VuZE9mZmVyU0RQKG8uc2RwLGUpO2kucmVtb3RlU0RQLnJlY2VpdmUoZSx0LGMpO2NvbnN0IGw9aS5yZW1vdGVTRFAudG9TdHJpbmcoKTtyZXR1cm4geWllbGQgcUkoaS5wZWVyQ29ubmVjdGlvbi5zZXRMb2NhbERlc2NyaXB0aW9uKHt0eXBlOlwib2ZmZXJcIixzZHA6ZH0pKSx5aWVsZCBxSShpLmFwcGx5U2VuZEVuY29kaW5ncyhyLGUpKSx5aWVsZCBxSShpLnBlZXJDb25uZWN0aW9uLnNldFJlbW90ZURlc2NyaXB0aW9uKHt0eXBlOlwiYW5zd2VyXCIsc2RwOmx9KSksZS5tYXAoKChlLHQpPT57Y29uc3QgaT1lLl9tZWRpYVN0cmVhbVRyYWNrLmlkO3JldHVybntsb2NhbFNTUkM6YVt0XSxpZDppfX0pKX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuRVhDSEFOR0VfU0RQX0ZBSUxFRCxcIlAyUENvbm5lY3Rpb24uc2VuZCBmYWlsZWQ7IFwiLmNvbmNhdChlLnRvU3RyaW5nKCkpKX1maW5hbGx5e24oKX19KSkoKX1hc3luYyBzdG9wU2VuZGluZyhlKXt0cnl7aWYoIXRoaXMucmVtb3RlU0RQKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjYWxsIFAyUENvbm5lY3Rpb24uc3RvcFNlbmRpbmcgYmVmb3JlIHJlbW90ZSBTRFAgY3JlYXRlZFwiKTtjb25zdCB0PXRoaXMucGVlckNvbm5lY3Rpb24uZ2V0U2VuZGVycygpLmZpbHRlcigodD0+e3ZhciBpO3JldHVybi0xIT09ZS5pbmRleE9mKChudWxsPT09KGk9dC50cmFjayl8fHZvaWQgMD09PWk/dm9pZCAwOmkuaWQpfHxcIlwiKX0pKTtpZih0Lmxlbmd0aCE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIlRyYW5zY2VpdmVycycgbGVuZ3RoIGRvZXNuJ3QgbWF0Y2ggbWlkcycgbGVuZ3RoIHdoZW4gdHJ5aW5nIHRvIGNhbGwgUDJQQ29ubmVjdGlvbi5zdG9wU2VuZGluZy5cIik7dC5tYXAoKGU9PntYdigpJiZlLnJlcGxhY2VUcmFjayhudWxsKSx0aGlzLnBlZXJDb25uZWN0aW9uLnJlbW92ZVRyYWNrKGUpfSkpO2NvbnN0IGk9YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5jcmVhdGVPZmZlcigpO2F3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbihpKSx0aGlzLnJlbW90ZVNEUC5zdG9wUmVjZWl2aW5nKGUpO2NvbnN0IG49dGhpcy5yZW1vdGVTRFAudG9TdHJpbmcoKTthd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLnNldFJlbW90ZURlc2NyaXB0aW9uKHt0eXBlOlwiYW5zd2VyXCIsc2RwOm59KX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuRVhDSEFOR0VfU0RQX0ZBSUxFRCxcIlAyUENvbm5lY3Rpb24uc3RvcFNlbmRpbmcgZmFpbGVkOyBcIi5jb25jYXQoZS50b1N0cmluZygpKSl9fWFzeW5jIHJlY2VpdmUoZSx0LGksbil7dHJ5e2lmKCF0aGlzLnJlbW90ZVNEUCl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgY2FsbCBQMlBDb25uZWN0aW9uLnJlY2VpdmUgXCIuY29uY2F0KGUsXCIgYmVmb3JlIHJlbW90ZVNEUCBjcmVhdGVkLlwiKSk7Y29uc3R7aWQ6aSxtc2xhYmVsOnJ9PXRoaXMucmVtb3RlU0RQLnNlbmQoZSx0LG4pLG89bmV3IEdoKCgodCxuKT0+e2NvbnN0IG89c2V0VGltZW91dCgoKCk9PntuKG5ldyBFcnJvcihcIkNhbm5vdCByZWNlaXZlIHRyYWNrLCBpZDogXCIuY29uY2F0KGkpKSl9KSwxZTQpLHM9bj0+e2NvbnN0IGE9SHYoKTtpZigoXCJTYWZhcmlcIj09PWEubmFtZSYmMTE9PT1OdW1iZXIoYS52ZXJzaW9uKXx8JHYoKSkmJm4udHJhY2suaWQhPT1pJiZuLnN0cmVhbXNbMF0uaWQ9PT1yKXt2YXIgYztjb25zdCByPW4uc3RyZWFtc1swXS5nZXRUcmFja3MoKVswXTtyZXR1cm4gbnVsbD09PShjPXRoaXMucmVtb3RlU0RQKXx8dm9pZCAwPT09Y3x8Yy51cGRhdGVUcmFja0xhYmVsKGUsaSxuLnRyYWNrLmlkKSx0aGlzLnBlZXJDb25uZWN0aW9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0cmFja1wiLHMpLGNsZWFyVGltZW91dChvKSx2b2lkIHQocil9aWYobi50cmFjay5pZD09PWkpcmV0dXJuIHRoaXMucGVlckNvbm5lY3Rpb24ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRyYWNrXCIscyksY2xlYXJUaW1lb3V0KG8pLHZvaWQgdChuLnRyYWNrKX07dGhpcy5wZWVyQ29ubmVjdGlvbi5hZGRFdmVudExpc3RlbmVyKFwidHJhY2tcIixzKX0pKSxzPXRoaXMucmVtb3RlU0RQLnRvU3RyaW5nKCk7YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcIm9mZmVyXCIsc2RwOnN9KTtjb25zdCBhPWF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uY3JlYXRlQW5zd2VyKCk7YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRMb2NhbERlc2NyaXB0aW9uKGEpO3JldHVybnt0cmFjazphd2FpdCBvLGlkOml9fWNhdGNoKGUpe3Rocm93IG5ldyBDeShSeS5FWENIQU5HRV9TRFBfRkFJTEVELFwiUDJQQ29ubmVjdGlvbi5yZWNlaXZlIGZhaWxlZDsgXCIuY29uY2F0KGUudG9TdHJpbmcoKSkpfX1hc3luYyBzdG9wUmVjZWl2aW5nKGUpe3RyeXtpZighdGhpcy5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi5zdG9wUmVjZWl2aW5nIGJlZm9yZSByZW1vdGUgU0RQIGNyZWF0ZWQuXCIpO3RoaXMucmVtb3RlU0RQLnN0b3BTZW5kaW5nKGUpO2NvbnN0IHQ9dGhpcy5yZW1vdGVTRFAudG9TdHJpbmcoKTthd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLnNldFJlbW90ZURlc2NyaXB0aW9uKHt0eXBlOlwib2ZmZXJcIixzZHA6dH0pO2NvbnN0IGk9YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5jcmVhdGVBbnN3ZXIoKTthd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLnNldExvY2FsRGVzY3JpcHRpb24oaSl9Y2F0Y2goZSl7dGhyb3cgbmV3IEN5KFJ5LkVYQ0hBTkdFX1NEUF9GQUlMRUQsXCJQMlBDb25uZWN0aW9uIHN0b3BSZWNlaXZpbmcgZmFpbGVkOyBcIi5jb25jYXQoZS50b1N0cmluZygpKSl9fWFzeW5jIG11dGVSZW1vdGUoZSl7fWFzeW5jIHVubXV0ZVJlbW90ZShlKXt9YXN5bmMgbXV0ZUxvY2FsKGUpe3RyeXtpZighdGhpcy5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi5tdXRlTG9jYWwgYmVmb3JlIHJlbW90ZSBTRFAgY3JlYXRlZC5cIik7Y29uc3QgdD10aGlzLnBlZXJDb25uZWN0aW9uLmdldFNlbmRlcnMoKS5maWx0ZXIoKHQ9Pnt2YXIgaTtyZXR1cm4tMSE9PWUuaW5kZXhPZigobnVsbD09PShpPXQudHJhY2spfHx2b2lkIDA9PT1pP3ZvaWQgMDppLmlkKXx8XCJcIil9KSk7aWYodC5sZW5ndGghPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJzZW5kZXInIGxlbmd0aCBkb2Vzbid0IG1hdGNoIG1pZHMnIGxlbmd0aC5cIik7dC5tYXAoKGU9PntpZihYdigpJiZlLnRyYWNrKWUudHJhY2suZW5hYmxlZD0hMTtlbHNle2NvbnN0IHQ9ZS5nZXRQYXJhbWV0ZXJzKCk7dC5lbmNvZGluZ3MuZm9yRWFjaCgoZT0+ZS5hY3RpdmU9ITEpKSxlLnNldFBhcmFtZXRlcnModCl9fSkpfWNhdGNoKGUpe3Rocm93IG5ldyBDeShSeS5FWENIQU5HRV9TRFBfRkFJTEVELFwiUDJQQ29ubmVjdGlvbi5tdXRlTG9jYWwgZmFpbGVkOyBcIi5jb25jYXQoZS50b1N0cmluZygpKSl9fWFzeW5jIHVubXV0ZUxvY2FsKGUpe3RyeXtpZighdGhpcy5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi51bm11dGVMb2NhbCBiZWZvcmUgcmVtb3RlIFNEUCBjcmVhdGVkLlwiKTtjb25zdCB0PXRoaXMucGVlckNvbm5lY3Rpb24uZ2V0U2VuZGVycygpLmZpbHRlcigodD0+e3ZhciBpO3JldHVybi0xIT09ZS5pbmRleE9mKChudWxsPT09KGk9dC50cmFjayl8fHZvaWQgMD09PWk/dm9pZCAwOmkuaWQpfHxcIlwiKX0pKTtpZih0Lmxlbmd0aCE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIlNlbmRlcnMnIGxlbmd0aCBkb2Vzbid0IG1hdGNoIG1pZHMnIGxlbmd0aC5cIik7dC5tYXAoKGFzeW5jIGU9PntpZihYdigpJiZlLnRyYWNrKWUudHJhY2suZW5hYmxlZD0hMDtlbHNle2NvbnN0IHQ9ZS5nZXRQYXJhbWV0ZXJzKCk7dC5lbmNvZGluZ3MuZm9yRWFjaCgoZT0+ZS5hY3RpdmU9ITApKSxhd2FpdCBlLnNldFBhcmFtZXRlcnModCl9fSkpO2NvbnN0IGk9YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5jcmVhdGVPZmZlcigpO2F3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbihpKTtjb25zdCBuPXRoaXMucmVtb3RlU0RQLnRvU3RyaW5nKCk7YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcImFuc3dlclwiLHNkcDpufSl9Y2F0Y2goZSl7dGhyb3cgbmV3IEN5KFJ5LkVYQ0hBTkdFX1NEUF9GQUlMRUQsXCJQMlBDb25uZWN0aW9uLnVubXV0ZUxvY2FsIGZhaWxlZDsgXCIuY29uY2F0KGUudG9TdHJpbmcoKSkpfX1yZXN0YXJ0SUNFKGUpe3ZhciB0PXRoaXM7cmV0dXJuIFlJKChmdW5jdGlvbiooKXtjb25zdCBpPXlpZWxkIHFJKHQubXV0ZXgubG9jayhcIkZyb20gUDJQQ29ubmVjdGlvbi5yZXN0YXJ0SUNFXCIpKTt0cnl7aWYoIXQucmVtb3RlU0RQKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCByZXN0YXJ0SUNFIGJlZm9yZSByZW1vdGVTRFAgY3JlYXRlZC5cIik7aWYoWlAoKS5zdXBwb3J0UENTZXRDb25maWd1cmF0aW9uKXtjb25zdCBpPXQucGVlckNvbm5lY3Rpb24uZ2V0Q29uZmlndXJhdGlvbigpLG49ZT09PWxPLlJFTEFZP1wicmVsYXlcIjpcImFsbFwiO2kuaWNlVHJhbnNwb3J0UG9saWN5IT09biYmKGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0LnN0b3JlLmNsaWVudElkLFwiXSByZXN0YXJ0SUNFIGNoYW5nZSBpY2VUcmFuc3BvcnRQb2xpY3kgZnJvbSBbXCIpLmNvbmNhdChpLmljZVRyYW5zcG9ydFBvbGljeSxcIl0gdG8gW1wiKS5jb25jYXQobixcIl1cIikpLGkuaWNlVHJhbnNwb3J0UG9saWN5PW4sdC5wZWVyQ29ubmVjdGlvbi5zZXRDb25maWd1cmF0aW9uKGkpKX1lbHNlIGlmKGU9PT1sTy5SRUxBWSlyZXR1cm47ZSE9PWxPLlJFTEFZJiZ0LnJlbW90ZVNEUC51cGRhdGVDYW5kaWRhdGVzKGUpO2NvbnN0IG49eWllbGQgcUkodC5wZWVyQ29ubmVjdGlvbi5jcmVhdGVPZmZlcih7aWNlUmVzdGFydDohMH0pKTtpZighbi5zZHApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHJlc3RhcnRJQ0UgYmVjYXVzZSByZXN0YXJ0IG9mZmVyIFNEUCBkb2VzIG5vdCBleGlzdC5cIik7Y29uc3Qgcj1IVShuLnNkcCkse3JlbW90ZUljZVBhcmFtZXRlcnM6b309eWllbGQgci5pY2VQYXJhbWV0ZXJzO3QucmVtb3RlU0RQLnJlc3RhcnRJQ0Uobyk7Y29uc3Qgcz10LnJlbW90ZVNEUC50b1N0cmluZygpO3lpZWxkIHFJKHQucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbihuKSkseWllbGQgcUkodC5wZWVyQ29ubmVjdGlvbi5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcImFuc3dlclwiLHNkcDpzfSkpfWNhdGNoKGUpe2ZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHQuc3RvcmUuY2xpZW50SWQsXCJdIHJlc3RhcnQgSUNFIGZhaWxlZCwgYWJvcnQgb3BlcmF0aW9uXCIpLGUpfWZpbmFsbHl7aSgpfX0pKSgpfWNsb3NlKCl7dmFyIGU7dGhpcy5wZWVyQ29ubmVjdGlvbi5jbG9zZSgpLG51bGw9PT0oZT10aGlzLm9uQ29ubmVjdGlvblN0YXRlQ2hhbmdlKXx8dm9pZCAwPT09ZXx8ZS5jYWxsKHRoaXMsXCJjbG9zZWRcIiksdGhpcy51bmJpbmRQQ0V2ZW50cygpLHRoaXMudW5iaW5kU3RhdHNFdmVudHMoKSx0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpLHRoaXMuc3RhdHNGaWx0ZXIuZGVzdHJveSgpfWdldFN0YXRzKCl7cmV0dXJuIHRoaXMuc3RhdHNGaWx0ZXIuZ2V0U3RhdHMoKX1nZXRSZW1vdGVWaWRlb0lzUmVhZHkoZSl7cmV0dXJuIHRoaXMuc3RhdHNGaWx0ZXIuZ2V0VmlkZW9Jc1JlYWR5KGUpfWFzeW5jIHVwZGF0ZUVuY29kZXJDb25maWcoZSx0KXt0cnl7aWYoIXRoaXMucmVtb3RlU0RQKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjYWxsIFAyUENvbm5lY3Rpb24udXBkYXRlRW5jb2RlckNvbmZpZyBiZWZvcmUgcmVtb3RlIFNEUCBjcmVhdGVkLlwiKTtjb25zdCBlPWF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uY3JlYXRlT2ZmZXIoKSxpPXRoaXMubXVuZ1NlbmRPZmZlclNEUChlLnNkcCxbdF0pO3RoaXMucmVtb3RlU0RQLnVwZGF0ZVJlY3ZNZWRpYSh0Ll9tZWRpYVN0cmVhbVRyYWNrLmtpbmQsdCk7Y29uc3Qgbj10aGlzLnJlbW90ZVNEUC50b1N0cmluZygpO2F3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbih7dHlwZTpcIm9mZmVyXCIsc2RwOml9KSxhd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLnNldFJlbW90ZURlc2NyaXB0aW9uKHt0eXBlOlwiYW5zd2VyXCIsc2RwOm59KX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuRVhDSEFOR0VfU0RQX0ZBSUxFRCxlLnRvU3RyaW5nKCkpfX1hc3luYyB1cGRhdGVTZW5kUGFyYW1ldGVycyhlLHQpe2NvbnN0IGk9dGhpcy5wZWVyQ29ubmVjdGlvbi5nZXRTZW5kZXJzKCkuZmlsdGVyKCh0PT57dmFyIGk7cmV0dXJuKG51bGw9PT0oaT10LnRyYWNrKXx8dm9pZCAwPT09aT92b2lkIDA6aS5pZCk9PT1lfSkpOzE9PT1pLmxlbmd0aCYmYXdhaXQgdGhpcy5hcHBseVNlbmRFbmNvZGluZ3MoaSxbdF0pfXNldFN0YXRzUmVtb3RlVmlkZW9Jc1JlYWR5KGUsdCl7dGhpcy5zdGF0c0ZpbHRlci5zZXRWaWRlb0lzUmVhZHkyKGUsdCl9YXN5bmMgcmVwbGFjZVRyYWNrKGUsdCl7Y29uc3QgaT10aGlzLnBlZXJDb25uZWN0aW9uLmdldFNlbmRlcnMoKS5maW5kKChlPT57dmFyIGk7cmV0dXJuKG51bGw9PT0oaT1lLnRyYWNrKXx8dm9pZCAwPT09aT92b2lkIDA6aS5pZCk9PT10fSkpO2kmJmF3YWl0IGkucmVwbGFjZVRyYWNrKGUuX21lZGlhU3RyZWFtVHJhY2spfWNyZWF0ZURhdGFDaGFubmVscyhlLHQpe3Rocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwiUGxhbmIgbW9kZSBkb2VzIG5vdCBzdXBwb3J0IGNyZWF0ZURhdGFDaGFubmVscy5cIil9c3RvcERhdGFDaGFubmVscyhlKXt0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcIlBsYW5iIG1vZGUgZG9lcyBub3Qgc3VwcG9ydCBzdG9wRGF0YUNoYW5uZWxzLlwiKX1iaW5kUENFdmVudHMoKXt0aGlzLnBlZXJDb25uZWN0aW9uLm9uaWNlY29ubmVjdGlvbnN0YXRlY2hhbmdlPSgpPT57dmFyIGU7bnVsbD09PShlPXRoaXMub25JQ0VDb25uZWN0aW9uU3RhdGVDaGFuZ2UpfHx2b2lkIDA9PT1lfHxlLmNhbGwodGhpcyx0aGlzLnBlZXJDb25uZWN0aW9uLmljZUNvbm5lY3Rpb25TdGF0ZSl9LHRoaXMucGVlckNvbm5lY3Rpb24ub25jb25uZWN0aW9uc3RhdGVjaGFuZ2U9KCk9Pnt2YXIgZTtudWxsPT09KGU9dGhpcy5vbkNvbm5lY3Rpb25TdGF0ZUNoYW5nZSl8fHZvaWQgMD09PWV8fGUuY2FsbCh0aGlzLHRoaXMucGVlckNvbm5lY3Rpb24uY29ubmVjdGlvblN0YXRlKX0sdGhpcy5wZWVyQ29ubmVjdGlvbi5vbmljZWNhbmRpZGF0ZT1lPT57ZS5jYW5kaWRhdGU/dGhpcy5sb2NhbENhbmRpZGF0ZUNvdW50Kz0xOih0aGlzLnBlZXJDb25uZWN0aW9uLm9uaWNlY2FuZGlkYXRlPW51bGwsdGhpcy5hbGxDYW5kaWRhdGVzUmVjZWl2ZWQ9ITAsZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFtwYy1cIikuY29uY2F0KHRoaXMuc3RvcmUucDJwSWQsXCJdIGxvY2FsIGNhbmRpZGF0ZSBjb3VudFwiKSx0aGlzLmxvY2FsQ2FuZGlkYXRlQ291bnQpKX0sc2V0VGltZW91dCgoKCk9Pnt0aGlzLmFsbENhbmRpZGF0ZXNSZWNlaXZlZHx8KHRoaXMuYWxsQ2FuZGlkYXRlc1JlY2VpdmVkPSEwLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbcGMtXCIpLmNvbmNhdCh0aGlzLnN0b3JlLnAycElkLFwiXSBvbmljZWNhbmRpZGF0ZSB0aW1lb3V0LCBsb2NhbCBjYW5kaWRhdGUgY291bnRcIiksdGhpcy5sb2NhbENhbmRpZGF0ZUNvdW50KSl9KSxYQShcIkNBTkRJREFURV9USU1FT1VUXCIpKX11bmJpbmRQQ0V2ZW50cygpe3RoaXMucGVlckNvbm5lY3Rpb24ub25pY2Vjb25uZWN0aW9uc3RhdGVjaGFuZ2U9bnVsbCx0aGlzLnBlZXJDb25uZWN0aW9uLm9uY29ubmVjdGlvbnN0YXRlY2hhbmdlPW51bGwsdGhpcy5wZWVyQ29ubmVjdGlvbi5vbnNpZ25hbGluZ3N0YXRlY2hhbmdlPW51bGwsdGhpcy5wZWVyQ29ubmVjdGlvbi5vbmljZWNhbmRpZGF0ZWVycm9yPW51bGwsdGhpcy5wZWVyQ29ubmVjdGlvbi5vbmljZWNhbmRpZGF0ZT1udWxsLHRoaXMucGVlckNvbm5lY3Rpb24ub250cmFjaz1udWxsfXN0YXRpYyByZXNvbHZlUENDb25maWd1cmF0aW9uKHQpe2NvbnN0IGk9e2ljZVNlcnZlcnM6W10sc2RwU2VtYW50aWNzOlwicGxhbi1iXCJ9O3JldHVybiB0LmljZVNlcnZlcnM/aS5pY2VTZXJ2ZXJzPXQuaWNlU2VydmVyczp0LnR1cm5TZXJ2ZXImJlwib2ZmXCIhPT10LnR1cm5TZXJ2ZXIubW9kZSYmKEt5KHQudHVyblNlcnZlci5zZXJ2ZXJzKT9pLmljZVNlcnZlcnM9dC50dXJuU2VydmVyLnNlcnZlcnM6KGkuaWNlU2VydmVycyYmaS5pY2VTZXJ2ZXJzLnB1c2goLi4uZS50dXJuU2VydmVyQ29uZmlnVG9JY2VTZXJ2ZXJzKHQudHVyblNlcnZlci5zZXJ2ZXJzKSksWEEoXCJVU0VfVFVSTl9TRVJWRVJfT0ZfR0FURVdBWVwiKSYmaS5pY2VTZXJ2ZXJzJiZ0LnR1cm5TZXJ2ZXIuc2VydmVyc0Zyb21HYXRld2F5JiZpLmljZVNlcnZlcnMucHVzaCguLi5lLnR1cm5TZXJ2ZXJDb25maWdUb0ljZVNlcnZlcnModC50dXJuU2VydmVyLnNlcnZlcnNGcm9tR2F0ZXdheSkpLHQudHVyblNlcnZlci5zZXJ2ZXJzLmNvbmNhdCh0LnR1cm5TZXJ2ZXIuc2VydmVyc0Zyb21HYXRld2F5fHxbXSkuZm9yRWFjaCgoZT0+e2UuZm9yY2V0dXJuJiYoaS5pY2VUcmFuc3BvcnRQb2xpY3k9XCJyZWxheVwiKX0pKSkpLGl9c3RhdGljIHR1cm5TZXJ2ZXJDb25maWdUb0ljZVNlcnZlcnMoZSl7Y29uc3QgdD1bXTtyZXR1cm4gZS5mb3JFYWNoKChlPT57ZS5zZWN1cml0eT9lLnRjcHBvcnQmJnQucHVzaCh7dXNlcm5hbWU6ZS51c2VybmFtZSxjcmVkZW50aWFsOmUucGFzc3dvcmQsY3JlZGVudGlhbFR5cGU6XCJwYXNzd29yZFwiLHVybHM6XCJ0dXJuczpcIi5jb25jYXQoZS50dXJuU2VydmVyVVJMLFwiOlwiKS5jb25jYXQoZS50Y3Bwb3J0LFwiP3RyYW5zcG9ydD10Y3BcIil9KTooZS51ZHBwb3J0JiZ0LnB1c2goe3VzZXJuYW1lOmUudXNlcm5hbWUsY3JlZGVudGlhbDplLnBhc3N3b3JkLGNyZWRlbnRpYWxUeXBlOlwicGFzc3dvcmRcIix1cmxzOlwidHVybjpcIi5jb25jYXQoZS50dXJuU2VydmVyVVJMLFwiOlwiKS5jb25jYXQoZS51ZHBwb3J0LFwiP3RyYW5zcG9ydD11ZHBcIil9KSxlLnRjcHBvcnQmJnQucHVzaCh7dXNlcm5hbWU6ZS51c2VybmFtZSxjcmVkZW50aWFsOmUucGFzc3dvcmQsY3JlZGVudGlhbFR5cGU6XCJwYXNzd29yZFwiLHVybHM6XCJ0dXJuOlwiLmNvbmNhdChlLnR1cm5TZXJ2ZXJVUkwsXCI6XCIpLmNvbmNhdChlLnRjcHBvcnQsXCI/dHJhbnNwb3J0PXRjcFwiKX0pKX0pKSx0fWFzeW5jIHVwZGF0ZVJ0cFNlbmRlckVuY29kaW5ncyhlLHQpe3ZhciBpO2lmKCF0KXt0PXRoaXMucGVlckNvbm5lY3Rpb24uZ2V0U2VuZGVycygpLmZpbmQoKHQ9Pnt2YXIgaTtyZXR1cm4obnVsbD09PShpPXQudHJhY2spfHx2b2lkIDA9PT1pP3ZvaWQgMDppLmlkKT09PWUuX21lZGlhU3RyZWFtVHJhY2suaWR9KSl9aWYoIXQpcmV0dXJuIGZiLndhcm4oXCJbXCIuY29uY2F0KGUuZ2V0VHJhY2tJZCgpLFwiXSBubyBydHBTZW5kZXIgZm91bmR9XCIpKTtpZighWlAoKS5zdXBwb3J0U2V0UnRwU2VuZGVyUGFyYW1ldGVycylyZXR1cm4gZmIud2FybihcIkJyb3dzZXIgbm90IHN1cHBvcnQgc2V0IHJ0cC1zZW5kZXIgcGFyYW1ldGVyc1wiKTtjb25zdCBuPXt9LHI9e307aWYoZSBpbnN0YW5jZW9mIGFVKXN3aXRjaChlLl9vcHRpbWl6YXRpb25Nb2RlKXtjYXNlXCJtb3Rpb25cIjpuLmRlZ3JhZGF0aW9uUHJlZmVyZW5jZT1cIm1haW50YWluLWZyYW1lcmF0ZVwiO2JyZWFrO2Nhc2VcImRldGFpbFwiOm4uZGVncmFkYXRpb25QcmVmZXJlbmNlPVwibWFpbnRhaW4tcmVzb2x1dGlvblwiO2JyZWFrO2RlZmF1bHQ6bi5kZWdyYWRhdGlvblByZWZlcmVuY2U9XCJiYWxhbmNlZFwifWlmKFhBKFwiRFNDUF9UWVBFXCIpJiZFeSgpKXt2YXIgbztjb25zdCBlPVhBKFwiRFNDUF9UWVBFXCIpO0RuKG89W1widmVyeS1sb3dcIixcImxvd1wiLFwibWVkaXVtXCIsXCJoaWdoXCJdKS5jYWxsKG8sZSkmJihyLm5ldHdvcmtQcmlvcml0eT1lKX1jb25zdCBzPXQuZ2V0UGFyYW1ldGVycygpLGE9bnVsbD09PShpPXMuZW5jb2RpbmdzKXx8dm9pZCAwPT09aT92b2lkIDA6aVswXTthJiZPYmplY3QuYXNzaWduKGEsciksT2JqZWN0LmFzc2lnbihzLG4pLGZiLmRlYnVnKFwiW1wiLmNvbmNhdChlLmdldFRyYWNrSWQoKSxcIl0gdXBkYXRlUnRwU2VuZGVyRW5jb2RpbmdzOiBcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KHMuZW5jb2RpbmdzKSkpLGF3YWl0IHQuc2V0UGFyYW1ldGVycyhzKX1hc3luYyBhcHBseVNlbmRFbmNvZGluZ3MoZSx0KXt0cnl7aWYoIVpQKCkuc3VwcG9ydFNldFJ0cFNlbmRlclBhcmFtZXRlcnMpcmV0dXJuO2lmKGUubGVuZ3RoIT09dC5sZW5ndGgpcmV0dXJuO2ZvcihsZXQgaT0wO2k8ZS5sZW5ndGg7aSsrKXtjb25zdCBuPWVbaV0scj10W2ldO24mJnImJmF3YWl0IHRoaXMudXBkYXRlUnRwU2VuZGVyRW5jb2RpbmdzKHIsbil9fWNhdGNoKGUpe2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBBcHBseSBSVFBTZW5kRW5jb2RpbmdzIGZhaWxlZC5cIikpfX1tdW5nU2VuZE9mZmVyU0RQKGUsdCl7Y29uc3QgaT1GVS5wYXJzZShlKTtyZXR1cm4gdC5mb3JFYWNoKCgoZSx0KT0+e2NvbnN0IG49ZS5fbWVkaWFTdHJlYW1UcmFjayxyPWkubWVkaWFEZXNjcmlwdGlvbnMuZmluZCgoZT0+ZS5hdHRyaWJ1dGVzLm1pZD09PW4ua2luZCkpO3ImJkpVKHIsZSl9KSksRlUucHJpbnQoaSl9YmluZFN0YXRzRXZlbnRzKCl7dGhpcy5zdGF0c0ZpbHRlci5vbkZpcnN0QXVkaW9SZWNlaXZlZD1lPT57dmFyIHQ7bnVsbD09PSh0PXRoaXMub25GaXJzdEF1ZGlvUmVjZWl2ZWQpfHx2b2lkIDA9PT10fHx0LmNhbGwodGhpcyxlKX0sdGhpcy5zdGF0c0ZpbHRlci5vbkZpcnN0VmlkZW9SZWNlaXZlZD1lPT57dmFyIHQ7bnVsbD09PSh0PXRoaXMub25GaXJzdFZpZGVvUmVjZWl2ZWQpfHx2b2lkIDA9PT10fHx0LmNhbGwodGhpcyxlKX0sdGhpcy5zdGF0c0ZpbHRlci5vbkZpcnN0QXVkaW9EZWNvZGVkPWU9Pnt2YXIgdDtudWxsPT09KHQ9dGhpcy5vbkZpcnN0QXVkaW9EZWNvZGVkKXx8dm9pZCAwPT09dHx8dC5jYWxsKHRoaXMsZSl9LHRoaXMuc3RhdHNGaWx0ZXIub25GaXJzdFZpZGVvRGVjb2RlZD0oZSx0LGkpPT57dmFyIG47bnVsbD09PShuPXRoaXMub25GaXJzdFZpZGVvRGVjb2RlZCl8fHZvaWQgMD09PW58fG4uY2FsbCh0aGlzLGUsdCxpKX0sdGhpcy5zdGF0c0ZpbHRlci5vblNlbGVjdGVkTG9jYWxDYW5kaWRhdGVDaGFuZ2VkPShlLHQpPT57dmFyIGk7bnVsbD09PShpPXRoaXMub25TZWxlY3RlZExvY2FsQ2FuZGlkYXRlQ2hhbmdlZCl8fHZvaWQgMD09PWl8fGkuY2FsbCh0aGlzLGUsdCl9LHRoaXMuc3RhdHNGaWx0ZXIub25TZWxlY3RlZFJlbW90ZUNhbmRpZGF0ZUNoYW5nZWQ9KGUsdCk9Pnt2YXIgaTtudWxsPT09KGk9dGhpcy5vblNlbGVjdGVkUmVtb3RlQ2FuZGlkYXRlQ2hhbmdlZCl8fHZvaWQgMD09PWl8fGkuY2FsbCh0aGlzLGUsdCl9fXVuYmluZFN0YXRzRXZlbnRzKCl7dGhpcy5zdGF0c0ZpbHRlci5vbkZpcnN0QXVkaW9SZWNlaXZlZD12b2lkIDAsdGhpcy5zdGF0c0ZpbHRlci5vbkZpcnN0VmlkZW9SZWNlaXZlZD12b2lkIDAsdGhpcy5zdGF0c0ZpbHRlci5vbkZpcnN0QXVkaW9EZWNvZGVkPXZvaWQgMCx0aGlzLnN0YXRzRmlsdGVyLm9uRmlyc3RWaWRlb0RlY29kZWQ9dm9pZCAwLHRoaXMuc3RhdHNGaWx0ZXIub25TZWxlY3RlZExvY2FsQ2FuZGlkYXRlQ2hhbmdlZD12b2lkIDAsdGhpcy5zdGF0c0ZpbHRlci5vblNlbGVjdGVkUmVtb3RlQ2FuZGlkYXRlQ2hhbmdlZD12b2lkIDB9YXN5bmMgYmF0Y2hSZWNlaXZlKGUpe3RyeXtpZighdGhpcy5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi5iYXRjaFJlY2VpdmUgYmVmb3JlIHJlbW90ZVNEUCBjcmVhdGVkLlwiKTtjb25zdCB0PXRoaXMucmVtb3RlU0RQLmJhdGNoU2VuZChlKS5tYXAoKCh0LGkpPT57bGV0e2lkOm4sbXNsYWJlbDpyfT10O2NvbnN0e2tpbmQ6b309ZVtpXTtyZXR1cm4gbmV3IEdoKCgoZSx0KT0+e2NvbnN0IGk9c2V0VGltZW91dCgoKCk9Pnt0KG5ldyBFcnJvcihcIkNhbm5vdCByZWNlaXZlIHRyYWNrLCBpZDogXCIuY29uY2F0KG4pKSl9KSwxZTQpLHM9dD0+e2NvbnN0IGE9SHYoKTtpZihcIlNhZmFyaVwiPT09YS5uYW1lJiYxMT09PU51bWJlcihhLnZlcnNpb24pJiZ0LnRyYWNrLmlkIT09biYmdC5zdHJlYW1zWzBdLmlkPT09cil7dmFyIGM7Y29uc3Qgcj10LnN0cmVhbXNbMF0uZ2V0VHJhY2tzKClbMF07cmV0dXJuIG51bGw9PT0oYz10aGlzLnJlbW90ZVNEUCl8fHZvaWQgMD09PWN8fGMudXBkYXRlVHJhY2tMYWJlbChvLG4sdC50cmFjay5pZCksdGhpcy5wZWVyQ29ubmVjdGlvbi5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhY2tcIixzKSxjbGVhclRpbWVvdXQoaSksdm9pZCBlKHt0cmFjazpyLGlkOm59KX1pZih0LnRyYWNrLmlkPT09bilyZXR1cm4gdGhpcy5wZWVyQ29ubmVjdGlvbi5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhY2tcIixzKSxjbGVhclRpbWVvdXQoaSksdm9pZCBlKHt0cmFjazp0LnRyYWNrLGlkOm59KX07dGhpcy5wZWVyQ29ubmVjdGlvbi5hZGRFdmVudExpc3RlbmVyKFwidHJhY2tcIixzKX0pKX0pKSxpPXRoaXMucmVtb3RlU0RQLnRvU3RyaW5nKCk7YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcIm9mZmVyXCIsc2RwOml9KTtjb25zdCBuPWF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uY3JlYXRlQW5zd2VyKCk7cmV0dXJuIGF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbihuKSxhd2FpdCBHaC5hbGwodCl9Y2F0Y2goZSl7dGhyb3cgbmV3IEN5KFJ5LkVYQ0hBTkdFX1NEUF9GQUlMRUQsXCJQMlBDb25uZWN0aW9uLnJlY2VpdmUgZmFpbGVkOyBcIi5jb25jYXQoZS50b1N0cmluZygpKSl9fWFzeW5jIGdldFJlbW90ZVNTUkMoZSl7aWYoIXRoaXMucmVtb3RlU0RQKXJldHVybjtjb25zdCB0PXRoaXMucmVtb3RlU0RQLmdldFNTUkMoZSk7cmV0dXJuIG51bGw9PXQ/dm9pZCAwOnRbMF0uc3NyY0lkfXNldENvbmZpZ3VyYXRpb24odCl7aWYoWlAoKS5zdXBwb3J0UENTZXRDb25maWd1cmF0aW9uKXtjb25zdCBpPWUucmVzb2x2ZVBDQ29uZmlndXJhdGlvbih0KTt0aGlzLnBlZXJDb25uZWN0aW9uLnNldENvbmZpZ3VyYXRpb24oaSl9fX0sQ3coVUYucHJvdG90eXBlLFwiY29ubmVjdFwiLFtCRl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihVRi5wcm90b3R5cGUsXCJjb25uZWN0XCIpLFVGLnByb3RvdHlwZSksQ3coVUYucHJvdG90eXBlLFwic3RvcFNlbmRpbmdcIixbQkZdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoVUYucHJvdG90eXBlLFwic3RvcFNlbmRpbmdcIiksVUYucHJvdG90eXBlKSxDdyhVRi5wcm90b3R5cGUsXCJyZWNlaXZlXCIsW0JGXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFVGLnByb3RvdHlwZSxcInJlY2VpdmVcIiksVUYucHJvdG90eXBlKSxDdyhVRi5wcm90b3R5cGUsXCJzdG9wUmVjZWl2aW5nXCIsW0JGXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFVGLnByb3RvdHlwZSxcInN0b3BSZWNlaXZpbmdcIiksVUYucHJvdG90eXBlKSxDdyhVRi5wcm90b3R5cGUsXCJtdXRlUmVtb3RlXCIsW0JGXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFVGLnByb3RvdHlwZSxcIm11dGVSZW1vdGVcIiksVUYucHJvdG90eXBlKSxDdyhVRi5wcm90b3R5cGUsXCJ1bm11dGVSZW1vdGVcIixbQkZdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoVUYucHJvdG90eXBlLFwidW5tdXRlUmVtb3RlXCIpLFVGLnByb3RvdHlwZSksQ3coVUYucHJvdG90eXBlLFwibXV0ZUxvY2FsXCIsW0JGXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFVGLnByb3RvdHlwZSxcIm11dGVMb2NhbFwiKSxVRi5wcm90b3R5cGUpLEN3KFVGLnByb3RvdHlwZSxcInVubXV0ZUxvY2FsXCIsW0JGXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFVGLnByb3RvdHlwZSxcInVubXV0ZUxvY2FsXCIpLFVGLnByb3RvdHlwZSksQ3coVUYucHJvdG90eXBlLFwiY2xvc2VcIixbQkZdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoVUYucHJvdG90eXBlLFwiY2xvc2VcIiksVUYucHJvdG90eXBlKSxDdyhVRi5wcm90b3R5cGUsXCJ1cGRhdGVFbmNvZGVyQ29uZmlnXCIsW0JGXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFVGLnByb3RvdHlwZSxcInVwZGF0ZUVuY29kZXJDb25maWdcIiksVUYucHJvdG90eXBlKSxDdyhVRi5wcm90b3R5cGUsXCJ1cGRhdGVTZW5kUGFyYW1ldGVyc1wiLFtCRl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihVRi5wcm90b3R5cGUsXCJ1cGRhdGVTZW5kUGFyYW1ldGVyc1wiKSxVRi5wcm90b3R5cGUpLEN3KFVGLnByb3RvdHlwZSxcInJlcGxhY2VUcmFja1wiLFtCRl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihVRi5wcm90b3R5cGUsXCJyZXBsYWNlVHJhY2tcIiksVUYucHJvdG90eXBlKSxDdyhVRi5wcm90b3R5cGUsXCJnZXRSZW1vdGVTU1JDXCIsW0JGXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFVGLnByb3RvdHlwZSxcImdldFJlbW90ZVNTUkNcIiksVUYucHJvdG90eXBlKSxVRik7ZnVuY3Rpb24gQkYoZSx0LGkpe2NvbnN0IG49ZVt0XTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCB1c2UgbXV0ZXggb24gb2JqZWN0IHByb3BlcnR5LlwiKTtyZXR1cm4gaS52YWx1ZT1hc3luYyBmdW5jdGlvbigpe2NvbnN0IGU9dGhpcy5tdXRleCxpPWF3YWl0IGUubG9jayhcIkxvY2tpbmcgZnJvbSBQMlBDb25uZWN0aW9uLlwiLmNvbmNhdCh0KSk7dHJ5e2Zvcih2YXIgcj1hcmd1bWVudHMubGVuZ3RoLG89bmV3IEFycmF5KHIpLHM9MDtzPHI7cysrKW9bc109YXJndW1lbnRzW3NdO3JldHVybiBhd2FpdCBuLmFwcGx5KHRoaXMsbyl9ZmluYWxseXtpKCl9fSxpfWZ1bmN0aW9uIGpGKGUsdCl7dmFyIGk9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYobj1uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxpLnB1c2guYXBwbHkoaSxuKX1yZXR1cm4gaX1mdW5jdGlvbiBHRihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgaT1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj9qRihPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0ZnKGUsdCxpW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGkpKTpqRihPYmplY3QoaSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLHQpKX0pKX1yZXR1cm4gZX1jb25zdCBXRj1cIjlcIixIRj00ZTQ7Y2xhc3MgS0Z7Z2V0IGxvY2FsQ2FwYWJpbGl0aWVzKCl7cmV0dXJuIHNBKHRoaXMuX2xvY2FsQ2FwYWJpbGl0aWVzKX1nZXQgcnRwQ2FwYWJpbGl0aWVzKCl7cmV0dXJuIHNBKHRoaXMuX3J0cENhcGFiaWxpdGllcyl9Z2V0IGNhbmRpZGF0ZXMoKXtyZXR1cm4gc0EodGhpcy5fY2FuZGlkYXRlcyl9Z2V0IGljZVBhcmFtZXRlcnMoKXtyZXR1cm4gc0EodGhpcy5faWNlUGFyYW1ldGVycyl9Z2V0IGR0bHNQYXJhbWV0ZXJzKCl7cmV0dXJuIHNBKHRoaXMuX2R0bHNQYXJhbWV0ZXJzKX1jb25zdHJ1Y3RvcihlKXtGZyh0aGlzLFwic2Vzc2lvbkRlc2NcIix2b2lkIDApLEZnKHRoaXMsXCJfbG9jYWxDYXBhYmlsaXRpZXNcIix2b2lkIDApLEZnKHRoaXMsXCJfcnRwQ2FwYWJpbGl0aWVzXCIsdm9pZCAwKSxGZyh0aGlzLFwiX2NhbmRpZGF0ZXNcIix2b2lkIDApLEZnKHRoaXMsXCJfaWNlUGFyYW1ldGVyc1wiLHZvaWQgMCksRmcodGhpcyxcIl9kdGxzUGFyYW1ldGVyc1wiLHZvaWQgMCksRmcodGhpcyxcInNldHVwXCIsdm9pZCAwKSxGZyh0aGlzLFwiY3VycmVudE1pZEluZGV4XCIsdm9pZCAwKSxGZyh0aGlzLFwiY25hbWVcIix2b2lkIDApLEZnKHRoaXMsXCJmaXJlZm94U3NyY01pZE1hcFwiLG5ldyBNYXApLGU9c0EoZSk7Y29uc3R7aWNlUGFyYW1ldGVyczp0LGR0bHNQYXJhbWV0ZXJzOmksY2FuZGlkYXRlczpuLHJ0cENhcGFiaWxpdGllczpyLHNldHVwOm8sbG9jYWxDYXBhYmlsaXRpZXM6cyxjbmFtZTphfT1lO3RoaXMuX3J0cENhcGFiaWxpdGllcz1yLHRoaXMuX2NhbmRpZGF0ZXM9bix0aGlzLl9pY2VQYXJhbWV0ZXJzPXQsdGhpcy5fZHRsc1BhcmFtZXRlcnM9aSx0aGlzLl9sb2NhbENhcGFiaWxpdGllcz1zLHRoaXMuc2V0dXA9byx0aGlzLmNuYW1lPWEsdGhpcy5zZXNzaW9uRGVzYz10aGlzLnVwZGF0ZVJlbW90ZVJUUENhcGFiaWxpdGllcyhyKSx0aGlzLmN1cnJlbnRNaWRJbmRleD10aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmxlbmd0aC0xfXByZWxvYWRSZW1vdGVNZWRpYShlKXtjb25zdCB0PXRoaXMuY2FuZGlkYXRlcyxpPXRoaXMuZHRsc1BhcmFtZXRlcnMsbj10aGlzLmljZVBhcmFtZXRlcnMscj10aGlzLnJ0cENhcGFiaWxpdGllcy5zZW5kO2xldCBvPXRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMubGVuZ3RoLTE7Zm9yKGxldCBzPTE7czxlO3MrKyl7Y29uc3QgZT0yKnMrMmU0LGE9MipzK0hGLHtzc3JjczpjLHNzcmNHcm91cHM6ZH09elUoW3tzc3JjSWQ6ZX1dLHRoaXMuY25hbWUpLHtzc3JjczpsLHNzcmNHcm91cHM6dX09elUoW3tzc3JjSWQ6YSxydHg6WEEoXCJVU0VfU1VCX1JUWFwiKT9hKzE6dm9pZCAwfV0sdGhpcy5jbmFtZSk7dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5wdXNoKHttZWRpYTp7bWVkaWFUeXBlOlwidmlkZW9cIixwb3J0OldGLHByb3RvczpbXCJVRFBcIixcIlRMU1wiLFwiUlRQXCIsXCJTQVZQRlwiXSxmbXRzOnIudmlkZW9Db2RlY3MubWFwKChlPT5lLnBheWxvYWRUeXBlLnRvU3RyaW5nKDEwKSkpfSxjb25uZWN0aW9uczpbe25ldHR5cGU6XCJJTlwiLGFkZHJ0eXBlOlwiSVA0XCIsYWRkcmVzczpcIjEyNy4wLjAuMVwifV0sYmFuZHdpZHRoczpbXSxhdHRyaWJ1dGVzOntpY2VVZnJhZzpuLmljZVVmcmFnLGljZVB3ZDpuLmljZVB3ZCx1bnJlY29nbml6ZWQ6W10sY2FuZGlkYXRlczp0LGV4dG1hcHM6ci52aWRlb0V4dGVuc2lvbnMsZmluZ2VycHJpbnRzOmkuZmluZ2VycHJpbnRzLGltYWdlYXR0cjpbXSxtc2lkczpbXSxyZW1vdGVDYW5kaWRhdGVzTGlzdDpbXSxyaWRzOltdLHNzcmNzOmwsc3NyY0dyb3Vwczp1LHJ0Y3BGZWVkYmFja1dpbGRjYXJkczpbXSxwYXlsb2FkczpyLnZpZGVvQ29kZWNzLHJ0Y3A6e3BvcnQ6XCI5XCIsbmV0VHlwZTpcIklOXCIsYWRkcmVzc1R5cGU6XCJJUDRcIixhZGRyZXNzOlwiMC4wLjAuMFwifSxzZXR1cDp0aGlzLnNldHVwLGRpcmVjdGlvbjpcInNlbmRvbmx5XCIscnRjcE11eDohMCxydGNwUnNpemU6ITAsbWlkOlwiXCIuY29uY2F0KCsrbyl9fSksdGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5wdXNoKHttZWRpYTp7bWVkaWFUeXBlOlwiYXVkaW9cIixwb3J0OldGLHByb3RvczpbXCJVRFBcIixcIlRMU1wiLFwiUlRQXCIsXCJTQVZQRlwiXSxmbXRzOnIuYXVkaW9Db2RlY3MubWFwKChlPT5lLnBheWxvYWRUeXBlLnRvU3RyaW5nKDEwKSkpfSxjb25uZWN0aW9uczpbe25ldHR5cGU6XCJJTlwiLGFkZHJ0eXBlOlwiSVA0XCIsYWRkcmVzczpcIjEyNy4wLjAuMVwifV0sYmFuZHdpZHRoczpbXSxhdHRyaWJ1dGVzOntpY2VVZnJhZzpuLmljZVVmcmFnLGljZVB3ZDpuLmljZVB3ZCx1bnJlY29nbml6ZWQ6W10sY2FuZGlkYXRlczp0LGV4dG1hcHM6ci5hdWRpb0V4dGVuc2lvbnMsZmluZ2VycHJpbnRzOmkuZmluZ2VycHJpbnRzLGltYWdlYXR0cjpbXSxtc2lkczpbXSxyZW1vdGVDYW5kaWRhdGVzTGlzdDpbXSxyaWRzOltdLHNzcmNzOmMsc3NyY0dyb3VwczpkLHJ0Y3BGZWVkYmFja1dpbGRjYXJkczpbXSxwYXlsb2FkczpyLmF1ZGlvQ29kZWNzLHJ0Y3A6e3BvcnQ6XCI5XCIsbmV0VHlwZTpcIklOXCIsYWRkcmVzc1R5cGU6XCJJUDRcIixhZGRyZXNzOlwiMC4wLjAuMFwifSxzZXR1cDp0aGlzLnNldHVwLGRpcmVjdGlvbjpcInNlbmRvbmx5XCIscnRjcE11eDohMCxydGNwUnNpemU6ITAsbWlkOlwiXCIuY29uY2F0KCsrbyl9fSksdGhpcy5jdXJyZW50TWlkSW5kZXgrPTJ9dGhpcy51cGRhdGVCdW5kbGVNaWRzKCl9dG9TdHJpbmcoKXtyZXR1cm4gRlUucHJpbnQodGhpcy5zZXNzaW9uRGVzYyl9c2VuZChlLHQsaSxuKXtjb25zdHtzc3JjczpyLHNzcmNHcm91cHM6b309elUodCx0aGlzLmNuYW1lLFhBKFwiU1lOQ19HUk9VUFwiKT9pOnZvaWQgMCkscz10aGlzLmZpbmRQcmVsb2FkTWVkaWFEZXNjKHIpO2lmKHMpe2lmKFp2KCkmJnRoaXMuZmlyZWZveFNzcmNNaWRNYXAuc2V0KHJbMF0uc3NyY0lkLHMuYXR0cmlidXRlcy5taWQpLG4mJihuLnR3Y2N8fG4ucmVtYikpe2NvbnN0IGU9dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5pbmRleE9mKHMpO3JldHVybiB0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zW2VdPXRoaXMubXVuZ1NlbmRNZWRpYURlc2MocyxuKSx7bWlkOnMuYXR0cmlidXRlcy5taWQsbmVlZEV4Y2hhbmdlU0RQOiEwfX1yZXR1cm57bWlkOnMuYXR0cmlidXRlcy5taWQsbmVlZEV4Y2hhbmdlU0RQOiExfX17Y29uc3QgdD10aGlzLmZpbmRBdmFpbGFibGVNZWRpYUluZGV4KGUscik7bGV0IGk7cmV0dXJuLTE9PT10fHwxPT09dCYmKFh2KCl8fGZ1bmN0aW9uKCl7Y29uc3QgZT1IdigpO3JldHVybiEoZS5uYW1lIT09QnYuQ0hST01FfHwhZS5vc1ZlcnNpb24pJiZOdW1iZXIoZS52ZXJzaW9uKTw9OTB9KCkpfHwwPT09dCYmWEEoXCJVU0VfU1VCX1JUWFwiKXx8YXkoKT8oaT10aGlzLmNyZWF0ZU9yUmVjeWNsZVNlbmRNZWRpYShlLHIsbyxcInNlbmRvbmx5XCIsbiksdGhpcy51cGRhdGVCdW5kbGVNaWRzKCkpOihpPXNBKHRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnNbdF0pLGkuYXR0cmlidXRlcy5kaXJlY3Rpb249XCJzZW5kb25seVwiLGkuYXR0cmlidXRlcy5zc3Jjcz1yLGkuYXR0cmlidXRlcy5zc3JjR3JvdXBzPW8sdGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9uc1t0XT10aGlzLm11bmdTZW5kTWVkaWFEZXNjKGksbikpLFp2KCkmJnRoaXMuZmlyZWZveFNzcmNNaWRNYXAuc2V0KHJbMF0uc3NyY0lkLGkuYXR0cmlidXRlcy5taWQpLHttaWQ6aS5hdHRyaWJ1dGVzLm1pZCxuZWVkRXhjaGFuZ2VTRFA6ITB9fX1zZW5kRGF0YUNoYW5uZWwoKXtjb25zdHttZWRpYURlc2M6ZSxuZWVkRXhjaGFuZ2VTRFA6dH09dGhpcy5jcmVhdGVPclJlY3ljbGVEYXRhQ2hhbm5lbCgpO3JldHVybiB0aGlzLnVwZGF0ZUJ1bmRsZU1pZHMoKSx7bWlkOmUuYXR0cmlidXRlcy5taWQsbmVlZEV4Y2hhbmdlU0RQOnR9fWJhdGNoU2VuZChlKXtjb25zdCB0PWUubWFwKChlPT57bGV0e2tpbmQ6dCxzc3JjTXNnOmksbXNsYWJlbDpufT1lO3JldHVybiB0aGlzLnNlbmQodCxpLG4pfSkpLGk9W107bGV0IG49ITE7cmV0dXJuIHQuZm9yRWFjaCgoZT0+e2xldHttaWQ6dCxuZWVkRXhjaGFuZ2VTRFA6cn09ZTtyJiYobj0hMCksaS5wdXNoKHQpfSkpLHttaWRzOmksbmVlZEV4Y2hhbmdlU0RQOm59fXN0b3BTZW5kaW5nKGUpe2NvbnN0IHQ9dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5maWx0ZXIoKHQ9PnQuYXR0cmlidXRlcy5taWQmJi0xIT09ZS5pbmRleE9mKHQuYXR0cmlidXRlcy5taWQpKSk7aWYodC5sZW5ndGghPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJtZWRpYURlc2NyaXB0aW9ucycgbGVuZ3RoIGRvZXNuJ3QgbWF0Y2ggbWlkcycgbGVuZ3RoIHdoZW4gY2FsbGluZyBSZW1vdGVTRFAuc3RvcFNlbmRpbmcuXCIpO3QuZm9yRWFjaCgoZT0+e1wiMFwiPT09ZS5hdHRyaWJ1dGVzLm1pZHx8WnYoKXx8YXkoKT9lLmF0dHJpYnV0ZXMuc3NyY3M9W106KGUuYXR0cmlidXRlcy5zc3Jjcz1bXSxlLmF0dHJpYnV0ZXMuZGlyZWN0aW9uPVwiaW5hY3RpdmVcIixlLm1lZGlhLnBvcnQ9XCIwXCIpfSkpLHRoaXMudXBkYXRlQnVuZGxlTWlkcygpfW11dGUoZSl7Y29uc3QgdD10aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmZpbmQoKHQ9PnQuYXR0cmlidXRlcy5taWQ9PT1lKSk7aWYoIXQpdGhyb3cgbmV3IEVycm9yKFwibWVkaWFEZXNjcmlwdGlvbiBub3QgZm91bmQgd2l0aCBcIi5jb25jYXQoZSxcIiBpbiByZW1vdGUgU0RQIHdoZW4gY2FsbGluZyBSZW1vdGVTRFAubXV0ZS5cIikpO3QuYXR0cmlidXRlcy5kaXJlY3Rpb249XCJpbmFjdGl2ZVwifXVubXV0ZShlKXtjb25zdCB0PXRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuZmluZCgodD0+dC5hdHRyaWJ1dGVzLm1pZD09PWUpKTtpZighdCl0aHJvdyBuZXcgRXJyb3IoXCJtZWRpYURlc2NyaXB0aW9uIG5vdCBmb3VuZCB3aXRoIFwiLmNvbmNhdChlLFwiIGluIHJlbW90ZSBTRFAgd2hlbiBjYWxsaW5nIFJlbW90ZVNEUC51bm11dGUuXCIpKTt0LmF0dHJpYnV0ZXMuZGlyZWN0aW9uPVwic2VuZG9ubHlcIn1tdXRlUmVtb3RlKGUpe2NvbnN0IHQ9dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5maWx0ZXIoKHQ9PkRuKGUpLmNhbGwoZSx0LmF0dHJpYnV0ZXMubWlkfHxcIlwiKSkpO2lmKHQubGVuZ3RoIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwibWVkaWFEZXNjcmlwdGlvbnMnIGxlbmd0aCBkb2Vzbid0IG1hdGNoIG1pZHMnIGxlbmd0aCB3aGVuIGNhbGxpbmcgUmVtb3RlU0RQLm11dGVSZW1vdGUuXCIpO3QuZm9yRWFjaCgoZT0+e2UuYXR0cmlidXRlcy5kaXJlY3Rpb249XCJpbmFjdGl2ZVwifSkpfXVubXV0ZVJlbW90ZShlKXtjb25zdCB0PXRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuZmlsdGVyKCh0PT5EbihlKS5jYWxsKGUsdC5hdHRyaWJ1dGVzLm1pZHx8XCJcIikpKTtpZih0Lmxlbmd0aCE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIm1lZGlhRGVzY3JpcHRpb25zJyBsZW5ndGggZG9lc24ndCBtYXRjaCBtaWRzJyBsZW5ndGggd2hlbiBjYWxsaW5nIFJlbW90ZVNEUC5tdXRlUmVtb3RlLlwiKTt0LmZvckVhY2goKGU9PntlLmF0dHJpYnV0ZXMuZGlyZWN0aW9uPVwicmVjdm9ubHlcIn0pKX1yZWNlaXZlKGUsdCxpLG4pe2UuZm9yRWFjaCgoKGUscik9Pnt0aGlzLmNyZWF0ZU9yUmVjeWNsZVJlY3ZNZWRpYShlLFtdLFwicmVjdm9ubHlcIix0LGksbltyXSl9KSksdGhpcy51cGRhdGVCdW5kbGVNaWRzKCl9c3RvcFJlY2VpdmluZyhlKXtjb25zdCB0PXRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuZmlsdGVyKCh0PT4tMSE9PWUuaW5kZXhPZih0LmF0dHJpYnV0ZXMubWlkKSkpO2lmKHQubGVuZ3RoIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiTWVkaWFEZXNjcmlwdGlvbnMnIGxlbmd0aCBkb2Vzbid0IG1hdGNoIG1pZHMncyBsZW5ndGggd2hlbiBjYWxsaW5nIFJlbW90ZVNEUC5yZWNlaXZlLlwiKTt0LmZvckVhY2goKGU9PntlLm1lZGlhLnBvcnQ9XCIwXCIsZS5hdHRyaWJ1dGVzLmRpcmVjdGlvbj1cImluYWN0aXZlXCJ9KSksdGhpcy51cGRhdGVCdW5kbGVNaWRzKCl9dXBkYXRlUmVtb3RlUlRQQ2FwYWJpbGl0aWVzKGUpe2NvbnN0IHQ9dGhpcy5zZXNzaW9uRGVzY3x8RlUucGFyc2UoXCJ2PTBcXG5vPS0gMCAwIElOIElQNCAxMjcuMC4wLjFcXG5zPUFnb3JhR2F0ZXdheVxcbnQ9MCAwXFxuYT1ncm91cDpCVU5ETEUgMCAxXFxuYT1tc2lkLXNlbWFudGljOiBXTVNcXG5hPWljZS1saXRlXFxubT12aWRlbyA5IFVEUC9UTFMvUlRQL1NBVlBGIDBcXG5jPUlOIElQNCAxMjcuMC4wLjFcXG5hPXJ0Y3A6OSBJTiBJUDQgMC4wLjAuMFxcbmE9c2VuZG9ubHlcXG5hPXJ0Y3AtbXV4XFxuYT1ydGNwLXJzaXplXFxuYT1taWQ6MFxcbm09YXVkaW8gOSBVRFAvVExTL1JUUC9TQVZQRiAwXFxuYz1JTiBJUDQgMTI3LjAuMC4xXFxuYT1ydGNwOjkgSU4gSVA0IDAuMC4wLjBcXG5hPXNlbmRvbmx5XFxuYT1ydGNwLW11eFxcbmE9cnRjcC1yc2l6ZVxcbmE9bWlkOjFcXG5cIik7dGhpcy5fcnRwQ2FwYWJpbGl0aWVzPWU7Y29uc3QgaT10aGlzLnJ0cENhcGFiaWxpdGllcy5zZW5kLG49dGhpcy5sb2NhbENhcGFiaWxpdGllcy5zZW5kO2Zvcihjb25zdCBlIG9mIHQubWVkaWFEZXNjcmlwdGlvbnMpe2lmKGUuYXR0cmlidXRlcy5pY2VVZnJhZz10aGlzLl9pY2VQYXJhbWV0ZXJzLmljZVVmcmFnLGUuYXR0cmlidXRlcy5pY2VQd2Q9dGhpcy5faWNlUGFyYW1ldGVycy5pY2VQd2QsZS5hdHRyaWJ1dGVzLmZpbmdlcnByaW50cz10aGlzLl9kdGxzUGFyYW1ldGVycy5maW5nZXJwcmludHMsZS5hdHRyaWJ1dGVzLmNhbmRpZGF0ZXM9dGhpcy5fY2FuZGlkYXRlcyxlLmF0dHJpYnV0ZXMuc2V0dXA9dGhpcy5zZXR1cCxcImFwcGxpY2F0aW9uXCI9PT1lLm1lZGlhLm1lZGlhVHlwZSYmKGUuYXR0cmlidXRlcy5zY3RwUG9ydD1cIjUwMDBcIiksXCJ2aWRlb1wiPT09ZS5tZWRpYS5tZWRpYVR5cGUpaWYoMD09PWkudmlkZW9Db2RlY3MubGVuZ3RoKXtjb25zdCB0PW4udmlkZW9Db2RlY3MuZmlsdGVyKChlPT57dmFyIHQsaTtyZXR1cm4gbnVsbD09PSh0PWUucnRwTWFwKXx8dm9pZCAwPT09dD92b2lkIDA6RG4oaT10LmVuY29kaW5nTmFtZS50b0xvd2VyQ2FzZSgpKS5jYWxsKGksXCJ2cDhcIil9KSl8fFtuLnZpZGVvQ29kZWNzWzBdXTtlLm1lZGlhLmZtdHM9dC5tYXAoKGU9PmUucGF5bG9hZFR5cGUudG9TdHJpbmcoMTApKSksZS5hdHRyaWJ1dGVzLnBheWxvYWRzPXQsZS5hdHRyaWJ1dGVzLmV4dG1hcHM9W119ZWxzZSBpZihlLm1lZGlhLmZtdHM9aS52aWRlb0NvZGVjcy5tYXAoKGU9PmUucGF5bG9hZFR5cGUudG9TdHJpbmcoMTApKSksZS5hdHRyaWJ1dGVzLnBheWxvYWRzPWkudmlkZW9Db2RlY3MsZS5hdHRyaWJ1dGVzLmV4dG1hcHM9aS52aWRlb0V4dGVuc2lvbnMsWEEoXCJQUkVMT0FEX01FRElBX0NPVU5UXCIpPjApe2NvbnN0e3NzcmNzOnQsc3NyY0dyb3VwczppfT16VShbe3NzcmNJZDpIRixydHg6WEEoXCJVU0VfU1VCX1JUWFwiKT80MDAwMTp2b2lkIDB9XSx0aGlzLmNuYW1lKTtlLmF0dHJpYnV0ZXMuc3NyY3M9dCxlLmF0dHJpYnV0ZXMuc3NyY0dyb3Vwcz1pfWlmKFwiYXVkaW9cIj09PWUubWVkaWEubWVkaWFUeXBlKWlmKDA9PT1pLmF1ZGlvQ29kZWNzLmxlbmd0aCl7Y29uc3QgdD1uLmF1ZGlvQ29kZWNzLmZpbHRlcigoZT0+e3ZhciB0LGk7cmV0dXJuIG51bGw9PT0odD1lLnJ0cE1hcCl8fHZvaWQgMD09PXQ/dm9pZCAwOkRuKGk9dC5lbmNvZGluZ05hbWUudG9Mb3dlckNhc2UoKSkuY2FsbChpLFwib3B1c1wiKX0pKXx8W24uYXVkaW9Db2RlY3NbMF1dO2UubWVkaWEuZm10cz10Lm1hcCgoZT0+ZS5wYXlsb2FkVHlwZS50b1N0cmluZygxMCkpKSxlLmF0dHJpYnV0ZXMucGF5bG9hZHM9dCxlLmF0dHJpYnV0ZXMuZXh0bWFwcz1bXX1lbHNlIGlmKGUubWVkaWEuZm10cz1pLmF1ZGlvQ29kZWNzLm1hcCgoZT0+ZS5wYXlsb2FkVHlwZS50b1N0cmluZygxMCkpKSxlLmF0dHJpYnV0ZXMucGF5bG9hZHM9aS5hdWRpb0NvZGVjcyxlLmF0dHJpYnV0ZXMuZXh0bWFwcz1pLmF1ZGlvRXh0ZW5zaW9ucyxveChlKSxYQShcIlBSRUxPQURfTUVESUFfQ09VTlRcIik+MCl7Y29uc3R7c3NyY3M6dCxzc3JjR3JvdXBzOml9PXpVKFt7c3NyY0lkOjJlNH1dLHRoaXMuY25hbWUpO2UuYXR0cmlidXRlcy5zc3Jjcz10LGUuYXR0cmlidXRlcy5zc3JjR3JvdXBzPWl9fXJldHVybiB0aGlzLnNlc3Npb25EZXNjPXQsdGhpcy5jdXJyZW50TWlkSW5kZXg9dC5tZWRpYURlc2NyaXB0aW9ucy5sZW5ndGgtMSx0aGlzLnNlc3Npb25EZXNjfXVwZGF0ZUNhbmRpZGF0ZXMoZSl7Y29uc3QgdD10aGlzLl9jYW5kaWRhdGVzLmZpbHRlcigoZT0+XCJ1ZHBcIj09PWUudHJhbnNwb3J0KSk7aWYoZT09PWxPLlRDUCl7aWYoMD09PXQubGVuZ3RoKXJldHVybjtpZihYQShcIlRDUF9DQU5ESURBVEVfT05MWVwiKSl7Y29uc3QgZT10aGlzLl9jYW5kaWRhdGVzLmZpbHRlcigoZT0+XCJ0Y3BcIj09PWUudHJhbnNwb3J0KSk7dC5mb3JFYWNoKCh0PT57LTE9PT1lLmZpbmRJbmRleCgoZT0+ZS5jb25uZWN0aW9uQWRkcmVzcz09PXQuY29ubmVjdGlvbkFkZHJlc3MpKSYmZS5wdXNoKEdGKEdGKHt9LHQpLHt9LHtmb3VuZGF0aW9uOlwidGNwY2FuZGlkYXRlXCIscHJpb3JpdHk6TnVtYmVyKHQucHJpb3JpdHkpLTErXCJcIix0cmFuc3BvcnQ6XCJ0Y3BcIixwb3J0Ok51bWJlcih0LnBvcnQpKzkwK1wiXCJ9KSl9KSksdGhpcy5fY2FuZGlkYXRlcz1lfWVsc2V7Y29uc3QgZT1bXTt0LmZvckVhY2goKHQ9PntlLnB1c2goR0YoR0Yoe30sdCkse30se2ZvdW5kYXRpb246XCJ0Y3BjYW5kaWRhdGVcIixwcmlvcml0eTpOdW1iZXIodC5wcmlvcml0eSktMStcIlwiLHRyYW5zcG9ydDpcInRjcFwiLHBvcnQ6TnVtYmVyKHQucG9ydCkrOTArXCJcIn0pKX0pKSx0aGlzLl9jYW5kaWRhdGVzPVsuLi50LC4uLmVdfX1lbHNlIGlmKGU9PT1sTy5SRUxBWSl7aWYoMCE9PXQubGVuZ3RoKXJldHVybjt7Y29uc3QgZT10aGlzLl9jYW5kaWRhdGVzLmZpbHRlcigoZT0+XCJ0Y3BcIj09PWUudHJhbnNwb3J0KSk7ZS5mb3JFYWNoKChlPT57dC5wdXNoKEdGKEdGKHt9LGUpLHt9LHtmb3VuZGF0aW9uOlwidWRwY2FuZGlkYXRlXCIscHJpb3JpdHk6TnVtYmVyKGUucHJpb3JpdHkpKzErXCJcIix0cmFuc3BvcnQ6XCJ1ZHBcIixwb3J0Ok51bWJlcihlLnBvcnQpLTkwK1wiXCJ9KSl9KSksdGhpcy5fY2FuZGlkYXRlcz1bLi4udCwuLi5lXX19ZWxzZSBpZigwPT09dC5sZW5ndGgpe3RoaXMuX2NhbmRpZGF0ZXMuZmlsdGVyKChlPT5cInRjcFwiPT09ZS50cmFuc3BvcnQpKS5mb3JFYWNoKChlPT57dC5wdXNoKEdGKEdGKHt9LGUpLHt9LHtmb3VuZGF0aW9uOlwidWRwY2FuZGlkYXRlXCIscHJpb3JpdHk6TnVtYmVyKGUucHJpb3JpdHkpKzErXCJcIix0cmFuc3BvcnQ6XCJ1ZHBcIixwb3J0Ok51bWJlcihlLnBvcnQpLTkwK1wiXCJ9KSl9KSksdGhpcy5fY2FuZGlkYXRlcz10fWVsc2UgdGhpcy5fY2FuZGlkYXRlcz10aGlzLl9jYW5kaWRhdGVzLmZpbHRlcigoZT0+XCJ0Y3BcIiE9PWUudHJhbnNwb3J0KSk7Zm9yKGNvbnN0IGUgb2YgdGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucyllLmF0dHJpYnV0ZXMuY2FuZGlkYXRlcz10aGlzLmNhbmRpZGF0ZXN9cmVzdGFydElDRShlKXtlPXNBKGUpLHRoaXMuX2ljZVBhcmFtZXRlcnM9ZSx0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmZvckVhY2goKHQ9Pnt0LmF0dHJpYnV0ZXMuaWNlVWZyYWc9ZS5pY2VVZnJhZyx0LmF0dHJpYnV0ZXMuaWNlUHdkPWUuaWNlUHdkfSkpfXByZWRpY3RSZWNlaXZpbmdNaWRzKGUpe2NvbnN0IHQ9W107Zm9yKGxldCBpPTA7aTxlO2krKyl0LnB1c2goKHRoaXMuY3VycmVudE1pZEluZGV4K2krMSkudG9TdHJpbmcoMTApKTtyZXR1cm4gdH1maW5kQXZhaWxhYmxlTWVkaWFJbmRleChlLHQpe3JldHVybiB0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmZpbmRJbmRleCgoaT0+e2NvbnN0IG49aS5tZWRpYS5tZWRpYVR5cGU9PT1lJiZcIjBcIiE9PWkubWVkaWEucG9ydCYmKFwic2VuZG9ubHlcIj09PWkuYXR0cmlidXRlcy5kaXJlY3Rpb258fFwic2VuZHJlY3ZcIj09PWkuYXR0cmlidXRlcy5kaXJlY3Rpb24pJiYwPT09aS5hdHRyaWJ1dGVzLnNzcmNzLmxlbmd0aDtpZihadigpKXtpZihuKXtjb25zdCBlPXRoaXMuZmlyZWZveFNzcmNNaWRNYXAuZ2V0KHRbMF0uc3NyY0lkKTtyZXR1cm4hKGV8fFwiMFwiIT09aS5hdHRyaWJ1dGVzLm1pZCYmXCIxXCIhPT1pLmF0dHJpYnV0ZXMubWlkKXx8ISghZXx8ZSE9PWkuYXR0cmlidXRlcy5taWQpfXJldHVybiExfXJldHVybiBufSkpfWNyZWF0ZU9yUmVjeWNsZURhdGFDaGFubmVsKCl7Zm9yKGNvbnN0IGUgb2YgdGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucylpZihcImFwcGxpY2F0aW9uXCI9PT1lLm1lZGlhLm1lZGlhVHlwZSlyZXR1cm57bWVkaWFEZXNjOmUsbmVlZEV4Y2hhbmdlU0RQOiExfTt0aGlzLmN1cnJlbnRNaWRJbmRleCs9MTtjb25zdCBlPVwiXCIuY29uY2F0KHRoaXMuY3VycmVudE1pZEluZGV4KSx0PXttZWRpYTp7bWVkaWFUeXBlOlwiYXBwbGljYXRpb25cIixwb3J0OldGLHByb3RvczpbXCJVRFBcIixcIkRUTFNcIixcIlNDVFBcIl0sZm10czpbXCJ3ZWJydGMtZGF0YWNoYW5uZWxcIl19LGNvbm5lY3Rpb25zOlt7bmV0dHlwZTpcIklOXCIsYWRkcnR5cGU6XCJJUDRcIixhZGRyZXNzOlwiMTI3LjAuMC4xXCJ9XSxiYW5kd2lkdGhzOltdLGF0dHJpYnV0ZXM6e2ljZVVmcmFnOnRoaXMuaWNlUGFyYW1ldGVycy5pY2VVZnJhZyxpY2VQd2Q6dGhpcy5pY2VQYXJhbWV0ZXJzLmljZVB3ZCx1bnJlY29nbml6ZWQ6W10sY2FuZGlkYXRlczp0aGlzLmNhbmRpZGF0ZXMsZXh0bWFwczpbXSxmaW5nZXJwcmludHM6dGhpcy5kdGxzUGFyYW1ldGVycy5maW5nZXJwcmludHMsaW1hZ2VhdHRyOltdLG1zaWRzOltdLHJlbW90ZUNhbmRpZGF0ZXNMaXN0OltdLHJpZHM6W10sc3NyY3M6W10sc3NyY0dyb3VwczpbXSxydGNwRmVlZGJhY2tXaWxkY2FyZHM6W10scGF5bG9hZHM6W10scnRjcDp7cG9ydDpcIjlcIixuZXRUeXBlOlwiSU5cIixhZGRyZXNzVHlwZTpcIklQNFwiLGFkZHJlc3M6XCIwLjAuMC4wXCJ9LHNldHVwOnRoaXMuc2V0dXAsbWlkOlwiXCIuY29uY2F0KGUpLHNjdHBQb3J0OlwiNTAwMFwifX07cmV0dXJuIHRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMucHVzaCh0KSx7bWVkaWFEZXNjOnQsbmVlZEV4Y2hhbmdlU0RQOiEwfX1jcmVhdGVPclJlY3ljbGVSZWN2TWVkaWEoZSx0LGksbixyLG8pe2NvbnN0IHM9ZS5fbWVkaWFTdHJlYW1UcmFjay5raW5kLGE9dGhpcy5ydHBDYXBhYmlsaXRpZXMucmVjdixjPXN4KHMsYSx0aGlzLmxvY2FsQ2FwYWJpbGl0aWVzLnNlbmQscz09PWRPLlZJREVPP246ciksZD1zPT09ZE8uVklERU8/YS52aWRlb0V4dGVuc2lvbnM6YS5hdWRpb0V4dGVuc2lvbnM7dGhpcy5jdXJyZW50TWlkSW5kZXgrPTE7Y29uc3QgbD1cIlwiLmNvbmNhdCh0aGlzLmN1cnJlbnRNaWRJbmRleCk7bGV0IHU9e21lZGlhOnttZWRpYVR5cGU6cyxwb3J0OldGLHByb3RvczpbXCJVRFBcIixcIlRMU1wiLFwiUlRQXCIsXCJTQVZQRlwiXSxmbXRzOmMubWFwKChlPT5lLnBheWxvYWRUeXBlLnRvU3RyaW5nKDEwKSkpfSxjb25uZWN0aW9uczpbe25ldHR5cGU6XCJJTlwiLGFkZHJ0eXBlOlwiSVA0XCIsYWRkcmVzczpcIjEyNy4wLjAuMVwifV0sYmFuZHdpZHRoczpbXSxhdHRyaWJ1dGVzOntpY2VVZnJhZzp0aGlzLmljZVBhcmFtZXRlcnMuaWNlVWZyYWcsaWNlUHdkOnRoaXMuaWNlUGFyYW1ldGVycy5pY2VQd2QsdW5yZWNvZ25pemVkOltdLGNhbmRpZGF0ZXM6dGhpcy5jYW5kaWRhdGVzLGV4dG1hcHM6ZCxmaW5nZXJwcmludHM6dGhpcy5kdGxzUGFyYW1ldGVycy5maW5nZXJwcmludHMsaW1hZ2VhdHRyOltdLG1zaWRzOltdLHJlbW90ZUNhbmRpZGF0ZXNMaXN0OltdLHJpZHM6W10sc3NyY3M6dCxzc3JjR3JvdXBzOltdLHJ0Y3BGZWVkYmFja1dpbGRjYXJkczpbXSxwYXlsb2FkczpjLHJ0Y3A6e3BvcnQ6XCI5XCIsbmV0VHlwZTpcIklOXCIsYWRkcmVzc1R5cGU6XCJJUDRcIixhZGRyZXNzOlwiMC4wLjAuMFwifSxzZXR1cDp0aGlzLnNldHVwLGRpcmVjdGlvbjppLHJ0Y3BNdXg6ITAscnRjcFJzaXplOiEwLG1pZDpcIlwiLmNvbmNhdChsKX19O3U9dGhpcy5tdW5nUmVjdk1lZGlhRHNlYyh1LGUsbyk7Y29uc3QgaD10aGlzLmZpbmRGaXJzdENsb3NlZE1lZGlhKHMpO2lmKGgpe2NvbnN0IGU9dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5pbmRleE9mKGgpO3RoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnNbZV09dX1lbHNlIHRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMucHVzaCh1KTtyZXR1cm4gdX11cGRhdGVSZW1vdGVDb2RlYyhlLHQsaSl7Y29uc3Qgbj1bLi4ubmV3IFNldCh0aGlzLl9ydHBDYXBhYmlsaXRpZXMucmVjdi52aWRlb0NvZGVjcy5tYXAoKGU9PmUucnRwTWFwJiZlLnJ0cE1hcC5lbmNvZGluZ05hbWUudG9Mb3dlckNhc2UoKXx8XCJcIikpLmZpbHRlcigoZT0+e3ZhciB0O3JldHVybiBEbih0PU9iamVjdC5rZXlzKGViKSkuY2FsbCh0LGUpfSkpKV0scj1uZXcgU2V0KHQpO2lmKG4uZXZlcnkoKGU9PnIuaGFzKGUpKSkpcmV0dXJuIGZiLmRlYnVnKFwiY29kZWNzIGhhcyBub3QgY2hhbmdlZCwgbm8gbmVlZCB0byB1cGRhdGVSZW1vdGVDb2RlYywgY29kZWNzOiBcIi5jb25jYXQodCkpLCExO2NvbnN0IG89dGhpcy5fcnRwQ2FwYWJpbGl0aWVzLnJlY3YudmlkZW9Db2RlY3MuZmlsdGVyKChlPT50LnNvbWUoKHQ9Pnt2YXIgaTtyZXR1cm4gRG4oaT1lLnJ0cE1hcCYmZS5ydHBNYXAuZW5jb2RpbmdOYW1lLnRvTG93ZXJDYXNlKCl8fFwiXCIpLmNhbGwoaSx0KX0pKSkpO2lmKDA9PT1vLmxlbmd0aClyZXR1cm4gZmIuZGVidWcoXCJ1cGRhdGVSZW1vdGVDb2RlYyBmYWlsZWQsIGJlY2F1c2UgY2Fubm90IGZpbmQgbWF0Y2hlZCBjb2RlYywgcmVtb3RlQ2FwYWJpbGl0aWVzIGNvZGVjczogXCIuY29uY2F0KG4sXCIgY29kZWNzOiBcIikuY29uY2F0KHQpKSwhMTtjb25zdCBzPVsuLi5uZXcgU2V0KG8ubWFwKChlPT5lLnJ0cE1hcCYmZS5ydHBNYXAuZW5jb2RpbmdOYW1lLnRvTG93ZXJDYXNlKCl8fFwiXCIpKSldO2xldCBhO2lmKGZiLmRlYnVnKFwidXBkYXRlUmVtb3RlQ29kZWMsIGZyb20gXCIuY29uY2F0KG4sXCIgdG8gXCIpLmNvbmNhdChzKSksMD09PWUubGVuZ3RoKWE9dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5maWx0ZXIoKGU9PlwidmlkZW9cIj09PWUubWVkaWEubWVkaWFUeXBlJiZcInJlY3Zvbmx5XCI9PT1lLmF0dHJpYnV0ZXMuZGlyZWN0aW9uKSk7ZWxzZSBpZihhPXRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuZmlsdGVyKCh0PT50LmF0dHJpYnV0ZXMubWlkJiZEbihlKS5jYWxsKGUsdC5hdHRyaWJ1dGVzLm1pZCkmJlwicmVjdm9ubHlcIj09PXQuYXR0cmlidXRlcy5kaXJlY3Rpb24pKSxhLmxlbmd0aCE9PWUubGVuZ3RoKXJldHVybiBmYi5kZWJ1ZyhcInVwZGF0ZVJlbW90ZUNvZGVjIGZhaWxlZCwgYmVjYXVzZSBjYW5ub3QgZmluZCBtaWRzLCBtaWRzOiBcIi5jb25jYXQoZSxcIiwgY29kZWNzOiBcIikuY29uY2F0KHQpKSwhMTtpZihYQShcIlVTRV9QVUJfUlRYXCIpfHxYQShcIlVTRV9TVUJfUlRYXCIpKXtjb25zdCBlPWF4KG8sdGhpcy5ydHBDYXBhYmlsaXRpZXMucmVjdi52aWRlb0NvZGVjcyk7by5wdXNoKC4uLmUpfXRoaXMuX3J0cENhcGFiaWxpdGllcy5yZWN2LnZpZGVvQ29kZWNzPW87Y29uc3QgYz10aGlzLmxvY2FsQ2FwYWJpbGl0aWVzLnNlbmQsZD10aGlzLnJ0cENhcGFiaWxpdGllcy5yZWN2LGw9c3goZE8uVklERU8sZCxjLGkpO3JldHVybiBhLmZvckVhY2goKGU9Pntjb25zdCB0PWwubWFwKChlPT5lLnBheWxvYWRUeXBlLnRvU3RyaW5nKDEwKSkpO2ZiLmRlYnVnKFwidXBkYXRlUmVtb3RlQ29kZWMgbWlkOiBcIi5jb25jYXQoZS5hdHRyaWJ1dGVzLm1pZCxcIiwgZnJvbSBcIikuY29uY2F0KGUuYXR0cmlidXRlcy5wYXlsb2FkcyxcIiB0byBcIikuY29uY2F0KGwpKSxlLmF0dHJpYnV0ZXMucGF5bG9hZHM9bCxlLm1lZGlhLmZtdHM9dH0pKSwhMH1jcmVhdGVPclJlY3ljbGVTZW5kTWVkaWEoZSx0LGksbixyKXtjb25zdCBvPXRoaXMucnRwQ2FwYWJpbGl0aWVzLnNlbmQscz1lPT09ZE8uVklERU8/by52aWRlb0NvZGVjczpvLmF1ZGlvQ29kZWNzLGE9ZT09PWRPLlZJREVPP28udmlkZW9FeHRlbnNpb25zOm8uYXVkaW9FeHRlbnNpb25zO3RoaXMuY3VycmVudE1pZEluZGV4Kz0xO2NvbnN0IGM9XCJcIi5jb25jYXQodGhpcy5jdXJyZW50TWlkSW5kZXgpO2xldCBkPXttZWRpYTp7bWVkaWFUeXBlOmUscG9ydDpXRixwcm90b3M6W1wiVURQXCIsXCJUTFNcIixcIlJUUFwiLFwiU0FWUEZcIl0sZm10czpzLm1hcCgoZT0+ZS5wYXlsb2FkVHlwZS50b1N0cmluZygxMCkpKX0sY29ubmVjdGlvbnM6W3tuZXR0eXBlOlwiSU5cIixhZGRydHlwZTpcIklQNFwiLGFkZHJlc3M6XCIxMjcuMC4wLjFcIn1dLGJhbmR3aWR0aHM6W10sYXR0cmlidXRlczp7aWNlVWZyYWc6dGhpcy5pY2VQYXJhbWV0ZXJzLmljZVVmcmFnLGljZVB3ZDp0aGlzLmljZVBhcmFtZXRlcnMuaWNlUHdkLHVucmVjb2duaXplZDpbXSxjYW5kaWRhdGVzOnRoaXMuY2FuZGlkYXRlcyxleHRtYXBzOmEsZmluZ2VycHJpbnRzOnRoaXMuZHRsc1BhcmFtZXRlcnMuZmluZ2VycHJpbnRzLGltYWdlYXR0cjpbXSxtc2lkczpbXSxyZW1vdGVDYW5kaWRhdGVzTGlzdDpbXSxyaWRzOltdLHNzcmNzOnQsc3NyY0dyb3VwczppLHJ0Y3BGZWVkYmFja1dpbGRjYXJkczpbXSxwYXlsb2FkczpzLHJ0Y3A6e3BvcnQ6XCI5XCIsbmV0VHlwZTpcIklOXCIsYWRkcmVzc1R5cGU6XCJJUDRcIixhZGRyZXNzOlwiMC4wLjAuMFwifSxzZXR1cDp0aGlzLnNldHVwLGRpcmVjdGlvbjpuLHJ0Y3BNdXg6ITAscnRjcFJzaXplOiEwLG1pZDpcIlwiLmNvbmNhdChjKX19O2Q9dGhpcy5tdW5nU2VuZE1lZGlhRGVzYyhkLHIpO2NvbnN0IGw9dGhpcy5maW5kRmlyc3RDbG9zZWRNZWRpYShlKTtpZihsKXtjb25zdCBlPXRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuaW5kZXhPZihsKTt0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zW2VdPWR9ZWxzZSB0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLnB1c2goZCk7cmV0dXJuIGR9dXBkYXRlQnVuZGxlTWlkcygpe3RoaXMuc2Vzc2lvbkRlc2MuYXR0cmlidXRlcy5ncm91cHNbMF0uaWRlbnRpZmljYXRpb25UYWc9dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9ucy5maWx0ZXIoKGU9PlwiMFwiIT09ZS5tZWRpYS5wb3J0KSkubWFwKChlPT5lLmF0dHJpYnV0ZXMubWlkKSl9bXVuZ1JlY3ZNZWRpYURzZWMoZSx0LGkpe2NvbnN0IG49c0EoZSk7cmV0dXJuIFhVKG4pLEpVKG4sdCksUVUobix0KSxaVShuKSwkVShuLGksdGhpcy5sb2NhbENhcGFiaWxpdGllcy5zZW5kKSxufW11bmdTZW5kTWVkaWFEZXNjKGUsdCl7Y29uc3QgaT1zQShlKTtyZXR1cm4gJFUoaSx0LHRoaXMubG9jYWxDYXBhYmlsaXRpZXMucmVjdiksb3goaSksaX11cGRhdGVSZWN2TWVkaWEoZSx0KXtjb25zdCBpPXRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuZmluZEluZGV4KCh0PT50LmF0dHJpYnV0ZXMubWlkPT09ZSkpO2lmKC0xIT09aSl7Y29uc3QgZT10aGlzLm11bmdSZWN2TWVkaWFEc2VjKHRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnNbaV0sdCk7dGhpcy5zZXNzaW9uRGVzYy5tZWRpYURlc2NyaXB0aW9uc1tpXT1lfX1idW1wTWlkKGUpe3RoaXMuY3VycmVudE1pZEluZGV4Kz1lfWZpbmRGaXJzdENsb3NlZE1lZGlhKGUpe3JldHVybiB0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmZpbmQoKHQ9Plp2KCk/XCIwXCI9PT10Lm1lZGlhLnBvcnQmJnQubWVkaWEubWVkaWFUeXBlPT09ZTpcIjBcIj09PXQubWVkaWEucG9ydCkpfWZpbmRQcmVsb2FkTWVkaWFEZXNjKGUpe3JldHVybiB0aGlzLnNlc3Npb25EZXNjLm1lZGlhRGVzY3JpcHRpb25zLmZpbmQoKHQ9Pnt2YXIgaTtyZXR1cm4obnVsbD09PShpPXQuYXR0cmlidXRlcyl8fHZvaWQgMD09PWl8fG51bGw9PT0oaT1pLnNzcmNzWzBdKXx8dm9pZCAwPT09aT92b2lkIDA6aS5zc3JjSWQpPT09ZVswXS5zc3JjSWR9KSl9Z2V0U1NSQyhlKXt2YXIgdDtyZXR1cm4gbnVsbD09PSh0PXRoaXMuc2Vzc2lvbkRlc2MubWVkaWFEZXNjcmlwdGlvbnMuZmluZCgodD0+dC5hdHRyaWJ1dGVzLm1pZD09PWUpKSl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuYXR0cmlidXRlcy5zc3Jjc319ZnVuY3Rpb24gWUYoZSx0KXt2YXIgaT1PYmplY3Qua2V5cyhlKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgbj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO3QmJihuPW4uZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHQpLmVudW1lcmFibGV9KSkpLGkucHVzaC5hcHBseShpLG4pfXJldHVybiBpfWZ1bmN0aW9uIHFGKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBpPW51bGwhPWFyZ3VtZW50c1t0XT9hcmd1bWVudHNbdF06e307dCUyP1lGKE9iamVjdChpKSwhMCkuZm9yRWFjaCgoZnVuY3Rpb24odCl7RmcoZSx0LGlbdF0pfSkpOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoaSkpOllGKE9iamVjdChpKSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGksdCkpfSkpfXJldHVybiBlfWxldCB6Rj1mdW5jdGlvbihlKXtyZXR1cm4gZS5CQU5EV0lEVEg9XCJiYW5kd2lkdGhcIixlLkNQVT1cImNwdVwiLGUuTk9ORT1cIm5vbmVcIixlLk9USEVSPVwib3RoZXJcIixlfSh7fSk7dmFyIEpGPWZ1bmN0aW9uKGUpe3JldHVybiBlW2UuRE9XTj0wXT1cIkRPV05cIixlW2UuVVA9MV09XCJVUFwiLGV9KEpGfHx7fSk7Y29uc3QgWEY9bmV3IE1hcDtmdW5jdGlvbiBRRihlLHQsaSxuKXtsZXR7c2NhbGU6cn09ZTtpZigwPT09ciYmbj09PUpGLlVQfHxyPj10Lmxlbmd0aC0xJiZuPT09SkYuRE9XTilyZXR1cm4gZTtsZXQgbz1xRihxRih7fSxlKSx7fSx7c2NhbGU6bj09PUpGLkRPV04/KytyOi0tcn0pO3N3aXRjaChpKXtjYXNlXCJtYWludGFpbi1mcmFtZXJhdGVcIjpvPXFGKHFGKHt9LG8pLHRbcl0ubW90aW9uKTticmVhaztjYXNlXCJtYWludGFpbi1yZXNvbHV0aW9uXCI6bz1xRihxRih7fSxvKSx0W3JdLmRldGFpbCk7YnJlYWs7Y2FzZVwiYmFsYW5jZWRcIjpvPXFGKHFGKHt9LG8pLHRbcl0uYmFsYW5jZWQpfXJldHVybiBvfWZ1bmN0aW9uIFpGKGUsdCl7aWYodCl7Y29uc3QgaT17b3ZlclVzZTowLHVuZGVyVXNlOjAsYWRhcHRhdGlvbkxpc3Q6JEYodCl9O1hGLnNldChlLGkpfWVsc2UgWEYuZGVsZXRlKGUpfWZ1bmN0aW9uICRGKGUpe2NvbnN0IHQ9cUYoe30sZSkse2JpdHJhdGVNYXg6aSxmcmFtZVJhdGU6bixzY2FsZVJlc29sdXRpb25Eb3duQnk6cixiaXRyYXRlTWluOm99PXQse01JTl9GUkFNRV9SQVRFOnMsTUFYX1RIUkVTSE9MRF9GUkFNRVJBVEU6YSxNQVhfU0NBTEU6YyxCSVRSQVRFX01JTl9USFJFU0hPTEQ6ZCxCSVRSQVRFX01BWF9USFJFU0hPTEQ6bCxCV0VfU0NBTEVfVVBfVEhSRVNIT0xEOnUsQldFX1NDQUxFX0RPV05fVEhSRVNIT0xEOmgsUEVSRl9TQ0FMRV9ET1dOX1RIUkVTSE9MRDpwLFBFUkZfU0NBTEVfVVBfVEhSRVNIT0xEOl8sQkFMQU5DRV9CSVRSQVRFX0ZBQ1RPUjpFLEJBTEFOQ0VfRlJBTUVSQVRFX0ZBQ1RPUjpmLEJBTEFOQ0VfUkVTT0xVVElPTl9GQUNUT1I6bSxNT1RJT05fUkVTT0xVVElPTl9GQUNUT1I6VCxNT1RJT05fQklUUkFURV9GQUNUT1I6UyxERVRBSUxfRlJBTUVSQVRFX0ZBQ1RPUjpnLERFVEFJTF9CSVRSQVRFX0ZBQ1RPUjpSfT1ZQSxDPU1hdGgubWluKHQuZnJhbWVSYXRlLGEpLEk9W3tzY2FsZTowLHRocmVzaG9sZDp7YndlX2Rvd246TWF0aC5yb3VuZChNYXRoLnBvdyhoLDEpKmkpLGJ3ZV91cDppLGZwc19kb3duOk1hdGgucm91bmQoTWF0aC5wb3cocCwxKSpDKSxmcHNfdXA6bn0sYmFsYW5jZWQ6e3NjYWxlUmVzb2x1dGlvbkRvd25CeToxLGZyYW1lUmF0ZTpuLGJpdHJhdGVNYXg6aSxiaXRyYXRlTWluOm99LG1vdGlvbjp7c2NhbGVSZXNvbHV0aW9uRG93bkJ5OjEsZnJhbWVSYXRlOm4sYml0cmF0ZU1heDppLGJpdHJhdGVNaW46b30sZGV0YWlsOntzY2FsZVJlc29sdXRpb25Eb3duQnk6MSxmcmFtZVJhdGU6bixiaXRyYXRlTWF4OmksYml0cmF0ZU1pbjpvfX1dO2ZvcihsZXQgZT0xO2U8PWM7ZSsrKXtjb25zdCB0PXtid2VfdXA6TWF0aC5yb3VuZChNYXRoLnBvdyh1LGUpKmkpLGJ3ZV9kb3duOk1hdGgucm91bmQoTWF0aC5wb3coaCxlKzEpKmkpLGZwc191cDpNYXRoLnJvdW5kKE1hdGgucG93KF8sZSkqQyksZnBzX2Rvd246TWF0aC5yb3VuZChNYXRoLnBvdyhwLGUrMSkqQyl9LGE9e3NjYWxlUmVzb2x1dGlvbkRvd25CeTpyL01hdGgucG93KG0sZSksZnJhbWVSYXRlOk1hdGgubWF4KE1hdGgucm91bmQoTWF0aC5wb3coZixlKSpuKSxzKSxiaXRyYXRlTWF4Ok1hdGgubWF4KE1hdGgucm91bmQoTWF0aC5wb3coRSxlKSppKSxsKSxiaXRyYXRlTWluOk1hdGgubWF4KE1hdGgucm91bmQoTWF0aC5wb3coRSxlKSpvKSxkKX0sYz17c2NhbGVSZXNvbHV0aW9uRG93bkJ5OnIvTWF0aC5wb3coVCxlKSxmcmFtZVJhdGU6bixiaXRyYXRlTWF4Ok1hdGgubWF4KE1hdGgucm91bmQoTWF0aC5wb3coUyxlKSppKSxsKSxiaXRyYXRlTWluOk1hdGgubWF4KE1hdGgucm91bmQoTWF0aC5wb3coUyxlKSpvKSxkKX0sdj17c2NhbGVSZXNvbHV0aW9uRG93bkJ5OjEsZnJhbWVSYXRlOk1hdGgubWF4KE1hdGgucm91bmQoTWF0aC5wb3coZyxlKSpuKSxzKSxiaXRyYXRlTWF4Ok1hdGgubWF4KE1hdGgucm91bmQoTWF0aC5wb3coUixlKSppKSxsKSxiaXRyYXRlTWluOk1hdGgubWF4KE1hdGgucm91bmQoTWF0aC5wb3coUixlKSpvKSxkKX07SS5wdXNoKHtzY2FsZTplLHRocmVzaG9sZDp0LGJhbGFuY2VkOmEsbW90aW9uOmMsZGV0YWlsOnZ9KX1yZXR1cm4gSX1mdW5jdGlvbiBlQihlLHQsaSxuLHIsbyl7Y29uc3Qgcz1YRi5nZXQoZSl8fHtvdmVyVXNlOjAsdW5kZXJVc2U6MCxhZGFwdGF0aW9uTGlzdDokRihyKX0se2FkYXB0YXRpb25MaXN0OmF9PXM7WEYuc2V0KGUscyk7Y29uc3R7T1ZFUlVTRV9USU1FU19USFJFU0hPTEQ6YyxVTkRFUlVTRV9USU1FU19USFJFU0hPTEQ6ZH09WUEse3NjYWxlOmx9PW47bGV0IHUsaDtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdCYmdD4wJiZmdW5jdGlvbihlLHQsaSxuKXtpZih0Pj1pLmxlbmd0aClyZXR1cm4hMTtsZXR7dGhyZXNob2xkOntmcHNfZG93bjpyfX09aVt0XTtyZXR1cm4gWEEoXCJGT1JDRV9BR19ISUdIX0ZSQU1FUkFURVwiKSYmXCJtYWludGFpbi1mcmFtZXJhdGVcIj09PW4mJihyPWlbMF0udGhyZXNob2xkLmZwc19kb3duKSxlPHJ9KHQsbCxhLG8pJiYocy5vdmVyVXNlKyssaD16Ri5DUFUscy5vdmVyVXNlPmMpfHxcIm51bWJlclwiPT10eXBlb2YgaSYmaT4wJiZmdW5jdGlvbihlLHQsaSl7aWYodD49aS5sZW5ndGgpcmV0dXJuITE7Y29uc3R7dGhyZXNob2xkOntid2VfZG93bjpufX09aVt0XTtyZXR1cm4gZTxufShpLGwsYSkmJihzLm92ZXJVc2UrKyxoPXpGLkJBTkRXSURUSCxzLm92ZXJVc2U+Yyk/KHMub3ZlclVzZT0wLHMudW5kZXJVc2U9MCx1PVFGKG4sYSxvLEpGLkRPV04pLFt1LGhdKTooXCJudW1iZXJcIj09dHlwZW9mIHQmJnQ+MCYmXCJudW1iZXJcIj09dHlwZW9mIGkmJmk+MCYmZnVuY3Rpb24oZSx0LGksbil7aWYoMD09PXQpcmV0dXJuO2xldHt0aHJlc2hvbGQ6e2Zwc191cDpyfX09aVt0XTtyZXR1cm4gWEEoXCJGT1JDRV9BR19ISUdIX0ZSQU1FUkFURVwiKSYmXCJtYWludGFpbi1mcmFtZXJhdGVcIj09PW4mJihyPWlbMV0udGhyZXNob2xkLmZwc191cCksZT5yfSh0LGwsYSxvKSYmZnVuY3Rpb24oZSx0LGkpe2lmKDA9PT10KXJldHVybjtjb25zdHt0aHJlc2hvbGQ6e2J3ZV91cDpufX09aVt0XTtyZXR1cm4gZT5ufShpLGwsYSkmJihzLnVuZGVyVXNlKysscy51bmRlclVzZT5kJiYocy5vdmVyVXNlPTAscy51bmRlclVzZT0wLHU9UUYobixhLG8sSkYuVVApLDA9PT11LnNjYWxlJiYoaD16Ri5OT05FKSkpLFt1LGhdKX1mdW5jdGlvbiB0QihlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gaUIoZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/dEIoT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6dEIoT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9ZnVuY3Rpb24gbkIoZSl7dmFyIHQ7cmV0dXJuISFYQShcIkVOQUJMRV9BR19BREFQVEFUSU9OXCIpJiYoISEoZSBpbnN0YW5jZW9mIGNVfHxEbih0PWUuX2hpbnRzKS5jYWxsKHQsbUwuQ1VTVE9NX1RSQUNLKSkmJighIVhBKFwiRk9SQ0VfU1VQUE9SVF9BR19BREFQVEFUSU9OXCIpfHwhIShmdW5jdGlvbihlKXtjb25zdCB0PUh2KCk7aWYodC5vcyE9PUZ2LklPU3x8IXQub3NWZXJzaW9uKXJldHVybiExO2NvbnN0IGk9dC5vc1ZlcnNpb24uc3BsaXQoXCIuXCIpO3JldHVybiBOdW1iZXIoaVswXSk+PWV9KDE0KSYmcnkoMTcsNCwhMCl8fG55KDE0KSYmb3koMTcsNCwhMCkpKSl9Y29uc3QgckI9bmV3IE1hcDtmdW5jdGlvbiBvQihlLHQpe2NvbnN0IGk9ckIuZ2V0KGUpO2lmKGkpe2NvbnN0e3RpbWVyOnR9PWk7d2luZG93LmNsZWFyVGltZW91dCh0KSxyQi5kZWxldGUoZSl9dC5xdWFsaXR5TGltaXRhdGlvblJlYXNvbj16Ri5OT05FLFpGKGUpfXZhciBzQjtmdW5jdGlvbiBhQihlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gY0IoZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/YUIoT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6YUIoT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9bGV0IGRCPShzQj1jbGFzcyBlIGV4dGVuZHMgY097Z2V0IGN1cnJlbnRMb2NhbERlc2NyaXB0aW9uKCl7cmV0dXJuIHRoaXMucGVlckNvbm5lY3Rpb24uY3VycmVudExvY2FsRGVzY3JpcHRpb259Z2V0IGN1cnJlbnRSZW1vdGVEZXNjcmlwdGlvbigpe3JldHVybiB0aGlzLnBlZXJDb25uZWN0aW9uLmN1cnJlbnRSZW1vdGVEZXNjcmlwdGlvbn1nZXQgcGVlckNvbm5lY3Rpb25TdGF0ZSgpe3JldHVybiB0aGlzLnBlZXJDb25uZWN0aW9uLmNvbm5lY3Rpb25TdGF0ZX1nZXQgaWNlQ29ubmVjdGlvblN0YXRlKCl7cmV0dXJuIHRoaXMucGVlckNvbm5lY3Rpb24uaWNlQ29ubmVjdGlvblN0YXRlfWdldCBkdGxzVHJhbnNwb3J0U3RhdGUoKXt2YXIgZSx0O3JldHVybiBudWxsIT09KGU9bnVsbD09PSh0PXRoaXMucGVlckNvbm5lY3Rpb24uZ2V0UmVjZWl2ZXJzKClbMF0pfHx2b2lkIDA9PT10fHxudWxsPT09KHQ9dC50cmFuc3BvcnQpfHx2b2lkIDA9PT10P3ZvaWQgMDp0LnN0YXRlKSYmdm9pZCAwIT09ZT9lOm51bGx9Z2V0IGxvY2FsQ29kZWNzKCl7cmV0dXJuWy4uLm5ldyBTZXQodGhpcy5sb2NhbENhcGFiaWxpdGllcyYmdGhpcy5sb2NhbENhcGFiaWxpdGllcy5zZW5kLnZpZGVvQ29kZWNzLm1hcCgoZT0+ZS5ydHBNYXAmJmUucnRwTWFwLmVuY29kaW5nTmFtZS50b0xvd2VyQ2FzZSgpfHxcIlwiKSkuZmlsdGVyKChlPT57dmFyIHQ7cmV0dXJuIERuKHQ9T2JqZWN0LmtleXMoZWIpKS5jYWxsKHQsZSl9KSkpXX1jb25zdHJ1Y3Rvcih0LGkpe3N1cGVyKHQsaSksRmcodGhpcyxcInN0b3JlXCIsdm9pZCAwKSxGZyh0aGlzLFwicGVlckNvbm5lY3Rpb25cIix2b2lkIDApLEZnKHRoaXMsXCJpZFwiLFRBKDUsXCJjb25uZWN0aW9uLVwiKSksRmcodGhpcyxcInJlbW90ZVNEUFwiLHZvaWQgMCksRmcodGhpcyxcImluaXRpYWxPZmZlclwiLHZvaWQgMCksRmcodGhpcyxcInRyYW5zcG9ydEV2ZW50UmVjZWl2ZXJcIix2b2lkIDApLEZnKHRoaXMsXCJzdGF0c0ZpbHRlclwiLHZvaWQgMCksRmcodGhpcyxcImV4dGVuc2lvblwiLHt1c2VYUjpYQShcIlVTRV9YUlwiKX0pLEZnKHRoaXMsXCJsb2NhbENhcGFiaWxpdGllc1wiLHZvaWQgMCksRmcodGhpcyxcInJlbW90ZUNvZGVjc1wiLHZvaWQgMCksRmcodGhpcyxcImxvY2FsQ2FuZGlkYXRlQ291bnRcIiwwKSxGZyh0aGlzLFwiYWxsQ2FuZGlkYXRlc1JlY2VpdmVkXCIsITEpLEZnKHRoaXMsXCJpc1ByZWFsbG9jYXRpb25cIiwhMSksRmcodGhpcyxcInByZVNTUkNNYXBcIixuZXcgTWFwKSxGZyh0aGlzLFwiZGF0YVN0cmVhbUNoYW5uZWxNYXBcIixuZXcgTWFwKSxGZyh0aGlzLFwiZXN0YWJsaXNoUHJvbWlzZVwiLHZvaWQgMCksRmcodGhpcyxcInJlY292ZXJlZERhdGFDaGFubmVsSWRzXCIsW10pLEZnKHRoaXMsXCJjdXJyZW50RGF0YUNoYW5uZWxJZFwiLDEpLEZnKHRoaXMsXCJtdXRleFwiLG5ldyBOQShcIlAyUENvbm5lY3Rpb24tbXV0ZXhcIikpLEZnKHRoaXMsXCJxdWFsaXR5TGltaXRhdGlvblJlYXNvblwiLHpGLk5PTkUpLHRoaXMuc3RvcmU9aSx0aGlzLnBlZXJDb25uZWN0aW9uPW5ldyBSVENQZWVyQ29ubmVjdGlvbihlLnJlc29sdmVQQ0NvbmZpZ3VyYXRpb24odCkse29wdGlvbmFsOlt7Z29vZ0RzY3A6ITB9XX0pLHRoaXMuc3RhdHNGaWx0ZXI9eFYodGhpcy5wZWVyQ29ubmVjdGlvbixYQShcIlNUQVRTX1VQREFURV9JTlRFUlZBTFwiKSx2b2lkIDAsWnYoKT8xMjAwOnZvaWQgMCksdGhpcy5iaW5kUENFdmVudHMoKSx0aGlzLmJpbmRTdGF0c0V2ZW50cygpLHRoaXMuc3RvcmUucDJwSWQ9dGhpcy5zdG9yZS5wMnBJZCsxLHRoaXMuZXN0YWJsaXNoUHJvbWlzZT10aGlzLmVzdGFibGlzaCgpfWdldFByZU1lZGlhKGUpe2NvbnN0IHQ9dGhpcy5wcmVTU1JDTWFwLmdldChlKTtpZih2b2lkIDAhPT10KXtjb25zdCBlPXRoaXMucGVlckNvbm5lY3Rpb24uZ2V0VHJhbnNjZWl2ZXJzKCkuZmluZCgoZT0+ZS5taWQ9PT10KSk7aWYoZSlyZXR1cm57dHJhbnNjZWl2ZXI6ZSx0cmFjazplLnJlY2VpdmVyLnRyYWNrLGlkOnR9fX1hc3luYyB1cGRhdGVSZW1vdGVSVFBDYXBhYmlsaXRpZXMoZSx0KXtpZih0aGlzLnJlbW90ZUNvZGVjcz10LCF0aGlzLnJlbW90ZVNEUClyZXR1cm4gdm9pZCBmYi5kZWJ1ZyhcIltQMlBDb25uZWN0aW9uXSBjYW5ub3QgdXBkYXRlUmVtb3RlUlRQQ2FwYWJpbGl0aWVzIGJlZm9yZSByZW1vdGUgU0RQIGNyZWF0ZWQsIGxvY2FsIGNvZGVjczogXCIuY29uY2F0KHRoaXMubG9jYWxDb2RlY3MsXCIsIGNvZGVjczogXCIpLmNvbmNhdCh0KSk7aWYodGhpcy5yZW1vdGVTRFAudXBkYXRlUmVtb3RlQ29kZWMoZSx0LHRoaXMuc3RvcmUuY29kZWMpKXtjb25zdCBlPWF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uY3JlYXRlT2ZmZXIoKSx0PXRoaXMubG9nU0RQRXhjaGFuZ2UoZS5zZHB8fFwiXCIsXCJvZmZlclwiLFwibG9jYWxcIixcIm11dGVMb2NhbFwiKTthd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLnNldExvY2FsRGVzY3JpcHRpb24oZSk7Y29uc3QgaT10aGlzLnJlbW90ZVNEUC50b1N0cmluZygpO251bGw9PXR8fHQoaSksYXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcImFuc3dlclwiLHNkcDppfSl9ZWxzZSBmYi5kZWJ1ZyhcIltQMlBDb25uZWN0aW9uXSB1cGRhdGVSZW1vdGVSVFBDYXBhYmlsaXRpZXMgbm8gbmVlZCB0byBleGNoYW5nZSBTRFAuXCIpfWFzeW5jIGVzdGFibGlzaCgpe3RyeXt0aGlzLnBlZXJDb25uZWN0aW9uLmFkZFRyYW5zY2VpdmVyKFwidmlkZW9cIix7ZGlyZWN0aW9uOlwicmVjdm9ubHlcIn0pLHRoaXMucGVlckNvbm5lY3Rpb24uYWRkVHJhbnNjZWl2ZXIoXCJhdWRpb1wiLHtkaXJlY3Rpb246XCJyZWN2b25seVwifSk7Y29uc3QgZT1hd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLmNyZWF0ZU9mZmVyKCk7aWYoIWUuc2RwKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBnZXQgaW5pdGlhbE9mZmVyLnNkcCB3aGVuIHRyeWluZyB0byBlc3RhYmxpc2ggUGVlckNvbm5lY3Rpb24uXCIpO2NvbnN0IHQ9SFUoZS5zZHApLGk9YXdhaXQgdHgoe2ZpbHRlclJUWDohWEEoXCJVU0VfUFVCX1JUWFwiKSYmIVhBKFwiVVNFX1NVQl9SVFhcIiksZmlsdGVyVmlkZW9GZWM6WEEoXCJGSUxURVJfVklERU9fRkVDXCIpLGZpbHRlckF1ZGlvRmVjOlhBKFwiRklMVEVSX0FVRElPX0ZFQ1wiKSxmaWx0ZXJWaWRlb0NvZGVjOlhBKFwiRklMVEVSX1ZJREVPX0NPREVDXCIpfSx0aGlzLmV4dGVuc2lvbik7cmV0dXJuIHRoaXMubG9jYWxDYXBhYmlsaXRpZXM9cngoaSksdGhpcy5pbml0aWFsT2ZmZXI9ZSxjQihjQih7fSx0KSx7fSx7cnRwQ2FwYWJpbGl0aWVzOmksb2ZmZXJTRFA6ZS5zZHB9KX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuR0VUX0xPQ0FMX0NPTk5FQ1RJT05fUEFSQU1TX0ZBSUxFRCxlLnRvU3RyaW5nKCkpfX1hc3luYyBjb25uZWN0KGUpe3RyeXtpZighdGhpcy5pbml0aWFsT2ZmZXIpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGVzdGFibGlzaCBQMlBDb25uZWN0aW9uIHdpdGhvdXQgaW5pdGlhbCBvZmZlci5cIik7dGhpcy5yZW1vdGVTRFA9bmV3IEtGKGNCKGNCKHt9LGUpLHt9LHtsb2NhbENhcGFiaWxpdGllczp0aGlzLmxvY2FsQ2FwYWJpbGl0aWVzfSkpLGUucHJlYWxsb2NhdGlvbiYmKHRoaXMuaXNQcmVhbGxvY2F0aW9uPSEwKSxBcnJheS5pc0FycmF5KHRoaXMucmVtb3RlQ29kZWNzKSYmdGhpcy5yZW1vdGVDb2RlY3MubGVuZ3RoPjAmJnRoaXMucmVtb3RlU0RQLnVwZGF0ZVJlbW90ZUNvZGVjKFtdLHRoaXMucmVtb3RlQ29kZWNzLHRoaXMuc3RvcmUuY29kZWMpO2NvbnN0IHQ9dGhpcy5yZW1vdGVTRFAudG9TdHJpbmcoKSxpPWR4KHRoaXMuaW5pdGlhbE9mZmVyLnNkcCx0aGlzLmV4dGVuc2lvbiksbj10aGlzLmxvZ1NEUEV4Y2hhbmdlKGl8fFwiXCIsXCJvZmZlclwiLFwibG9jYWxcIixcImNvbm5lY3RcIik7dGhpcy5zdG9yZS5kZXNjcmlwdGlvblN0YXJ0KCksYXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRMb2NhbERlc2NyaXB0aW9uKHt0eXBlOlwib2ZmZXJcIixzZHA6aX0pLG51bGw9PW58fG4odCksYXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcImFuc3dlclwiLHNkcDp0fSk7Y29uc3Qgcj10aGlzLnBlZXJDb25uZWN0aW9uLmdldFRyYW5zY2VpdmVycygpWzBdO2lmKG51bGwhPXImJnIucmVjZWl2ZXImJnRoaXMudHJ5QmluZFRyYW5zcG9ydEV2ZW50cyhyLnJlY2VpdmVyKSxYQShcIlBSRUxPQURfTUVESUFfQ09VTlRcIik+MCl7dGhpcy5yZW1vdGVTRFAucHJlbG9hZFJlbW90ZU1lZGlhKFhBKFwiUFJFTE9BRF9NRURJQV9DT1VOVFwiKSk7Y29uc3QgZT10aGlzLnJlbW90ZVNEUC50b1N0cmluZygpO2F3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJvZmZlclwiLHNkcDplfSk7Y29uc3QgdD1hd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLmNyZWF0ZUFuc3dlcigpO2F3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbih0KX1jb25zdHtwcmVTU1JDczpvfT1lO2lmKEFycmF5LmlzQXJyYXkobykmJm8ubGVuZ3RoPjApe2NvbnN0e21pZHM6ZX09dGhpcy5yZW1vdGVTRFAuYmF0Y2hTZW5kKG8ubWFwKChlPT4oe2tpbmQ6ZS5raW5kLHNzcmNNc2c6W3tzc3JjSWQ6ZS5zc3JjSWQscnR4OmUucnR4fV0sbXNsYWJlbDplLm1zbGFiZWx9KSkpKTtlLmZvckVhY2goKChlLHQpPT57dGhpcy5wcmVTU1JDTWFwLnNldChvW3RdLnNzcmNJZCxlKX0pKSxhd2FpdCBjeCh0aGlzLnBlZXJDb25uZWN0aW9uLHRoaXMucmVtb3RlU0RQLHRoaXMuZXh0ZW5zaW9uKSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW1AyUENvbm5lY3Rpb25dIHByZS1iYXRjaFJlY2VpdmUgZXhjaGFuZ2UgU0RQLlwiKSl9fWNhdGNoKGUpe3Rocm93IG5ldyBDeShSeS5FWENIQU5HRV9TRFBfRkFJTEVELFwiUDJQQ29ubmVjdGlvbi5jb25uZWN0IGZhaWxlZDsgXCIuY29uY2F0KGUudG9TdHJpbmcoKSkpfX1hc3luYyB1cGRhdGVSZW1vdGVDb25uZWN0KGUpe3RyeXtpZighdGhpcy5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi51cGRhdGVSZW1vdGVDb25uZWN0IGJlZm9yZSByZW1vdGUgU0RQIGNyZWF0ZWRcIik7Y29uc3R7cnRwQ2FwYWJpbGl0aWVzOnR9PWU7dGhpcy5yZW1vdGVTRFAudXBkYXRlUmVtb3RlUlRQQ2FwYWJpbGl0aWVzKHQpLEFycmF5LmlzQXJyYXkodGhpcy5yZW1vdGVDb2RlY3MpJiZ0aGlzLnJlbW90ZUNvZGVjcy5sZW5ndGg+MCYmdGhpcy5yZW1vdGVTRFAudXBkYXRlUmVtb3RlQ29kZWMoW10sdGhpcy5yZW1vdGVDb2RlY3MsdGhpcy5zdG9yZS5jb2RlYyk7Y29uc3R7cHJlU1NSQ3M6aX09ZTtpZihBcnJheS5pc0FycmF5KGkpJiZpLmxlbmd0aD4wKXtjb25zdHttaWRzOmV9PXRoaXMucmVtb3RlU0RQLmJhdGNoU2VuZChpLm1hcCgoZT0+T2JqZWN0LmFzc2lnbih7fSx7a2luZDplLmtpbmQsc3NyY01zZzpbe3NzcmNJZDplLnNzcmNJZCxydHg6ZS5ydHh9XSxtc2xhYmVsOmUubXNsYWJlbH0pKSkpO2UuZm9yRWFjaCgoKGUsdCk9Pnt0aGlzLnByZVNTUkNNYXAuc2V0KGlbdF0uc3NyY0lkLGUpfSkpfWF3YWl0IGN4KHRoaXMucGVlckNvbm5lY3Rpb24sdGhpcy5yZW1vdGVTRFAsdGhpcy5leHRlbnNpb24pLGZiLmRlYnVnKFwiW1AyUENvbm5lY3Rpb25dIHVwZGF0ZVJlbW90ZVJUUENhcGFiaWxpdGllcyBieSBleGNoYW5naW5nIFNEUC5cIil9Y2F0Y2goZSl7dGhyb3cgbmV3IEN5KFJ5LkVYQ0hBTkdFX1NEUF9GQUlMRUQsXCJQMlBDb25uZWN0aW9uLnVwZGF0ZVJlbW90ZUNvbm5lY3QgZmFpbGVkOyBcIi5jb25jYXQoZS50b1N0cmluZygpKSl9fXNlbmQoZSx0LGkpe3ZhciBuPXRoaXM7cmV0dXJuIFlJKChmdW5jdGlvbiooKXtjb25zdCByPXlpZWxkIHFJKG4ubXV0ZXgubG9jayhcIkZyb20gUDJQQ29ubmVjdGlvbi5zZW5kXCIpKTt0cnl7aWYoIW4ucmVtb3RlU0RQKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjYWxsIFAyUENvbm5lY3Rpb24uc2VuZCBiZWZvcmUgcmVtb3RlIFNEUCBjcmVhdGVkXCIpO2NvbnN0IG89W107ZS5mb3JFYWNoKChlPT57Y29uc3QgdD1uLnBlZXJDb25uZWN0aW9uLmFkZFRyYW5zY2VpdmVyKGUuX21lZGlhU3RyZWFtVHJhY2sse2RpcmVjdGlvbjpcInNlbmRvbmx5XCJ9KTtvLnB1c2godCksZS5fdXBkYXRlUnRwVHJhbnNjZWl2ZXIodCl9KSksWnYoKSYmITA9PT1YQShcIlNJTVVMQ0FTVFwiKSYmKHlpZWxkIHFJKG4uYXBwbHlTaW11bGNhc3RGb3JGaXJlZm94KG8sZSkpKTtjb25zdCBzPXlpZWxkIHFJKG4ucGVlckNvbm5lY3Rpb24uY3JlYXRlT2ZmZXIoKSksYT1uLnJlbW90ZVNEUC5wcmVkaWN0UmVjZWl2aW5nTWlkcyhlLmxlbmd0aCksYz1uLm11bmdTZW5kT2ZmZXJTRFAocy5zZHAsZSxhKSxkPUZVLnBhcnNlKGMpLGw9YS5tYXAoKGU9Pntjb25zdCB0PWQubWVkaWFEZXNjcmlwdGlvbnMuZmluZCgodD0+dC5hdHRyaWJ1dGVzLm1pZD09PWUpKTtpZighdCl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZXh0cmFjdCBzc3JjIGZyb20gbWVkaWFEZXNjcmlwdGlvbi5cIik7cmV0dXJuIEtVKHQsWEEoXCJVU0VfUFVCX1JUWFwiKSl9KSk7bGV0IHU7dHJ5e3U9eWllbGQgbH1jYXRjaChyKXt1PVtdLG4ucmVtb3RlU0RQLnJlY2VpdmUoZSx0LGksdSk7Y29uc3Qgbz1uLnJlbW90ZVNEUC50b1N0cmluZygpO3Rocm93IHlpZWxkIHFJKG4ucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbih7dHlwZTpcIm9mZmVyXCIsc2RwOmN9KSkseWllbGQgcUkobi5wZWVyQ29ubmVjdGlvbi5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcImFuc3dlclwiLHNkcDpvfSkpLHlpZWxkIHFJKG4uc3RvcFNlbmRpbmcoYSwhMCkpLHJ9bi5yZW1vdGVTRFAucmVjZWl2ZShlLHQsaSx1KTtjb25zdCBoPW4ucmVtb3RlU0RQLnRvU3RyaW5nKCkscD1uLmxvZ1NEUEV4Y2hhbmdlKGMsXCJvZmZlclwiLFwibG9jYWxcIixcInNlbmRcIik7cmV0dXJuIHlpZWxkIHFJKG4ucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbih7dHlwZTpcIm9mZmVyXCIsc2RwOmN9KSkseWllbGQgcUkobi5hcHBseVNpbXVsY2FzdEVuY29kaW5ncyhvLGUpKSx5aWVsZCBxSShuLmFwcGx5U2VuZEVuY29kaW5ncyhvLGUpKSxudWxsPT1wfHxwKGgpLHlpZWxkIHFJKG4ucGVlckNvbm5lY3Rpb24uc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJhbnN3ZXJcIixzZHA6aH0pKSxvLm1hcCgoKGUsdCk9Pntjb25zdCBpPWFbdF07cmV0dXJue2xvY2FsU1NSQzpsW3RdLGlkOmksdHJhbnNjZWl2ZXI6ZX19KSl9Y2F0Y2goZSl7dGhyb3cgZSBpbnN0YW5jZW9mIEN5P2U6bmV3IEN5KFJ5LkVYQ0hBTkdFX1NEUF9GQUlMRUQsXCJQMlBDb25uZWN0aW9uLnNlbmQgZmFpbGVkOyBcIi5jb25jYXQoZS50b1N0cmluZygpKSl9ZmluYWxseXtyKCl9fSkpKCl9YXN5bmMgY3JlYXRlRGF0YUNoYW5uZWxzKGUsdCl7dHJ5e2lmKCF0aGlzLnJlbW90ZVNEUCl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgY2FsbCBQMlBDb25uZWN0aW9uLmNyZWF0ZURhdGFDaGFubmVscyBiZWZvcmUgcmVtb3RlIFNEUCBjcmVhdGVkXCIpO2xldCBpPXRoaXMuZGF0YVN0cmVhbUNoYW5uZWxNYXAuZ2V0KGUpO2lmKGkmJlwib3BlblwiPT09aS5yZWFkeVN0YXRlKWZiLmRlYnVnKFwiW1AyUENvbm5lY3Rpb25dIENoYW5uZWxzIGFyZSBhbHJlYWR5IGF2YWlsYWJsZSBhbmQgY2FuIGJlIHJldXNlZCBkaXJlY3RseS5cIik7ZWxzZXtjb25zdCB0PXRoaXMuY3VycmVudERhdGFDaGFubmVsSWQ8MTAyMz90aGlzLmN1cnJlbnREYXRhQ2hhbm5lbElkKys6dGhpcy5yZWNvdmVyZWREYXRhQ2hhbm5lbElkcy5zaGlmdCgpO2lmKFwibnVtYmVyXCIhPXR5cGVvZiB0KXRocm93IG5ldyBFcnJvcihcImNyZWF0ZSBEYXRhQ2hhbm5lbCBlcnJvciwgYmVjYXVzZSBjYW5ub3QgZ2V0IGRjIGlkXCIpO2k9dGhpcy5wZWVyQ29ubmVjdGlvbi5jcmVhdGVEYXRhQ2hhbm5lbChcImRhdGFzdHJlYW0tY2hhbm5lbFwiLHtpZDp0LG5lZ290aWF0ZWQ6ITAsb3JkZXJlZDohMSxtYXhSZXRyYW5zbWl0czpYQShcIkRBVEFTVFJFQU1fTUFYX1JFVFJBTlNNSVRTXCIpfSksaS5iaW5hcnlUeXBlPVwiYXJyYXlidWZmZXJcIix0aGlzLmRhdGFTdHJlYW1DaGFubmVsTWFwLnNldChlLGkpfXQuZm9yRWFjaCgoZT0+e2UuX3VwZGF0ZU9yaWdpbkRhdGFDaGFubmVsKGkpfSkpO2NvbnN0e25lZWRFeGNoYW5nZVNEUDpufT10aGlzLnJlbW90ZVNEUC5zZW5kRGF0YUNoYW5uZWwoKTtpZihuKXtjb25zdCBlPXRoaXMucmVtb3RlU0RQLnRvU3RyaW5nKCk7YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcIm9mZmVyXCIsc2RwOmV9KTtjb25zdCB0PWF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uY3JlYXRlQW5zd2VyKCk7YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRMb2NhbERlc2NyaXB0aW9uKHQpLGZiLmRlYnVnKFwiW1AyUENvbm5lY3Rpb25dIGNyZWF0ZURhdGFDaGFubmVscyBieSBleGNoYW5naW5nIFNEUC5cIil9ZWxzZSBmYi5kZWJ1ZyhcIltQMlBDb25uZWN0aW9uXSBjcmVhdGVEYXRhQ2hhbm5lbHMgbm8gbmVlZCB0byBleGNoYW5nZSBTRFAuXCIpO3JldHVybn1jYXRjaChlKXt0aHJvdyBlIGluc3RhbmNlb2YgQ3k/ZTpuZXcgQ3koUnkuRVhDSEFOR0VfU0RQX0ZBSUxFRCxcIlAyUENvbm5lY3Rpb24uY3JlYXRlRGF0YUNoYW5uZWxzIGZhaWxlZDsgXCIuY29uY2F0KGUudG9TdHJpbmcoKSkpfX1hc3luYyBzdG9wRGF0YUNoYW5uZWxzKGUpe3RyeXtjb25zdCB0PXRoaXMuZGF0YVN0cmVhbUNoYW5uZWxNYXAuZ2V0KGUpO3JldHVybiB0JiYodC5pZCYmdGhpcy5yZWNvdmVyZWREYXRhQ2hhbm5lbElkcy5wdXNoKHQuaWQpLHQuY2xvc2UoKSksdm9pZCB0aGlzLmRhdGFTdHJlYW1DaGFubmVsTWFwLmRlbGV0ZShlKX1jYXRjaChlKXt0aHJvdyBlIGluc3RhbmNlb2YgQ3k/ZTpuZXcgQ3koUnkuREFUQUNIQU5ORUxfRkFJTEVELFwiUDJQQ29ubmVjdGlvbi5zdG9wRGF0YUNoYW5uZWxzIGZhaWxlZDsgXCIuY29uY2F0KGUudG9TdHJpbmcoKSkpfX1hc3luYyBzdG9wU2VuZGluZyhlLHQpe2NvbnN0IGk9dD92b2lkIDA6YXdhaXQgdGhpcy5tdXRleC5sb2NrKFwiRnJvbSBQMlBDb25uZWN0aW9uLnN0b3BTZW5kaW5nXCIpO3RyeXtpZighdGhpcy5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi5zdG9wU2VuZGluZyBiZWZvcmUgcmVtb3RlIFNEUCBjcmVhdGVkXCIpO2NvbnN0IHQ9dGhpcy5wZWVyQ29ubmVjdGlvbi5nZXRUcmFuc2NlaXZlcnMoKS5maWx0ZXIoKHQ9Pi0xIT09ZS5pbmRleE9mKHQubWlkKSkpO2lmKHQubGVuZ3RoIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiVHJhbnNjZWl2ZXJzJyBsZW5ndGggZG9lc24ndCBtYXRjaCBtaWRzJyBsZW5ndGggd2hlbiB0cnlpbmcgdG8gY2FsbCBQMlBDb25uZWN0aW9uLnN0b3BTZW5kaW5nLlwiKTt0Lm1hcCgoZT0+e3ZhciB0O29CKHRoaXMuaWQrZS5taWQsdGhpcyksZS5kaXJlY3Rpb249XCJpbmFjdGl2ZVwiLG51bGw9PT0odD1lLnN0b3ApfHx2b2lkIDA9PT10fHx0LmNhbGwoZSl9KSk7Y29uc3Qgbj1hd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLmNyZWF0ZU9mZmVyKCkscj10aGlzLmxvZ1NEUEV4Y2hhbmdlKG4uc2RwfHxcIlwiLFwib2ZmZXJcIixcImxvY2FsXCIsXCJzdG9wU2VuZGluZ1wiKTthd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLnNldExvY2FsRGVzY3JpcHRpb24obiksdGhpcy5yZW1vdGVTRFAuc3RvcFJlY2VpdmluZyhlKTtjb25zdCBvPXRoaXMucmVtb3RlU0RQLnRvU3RyaW5nKCk7bnVsbD09cnx8cihvKSxhd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLnNldFJlbW90ZURlc2NyaXB0aW9uKHt0eXBlOlwiYW5zd2VyXCIsc2RwOm99KX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuRVhDSEFOR0VfU0RQX0ZBSUxFRCxcIlAyUENvbm5lY3Rpb24uc3RvcFNlbmRpbmcgZmFpbGVkOyBcIi5jb25jYXQoZS50b1N0cmluZygpKSl9ZmluYWxseXtpJiZpKCl9fWFzeW5jIHJlY2VpdmUoZSx0LGksbil7dHJ5e2lmKCF0aGlzLnJlbW90ZVNEUCl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgY2FsbCBQMlBDb25uZWN0aW9uLnJlY2VpdmUgXCIuY29uY2F0KGUsXCIgYmVmb3JlIHJlbW90ZVNEUCBjcmVhdGVkLlwiKSk7Y29uc3R7bWlkOnIsbmVlZEV4Y2hhbmdlU0RQOm99PXRoaXMucmVtb3RlU0RQLnNlbmQoZSx0LGksbik7byYmKGF3YWl0IGN4KHRoaXMucGVlckNvbm5lY3Rpb24sdGhpcy5yZW1vdGVTRFAsdGhpcy5leHRlbnNpb24pLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbUDJQQ29ubmVjdGlvbl0gcmVjZWl2ZSBcIikuY29uY2F0KGUsXCIgYnkgZXhjaGFuZ2luZyBTRFAuXCIpKSk7Y29uc3Qgcz10aGlzLnBlZXJDb25uZWN0aW9uLmdldFRyYW5zY2VpdmVycygpLmZpbmQoKGU9PmUubWlkPT09cikpO2lmKCFzKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBnZXQgdHJhbnNjZWl2ZXIgYWZ0ZXIgc2V0TG9jYWxEZXNjcmlwdGlvbi5cIik7cmV0dXJue3RyYWNrOnMucmVjZWl2ZXIudHJhY2ssaWQ6cix0cmFuc2NlaXZlcjpzfX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuRVhDSEFOR0VfU0RQX0ZBSUxFRCxcIlAyUENvbm5lY3Rpb24ucmVjZWl2ZSBmYWlsZWQ7IFwiLmNvbmNhdChlLnRvU3RyaW5nKCkpKX19YXN5bmMgYmF0Y2hSZWNlaXZlKGUpe3RyeXtpZighdGhpcy5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi5iYXRjaFJlY2VpdmUgYmVmb3JlIHJlbW90ZVNEUCBjcmVhdGVkLlwiKTtjb25zdHttaWRzOnQsbmVlZEV4Y2hhbmdlU0RQOml9PXRoaXMucmVtb3RlU0RQLmJhdGNoU2VuZChlKTtyZXR1cm4gaSYmKGF3YWl0IGN4KHRoaXMucGVlckNvbm5lY3Rpb24sdGhpcy5yZW1vdGVTRFAsdGhpcy5leHRlbnNpb24pLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbUDJQQ29ubmVjdGlvbl0gYmF0Y2hSZWNlaXZlIGJ5IGV4Y2hhbmdpbmcgU0RQLlwiKSkpLHQubWFwKChlPT57Y29uc3QgdD10aGlzLnBlZXJDb25uZWN0aW9uLmdldFRyYW5zY2VpdmVycygpLmZpbmQoKHQ9PnQubWlkPT09ZSkpO2lmKCF0KXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBnZXQgdHJhbnNjZWl2ZXIgYWZ0ZXIgc2V0TG9jYWxEZXNjcmlwdGlvbi5cIik7cmV0dXJue3RyYWNrOnQucmVjZWl2ZXIudHJhY2ssaWQ6ZSx0cmFuc2NlaXZlcjp0fX0pKX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuRVhDSEFOR0VfU0RQX0ZBSUxFRCxcIlAyUENvbm5lY3Rpb24ucmVjZWl2ZSBmYWlsZWQ7IFwiLmNvbmNhdChlLnRvU3RyaW5nKCkpKX19YXN5bmMgc3RvcFJlY2VpdmluZyhlKXt0cnl7aWYoIXRoaXMucmVtb3RlU0RQKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjYWxsIFAyUENvbm5lY3Rpb24uc3RvcFJlY2VpdmluZyBiZWZvcmUgcmVtb3RlIFNEUCBjcmVhdGVkLlwiKTtlLmZvckVhY2goKGU9PntBcnJheS5mcm9tKHRoaXMucHJlU1NSQ01hcC5lbnRyaWVzKCkpLnNvbWUoKHQ9PntsZXRbaSxuXT10O2lmKG49PT1lKXJldHVybiB0aGlzLnByZVNTUkNNYXAuZGVsZXRlKGkpLCEwfSkpfSkpLHRoaXMucmVtb3RlU0RQLnN0b3BTZW5kaW5nKGUpO2NvbnN0IHQ9dGhpcy5yZW1vdGVTRFAudG9TdHJpbmcoKSxpPXRoaXMubG9nU0RQRXhjaGFuZ2UodCxcIm9mZmVyXCIsXCJyZW1vdGVcIixcInN0b3BSZWNlaXZpbmdcIik7YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcIm9mZmVyXCIsc2RwOnR9KTtjb25zdCBuPWF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uY3JlYXRlQW5zd2VyKCk7bnVsbD09aXx8aShuLnNkcHx8XCJcIiksYXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRMb2NhbERlc2NyaXB0aW9uKG4pfWNhdGNoKGUpe3Rocm93IG5ldyBDeShSeS5FWENIQU5HRV9TRFBfRkFJTEVELFwiUDJQQ29ubmVjdGlvbiBzdG9wUmVjZWl2aW5nIGZhaWxlZDsgXCIuY29uY2F0KGUudG9TdHJpbmcoKSkpfX1hc3luYyBtdXRlUmVtb3RlKGUpe3RyeXtpZighdGhpcy5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi5tdXRlUmVtb3RlIG1pZD1cIi5jb25jYXQoZSxcIiBiZWZvcmUgcmVtb3RlIFNEUCBjcmVhdGVkLlwiKSk7dGhpcy5yZW1vdGVTRFAubXV0ZShlKTtjb25zdCB0PXRoaXMucmVtb3RlU0RQLnRvU3RyaW5nKCksaT10aGlzLmxvZ1NEUEV4Y2hhbmdlKHQsXCJvZmZlclwiLFwicmVtb3RlXCIsXCJtdXRlUmVtb3RlXCIpO2F3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJvZmZlclwiLHNkcDp0fSk7Y29uc3Qgbj1hd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLmNyZWF0ZUFuc3dlcigpO251bGw9PWl8fGkobi5zZHB8fFwiXCIpLGF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbihuKX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuRVhDSEFOR0VfU0RQX0ZBSUxFRCxcIlAyUENvbm5lY3Rpb24ubXV0ZVJlbW90ZSBmYWlsZWQ7IFwiLmNvbmNhdChlLnRvU3RyaW5nKCkpKX19YXN5bmMgdW5tdXRlUmVtb3RlKGUpe3RyeXtpZighdGhpcy5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi51bm11dGVSZW1vdGUgbWlkPVwiLmNvbmNhdChlLFwiIGJlZm9yZSByZW1vdGUgU0RQIGNyZWF0ZWQuXCIpKTt0aGlzLnJlbW90ZVNEUC51bm11dGUoZSk7Y29uc3QgdD10aGlzLnJlbW90ZVNEUC50b1N0cmluZygpLGk9dGhpcy5sb2dTRFBFeGNoYW5nZSh0LFwib2ZmZXJcIixcInJlbW90ZVwiLFwidW5tdXRlUmVtb3RlXCIpO2F3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJvZmZlclwiLHNkcDp0fSk7Y29uc3Qgbj1hd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLmNyZWF0ZUFuc3dlcigpO251bGw9PWl8fGkobi5zZHB8fFwiXCIpLGF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbihuKX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuRVhDSEFOR0VfU0RQX0ZBSUxFRCxcIlAyUENvbm5lY3Rpb24udW5tdXRlUmVtb3RlIGZhaWxlZDsgXCIuY29uY2F0KGUudG9TdHJpbmcoKSkpfX1hc3luYyBtdXRlTG9jYWwoZSl7dHJ5e2lmKCF0aGlzLnJlbW90ZVNEUCl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgY2FsbCBQMlBDb25uZWN0aW9uLm11dGVMb2NhbCBiZWZvcmUgcmVtb3RlIFNEUCBjcmVhdGVkLlwiKTtjb25zdCB0PXRoaXMucGVlckNvbm5lY3Rpb24uZ2V0VHJhbnNjZWl2ZXJzKCkuZmlsdGVyKCh0PT50Lm1pZCYmLTEhPT1lLmluZGV4T2YodC5taWQpKSk7aWYodC5sZW5ndGghPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJUcmFuc2NlaXZlcnMnIGxlbmd0aCBkb2Vzbid0IG1hdGNoIG1pZHMnIGxlbmd0aC5cIik7dC5tYXAoKGU9PntlLmRpcmVjdGlvbj1cImluYWN0aXZlXCJ9KSk7Y29uc3QgaT1hd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLmNyZWF0ZU9mZmVyKCksbj10aGlzLmxvZ1NEUEV4Y2hhbmdlKGkuc2RwfHxcIlwiLFwib2ZmZXJcIixcImxvY2FsXCIsXCJtdXRlTG9jYWxcIik7YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRMb2NhbERlc2NyaXB0aW9uKGkpLHRoaXMucmVtb3RlU0RQLm11dGVSZW1vdGUoZSk7Y29uc3Qgcj10aGlzLnJlbW90ZVNEUC50b1N0cmluZygpO251bGw9PW58fG4ociksYXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcImFuc3dlclwiLHNkcDpyfSl9Y2F0Y2goZSl7dGhyb3cgbmV3IEN5KFJ5LkVYQ0hBTkdFX1NEUF9GQUlMRUQsXCJQMlBDb25uZWN0aW9uLm11dGVMb2NhbCBmYWlsZWQ7IFwiLmNvbmNhdChlLnRvU3RyaW5nKCkpKX19YXN5bmMgdW5tdXRlTG9jYWwoZSl7dHJ5e2lmKCF0aGlzLnJlbW90ZVNEUCl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgY2FsbCBQMlBDb25uZWN0aW9uLnVubXV0ZUxvY2FsIGJlZm9yZSByZW1vdGUgU0RQIGNyZWF0ZWQuXCIpO2NvbnN0IHQ9dGhpcy5wZWVyQ29ubmVjdGlvbi5nZXRUcmFuc2NlaXZlcnMoKS5maWx0ZXIoKHQ9PnQubWlkJiYtMSE9PWUuaW5kZXhPZih0Lm1pZCkpKTtpZih0Lmxlbmd0aCE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIlRyYW5zY2VpdmVycycgbGVuZ3RoIGRvZXNuJ3QgbWF0Y2ggbWlkcycgbGVuZ3RoLlwiKTt0Lm1hcCgoYXN5bmMoZSx0KT0+e2UuZGlyZWN0aW9uPVwic2VuZG9ubHlcIn0pKTtjb25zdCBpPWF3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uY3JlYXRlT2ZmZXIoKSxuPXRoaXMubG9nU0RQRXhjaGFuZ2UoaS5zZHB8fFwiXCIsXCJvZmZlclwiLFwibG9jYWxcIixcInVubXV0ZUxvY2FsXCIpO2F3YWl0IHRoaXMucGVlckNvbm5lY3Rpb24uc2V0TG9jYWxEZXNjcmlwdGlvbihpKSx0aGlzLnJlbW90ZVNEUC51bm11dGVSZW1vdGUoZSk7Y29uc3Qgcj10aGlzLnJlbW90ZVNEUC50b1N0cmluZygpO251bGw9PW58fG4ociksYXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRSZW1vdGVEZXNjcmlwdGlvbih7dHlwZTpcImFuc3dlclwiLHNkcDpyfSl9Y2F0Y2goZSl7dGhyb3cgbmV3IEN5KFJ5LkVYQ0hBTkdFX1NEUF9GQUlMRUQsXCJQMlBDb25uZWN0aW9uLnVubXV0ZUxvY2FsIGZhaWxlZDsgXCIuY29uY2F0KGUudG9TdHJpbmcoKSkpfX1yZXN0YXJ0SUNFKGUpe3ZhciB0PXRoaXM7cmV0dXJuIFlJKChmdW5jdGlvbiooKXtjb25zdCBpPXlpZWxkIHFJKHQubXV0ZXgubG9jayhcIkZyb20gUDJQQ29ubmVjdGlvbi5yZXN0YXJ0SUNFXCIpKTt0cnl7aWYoIXQucmVtb3RlU0RQKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCByZXN0YXJ0SUNFIGJlZm9yZSByZW1vdGVTRFAgY3JlYXRlZC5cIik7aWYoWlAoKS5zdXBwb3J0UENTZXRDb25maWd1cmF0aW9uKXtjb25zdCBpPXQucGVlckNvbm5lY3Rpb24uZ2V0Q29uZmlndXJhdGlvbigpLG49ZT09PWxPLlJFTEFZP1wicmVsYXlcIjpcImFsbFwiO2kuaWNlVHJhbnNwb3J0UG9saWN5IT09biYmKGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0LnN0b3JlLmNsaWVudElkLFwiXSByZXN0YXJ0SUNFIGNoYW5nZSBpY2VUcmFuc3BvcnRQb2xpY3kgZnJvbSBbXCIpLmNvbmNhdChpLmljZVRyYW5zcG9ydFBvbGljeSxcIl0gdG8gW1wiKS5jb25jYXQobixcIl1cIikpLGkuaWNlVHJhbnNwb3J0UG9saWN5PW4sdC5wZWVyQ29ubmVjdGlvbi5zZXRDb25maWd1cmF0aW9uKGkpKX1lbHNlIGlmKGU9PT1sTy5SRUxBWSlyZXR1cm47dC5yZW1vdGVTRFAudXBkYXRlQ2FuZGlkYXRlcyhlKTtjb25zdCBuPXlpZWxkIHFJKHQucGVlckNvbm5lY3Rpb24uY3JlYXRlT2ZmZXIoe2ljZVJlc3RhcnQ6ITB9KSk7aWYoIW4uc2RwKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCByZXN0YXJ0SUNFIGJlY2F1c2UgcmVzdGFydCBvZmZlciBTRFAgZG9lcyBub3QgZXhpc3QuXCIpO2NvbnN0IHI9SFUobi5zZHApLHtyZW1vdGVJY2VQYXJhbWV0ZXJzOm99PXlpZWxkIHIuaWNlUGFyYW1ldGVyczt0LnJlbW90ZVNEUC5yZXN0YXJ0SUNFKG8pO2NvbnN0IHM9dC5yZW1vdGVTRFAudG9TdHJpbmcoKSxhPXQubG9nU0RQRXhjaGFuZ2Uobi5zZHB8fFwiXCIsXCJvZmZlclwiLFwibG9jYWxcIixcInJlc3RhcnRJQ0VcIik7dC5zdG9yZS5kZXNjcmlwdGlvblN0YXJ0KCkseWllbGQgcUkodC5wZWVyQ29ubmVjdGlvbi5zZXRMb2NhbERlc2NyaXB0aW9uKG4pKSxudWxsPT1hfHxhKHMpLHlpZWxkIHFJKHQucGVlckNvbm5lY3Rpb24uc2V0UmVtb3RlRGVzY3JpcHRpb24oe3R5cGU6XCJhbnN3ZXJcIixzZHA6c30pKX1jYXRjaChlKXtmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0LnN0b3JlLmNsaWVudElkLFwiXSByZXN0YXJ0IElDRSBmYWlsZWQsIGFib3J0IG9wZXJhdGlvblwiKSxlKX1maW5hbGx5e2koKX19KSkoKX1jbG9zZSgpe3ZhciBlO3RoaXMucGVlckNvbm5lY3Rpb24uZ2V0VHJhbnNjZWl2ZXJzKCkuZm9yRWFjaCgoZT0+e29CKHRoaXMuaWQrZS5taWQsdGhpcyl9KSksdGhpcy5wcmVTU1JDTWFwLmNsZWFyKCksdGhpcy5wZWVyQ29ubmVjdGlvbi5jbG9zZSgpLG51bGw9PT0oZT10aGlzLm9uQ29ubmVjdGlvblN0YXRlQ2hhbmdlKXx8dm9pZCAwPT09ZXx8ZS5jYWxsKHRoaXMsXCJjbG9zZWRcIiksdGhpcy50cnlVbmJpbmRUcmFuc3BvcnRFdmVudHMoKSx0aGlzLnVuYmluZFBDRXZlbnRzKCksdGhpcy51bmJpbmRTdGF0c0V2ZW50cygpLHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCksdGhpcy50cmFuc3BvcnRFdmVudFJlY2VpdmVyPXZvaWQgMCx0aGlzLnN0YXRzRmlsdGVyLmRlc3Ryb3koKSx0aGlzLmRhdGFTdHJlYW1DaGFubmVsTWFwLmNsZWFyKCksdGhpcy5yZWNvdmVyZWREYXRhQ2hhbm5lbElkcz1bXSx0aGlzLmN1cnJlbnREYXRhQ2hhbm5lbElkPTF9Z2V0U3RhdHMoKXtyZXR1cm4gY0IoY0Ioe30sdGhpcy5zdGF0c0ZpbHRlci5nZXRTdGF0cygpKSx7fSx7cXVhbGl0eUxpbWl0YXRpb25SZWFzb246dGhpcy5xdWFsaXR5TGltaXRhdGlvblJlYXNvbn0pfWdldFJlbW90ZVZpZGVvSXNSZWFkeShlKXtyZXR1cm4gdGhpcy5zdGF0c0ZpbHRlci5nZXRWaWRlb0lzUmVhZHkoZSl9YXN5bmMgdXBkYXRlRW5jb2RlckNvbmZpZyhlLHQpe3RyeXtpZighdGhpcy5yZW1vdGVTRFApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNhbGwgUDJQQ29ubmVjdGlvbi51cGRhdGVFbmNvZGVyQ29uZmlnIGJlZm9yZSByZW1vdGUgU0RQIGNyZWF0ZWQuXCIpO2NvbnN0IGk9YXdhaXQgdGhpcy5wZWVyQ29ubmVjdGlvbi5jcmVhdGVPZmZlcigpLG49dGhpcy5tdW5nU2VuZE9mZmVyU0RQKGkuc2RwLFt0XSxbZV0pO3RoaXMucmVtb3RlU0RQLnVwZGF0ZVJlY3ZNZWRpYShlLHQpO2NvbnN0IHI9dGhpcy5yZW1vdGVTRFAudG9TdHJpbmcoKSxvPXRoaXMubG9nU0RQRXhjaGFuZ2UobixcIm9mZmVyXCIsXCJsb2NhbFwiLFwidXBkYXRlRW5jb2RlckNvbmZpZ1wiKTthd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLnNldExvY2FsRGVzY3JpcHRpb24oe3R5cGU6XCJvZmZlclwiLHNkcDpufSksbnVsbD09b3x8byhyKSxhd2FpdCB0aGlzLnBlZXJDb25uZWN0aW9uLnNldFJlbW90ZURlc2NyaXB0aW9uKHt0eXBlOlwiYW5zd2VyXCIsc2RwOnJ9KX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuRVhDSEFOR0VfU0RQX0ZBSUxFRCxlLnRvU3RyaW5nKCkpfX1hc3luYyB1cGRhdGVTZW5kUGFyYW1ldGVycyhlLHQpe2NvbnN0IGk9dGhpcy5wZWVyQ29ubmVjdGlvbi5nZXRUcmFuc2NlaXZlcnMoKS5maWx0ZXIoKHQ9PnQubWlkPT09ZSkpOzE9PT1pLmxlbmd0aCYmKHRoaXMuaXNWUDhTaW11bGNhc3QodCk/WnYoKXx8YXdhaXQgdGhpcy5hcHBseVNpbXVsY2FzdEVuY29kaW5ncyhpLFt0XSk6YXdhaXQgdGhpcy5hcHBseVNlbmRFbmNvZGluZ3MoaSxbdF0pKX1zZXRTdGF0c1JlbW90ZVZpZGVvSXNSZWFkeShlLHQpe3RoaXMuc3RhdHNGaWx0ZXIuc2V0VmlkZW9Jc1JlYWR5MihlLHQpfWFzeW5jIHJlcGxhY2VUcmFjayhlLHQpe2NvbnN0IGk9dGhpcy5wZWVyQ29ubmVjdGlvbi5nZXRUcmFuc2NlaXZlcnMoKS5maW5kKChlPT5lLm1pZD09PXQpKTtpJiZhd2FpdCBpLnNlbmRlci5yZXBsYWNlVHJhY2soZS5fbWVkaWFTdHJlYW1UcmFjayl9YXN5bmMgZ2V0U2VsZWN0ZWRDYW5kaWRhdGVQYWlyKCl7Y29uc3QgZT10aGlzLnBlZXJDb25uZWN0aW9uLmdldFJlY2VpdmVycygpO2lmKGUubGVuZ3RoPjAmJmVbMF0udHJhbnNwb3J0JiZlWzBdLnRyYW5zcG9ydC5pY2VUcmFuc3BvcnQmJmVbMF0udHJhbnNwb3J0LmljZVRyYW5zcG9ydC5nZXRTZWxlY3RlZENhbmRpZGF0ZVBhaXImJmVbMF0udHJhbnNwb3J0LmljZVRyYW5zcG9ydC5nZXRTZWxlY3RlZENhbmRpZGF0ZVBhaXIoKSl7Y29uc3QgdD1lWzBdLnRyYW5zcG9ydC5pY2VUcmFuc3BvcnQse2xvY2FsOmkscmVtb3RlOm59PXQuZ2V0U2VsZWN0ZWRDYW5kaWRhdGVQYWlyKCk7cmV0dXJue2xvY2FsOmNCKGNCKHt9LFJWKSx7fSx7Y2FuZGlkYXRlVHlwZTppLnR5cGUscHJvdG9jb2w6aS5wcm90b2NvbCxhZGRyZXNzOmkuYWRkcmVzcyxwb3J0OmkucG9ydH0pLHJlbW90ZTpjQihjQih7fSxSVikse30se2NhbmRpZGF0ZVR5cGU6bi50eXBlLHByb3RvY29sOm4ucHJvdG9jb2wsYWRkcmVzczpuLmFkZHJlc3MscG9ydDpuLnBvcnR9KX19cmV0dXJuIHRoaXMuc3RhdHNGaWx0ZXIuZ2V0U2VsZWN0ZWRDYW5kaWRhdGVQYWlyKCl9YmluZFBDRXZlbnRzKCl7dGhpcy5wZWVyQ29ubmVjdGlvbi5vbmljZWNvbm5lY3Rpb25zdGF0ZWNoYW5nZT0oKT0+e3ZhciBlO251bGw9PT0oZT10aGlzLm9uSUNFQ29ubmVjdGlvblN0YXRlQ2hhbmdlKXx8dm9pZCAwPT09ZXx8ZS5jYWxsKHRoaXMsdGhpcy5wZWVyQ29ubmVjdGlvbi5pY2VDb25uZWN0aW9uU3RhdGUpfSx0aGlzLnBlZXJDb25uZWN0aW9uLm9uY29ubmVjdGlvbnN0YXRlY2hhbmdlPSgpPT57dmFyIGU7bnVsbD09PShlPXRoaXMub25Db25uZWN0aW9uU3RhdGVDaGFuZ2UpfHx2b2lkIDA9PT1lfHxlLmNhbGwodGhpcyx0aGlzLnBlZXJDb25uZWN0aW9uLmNvbm5lY3Rpb25TdGF0ZSl9LHRoaXMucGVlckNvbm5lY3Rpb24ub25pY2VjYW5kaWRhdGU9ZT0+e2UuY2FuZGlkYXRlP3RoaXMubG9jYWxDYW5kaWRhdGVDb3VudCs9MToodGhpcy5wZWVyQ29ubmVjdGlvbi5vbmljZWNhbmRpZGF0ZT1udWxsLHRoaXMuYWxsQ2FuZGlkYXRlc1JlY2VpdmVkPSEwLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbcGMtXCIpLmNvbmNhdCh0aGlzLnN0b3JlLnAycElkLFwiXSBsb2NhbCBjYW5kaWRhdGUgY291bnRcIiksdGhpcy5sb2NhbENhbmRpZGF0ZUNvdW50KSl9LHNldFRpbWVvdXQoKCgpPT57dGhpcy5hbGxDYW5kaWRhdGVzUmVjZWl2ZWR8fCh0aGlzLmFsbENhbmRpZGF0ZXNSZWNlaXZlZD0hMCxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW3BjLVwiKS5jb25jYXQodGhpcy5zdG9yZS5wMnBJZCxcIl0gb25pY2VjYW5kaWRhdGUgdGltZW91dCwgbG9jYWwgY2FuZGlkYXRlIGNvdW50XCIpLHRoaXMubG9jYWxDYW5kaWRhdGVDb3VudCkpfSksWEEoXCJDQU5ESURBVEVfVElNRU9VVFwiKSl9dW5iaW5kUENFdmVudHMoKXt0aGlzLnBlZXJDb25uZWN0aW9uLm9uaWNlY29ubmVjdGlvbnN0YXRlY2hhbmdlPW51bGwsdGhpcy5wZWVyQ29ubmVjdGlvbi5vbmNvbm5lY3Rpb25zdGF0ZWNoYW5nZT1udWxsLHRoaXMucGVlckNvbm5lY3Rpb24ub25zaWduYWxpbmdzdGF0ZWNoYW5nZT1udWxsLHRoaXMucGVlckNvbm5lY3Rpb24ub25pY2VjYW5kaWRhdGVlcnJvcj1udWxsLHRoaXMucGVlckNvbm5lY3Rpb24ub25pY2VjYW5kaWRhdGU9bnVsbCx0aGlzLnBlZXJDb25uZWN0aW9uLm9udHJhY2s9bnVsbH1zdGF0aWMgcmVzb2x2ZVBDQ29uZmlndXJhdGlvbih0KXtjb25zdCBpPXtpY2VTZXJ2ZXJzOltdfTtyZXR1cm4gdC5pY2VTZXJ2ZXJzP2kuaWNlU2VydmVycz10LmljZVNlcnZlcnM6dC50dXJuU2VydmVyJiZcIm9mZlwiIT09dC50dXJuU2VydmVyLm1vZGUmJihLeSh0LnR1cm5TZXJ2ZXIuc2VydmVycyk/aS5pY2VTZXJ2ZXJzPXQudHVyblNlcnZlci5zZXJ2ZXJzOihpLmljZVNlcnZlcnMmJmkuaWNlU2VydmVycy5wdXNoKC4uLmUudHVyblNlcnZlckNvbmZpZ1RvSWNlU2VydmVycyh0LnR1cm5TZXJ2ZXIuc2VydmVycykpLFhBKFwiVVNFX1RVUk5fU0VSVkVSX09GX0dBVEVXQVlcIikmJmkuaWNlU2VydmVycyYmdC50dXJuU2VydmVyLnNlcnZlcnNGcm9tR2F0ZXdheSYmaS5pY2VTZXJ2ZXJzLnB1c2goLi4uZS50dXJuU2VydmVyQ29uZmlnVG9JY2VTZXJ2ZXJzKHQudHVyblNlcnZlci5zZXJ2ZXJzRnJvbUdhdGV3YXkpKSxYQShcIkZPUkNFX1RVUk5fVENQXCIpP2kuaWNlVHJhbnNwb3J0UG9saWN5PVwicmVsYXlcIjp0LnR1cm5TZXJ2ZXIuc2VydmVycy5jb25jYXQodC50dXJuU2VydmVyLnNlcnZlcnNGcm9tR2F0ZXdheXx8W10pLmZvckVhY2goKGU9PntlLmZvcmNldHVybiYmKGkuaWNlVHJhbnNwb3J0UG9saWN5PVwicmVsYXlcIil9KSkpKSxYQShcIkVOQUJMRV9FTkNPREVEX1RSQU5TRk9STVwiKSYmWlAoKS5zdXBwb3J0V2ViUlRDRW5jb2RlZFRyYW5zZm9ybSYmKGkuZW5jb2RlZEluc2VydGFibGVTdHJlYW1zPSEwKSxpfXN0YXRpYyB0dXJuU2VydmVyQ29uZmlnVG9JY2VTZXJ2ZXJzKGUpe2NvbnN0IHQ9W107cmV0dXJuIGUuZm9yRWFjaCgoZT0+e2Uuc2VjdXJpdHk/ZS50Y3Bwb3J0JiZ0LnB1c2goe3VzZXJuYW1lOmUudXNlcm5hbWUsY3JlZGVudGlhbDplLnBhc3N3b3JkLGNyZWRlbnRpYWxUeXBlOlwicGFzc3dvcmRcIix1cmxzOlwidHVybnM6XCIuY29uY2F0KEpPKGUudHVyblNlcnZlclVSTCksXCI6XCIpLmNvbmNhdChlLnRjcHBvcnQsXCI/dHJhbnNwb3J0PXRjcFwiKX0pOihlLnVkcHBvcnQmJiFYQShcIkZPUkNFX1RVUk5fVENQXCIpJiZ0LnB1c2goe3VzZXJuYW1lOmUudXNlcm5hbWUsY3JlZGVudGlhbDplLnBhc3N3b3JkLGNyZWRlbnRpYWxUeXBlOlwicGFzc3dvcmRcIix1cmxzOlwidHVybjpcIi5jb25jYXQoZS50dXJuU2VydmVyVVJMLFwiOlwiKS5jb25jYXQoZS51ZHBwb3J0LFwiP3RyYW5zcG9ydD11ZHBcIil9KSxlLnRjcHBvcnQmJnQucHVzaCh7dXNlcm5hbWU6ZS51c2VybmFtZSxjcmVkZW50aWFsOmUucGFzc3dvcmQsY3JlZGVudGlhbFR5cGU6XCJwYXNzd29yZFwiLHVybHM6XCJ0dXJuOlwiLmNvbmNhdChlLnR1cm5TZXJ2ZXJVUkwsXCI6XCIpLmNvbmNhdChlLnRjcHBvcnQsXCI/dHJhbnNwb3J0PXRjcFwiKX0pKX0pKSx0fXRyeUJpbmRUcmFuc3BvcnRFdmVudHMoZSl7Y29uc3QgdD1lLnRyYW5zcG9ydDtpZih0KXt0aGlzLnRyYW5zcG9ydEV2ZW50UmVjZWl2ZXI9ZSx0Lm9uc3RhdGVjaGFuZ2U9KCk9Pnt2YXIgZTtudWxsIT10JiZ0LnN0YXRlJiYobnVsbD09PShlPXRoaXMub25EVExTVHJhbnNwb3J0U3RhdGVDaGFuZ2UpfHx2b2lkIDA9PT1lfHxlLmNhbGwodGhpcyx0LnN0YXRlKSl9LHQub25lcnJvcj1lPT57dmFyIHQ7bnVsbD09PSh0PXRoaXMub25EVExTVHJhbnNwb3J0RXJyb3IpfHx2b2lkIDA9PT10fHx0LmNhbGwodGhpcyxcImVycm9yXCJpbiBlP2UuZXJyb3I6ZSl9O2NvbnN0IGk9dC5pY2VUcmFuc3BvcnQ7aSYmKGkub25zdGF0ZWNoYW5nZT0oKT0+e2NvbnN0IGU9bnVsbD09dD92b2lkIDA6dC5pY2VUcmFuc3BvcnQuc3RhdGU7dmFyIGk7ZSYmKG51bGw9PT0oaT10aGlzLm9uSUNFVHJhbnNwb3J0U3RhdGVDaGFuZ2UpfHx2b2lkIDA9PT1pfHxpLmNhbGwodGhpcyxlKSl9LGkuZ2V0U2VsZWN0ZWRDYW5kaWRhdGVQYWlyJiYoaS5vbnNlbGVjdGVkY2FuZGlkYXRlcGFpcmNoYW5nZT0oKT0+e2lmKGkuZ2V0U2VsZWN0ZWRDYW5kaWRhdGVQYWlyKCkpe2NvbnN0e2xvY2FsOmUscmVtb3RlOnR9PWkuZ2V0U2VsZWN0ZWRDYW5kaWRhdGVQYWlyKCk7ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW3BjLVwiKS5jb25jYXQodGhpcy5zdG9yZS5wMnBJZCxcIl0gc2VsZWN0ZWRjYW5kaWRhdGVwYWlyY2hhbmdlOiBsb2NhbCBcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KHtjYW5kaWRhdGVUeXBlOmUudHlwZSxwcm90b2NvbDplLnByb3RvY29sfSksXCIsIHJlbW90ZSBcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KHtjYW5kaWRhdGVUeXBlOnQudHlwZSxwcm90b2NvbDp0LnByb3RvY29sLGFkZHJlc3M6dC5hZGRyZXNzLHBvcnQ6dC5wb3J0fSksXCIgKVwiKSl9fSkpfX10cnlVbmJpbmRUcmFuc3BvcnRFdmVudHMoKXt0aGlzLnRyYW5zcG9ydEV2ZW50UmVjZWl2ZXImJnRoaXMudHJhbnNwb3J0RXZlbnRSZWNlaXZlci50cmFuc3BvcnQmJih0aGlzLnRyYW5zcG9ydEV2ZW50UmVjZWl2ZXIudHJhbnNwb3J0Lm9uc3RhdGVjaGFuZ2U9bnVsbCx0aGlzLnRyYW5zcG9ydEV2ZW50UmVjZWl2ZXIudHJhbnNwb3J0Lm9uZXJyb3I9bnVsbCx0aGlzLnRyYW5zcG9ydEV2ZW50UmVjZWl2ZXIudHJhbnNwb3J0LmljZVRyYW5zcG9ydCYmKHRoaXMudHJhbnNwb3J0RXZlbnRSZWNlaXZlci50cmFuc3BvcnQuaWNlVHJhbnNwb3J0Lm9uc3RhdGVjaGFuZ2U9bnVsbCkpfWFzeW5jIHVwZGF0ZVJ0cFNlbmRlckVuY29kaW5ncyhlLHQpe3ZhciBpLG47aWYoIXQpe2NvbnN0IGk9dGhpcy5wZWVyQ29ubmVjdGlvbi5nZXRTZW5kZXJzKCk7dD1pLmZpbmQoKHQ9PnQudHJhY2s9PT1lLl9tZWRpYVN0cmVhbVRyYWNrKSl9aWYoIXQpcmV0dXJuIGZiLndhcm4oXCJbXCIuY29uY2F0KGUuZ2V0VHJhY2tJZCgpLFwiXSBubyBydHBTZW5kZXIgZm91bmR9XCIpKTtpZih0aGlzLmlzVlA4U2ltdWxjYXN0KGUpKXJldHVybiBmYi53YXJuKFwiW3VwZGF0ZVJ0cFNlbmRlckVuY29kaW5nc10gVHJhY2sgaXMgVlA4IHNpbXVsY2FzdCwgcGxlYXNlIGFwcGx5IHNpbXVsY2FzdCBlbmNvZGluZ3NcIik7aWYoIVpQKCkuc3VwcG9ydFNldFJ0cFNlbmRlclBhcmFtZXRlcnMpcmV0dXJuIGZiLndhcm4oXCJbdXBkYXRlUnRwU2VuZGVyRW5jb2RpbmdzXSBCcm93c2VyIG5vdCBzdXBwb3J0IHNldCBydHAtc2VuZGVyIHBhcmFtZXRlcnNcIik7Y29uc3Qgcj17fSxvPXt9O3N3aXRjaChlLl9vcHRpbWl6YXRpb25Nb2RlKXtjYXNlXCJtb3Rpb25cIjpyLmRlZ3JhZGF0aW9uUHJlZmVyZW5jZT1cIm1haW50YWluLWZyYW1lcmF0ZVwiO2JyZWFrO2Nhc2VcImRldGFpbFwiOnIuZGVncmFkYXRpb25QcmVmZXJlbmNlPVwibWFpbnRhaW4tcmVzb2x1dGlvblwiO2JyZWFrO2Nhc2VcImJhbGFuY2VkXCI6ci5kZWdyYWRhdGlvblByZWZlcmVuY2U9XCJiYWxhbmNlZFwifWNvbnN0IHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5nZXRUcmFuc2NlaXZlcnMoKS5maW5kKChlPT5lLnNlbmRlci50cmFjaz09PXR8fGUucmVjZWl2ZXIudHJhY2s9PT10KSl9KHRoaXMucGVlckNvbm5lY3Rpb24sZS5fbWVkaWFTdHJlYW1UcmFjayksYT13ayhlKTtpZihuQihlKSYmcyYmdCYmYSYmdGhpcy5nZXRMb2NhbFZpZGVvU3RhdHMmJkRuKGk9W1widnA4XCIsXCJ2cDlcIl0pLmNhbGwoaSx0aGlzLnN0b3JlLmNvZGVjKSl7dmFyIGM7Y29uc3QgaT1yLmRlZ3JhZGF0aW9uUHJlZmVyZW5jZXx8KERuKGM9ZS5faGludHMpLmNhbGwoYyxtTC5DVVNUT01fVFJBQ0spP1hBKFwiQ1VTVE9NX0FEQVBUQVRJT05fREVGQVVMVF9NT0RFXCIpOlwibWFpbnRhaW4tZnJhbWVyYXRlXCIpOyFmdW5jdGlvbihlLHQsaSxuLHIsbyl7aWYob0IoZSxpKSxyKHQpLFwiYmFsYW5jZWRcIiE9PW4mJlwibWFpbnRhaW4tZnJhbWVyYXRlXCIhPT1uJiZcIm1haW50YWluLXJlc29sdXRpb25cIiE9PW4pcmV0dXJuO2xldCBzPS0xO1pGKGUsdCk7Y29uc3QgYT13aW5kb3cuc2V0SW50ZXJ2YWwoKCgpPT57Y29uc3QgYT1yQi5nZXQoZSk7aWYoIVhBKFwiRU5BQkxFX0FHX0FEQVBUQVRJT05cIil8fCFhKXJldHVybiBvQihlLGkpLHZvaWQgcih0KTtjb25zdCBjPW8oKTtpZihjLnNlbmRQYWNrZXRzPjAmJmMuT3V0Z29pbmdBdmFpbGFibGVCYW5kd2lkdGg+MCl7aWYoLTE9PT1zKXJldHVybiB2b2lkKHM9RGF0ZS5ub3coKSk7aWYoRGF0ZS5ub3coKS1zPDFlMylyZXR1cm47Y29uc3Qgbz1jLnNlbmRGcmFtZVJhdGUsZD1jLk91dGdvaW5nQXZhaWxhYmxlQmFuZHdpZHRoLFtsLHVdPWVCKGUsbyxkLGEuYWRhcHRhdGlvbkNvbmZpZyx0LG4pO3UmJihpLnF1YWxpdHlMaW1pdGF0aW9uUmVhc29uPXUpLGwmJmEuYWRhcHRhdGlvbkNvbmZpZy5zY2FsZSE9PWwuc2NhbGUmJihmYi5kZWJ1ZyhcIltcIi5jb25jYXQoZSxcIl0gYXBwbHlBZGFwdGF0aW9uOiBcIikuY29uY2F0KGkucXVhbGl0eUxpbWl0YXRpb25SZWFzb24sXCJcXG4gICAgICAgICAgIHNlbmRGcHMgXCIpLmNvbmNhdChvLFwiLCBid2UgXCIpLmNvbmNhdChkLFwiLCBzd2l0Y2ggZnJvbSBcIikuY29uY2F0KGEuYWRhcHRhdGlvbkNvbmZpZy5zY2FsZSxcIiB0byBcIikuY29uY2F0KGwuc2NhbGUsXCIgXCIpKSxhLmFkYXB0YXRpb25Db25maWc9aUIoaUIoe30sYS5hZGFwdGF0aW9uQ29uZmlnKSxsKSxyKGwpKX19KSxYQShcIkNIRUNLX0xPQ0FMX1NUQVRTX0lOVEVSVkFMXCIpKSxjPWlCKHt9LHQpO3JCLnNldChlLHt0aW1lcjphLGFkYXB0YXRpb25Db25maWc6YyxvcmlnaW5Db25maWc6dCxhZGFwdGF0aW9uRnVuYzpyfSksZmIuZGVidWcoXCJbXCIuY29uY2F0KGUsXCJdIHN0YXJ0IGFkYXB0YXRpb24sIG9yaWdpbkNvbmZpZzogXCIpLmNvbmNhdChKU09OLnN0cmluZ2lmeSh0KSxcIiwgZGVncmFkYXRpb25QcmVmZXJlbmNlOiBcIikuY29uY2F0KG4pKX0odGhpcy5pZCtzLm1pZCxhLHRoaXMsaSwoZT0+e3QmJnRoaXMudXBkYXRlQWRhcHRhdGlvbih0LGUpfSksdGhpcy5nZXRMb2NhbFZpZGVvU3RhdHMuYmluZCh0aGlzKSl9aWYoZS5fZW5jb2RlckNvbmZpZyl7dmFyIGQ7Y29uc3R7Yml0cmF0ZU1heDp0LGZyYW1lUmF0ZTppLHNjYWxlUmVzb2x1dGlvbkRvd25CeTpufT1lLl9lbmNvZGVyQ29uZmlnO3QmJihvLm1heEJpdHJhdGU9MWUzKnQpLChEbihkPWUuX2hpbnRzKS5jYWxsKGQsbUwuTE9XX1NUUkVBTSl8fGUuaXNVc2VTY2FsZVJlc29sdXRpb25Eb3duQnkpJiYoaSYmKG8ubWF4RnJhbWVyYXRlPVFPKGkpKSxuJiZuPj0xJiYoby5zY2FsZVJlc29sdXRpb25Eb3duQnk9bikpfWNvbnN0e21heEZyYW1lcmF0ZTpsfT1YQShcIkVOQ09ERVJfQ09ORklHX0xJTUlUXCIpO2lmKGwmJlwibnVtYmVyXCI9PXR5cGVvZiBsJiYoby5tYXhGcmFtZXJhdGU9by5tYXhGcmFtZXJhdGU/TWF0aC5taW4oby5tYXhGcmFtZXJhdGUsbCk6bCksWEEoXCJEU0NQX1RZUEVcIikmJkV5KCkpe3ZhciB1O2NvbnN0IGU9WEEoXCJEU0NQX1RZUEVcIik7RG4odT1bXCJ2ZXJ5LWxvd1wiLFwibG93XCIsXCJtZWRpdW1cIixcImhpZ2hcIl0pLmNhbGwodSxlKSYmKG8ubmV0d29ya1ByaW9yaXR5PWUpfWNvbnN0IGg9dC5nZXRQYXJhbWV0ZXJzKCkscD1udWxsPT09KG49aC5lbmNvZGluZ3MpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuWzBdO1p2KCkmJiFwJiYoci5lbmNvZGluZ3M9W29dKSxwJiZPYmplY3QuYXNzaWduKHAsbyksT2JqZWN0LmFzc2lnbihoLHIpLGZiLmRlYnVnKFwiW1wiLmNvbmNhdChlLmdldFRyYWNrSWQoKSxcIl0gdXBkYXRlUnRwU2VuZGVyRW5jb2RpbmdzOiBcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KGguZW5jb2RpbmdzKSkpLGF3YWl0IHQuc2V0UGFyYW1ldGVycyhoKSxhd2FpdCBhc3luYyBmdW5jdGlvbihlLHQsaSl7dHJ5e3ZhciBuO2lmKCFaUCgpLnN1cHBvcnRTZXRSdHBTZW5kZXJQYXJhbWV0ZXJzKXJldHVybjtpZighZnVuY3Rpb24oZSl7cmV0dXJuXCJ2cDlcIj09PWV9KGUpfHwhWEEoXCJFTkFCTEVfU1ZDXCIpKXJldHVybjtjb25zdCByPXt9LG89e30scz10LmdldFBhcmFtZXRlcnMoKSxhPW51bGw9PT0obj1zLmVuY29kaW5ncyl8fHZvaWQgMD09PW4/dm9pZCAwOm5bMF07by5zY2FsYWJpbGl0eU1vZGU9QlUoaSksYSYmT2JqZWN0LmFzc2lnbihhLG8pLE9iamVjdC5hc3NpZ24ocyxyKSxhd2FpdCB0LnNldFBhcmFtZXRlcnMocyksZmIuZGVidWcoXCJbdXBkYXRlQWRhcHRhdGlvbl0gdXBkYXRlUnRwU2VuZGVyRW5jb2RpbmdzIHNjYWxhYmlsaXR5TW9kZSBzdWNjZXNzOiBcIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkocy5lbmNvZGluZ3MpKSl9Y2F0Y2goZSl7ZmIuZGVidWcoXCJbdXBkYXRlQWRhcHRhdGlvbl0gdXBkYXRlUnRwU2VuZGVyRW5jb2RpbmdzIHNjYWxhYmlsaXR5TW9kZSBmYWlsZWRcIixlKX19KHRoaXMuc3RvcmUuY29kZWMsdCxYQShcIlNWQ19NT0RFXCIpKX1hc3luYyB1cGRhdGVBZGFwdGF0aW9uKGUsdCl7dmFyIGksbjtpZighZSlyZXR1cm4gZmIuZGVidWcoXCJbdXBkYXRlQWRhcHRhdGlvbl0gbm8gcnRwU2VuZGVyIGZvdW5kXCIpO2lmKCFaUCgpLnN1cHBvcnRTZXRSdHBTZW5kZXJQYXJhbWV0ZXJzKXJldHVybiBmYi5kZWJ1ZyhcIlt1cGRhdGVBZGFwdGF0aW9uXSBCcm93c2VyIG5vdCBzdXBwb3J0IHNldCBydHAtc2VuZGVyIHBhcmFtZXRlcnNcIik7Y29uc3Qgcj17fSx7Yml0cmF0ZU1heDpvLGZyYW1lUmF0ZTpzLHNjYWxlUmVzb2x1dGlvbkRvd25CeTphfT10O28mJihyLm1heEJpdHJhdGU9MWUzKm8pLHMmJihyLm1heEZyYW1lcmF0ZT1RTyhzKSksYSYmYT49MSYmRG4oaT1bXCJ2cDhcIixcInZwOVwiXSkuY2FsbChpLHRoaXMuc3RvcmUuY29kZWMpJiYoci5zY2FsZVJlc29sdXRpb25Eb3duQnk9YSk7Y29uc3QgYz1lLmdldFBhcmFtZXRlcnMoKSxkPW51bGw9PT0obj1jLmVuY29kaW5ncyl8fHZvaWQgMD09PW4/dm9pZCAwOm5bMF07ZCYmT2JqZWN0LmFzc2lnbihkLHIpLE9iamVjdC5hc3NpZ24oYyx7fSk7dHJ5e2F3YWl0IGUuc2V0UGFyYW1ldGVycyhjKSxmYi5kZWJ1ZyhcIlt1cGRhdGVBZGFwdGF0aW9uXSB1cGRhdGVSdHBTZW5kZXJFbmNvZGluZ3M6IFwiLmNvbmNhdChKU09OLnN0cmluZ2lmeShjLmVuY29kaW5ncykpKX1jYXRjaCh0KXshKFwidHJhbnNwb3J0XCJpbiBlKXx8ZS50cmFuc3BvcnQmJlwiY29ubmVjdGVkXCI9PT1lLnRyYW5zcG9ydC5zdGF0ZT9cImNvbm5lY3RlZFwiIT09dGhpcy5wZWVyQ29ubmVjdGlvblN0YXRlP2ZiLmRlYnVnKFwiW3VwZGF0ZUFkYXB0YXRpb25dIHBlZXJDb25uZWN0aW9uIG5vdCBjb25uZWN0ZWR9XCIpOmZiLmRlYnVnKFwiW3VwZGF0ZUFkYXB0YXRpb25dIHVwZGF0ZVJ0cFNlbmRlckVuY29kaW5ncyBmYWlsZWRcIix0KTpmYi5kZWJ1ZyhcIlt1cGRhdGVBZGFwdGF0aW9uXSBydHBTZW5kZXIgdHJhbnNwb3J0IG5vdCBjb25uZWN0ZWR9XCIpfX1hc3luYyBhcHBseVNlbmRFbmNvZGluZ3MoZSx0KXt0cnl7aWYoIVpQKCkuc3VwcG9ydFNldFJ0cFNlbmRlclBhcmFtZXRlcnMpcmV0dXJuO2lmKGUubGVuZ3RoIT09dC5sZW5ndGgpcmV0dXJuO2ZvcihsZXQgaT0wO2k8ZS5sZW5ndGg7aSsrKXtjb25zdCBuPWVbaV0scj10W2ldO3IgaW5zdGFuY2VvZiBhVSYmIXRoaXMuaXNWUDhTaW11bGNhc3QocikmJmF3YWl0IHRoaXMudXBkYXRlUnRwU2VuZGVyRW5jb2RpbmdzKHIsbi5zZW5kZXIpfX1jYXRjaChlKXtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gQXBwbHkgUlRQU2VuZEVuY29kaW5ncyBmYWlsZWQuXCIpKX19bXVuZ1NlbmRPZmZlclNEUChlLHQsaSl7Y29uc3Qgbj1GVS5wYXJzZShlKTtyZXR1cm4gdC5mb3JFYWNoKCgoZSx0KT0+e2NvbnN0IHI9aVt0XSxvPW4ubWVkaWFEZXNjcmlwdGlvbnMuZmluZCgoZT0+ZS5hdHRyaWJ1dGVzLm1pZD09PXIpKTtvJiYoSlUobyxlKSxleChvLGUsdGhpcy5zdG9yZS5jb2RlYykpfSkpLEZVLnByaW50KG4pfWJpbmRTdGF0c0V2ZW50cygpe3RoaXMuc3RhdHNGaWx0ZXIub25GaXJzdEF1ZGlvUmVjZWl2ZWQ9ZT0+e3ZhciB0O251bGw9PT0odD10aGlzLm9uRmlyc3RBdWRpb1JlY2VpdmVkKXx8dm9pZCAwPT09dHx8dC5jYWxsKHRoaXMsZSl9LHRoaXMuc3RhdHNGaWx0ZXIub25GaXJzdFZpZGVvUmVjZWl2ZWQ9ZT0+e3ZhciB0O251bGw9PT0odD10aGlzLm9uRmlyc3RWaWRlb1JlY2VpdmVkKXx8dm9pZCAwPT09dHx8dC5jYWxsKHRoaXMsZSl9LHRoaXMuc3RhdHNGaWx0ZXIub25GaXJzdEF1ZGlvRGVjb2RlZD1lPT57dmFyIHQ7bnVsbD09PSh0PXRoaXMub25GaXJzdEF1ZGlvRGVjb2RlZCl8fHZvaWQgMD09PXR8fHQuY2FsbCh0aGlzLGUpfSx0aGlzLnN0YXRzRmlsdGVyLm9uRmlyc3RWaWRlb0RlY29kZWQ9KGUsdCxpKT0+e3ZhciBuO251bGw9PT0obj10aGlzLm9uRmlyc3RWaWRlb0RlY29kZWQpfHx2b2lkIDA9PT1ufHxuLmNhbGwodGhpcyxlLHQsaSl9LHRoaXMuc3RhdHNGaWx0ZXIub25TZWxlY3RlZExvY2FsQ2FuZGlkYXRlQ2hhbmdlZD0oZSx0KT0+e3ZhciBpO251bGw9PT0oaT10aGlzLm9uU2VsZWN0ZWRMb2NhbENhbmRpZGF0ZUNoYW5nZWQpfHx2b2lkIDA9PT1pfHxpLmNhbGwodGhpcyxlLHQpfSx0aGlzLnN0YXRzRmlsdGVyLm9uU2VsZWN0ZWRSZW1vdGVDYW5kaWRhdGVDaGFuZ2VkPShlLHQpPT57dmFyIGk7bnVsbD09PShpPXRoaXMub25TZWxlY3RlZFJlbW90ZUNhbmRpZGF0ZUNoYW5nZWQpfHx2b2lkIDA9PT1pfHxpLmNhbGwodGhpcyxlLHQpfSx0aGlzLnN0YXRzRmlsdGVyLm9uRmlyc3RWaWRlb0RlY29kZWRUaW1lb3V0PWU9Pnt2YXIgdDtudWxsPT09KHQ9dGhpcy5vbkZpcnN0VmlkZW9EZWNvZGVkVGltZW91dCl8fHZvaWQgMD09PXR8fHQuY2FsbCh0aGlzLGUpfX11bmJpbmRTdGF0c0V2ZW50cygpe3RoaXMuc3RhdHNGaWx0ZXIub25GaXJzdEF1ZGlvUmVjZWl2ZWQ9dm9pZCAwLHRoaXMuc3RhdHNGaWx0ZXIub25GaXJzdFZpZGVvUmVjZWl2ZWQ9dm9pZCAwLHRoaXMuc3RhdHNGaWx0ZXIub25GaXJzdEF1ZGlvRGVjb2RlZD12b2lkIDAsdGhpcy5zdGF0c0ZpbHRlci5vbkZpcnN0VmlkZW9EZWNvZGVkPXZvaWQgMCx0aGlzLnN0YXRzRmlsdGVyLm9uU2VsZWN0ZWRMb2NhbENhbmRpZGF0ZUNoYW5nZWQ9dm9pZCAwLHRoaXMuc3RhdHNGaWx0ZXIub25TZWxlY3RlZFJlbW90ZUNhbmRpZGF0ZUNoYW5nZWQ9dm9pZCAwLHRoaXMuc3RhdHNGaWx0ZXIub25GaXJzdFZpZGVvRGVjb2RlZFRpbWVvdXQ9dm9pZCAwfWFzeW5jIGFwcGx5U2ltdWxjYXN0Rm9yRmlyZWZveChlLHQpe2lmKGUubGVuZ3RoPT09dC5sZW5ndGgpZm9yKGxldCBhPTA7YTxlLmxlbmd0aDthKyspe3ZhciBpLG4scixvLHM7Y29uc3QgYz1lW2FdLGQ9dFthXTtpZihkIGluc3RhbmNlb2YgYVUmJiFEbihpPWQuX2hpbnRzKS5jYWxsKGksbUwuTE9XX1NUUkVBTSkmJm51bGwhPT0obj1kLl9lbmNvZGVyQ29uZmlnKSYmdm9pZCAwIT09biYmbi5iaXRyYXRlTWF4JiYobnVsbD09PShyPWQuX2VuY29kZXJDb25maWcpfHx2b2lkIDA9PT1yP3ZvaWQgMDpyLmJpdHJhdGVNYXgpPjIwMCYmbnVsbCE9PShvPWQuX3NjYWxhYmlsaXR5TW9kZSkmJnZvaWQgMCE9PW8mJm8ubnVtU3BhdGlhbExheWVycyYmKG51bGw9PT0ocz1kLl9zY2FsYWJpbGl0eU1vZGUpfHx2b2lkIDA9PT1zP3ZvaWQgMDpzLm51bVNwYXRpYWxMYXllcnMpPjEmJlwidnA4XCI9PT10aGlzLnN0b3JlLmNvZGVjKXtjb25zdCBlPXt9LHQ9e2hpZ2g6MWUzKihkLl9lbmNvZGVyQ29uZmlnLmJpdHJhdGVNYXgtNTApLG1lZGl1bTo1ZTR9O2UuZW5jb2RpbmdzPVt7cmlkOlwibVwiLGFjdGl2ZTohMCxtYXhCaXRyYXRlOnQubWVkaXVtLHNjYWxlUmVzb2x1dGlvbkRvd25CeTo0fSx7cmlkOlwiaFwiLGFjdGl2ZTohMCxtYXhCaXRyYXRlOnQuaGlnaH1dO2NvbnN0IGk9Yy5zZW5kZXIuZ2V0UGFyYW1ldGVycygpO2F3YWl0IGMuc2VuZGVyLnNldFBhcmFtZXRlcnMoT2JqZWN0LmFzc2lnbihpLGUpKX19fWFzeW5jIGFwcGx5U2ltdWxjYXN0RW5jb2RpbmdzKGUsdCl7aWYoIVp2KCkmJmUubGVuZ3RoPT09dC5sZW5ndGgpZm9yKGxldCBpPTA7aTxlLmxlbmd0aDtpKyspe2NvbnN0IG49dFtpXTtpZihuIGluc3RhbmNlb2YgYVUmJnRoaXMuaXNWUDhTaW11bGNhc3Qobikpe2NvbnN0IHQ9ZVtpXSxyPXt9LG89e2hpZ2g6MWUzKihuLl9lbmNvZGVyQ29uZmlnLmJpdHJhdGVNYXgtNTApLG1lZGl1bTo1ZTR9O3IuZW5jb2RpbmdzPVt7YWN0aXZlOiEwLGFkYXB0aXZlUHRpbWU6ITEsbmV0d29ya1ByaW9yaXR5OlwiaGlnaFwiLHByaW9yaXR5OlwiaGlnaFwiLG1heEJpdHJhdGU6by5oaWdofSx7YWN0aXZlOiEwLGFkYXB0aXZlUHRpbWU6ITEsbmV0d29ya1ByaW9yaXR5OlwibG93XCIscHJpb3JpdHk6XCJsb3dcIixtYXhCaXRyYXRlOm8ubWVkaXVtLHNjYWxlUmVzb2x1dGlvbkRvd25CeTo0fV07Y29uc3Qgcz10LnNlbmRlci5nZXRQYXJhbWV0ZXJzKCk7YXdhaXQgdC5zZW5kZXIuc2V0UGFyYW1ldGVycyhPYmplY3QuYXNzaWduKHMscikpfX19aXNWUDhTaW11bGNhc3QoZSl7dmFyIHQsaSxuLHIsbztyZXR1cm4hIShlIGluc3RhbmNlb2YgYVUmJlhBKFwiU0lNVUxDQVNUXCIpJiZcInZwOFwiPT09dGhpcy5zdG9yZS5jb2RlYyYmIURuKHQ9ZS5faGludHMpLmNhbGwodCxtTC5MT1dfU1RSRUFNKSYmbnVsbCE9PShpPWUuX2VuY29kZXJDb25maWcpJiZ2b2lkIDAhPT1pJiZpLmJpdHJhdGVNYXgmJihudWxsPT09KG49ZS5fZW5jb2RlckNvbmZpZyl8fHZvaWQgMD09PW4/dm9pZCAwOm4uYml0cmF0ZU1heCk+MjAwJiZudWxsIT09KHI9ZS5fc2NhbGFiaWxpdHlNb2RlKSYmdm9pZCAwIT09ciYmci5udW1TcGF0aWFsTGF5ZXJzJiYobnVsbD09PShvPWUuX3NjYWxhYmlsaXR5TW9kZSl8fHZvaWQgMD09PW8/dm9pZCAwOm8ubnVtU3BhdGlhbExheWVycyk+MSl9bG9nU0RQRXhjaGFuZ2UoZSx0LGksbil7aWYoWEEoXCJTRFBfTE9HR0lOR1wiKSlyZXR1cm4gZmIudXBsb2FkKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBleGNoYW5naW5nIFwiKS5jb25jYXQoaSxcIiBcIikuY29uY2F0KHQsXCIgU0RQIGR1cmluZyBQMlBDb25uZWN0aW9uLlwiKS5jb25jYXQobixcIlxcblwiKSxlKSxcIm9mZmVyXCI9PT10P2U9Pnt0aGlzLmxvZ1NEUEV4Y2hhbmdlKGUsXCJhbnN3ZXJcIixcImxvY2FsXCI9PT1pP1wicmVtb3RlXCI6XCJsb2NhbFwiLG4pfTp2b2lkIDB9YXN5bmMgZ2V0UmVtb3RlU1NSQyhlKXtpZighdGhpcy5yZW1vdGVTRFApcmV0dXJuO2NvbnN0IHQ9dGhpcy5yZW1vdGVTRFAuZ2V0U1NSQyhlKTtyZXR1cm4gdCYmMCE9PXQubGVuZ3RoP3RbMF0uc3NyY0lkOnZvaWQgMH1zZXRDb25maWd1cmF0aW9uKHQpe2lmKFpQKCkuc3VwcG9ydFBDU2V0Q29uZmlndXJhdGlvbil7Y29uc3QgaT1lLnJlc29sdmVQQ0NvbmZpZ3VyYXRpb24odCk7dGhpcy5wZWVyQ29ubmVjdGlvbi5zZXRDb25maWd1cmF0aW9uKGkpfX19LEN3KHNCLnByb3RvdHlwZSxcInVwZGF0ZVJlbW90ZVJUUENhcGFiaWxpdGllc1wiLFtsQl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzQi5wcm90b3R5cGUsXCJ1cGRhdGVSZW1vdGVSVFBDYXBhYmlsaXRpZXNcIiksc0IucHJvdG90eXBlKSxDdyhzQi5wcm90b3R5cGUsXCJjb25uZWN0XCIsW2xCXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNCLnByb3RvdHlwZSxcImNvbm5lY3RcIiksc0IucHJvdG90eXBlKSxDdyhzQi5wcm90b3R5cGUsXCJ1cGRhdGVSZW1vdGVDb25uZWN0XCIsW2xCXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNCLnByb3RvdHlwZSxcInVwZGF0ZVJlbW90ZUNvbm5lY3RcIiksc0IucHJvdG90eXBlKSxDdyhzQi5wcm90b3R5cGUsXCJjcmVhdGVEYXRhQ2hhbm5lbHNcIixbbEJdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc0IucHJvdG90eXBlLFwiY3JlYXRlRGF0YUNoYW5uZWxzXCIpLHNCLnByb3RvdHlwZSksQ3coc0IucHJvdG90eXBlLFwicmVjZWl2ZVwiLFtsQl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzQi5wcm90b3R5cGUsXCJyZWNlaXZlXCIpLHNCLnByb3RvdHlwZSksQ3coc0IucHJvdG90eXBlLFwiYmF0Y2hSZWNlaXZlXCIsW2xCXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNCLnByb3RvdHlwZSxcImJhdGNoUmVjZWl2ZVwiKSxzQi5wcm90b3R5cGUpLEN3KHNCLnByb3RvdHlwZSxcInN0b3BSZWNlaXZpbmdcIixbbEJdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc0IucHJvdG90eXBlLFwic3RvcFJlY2VpdmluZ1wiKSxzQi5wcm90b3R5cGUpLEN3KHNCLnByb3RvdHlwZSxcIm11dGVSZW1vdGVcIixbbEJdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc0IucHJvdG90eXBlLFwibXV0ZVJlbW90ZVwiKSxzQi5wcm90b3R5cGUpLEN3KHNCLnByb3RvdHlwZSxcInVubXV0ZVJlbW90ZVwiLFtsQl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzQi5wcm90b3R5cGUsXCJ1bm11dGVSZW1vdGVcIiksc0IucHJvdG90eXBlKSxDdyhzQi5wcm90b3R5cGUsXCJtdXRlTG9jYWxcIixbbEJdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc0IucHJvdG90eXBlLFwibXV0ZUxvY2FsXCIpLHNCLnByb3RvdHlwZSksQ3coc0IucHJvdG90eXBlLFwidW5tdXRlTG9jYWxcIixbbEJdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc0IucHJvdG90eXBlLFwidW5tdXRlTG9jYWxcIiksc0IucHJvdG90eXBlKSxDdyhzQi5wcm90b3R5cGUsXCJjbG9zZVwiLFtsQl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzQi5wcm90b3R5cGUsXCJjbG9zZVwiKSxzQi5wcm90b3R5cGUpLEN3KHNCLnByb3RvdHlwZSxcInVwZGF0ZUVuY29kZXJDb25maWdcIixbbEJdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc0IucHJvdG90eXBlLFwidXBkYXRlRW5jb2RlckNvbmZpZ1wiKSxzQi5wcm90b3R5cGUpLEN3KHNCLnByb3RvdHlwZSxcInVwZGF0ZVNlbmRQYXJhbWV0ZXJzXCIsW2xCXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNCLnByb3RvdHlwZSxcInVwZGF0ZVNlbmRQYXJhbWV0ZXJzXCIpLHNCLnByb3RvdHlwZSksQ3coc0IucHJvdG90eXBlLFwicmVwbGFjZVRyYWNrXCIsW2xCXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNCLnByb3RvdHlwZSxcInJlcGxhY2VUcmFja1wiKSxzQi5wcm90b3R5cGUpLEN3KHNCLnByb3RvdHlwZSxcInVwZGF0ZUFkYXB0YXRpb25cIixbbEJdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc0IucHJvdG90eXBlLFwidXBkYXRlQWRhcHRhdGlvblwiKSxzQi5wcm90b3R5cGUpLEN3KHNCLnByb3RvdHlwZSxcImdldFJlbW90ZVNTUkNcIixbbEJdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc0IucHJvdG90eXBlLFwiZ2V0UmVtb3RlU1NSQ1wiKSxzQi5wcm90b3R5cGUpLHNCKTtmdW5jdGlvbiBsQihlLHQsaSl7Y29uc3Qgbj1lW3RdO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIG4pdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHVzZSBtdXRleCBvbiBvYmplY3QgcHJvcGVydHkuXCIpO3JldHVybiBpLnZhbHVlPWFzeW5jIGZ1bmN0aW9uKCl7Y29uc3QgZT10aGlzLm11dGV4LGk9YXdhaXQgZS5sb2NrKFwiRnJvbSBQMlBDb25uZWN0aW9uLlwiLmNvbmNhdCh0KSk7dHJ5e2Zvcih2YXIgcj1hcmd1bWVudHMubGVuZ3RoLG89bmV3IEFycmF5KHIpLHM9MDtzPHI7cysrKW9bc109YXJndW1lbnRzW3NdO3JldHVybiBhd2FpdCBuLmFwcGx5KHRoaXMsbyl9ZmluYWxseXtpKCl9fSxpfXZhciB1QjtmdW5jdGlvbiBoQihlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gcEIoZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/aEIoT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6aEIoT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9ZnVuY3Rpb24gX0IoZSl7dmFyIHQsaSxuLHI9Mjtmb3IoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmKGk9Skksbj1TeW1ib2wuaXRlcmF0b3IpO3ItLTspe2lmKGkmJm51bGwhPSh0PWVbaV0pKXJldHVybiB0LmNhbGwoZSk7aWYobiYmbnVsbCE9KHQ9ZVtuXSkpcmV0dXJuIG5ldyBFQih0LmNhbGwoZSkpO2k9XCJAQGFzeW5jSXRlcmF0b3JcIixuPVwiQEBpdGVyYXRvclwifXRocm93IG5ldyBUeXBlRXJyb3IoXCJPYmplY3QgaXMgbm90IGFzeW5jIGl0ZXJhYmxlXCIpfWZ1bmN0aW9uIEVCKGUpe2Z1bmN0aW9uIHQoZSl7aWYoT2JqZWN0KGUpIT09ZSlyZXR1cm4gR2gucmVqZWN0KG5ldyBUeXBlRXJyb3IoZStcIiBpcyBub3QgYW4gb2JqZWN0LlwiKSk7dmFyIHQ9ZS5kb25lO3JldHVybiBHaC5yZXNvbHZlKGUudmFsdWUpLnRoZW4oKGZ1bmN0aW9uKGUpe3JldHVybnt2YWx1ZTplLGRvbmU6dH19KSl9cmV0dXJuIEVCPWZ1bmN0aW9uKGUpe3RoaXMucz1lLHRoaXMubj1lLm5leHR9LEVCLnByb3RvdHlwZT17czpudWxsLG46bnVsbCxuZXh0OmZ1bmN0aW9uKCl7cmV0dXJuIHQodGhpcy5uLmFwcGx5KHRoaXMucyxhcmd1bWVudHMpKX0scmV0dXJuOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMucy5yZXR1cm47cmV0dXJuIHZvaWQgMD09PWk/R2gucmVzb2x2ZSh7dmFsdWU6ZSxkb25lOiEwfSk6dChpLmFwcGx5KHRoaXMucyxhcmd1bWVudHMpKX0sdGhyb3c6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5zLnJldHVybjtyZXR1cm4gdm9pZCAwPT09aT9HaC5yZWplY3QoZSk6dChpLmFwcGx5KHRoaXMucyxhcmd1bWVudHMpKX19LG5ldyBFQihlKX1sZXQgZkI9KHVCPWNsYXNzIGV4dGVuZHMgeHl7Z2V0IHN0YXRlKCl7cmV0dXJuIHRoaXMuX3N0YXRlfXNldCBzdGF0ZShlKXtjb25zdCB0PXRoaXMuX3N0YXRlO3RoaXMuX3N0YXRlPWUsdGhpcy5lbWl0KF9PLlN0YXRlQ2hhbmdlLHQsdGhpcy5fc3RhdGUpfWNvbnN0cnVjdG9yKGUsdCl7c3VwZXIoKSxGZyh0aGlzLFwiaXNQbGFuQlwiLHZvaWQgMCksRmcodGhpcyxcInN0b3JlXCIsdm9pZCAwKSxGZyh0aGlzLFwic3RhdHNVcGxvYWRlclwiLHZvaWQgMCksRmcodGhpcyxcImNvbm5lY3Rpb25cIix2b2lkIDApLEZnKHRoaXMsXCJsb2NhbFRyYWNrTWFwXCIsbmV3IE1hcCksRmcodGhpcyxcInJlbW90ZVVzZXJNYXBcIixuZXcgTWFwKSxGZyh0aGlzLFwibG9jYWxEYXRhQ2hhbm5lbHNcIixbXSksRmcodGhpcyxcInJlbW90ZURhdGFDaGFubmVsTWFwXCIsbmV3IE1hcCksRmcodGhpcyxcInBlbmRpbmdMb2NhbFRyYWNrc1wiLFtdKSxGZyh0aGlzLFwicGVuZGluZ1JlbW90ZVRyYWNrc1wiLFtdKSxGZyh0aGlzLFwicGVuZGluZ0xvY2FsRGF0YUNoYW5uZWxzXCIsW10pLEZnKHRoaXMsXCJwZW5kaW5nUmVtb3RlRGF0YUNoYW5uZWxzXCIsW10pLEZnKHRoaXMsXCJzdGF0c0NvbGxlY3RvclwiLHZvaWQgMCksRmcodGhpcyxcInNob3VsZEZvcndhcmRQMlBDcmVhdGlvblwiLHZvaWQgMCksRmcodGhpcyxcImljZUZhaWxlZENvdW50XCIsMCksRmcodGhpcyxcImR0bHNGYWlsZWRDb3VudFwiLDApLEZnKHRoaXMsXCJtdXRleFwiLG5ldyBOQShcIlAyUENoYW5uZWwtbXV0ZXhcIikpLEZnKHRoaXMsXCJfc3RhdGVcIixwTy5EaXNjb25uZWN0ZWQpLEZnKHRoaXMsXCJfcGNTdGF0c1VwbG9hZFR5cGVcIixYQShcIk5FV19JQ0VfUkVTVEFSVFwiKT91Ty5GSVJTVF9DT05ORUNUSU9OOnVPLk9MRF9GSVJTVF9DT05ORUNUSU9OKSxGZyh0aGlzLFwiX2lzSW5SZXN0YXJ0SWNlXCIsITEpLEZnKHRoaXMsXCJfaXNTdGFydFJlc3RhcnRJY2VcIiwhMSksRmcodGhpcyxcIl9yZXN0YXJ0U3RhdGVzXCIsW1wiZGlzY29ubmVjdGVkXCIsXCJmYWlsZWRcIl0pLEZnKHRoaXMsXCJfcmVzdGFydFRpbWVyXCIsdm9pZCAwKSxGZyh0aGlzLFwiX2lzRmlyc3RDb25uZWN0ZWRcIiwhMCksRmcodGhpcyxcImhhbmRsZU11dGVMb2NhbFRyYWNrXCIsKGFzeW5jKGUsdCxpKT0+e2NvbnN0IG49YXdhaXQgdGhpcy5tdXRleC5sb2NrKFwiTG9ja2luZyBmcm9tIFAyUENoYW5uZWwuaGFuZGxlTXV0ZUxvY2FsVHJhY2tcIik7dHJ5e2lmKCF0aGlzLmNvbm5lY3Rpb258fHRoaXMuc3RhdGUhPT1wTy5Db25uZWN0ZWQpcmV0dXJuIHZvaWQgaShuZXcgQ3koUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJDYW5ub3QgY2FsbCBQMlBDaGFubmVsLmhhbmRsZU11dGVMb2NhbFRyYWNrIGJlZm9yZSBjb25uZWN0aW9uIGVzdGFibGlzaGVkLlwiKSk7Y29uc3Qgcj10aGlzLmZpbHRlclRvYmVNdXRlZFRyYWNrcyhlKTtpZigwPT09ci5sZW5ndGgpcmV0dXJuIHZvaWQgdCgpO2NvbnN0IG89ci5maW5kKChlPT5cInZpZGVvTG93VHJhY2tcIj09PWVbMF0pKTtpZihvKXtvWzFdLnRyYWNrLl9vcmlnaW5NZWRpYVN0cmVhbVRyYWNrLnN0b3AoKX1hd2FpdCB0aGlzLmNvbm5lY3Rpb24ubXV0ZUxvY2FsKHIubWFwKChlPT57bGV0Wyx7aWQ6dH1dPWU7cmV0dXJuIHR9KSkpO2NvbnN0IHM9dGhpcy5jcmVhdGVNdXRlTWVzc2FnZShyKTthd2FpdCAkeSh0aGlzLF9PLlJlcXVlc3RNdXRlTG9jYWwscyksdCgpfWNhdGNoKGUpe2koZSl9ZmluYWxseXtuKCl9fSkpLEZnKHRoaXMsXCJoYW5kbGVVbm11dGVMb2NhbFRyYWNrXCIsKGFzeW5jKGUsdCxpKT0+e2NvbnN0IG49YXdhaXQgdGhpcy5tdXRleC5sb2NrKFwiTG9ja2luZyBmcm9tIFAyUENoYW5uZWwuaGFuZGxlVW5tdXRlTG9jYWxUcmFja1wiKTt0cnl7aWYoIXRoaXMuY29ubmVjdGlvbnx8dGhpcy5zdGF0ZSE9PXBPLkNvbm5lY3RlZClyZXR1cm4gdm9pZCBpKG5ldyBDeShSeS5JTlZBTElEX09QRVJBVElPTixcIkNhbm5vdCBjYWxsIFAyUENoYW5uZWwuaGFuZGxlVW5tdXRlTG9jYWxUcmFjayBiZWZvcmUgY29ubmVjdGlvbiBlc3RhYmxpc2hlZC5cIikpO2NvbnN0IHI9dGhpcy5maWx0ZXJUb2JlVW5tdXRlZFRyYWNrcyhlKTtpZigwPT09ci5sZW5ndGgpcmV0dXJuIHZvaWQgdCgpO2NvbnN0IG89ci5maW5kKChlPT5cInZpZGVvTG93VHJhY2tcIj09PWVbMF0pKTtpZihvKXtjb25zdCB0PW9bMV07aWYodC50cmFjay5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5zdG9wKCksIVhBKFwiRElTQUJMRV9EVUFMX1NUUkVBTV9VU0VfRU5DT0RJTkdcIikmJlpQKCkuc3VwcG9ydER1YWxTdHJlYW1FbmNvZGluZyl7Y29uc3QgaT1lLl9tZWRpYVN0cmVhbVRyYWNrLmNsb25lKCk7dC50cmFjay5fbWVkaWFTdHJlYW1UcmFjaz1pLHQudHJhY2suX29yaWdpbk1lZGlhU3RyZWFtVHJhY2s9aX1lbHNle2NvbnN0IGk9S1YoZSx0QSh0aGlzLF9PLlJlcXVlc3RMb3dTdHJlYW1QYXJhbWV0ZXIpKTt0LnRyYWNrLl9tZWRpYVN0cmVhbVRyYWNrPWksdC50cmFjay5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjaz1pfWF3YWl0IG5ldyBHaCgoKGUsaSk9Pnt0aGlzLmhhbmRsZVJlcGxhY2VUcmFjayh0LnRyYWNrLGUsaSwhMCl9KSl9YXdhaXQgdGhpcy5jb25uZWN0aW9uLnVubXV0ZUxvY2FsKHIubWFwKChlPT57bGV0Wyx7aWQ6dH1dPWU7cmV0dXJuIHR9KSkpO2NvbnN0IHM9dGhpcy5jcmVhdGVVbm11dGVNZXNzYWdlKHIpO2F3YWl0ICR5KHRoaXMsX08uUmVxdWVzdFVubXV0ZUxvY2FsLHMpLHQoKX1jYXRjaChlKXtpKGUpfWZpbmFsbHl7bigpfX0pKSxGZyh0aGlzLFwiaGFuZGxlVXBkYXRlVmlkZW9FbmNvZGVyXCIsKGFzeW5jKGUsdCxpKT0+e2NvbnN0IG49YXdhaXQgdGhpcy5tdXRleC5sb2NrKFwiTG9ja2luZyBmcm9tIFAyUENoYW5uZWwuaGFuZGxlU2V0VmlkZW9FbmNvZGVyXCIpO3RyeXtjb25zdCBpPXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxWaWRlb1RyYWNrKTtpZighdGhpcy5jb25uZWN0aW9ufHwhaXx8aS50cmFjayE9PWV8fHRoaXMuc3RhdGUhPT1wTy5Db25uZWN0ZWQpcmV0dXJuIHZvaWQgdCgpO2NvbnN0e2lkOnIsdHJhY2s6b309aTthd2FpdCB0aGlzLmNvbm5lY3Rpb24udXBkYXRlU2VuZFBhcmFtZXRlcnMocixvKSxhd2FpdCB0aGlzLmNvbm5lY3Rpb24udXBkYXRlRW5jb2RlckNvbmZpZyhyLG8pLHRoaXMuZW1pdChfTy5VcGRhdGVWaWRlb0VuY29kZXIsbyksdCgpfWNhdGNoKGUpe2koZSl9ZmluYWxseXtuKCl9fSkpLEZnKHRoaXMsXCJoYW5kbGVVcGRhdGVWaWRlb1NlbmRQYXJhbWV0ZXJzXCIsKGFzeW5jKGUsdCxpKT0+e2NvbnN0IG49YXdhaXQgdGhpcy5tdXRleC5sb2NrKFwiTG9ja2luZyBmcm9tIFAyUENoYW5uZWwuaGFuZGxlVXBkYXRlVmlkZW9TZW5kUGFyYW1ldGVyc1wiKTt0cnl7Y29uc3QgaT10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsVmlkZW9UcmFjayk7aWYoIXRoaXMuY29ubmVjdGlvbnx8IWl8fGkudHJhY2shPT1lfHx0aGlzLnN0YXRlIT09cE8uQ29ubmVjdGVkKXJldHVybiB2b2lkIHQoKTtjb25zdHtpZDpyLHRyYWNrOm99PWk7YXdhaXQgdGhpcy5jb25uZWN0aW9uLnVwZGF0ZVNlbmRQYXJhbWV0ZXJzKHIsbyksdCgpfWNhdGNoKGUpe2koZSl9ZmluYWxseXtuKCl9fSkpLEZnKHRoaXMsXCJoYW5kbGVSZXBsYWNlTWl4aW5nVHJhY2tcIiwoYXN5bmMoZSx0LGksbik9PntpZighdGhpcy5jb25uZWN0aW9ufHx0aGlzLnN0YXRlIT09cE8uQ29ubmVjdGVkKXJldHVybiB2b2lkIHQoKTtjb25zdCByPWhGKFtlXSk7bGV0IG87ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFtwMnBJZDogXCIpLmNvbmNhdCh0aGlzLnN0b3JlLnAycElkLFwiXTogUDJQQ29ubmVjdGlvbiB3aWxsIHJlcGxhY2UgYXVkaW9UcmFjayBbXCIpLmNvbmNhdChyLmdldFRyYWNrSWQoKSxcIl1cIikpLFwiYm9vbGVhblwiPT10eXBlb2YgbiYmbnx8KG89YXdhaXQgdGhpcy5tdXRleC5sb2NrKFwiRnJvbSBQMlBDaGFubmVsLmhhbmRsZVJlcGxhY2VNaXhpbmdUcmFja1wiKSk7dHJ5e2F3YWl0IHRoaXMucmVwbGFjZVRyYWNrKGUsciksdCgpfWNhdGNoKGUpe2koZSl9ZmluYWxseXt2YXIgcztudWxsPT09KHM9byl8fHZvaWQgMD09PXN8fHMoKX19KSksRmcodGhpcyxcImhhbmRsZVJlcGxhY2VUcmFja1wiLChhc3luYyhlLHQsaSxuKT0+e2xldCByO2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBQMlBDaGFubmVsIGhhbmRsZVJlcGxhY2VUcmFjayBmb3IgW3RyYWNrLWlkLVwiKS5jb25jYXQoZS5nZXRUcmFja0lkKCksXCJdXCIpKSxcImJvb2xlYW5cIj09dHlwZW9mIG4mJm58fChyPWF3YWl0IHRoaXMubXV0ZXgubG9jayhcIkZyb20gUDJQQ2hhbm5lbC5oYW5kbGVSZXBsYWNlVHJhY2tcIikpO3RyeXt2YXIgbztjb25zdCBpPUFycmF5LmZyb20odGhpcy5sb2NhbFRyYWNrTWFwLmVudHJpZXMoKSkuZmluZCgodD0+e2xldFsse3RyYWNrOml9XT10O3JldHVybiBlPT09aX0pKTtpZighdGhpcy5jb25uZWN0aW9ufHwhaXx8dGhpcy5zdGF0ZSE9PXBPLkNvbm5lY3RlZClyZXR1cm4gdm9pZCB0KCk7aWYoYXdhaXQobnVsbD09PShvPXRoaXMuY29ubmVjdGlvbil8fHZvaWQgMD09PW8/dm9pZCAwOm8ucmVwbGFjZVRyYWNrKGUsaVsxXS5pZCkpLHRoaXMuaXNQbGFuQil7Y29uc3QgdD1pWzFdO3QuaWQ9ZS5fbWVkaWFTdHJlYW1UcmFjay5pZCx0aGlzLmxvY2FsVHJhY2tNYXAuc2V0KGlbMF0sdCl9aWYoaVswXT09PWhPLkxvY2FsVmlkZW9UcmFjayYmIVhBKFwiRElTQUJMRV9EVUFMX1NUUkVBTV9VU0VfRU5DT0RJTkdcIikmJlpQKCkuc3VwcG9ydER1YWxTdHJlYW1FbmNvZGluZyl7Y29uc3QgdD10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsVmlkZW9Mb3dUcmFjayk7aWYodCl7Y29uc3QgaT1lLl9tZWRpYVN0cmVhbVRyYWNrLmNsb25lKCk7dC50cmFjay5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5zdG9wKCksdC50cmFjay5fbWVkaWFTdHJlYW1UcmFjaz1pLHQudHJhY2suX29yaWdpbk1lZGlhU3RyZWFtVHJhY2s9aSxhd2FpdCBuZXcgR2goKChlLGkpPT57dGhpcy5oYW5kbGVSZXBsYWNlVHJhY2sodC50cmFjayxlLGksITApfSkpfX10KCl9Y2F0Y2goZSl7aShlKX1maW5hbGx5e3ZhciBzO251bGw9PT0ocz1yKXx8dm9pZCAwPT09c3x8cygpfX0pKSxGZyh0aGlzLFwiaGFuZGxlR2V0UlRDU3RhdHNcIiwoZT0+e2UodGhpcy5zdGF0c0NvbGxlY3Rvci5nZXRSVENTdGF0cygpKX0pKSxGZyh0aGlzLFwiaGFuZGxlR2V0TG9jYWxWaWRlb1N0YXRzXCIsKGU9PntlKHRoaXMuc3RhdHNDb2xsZWN0b3IuZ2V0TG9jYWxWaWRlb1RyYWNrU3RhdHMoKSl9KSksRmcodGhpcyxcImhhbmRsZUdldExvY2FsQXVkaW9TdGF0c1wiLChlPT57ZSh0aGlzLnN0YXRzQ29sbGVjdG9yLmdldExvY2FsQXVkaW9UcmFja1N0YXRzKCkpfSkpLEZnKHRoaXMsXCJoYW5kbGVHZXRSZW1vdGVWaWRlb1N0YXRzXCIsKGU9PnRoaXMuc3RhdHNDb2xsZWN0b3IuZ2V0UmVtb3RlVmlkZW9UcmFja1N0YXRzKGUudWlkKVtlLnVpZF0pKSxGZyh0aGlzLFwiaGFuZGxlR2V0UmVtb3RlQXVkaW9TdGF0c1wiLChlPT50aGlzLnN0YXRzQ29sbGVjdG9yLmdldFJlbW90ZUF1ZGlvVHJhY2tTdGF0cyhlLnVpZClbZS51aWRdKSksdGhpcy5zdG9yZT1lLHRoaXMuc3RhdHNDb2xsZWN0b3I9dCx0aGlzLnN0YXRzQ29sbGVjdG9yLmFkZFAyUENoYW5uZWwodGhpcyksdGhpcy5zdGF0c1VwbG9hZGVyPW5ldyBhRih0aGlzLnN0b3JlKSx0aGlzLmJpbmRTdGF0c1VwbG9hZGVyRXZlbnRzKCksdGhpcy5pc1BsYW5CPSFaUCgpLnN1cHBvcnRVbmlmaWVkUGxhbnx8WEEoXCJDSFJPTUVfRk9SQ0VfUExBTl9CXCIpJiZFeSgpLHRoaXMuc2hvdWxkRm9yd2FyZFAyUENyZWF0aW9uPVhBKFwiRk9SV0FSRF9QMlBfQ1JFQVRJT05cIikmJlpQKCkuc3VwcG9ydFBDU2V0Q29uZmlndXJhdGlvbiYmX3koKSx0aGlzLnNob3VsZEZvcndhcmRQMlBDcmVhdGlvbiYmKHRoaXMuY29ubmVjdGlvbj10aGlzLmlzUGxhbkI/bmV3IEZGKHt9LHRoaXMuc3RvcmUpOm5ldyBkQih7fSx0aGlzLnN0b3JlKSx0aGlzLmJpbmRDb25uZWN0aW9uRXZlbnRzKHRoaXMuY29ubmVjdGlvbikpfWFzeW5jIHN0YXJ0UDJQQ29ubmVjdGlvbihlKXt2YXIgdDt0aGlzLnN0YXRlPXBPLk5ldztjb25zdCBpPXRoaXMuc2hvdWxkRm9yd2FyZFAyUENyZWF0aW9uJiZcImNsb3NlZFwiPT09KG51bGw9PT0odD10aGlzLmNvbm5lY3Rpb24pfHx2b2lkIDA9PT10P3ZvaWQgMDp0LnBlZXJDb25uZWN0aW9uU3RhdGUpO2lmKHRoaXMuc2hvdWxkRm9yd2FyZFAyUENyZWF0aW9uJiYhaXx8KGkmJnRoaXMuY29ubmVjdGlvbiYmKGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFAyUENoYW5uZWwuc3RhcnRQMlBDb25uZWN0aW9uIEZvcndhcmRQMlAgY2xvc2VkLlwiKSksdGhpcy5jb25uZWN0aW9uLmNsb3NlKCksdGhpcy51bmJpbmRDb25uZWN0aW9uRXZlbnRzKHRoaXMuY29ubmVjdGlvbikpLHRoaXMuY29ubmVjdGlvbj10aGlzLmlzUGxhbkI/bmV3IEZGKGUsdGhpcy5zdG9yZSk6bmV3IGRCKGUsdGhpcy5zdG9yZSksdGhpcy5iaW5kQ29ubmVjdGlvbkV2ZW50cyh0aGlzLmNvbm5lY3Rpb24pKSwhdGhpcy5jb25uZWN0aW9uKXRocm93IG5ldyBDeShSeS5VTkVYUEVDVEVEX0VSUk9SLFwiQ2Fubm90IFAyUENoYW5uZWwuc3RhcnRDb25uZWN0aW9uIGJlZm9yZSBQMlBDb25uZWN0aW9uIGluaXRpYWxpemF0aW9uIC5cIik7cmV0dXJuIHRoaXMuX3BjU3RhdHNVcGxvYWRUeXBlPVhBKFwiTkVXX0lDRV9SRVNUQVJUXCIpP3VPLkZJUlNUX0NPTk5FQ1RJT046dU8uT0xEX0ZJUlNUX0NPTk5FQ1RJT04sdGhpcy5faXNGaXJzdENvbm5lY3RlZD0hMCx0aGlzLl9pc0luUmVzdGFydEljZT0hMSx0aGlzLl9pc1N0YXJ0UmVzdGFydEljZT0hMSx0aGlzLmNvbm5lY3Rpb24uc2V0Q29uZmlndXJhdGlvbihlKSx0aGlzLmNvbm5lY3Rpb24uZXN0YWJsaXNoUHJvbWlzZX1hc3luYyBjb25uZWN0KGUpe2lmKCF0aGlzLmNvbm5lY3Rpb24pdGhyb3cgbmV3IEN5KFJ5LlVORVhQRUNURURfRVJST1IsXCJDYW5ub3QgUDJQQ2hhbm5lbC5jb25uZWN0IGJlZm9yZSBQMlBDaGFubmVsLnN0YXJ0UDJQQ29ubmVjdGlvbiAuXCIpO1hBKFwiRU5BQkxFX1BSRUFMTE9DX1BDXCIpJiZ0aGlzLnN0YXRlPT09cE8uQ29ubmVjdGVkP2F3YWl0IHRoaXMuY29ubmVjdGlvbi51cGRhdGVSZW1vdGVDb25uZWN0KGUpOih0aGlzLnN0b3JlLnBlZXJDb25uZWN0aW9uU3RhcnQoKSxhd2FpdCB0aGlzLmNvbm5lY3Rpb24uY29ubmVjdChlKSx0aGlzLnN0YXRzVXBsb2FkZXIuc3RhcnRVcGxvYWRUcmFuc3BvcnRTdGF0cygpLHRoaXMuc3RhdHNVcGxvYWRlci5zdGFydFVwbG9hZEV4dGVuc2lvblVzYWdlU3RhdHMoKSx0aGlzLnN0YXRlPXBPLkNvbm5lY3RlZCl9dXBkYXRlUmVtb3RlUlRQQ2FwYWJpbGl0aWVzKGUpe2NvbnN0IHQ9QXJyYXkuZnJvbSh0aGlzLmxvY2FsVHJhY2tNYXAuZW50cmllcygpKS5maWx0ZXIoKGU9Pnt2YXIgdDtsZXRbaV09ZTtyZXR1cm4gRG4odD1baE8uTG9jYWxWaWRlb0xvd1RyYWNrLGhPLkxvY2FsVmlkZW9UcmFja10pLmNhbGwodCxpKX0pKSxpPXQubWFwKChlPT57bGV0Wyx7aWQ6dH1dPWU7cmV0dXJuIHR9KSksbj10Lm1hcCgoZT0+e2xldFt0XT1lO3JldHVybiB0fSkpO2lmKHRoaXMuY29ubmVjdGlvbiBpbnN0YW5jZW9mIGRCKXtpZih2Yi51cGRhdGVSZW1vdGVSVFBDYXBhYmlsaXRpZXModGhpcy5zdG9yZS5zZXNzaW9uSWQse3RyYWNrVHlwZXM6SlNPTi5zdHJpbmdpZnkobiksbG9jYWxDb2RlY3M6SlNPTi5zdHJpbmdpZnkodGhpcy5jb25uZWN0aW9uLmxvY2FsQ29kZWNzKSxyZW1vdGVDb2RlY3M6SlNPTi5zdHJpbmdpZnkoZSl9KSwhRG4oZSkuY2FsbChlLHRoaXMuc3RvcmUuY29kZWMpKXtjb25zdCB0PVtcInZwOVwiLFwidnA4XCIsXCJoMjY0XCJdLmZpbmQoKHQ9PkRuKGUpLmNhbGwoZSx0KSkpO3QmJih0aGlzLnN0b3JlLmNvZGVjPXQsZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFtcIikuY29uY2F0KHRoaXMuc3RvcmUucDJwSWQsXCIgdXBkYXRlUmVtb3RlUlRQQ2FwYWJpbGl0aWVzXSBkZWZhdWx0IGNvZGVjIGlzIG5vdCBhdmFpbGFibGUsIGhlbmNlIHRoZSBmYWxsYmFjayB0byBcIikuY29uY2F0KHQsXCIuXCIpKSl9dGhpcy5jb25uZWN0aW9uLnVwZGF0ZVJlbW90ZVJUUENhcGFiaWxpdGllcyhpLGUpfX1hc3luYyBnZXRFc3RhYmxpc2hQYXJhbXMoKXt2YXIgZTtpZih0aGlzLmNvbm5lY3Rpb24gaW5zdGFuY2VvZiBkQiYmXCJjbG9zZWRcIiE9PXRoaXMuY29ubmVjdGlvbi5wZWVyQ29ubmVjdGlvblN0YXRlJiZEbihlPVtwTy5OZXcscE8uQ29ubmVjdGVkXSkuY2FsbChlLHRoaXMuc3RhdGUpKXJldHVybiB0aGlzLmNvbm5lY3Rpb24uZXN0YWJsaXNoUHJvbWlzZX1hc3luYyBwdWJsaXNoRGF0YUNoYW5uZWwoZSl7aWYoIXRoaXMuY29ubmVjdGlvbnx8dGhpcy5zdGF0ZSE9PXBPLkNvbm5lY3RlZCl7aWYodGhpcy5zdGF0ZT09PXBPLkRpc2Nvbm5lY3RlZCl0aHJvdyBuZXcgQ3koUnkuVU5FWFBFQ1RFRF9FUlJPUixcIlBlZXJDb25uZWN0aW9uIGFscmVhZHkgZGlzY29ubmVjdGVkLlwiKTtyZXR1cm4gZS5mb3JFYWNoKChlPT57dmFyIHQ7RG4odD10aGlzLnBlbmRpbmdMb2NhbERhdGFDaGFubmVscykuY2FsbCh0LGUpfHx0aGlzLnBlbmRpbmdMb2NhbERhdGFDaGFubmVscy5wdXNoKGUpfSkpLFtdfWNvbnN0IHQ9dGhpcy5maWx0ZXJUb2JlUHVibGlzaGVkRGF0YUNoYW5uZWxzKGUpO3JldHVybiAwPT09dC5sZW5ndGg/W106KHQuZm9yRWFjaCgoZT0+e2NvbnN0IHQ9RGF0ZS5ub3coKTt0aGlzLnN0b3JlLnB1Ymxpc2goZS5pZC50b1N0cmluZygpLFwiZGF0YWNoYW5uZWxcIix0KX0pKSxhd2FpdCB0aGlzLmNvbm5lY3Rpb24uY3JlYXRlRGF0YUNoYW5uZWxzKHRoaXMuc3RvcmUudWlkLHQpLHQuZm9yRWFjaCgoZT0+e3RoaXMubG9jYWxEYXRhQ2hhbm5lbHMucHVzaChlKTtjb25zdCB0PURhdGUubm93KCk7dGhpcy5zdG9yZS5wdWJsaXNoKGUuaWQrXCJcIixcImRhdGFjaGFubmVsXCIsdm9pZCAwLHQpfSkpLGUubWFwKChlPT4oe3N0cmVhbUlkOmUuaWQsb3JkZXJlZDplLm9yZGVyZWQsbWF4UmV0cmFuc21pdHM6ZS5tYXhSZXRyYW5zbWl0cyxtZXRhZGF0YTplLm1ldGFkYXRhLGNoYW5uZWxJZDplLl9vcmlnaW5EYXRhQ2hhbm5lbElkfSkpKSl9cHVibGlzaChlLHQsaSl7dmFyIG49dGhpcztyZXR1cm4gWUkoKGZ1bmN0aW9uKigpe2NvbnN0IHI9eWllbGQgcUkobi5tdXRleC5sb2NrKFwiRnJvbSBQMlBDaGFubmVsLnB1Ymxpc2hcIikpO3RyeXtpZighbi5jb25uZWN0aW9ufHxuLnN0YXRlIT09cE8uQ29ubmVjdGVkKXtpZihuLnN0YXRlPT09cE8uRGlzY29ubmVjdGVkKXRocm93IG5ldyBDeShSeS5VTkVYUEVDVEVEX0VSUk9SLFwiUGVlckNvbm5lY3Rpb24gYWxyZWFkeSBkaXNjb25uZWN0ZWQuXCIpO24udGhyb3dJZlRyYWNrVHlwZU5vdE1hdGNoKGUpO2NvbnN0IHQ9ZS5maWx0ZXIoKGU9Pi0xPT09bi5wZW5kaW5nTG9jYWxUcmFja3MuaW5kZXhPZihlKSkpO3JldHVybiB2b2lkKG4ucGVuZGluZ0xvY2FsVHJhY2tzPW4ucGVuZGluZ0xvY2FsVHJhY2tzLmNvbmNhdCh0KSl9bi5zdG9yZS5wdWJJZD1uLnN0b3JlLnB1YklkKzEsclYubWFya1B1Ymxpc2hTdGFydChuLnN0b3JlLmNsaWVudElkLG4uc3RvcmUucHViSWQpO2NvbnN0IG89bi5maWx0ZXJUb2JlUHVibGlzaGVkVHJhY2tzKGUsdCxpKTtpZigwPT09by5sZW5ndGgpcmV0dXJuIHZvaWQoeWllbGQgcUkobi50cnlUb1VubXV0ZUF1ZGlvKGUpKSk7eWllbGQqekkoX0Iobi5kb1B1Ymxpc2gobi5jb25uZWN0aW9uLG8pKSl9ZmluYWxseXtyKCl9fSkpKCl9ZG9QdWJsaXNoKGUsdCl7dmFyIGk9dGhpcztyZXR1cm4gWUkoKGZ1bmN0aW9uKigpe3QuZm9yRWFjaCgoZT0+e2xldHt0cmFjazp0LHR5cGU6bn09ZTtjb25zdCByPURhdGUubm93KCk7aS5zdG9yZS5wdWJsaXNoKHQuZ2V0VHJhY2tJZCgpLG49PT1oTy5Mb2NhbEF1ZGlvVHJhY2s/XCJhdWRpb1wiOlwidmlkZW9cIixyKX0pKSxpLmJpbmRMb2NhbFRyYWNrRXZlbnRzKHQpO2NvbnN0IG49dC5tYXAoKGU9PntsZXR7dHJhY2s6dH09ZTtyZXR1cm4gdH0pKSxyPXlpZWxkIHFJKGUuc2VuZChuLGkuc3RvcmUuY29kZWMsaS5zdG9yZS5hdWRpb0NvZGVjKSksbz0oeWllbGQgcUkoci5uZXh0KCkpKS52YWx1ZSxzPWkuY3JlYXRlR2F0ZXdheVB1Ymxpc2hNZXNzYWdlKHQsbyk7bGV0IGE7dHJ5e2E9eWllbGQgc31jYXRjaChlKXt0aHJvdyByLnRocm93KGUpLChudWxsPT1lP3ZvaWQgMDplLmNvZGUpPT09UnkuV1NfQUJPUlQmJnQuZm9yRWFjaCgoZT0+e2xldHt0cmFjazp0fT1lOy0xPT09aS5wZW5kaW5nTG9jYWxUcmFja3MuaW5kZXhPZih0KSYmaS5wZW5kaW5nTG9jYWxUcmFja3MucHVzaCh0KX0pKSxpLnVuYmluZExvY2FsVHJhY2tFdmVudHModCksZX1jb25zdCBjPWkubWFwUHViUmVzVG9SZW1vdGVDb25maWcocyxhLG4pLGQ9KHlpZWxkIHFJKHIubmV4dChjKSkpLnZhbHVlLGw9WEEoXCJFTkFCTEVfVklERU9fU0VJXCIpO24uZm9yRWFjaCgoYXN5bmMgZT0+e2NvbnN0IHQ9ZS5nZXRSVENSdHBUcmFuc2NlaXZlcigpO3QmJmwmJihlLnRyYWNrTWVkaWFUeXBlPT09ZE8uVklERU8/YXdhaXQga1UodC5zZW5kZXIsZSk6ZS50cmFja01lZGlhVHlwZT09PWRPLkFVRElPJiZhd2FpdCBhc3luYyBmdW5jdGlvbihlKXtpZighWlAoKS5zdXBwb3J0V2ViUlRDRW5jb2RlZFRyYW5zZm9ybSlyZXR1cm4gdm9pZCBmYi53YXJuaW5nKFwiYnJvd3NlciBub3Qgc3VwcG9ydCBhdWRpbyBlbmNvZGVkIHRyYW5zZm9ybVwiKTtpZihOVS5oYXMoZSkpcmV0dXJuO2lmKCFlLnRyYWNrKXJldHVybjtjb25zdCB0PXt0cmFjazplLnRyYWNrfTtpZihKdigpKXtpZighZS5jcmVhdGVFbmNvZGVkU3RyZWFtcylyZXR1cm4gdm9pZCBmYi53YXJuaW5nKFwiYnJvd3NlciBub3Qgc3VwcG9ydCBjcmVhdGVFbmNvZGVkU3RyZWFtcygpIEFQSVwiKTtsZXQgbj1udWxsO3RyeXtuPWUuY3JlYXRlRW5jb2RlZFN0cmVhbXMoKX1jYXRjaChlKXtyZXR1cm4gdm9pZCBmYi5lcnJvcihcImNyZWF0ZSBhdWRpby1lbmNvZGVkLXN0cmVhbXMgZXJyb3JcIixlJiZlLm1lc3NhZ2UpfWNvbnN0IHI9bmV3IFRyYW5zZm9ybVN0cmVhbSh7dHJhbnNmb3JtKG4scil7dC5jb250cm9sbGVyfHwodC5jb250cm9sbGVyPXIpLGUudHJhY2smJmUudHJhY2suaWQhPT10LnRyYWNrLmlkJiYoZmIuZGVidWcoXCJhdWRpbyB0cmFjayBjaGFuZ2VkOiBcIi5jb25jYXQodC50cmFjay5pZCxcIiA9PiBcIikuY29uY2F0KGUudHJhY2suaWQpKSx0LnRyYWNrLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLGkpLHQudHJhY2s9ZS50cmFjayx0LnRyYWNrLmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLGkpKSxyLmVucXVldWUobil9fSk7bi5yZWFkYWJsZS5waXBlVGhyb3VnaChyKS5waXBlVG8obi53cml0YWJsZSl9ZWxzZSBpZihYdigpKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgUlRDUnRwU2NyaXB0VHJhbnNmb3JtKXJldHVybiB2b2lkIGZiLndhcm5pbmcoXCJicm93c2VyIG5vdCBzdXBwb3J0IFJUQ1J0cFNjcmlwdFRyYW5zZm9ybVwiKTtjb25zdCBuPU9VKCkscj1uZXcgTWVzc2FnZUNoYW5uZWw7YXdhaXQgbmV3IEdoKChlPT5uLm9ubWVzc2FnZT10PT57XCJyZWdpc3RlcmVkXCI9PT10LmRhdGEmJmUodm9pZCAwKX0pKTtjb25zdCBvPW5ldyBSVENSdHBTY3JpcHRUcmFuc2Zvcm0obix7bmFtZTpcInR4XCIscG9ydDpyLnBvcnQyfSxbci5wb3J0Ml0pO2UudHJhbnNmb3JtPW8sYXdhaXQgbmV3IEdoKChlPT5uLm9ubWVzc2FnZT10PT57XCJzdGFydGVkXCI9PT10LmRhdGEmJmUodm9pZCAwKX0pKSxyLnBvcnQxLm9ubWVzc2FnZT1uPT57dmFyIHI7bi5kYXRhLnRyYW5zZm9ybWVkJiZlLnRyYWNrJiYobnVsbD09PShyPWUudHJhY2spfHx2b2lkIDA9PT1yP3ZvaWQgMDpyLmlkKSE9PXQudHJhY2suaWQmJihmYi5kZWJ1ZyhcImF1ZGlvIHRyYWNrIGNoYW5nZWQ6IFwiLmNvbmNhdCh0LnRyYWNrLmlkLFwiID0+IFwiKS5jb25jYXQoZS50cmFjay5pZCkpLHQudHJhY2sucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImVuZGVkXCIsaSksdC50cmFjaz1lLnRyYWNrLHQudHJhY2suYWRkRXZlbnRMaXN0ZW5lcihcImVuZGVkXCIsaSkpfSx0Lndvcmtlcj1ufWZ1bmN0aW9uIGkoKXtpZihlLnRyYWNrKXtpZih0aGlzLmlkIT09ZS50cmFjay5pZClyZXR1cm47ZS50cmFjay5yZW1vdmVFdmVudExpc3RlbmVyKFwiZW5kZWRcIixpKX1jb25zdCB0PU5VLmdldChlKTtpZih0KXtOVS5kZWxldGUoZSk7dHJ5e3ZhciBuLHI7bnVsbD09PShuPXQuY29udHJvbGxlcil8fHZvaWQgMD09PW58fG4udGVybWluYXRlKCksbnVsbD09PShyPXQud29ya2VyKXx8dm9pZCAwPT09cnx8ci50ZXJtaW5hdGUoKX1jYXRjaChlKXtmYi53YXJuaW5nKGUmJmUubWVzc2FnZSl9fX1OVS5zZXQoZSx0KSxlLnRyYWNrLmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLGkpfSh0LnNlbmRlcikpfSkpLHQuZm9yRWFjaCgoZT0+e2xldHt0eXBlOnR9PWU7aS5zdGF0c0NvbGxlY3Rvci5hZGRMb2NhbFN0YXRzKHQpfSkpLGkuYXNzaWduTG9jYWxUcmFja3ModCxkKSxpLnN0YXRzVXBsb2FkZXIuc3RhcnRVcGxvYWRPdXRib3VuZFN0YXRzKCksdC5mb3JFYWNoKChlPT57bGV0e3RyYWNrOnQsdHlwZTpufT1lO2NvbnN0IHI9RGF0ZS5ub3coKTtpLnN0b3JlLnB1Ymxpc2godC5nZXRUcmFja0lkKCksbj09PWhPLkxvY2FsQXVkaW9UcmFjaz9cImF1ZGlvXCI6XCJ2aWRlb1wiLHZvaWQgMCxyKX0pKX0pKSgpfWFzeW5jIHVwZGF0ZVZpZGVvU3RyZWFtUGFyYW1ldGVyKGUsdCl7Y29uc3QgaT10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KHQpO2lmKCFpKXJldHVybjtpZighKGkudHJhY2sgaW5zdGFuY2VvZiBhVSkpcmV0dXJuIGZiLndhcm4oXCJbdXBkYXRlVmlkZW9TdHJlYW1QYXJhbWV0ZXJdOiB0cmFjayBpcyBub3QgYW4gaW5zdGFuY2Ugb2YgTG9jYWxWaWRlb1RyYWNrXCIpO2lmKCEodGhpcy5jb25uZWN0aW9uIGluc3RhbmNlb2YgZEJ8fHRoaXMuY29ubmVjdGlvbiBpbnN0YW5jZW9mIEZGKSlyZXR1cm4gZmIud2FybihcIlt1cGRhdGVWaWRlb1N0cmVhbVBhcmFtZXRlcl06IGNvbm5lY3Rpb24gaXMgbm90IFAyUENvbm5lY3Rpb24gb3IgUDJQQ29ubmVjdGlvblBsYW5CXCIpO2NvbnN0e3RyYWNrOm59PWkscj1mdW5jdGlvbihlLHQpe2NvbnN0IGk9e307cmV0dXJuIGUuaGVpZ2h0JiZlLndpZHRoJiYoaS5zY2FsZVJlc29sdXRpb25Eb3duQnk9aU4oZSx0KSksaS5tYXhGcmFtZXJhdGU9ZS5mcmFtZXJhdGU/UU8oZS5mcmFtZXJhdGUpOnZvaWQgMCxpLm1heEJpdHJhdGU9ZS5iaXRyYXRlPzFlMyplLmJpdHJhdGU6dm9pZCAwLGl9KGUsbik7aWYobi5fZW5jb2RlckNvbmZpZ3x8KG4uX2VuY29kZXJDb25maWc9e30pLHQhPT1oTy5Mb2NhbFZpZGVvTG93VHJhY2t8fCFYQShcIkRJU0FCTEVfRFVBTF9TVFJFQU1fVVNFX0VOQ09ESU5HXCIpJiZaUCgpLnN1cHBvcnREdWFsU3RyZWFtRW5jb2RpbmcpbnVsbCE9ci5zY2FsZVJlc29sdXRpb25Eb3duQnkmJihuLl9lbmNvZGVyQ29uZmlnLnNjYWxlUmVzb2x1dGlvbkRvd25CeT1yLnNjYWxlUmVzb2x1dGlvbkRvd25CeSk7ZWxzZXtjb25zdCB0PW4uX29yaWdpbk1lZGlhU3RyZWFtVHJhY2s7aWYoIXQuY2FudmFzKXJldHVybiBmYi53YXJuKFwiW1wiLmNvbmNhdChuLmdldFRyYWNrSWQoKSxcIl0gbm8gY2FudmFzIG9uIHRyYWNrXCIpKTshZnVuY3Rpb24oZSx0KXtjb25zdCBpPWUuY2FudmFzO3Qud2lkdGgmJihpLndpZHRoPVFPKHQud2lkdGgpKSx0LmhlaWdodCYmKGkuaGVpZ2h0PVFPKHQuaGVpZ2h0KSksdC5mcmFtZXJhdGUmJihpLnN0b3BDYXB0dXJlJiZpLnN0b3BDYXB0dXJlKCksaS5zdG9wQ2FwdHVyZT1RTCgoKCk9PnshaS5zdGFydENhcHR1cmUmJmkuc3RvcENhcHR1cmUmJmkuc3RvcENhcHR1cmUoKSxpLnN0YXJ0Q2FwdHVyZSYmaS5zdGFydENhcHR1cmUoKX0pLFFPKHQuZnJhbWVyYXRlKSkpfSh0LGUpfW51bGwhPXIubWF4Qml0cmF0ZSYmKG4uX2VuY29kZXJDb25maWcuYml0cmF0ZU1heD1yLm1heEJpdHJhdGUvMWUzKSxudWxsIT1yLm1heEZyYW1lcmF0ZSYmKG4uX2VuY29kZXJDb25maWcuZnJhbWVSYXRlJiZcIm9iamVjdFwiPT10eXBlb2Ygbi5fZW5jb2RlckNvbmZpZy5mcmFtZVJhdGU/bi5fZW5jb2RlckNvbmZpZy5mcmFtZVJhdGUubWF4PXIubWF4RnJhbWVyYXRlOm4uX2VuY29kZXJDb25maWcuZnJhbWVSYXRlPXttYXg6ci5tYXhGcmFtZXJhdGV9KSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQobi5nZXRUcmFja0lkKCksXCJdIExvd1N0cmVhbUVuY29kZXJDb25maWc6ICwgXCIpLmNvbmNhdChKU09OLnN0cmluZ2lmeShuLl9lbmNvZGVyQ29uZmlnKSkpLGF3YWl0IHRoaXMuY29ubmVjdGlvbi51cGRhdGVSdHBTZW5kZXJFbmNvZGluZ3Mobil9cHVibGlzaExvd1N0cmVhbShlKXt2YXIgdD10aGlzO3JldHVybiBZSSgoZnVuY3Rpb24qKCl7aWYoIXQuY29ubmVjdGlvbnx8dC5zdGF0ZSE9PXBPLkNvbm5lY3RlZClyZXR1cm47Y29uc3QgaT15aWVsZCBxSSh0Lm11dGV4LmxvY2soXCJMb2NraW5nIGZyb20gUDJQQ2hhbm5lbC5wdWJsaXNoTG93U3RyZWFtXCIpKTt0cnl7Y29uc3Qgcj10LmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsVmlkZW9UcmFjayk7aWYoIXIpdGhyb3cgbmV3IEN5KFJ5LlVORVhQRUNURURfRVJST1IsXCJDb3VsZCBub3QgZmluZCBoaWdoIHN0cmVhbVwiKTtpZih0LmxvY2FsVHJhY2tNYXAuaGFzKGhPLkxvY2FsVmlkZW9Mb3dUcmFjaykpdGhyb3cgbmV3IEN5KFJ5LlVORVhQRUNURURfRVJST1IsXCJbXCIuY29uY2F0KHQuc3RvcmUuY2xpZW50SWQsXCJdIENhbid0IHB1Ymxpc2ggbG93IHN0cmVhbSB3aGVuIHN0cmVhbSBhbHJlYWR5IHB1Ymxpc2hcIikpO2NvbnN0IG89W3t0cmFjazp0LmdldExvd1ZpZGVvVHJhY2soci50cmFjayxlKSx0eXBlOmhPLkxvY2FsVmlkZW9Mb3dUcmFja31dO2lmKHlpZWxkKnpJKF9CKHQuZG9QdWJsaXNoKHQuY29ubmVjdGlvbixvKSkpLHIudHJhY2subXV0ZWR8fCFyLnRyYWNrLmVuYWJsZWQpe3ZhciBuO2NvbnN0IGU9bnVsbD09PShuPXQubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxWaWRlb0xvd1RyYWNrKSl8fHZvaWQgMD09PW4/dm9pZCAwOm4uaWQ7dm9pZCAwIT09ZSYmKHlpZWxkIHFJKHQuY29ubmVjdGlvbi5tdXRlTG9jYWwoW2VdKSkpfX1maW5hbGx5e2koKX19KSkoKX1hc3luYyByZXB1Ymxpc2goKXt0aGlzLnBlbmRpbmdMb2NhbFRyYWNrcy5sZW5ndGg+MCYmKGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBFbWl0IFAyUENoYW5uZWxFdmVudHMuUmVxdWVzdFJlUHVibGlzaCB0byByZXB1Ymxpc2ggdHJhY2tzLlwiKSksYXdhaXQgWnkodGhpcyxfTy5SZXF1ZXN0UmVQdWJsaXNoLHRoaXMucGVuZGluZ0xvY2FsVHJhY2tzKSx0aGlzLmVtaXQoX08uTWVkaWFSZWNvbm5lY3RFbmQsdGhpcy5zdG9yZS51aWQpLHRoaXMucGVuZGluZ0xvY2FsVHJhY2tzPVtdKSx0aGlzLnBlbmRpbmdMb2NhbERhdGFDaGFubmVscy5sZW5ndGg+MCYmKGZiLmRlYnVnKFwiRW1pdCBQMlBDaGFubmVsRXZlbnRzLlJlcXVlc3RSZVB1Ymxpc2hEYXRhQ2hhbm5lbCB0byByZXB1Ymxpc2ggZGF0YWNoYW5uZWxzLlwiKSxhd2FpdCBaeSh0aGlzLF9PLlJlcXVlc3RSZVB1Ymxpc2hEYXRhQ2hhbm5lbCx0aGlzLnBlbmRpbmdMb2NhbERhdGFDaGFubmVscyksdGhpcy5wZW5kaW5nTG9jYWxEYXRhQ2hhbm5lbHM9W10pfWFzeW5jIHJlU3Vic2NyaWJlKGUpe2ZvcihsZXQgZT10aGlzLnBlbmRpbmdSZW1vdGVUcmFja3MubGVuZ3RoLTE7ZT49MDtlLS0pe2NvbnN0e3VzZXI6dCxraW5kOml9PXRoaXMucGVuZGluZ1JlbW90ZVRyYWNrc1tlXTsoaSE9PWRPLkFVRElPfHx0Ll9hdWRpb19hZGRlZF8mJnQuX2F1ZGlvU1NSQykmJihpIT09ZE8uVklERU98fHQuX3ZpZGVvX2FkZGVkXyYmdC5fdmlkZW9TU1JDKXx8dGhpcy5wZW5kaW5nUmVtb3RlVHJhY2tzLnNwbGljZShlLDEpfWlmKGUpYXdhaXQgWnkodGhpcyxfTy5SZXF1ZXN0UmVTdWJzY3JpYmUsdGhpcy5wZW5kaW5nUmVtb3RlVHJhY2tzKTtlbHNlIGZvcihjb25zdHt1c2VyOmUsa2luZDp0fW9mIHRoaXMucGVuZGluZ1JlbW90ZVRyYWNrcylhd2FpdCB0aGlzLnN1YnNjcmliZShlLHQsdD09PWRPLlZJREVPP2UuX3ZpZGVvU1NSQzplLl9hdWRpb1NTUkMpO3RoaXMucGVuZGluZ1JlbW90ZVRyYWNrcy5mb3JFYWNoKChlPT57bGV0e3VzZXI6dH09ZTt0aGlzLmVtaXQoX08uTWVkaWFSZWNvbm5lY3RFbmQsdC51aWQpfSkpLHRoaXMucGVuZGluZ1JlbW90ZVRyYWNrcz1bXX1hc3luYyB1bnB1Ymxpc2goZSl7aWYoIXRoaXMuY29ubmVjdGlvbnx8dGhpcy5zdGF0ZSE9PXBPLkNvbm5lY3RlZClyZXR1cm4gdm9pZCBlLmZvckVhY2goKGU9Pntjb25zdCB0PXRoaXMucGVuZGluZ0xvY2FsVHJhY2tzLmluZGV4T2YoZSk7LTEhPT10JiZ0aGlzLnBlbmRpbmdMb2NhbFRyYWNrcy5zcGxpY2UodCwxKX0pKTtjb25zdCB0PXRoaXMuZmlsdGVyVG9iZVVucHVibGlzaGVkVHJhY2tzKGUpO2lmKDA9PT10Lmxlbmd0aClyZXR1cm47Y29uc3QgaT10LmZpbmQoKGU9PlwidmlkZW9Mb3dUcmFja1wiPT09ZVswXSkpO2lmKGkpe2lbMV0udHJhY2suY2xvc2UoKX1yZXR1cm4gdGhpcy5kb1VucHVibGlzaCh0aGlzLmNvbm5lY3Rpb24sdCl9YXN5bmMgdW5wdWJsaXNoRGF0YUNoYW5uZWwoZSl7aWYoIXRoaXMuY29ubmVjdGlvbnx8dGhpcy5zdGF0ZSE9PXBPLkNvbm5lY3RlZClyZXR1cm4gdm9pZCBlLmZvckVhY2goKGU9Pntjb25zdCB0PXRoaXMucGVuZGluZ0xvY2FsRGF0YUNoYW5uZWxzLmluZGV4T2YoZSk7LTEhPT10JiZ0aGlzLnBlbmRpbmdMb2NhbERhdGFDaGFubmVscy5zcGxpY2UodCwxKX0pKTtjb25zdCB0PXRoaXMuZmlsdGVyVG9iZVVucHVibGlzaGVkRGF0YUNoYW5uZWxzKGUpO3JldHVybiAwIT09dC5sZW5ndGg/KHQuZm9yRWFjaCgoZT0+e2NvbnN0IHQ9dGhpcy5sb2NhbERhdGFDaGFubmVscy5pbmRleE9mKGUpOy0xIT09dCYmdGhpcy5sb2NhbERhdGFDaGFubmVscy5zcGxpY2UodCwxKX0pKSwwPT09dGhpcy5sb2NhbERhdGFDaGFubmVscy5sZW5ndGgmJmF3YWl0IHRoaXMuY29ubmVjdGlvbi5zdG9wRGF0YUNoYW5uZWxzKHRoaXMuc3RvcmUudWlkKSx0Lm1hcCgoZT0+ZS5pZCkpKTp2b2lkIDB9YXN5bmMgdW5wdWJsaXNoTG93U3RyZWFtKCl7aWYoIXRoaXMuY29ubmVjdGlvbnx8dGhpcy5zdGF0ZSE9PXBPLkNvbm5lY3RlZClyZXR1cm47Y29uc3QgZT10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsVmlkZW9Mb3dUcmFjayk7aWYoIWUpcmV0dXJuO2UudHJhY2suY2xvc2UoKTtjb25zdCB0PVtbaE8uTG9jYWxWaWRlb0xvd1RyYWNrLGVdXTtyZXR1cm4gdGhpcy5kb1VucHVibGlzaCh0aGlzLmNvbm5lY3Rpb24sdCl9YXN5bmMgZG9VbnB1Ymxpc2goZSx0KXtjb25zdCBpPXRoaXMuY3JlYXRlR2F0ZXdheVVucHVibGlzaE1lc3NhZ2UodCk7cmV0dXJuIGF3YWl0IGUuc3RvcFNlbmRpbmcodC5tYXAoKGU9PntsZXRbLHtpZDp0fV09ZTtyZXR1cm4gdH0pKSksdGhpcy53aXRoZHJhd0xvY2FsVHJhY2tzKHQpLHRoaXMudW5iaW5kTG9jYWxUcmFja0V2ZW50cyh0Lm1hcCgoZT0+e2xldFt0LHt0cmFjazppfV09ZTtyZXR1cm57dHlwZTp0LHRyYWNrOml9fSkpKSx0LmZvckVhY2goKGU9PntsZXRbdF09ZTt0aGlzLnN0YXRzQ29sbGVjdG9yLnJlbW92ZUxvY2FsU3RhdHModCl9KSksMD09PXRoaXMubG9jYWxUcmFja01hcC5zaXplJiZ0aGlzLnN0YXRzVXBsb2FkZXIuc3RvcFVwbG9hZE91dGJvdW5kU3RhdHMoKSxpfWFzeW5jIHN1YnNjcmliZURhdGFDaGFubmVsKGUsdCl7aWYoIXRoaXMuY29ubmVjdGlvbnx8dGhpcy5zdGF0ZSE9PXBPLkNvbm5lY3RlZCl0aHJvdyBuZXcgQ3koUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJDYW5ub3Qgc3Vic2NyaWJlIHJlbW90ZSB1c2VyIHdoZW4gcGVlckNvbm5lY3Rpb24gZGlzY29ubmVjdGVkLlwiKTtjb25zdCBpPXQuZmlsdGVyKCh0PT57dmFyIGk7cmV0dXJuIShudWxsIT09KGk9dGhpcy5yZW1vdGVEYXRhQ2hhbm5lbE1hcC5nZXQoZSkpJiZ2b2lkIDAhPT1pJiZpLmdldCh0LmlkKSl9KSk7aWYoMCE9PWkubGVuZ3RoKXJldHVybiBhd2FpdCB0aGlzLmNvbm5lY3Rpb24uY3JlYXRlRGF0YUNoYW5uZWxzKGUudWlkLGkpLGkuZm9yRWFjaCgodD0+e3ZhciBpO3RoaXMucmVtb3RlRGF0YUNoYW5uZWxNYXAuaGFzKGUpP251bGw9PT0oaT10aGlzLnJlbW90ZURhdGFDaGFubmVsTWFwLmdldChlKSl8fHZvaWQgMD09PWl8fGkuc2V0KHQuaWQsdCk6dGhpcy5yZW1vdGVEYXRhQ2hhbm5lbE1hcC5zZXQoZSxuZXcgTWFwKFtbdC5pZCx0XV0pKTtjb25zdCBuPXRoaXMucGVuZGluZ1JlbW90ZURhdGFDaGFubmVscy5maW5kSW5kZXgoKGk9PntsZXR7dXNlcjpuLGlkOnJ9PWk7cmV0dXJuIG4udWlkPT09ZS51aWQmJnI9PT10LmlkfSkpOy0xIT09biYmdGhpcy5wZW5kaW5nUmVtb3RlRGF0YUNoYW5uZWxzLnNwbGljZShuLDEpfSkpLGkubWFwKChlPT5lLmlkKSl9YXN5bmMgc3Vic2NyaWJlKGUsdCxpLG4scil7dmFyIG87aWYoIXRoaXMuY29ubmVjdGlvbnx8dGhpcy5zdGF0ZSE9PXBPLkNvbm5lY3RlZCl0aHJvdyBuZXcgQ3koUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJDYW5ub3Qgc3Vic2NyaWJlIHJlbW90ZSB1c2VyIHdoZW4gcGVlckNvbm5lY3Rpb24gZGlzY29ubmVjdGVkLlwiKTtpZihudWxsIT09KG89dGhpcy5yZW1vdGVVc2VyTWFwLmdldChlKSkmJnZvaWQgMCE9PW8mJm8uaGFzKHQpKXJldHVybjtsZXQgcyxhLGM7Y29uc3QgZD10aGlzLmNvbm5lY3Rpb24uZ2V0UHJlTWVkaWEoaSk7aWYoZClmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW1wiKS5jb25jYXQodGhpcy5zdG9yZS5wMnBJZCxcIl0gcHJlU1NSQ01hcCBoYXMgc3NyY0lkOiBcIikuY29uY2F0KGksXCIsIG5vIG5lZWQgdG8gc2VuZCBzdWIgdG8gZ2F0ZXdheS5cIikpLGM9ZC50cmFuc2NlaXZlcixzPWQudHJhY2ssYT1kLmlkO2Vsc2UgaWYocil7Y29uc3QgaT1yLmZpbmQoKGU9PntsZXR7c3RyZWFtX3R5cGU6aX09ZTtyZXR1cm4gaT09PXR9KSk7aWYoIWkpdGhyb3cgbmV3IEN5KFJ5LlVORVhQRUNURURfRVJST1IsXCJDYW5ub3Qgc3Vic2NyaWJlIHRvIHJlbW90ZSBcIi5jb25jYXQodCxcIiBmb3IgdXNlcjogXCIpLmNvbmNhdChlLnVpZCxcIiBiZWNhdXNlIHN1YnNjcmliZSBhbnN3ZXIgZnJvbSBnYXRld2F5IGRvZXMgbm90IGNvbnRhaW4gc3RyZWFtX3R5cGU6IFwiKS5jb25jYXQodCxcIi5cIikpO2NvbnN0IG49YXdhaXQgdGhpcy5jb25uZWN0aW9uLnJlY2VpdmUodCxpLnNzcmNzLFN0cmluZyhlLl91aW50aWQpLGkuYXR0cmlidXRlcyk7dGhpcy5jb25uZWN0aW9uIGluc3RhbmNlb2YgZEImJihjPW4udHJhbnNjZWl2ZXIpLHM9bi50cmFjayxhPW4uaWR9ZWxzZXtjb25zdCByPWF3YWl0IHRoaXMuY29ubmVjdGlvbi5yZWNlaXZlKHQsW3tzc3JjSWQ6aSxydHg6bn1dLFN0cmluZyhlLl91aW50aWQpLHZvaWQgMCk7dGhpcy5jb25uZWN0aW9uIGluc3RhbmNlb2YgZEImJihjPXIudHJhbnNjZWl2ZXIpLHM9ci50cmFjayxhPXIuaWR9dD09PWRPLkFVRElPPyhlLl9hdWRpb1RyYWNrP2UuX2F1ZGlvVHJhY2suX3VwZGF0ZU9yaWdpbk1lZGlhU3RyZWFtVHJhY2socyk6KGUuX2F1ZGlvVHJhY2s9bmV3IHZVKHMsZS51aWQsZS5fdWludGlkLHRoaXMuc3RvcmUpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFtcIikuY29uY2F0KHRoaXMuc3RvcmUucDJwSWQsXCJdIGNyZWF0ZSByZW1vdGUgYXVkaW8gdHJhY2s6IFwiKS5jb25jYXQoZS5fYXVkaW9UcmFjay5nZXRUcmFja0lkKCkpKSksYyYmZS5fYXVkaW9UcmFjay5fdXBkYXRlUnRwVHJhbnNjZWl2ZXIoYyksdGhpcy5iaW5kUmVtb3RlVHJhY2tFdmVudHMoZSxlLl9hdWRpb1RyYWNrKSk6KGUuX3ZpZGVvVHJhY2s/ZS5fdmlkZW9UcmFjay5fdXBkYXRlT3JpZ2luTWVkaWFTdHJlYW1UcmFjayhzKTooZS5fdmlkZW9UcmFjaz1uZXcgSVUocyxlLnVpZCxlLl91aW50aWQsdGhpcy5zdG9yZSksZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW1wiKS5jb25jYXQodGhpcy5zdG9yZS5wMnBJZCxcIl0gY3JlYXRlIHJlbW90ZSB2aWRlbyB0cmFjazogXCIpLmNvbmNhdChlLl92aWRlb1RyYWNrLmdldFRyYWNrSWQoKSkpKSxjJiZlLl92aWRlb1RyYWNrLl91cGRhdGVSdHBUcmFuc2NlaXZlcihjKSx0aGlzLmJpbmRSZW1vdGVUcmFja0V2ZW50cyhlLGUuX3ZpZGVvVHJhY2spKSxYQShcIkVOQUJMRV9WSURFT19TRUlcIikmJmMmJih0PT1kTy5WSURFTz9hd2FpdCBhc3luYyBmdW5jdGlvbihlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307aWYoIVpQKCkuc3VwcG9ydFdlYlJUQ0VuY29kZWRUcmFuc2Zvcm0pcmV0dXJuIHZvaWQgZmIud2FybmluZyhcImJyb3dzZXIgbm90IHN1cHBvcnQgdmlkZW8gZW5jb2RlZCB0cmFuc2Zvcm1cIik7aWYoIWUudHJhY2spcmV0dXJuO2lmKE1VLmhhcyhlKSl7Y29uc3QgaT1NVS5nZXQoZSk7cmV0dXJuIHZvaWQoaSYmKGkub25TZWk9dC5vblNlaSkpfWNvbnN0IGk9e3RyYWNrOmUudHJhY2ssb25TZWk6dC5vblNlaX07aWYoSnYoKSl7aWYoIWUuY3JlYXRlRW5jb2RlZFN0cmVhbXMpcmV0dXJuIHZvaWQgZmIud2FybmluZyhcImJyb3dzZXIgbm90IHN1cHBvcnQgY3JlYXRlRW5jb2RlZFN0cmVhbXMoKSBBUElcIik7bGV0IHQ9bnVsbDt0cnl7dD1lLmNyZWF0ZUVuY29kZWRTdHJlYW1zKCl9Y2F0Y2goZSl7cmV0dXJuIHZvaWQgZmIuZXJyb3IoXCJjcmVhdGUgdmlkZW8tZW5jb2RlZC1zdHJlYW1zIGVycm9yXCIsZSYmZS5tZXNzYWdlKX1jb25zdCByPW5ldyBUcmFuc2Zvcm1TdHJlYW0oe3RyYW5zZm9ybSh0LHIpe2kuY29udHJvbGxlcnx8KGkuY29udHJvbGxlcj1yKSxlLnRyYWNrJiZlLnRyYWNrLmlkIT09aS50cmFjay5pZCYmKGZiLmRlYnVnKFwidmlkZW8gdHJhY2sgY2hhbmdlZDogXCIuY29uY2F0KGkudHJhY2suaWQsXCIgPT4gXCIpLmNvbmNhdChlLnRyYWNrLmlkKSksaS50cmFjay5yZW1vdmVFdmVudExpc3RlbmVyKFwiZW5kZWRcIixuKSxpLnRyYWNrPWUudHJhY2ssaS50cmFjay5hZGRFdmVudExpc3RlbmVyKFwiZW5kZWRcIixuKSk7Y29uc3Qgbz1mdW5jdGlvbihlKXtjb25zdCB0PW5ldyBEYXRhVmlldyhlLmRhdGEpO2xldCBpPTA7Zm9yKDtpKzQ8ZS5kYXRhLmJ5dGVMZW5ndGg7KXtpZigwPT09dC5nZXRVaW50OChpKzApJiYwPT09dC5nZXRVaW50OChpKzEpJiYwPT09dC5nZXRVaW50OChpKzIpJiYxPT09dC5nZXRVaW50OChpKzMpJiY2PT09dC5nZXRVaW50OChpKzQpKXtsZXQgbj1pKzYscj0wLG89MDtmb3IoOzI1NT09PShvPXQuZ2V0VWludDgobisrKSk7KXIrPTI1NTtyKz1vO2NvbnN0IHM9UFUoZS5kYXRhLG4scik7cmV0dXJuIG5ldyBVaW50OEFycmF5KHMpfWkrK31yZXR1cm4gbnVsbH0odCk7byYmaS5vblNlaSYmaS5vblNlaShvKSxyLmVucXVldWUodCl9fSk7dC5yZWFkYWJsZS5waXBlVGhyb3VnaChyKS5waXBlVG8odC53cml0YWJsZSl9ZWxzZSBpZihYdigpKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgUlRDUnRwU2NyaXB0VHJhbnNmb3JtKXJldHVybiB2b2lkIGZiLndhcm5pbmcoXCJicm93c2VyIG5vdCBzdXBwb3J0IFJUQ1J0cFNjcmlwdFRyYW5zZm9ybVwiKTtjb25zdCB0PU9VKCkscj1uZXcgTWVzc2FnZUNoYW5uZWw7YXdhaXQgbmV3IEdoKChlPT50Lm9ubWVzc2FnZT10PT57XCJyZWdpc3RlcmVkXCI9PT10LmRhdGEmJmUodm9pZCAwKX0pKTtjb25zdCBvPW5ldyBSVENSdHBTY3JpcHRUcmFuc2Zvcm0odCx7bmFtZTpcInJ4XCIscG9ydDpyLnBvcnQyfSxbci5wb3J0Ml0pO2UudHJhbnNmb3JtPW8sYXdhaXQgbmV3IEdoKChlPT50Lm9ubWVzc2FnZT10PT57XCJzdGFydGVkXCI9PT10LmRhdGEmJmUodm9pZCAwKX0pKSxyLnBvcnQxLm9ubWVzc2FnZT10PT57dmFyIHI7dC5kYXRhLnRyYW5zZm9ybWVkJiZlLnRyYWNrJiYobnVsbD09PShyPWUudHJhY2spfHx2b2lkIDA9PT1yP3ZvaWQgMDpyLmlkKSE9PWkudHJhY2suaWQ/KGZiLmRlYnVnKFwidmlkZW8gdHJhY2sgY2hhbmdlZDogXCIuY29uY2F0KGkudHJhY2suaWQsXCIgPT4gXCIpLmNvbmNhdChlLnRyYWNrLmlkKSksaS50cmFjay5yZW1vdmVFdmVudExpc3RlbmVyKFwiZW5kZWRcIixuKSxpLnRyYWNrPWUudHJhY2ssaS50cmFjay5hZGRFdmVudExpc3RlbmVyKFwiZW5kZWRcIixuKSk6dC5kYXRhLnNlaSYmaS5vblNlaSYmaS5vblNlaSh0LmRhdGEuc2VpKX0saS53b3JrZXI9dH1mdW5jdGlvbiBuKCl7aWYoZS50cmFjayl7aWYodGhpcy5pZCE9PWUudHJhY2suaWQpcmV0dXJuO2UudHJhY2sucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImVuZGVkXCIsbil9IWZ1bmN0aW9uKGUpe2NvbnN0IHQ9TVUuZ2V0KGUpO2lmKHQpe01VLmRlbGV0ZShlKTt0cnl7dmFyIGksbjtudWxsPT09KGk9dC5jb250cm9sbGVyKXx8dm9pZCAwPT09aXx8aS50ZXJtaW5hdGUoKSxudWxsPT09KG49dC53b3JrZXIpfHx2b2lkIDA9PT1ufHxuLnRlcm1pbmF0ZSgpfWNhdGNoKGUpe2ZiLndhcm5pbmcoZSYmZS5tZXNzYWdlKX19fShlKX1NVS5zZXQoZSxpKSxlLnRyYWNrLmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLG4pfShjLnJlY2VpdmVyLHtvblNlaTp0PT57dmFyIGk7bnVsbD09PShpPWUuX3ZpZGVvVHJhY2spfHx2b2lkIDA9PT1pfHxpLl9vblNlaSh0KX19KTp0PT1kTy5BVURJTyYmYXdhaXQgYXN5bmMgZnVuY3Rpb24oZSl7aWYoIVpQKCkuc3VwcG9ydFdlYlJUQ0VuY29kZWRUcmFuc2Zvcm0pcmV0dXJuIHZvaWQgZmIud2FybmluZyhcImJyb3dzZXIgbm90IHN1cHBvcnQgYXVkaW8gZW5jb2RlZCB0cmFuc2Zvcm1cIik7aWYoRFUuaGFzKGUpKXJldHVybjtjb25zdCB0PXt0cmFjazplLnRyYWNrfTtpZihKdigpKXtpZighZS5jcmVhdGVFbmNvZGVkU3RyZWFtcylyZXR1cm4gdm9pZCBmYi53YXJuaW5nKFwiYnJvd3NlciBub3Qgc3VwcG9ydCBjcmVhdGVFbmNvZGVkU3RyZWFtcygpIEFQSVwiKTtsZXQgbj1udWxsO3RyeXtuPWUuY3JlYXRlRW5jb2RlZFN0cmVhbXMoKX1jYXRjaChlKXtyZXR1cm4gdm9pZCBmYi5lcnJvcihcImNyZWF0ZSBhdWRpby1lbmNvZGVkLXN0cmVhbXMgZXJyb3JcIixlJiZlLm1lc3NhZ2UpfWNvbnN0IHI9bmV3IFRyYW5zZm9ybVN0cmVhbSh7dHJhbnNmb3JtKG4scil7dC5jb250cm9sbGVyfHwodC5jb250cm9sbGVyPXIpLGUudHJhY2smJmUudHJhY2suaWQhPT10LnRyYWNrLmlkJiYoZmIuZGVidWcoXCJhdWRpbyB0cmFjayBjaGFuZ2VkOiBcIi5jb25jYXQodC50cmFjay5pZCxcIiA9PiBcIikuY29uY2F0KGUudHJhY2suaWQpKSx0LnRyYWNrLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLGkpLHQudHJhY2s9ZS50cmFjayx0LnRyYWNrLmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLGkpKSxyLmVucXVldWUobil9fSk7bi5yZWFkYWJsZS5waXBlVGhyb3VnaChyKS5waXBlVG8obi53cml0YWJsZSl9ZWxzZSBpZihYdigpKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgUlRDUnRwU2NyaXB0VHJhbnNmb3JtKXJldHVybiB2b2lkIGZiLndhcm5pbmcoXCJicm93c2VyIG5vdCBzdXBwb3J0IFJUQ1J0cFNjcmlwdFRyYW5zZm9ybVwiKTtjb25zdCBuPU9VKCkscj1uZXcgTWVzc2FnZUNoYW5uZWw7YXdhaXQgbmV3IEdoKChlPT5uLm9ubWVzc2FnZT10PT57XCJyZWdpc3RlcmVkXCI9PT10LmRhdGEmJmUodm9pZCAwKX0pKTtjb25zdCBvPW5ldyBSVENSdHBTY3JpcHRUcmFuc2Zvcm0obix7bmFtZTpcInJ4XCIscG9ydDpyLnBvcnQyfSxbci5wb3J0Ml0pO2UudHJhbnNmb3JtPW8sYXdhaXQgbmV3IEdoKChlPT5uLm9ubWVzc2FnZT10PT57XCJzdGFydGVkXCI9PT10LmRhdGEmJmUodm9pZCAwKX0pKSxyLnBvcnQxLm9ubWVzc2FnZT1uPT57dmFyIHI7bi5kYXRhLnRyYW5zZm9ybWVkJiZlLnRyYWNrJiYobnVsbD09PShyPWUudHJhY2spfHx2b2lkIDA9PT1yP3ZvaWQgMDpyLmlkKSE9PXQudHJhY2suaWQmJihmYi5kZWJ1ZyhcImF1ZGlvIHRyYWNrIGNoYW5nZWQ6IFwiLmNvbmNhdCh0LnRyYWNrLmlkLFwiID0+IFwiKS5jb25jYXQoZS50cmFjay5pZCkpLHQudHJhY2sucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImVuZGVkXCIsaSksdC50cmFjaz1lLnRyYWNrLHQudHJhY2suYWRkRXZlbnRMaXN0ZW5lcihcImVuZGVkXCIsaSkpfSx0Lndvcmtlcj1ufWZ1bmN0aW9uIGkoKXtlLnRyYWNrLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLGkpLGZ1bmN0aW9uKGUpe2NvbnN0IHQ9RFUuZ2V0KGUpO2lmKHQpe0RVLmRlbGV0ZShlKTt0cnl7dmFyIGksbjtudWxsPT09KGk9dC5jb250cm9sbGVyKXx8dm9pZCAwPT09aXx8aS50ZXJtaW5hdGUoKSxudWxsPT09KG49dC53b3JrZXIpfHx2b2lkIDA9PT1ufHxuLnRlcm1pbmF0ZSgpfWNhdGNoKGUpe2ZiLndhcm5pbmcoZSYmZS5tZXNzYWdlKX19fShlKX1EVS5zZXQoZSx0KSxlLnRyYWNrLmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLGkpfShjLnJlY2VpdmVyKSk7Y29uc3QgbD10aGlzLnJlbW90ZVVzZXJNYXAuZ2V0KGUpO2w/bC5zZXQodCxhKTp0aGlzLnJlbW90ZVVzZXJNYXAuc2V0KGUsbmV3IE1hcChbW3QsYV1dKSksdGhpcy5zdGF0c0NvbGxlY3Rvci5hZGRSZW1vdGVTdGF0cyhlLnVpZCksdGhpcy5zdGF0c1VwbG9hZGVyLnN0YXJ0VXBsb2FkSW5ib3VuZFN0YXRzKCk7Y29uc3QgdT10aGlzLnBlbmRpbmdSZW1vdGVUcmFja3MuZmluZEluZGV4KChpPT57bGV0e3VzZXI6bixraW5kOnJ9PWk7cmV0dXJuIG4udWlkPT09ZS51aWQmJnQ9PT1yfSkpOy0xIT09dSYmKHRoaXMucGVuZGluZ1JlbW90ZVRyYWNrcy5zcGxpY2UodSwxKSx0aGlzLmVtaXQoX08uTWVkaWFSZWNvbm5lY3RFbmQsZS51aWQpKX1hc3luYyBtYXNzU3Vic2NyaWJlKGUpe3JldHVybiB0aGlzLm1hc3NTdWJzY3JpYmVOb0xvY2soZSl9YXN5bmMgbWFzc1N1YnNjcmliZU5vTG9jayhlKXtpZighdGhpcy5jb25uZWN0aW9ufHx0aGlzLnN0YXRlIT09cE8uQ29ubmVjdGVkKXRocm93IG5ldyBDeShSeS5JTlZBTElEX09QRVJBVElPTixcIkNhbm5vdCBzdWJzY3JpYmVBbGwgcmVtb3RlIHVzZXJzIHdoZW4gcGVlckNvbm5lY3Rpb24gZGlzY29ubmVjdGVkLlwiKTtlPWUuZmlsdGVyKChlPT57dmFyIHQ7bGV0e3VzZXI6aSxtZWRpYVR5cGU6bn09ZTtyZXR1cm4hKG51bGwhPT0odD10aGlzLnJlbW90ZVVzZXJNYXAuZ2V0KGkpKSYmdm9pZCAwIT09dCYmdC5oYXMobikpfSkpO2NvbnN0IHQ9W10saT1uZXcgTWFwO2UuZm9yRWFjaCgoZT0+e2lmKCF0aGlzLmNvbm5lY3Rpb24pcmV0dXJuO2NvbnN0IG49dGhpcy5jb25uZWN0aW9uLmdldFByZU1lZGlhKGUuc3NyY0lkKTtuP2kuc2V0KGUuc3NyY0lkLG4pOnQucHVzaChlKX0pKTtjb25zdCBuPWF3YWl0IHRoaXMuY29ubmVjdGlvbi5iYXRjaFJlY2VpdmUodC5tYXAoKGU9PntsZXR7dXNlcjp0LG1lZGlhVHlwZTppLHNzcmNJZDpuLHJ0eFNzcmNJZDpyfT1lO3JldHVybntraW5kOmksc3NyY01zZzpbe3NzcmNJZDpuLHJ0eDpyfV0sbXNsYWJlbDpTdHJpbmcodC5fdWludGlkKX19KSkpO3QuZm9yRWFjaCgoKGUsdCk9PntpLnNldChlLnNzcmNJZCxuW3RdKX0pKSxlLmZvckVhY2goKGU9PntsZXR7dXNlcjp0LG1lZGlhVHlwZTpuLHNzcmNJZDpyfT1lO2NvbnN0IG89aS5nZXQocik7aWYoIW8pcmV0dXJuIHZvaWQgZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFtcIikuY29uY2F0KHRoaXMuc3RvcmUucDJwSWQsXCJdIGNhbm5vdCBmaW5kIFwiKS5jb25jYXQodC51aWQsXCIgc3Vic2NyaWJlIGRhdGEsXCIpLmNvbmNhdChuLFwiLCBcIikuY29uY2F0KHIpKTtjb25zdHt0cmFjazpzLGlkOmEsdHJhbnNjZWl2ZXI6Y309bztuPT09ZE8uQVVESU8/KHQuX2F1ZGlvVHJhY2s/dC5fYXVkaW9UcmFjay5fdXBkYXRlT3JpZ2luTWVkaWFTdHJlYW1UcmFjayhzKToodC5fYXVkaW9UcmFjaz1uZXcgdlUocyx0LnVpZCx0Ll91aW50aWQsdGhpcy5zdG9yZSksZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW1wiKS5jb25jYXQodGhpcy5zdG9yZS5wMnBJZCxcIl0gY3JlYXRlIHJlbW90ZSBhdWRpbyB0cmFjazogXCIpLmNvbmNhdCh0Ll9hdWRpb1RyYWNrLmdldFRyYWNrSWQoKSkpKSxjJiZ0Ll9hdWRpb1RyYWNrLl91cGRhdGVSdHBUcmFuc2NlaXZlcihjKSx0aGlzLmJpbmRSZW1vdGVUcmFja0V2ZW50cyh0LHQuX2F1ZGlvVHJhY2spKToodC5fdmlkZW9UcmFjaz90Ll92aWRlb1RyYWNrLl91cGRhdGVPcmlnaW5NZWRpYVN0cmVhbVRyYWNrKHMpOih0Ll92aWRlb1RyYWNrPW5ldyBJVShzLHQudWlkLHQuX3VpbnRpZCx0aGlzLnN0b3JlKSxmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbXCIpLmNvbmNhdCh0aGlzLnN0b3JlLnAycElkLFwiXSBjcmVhdGUgcmVtb3RlIHZpZGVvIHRyYWNrOiBcIikuY29uY2F0KHQuX3ZpZGVvVHJhY2suZ2V0VHJhY2tJZCgpKSkpLGMmJnQuX3ZpZGVvVHJhY2suX3VwZGF0ZVJ0cFRyYW5zY2VpdmVyKGMpLHRoaXMuYmluZFJlbW90ZVRyYWNrRXZlbnRzKHQsdC5fdmlkZW9UcmFjaykpO2NvbnN0IGQ9dGhpcy5yZW1vdGVVc2VyTWFwLmdldCh0KTtkP2Quc2V0KG4sYSk6dGhpcy5yZW1vdGVVc2VyTWFwLnNldCh0LG5ldyBNYXAoW1tuLGFdXSkpLHRoaXMuc3RhdHNDb2xsZWN0b3IuYWRkUmVtb3RlU3RhdHModC51aWQpLHRoaXMuc3RhdHNVcGxvYWRlci5zdGFydFVwbG9hZEluYm91bmRTdGF0cygpO2NvbnN0IGw9dGhpcy5wZW5kaW5nUmVtb3RlVHJhY2tzLmZpbmRJbmRleCgoZT0+e2xldHt1c2VyOmksa2luZDpyfT1lO3JldHVybiBpLnVpZD09PXQudWlkJiZuPT09cn0pKTstMSE9PWwmJih0aGlzLnBlbmRpbmdSZW1vdGVUcmFja3Muc3BsaWNlKGwsMSksdGhpcy5lbWl0KF9PLk1lZGlhUmVjb25uZWN0RW5kLHQudWlkKSl9KSl9YXN5bmMgdW5zdWJzY3JpYmUoZSx0LGkpe2NvbnN0IG49dGhpcy5wZW5kaW5nUmVtb3RlVHJhY2tzLmZpbHRlcigoaT0+e2xldHt1c2VyOm4sa2luZDpyfT1pO3JldHVybiB2b2lkIDAhPT10P24udWlkPT09ZS51aWQmJnQ9PT1yOm4udWlkPT09ZS51aWR9KSk7aWYobi5mb3JFYWNoKChlPT57Y29uc3QgdD10aGlzLnBlbmRpbmdSZW1vdGVUcmFja3MuaW5kZXhPZihlKTt0aGlzLnBlbmRpbmdSZW1vdGVUcmFja3Muc3BsaWNlKHQsMSl9KSksdGhpcy5jb25uZWN0aW9uJiZ0aGlzLnN0YXRlPT09cE8uQ29ubmVjdGVkfHxpfHxuLmZvckVhY2goKHQ9PntsZXR7a2luZDppfT10O3ZhciBuO2lmKGk9PT1kTy5BVURJTyludWxsPT09KG49ZS5fYXVkaW9UcmFjayl8fHZvaWQgMD09PW58fG4uX2Rlc3Ryb3koKSxlLl9hdWRpb1RyYWNrPXZvaWQgMDtlbHNlIGlmKGk9PT1kTy5WSURFTyl7dmFyIHI7bnVsbD09PShyPWUuX3ZpZGVvVHJhY2spfHx2b2lkIDA9PT1yfHxyLl9kZXN0cm95KCksZS5fdmlkZW9UcmFjaz12b2lkIDB9fSkpLCF0aGlzLmNvbm5lY3Rpb258fHRoaXMuc3RhdGUhPT1wTy5Db25uZWN0ZWQpcmV0dXJuO2NvbnN0IHI9dGhpcy5maWx0ZXJUb2JlVW5TdWJzY3JpYmVkVHJhY2tzKGUsdCk7aWYoMD09PXIubGVuZ3RoKXJldHVybjthd2FpdCB0aGlzLmNvbm5lY3Rpb24uc3RvcFJlY2VpdmluZyhyLm1hcCgoZT0+e2xldFsse2lkOnR9XT1lO3JldHVybiB0fSkpKTtjb25zdCBvPXRoaXMuY3JlYXRlVW5zdWJzY3JpYmVNZXNzYWdlKHIpO3JldHVybiB0aGlzLndpdGhkcmF3UmVtb3RlVHJhY2tzKHIpLDA9PT10aGlzLnJlbW90ZVVzZXJNYXAuc2l6ZSYmdGhpcy5zdGF0c1VwbG9hZGVyLnN0b3BVcGxvYWRJbmJvdW5kU3RhdHMoKSxyLmZvckVhY2goKGU9PntsZXRbdCx7a2luZDpufV09ZTt2YXIgcixvO249PT1kTy5WSURFTyYmdC5fdmlkZW9TU1JDJiYobnVsbD09PShyPXRoaXMuY29ubmVjdGlvbil8fHZvaWQgMD09PXJ8fHIuc2V0U3RhdHNSZW1vdGVWaWRlb0lzUmVhZHkodC5fdmlkZW9TU1JDLCExKSk7aWYobj09PWRPLlZJREVPKXRoaXMudW5iaW5kUmVtb3RlVHJhY2tFdmVudHModC5fdmlkZW9UcmFjayksaXx8KG51bGw9PT0obz10Ll92aWRlb1RyYWNrKXx8dm9pZCAwPT09b3x8by5fZGVzdHJveSgpLHQuX3ZpZGVvVHJhY2s9dm9pZCAwKTtlbHNlIGlmKG49PT1kTy5BVURJTyl7dmFyIHM7aWYodGhpcy51bmJpbmRSZW1vdGVUcmFja0V2ZW50cyh0Ll9hdWRpb1RyYWNrKSwhaSludWxsPT09KHM9dC5fYXVkaW9UcmFjayl8fHZvaWQgMD09PXN8fHMuX2Rlc3Ryb3koKSx0Ll9hdWRpb1RyYWNrPXZvaWQgMH19KSksb31hc3luYyB1bnN1YnNjcmliZURhdGFDaGFubmVsKGUsdCl7aWYodC5mb3JFYWNoKChlPT57Y29uc3QgdD10aGlzLnBlbmRpbmdSZW1vdGVEYXRhQ2hhbm5lbHMuZmluZEluZGV4KCh0PT50LmlkPT09ZS5pZCkpOy0xIT09dCYmdGhpcy5wZW5kaW5nUmVtb3RlRGF0YUNoYW5uZWxzLnNwbGljZSh0LDEpfSkpLCF0aGlzLmNvbm5lY3Rpb24pcmV0dXJuO2NvbnN0IGk9dGhpcy5maWx0ZXJUb2JlVW5TdWJzY3JpYmVkRGF0YUNoYW5uZWxzKGUsdCk7aWYoMD09PWkubGVuZ3RoKXJldHVybjt0LmZvckVhY2goKGU9PntlLl9jbG9zZSgpfSkpO2NvbnN0IG49dGhpcy5yZW1vdGVEYXRhQ2hhbm5lbE1hcC5nZXQoZSk7cmV0dXJuIGkuZm9yRWFjaCgoZT0+e24mJm4uZGVsZXRlKGUuaWQpfSkpLG4mJjA9PT1uLnNpemUmJih0aGlzLnJlbW90ZURhdGFDaGFubmVsTWFwLmRlbGV0ZShlKSxhd2FpdCB0aGlzLmNvbm5lY3Rpb24uc3RvcERhdGFDaGFubmVscyhlLnVpZCkpLGkubWFwKChlPT5lLmlkKSl9YXN5bmMgbWFzc1Vuc3Vic2NyaWJlKGUpe3JldHVybiB0aGlzLm1hc3NVbnN1YnNjcmliZU5vTG9jayhlKX1hc3luYyBtYXNzVW5zdWJzY3JpYmVOb0xvY2soZSl7bGV0IHQ9W107Zm9yKGNvbnN0e3VzZXI6aSxtZWRpYVR5cGU6bn1vZiBlKXtjb25zdCBlPXRoaXMucGVuZGluZ1JlbW90ZVRyYWNrcy5maWx0ZXIoKGU9PntsZXR7dXNlcjp0LGtpbmQ6cn09ZTtyZXR1cm4gdm9pZCAwIT09bj90LnVpZD09PWkudWlkJiZuPT09cjp0LnVpZD09PWkudWlkfSkpO2UuZm9yRWFjaCgoZT0+e2NvbnN0IHQ9dGhpcy5wZW5kaW5nUmVtb3RlVHJhY2tzLmluZGV4T2YoZSk7dGhpcy5wZW5kaW5nUmVtb3RlVHJhY2tzLnNwbGljZSh0LDEpfSkpLHQ9dC5jb25jYXQoZSl9aWYoIXRoaXMuY29ubmVjdGlvbnx8dGhpcy5zdGF0ZSE9PXBPLkNvbm5lY3RlZClyZXR1cm4gdm9pZCB0LmZvckVhY2goKGU9PntsZXR7dXNlcjp0LGtpbmQ6aX09ZTt2YXIgbjtpZihpPT09ZE8uQVVESU8pbnVsbD09PShuPXQuX2F1ZGlvVHJhY2spfHx2b2lkIDA9PT1ufHxuLl9kZXN0cm95KCksdC5fYXVkaW9UcmFjaz12b2lkIDA7ZWxzZSBpZihpPT09ZE8uVklERU8pe3ZhciByO251bGw9PT0ocj10Ll92aWRlb1RyYWNrKXx8dm9pZCAwPT09cnx8ci5fZGVzdHJveSgpLHQuX3ZpZGVvVHJhY2s9dm9pZCAwfX0pKTtjb25zdCBpPUpuKGUpLmNhbGwoZSwoKGUsdCk9PntsZXR7dXNlcjppLG1lZGlhVHlwZTpufT10O2NvbnN0IHI9dGhpcy5maWx0ZXJUb2JlVW5TdWJzY3JpYmVkVHJhY2tzKGksbik7cmV0dXJuIGUuY29uY2F0KHIpfSksW10pO2lmKDA9PT1pLmxlbmd0aClyZXR1cm47YXdhaXQgdGhpcy5jb25uZWN0aW9uLnN0b3BSZWNlaXZpbmcoaS5tYXAoKGU9PntsZXRbLHtpZDp0fV09ZTtyZXR1cm4gdH0pKSk7Y29uc3Qgbj10aGlzLmNyZWF0ZVVuc3Vic2NyaWJlQWxsTWVzc2FnZShpKTtyZXR1cm4gdGhpcy53aXRoZHJhd1JlbW90ZVRyYWNrcyhpKSwwPT09dGhpcy5yZW1vdGVVc2VyTWFwLnNpemUmJnRoaXMuc3RhdHNVcGxvYWRlci5zdG9wVXBsb2FkSW5ib3VuZFN0YXRzKCksaS5mb3JFYWNoKChlPT57bGV0W3Qse2tpbmQ6aX1dPWU7dmFyIG4scjtpPT09ZE8uVklERU8mJnQuX3ZpZGVvU1NSQyYmKG51bGw9PT0obj10aGlzLmNvbm5lY3Rpb24pfHx2b2lkIDA9PT1ufHxuLnNldFN0YXRzUmVtb3RlVmlkZW9Jc1JlYWR5KHQuX3ZpZGVvU1NSQywhMSkpO2lmKGk9PT1kTy5WSURFTyl0aGlzLnVuYmluZFJlbW90ZVRyYWNrRXZlbnRzKHQuX3ZpZGVvVHJhY2spLG51bGw9PT0ocj10Ll92aWRlb1RyYWNrKXx8dm9pZCAwPT09cnx8ci5fZGVzdHJveSgpLHQuX3ZpZGVvVHJhY2s9dm9pZCAwO2Vsc2UgaWYoaT09PWRPLkFVRElPKXt2YXIgbzt0aGlzLnVuYmluZFJlbW90ZVRyYWNrRXZlbnRzKHQuX2F1ZGlvVHJhY2spLG51bGw9PT0obz10Ll9hdWRpb1RyYWNrKXx8dm9pZCAwPT09b3x8by5fZGVzdHJveSgpLHQuX2F1ZGlvVHJhY2s9dm9pZCAwfX0pKSxufWlzUHJlU3ViU2NyaWJlKGUpe2lmKCF0aGlzLmNvbm5lY3Rpb258fHRoaXMuc3RhdGUhPT1wTy5Db25uZWN0ZWQpcmV0dXJuITE7cmV0dXJuISF0aGlzLmNvbm5lY3Rpb24uZ2V0UHJlTWVkaWEoZSl9YXN5bmMgbXV0ZVJlbW90ZShlLHQpe2lmKCF0aGlzLmNvbm5lY3Rpb24pcmV0dXJuO2NvbnN0IGk9dGhpcy5yZW1vdGVVc2VyTWFwLmdldChlKTtpZighaSlyZXR1cm4gdm9pZCBmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBQMlBDaGFubmVsLm11dGVSZW1vdGUgaGFzIG5vIHJlbW90ZSB1c2VyIFwiKS5jb25jYXQoZS51aWQsXCIuXCIpKTtpZighaS5nZXQodCkpcmV0dXJuIHZvaWQgZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gUDJQQ2hhbm5lbC5tdXRlUmVtb3RlIGhhcyBubyByZW1vdGUgdXNlciBcIikuY29uY2F0KGUudWlkLFwiIG1lZGlhIHR5cGUgXCIpLmNvbmNhdCh0LFwiLlwiKSk7Y29uc3Qgbj10PT09ZE8uVklERU8/ZS5fdmlkZW9TU1JDOmUuX2F1ZGlvU1NSQzt2b2lkIDAhPT1uJiZ0aGlzLmNvbm5lY3Rpb24uc2V0U3RhdHNSZW1vdGVWaWRlb0lzUmVhZHkobiwhMSl9YXN5bmMgdW5tdXRlUmVtb3RlKGUsdCl7cmV0dXJuIHRoaXMudW5tdXRlUmVtb3RlTm9Mb2NrKGUsdCl9YXN5bmMgdW5tdXRlUmVtb3RlTm9Mb2NrKGUsdCl7aWYoIXRoaXMuY29ubmVjdGlvbilyZXR1cm47Y29uc3QgaT10aGlzLnJlbW90ZVVzZXJNYXAuZ2V0KGUpO2lmKCFpKXJldHVybiB2b2lkIGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFAyUENoYW5uZWwudW5tdXRlUmVtb3RlIGhhcyBubyByZW1vdGUgdXNlciBcIikuY29uY2F0KGUudWlkLFwiLlwiKSk7aS5nZXQodCl8fGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFAyUENoYW5uZWwudW5tdXRlUmVtb3RlIGhhcyBubyByZW1vdGUgdXNlciBcIikuY29uY2F0KGUudWlkLFwiIG1lZGlhIHR5cGUgXCIpLmNvbmNhdCh0LFwiLlwiKSl9Z2V0QWxsVHJhY2tzKGUpe2NvbnN0IHQ9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbEF1ZGlvVHJhY2spO2lmKChudWxsPT10P3ZvaWQgMDp0LnRyYWNrKWluc3RhbmNlb2YgUk0pe2NvbnN0IGk9dC50cmFjaztyZXR1cm4gQXJyYXkuZnJvbSh0aGlzLmxvY2FsVHJhY2tNYXAuZW50cmllcygpKS5maWx0ZXIoKGU9PntsZXRbdF09ZTtyZXR1cm4gdCE9PWhPLkxvY2FsQXVkaW9UcmFja30pKS5maWx0ZXIoKHQ9PntsZXRbaV09dDtyZXR1cm4hKGUmJmk9PT1oTy5Mb2NhbFZpZGVvTG93VHJhY2spfSkpLm1hcCgoZT0+e2xldFsse3RyYWNrOnR9XT1lO3JldHVybiB0fSkpLmNvbmNhdChpLnRyYWNrTGlzdCl9cmV0dXJuIEFycmF5LmZyb20odGhpcy5sb2NhbFRyYWNrTWFwLmVudHJpZXMoKSkuZmlsdGVyKCh0PT57bGV0W2ldPXQ7cmV0dXJuIShlJiZpPT09aE8uTG9jYWxWaWRlb0xvd1RyYWNrKX0pKS5tYXAoKGU9PntsZXRbLHt0cmFjazp0fV09ZTtyZXR1cm4gdH0pKX1nZXRBbGxEYXRhQ2hhbm5lbHMoKXtyZXR1cm4gdGhpcy5sb2NhbERhdGFDaGFubmVsc31yZXBvcnRQdWJsaXNoRXZlbnQoZSx0LGksbixyKXtpZihlKXtjb25zdCBpPXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxBdWRpb1RyYWNrKSxvPW4/dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbFZpZGVvTG93VHJhY2spOnRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxWaWRlb1RyYWNrKTt2Yi5wdWJsaXNoKHRoaXMuc3RvcmUuc2Vzc2lvbklkLHtldmVudEVsYXBzZTpyVi5tZWFzdXJlRnJvbVB1Ymxpc2hTdGFydCh0aGlzLnN0b3JlLmNsaWVudElkLHRoaXMuc3RvcmUucHViSWQpLHN1Y2M6ZSxlYzp0LGF1ZGlvTmFtZTpudWxsPT1pP3ZvaWQgMDppLnRyYWNrLmdldFRyYWNrTGFiZWwoKSx2aWRlb05hbWU6bnVsbD09bz92b2lkIDA6by50cmFjay5nZXRUcmFja0xhYmVsKCksc2NyZWVuc2hhcmU6LTEhPT0obnVsbD09bz92b2lkIDA6by50cmFjay5faGludHMuaW5kZXhPZihtTC5TQ1JFRU5fVFJBQ0spKSxhdWRpbzohIWksdmlkZW86ISFvLHAycGlkOnRoaXMuc3RvcmUucDJwSWQscHVibGlzaFJlcXVlc3RpZDp0aGlzLnN0b3JlLnB1YklkLGV4dGVuZDpyfSl9ZWxzZXt2YXIgbztpfHwoaT1bXSk7Y29uc3Qgcz1pLmZpbmQoKGU9PmUgaW5zdGFuY2VvZiBUTSkpLGE9bj9udWxsPT09KG89dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbFZpZGVvVHJhY2spKXx8dm9pZCAwPT09bz92b2lkIDA6by50cmFjazppLmZpbmQoKGU9PmUgaW5zdGFuY2VvZiBhVSkpO3ZiLnB1Ymxpc2godGhpcy5zdG9yZS5zZXNzaW9uSWQse2V2ZW50RWxhcHNlOnJWLm1lYXN1cmVGcm9tUHVibGlzaFN0YXJ0KHRoaXMuc3RvcmUuY2xpZW50SWQsdGhpcy5zdG9yZS5wdWJJZCksc3VjYzplLGVjOnQsYXVkaW9OYW1lOm51bGw9PXM/dm9pZCAwOnMuZ2V0VHJhY2tMYWJlbCgpLHZpZGVvTmFtZTpudWxsPT1hP3ZvaWQgMDphLmdldFRyYWNrTGFiZWwoKSxzY3JlZW5zaGFyZTotMSE9PShudWxsPT1hP3ZvaWQgMDphLl9oaW50cy5pbmRleE9mKG1MLlNDUkVFTl9UUkFDSykpLGF1ZGlvOiEhcyx2aWRlbzohIWEscDJwaWQ6dGhpcy5zdG9yZS5wMnBJZCxwdWJsaXNoUmVxdWVzdGlkOnRoaXMuc3RvcmUucHViSWQsZXh0ZW5kOnJ9KX19cmVwb3J0U3Vic2NyaWJlRXZlbnQoZSx0LGksbil7Y29uc3Qgcj1uPT09ZE8uVklERU8/aS5fdmlkZW9TU1JDOmkuX2F1ZGlvU1NSQztyJiZ2Yi5zdWJzY3JpYmUodGhpcy5zdG9yZS5zZXNzaW9uSWQse3N1Y2M6ZSxlYzp0LHZpZGVvOm49PT1kTy5WSURFTyxhdWRpbzpuPT09ZE8uQVVESU8scGVlcmlkOmkudWlkLHN1YnNjcmliZVJlcXVlc3RpZDpyLHAycGlkOnRoaXMuc3RvcmUucDJwSWQsZXZlbnRFbGFwc2U6clYubWVhc3VyZUZyb21TdWJzY3JpYmVTdGFydCh0aGlzLnN0b3JlLmNsaWVudElkLHIpLHByZVNzcmM6dGhpcy5pc1ByZVN1YlNjcmliZShyKX0pfXJlc2V0KCl7ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFAyUENoYW5uZWwucmVzZXRcIikpLHRoaXMubXV0ZXg9bmV3IE5BKFwiUDJQQ2hhbm5lbC1tdXRleFwiKSx0aGlzLmNvbm5lY3Rpb24mJih0aGlzLmNvbm5lY3Rpb24uY2xvc2UoKSx0aGlzLnVuYmluZENvbm5lY3Rpb25FdmVudHModGhpcy5jb25uZWN0aW9uKSx0aGlzLmNvbm5lY3Rpb249dm9pZCAwKSx0aGlzLnNob3VsZEZvcndhcmRQMlBDcmVhdGlvbiYmKHRoaXMuY29ubmVjdGlvbj10aGlzLmlzUGxhbkI/bmV3IEZGKHt9LHRoaXMuc3RvcmUpOm5ldyBkQih7fSx0aGlzLnN0b3JlKSx0aGlzLmJpbmRDb25uZWN0aW9uRXZlbnRzKHRoaXMuY29ubmVjdGlvbikpLHRoaXMuc3RhdHNVcGxvYWRlci5zdG9wVXBsb2FkT3V0Ym91bmRTdGF0cygpLHRoaXMuc3RhdHNVcGxvYWRlci5zdG9wVXBsb2FkSW5ib3VuZFN0YXRzKCksdGhpcy5zdGF0c1VwbG9hZGVyLnN0b3BVcGxvYWRUcmFuc3BvcnRTdGF0cygpLHRoaXMuc3RhdHNVcGxvYWRlci5zdG9wVXBsb2FkRXh0ZW5zaW9uVXNhZ2VTdGF0cygpLHRoaXMudW5iaW5kTG9jYWxUcmFja0V2ZW50cygpLHRoaXMudW5iaW5kQWxsUmVtb3RlVHJhY2tFdmVudHMoKSx0aGlzLnVuYmluZFJ0cFRyYW5zY2VpdmVyKCk7Y29uc3QgZT10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsQXVkaW9UcmFjayk7aWYoKG51bGw9PWU/dm9pZCAwOmUudHJhY2spaW5zdGFuY2VvZiBSTSl7aWYoZS50cmFjay50cmFja0xpc3QubGVuZ3RoPjApe2NvbnN0IHQ9ZS50cmFjaztlLnRyYWNrLnRyYWNrTGlzdC5mb3JFYWNoKChlPT57dC5yZW1vdmVBdWRpb1RyYWNrKGUpfSkpfWUudHJhY2suY2xvc2UoKX10aGlzLmxvY2FsVHJhY2tNYXAuY2xlYXIoKSx0aGlzLnJlbW90ZVVzZXJNYXAuY2xlYXIoKSx0aGlzLnN0YXRzQ29sbGVjdG9yLnJlbW92ZVJlbW90ZVN0YXRzKCksdGhpcy5zdGF0c0NvbGxlY3Rvci5yZW1vdmVMb2NhbFN0YXRzKCksdGhpcy5pY2VGYWlsZWRDb3VudD0wLHRoaXMuZHRsc0ZhaWxlZENvdW50PTAsdGhpcy5wZW5kaW5nTG9jYWxUcmFja3M9W10sdGhpcy5wZW5kaW5nUmVtb3RlVHJhY2tzPVtdLHRoaXMubG9jYWxEYXRhQ2hhbm5lbHM9W10sdGhpcy5yZW1vdGVEYXRhQ2hhbm5lbE1hcC5jbGVhcigpLHRoaXMucGVuZGluZ0xvY2FsRGF0YUNoYW5uZWxzPVtdLHRoaXMucGVuZGluZ1JlbW90ZURhdGFDaGFubmVscz1bXSx0aGlzLnN0YXRlPXBPLkRpc2Nvbm5lY3RlZH1nZXRTdGF0cygpe3ZhciBlO3JldHVybiBudWxsPT09KGU9dGhpcy5jb25uZWN0aW9uKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5nZXRTdGF0cygpfWdldFJlbW90ZVZpZGVvSXNSZWFkeShlKXt2YXIgdDtyZXR1cm4obnVsbD09PSh0PXRoaXMuY29ubmVjdGlvbil8fHZvaWQgMD09PXQ/dm9pZCAwOnQuZ2V0UmVtb3RlVmlkZW9Jc1JlYWR5KGUpKXx8ITF9Z2V0TG9jYWxBdWRpb1ZvbHVtZSgpe2NvbnN0IGU9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbEF1ZGlvVHJhY2spO2lmKGUpcmV0dXJuIGUudHJhY2suZ2V0Vm9sdW1lTGV2ZWwoKX1nZXRMb2NhbFZpZGVvU2l6ZSgpe2NvbnN0IGU9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbFZpZGVvVHJhY2spO2lmKGUpcmV0dXJue3dpZHRoOmUudHJhY2sudmlkZW9XaWR0aHx8MCxoZWlnaHQ6ZS50cmFjay52aWRlb0hlaWdodHx8MH19Z2V0RW5jb2RlckNvbmZpZyhlKXtjb25zdCB0PXRoaXMubG9jYWxUcmFja01hcC5nZXQoZSk7cmV0dXJuIHQmJnQudHJhY2sgaW5zdGFuY2VvZiBhVXx8dCYmdC50cmFjayBpbnN0YW5jZW9mIFRNP3QudHJhY2suX2VuY29kZXJDb25maWc6dm9pZCAwfWdldExvY2FsTWVkaWEoZSl7cmV0dXJuIHRoaXMubG9jYWxUcmFja01hcC5nZXQoZSl9aGFzTG9jYWxNZWRpYSgpe3JldHVybiB0aGlzLmxvY2FsVHJhY2tNYXAuc2l6ZT4wfWhhc1JlbW90ZU1lZGlhKGUsdCl7aWYoIWUpcmV0dXJuIHRoaXMucmVtb3RlVXNlck1hcC5zaXplPjA7Y29uc3QgaT10aGlzLnJlbW90ZVVzZXJNYXAuZ2V0KGUpO3JldHVybiEhaSYmKCF0fHxpLmhhcyh0KSl9YXN5bmMgaGFzUmVtb3RlTWVkaWFXaXRoTG9jayhlLHQpe2lmKCFlKXJldHVybiB0aGlzLnJlbW90ZVVzZXJNYXAuc2l6ZT4wO2NvbnN0IGk9dGhpcy5yZW1vdGVVc2VyTWFwLmdldChlKTtyZXR1cm4hIWkmJighdHx8aS5oYXModCkpfWdldFJlbW90ZU1lZGlhKGUpe3ZhciB0O2NvbnN0IGk9QXJyYXkuZnJvbShkXyh0PXRoaXMucmVtb3RlVXNlck1hcCkuY2FsbCh0KSkuZmluZCgodD0+dC51aWQ9PT1lKSk7cmV0dXJuIGk/e2F1ZGlvVHJhY2s6aS5hdWRpb1RyYWNrLGF1ZGlvU1NSQzppLl9hdWRpb1NTUkMsdmlkZW9UcmFjazppLnZpZGVvVHJhY2ssdmlkZW9TU1JDOmkuX3ZpZGVvU1NSQ306e319Z2V0QXVkaW9MZXZlbHMoKXtsZXQgZT1BcnJheS5mcm9tKHRoaXMucmVtb3RlVXNlck1hcC5lbnRyaWVzKCkpLm1hcCgoZT0+e2xldFt0XT1lO3JldHVybnt1aWQ6dC51aWQsbGV2ZWw6dC5hdWRpb1RyYWNrPzEwMCp0LmF1ZGlvVHJhY2suX3NvdXJjZS5nZXRBY2N1cmF0ZVZvbHVtZUxldmVsKCk6MH19KSk7Y29uc3QgdD10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsQXVkaW9UcmFjayk7cmV0dXJuIHQmJmUucHVzaCh7bGV2ZWw6MTAwKnQudHJhY2suX3NvdXJjZS5nZXRBY2N1cmF0ZVZvbHVtZUxldmVsKCksdWlkOnRoaXMuc3RvcmUudWlkfSksZT1hRShlKS5jYWxsKGUsKChlLHQpPT5lLmxldmVsLXQubGV2ZWwpKSxlfWFzeW5jIGRpc2Nvbm5lY3RGb3JSZWNvbm5lY3QoKXt0aGlzLmNvbm5lY3Rpb24mJihmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gUDJQQ2hhbm5lbC5kaXNjb25uZWN0Rm9yUmVjb25uZWN0IGNsb3NpbmcgUDJQQ29ubmVjdGlvblwiKSksdGhpcy5zdGF0ZT1wTy5SZWNvbm5lY3RpbmcsWEEoXCJLRUVQX0xBU1RfRlJBTUVcIikmJjAhPT10aGlzLnJlbW90ZVVzZXJNYXAuc2l6ZSYmQXJyYXkuZnJvbSh0aGlzLnJlbW90ZVVzZXJNYXAuZW50cmllcygpKS5mb3JFYWNoKChlPT57bGV0W3RdPWU7dmFyIGk7dC5fdmlkZW9UcmFjayYmdC5fdmlkZW9UcmFjay5fcGxheWVyJiYobnVsbD09PShpPXQuX3ZpZGVvVHJhY2suX3BsYXllci5nZXRWaWRlb0VsZW1lbnQoKSl8fHZvaWQgMD09PWl8fGkucGF1c2UoKSx0Ll92aWRlb1RyYWNrLl9wbGF5ZXIuaXNLZWVwTGFzdEZyYW1lPSEwLHQuX3ZpZGVvVHJhY2suX29yaWdpbk1lZGlhU3RyZWFtVHJhY2suc3RvcCgpKX0pKSx0aGlzLmNvbm5lY3Rpb24uY2xvc2UoKSx0aGlzLnVuYmluZENvbm5lY3Rpb25FdmVudHModGhpcy5jb25uZWN0aW9uKSx0aGlzLmNvbm5lY3Rpb249dm9pZCAwLHRoaXMuc2hvdWxkRm9yd2FyZFAyUENyZWF0aW9uJiYodGhpcy5jb25uZWN0aW9uPXRoaXMuaXNQbGFuQj9uZXcgRkYoe30sdGhpcy5zdG9yZSk6bmV3IGRCKHt9LHRoaXMuc3RvcmUpLHRoaXMuYmluZENvbm5lY3Rpb25FdmVudHModGhpcy5jb25uZWN0aW9uKSksMCE9PXRoaXMubG9jYWxUcmFja01hcC5zaXplJiYoQXJyYXkuZnJvbSh0aGlzLmxvY2FsVHJhY2tNYXAuZW50cmllcygpKS5mb3JFYWNoKChlPT57dmFyIHQ7bGV0W2kse3RyYWNrOm59XT1lO3N3aXRjaChpKXtjYXNlIGhPLkxvY2FsVmlkZW9UcmFjazpEbih0PW4uX2hpbnRzKS5jYWxsKHQsbUwuTE9XX1NUUkVBTSk/bi5jbG9zZSgpOnRoaXMucGVuZGluZ0xvY2FsVHJhY2tzLnB1c2gobik7YnJlYWs7Y2FzZSBoTy5Mb2NhbEF1ZGlvVHJhY2s6biBpbnN0YW5jZW9mIFJNP3RoaXMucGVuZGluZ0xvY2FsVHJhY2tzPXRoaXMucGVuZGluZ0xvY2FsVHJhY2tzLmNvbmNhdChuLnRyYWNrTGlzdCk6dGhpcy5wZW5kaW5nTG9jYWxUcmFja3MucHVzaChuKTtjYXNlIGhPLkxvY2FsVmlkZW9Mb3dUcmFjazp9fSkpLHRoaXMuZW1pdChfTy5NZWRpYVJlY29ubmVjdFN0YXJ0LHRoaXMuc3RvcmUudWlkKSksdGhpcy51bmJpbmRMb2NhbFRyYWNrRXZlbnRzKCksdGhpcy5sb2NhbFRyYWNrTWFwLmNsZWFyKCksMCE9PXRoaXMucmVtb3RlVXNlck1hcC5zaXplJiZBcnJheS5mcm9tKHRoaXMucmVtb3RlVXNlck1hcC5lbnRyaWVzKCkpLmZvckVhY2goKGU9PntsZXRbdCxpXT1lO0FycmF5LmZyb20oZF8oaSkuY2FsbChpKSkuZm9yRWFjaCgoZT0+e3RoaXMuc2V0UGVuZGluZ1JlbW90ZU1lZGlhKHQsZSl9KSksdGhpcy5lbWl0KF9PLk1lZGlhUmVjb25uZWN0U3RhcnQsdC51aWQpfSkpLHRoaXMudW5iaW5kQWxsUmVtb3RlVHJhY2tFdmVudHMoKSx0aGlzLnJlbW90ZVVzZXJNYXAuY2xlYXIoKSwwIT09dGhpcy5sb2NhbERhdGFDaGFubmVscy5sZW5ndGgmJih0aGlzLmxvY2FsRGF0YUNoYW5uZWxzLmZvckVhY2goKGU9Pnt0aGlzLnBlbmRpbmdMb2NhbERhdGFDaGFubmVscy5wdXNoKGUpfSkpLHRoaXMubG9jYWxEYXRhQ2hhbm5lbHMubGVuZ3RoPTApLDAhPT10aGlzLnJlbW90ZURhdGFDaGFubmVsTWFwLnNpemUmJihBcnJheS5mcm9tKHRoaXMucmVtb3RlRGF0YUNoYW5uZWxNYXAuZW50cmllcygpKS5mb3JFYWNoKChlPT57bGV0W3QsaV09ZTtBcnJheS5mcm9tKGRfKGkpLmNhbGwoaSkpLmZvckVhY2goKGU9Pnt0aGlzLnNldFBlbmRpbmdSZW1vdGVEYXRhQ2hhbm5lbCh0LGUpfSkpfSkpLHRoaXMucmVtb3RlRGF0YUNoYW5uZWxNYXAuY2xlYXIoKSksdGhpcy5zdGF0c1VwbG9hZGVyLnN0b3BVcGxvYWRPdXRib3VuZFN0YXRzKCksdGhpcy5zdGF0c1VwbG9hZGVyLnN0b3BVcGxvYWRJbmJvdW5kU3RhdHMoKSx0aGlzLnN0YXRzVXBsb2FkZXIuc3RvcFVwbG9hZFRyYW5zcG9ydFN0YXRzKCksZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFAyUENoYW5uZWwgZGlzY29ubmVjdGVkLCB3YWl0aW5nIHRvIHJlY29ubmVjdC5cIikpKX1oYXNQZW5kaW5nUmVtb3RlRGF0YUNoYW5uZWwoZSx0KXtmb3IoY29uc3QgaSBvZiB0aGlzLnBlbmRpbmdSZW1vdGVEYXRhQ2hhbm5lbHMpe2NvbnN0e3VzZXI6bixpZDpyfT1pO2lmKChlIGluc3RhbmNlb2YgY0Y/ZS51aWQ6ZSk9PT1uLnVpZCYmcj09PXQpcmV0dXJuITB9cmV0dXJuITF9c2V0UGVuZGluZ1JlbW90ZURhdGFDaGFubmVsKGUsdCl7dGhpcy5oYXNQZW5kaW5nUmVtb3RlRGF0YUNoYW5uZWwoZSx0KXx8dGhpcy5wZW5kaW5nUmVtb3RlRGF0YUNoYW5uZWxzLnB1c2goe3VzZXI6ZSxpZDp0fSl9aGFzUGVuZGluZ1JlbW90ZU1lZGlhKGUsdCl7Zm9yKGNvbnN0IGkgb2YgdGhpcy5wZW5kaW5nUmVtb3RlVHJhY2tzKXtjb25zdHt1c2VyOm4sa2luZDpyfT1pO2lmKChlIGluc3RhbmNlb2YgY0Y/ZS51aWQ6ZSk9PT1uLnVpZCYmdD09PXIpcmV0dXJuITB9cmV0dXJuITF9c2V0UGVuZGluZ1JlbW90ZU1lZGlhKGUsdCl7dGhpcy5oYXNQZW5kaW5nUmVtb3RlTWVkaWEoZSx0KXx8dGhpcy5wZW5kaW5nUmVtb3RlVHJhY2tzLnB1c2goe3VzZXI6ZSxraW5kOnR9KX1yZXN0YXJ0SUNFKGUpe3ZhciB0PXRoaXM7cmV0dXJuIFlJKChmdW5jdGlvbiooKXtpZighdC5jb25uZWN0aW9ufHx0LnN0YXRlIT09cE8uQ29ubmVjdGVkKXJldHVybjtjb25zdCBpPXlpZWxkIHFJKHQubXV0ZXgubG9jayhcIkZyb20gUDJQQ2hhbm5lbC5yZXN0YXJ0SUNFXCIpKTtsZXQgbjt0cnl7bj15aWVsZCBxSSh0LmNvbm5lY3Rpb24ucmVzdGFydElDRShlKSk7Y29uc3Qgcj15aWVsZCBxSShuLm5leHQoKSk7aWYoci5kb25lKXJldHVybjtjb25zdCBvPXIudmFsdWUscz15aWVsZCBvO3N3aXRjaCh0LnJlcG9ydFBDRGlzY29ubmVjdGVkT3JGYWlsZWQoZSksZSl7Y2FzZSBsTy5UQ1A6dC5fcGNTdGF0c1VwbG9hZFR5cGU9dU8uVENQX1JFU1RBUlQ7YnJlYWs7Y2FzZSBsTy5SRUxBWTp0Ll9wY1N0YXRzVXBsb2FkVHlwZT11Ty5SRUxBWV9SRVNUQVJUO2JyZWFrO2RlZmF1bHQ6dC5fcGNTdGF0c1VwbG9hZFR5cGU9dU8uT0xEX1JFU1RBUlR9dC5faXNJblJlc3RhcnRJY2U9ITAsbi5uZXh0KHMpfWNhdGNoKGUpe3ZhciByO251bGw9PT0ocj1uKXx8dm9pZCAwPT09cnx8ci50aHJvdyhlKX1maW5hbGx5e2koKX19KSkoKX1nZXRVcGxpbmtOZXR3b3JrUXVhbGl0eSgpe2lmKCF0aGlzLmNvbm5lY3Rpb24pcmV0dXJuIDA7Y29uc3QgZT10aGlzLmNvbm5lY3Rpb24uZ2V0U3RhdHMoKSx0PXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxWaWRlb1RyYWNrKSxpPXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxBdWRpb1RyYWNrKSxuPWUudmlkZW9TZW5kLmZpbmQoKGU9PmUuc3NyYz09PShudWxsPT10P3ZvaWQgMDp0LnNzcmNzWzBdLnNzcmNJZCkpKSxyPWUuYXVkaW9TZW5kLmZpbmQoKGU9PmUuc3NyYz09PShudWxsPT1pP3ZvaWQgMDppLnNzcmNzWzBdLnNzcmNJZCkpKTtpZighbnx8IXIpcmV0dXJuIDE7Y29uc3Qgbz1lQSh0aGlzLF9PLk5lZWRTaWduYWxSVFQpLHM9bj9uLnJ0dE1zOnZvaWQgMCxhPXI/ci5ydHRNczp2b2lkIDAsYz1zJiZhPyhzK2EpLzI6c3x8YSxkPShjJiZvPyhjK28pLzI6Y3x8byl8fDAsbD0xMDAqZS5zZW5kUGFja2V0TG9zc1JhdGUqLjcvNTArLjMqZC8xNTAwLHU9bDwuMTc/MTpsPC4zNj8yOmw8LjU5PzM6bDwuMT80OjUsaD1udWxsPT10P3ZvaWQgMDp0LnRyYWNrO2lmKGgmJmguX2VuY29kZXJDb25maWcmJi0xPT09aC5faGludHMuaW5kZXhPZihtTC5TQ1JFRU5fVFJBQ0spKXtjb25zdCB0PWguX2VuY29kZXJDb25maWcuYml0cmF0ZU1heCxpPWUuYml0cmF0ZS5hY3R1YWxFbmNvZGVkO2lmKHQmJmkpe2NvbnN0IGU9KDFlMyp0LWkpLygxZTMqdCk7cmV0dXJuIGJiW2U8LjE1PzA6ZTwuMz8xOmU8LjQ1PzI6ZTwuNj8zOjRdW3VdfX1yZXR1cm4gdX1nZXREb3dubGlua05ldHdvcmtRdWFsaXR5KCl7aWYoIXRoaXMuY29ubmVjdGlvbilyZXR1cm4gMDtjb25zdCBlPXRoaXMuY29ubmVjdGlvbi5nZXRTdGF0cygpO2xldCB0PTA7cmV0dXJuIEFycmF5LmZyb20odGhpcy5yZW1vdGVVc2VyTWFwLmVudHJpZXMoKSkuZm9yRWFjaCgoaT0+e2xldFtuXT1pO2NvbnN0IHI9bi5fYXVkaW9TU1JDLG89bi5fdmlkZW9TU1JDLHM9ZS5hdWRpb1JlY3YuZmluZCgoZT0+ZS5zc3JjPT09cikpLGE9ZS52aWRlb1JlY3YuZmluZCgoZT0+ZS5zc3JjPT09bykpO2lmKCFzJiYhYSlyZXR1cm4gdm9pZCh0Kz0xKTtjb25zdCBjPWVBKHRoaXMsX08uTmVlZFNpZ25hbFJUVCksZD1lLnJ0dCxsPShkJiZjPyhkK2MpLzI6ZHx8Yyl8fDAsdT1zP3Muaml0dGVyTXM6dm9pZCAwLGg9ZS5yZWN2UGFja2V0TG9zc1JhdGU7bGV0IHA9LjcqaCoxMDAvNTArLjMqbC8xNTAwO3UmJihwPS42KmgqMTAwLzUwKy4yKmwvMTUwMCsuMip1LzQwMCk7dCs9cDwuMT8xOnA8LjE3PzI6cDwuMzY/MzpwPC41OT80OjV9KSksdGhpcy5yZW1vdGVVc2VyTWFwLnNpemU+MD9NYXRoLnJvdW5kKHQvdGhpcy5yZW1vdGVVc2VyTWFwLnNpemUpOnR9YXN5bmMgbXV0ZUxvY2FsVHJhY2soZSl7cmV0dXJuIG5ldyBHaCgoKHQsaSk9Pnt0aGlzLmhhbmRsZU11dGVMb2NhbFRyYWNrKGUsdCxpKX0pKX1hc3luYyByZXBsYWNlVHJhY2soZSx0KXt2YXIgaTtpZihmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gUDJQQ2hhbm5lbCByZXBsYWNlVHJhY2sgZnJvbSBbXCIpLmNvbmNhdChlLmdldFRyYWNrSWQoKSxcIl0gdG8gW1wiKS5jb25jYXQodC5nZXRUcmFja0lkKCksXCJdXCIpKSwhdGhpcy5jb25uZWN0aW9ufHx0aGlzLnN0YXRlIT09cE8uQ29ubmVjdGVkKXJldHVybjtjb25zdCBuPUFycmF5LmZyb20odGhpcy5sb2NhbFRyYWNrTWFwLmVudHJpZXMoKSkuZmluZCgodD0+e2xldFsse3RyYWNrOml9XT10O3JldHVybiBlPT09aX0pKTtpZighbilyZXR1cm47Y29uc3Qgcj1uWzBdO2lmKGUhPT10JiYodGhpcy51bmJpbmRMb2NhbFRyYWNrRXZlbnRzKFt7dHJhY2s6ZSx0eXBlOnJ9XSksdGhpcy5iaW5kTG9jYWxUcmFja0V2ZW50cyhbe3RyYWNrOnQsdHlwZTpyfV0pLG5bMV0udHJhY2s9dCksYXdhaXQobnVsbD09PShpPXRoaXMuY29ubmVjdGlvbil8fHZvaWQgMD09PWk/dm9pZCAwOmkucmVwbGFjZVRyYWNrKHQsblsxXS5pZCkpLHRoaXMuaXNQbGFuQil7Y29uc3QgZT1uWzFdO2UuaWQ9dC5fbWVkaWFTdHJlYW1UcmFjay5pZCx0aGlzLmxvY2FsVHJhY2tNYXAuc2V0KHIsZSl9aWYocj09PWhPLkxvY2FsVmlkZW9UcmFjayYmIVhBKFwiRElTQUJMRV9EVUFMX1NUUkVBTV9VU0VfRU5DT0RJTkdcIikmJlpQKCkuc3VwcG9ydER1YWxTdHJlYW1FbmNvZGluZyl7Y29uc3QgdD10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsVmlkZW9Mb3dUcmFjayk7aWYodCl7Y29uc3QgaT1lLl9tZWRpYVN0cmVhbVRyYWNrLmNsb25lKCk7dC50cmFjay5fb3JpZ2luTWVkaWFTdHJlYW1UcmFjay5zdG9wKCksdC50cmFjay5fbWVkaWFTdHJlYW1UcmFjaz1pLHQudHJhY2suX29yaWdpbk1lZGlhU3RyZWFtVHJhY2s9aSxhd2FpdCBuZXcgR2goKChlLGkpPT57dGhpcy5oYW5kbGVSZXBsYWNlVHJhY2sodC50cmFjayxlLGksITApfSkpfX19ZmlsdGVyVG9iZVB1Ymxpc2hlZFRyYWNrcyhlLHQsaSl7Y29uc3Qgbj1bXSxyPXRoaXMuZ2V0QWxsVHJhY2tzKCk7ZT1yQShlPWUuZmlsdGVyKChlPT4tMT09PXIuaW5kZXhPZihlKSkpKTtsZXQgbyxzPSExO2NvbnN0IGE9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbEF1ZGlvVHJhY2spO2Zvcihjb25zdCByIG9mIGUpe2lmKHIgaW5zdGFuY2VvZiBhVSYmKHRoaXMubG9jYWxUcmFja01hcC5oYXMoaE8uTG9jYWxWaWRlb1RyYWNrKXx8cz9uZXcgQ3koUnkuQ0FOX05PVF9QVUJMSVNIX01VTFRJUExFX1ZJREVPX1RSQUNLUykudGhyb3coKToobi5wdXNoKHt0cmFjazpyLHR5cGU6aE8uTG9jYWxWaWRlb1RyYWNrfSkscz0hMCksdCkpe2NvbnN0IGU9dGhpcy5nZXRMb3dWaWRlb1RyYWNrKHIsaSk7bi5wdXNoKHt0cmFjazplLHR5cGU6aE8uTG9jYWxWaWRlb0xvd1RyYWNrfSl9aWYociBpbnN0YW5jZW9mIFRNKWlmKGEpe2NvbnN0IGU9YS50cmFjaztpZihlIGluc3RhbmNlb2YgUk0pdUYoW3JdKSxlLmFkZEF1ZGlvVHJhY2sociksdGhpcy5iaW5kTG9jYWxBdWRpb1RyYWNrRXZlbnRzKHIsITApO2Vsc2V7Y29uc3QgdD1oRihbZSxyXSk7ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFtwMnBJZDogXCIpLmNvbmNhdCh0aGlzLnN0b3JlLnAycElkLFwiXTogUDJQQ29ubmVjdGlvbiB3aWxsIHJlcGxhY2UgYXVkaW9UcmFjayBbXCIpLmNvbmNhdCh0LmdldFRyYWNrSWQoKSxcIl1cIikpLHRoaXMucmVwbGFjZVRyYWNrKGUsdCl9fWVsc2UgaWYobyBpbnN0YW5jZW9mIFJNKXVGKFtyXSksby5hZGRBdWRpb1RyYWNrKHIpO2Vsc2UgaWYob3x8IXIuX3VzZUF1ZGlvRWxlbWVudCYmWlAoKS53ZWJBdWRpb01lZGlhU3RyZWFtRGVzdCYmIXIuX2J5cGFzc1dlYkF1ZGlvKXtvPWhGKG8/W3Isb106W3JdKX1lbHNlIG89cn1yZXR1cm4gbyYmKGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbcDJwSWQ6IFwiKS5jb25jYXQodGhpcy5zdG9yZS5wMnBJZCxcIl06IFAyUENvbm5lY3Rpb24gd2lsbCBzZW5kIGF1ZGlvVHJhY2sgW1wiKS5jb25jYXQoby5nZXRUcmFja0lkKCksXCJdXCIpKSxuLnB1c2goe3RyYWNrOm8sdHlwZTpoTy5Mb2NhbEF1ZGlvVHJhY2t9KSksbn1maWx0ZXJUb2JlVW5wdWJsaXNoZWRUcmFja3MoZSl7Y29uc3QgdD1bXSxpPXRoaXMuZ2V0QWxsVHJhY2tzKCk7ZT1yQShlPWUuZmlsdGVyKChlPT4tMSE9PWkuaW5kZXhPZihlKSkpKTtmb3IoY29uc3QgaSBvZiBlKXtpZihpIGluc3RhbmNlb2YgVE0pe2NvbnN0IGU9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbEF1ZGlvVHJhY2spO2lmKCFlKWNvbnRpbnVlO2UudHJhY2sgaW5zdGFuY2VvZiBSTT8oZS50cmFjay5yZW1vdmVBdWRpb1RyYWNrKGkpLHRoaXMudW5iaW5kTG9jYWxBdWRpb1RyYWNrRXZlbnRzKGkpLDA9PT1lLnRyYWNrLnRyYWNrTGlzdC5sZW5ndGgmJih0LnB1c2goW2hPLkxvY2FsQXVkaW9UcmFjayxlXSksZS50cmFjay5jbG9zZSgpKSk6dC5wdXNoKFtoTy5Mb2NhbEF1ZGlvVHJhY2ssZV0pfWlmKGkgaW5zdGFuY2VvZiBhVSl7Y29uc3QgZT10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsVmlkZW9UcmFjayk7aWYoIWUpY29udGludWU7dC5wdXNoKFtoTy5Mb2NhbFZpZGVvVHJhY2ssZV0pO2NvbnN0IGk9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbFZpZGVvTG93VHJhY2spO2kmJnQucHVzaChbaE8uTG9jYWxWaWRlb0xvd1RyYWNrLGldKX19cmV0dXJuIHR9ZmlsdGVyVG9iZVB1Ymxpc2hlZERhdGFDaGFubmVscyhlKXtyZXR1cm4gZT0oZT1yQShlKSkuZmlsdGVyKChlPT4tMT09PXRoaXMubG9jYWxEYXRhQ2hhbm5lbHMuZmluZEluZGV4KCh0PT50LmlkPT09ZS5pZCkpKSl9ZmlsdGVyVG9iZVVucHVibGlzaGVkRGF0YUNoYW5uZWxzKGUpe3JldHVybiBlPShlPShlPXJBKGUpKS5maWx0ZXIoKGU9Pi0xIT09dGhpcy5sb2NhbERhdGFDaGFubmVscy5pbmRleE9mKGUpKSkpLmZpbHRlcigoZT0+ZS5fb3JpZ2luRGF0YUNoYW5uZWwpKX1iaW5kTG9jYWxUcmFja0V2ZW50cyhlKXtlLmZvckVhY2goKGU9PntsZXR7dHJhY2s6dCx0eXBlOml9PWU7c3dpdGNoKGkpe2Nhc2UgaE8uTG9jYWxWaWRlb1RyYWNrOnQuYWRkTGlzdGVuZXIoZkwuR0VUX1NUQVRTLHRoaXMuaGFuZGxlR2V0TG9jYWxWaWRlb1N0YXRzKSx0LmFkZExpc3RlbmVyKGZMLkdFVF9SVENfU1RBVFMsdGhpcy5oYW5kbGVHZXRSVENTdGF0cyksdC5hZGRMaXN0ZW5lcihmTC5ORUVEX0RJU0FCTEVfVFJBQ0ssdGhpcy5oYW5kbGVNdXRlTG9jYWxUcmFjayksdC5hZGRMaXN0ZW5lcihmTC5ORUVEX0VOQUJMRV9UUkFDSyx0aGlzLmhhbmRsZVVubXV0ZUxvY2FsVHJhY2spLHQuYWRkTGlzdGVuZXIoZkwuTkVFRF9VUERBVEVfVklERU9fRU5DT0RFUix0aGlzLmhhbmRsZVVwZGF0ZVZpZGVvRW5jb2RlciksdC5hZGRMaXN0ZW5lcihmTC5ORUVEX1VQREFURV9WSURFT19TRU5EX1BBUkFNRVRFUlMsdGhpcy5oYW5kbGVVcGRhdGVWaWRlb1NlbmRQYXJhbWV0ZXJzKSx0LmFkZExpc3RlbmVyKGZMLk5FRURfUkVQTEFDRV9UUkFDSyx0aGlzLmhhbmRsZVJlcGxhY2VUcmFjayksdC5hZGRMaXN0ZW5lcihmTC5ORUVEX01VVEVfVFJBQ0ssdGhpcy5oYW5kbGVNdXRlTG9jYWxUcmFjayksdC5hZGRMaXN0ZW5lcihmTC5ORUVEX1VOTVVURV9UUkFDSyx0aGlzLmhhbmRsZVVubXV0ZUxvY2FsVHJhY2spO2JyZWFrO2Nhc2UgaE8uTG9jYWxBdWRpb1RyYWNrOnRoaXMuYmluZExvY2FsQXVkaW9UcmFja0V2ZW50cyh0KTtjYXNlIGhPLkxvY2FsVmlkZW9Mb3dUcmFjazp9fSkpfWJpbmRMb2NhbEF1ZGlvVHJhY2tFdmVudHMoZSx0KXtlIGluc3RhbmNlb2YgUk0/ZS50cmFja0xpc3QuZm9yRWFjaCgoZT0+e2UuYWRkTGlzdGVuZXIoZkwuTkVFRF9ESVNBQkxFX1RSQUNLLHRoaXMuaGFuZGxlTXV0ZUxvY2FsVHJhY2spLGUuYWRkTGlzdGVuZXIoZkwuTkVFRF9FTkFCTEVfVFJBQ0ssdGhpcy5oYW5kbGVVbm11dGVMb2NhbFRyYWNrKSxlLmFkZExpc3RlbmVyKGZMLkdFVF9TVEFUUyx0aGlzLmhhbmRsZUdldExvY2FsQXVkaW9TdGF0cyksZS5hZGRMaXN0ZW5lcihmTC5ORUVEX01VVEVfVFJBQ0ssdGhpcy5oYW5kbGVNdXRlTG9jYWxUcmFjayksZS5hZGRMaXN0ZW5lcihmTC5ORUVEX1VOTVVURV9UUkFDSyx0aGlzLmhhbmRsZVVubXV0ZUxvY2FsVHJhY2spfSkpOihlLmFkZExpc3RlbmVyKGZMLkdFVF9TVEFUUyx0aGlzLmhhbmRsZUdldExvY2FsQXVkaW9TdGF0cyksZS5hZGRMaXN0ZW5lcihmTC5ORUVEX0RJU0FCTEVfVFJBQ0ssdGhpcy5oYW5kbGVNdXRlTG9jYWxUcmFjayksZS5hZGRMaXN0ZW5lcihmTC5ORUVEX0VOQUJMRV9UUkFDSyx0aGlzLmhhbmRsZVVubXV0ZUxvY2FsVHJhY2spLGUuYWRkTGlzdGVuZXIoZkwuTkVFRF9NVVRFX1RSQUNLLHRoaXMuaGFuZGxlTXV0ZUxvY2FsVHJhY2spLGUuYWRkTGlzdGVuZXIoZkwuTkVFRF9VTk1VVEVfVFJBQ0ssdGhpcy5oYW5kbGVVbm11dGVMb2NhbFRyYWNrKSx0fHwoZS5hZGRMaXN0ZW5lcihmTC5ORUVEX1JFUExBQ0VfVFJBQ0ssdGhpcy5oYW5kbGVSZXBsYWNlVHJhY2spLGUuYWRkTGlzdGVuZXIoZkwuTkVFRF9SRVBMQUNFX01JWElOR19UUkFDSyx0aGlzLmhhbmRsZVJlcGxhY2VNaXhpbmdUcmFjaykpKX11bmJpbmRMb2NhbFRyYWNrRXZlbnRzKGUpe2V8fChlPUFycmF5LmZyb20odGhpcy5sb2NhbFRyYWNrTWFwLmVudHJpZXMoKSkubWFwKChlPT57bGV0W3Qse3RyYWNrOml9XT1lO3JldHVybnt0cmFjazppLHR5cGU6dH19KSkpLGUuZm9yRWFjaCgoZT0+e2xldHt0cmFjazp0LHR5cGU6aX09ZTtzd2l0Y2goaSl7Y2FzZSBoTy5Mb2NhbFZpZGVvVHJhY2s6dC5vZmYoZkwuR0VUX1NUQVRTLHRoaXMuaGFuZGxlR2V0TG9jYWxWaWRlb1N0YXRzKSx0Lm9mZihmTC5HRVRfUlRDX1NUQVRTLHRoaXMuaGFuZGxlR2V0UlRDU3RhdHMpLHQub2ZmKGZMLk5FRURfRElTQUJMRV9UUkFDSyx0aGlzLmhhbmRsZU11dGVMb2NhbFRyYWNrKSx0Lm9mZihmTC5ORUVEX0VOQUJMRV9UUkFDSyx0aGlzLmhhbmRsZVVubXV0ZUxvY2FsVHJhY2spLHQub2ZmKGZMLk5FRURfVVBEQVRFX1ZJREVPX0VOQ09ERVIsdGhpcy5oYW5kbGVVcGRhdGVWaWRlb0VuY29kZXIpLHQub2ZmKGZMLk5FRURfVVBEQVRFX1ZJREVPX1NFTkRfUEFSQU1FVEVSUyx0aGlzLmhhbmRsZVVwZGF0ZVZpZGVvU2VuZFBhcmFtZXRlcnMpLHQub2ZmKGZMLk5FRURfUkVQTEFDRV9UUkFDSyx0aGlzLmhhbmRsZVJlcGxhY2VUcmFjayksdC5vZmYoZkwuTkVFRF9NVVRFX1RSQUNLLHRoaXMuaGFuZGxlTXV0ZUxvY2FsVHJhY2spLHQub2ZmKGZMLk5FRURfVU5NVVRFX1RSQUNLLHRoaXMuaGFuZGxlVW5tdXRlTG9jYWxUcmFjayk7YnJlYWs7Y2FzZSBoTy5Mb2NhbEF1ZGlvVHJhY2s6dGhpcy51bmJpbmRMb2NhbEF1ZGlvVHJhY2tFdmVudHModCk7Y2FzZSBoTy5Mb2NhbFZpZGVvTG93VHJhY2s6fX0pKX11bmJpbmRMb2NhbEF1ZGlvVHJhY2tFdmVudHMoZSl7ZSBpbnN0YW5jZW9mIFJNP2UudHJhY2tMaXN0LmZvckVhY2goKGU9PntlLm9mZihmTC5ORUVEX0RJU0FCTEVfVFJBQ0ssdGhpcy5oYW5kbGVNdXRlTG9jYWxUcmFjayksZS5vZmYoZkwuTkVFRF9FTkFCTEVfVFJBQ0ssdGhpcy5oYW5kbGVVbm11dGVMb2NhbFRyYWNrKSxlLm9mZihmTC5HRVRfU1RBVFMsdGhpcy5oYW5kbGVHZXRMb2NhbEF1ZGlvU3RhdHMpLGUub2ZmKGZMLk5FRURfTVVURV9UUkFDSyx0aGlzLmhhbmRsZU11dGVMb2NhbFRyYWNrKSxlLm9mZihmTC5ORUVEX1VOTVVURV9UUkFDSyx0aGlzLmhhbmRsZVVubXV0ZUxvY2FsVHJhY2spfSkpOihlLm9mZihmTC5HRVRfU1RBVFMsdGhpcy5oYW5kbGVHZXRMb2NhbEF1ZGlvU3RhdHMpLGUub2ZmKGZMLk5FRURfRElTQUJMRV9UUkFDSyx0aGlzLmhhbmRsZU11dGVMb2NhbFRyYWNrKSxlLm9mZihmTC5ORUVEX0VOQUJMRV9UUkFDSyx0aGlzLmhhbmRsZVVubXV0ZUxvY2FsVHJhY2spLGUub2ZmKGZMLk5FRURfUkVQTEFDRV9UUkFDSyx0aGlzLmhhbmRsZVJlcGxhY2VUcmFjayksZS5vZmYoZkwuTkVFRF9SRVBMQUNFX01JWElOR19UUkFDSyx0aGlzLmhhbmRsZVJlcGxhY2VNaXhpbmdUcmFjayksZS5vZmYoZkwuTkVFRF9NVVRFX1RSQUNLLHRoaXMuaGFuZGxlTXV0ZUxvY2FsVHJhY2spLGUub2ZmKGZMLk5FRURfVU5NVVRFX1RSQUNLLHRoaXMuaGFuZGxlVW5tdXRlTG9jYWxUcmFjaykpfWJpbmRSZW1vdGVUcmFja0V2ZW50cyhlLHQpe3QgaW5zdGFuY2VvZiBJVSYmdC5hZGRMaXN0ZW5lcihmTC5HRVRfU1RBVFMsKHQ9Pnt0KHRoaXMuaGFuZGxlR2V0UmVtb3RlVmlkZW9TdGF0cyhlKSl9KSksdCBpbnN0YW5jZW9mIHZVJiZ0LmFkZExpc3RlbmVyKGZMLkdFVF9TVEFUUywodD0+e3QodGhpcy5oYW5kbGVHZXRSZW1vdGVBdWRpb1N0YXRzKGUpKX0pKX11bmJpbmRSZW1vdGVUcmFja0V2ZW50cyhlKXtlJiZlLnJlbW92ZUFsbExpc3RlbmVycyhmTC5HRVRfU1RBVFMpfXVuYmluZEFsbFJlbW90ZVRyYWNrRXZlbnRzKCl7QXJyYXkuZnJvbSh0aGlzLnJlbW90ZVVzZXJNYXAuZW50cmllcygpKS5mb3JFYWNoKChlPT57bGV0W3QsaV09ZTtpLmhhcyhkTy5BVURJTykmJnRoaXMudW5iaW5kUmVtb3RlVHJhY2tFdmVudHModC5fYXVkaW9UcmFjayksaS5oYXMoZE8uVklERU8pJiZ0aGlzLnVuYmluZFJlbW90ZVRyYWNrRXZlbnRzKHQuX3ZpZGVvVHJhY2spfSkpfWNyZWF0ZUdhdGV3YXlQdWJsaXNoTWVzc2FnZShlLHQpe3JldHVybiBlLm1hcCgoKGUsaSk9Pnt2YXIgbjtsZXQgcixvLHt0cmFjazpzLHR5cGU6YX09ZTtzd2l0Y2goYSl7Y2FzZSBoTy5Mb2NhbEF1ZGlvVHJhY2s6cj1ady5BdWRpbyxvPXtkdHg6cyBpbnN0YW5jZW9mIFNNJiZzLl9jb25maWcuRFRYLGhxOiExLGxxOiExLHN0ZXJlbzohMSxzcGVlY2g6ITF9O2JyZWFrO2Nhc2UgaE8uTG9jYWxWaWRlb1RyYWNrOnI9RG4obj1zLl9oaW50cykuY2FsbChuLG1MLlNDUkVFTl9UUkFDSyk/WncuU2NyZWVuOlp3LkhpZ2gsbz1wQihwQih7fSxaTyhzKSkse30se2NvZGVjOnRoaXMuc3RvcmUuY29kZWMsc3ZjX21vZGU6QlUoKX0pO2JyZWFrO2Nhc2UgaE8uTG9jYWxWaWRlb0xvd1RyYWNrOnI9WncuTG93LG89cEIocEIoe30sWk8ocykpLHt9LHtjb2RlYzp0aGlzLnN0b3JlLmNvZGVjLHN2Y19tb2RlOkJVKCl9KX1yZXR1cm57c3RyZWFtX3R5cGU6cixhdHRyaWJ1dGVzOm8sc3NyY3M6dFtpXX19KSl9Y3JlYXRlR2F0ZXdheVVucHVibGlzaE1lc3NhZ2UoZSl7cmV0dXJuIGUubWFwKChlPT57dmFyIHQ7bGV0IGksW24se3RyYWNrOnIsc3NyY3M6byxpZDpzfV09ZTtzd2l0Y2gobil7Y2FzZSBoTy5Mb2NhbFZpZGVvVHJhY2s6aT1Ebih0PXIuX2hpbnRzKS5jYWxsKHQsbUwuU0NSRUVOX1RSQUNLKT9ady5TY3JlZW46WncuSGlnaDticmVhaztjYXNlIGhPLkxvY2FsQXVkaW9UcmFjazppPVp3LkF1ZGlvO2JyZWFrO2Nhc2UgaE8uTG9jYWxWaWRlb0xvd1RyYWNrOmk9WncuTG93fXJldHVybntzdHJlYW1fdHlwZTppLHNzcmNzOm8sbWlkOnN9fSkpfWFzc2lnbkxvY2FsVHJhY2tzKGUsdCl7ZS5mb3JFYWNoKCgoZSxpKT0+e2xldHt0cmFjazpuLHR5cGU6cn09ZTt0aGlzLmxvY2FsVHJhY2tNYXAuc2V0KHIse3RyYWNrOm4saWQ6dFtpXS5pZCxzc3Jjczp0W2ldLmxvY2FsU1NSQ30pfSkpfXdpdGhkcmF3TG9jYWxUcmFja3MoZSl7ZS5mb3JFYWNoKChlPT57bGV0W3RdPWU7dGhpcy5sb2NhbFRyYWNrTWFwLmRlbGV0ZSh0KX0pKX1iaW5kQ29ubmVjdGlvbkV2ZW50cyhlKXtlLm9uQ29ubmVjdGlvblN0YXRlQ2hhbmdlPWFzeW5jIHQ9PntpZihmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLnN0b3JlLmNsaWVudElkLFwiXSBbcDJwSWQ6IFwiKS5jb25jYXQodGhpcy5zdG9yZS5wMnBJZCxcIl06IFAyUENvbm5lY3Rpb24ub25Db25uZWN0aW9uU3RhdGVDaGFuZ2UoXCIpLmNvbmNhdCh0LFwiKVwiKSksdGhpcy5lbWl0KF9PLlBlZXJDb25uZWN0aW9uU3RhdGVDaGFuZ2UsdCksXCJjb25uZWN0ZWRcIiE9PXR8fHRoaXMuc3RvcmUua2V5TWV0cmljcy5wZWVyQ29ubmVjdGlvbkVuZHx8dGhpcy5zdG9yZS5wZWVyQ29ubmVjdGlvbkVuZCgpLFwiY29ubmVjdGVkXCI9PT10JiYodGhpcy5fcmVzdGFydFRpbWVyJiYoY2xlYXJUaW1lb3V0KHRoaXMuX3Jlc3RhcnRUaW1lciksdGhpcy5fcmVzdGFydFRpbWVyPXZvaWQgMCksKHRoaXMuX2lzRmlyc3RDb25uZWN0ZWR8fHRoaXMuX2lzSW5SZXN0YXJ0SWNlKSYmdGhpcy5yZXBvcnRQQ1N0YXRzKERhdGUubm93KCksITAsdGhpcy5fcGNTdGF0c1VwbG9hZFR5cGUpLHRoaXMuX2lzSW5SZXN0YXJ0SWNlPSExLHRoaXMuX2lzRmlyc3RDb25uZWN0ZWQ9ITEsdGhpcy5faXNTdGFydFJlc3RhcnRJY2U9ITEpLFhBKFwiTkVXX0lDRV9SRVNUQVJUXCIpKXt2YXIgaTtpZihEbihpPXRoaXMuX3Jlc3RhcnRTdGF0ZXMpLmNhbGwoaSx0KSl7aWYodGhpcy5faXNTdGFydFJlc3RhcnRJY2UpcmV0dXJuO3RoaXMuX2lzU3RhcnRSZXN0YXJ0SWNlPSEwO2NvbnN0IHQ9dD0+e2lmKFwiZGlzY29ubmVjdGVkXCI9PT1lLmljZUNvbm5lY3Rpb25TdGF0ZXx8XCJjaGVja2luZ1wiPT09ZS5pY2VDb25uZWN0aW9uU3RhdGV8fFwiZmFpbGVkXCI9PT1lLmljZUNvbm5lY3Rpb25TdGF0ZSl7ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFtQMlBDaGFubmVsXSBzdGFydCB1c2UgcmVzdGFydElDRSwgdHlwZSBpcyBcIikuY29uY2F0KHQpKTtcIkNPTk5FQ1RFRFwiPT09ZUEodGhpcyxfTy5RdWVyeUNsaWVudENvbm5lY3Rpb25TdGF0ZSkmJnRoaXMuZW1pdChfTy5SZXF1ZXN0UmVzdGFydElDRSx0KX19LGk9KCk9PntcImRpc2Nvbm5lY3RlZFwiIT09ZS5pY2VDb25uZWN0aW9uU3RhdGUmJlwiY2hlY2tpbmdcIiE9PWUuaWNlQ29ubmVjdGlvblN0YXRlJiZcImZhaWxlZFwiIT09ZS5pY2VDb25uZWN0aW9uU3RhdGV8fCh0aGlzLnJlcG9ydFBDU3RhdHMoRGF0ZS5ub3coKSwhMSx0aGlzLl9wY1N0YXRzVXBsb2FkVHlwZSksZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFAyUENvbm5lY3Rpb24gZGlzY29ubmVjdGVkIHRpbWVvdXQsIGZvcmNlIHJlY29ubmVjdFwiKSksc2V0VGltZW91dCgoKCk9PnRoaXMuZW1pdChfTy5QMlBMb3N0KSksMCksdGhpcy5pY2VGYWlsZWRDb3VudCs9MSx0aGlzLnJlcXVlc3RSZWNvbm5lY3QoKSl9LG49WEEoXCJJQ0VfUkVTVEFSVF9JTlRFUlZBTFwiKTtyZXR1cm4gdm9pZCh0aGlzLl9yZXN0YXJ0VGltZXI9d2luZG93LnNldFRpbWVvdXQoKCgpPT57aWYoWEEoXCJKT0lOX1dJVEhfRkFMTEJBQ0tfTUVESUFfUFJPWFlfRk9SQ0VcIikmJlpQKCkuc3VwcG9ydFBDU2V0Q29uZmlndXJhdGlvbil0KGxPLlJFTEFZKSx0aGlzLl9yZXN0YXJ0VGltZXI9d2luZG93LnNldFRpbWVvdXQoaSxuKTtlbHNlIGlmKFp2KCkpdChsTy5VRFApLHRoaXMuX3Jlc3RhcnRUaW1lcj13aW5kb3cuc2V0VGltZW91dChpLDRlMyk7ZWxzZXtpZih0KGxPLlRDUCksWlAoKS5zdXBwb3J0UENTZXRDb25maWd1cmF0aW9uKXJldHVybiB2b2lkKHRoaXMuX3Jlc3RhcnRUaW1lcj13aW5kb3cuc2V0VGltZW91dCgoKCk9Pnt0KGxPLlJFTEFZKSx0aGlzLl9yZXN0YXJ0VGltZXI9d2luZG93LnNldFRpbWVvdXQoaSxuKX0pLG4pKTt0aGlzLl9yZXN0YXJ0VGltZXI9d2luZG93LnNldFRpbWVvdXQoaSxuKX19KSw4MDApKX19ZWxzZXtpZihcImRpc2Nvbm5lY3RlZFwiPT09dCYmXCJkaXNjb25uZWN0ZWRcIj09PWUuaWNlQ29ubmVjdGlvblN0YXRlKXJldHVybiBzZXRUaW1lb3V0KCgoKT0+e2lmKFwiZGlzY29ubmVjdGVkXCI9PT1lLmljZUNvbm5lY3Rpb25TdGF0ZSYmWEEoXCJJQ0VfUkVTVEFSVFwiKSl7XCJDT05ORUNURURcIj09PWVBKHRoaXMsX08uUXVlcnlDbGllbnRDb25uZWN0aW9uU3RhdGUpJiZ0aGlzLmVtaXQoX08uUmVxdWVzdFJlc3RhcnRJQ0UpfX0pLDgwMCksdm9pZCBzZXRUaW1lb3V0KCgoKT0+e1wiZGlzY29ubmVjdGVkXCI9PT1lLnBlZXJDb25uZWN0aW9uU3RhdGUmJihmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW3AycElkOiBcIikuY29uY2F0KHRoaXMuc3RvcmUucDJwSWQsXCJdOiBQMlBDb25uZWN0aW9uIGRpc2Nvbm5lY3RlZCB0aW1lb3V0IDQwMDBtcywgZm9yY2UgcmVjb25uZWN0XCIpKSx0aGlzLnJlcG9ydFBDU3RhdHMoRGF0ZS5ub3coKSwhMSx0aGlzLl9wY1N0YXRzVXBsb2FkVHlwZSksdGhpcy5faXNJblJlc3RhcnRJY2U9ITEsc2V0VGltZW91dCgoKCk9PnRoaXMuZW1pdChfTy5QMlBMb3N0KSksMCksdGhpcy5pY2VGYWlsZWRDb3VudCs9MSx0aGlzLnJlcXVlc3RSZWNvbm5lY3QoKSl9KSw0ZTMpO1wiZmFpbGVkXCI9PT10JiYoZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFtwMnBJZDogXCIpLmNvbmNhdCh0aGlzLnN0b3JlLnAycElkLFwiXTogUDJQQ29ubmVjdGlvbiBzdGF0ZSBmYWlsZWQsIGZvcmNlIHJlY29ubmVjdFwiKSksdGhpcy5yZXBvcnRQQ0Rpc2Nvbm5lY3RlZE9yRmFpbGVkKCksc2V0VGltZW91dCgoKCk9PnRoaXMuZW1pdChfTy5QMlBMb3N0KSksMCksdGhpcy5pY2VGYWlsZWRDb3VudCs9MSxhd2FpdCB0aGlzLnJlcXVlc3RSZWNvbm5lY3QoKSl9fSxlLm9uSUNFQ29ubmVjdGlvblN0YXRlQ2hhbmdlPWU9PntcImNvbm5lY3RlZFwiIT09ZXx8dGhpcy5zdG9yZS5rZXlNZXRyaWNzLmljZUNvbm5lY3Rpb25FbmR8fHRoaXMuc3RvcmUuaWNlQ29ubmVjdGlvbkVuZCgpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFtwMnBJZDogXCIpLmNvbmNhdCh0aGlzLnN0b3JlLnAycElkLFwiXTogUDJQQ29ubmVjdGlvbi5vbklDRUNvbm5lY3Rpb25TdGF0ZUNoYW5nZShcIikuY29uY2F0KGUsXCIpXCIpKSx2Yi5yZXBvcnRBcGlJbnZva2UodGhpcy5zdG9yZS5zZXNzaW9uSWQse25hbWU6XCJJQ0VDb25uZWN0aW9uU3RhdGVDaGFuZ2VcIixvcHRpb25zOmUsdGFnOmp5LlRSQUNFUn0pLm9uU3VjY2VzcygpLHRoaXMuZW1pdChfTy5JY2VDb25uZWN0aW9uU3RhdGVDaGFuZ2UsZSl9LGUub25JQ0VUcmFuc3BvcnRTdGF0ZUNoYW5nZT1lPT57ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW3AycElkOiBcIikuY29uY2F0KHRoaXMuc3RvcmUucDJwSWQsXCJdOiBQMlBDb25uZWN0aW9uLm9uSUNFVHJhbnNwb3J0U3RhdGVDaGFuZ2UoXCIpLmNvbmNhdChlLFwiKVwiKSl9LGUub25EVExTVHJhbnNwb3J0U3RhdGVDaGFuZ2U9ZT0+e2ZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFtwMnBJZDogXCIpLmNvbmNhdCh0aGlzLnN0b3JlLnAycElkLFwiXTogUDJQQ29ubmVjdGlvbi5vbkRUTFNUcmFuc3BvcnRTdGF0ZUNoYW5nZShcIikuY29uY2F0KGUsXCIpXCIpKX0sZS5vbkRUTFNUcmFuc3BvcnRFcnJvcj1lPT57ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW3AycElkOiBcIikuY29uY2F0KHRoaXMuc3RvcmUucDJwSWQsXCJdOiBQMlBDb25uZWN0aW9uLm9uRFRMU1RyYW5zcG9ydEVycm9yKFwiKS5jb25jYXQoZSxcIilcIikpfSxlLm9uRmlyc3RBdWRpb0RlY29kZWQ9ZT0+e3ZhciB0O2NvbnN0IGk9QXJyYXkuZnJvbShkXyh0PXRoaXMucmVtb3RlVXNlck1hcCkuY2FsbCh0KSkuZmluZCgodD0+dC5fYXVkaW9TU1JDPT09ZSkpO3ZhciBuO2kmJih0aGlzLnN0b3JlLnN1YnNjcmliZShpLnVpZCxcImF1ZGlvXCIsdm9pZCAwLHZvaWQgMCx2b2lkIDAsRGF0ZS5ub3coKSksbnVsbD09PShuPWkuYXVkaW9UcmFjayl8fHZvaWQgMD09PW58fG4uZW1pdChJTC5GSVJTVF9GUkFNRV9ERUNPREVEKSx2Yi5maXJzdFJlbW90ZUZyYW1lKHRoaXMuc3RvcmUuc2Vzc2lvbklkLGdiLkZJUlNUX0FVRElPX0RFQ09ERSxSYi5GSVJTVF9BVURJT19ERUNPREUse3BlZXI6aS5fdWludGlkLHN1YnNjcmliZUVsYXBzZTpyVi5tZWFzdXJlRnJvbVN1YnNjcmliZVN0YXJ0KHRoaXMuc3RvcmUuY2xpZW50SWQsZSksc3Vic2NyaWJlUmVxdWVzdGlkOmUscDJwaWQ6dGhpcy5zdG9yZS5wMnBJZH0pKX0sZS5vbkZpcnN0QXVkaW9SZWNlaXZlZD1lPT57dmFyIHQ7Y29uc3QgaT1BcnJheS5mcm9tKGRfKHQ9dGhpcy5yZW1vdGVVc2VyTWFwKS5jYWxsKHQpKS5maW5kKCh0PT50Ll9hdWRpb1NTUkM9PT1lKSk7aSYmdmIuZmlyc3RSZW1vdGVGcmFtZSh0aGlzLnN0b3JlLnNlc3Npb25JZCxnYi5GSVJTVF9BVURJT19SRUNFSVZFRCxSYi5GSVJTVF9BVURJT19SRUNFSVZFRCx7cGVlcjppLl91aW50aWQsc3Vic2NyaWJlRWxhcHNlOnJWLm1lYXN1cmVGcm9tU3Vic2NyaWJlU3RhcnQodGhpcy5zdG9yZS5jbGllbnRJZCxlKSxzdWJzY3JpYmVSZXF1ZXN0aWQ6ZSxwMnBpZDp0aGlzLnN0b3JlLnAycElkfSl9LGUub25GaXJzdFZpZGVvRGVjb2RlZD0oZSx0LGkpPT57dGhpcy5yZXBvcnRWaWRlb0ZpcnN0RnJhbWVEZWNvZGVkKGUsdCxpKX0sZS5vbkZpcnN0VmlkZW9SZWNlaXZlZD1lPT57dmFyIHQ7Y29uc3QgaT1BcnJheS5mcm9tKGRfKHQ9dGhpcy5yZW1vdGVVc2VyTWFwKS5jYWxsKHQpKS5maW5kKCh0PT50Ll92aWRlb1NTUkM9PT1lKSk7aSYmdmIuZmlyc3RSZW1vdGVGcmFtZSh0aGlzLnN0b3JlLnNlc3Npb25JZCxnYi5GSVJTVF9WSURFT19SRUNFSVZFRCxSYi5GSVJTVF9WSURFT19SRUNFSVZFRCx7cGVlcjppLl91aW50aWQsc3Vic2NyaWJlRWxhcHNlOnJWLm1lYXN1cmVGcm9tU3Vic2NyaWJlU3RhcnQodGhpcy5zdG9yZS5jbGllbnRJZCxlKSxzdWJzY3JpYmVSZXF1ZXN0aWQ6ZSxwMnBpZDp0aGlzLnN0b3JlLnAycElkfSl9LGUub25TZWxlY3RlZExvY2FsQ2FuZGlkYXRlQ2hhbmdlZD0oZSx0KT0+e2NvbnN0IGk9XCJyZWxheVwiPT09ZS5jYW5kaWRhdGVUeXBlLG49XCJyZWxheVwiPT09dC5jYW5kaWRhdGVUeXBlO1widW5rbm93blwiIT09dC5jYW5kaWRhdGVUeXBlJiZpPT09bnx8dGhpcy5lbWl0KF9PLkNvbm5lY3Rpb25UeXBlQ2hhbmdlLGkpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuc3RvcmUuY2xpZW50SWQsXCJdIFtwMnBJZDogXCIpLmNvbmNhdCh0aGlzLnN0b3JlLnAycElkLFwiXTogUDJQQ29ubmVjdGlvbi5TZWxlY3RlZExvY2FsQ2FuZGlkYXRlQ2hhbmdlZChcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KG5OKHQpKSxcIiAtPiBcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KG5OKGUpKSxcIilcIikpfSxlLm9uU2VsZWN0ZWRSZW1vdGVDYW5kaWRhdGVDaGFuZ2VkPShlLHQpPT57ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5zdG9yZS5jbGllbnRJZCxcIl0gW3AycElkOiBcIikuY29uY2F0KHRoaXMuc3RvcmUucDJwSWQsXCJdOiBQMlBDb25uZWN0aW9uLlNlbGVjdGVkUmVtb3RlQ2FuZGlkYXRlQ2hhbmdlZChcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KG5OKHQpKSxcIiAtPiBcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KG5OKGUpKSxcIilcIikpfSxlLm9uRmlyc3RWaWRlb0RlY29kZWRUaW1lb3V0PWU9Pnt0aGlzLnJlcG9ydFZpZGVvRmlyc3RGcmFtZURlY29kZWQoZSx2b2lkIDAsdm9pZCAwLCEwKX0sZS5nZXRMb2NhbFZpZGVvU3RhdHM9KCk9Pntjb25zdCBlPXRoaXMuc3RhdHNDb2xsZWN0b3IuZ2V0TG9jYWxWaWRlb1RyYWNrU3RhdHMoKSx0PXRoaXMuc3RhdHNDb2xsZWN0b3IuZ2V0UlRDU3RhdHMoKTtyZXR1cm4gcEIocEIoe30sZSksdCl9fXVuYmluZENvbm5lY3Rpb25FdmVudHMoZSl7ZS5vbkNvbm5lY3Rpb25TdGF0ZUNoYW5nZT12b2lkIDAsZS5vbklDRUNvbm5lY3Rpb25TdGF0ZUNoYW5nZT12b2lkIDAsZS5vbklDRVRyYW5zcG9ydFN0YXRlQ2hhbmdlPXZvaWQgMCxlLm9uRFRMU1RyYW5zcG9ydFN0YXRlQ2hhbmdlPXZvaWQgMCxlLm9uRFRMU1RyYW5zcG9ydEVycm9yPXZvaWQgMCxlLm9uRmlyc3RBdWRpb0RlY29kZWQ9dm9pZCAwLGUub25GaXJzdEF1ZGlvUmVjZWl2ZWQ9dm9pZCAwLGUub25GaXJzdFZpZGVvRGVjb2RlZD12b2lkIDAsZS5vbkZpcnN0VmlkZW9SZWNlaXZlZD12b2lkIDAsZS5vblNlbGVjdGVkTG9jYWxDYW5kaWRhdGVDaGFuZ2VkPXZvaWQgMCxlLm9uU2VsZWN0ZWRSZW1vdGVDYW5kaWRhdGVDaGFuZ2VkPXZvaWQgMCxlLm9uRmlyc3RWaWRlb0RlY29kZWRUaW1lb3V0PXZvaWQgMCxlLmdldExvY2FsVmlkZW9TdGF0cz12b2lkIDB9ZmlsdGVyVG9iZU11dGVkVHJhY2tzKGUpe2NvbnN0IHQ9W107aWYoLTE9PT10aGlzLmdldEFsbFRyYWNrcygpLmluZGV4T2YoZSkpcmV0dXJuIHQ7Y29uc3QgaT10aGlzLmxvY2FsVHJhY2tNYXAuZ2V0KGhPLkxvY2FsQXVkaW9UcmFjayk7aWYoZSBpbnN0YW5jZW9mIFRNJiYobnVsbD09aT92b2lkIDA6aS50cmFjaylpbnN0YW5jZW9mIFJNKXJldHVybiBpLnRyYWNrLmlzQWN0aXZlfHx0LnB1c2goW2hPLkxvY2FsQXVkaW9UcmFjayxpXSksdDtjb25zdCBuPUFycmF5LmZyb20odGhpcy5sb2NhbFRyYWNrTWFwLmVudHJpZXMoKSkuZmluZCgodD0+e2xldFsse3RyYWNrOml9XT10O3JldHVybiBlPT09aX0pKTtpZihuJiYodC5wdXNoKG4pLG5bMF09PT1oTy5Mb2NhbFZpZGVvVHJhY2spKXtjb25zdCBlPXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxWaWRlb0xvd1RyYWNrKTtlJiZ0LnB1c2goW2hPLkxvY2FsVmlkZW9Mb3dUcmFjayxlXSl9cmV0dXJuIHR9ZmlsdGVyVG9iZVVubXV0ZWRUcmFja3MoZSl7Y29uc3QgdD1bXSxpPXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxBdWRpb1RyYWNrKTtpZihlIGluc3RhbmNlb2YgVE0mJihudWxsPT1pP3ZvaWQgMDppLnRyYWNrKWluc3RhbmNlb2YgUk0pcmV0dXJuIGkudHJhY2suaXNBY3RpdmUmJnQucHVzaChbaE8uTG9jYWxBdWRpb1RyYWNrLGldKSx0O2NvbnN0IG49QXJyYXkuZnJvbSh0aGlzLmxvY2FsVHJhY2tNYXAuZW50cmllcygpKS5maW5kKCh0PT57bGV0Wyx7dHJhY2s6aX1dPXQ7cmV0dXJuIGU9PT1pfSkpO2lmKG4paWYoblswXT09PWhPLkxvY2FsVmlkZW9UcmFjayl7dC5wdXNoKG4pO2NvbnN0IGU9dGhpcy5sb2NhbFRyYWNrTWFwLmdldChoTy5Mb2NhbFZpZGVvTG93VHJhY2spO2UmJnQucHVzaChbaE8uTG9jYWxWaWRlb0xvd1RyYWNrLGVdKX1lbHNlIHQucHVzaChuKTtyZXR1cm4gdH1jcmVhdGVNdXRlTWVzc2FnZShlKXtyZXR1cm4gZS5tYXAoKGU9Pnt2YXIgdDtsZXQgaSxbbix7dHJhY2s6cixzc3JjczpvLGlkOnN9XT1lO3N3aXRjaChuKXtjYXNlIGhPLkxvY2FsQXVkaW9UcmFjazppPVp3LkF1ZGlvO2JyZWFrO2Nhc2UgaE8uTG9jYWxWaWRlb1RyYWNrOmk9RG4odD1yLl9oaW50cykuY2FsbCh0LG1MLlNDUkVFTl9UUkFDSyk/WncuU2NyZWVuOlp3LkhpZ2g7YnJlYWs7Y2FzZSBoTy5Mb2NhbFZpZGVvTG93VHJhY2s6aT1ady5Mb3d9cmV0dXJue3N0cmVhbV90eXBlOmksc3NyY3M6byxtaWQ6c319KSl9Y3JlYXRlVW5tdXRlTWVzc2FnZShlKXtyZXR1cm4gZS5tYXAoKGU9Pnt2YXIgdDtsZXQgaSxbbix7dHJhY2s6cixzc3JjczpvLGlkOnN9XT1lO3N3aXRjaChuKXtjYXNlIGhPLkxvY2FsQXVkaW9UcmFjazppPVp3LkF1ZGlvO2JyZWFrO2Nhc2UgaE8uTG9jYWxWaWRlb1RyYWNrOmk9RG4odD1yLl9oaW50cykuY2FsbCh0LG1MLlNDUkVFTl9UUkFDSyk/WncuU2NyZWVuOlp3LkhpZ2g7YnJlYWs7Y2FzZSBoTy5Mb2NhbFZpZGVvTG93VHJhY2s6aT1ady5Mb3d9cmV0dXJue3N0cmVhbV90eXBlOmksc3NyY3M6byxtaWQ6c319KSl9ZmlsdGVyVG9iZVVuU3Vic2NyaWJlZFRyYWNrcyhlLHQpe2NvbnN0IGk9W10sbj10aGlzLnJlbW90ZVVzZXJNYXAuZ2V0KGUpO2lmKCFuKXJldHVybiBpO2lmKHQpe2NvbnN0IHI9bi5nZXQodCk7aWYoIXIpcmV0dXJuIGk7aS5wdXNoKFtlLHtraW5kOnQsaWQ6cn1dKX1lbHNlIEFycmF5LmZyb20obi5lbnRyaWVzKCkpLmZvckVhY2goKHQ9PntsZXRbbixyXT10O2kucHVzaChbZSx7a2luZDpuLGlkOnJ9XSl9KSk7cmV0dXJuIGl9ZmlsdGVyVG9iZVVuU3Vic2NyaWJlZERhdGFDaGFubmVscyhlLHQpe2NvbnN0IGk9W107cmV0dXJuIHQuZm9yRWFjaCgodD0+e3ZhciBuO251bGwhPT0obj10aGlzLnJlbW90ZURhdGFDaGFubmVsTWFwLmdldChlKSkmJnZvaWQgMCE9PW4mJm4uaGFzKHQuaWQpJiZpLnB1c2godCl9KSksaX1jcmVhdGVVbnN1YnNjcmliZU1lc3NhZ2UoZSl7Y29uc3QgdD1bXTtyZXR1cm4gZS5mb3JFYWNoKChlPT57bGV0W2kse2tpbmQ6bixpZDpyfV09ZTtzd2l0Y2gobil7Y2FzZSBkTy5WSURFTzpyZXR1cm4gdm9pZChpLl92aWRlb1NTUkMmJnQucHVzaCh7c3RyZWFtX3R5cGU6ZE8uVklERU8sc3NyY0lkOmkuX3ZpZGVvU1NSQ30pKTtjYXNlIGRPLkFVRElPOnJldHVybiB2b2lkKGkuX2F1ZGlvU1NSQyYmdC5wdXNoKHtzdHJlYW1fdHlwZTpkTy5BVURJTyxzc3JjSWQ6aS5fYXVkaW9TU1JDfSkpfX0pKSx0fWNyZWF0ZVVuc3Vic2NyaWJlQWxsTWVzc2FnZShlKXtjb25zdCB0PW5ldyBNYXA7cmV0dXJuIGUuZm9yRWFjaCgoZT0+e2xldFtpLHtraW5kOm59XT1lO2lmKHQuaGFzKGkpKXtsZXQgZT10LmdldChpKTtuPT09ZE8uVklERU8/ZXw9dE8uVmlkZW86ZXw9dE8uQXVkaW8sdC5zZXQoaSxlKX1lbHNlIG49PT1kTy5WSURFTz90LnNldChpLHRPLlZpZGVvKTp0LnNldChpLHRPLkF1ZGlvKX0pKSx7dXNlcnM6QXJyYXkuZnJvbSh0LmVudHJpZXMoKSkubWFwKChlPT57bGV0W3QsaV09ZTtyZXR1cm57c3RyZWFtX2lkOnQudWlkLHN0cmVhbV90eXBlOml9fSkpfX13aXRoZHJhd1JlbW90ZVRyYWNrcyhlKXtlLmZvckVhY2goKGU9PntsZXRbdCx7a2luZDppfV09ZTtjb25zdCBuPXRoaXMucmVtb3RlVXNlck1hcC5nZXQodCk7biYmKG4uZGVsZXRlKGkpLDA9PT1BcnJheS5mcm9tKG4uZW50cmllcygpKS5sZW5ndGgmJnRoaXMucmVtb3RlVXNlck1hcC5kZWxldGUodCkpfSkpfWFzeW5jIHVwZGF0ZUJpdHJhdGVMaW1pdChlKXtjb25zdCB0PXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxWaWRlb1RyYWNrKSxpPXRoaXMubG9jYWxUcmFja01hcC5nZXQoaE8uTG9jYWxWaWRlb0xvd1RyYWNrKTt0JiZhd2FpdCB0LnRyYWNrLnNldEJpdHJhdGVMaW1pdChlLnVwbGluayksaSYmZS5sb3dfc3RyZWFtX3VwbGluayYmYXdhaXQgaS50cmFjay5zZXRCaXRyYXRlTGltaXQoe21heF9iaXRyYXRlOmUubG93X3N0cmVhbV91cGxpbmsuYml0cmF0ZSxtaW5fYml0cmF0ZTplLmxvd19zdHJlYW1fdXBsaW5rLmJpdHJhdGV8fDB9KX1pc1AyUERpc2Nvbm5lY3RlZCgpe2lmKHRoaXMuY29ubmVjdGlvbil7cmV0dXJuXCJjb25uZWN0ZWRcIiE9PXRoaXMuY29ubmVjdGlvbi5wZWVyQ29ubmVjdGlvblN0YXRlfXJldHVybiEwfW1hcFB1YlJlc1RvUmVtb3RlQ29uZmlnKGUsdCxpKXtyZXR1cm4gZS5tYXAoKChlLG4pPT57dmFyIHI7bGV0e3N0cmVhbV90eXBlOm99PWU7Y29uc3Qgcz1udWxsPT09KHI9dC5maW5kKChlPT57bGV0e3N0cmVhbV90eXBlOnR9PWU7cmV0dXJuIG89PT10fSkpKXx8dm9pZCAwPT09cj92b2lkIDA6ci5hdHRyaWJ1dGVzO2lmKHMmJlhBKFwiRElTQUJMRV9TQ1JFRU5fU0hBUkVfUkVNQlwiKSl7Y29uc3QgZT1pW25dLl9oaW50czsoRG4oZSkuY2FsbChlLG1MLlNDUkVFTl9UUkFDSyl8fERuKGUpLmNhbGwoZSxtTC5TQ1JFRU5fTE9XX1RSQUNLKSkmJihzLnJlbWI9ITEsZmIuZGVidWcoXCJkaXNhYmxlIHJlbWIgZm9yIHNjcmVlbiBzaGFyZSwgaGludHM6XCIsZSkpfXJldHVybiBzfSkpfWFzeW5jIHRyeVRvVW5tdXRlQXVkaW8oZSl7Zm9yKGxldCBpPTA7aTxlLmxlbmd0aDtpKyspaWYoZVtpXWluc3RhbmNlb2YgVE0pe3ZhciB0O2NvbnN0IG49dGhpcy5maWx0ZXJUb2JlVW5tdXRlZFRyYWNrcyhlW2ldKTtpZigwPT09bi5sZW5ndGgpY29udGludWU7YXdhaXQobnVsbD09PSh0PXRoaXMuY29ubmVjdGlvbil8fHZvaWQgMD09PXQ/dm9pZCAwOnQudW5tdXRlTG9jYWwobi5tYXAoKGU9PntsZXRbLHtpZDp0fV09ZTtyZXR1cm4gdH0pKSkpO2NvbnN0IHI9dGhpcy5jcmVhdGVVbm11dGVNZXNzYWdlKG4pO3JldHVybiB2b2lkIGF3YWl0ICR5KHRoaXMsX08uUmVxdWVzdFVubXV0ZUxvY2FsLHIpfX1iaW5kU3RhdHNVcGxvYWRlckV2ZW50cygpe3RoaXMuc3RhdHNVcGxvYWRlci5yZXF1ZXN0U3RhdHM9KCk9PnRoaXMuZ2V0U3RhdHMoKSx0aGlzLnN0YXRzVXBsb2FkZXIucmVxdWVzdExvY2FsTWVkaWE9KCk9PkFycmF5LmZyb20odGhpcy5sb2NhbFRyYWNrTWFwLmVudHJpZXMoKSksdGhpcy5zdGF0c1VwbG9hZGVyLnJlcXVlc3RSZW1vdGVNZWRpYT0oKT0+QXJyYXkuZnJvbSh0aGlzLnJlbW90ZVVzZXJNYXAuZW50cmllcygpKSx0aGlzLnN0YXRzVXBsb2FkZXIucmVxdWVzdFZpZGVvSXNSZWFkeT1lPT57dmFyIHQ7cmV0dXJuIShudWxsPT09KHQ9dGhpcy5jb25uZWN0aW9uKXx8dm9pZCAwPT09dHx8IXQuZ2V0UmVtb3RlVmlkZW9Jc1JlYWR5KGUpKX0sdGhpcy5zdGF0c1VwbG9hZGVyLnJlcXVlc3RVcGxvYWQ9KGUsdCk9PnRoaXMuZW1pdChfTy5SZXF1ZXN0VXBsb2FkLGUsdCksdGhpcy5zdGF0c1VwbG9hZGVyLnJlcXVlc3RVcGxvYWRTdGF0cz1lPT50aGlzLmVtaXQoX08uUmVxdWVzdFVwbG9hZFN0YXRzLGUpLHRoaXMuc3RhdHNVcGxvYWRlci5yZXF1ZXN0QWxsVHJhY2tzPSgpPT50aGlzLmdldEFsbFRyYWNrcygpfXVuYmluZFN0YXRzVXBsb2FkZXJFdmVudHMoKXt0aGlzLnN0YXRzVXBsb2FkZXIucmVxdWVzdFN0YXRzPXZvaWQgMCx0aGlzLnN0YXRzVXBsb2FkZXIucmVxdWVzdExvY2FsTWVkaWE9dm9pZCAwLHRoaXMuc3RhdHNVcGxvYWRlci5yZXF1ZXN0UmVtb3RlTWVkaWE9dm9pZCAwLHRoaXMuc3RhdHNVcGxvYWRlci5yZXF1ZXN0VmlkZW9Jc1JlYWR5PXZvaWQgMH1hc3luYyByZXF1ZXN0UmVjb25uZWN0KCl7dGhpcy5kdGxzRmFpbGVkQ291bnQrPTEsYXdhaXQgbUEoTEEodGhpcy5kdGxzRmFpbGVkQ291bnQsUEEpKSx0aGlzLmVtaXQoX08uUmVxdWVzdFJlY29ubmVjdCl9YXN5bmMgcmVjb25uZWN0UDJQKCl7Y29uc3QgZT1BcnJheS5mcm9tKHRoaXMubG9jYWxUcmFja01hcC5lbnRyaWVzKCkpLHQ9dGhpcy5jcmVhdGVHYXRld2F5VW5wdWJsaXNoTWVzc2FnZShlKTtBcnJheS5mcm9tKHRoaXMucmVtb3RlVXNlck1hcC5lbnRyaWVzKCkpLHQubGVuZ3RoPjAmJmF3YWl0IFp5KHRoaXMsX08uUmVxdWVzdFVucHVibGlzaEZvclJlY29ubmVjdFBDLHQpLHRoaXMuZGlzY29ubmVjdEZvclJlY29ubmVjdCgpLHRoaXMuZW1pdChfTy5SZXF1ZXN0UmVjb25uZWN0UEMpfWNhblB1Ymxpc2hMb3dTdHJlYW0oKXtyZXR1cm4gdGhpcy5sb2NhbFRyYWNrTWFwLmhhcyhoTy5Mb2NhbFZpZGVvVHJhY2spfHx0aGlzLnBlbmRpbmdMb2NhbFRyYWNrcy5zb21lKChlPT5lIGluc3RhbmNlb2YgYVUpKX10aHJvd0lmVHJhY2tUeXBlTm90TWF0Y2goZSl7aWYoZS5maWx0ZXIoKGU9PmUgaW5zdGFuY2VvZiBhVSkpLmxlbmd0aD4xKXRocm93IG5ldyBDeShSeS5DQU5fTk9UX1BVQkxJU0hfTVVMVElQTEVfVklERU9fVFJBQ0tTKTtpZihlLmZpbHRlcigoZT0+ZSBpbnN0YW5jZW9mIFRNKSkubGVuZ3RoPjEmJihlLnNvbWUoKGU9PmUgaW5zdGFuY2VvZiBUTSYmZS5fYnlwYXNzV2ViQXVkaW8pKXx8IVpQKCkud2ViQXVkaW9NZWRpYVN0cmVhbURlc3QpKXRocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwiY2Fubm90IHB1Ymxpc2ggbXVsdGlwbGUgdHJhY2tzIHdoaWNoIG9uZSBvZiB0aGVtIGNvbmZpZ3VyZWQgd2l0aCBieXBhc3NXZWJBdWRpbyBvciB5b3VyIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IE1lZGlhU3RyZWFtRGVzdE5vZGVcIik7Zm9yKGNvbnN0IHQgb2YgZSl7aWYodCBpbnN0YW5jZW9mIGFVJiZ0aGlzLnBlbmRpbmdMb2NhbFRyYWNrcy5zb21lKChlPT5lIGluc3RhbmNlb2YgYVUpKSl0aHJvdyBuZXcgQ3koUnkuQ0FOX05PVF9QVUJMSVNIX01VTFRJUExFX1ZJREVPX1RSQUNLUyk7aWYodCBpbnN0YW5jZW9mIFRNJiZ0aGlzLnBlbmRpbmdMb2NhbFRyYWNrcy5zb21lKChlPT5lIGluc3RhbmNlb2YgVE0pKSYmKCFaUCgpLndlYkF1ZGlvTWVkaWFTdHJlYW1EZXN0fHx0Ll9ieXBhc3NXZWJBdWRpb3x8dGhpcy5wZW5kaW5nTG9jYWxUcmFja3Muc29tZSgoZT0+ZSBpbnN0YW5jZW9mIFRNJiZlLl9ieXBhc3NXZWJBdWRpbykpKSl0aHJvdyBuZXcgQ3koUnkuTk9UX1NVUFBPUlRFRCxcImNhbm5vdCBwdWJsaXNoIG11bHRpcGxlIHRyYWNrcyB3aGljaCBvbmUgb2YgdGhlbSBjb25maWd1cmVkIHdpdGggYnlwYXNzV2ViQXVkaW8gb3IgeW91ciBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBNZWRpYVN0cmVhbURlc3ROb2RlXCIpfX1nZXRMb3dWaWRlb1RyYWNrKGUsdCl7dmFyIGk7Y29uc3Qgbj0hWEEoXCJESVNBQkxFX0RVQUxfU1RSRUFNX1VTRV9FTkNPRElOR1wiKSYmWlAoKS5zdXBwb3J0RHVhbFN0cmVhbUVuY29kaW5nLHI9cEIocEIoe30se3dpZHRoOjE2MCxoZWlnaHQ6MTIwLGZyYW1lcmF0ZToxNSxiaXRyYXRlOjUwfSksdCk7bGV0IG87bz1uP2UuX21lZGlhU3RyZWFtVHJhY2suY2xvbmUoKTpLVihlLHIpO2NvbnN0IHM9VEEoOCxcInRyYWNrLWxvdy1cIiksYT1uZXcgYVUobyxwQihwQih7fSxuJiZ7c2NhbGVSZXNvbHV0aW9uRG93bkJ5OmlOKHIsZSl9KSx7fSx7ZnJhbWVSYXRlOnIuZnJhbWVyYXRlLGJpdHJhdGVNYXg6ci5iaXRyYXRlLGJpdHJhdGVNaW46ci5iaXRyYXRlfSksdm9pZCAwLHZvaWQgMCxzKTtyZXR1cm4gYS5vbihSTC5UUkFOU0NFSVZFUl9VUERBVEVELCh0PT57ZS5fdXBkYXRlUnRwVHJhbnNjZWl2ZXIodCxUTC5MT1dfU1RSRUFNKX0pKSxhLl9oaW50cy5wdXNoKG1MLkxPV19TVFJFQU0pLERuKGk9ZS5faGludHMpLmNhbGwoaSxtTC5TQ1JFRU5fVFJBQ0spJiZhLl9oaW50cy5wdXNoKG1MLlNDUkVFTl9MT1dfVFJBQ0spLGUub24oXCJzZWktdG8tc2VuZFwiLChlPT57YS5lbWl0KFwic2VpLXRvLXNlbmRcIixlKX0pKSxlLmFkZExpc3RlbmVyKGZMLk5FRURfQ0xPU0UsKCgpPT57YS5jbG9zZSgpfSkpLGF9YXN5bmMgZ2xvYmFsTG9jaygpe3JldHVybiB0aGlzLm11dGV4LmxvY2soXCJGcm9tIFAyUENoYW5uZWwuZ2xvYmFsTG9ja1wiKX1hc3luYyByZXBvcnRQQ1N0YXRzKGUsdCxpKXtsZXQgbj1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtpZih0aGlzLmNvbm5lY3Rpb24mJnRoaXMuY29ubmVjdGlvbiBpbnN0YW5jZW9mIGRCKXt2YXIgcixvLHMsYTtjb25zdCBjPXRoaXMuc3RvcmUua2V5TWV0cmljcy5kZXNjcmlwdGlvblN0YXJ0fHwwLHtpY2VDb25uZWN0aW9uU3RhdGU6ZCxkdGxzVHJhbnNwb3J0U3RhdGU6bCxwZWVyQ29ubmVjdGlvblN0YXRlOnV9PXRoaXMuY29ubmVjdGlvbix7bG9jYWw6aCxyZW1vdGU6cH09YXdhaXQgdGhpcy5jb25uZWN0aW9uLmdldFNlbGVjdGVkQ2FuZGlkYXRlUGFpcigpO3ZiLnBjU3RhdHModGhpcy5zdG9yZS5zZXNzaW9uSWQse3N0YXJ0VGltZTpjLGV2ZW50RWxhcHNlOmUtY3x8MCxpY2Vjb25uZWN0aW9uc2F0ZTpkLGR0bHNzdGF0ZTpsLGNvbm5lY3Rpb25zdGF0ZTp1LGludFN1Y2M6dD8xOjIsZXJyb3I6bixzZWxlY3RlZExvY2FsQ2FuZGlkYXRlUHJvdG9jb2w6bnVsbCE9PShyPW51bGw9PWg/dm9pZCAwOmgucHJvdG9jb2wpJiZ2b2lkIDAhPT1yP3I6XCJcIixzZWxlY3RlZExvY2FsQ2FuZGlkYXRlVHlwZTpudWxsIT09KG89aC5jYW5kaWRhdGVUeXBlKSYmdm9pZCAwIT09bz9vOlwiXCIsc2VsZWN0ZWRMb2NhbENhbmRpZGF0ZUFkZHJlc3M6XCJcIi5jb25jYXQoaC5hZGRyZXNzLFwiOlwiKS5jb25jYXQoaC5wb3J0KSxzZWxlY3RlZFJlbW90ZUNhbmRpZGF0ZVByb3RvY29sOm51bGwhPT0ocz1wLnByb3RvY29sKSYmdm9pZCAwIT09cz9zOlwiXCIsc2VsZWN0ZWRSZW1vdGVDYW5kaWRhdGVUeXBlOm51bGwhPT0oYT1wLmNhbmRpZGF0ZVR5cGUpJiZ2b2lkIDAhPT1hP2E6XCJcIixzZWxlY3RlZFJlbW90ZUNhbmRpZGF0ZUFkZHJlc3M6XCJcIi5jb25jYXQocC5hZGRyZXNzLFwiOlwiKS5jb25jYXQocC5wb3J0KSxyZXN0YXJ0Q250OmkscHJlYWxsb2NhdGlvbjp0aGlzLmNvbm5lY3Rpb24uaXNQcmVhbGxvY2F0aW9ufSl9fXJlcG9ydFZpZGVvRmlyc3RGcmFtZURlY29kZWQoZSx0LGksbil7dmFyIHI7Y29uc3Qgbz1BcnJheS5mcm9tKGRfKHI9dGhpcy5yZW1vdGVVc2VyTWFwKS5jYWxsKHIpKS5maW5kKCh0PT50Ll92aWRlb1NTUkM9PT1lKSk7aWYobyl7bnx8dGhpcy5zdG9yZS5zdWJzY3JpYmUoby51aWQsXCJ2aWRlb1wiLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCxEYXRlLm5vdygpKTtjb25zdCByPXRoaXMuc3RvcmUua2V5TWV0cmljcyxzPXIuc3Vic2NyaWJlLmZpbmQoKGU9PmUudXNlcklkPT09by51aWQmJlwidmlkZW9cIj09PWUudHlwZSkpO3ZiLmZpcnN0UmVtb3RlVmlkZW9EZWNvZGUodGhpcy5zdG9yZS5zZXNzaW9uSWQsZ2IuRklSU1RfVklERU9fREVDT0RFLFJiLkZJUlNUX1ZJREVPX0RFQ09ERSx7cGVlcjpvLl91aW50aWQsdmlkZW93aWR0aDp0LHZpZGVvaGVpZ2h0Omksc3Vic2NyaWJlRWxhcHNlOnJWLm1lYXN1cmVGcm9tU3Vic2NyaWJlU3RhcnQodGhpcy5zdG9yZS5jbGllbnRJZCxlKSxzdWJzY3JpYmVSZXF1ZXN0aWQ6ZSxwMnBpZDp0aGlzLnN0b3JlLnAycElkLGFwRW5kOnIucmVxdWVzdEFQRW5kfHwwLGFwU3RhcnQ6ci5yZXF1ZXN0QVBTdGFydHx8MCxqb2luR3dFbmQ6ci5qb2luR2F0ZXdheUVuZHx8MCxqb2luR3dTdGFydDpyLmpvaW5HYXRld2F5U3RhcnR8fDAscGNFbmQ6ci5wZWVyQ29ubmVjdGlvbkVuZHx8MCxwY1N0YXJ0OnIucGVlckNvbm5lY3Rpb25TdGFydHx8MCxzdWJzY3JpYmVyRW5kOihudWxsPT1zP3ZvaWQgMDpzLnN1YnNjcmliZUVuZCl8fDAsc3Vic2NyaWJlclN0YXJ0OihudWxsPT1zP3ZvaWQgMDpzLnN1YnNjcmliZVN0YXJ0KXx8MCx2aWRlb0FkZE5vdGlmeToobnVsbD09cz92b2lkIDA6cy5zdHJlYW1BZGRlZCl8fDAsc3RhdGU6bj8xOjAsZmlyc3RGcmFtZToobnVsbD09cz92b2lkIDA6cy5maXJzdEZyYW1lKXx8MH0pfX1hc3luYyByZW1vdGVNZWRpYVNzcmNDaGFuZ2VkKGUsdCxpKXtpZighdGhpcy5jb25uZWN0aW9uKXJldHVybiExO2NvbnN0IG49dGhpcy5yZW1vdGVVc2VyTWFwLmdldChlKTtpZighbilyZXR1cm4hMTtjb25zdCByPW4uZ2V0KHQpO2lmKCFyKXJldHVybiExO2NvbnN0IG89YXdhaXQgdGhpcy5jb25uZWN0aW9uLmdldFJlbW90ZVNTUkMocik7cmV0dXJuIHZvaWQgMCE9PW8mJm8hPT1pfXVuYmluZFJ0cFRyYW5zY2VpdmVyKCl7MCE9PXRoaXMubG9jYWxUcmFja01hcC5zaXplJiZBcnJheS5mcm9tKHRoaXMubG9jYWxUcmFja01hcC5lbnRyaWVzKCkpLmZvckVhY2goKGU9PntsZXRbdCx7dHJhY2s6aX1dPWU7dD09PWhPLkxvY2FsVmlkZW9Mb3dUcmFjaz9pLl91cGRhdGVSdHBUcmFuc2NlaXZlcih2b2lkIDAsVEwuTE9XX1NUUkVBTSk6aS5fdXBkYXRlUnRwVHJhbnNjZWl2ZXIodm9pZCAwKX0pKX1yZXBvcnRQQ0Rpc2Nvbm5lY3RlZE9yRmFpbGVkKGUpe3RoaXMuY29ubmVjdGlvbiYmdGhpcy5jb25uZWN0aW9uIGluc3RhbmNlb2YgZEImJihcImRpc2Nvbm5lY3RlZFwiIT09dGhpcy5jb25uZWN0aW9uLmljZUNvbm5lY3Rpb25TdGF0ZSYmXCJjaGVja2luZ1wiIT09dGhpcy5jb25uZWN0aW9uLmljZUNvbm5lY3Rpb25TdGF0ZSYmXCJmYWlsZWRcIiE9PXRoaXMuY29ubmVjdGlvbi5pY2VDb25uZWN0aW9uU3RhdGV8fCh0aGlzLl9pc0ZpcnN0Q29ubmVjdGVkPyh0aGlzLnJlcG9ydFBDU3RhdHMoRGF0ZS5ub3coKSwhMSx0aGlzLl9wY1N0YXRzVXBsb2FkVHlwZSksdGhpcy5faXNGaXJzdENvbm5lY3RlZD0hMSk6dGhpcy5fcGNTdGF0c1VwbG9hZFR5cGU9PT11Ty5UQ1BfUkVTVEFSVCYmZT09PWxPLlJFTEFZP3RoaXMucmVwb3J0UENTdGF0cyhEYXRlLm5vdygpLCExLHRoaXMuX3BjU3RhdHNVcGxvYWRUeXBlKTp0aGlzLnJlcG9ydFBDU3RhdHMoRGF0ZS5ub3coKSwhMSx1Ty5ESVNDT05ORUNURURfT1JfRkFJTEVEKSkpfX0sQ3codUIucHJvdG90eXBlLFwic3RhcnRQMlBDb25uZWN0aW9uXCIsW21CXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHVCLnByb3RvdHlwZSxcInN0YXJ0UDJQQ29ubmVjdGlvblwiKSx1Qi5wcm90b3R5cGUpLEN3KHVCLnByb3RvdHlwZSxcImNvbm5lY3RcIixbbUJdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodUIucHJvdG90eXBlLFwiY29ubmVjdFwiKSx1Qi5wcm90b3R5cGUpLEN3KHVCLnByb3RvdHlwZSxcInVwZGF0ZVJlbW90ZVJUUENhcGFiaWxpdGllc1wiLFttQl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih1Qi5wcm90b3R5cGUsXCJ1cGRhdGVSZW1vdGVSVFBDYXBhYmlsaXRpZXNcIiksdUIucHJvdG90eXBlKSxDdyh1Qi5wcm90b3R5cGUsXCJwdWJsaXNoRGF0YUNoYW5uZWxcIixbbUJdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodUIucHJvdG90eXBlLFwicHVibGlzaERhdGFDaGFubmVsXCIpLHVCLnByb3RvdHlwZSksQ3codUIucHJvdG90eXBlLFwidW5wdWJsaXNoXCIsW21CXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHVCLnByb3RvdHlwZSxcInVucHVibGlzaFwiKSx1Qi5wcm90b3R5cGUpLEN3KHVCLnByb3RvdHlwZSxcInVucHVibGlzaERhdGFDaGFubmVsXCIsW21CXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHVCLnByb3RvdHlwZSxcInVucHVibGlzaERhdGFDaGFubmVsXCIpLHVCLnByb3RvdHlwZSksQ3codUIucHJvdG90eXBlLFwidW5wdWJsaXNoTG93U3RyZWFtXCIsW21CXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHVCLnByb3RvdHlwZSxcInVucHVibGlzaExvd1N0cmVhbVwiKSx1Qi5wcm90b3R5cGUpLEN3KHVCLnByb3RvdHlwZSxcInN1YnNjcmliZURhdGFDaGFubmVsXCIsW21CXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHVCLnByb3RvdHlwZSxcInN1YnNjcmliZURhdGFDaGFubmVsXCIpLHVCLnByb3RvdHlwZSksQ3codUIucHJvdG90eXBlLFwic3Vic2NyaWJlXCIsW21CXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHVCLnByb3RvdHlwZSxcInN1YnNjcmliZVwiKSx1Qi5wcm90b3R5cGUpLEN3KHVCLnByb3RvdHlwZSxcIm1hc3NTdWJzY3JpYmVcIixbbUJdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodUIucHJvdG90eXBlLFwibWFzc1N1YnNjcmliZVwiKSx1Qi5wcm90b3R5cGUpLEN3KHVCLnByb3RvdHlwZSxcInVuc3Vic2NyaWJlXCIsW21CXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHVCLnByb3RvdHlwZSxcInVuc3Vic2NyaWJlXCIpLHVCLnByb3RvdHlwZSksQ3codUIucHJvdG90eXBlLFwidW5zdWJzY3JpYmVEYXRhQ2hhbm5lbFwiLFttQl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih1Qi5wcm90b3R5cGUsXCJ1bnN1YnNjcmliZURhdGFDaGFubmVsXCIpLHVCLnByb3RvdHlwZSksQ3codUIucHJvdG90eXBlLFwibWFzc1Vuc3Vic2NyaWJlXCIsW21CXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHVCLnByb3RvdHlwZSxcIm1hc3NVbnN1YnNjcmliZVwiKSx1Qi5wcm90b3R5cGUpLEN3KHVCLnByb3RvdHlwZSxcIm11dGVSZW1vdGVcIixbbUJdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodUIucHJvdG90eXBlLFwibXV0ZVJlbW90ZVwiKSx1Qi5wcm90b3R5cGUpLEN3KHVCLnByb3RvdHlwZSxcInVubXV0ZVJlbW90ZVwiLFttQl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih1Qi5wcm90b3R5cGUsXCJ1bm11dGVSZW1vdGVcIiksdUIucHJvdG90eXBlKSxDdyh1Qi5wcm90b3R5cGUsXCJoYXNSZW1vdGVNZWRpYVdpdGhMb2NrXCIsW21CXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHVCLnByb3RvdHlwZSxcImhhc1JlbW90ZU1lZGlhV2l0aExvY2tcIiksdUIucHJvdG90eXBlKSxDdyh1Qi5wcm90b3R5cGUsXCJkaXNjb25uZWN0Rm9yUmVjb25uZWN0XCIsW21CXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHVCLnByb3RvdHlwZSxcImRpc2Nvbm5lY3RGb3JSZWNvbm5lY3RcIiksdUIucHJvdG90eXBlKSxDdyh1Qi5wcm90b3R5cGUsXCJ1cGRhdGVCaXRyYXRlTGltaXRcIixbbUJdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodUIucHJvdG90eXBlLFwidXBkYXRlQml0cmF0ZUxpbWl0XCIpLHVCLnByb3RvdHlwZSksQ3codUIucHJvdG90eXBlLFwicmVtb3RlTWVkaWFTc3JjQ2hhbmdlZFwiLFttQl0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih1Qi5wcm90b3R5cGUsXCJyZW1vdGVNZWRpYVNzcmNDaGFuZ2VkXCIpLHVCLnByb3RvdHlwZSksdUIpO2Z1bmN0aW9uIG1CKGUsdCxpKXtjb25zdCBuPWVbdF07aWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygbil0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgdXNlIG11dGV4IG9uIG9iamVjdCBwcm9wZXJ0eS5cIik7cmV0dXJuIGkudmFsdWU9YXN5bmMgZnVuY3Rpb24oKXtjb25zdCBlPXRoaXMubXV0ZXgsaT1hd2FpdCBlLmxvY2soXCJGcm9tIFAyUENoYW5uZWwuXCIuY29uY2F0KHQpKTt0cnl7Zm9yKHZhciByPWFyZ3VtZW50cy5sZW5ndGgsbz1uZXcgQXJyYXkocikscz0wO3M8cjtzKyspb1tzXT1hcmd1bWVudHNbc107cmV0dXJuIGF3YWl0IG4uYXBwbHkodGhpcyxvKX1maW5hbGx5e2koKX19LGl9Y29uc3QgVEI9e307ZnVuY3Rpb24gU0IoZSl7KCEoYXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0pfHxhcmd1bWVudHNbMV0pJiZmYi5kZWJ1ZyhcImluc3RhbGwgc2VydmljZSBcIi5jb25jYXQoZS5uYW1lKSksVEJbZS5uYW1lXT1lfWZ1bmN0aW9uIGdCKGUpe2NvbnN0IHQ9VEJbZV07aWYoIXQpdGhyb3cgbmV3IEN5KFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiXCIuY29uY2F0KGUsXCIgbm90IGZvdW5kLCBwbGVhc2UgdXNlIEFnb3JhUlRDLnVzZShcIikuY29uY2F0KGUsXCJTZXJ2aWNlKSB0byBsb2FkIGl0IGZpcnN0XCIpKTtyZXR1cm4gdH1mdW5jdGlvbiBSQihlLHQpe3JldHVybiBnQihcIkRhdGFTdHJlYW1cIikuY3JlYXRlKGUsdCl9ZnVuY3Rpb24gQ0IoZSx0KXt2YXIgaT1PYmplY3Qua2V5cyhlKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgbj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO3QmJihuPW4uZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHQpLmVudW1lcmFibGV9KSkpLGkucHVzaC5hcHBseShpLG4pfXJldHVybiBpfWZ1bmN0aW9uIElCKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBpPW51bGwhPWFyZ3VtZW50c1t0XT9hcmd1bWVudHNbdF06e307dCUyP0NCKE9iamVjdChpKSwhMCkuZm9yRWFjaCgoZnVuY3Rpb24odCl7RmcoZSx0LGlbdF0pfSkpOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoaSkpOkNCKE9iamVjdChpKSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGksdCkpfSkpfXJldHVybiBlfWNvbnN0IHZCPURhdGUubm93KCkseUI9MjAsQUI9bmV3IE1hcCxiQj1uZXcgTWFwO2FzeW5jIGZ1bmN0aW9uIHdCKGUpe2NvbnN0IHQ9QUIuZ2V0KGUpLGk9QXJyYXkuaXNBcnJheSh0KSYmdFt0Lmxlbmd0aC0xXSxuPWJCLmdldChlKTtpZighaSlyZXR1cm4gdm9pZChuLmlzU3luY2luZz0hMSk7Y29uc3Qgcj17dWlkOmkudWlkLHBheWxvYWQ6aS5wYXlsb2FkfTswPT09bi5maXJzdFJlY3ZUcyYmKG4uZmlyc3RSZWN2VHM9aS5yZWN2VHMsbi5maXJzdFNlbmRUcz1pLnNlbmRUcyk7Y29uc3Qgbz1pLnNlbmRUcy1uLmZpcnN0U2VuZFRzLHM9by0oRGF0ZS5ub3coKS1uLmZpcnN0UmVjdlRzKTtzPjAmJihuLmZpcnN0UmVjdlRzPURhdGUubm93KCktbyk7bGV0IGE9aS5tZWRpYURlbGF5K3M7YTw9MD8odC5wb3AoKSxPQihpLmNvbnRleHQsciksYT0wKTphPU1hdGgubWluKGEseUIpLHNldFRpbWVvdXQoKCgpPT50Lmxlbmd0aCYmd0IoZSkpLGEpfWZ1bmN0aW9uIE9CKGUsdCl7ZS5zYWZlRW1pdCh6eS5TVFJFQU1fTUVTU0FHRSx0LnVpZCx0LnBheWxvYWQpLGUub25TdHJlYW1NZXNzYWdlJiZlLm9uU3RyZWFtTWVzc2FnZSh0KX1mdW5jdGlvbiBOQihlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06MCxpPWFyZ3VtZW50cy5sZW5ndGg+Mj9hcmd1bWVudHNbMl06dm9pZCAwO2lmKCFlLnN5bmNXaXRoQXVkaW8pcmV0dXJuIE9CKGkse3VpZDplLnVpZCxwYXlsb2FkOmUucGF5bG9hZH0pO2NvbnN0IG49XCJcIi5jb25jYXQoaS5pZCxcIi1cIikuY29uY2F0KGUudWlkKSxyPUFCLmdldChuKXx8W10sbz1yLmZpbmRJbmRleCgodD0+ZS5zZW5kVHM+PXQuc2VuZFRzKSkscz1JQihJQih7fSxlKSx7fSx7Y29udGV4dDppLG1lZGlhRGVsYXk6dCxyZWN2VHM6RGF0ZS5ub3coKX0pOy0xPT09bz9yLnB1c2gocyk6ci5zcGxpY2UobywwLHMpLEFCLnNldChuLHIpO2xldCBhPSExO3ZhciBjO2JCLmhhcyhuKT9hPSEobnVsbD09PShjPWJCLmdldChuKSl8fHZvaWQgMD09PWN8fCFjLmlzU3luY2luZyk6YkIuc2V0KG4se2lzU3luY2luZzphLGZpcnN0UmVjdlRzOjAsZmlyc3RTZW5kVHM6MH0pO2F8fHdCKG4pfWNvbnN0IERCPUh2KCkubmFtZTtmdW5jdGlvbiBQQihlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gTEIoZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/UEIoT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6UEIoT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9Y29uc3Qga0I9XCJ3ZWJzZGtfbmdfY2FjaGVfcGFyYW1ldGVyXCIsTUI9WEEoXCJNQVhfUFJFTE9BRF9BU1lOQ19MRU5HVEhcIiksVUI9MWU0LHhCPW5ldyBNYXAsVkI9W107bGV0IEZCPW51bGwsQkI9MCxqQj0wO2NvbnN0IEdCPW5ldyBNYXAsV0I9ZnVuY3Rpb24oZSx0KXtjb25zdCBpPVtdO2xldCBuPTA7Y29uc3Qgcj1hc3luYygpPT57Y29uc3QgZT1pLnNoaWZ0KCk7ZSYmYXdhaXQgZSgpLGkubGVuZ3RoPjAmJm48dD9yKCk6bi0tfTtyZXR1cm4gYXN5bmMgZnVuY3Rpb24oKXtmb3IodmFyIG89YXJndW1lbnRzLmxlbmd0aCxzPW5ldyBBcnJheShvKSxhPTA7YTxvO2ErKylzW2FdPWFyZ3VtZW50c1thXTtyZXR1cm4gbmV3IEdoKChhc3luYyhvLGEpPT57aS5wdXNoKChhc3luYygpPT57dHJ5e2NvbnN0IHQ9YXdhaXQgZSguLi5zKTtvKHQpfWNhdGNoKGUpe2EoZSl9fSkpLG48dCYmKG4rKyxyKCkpfSkpfX0oS0IsTUIpLEhCPUx2LkNhbmNlbFRva2VuLnNvdXJjZSgpO2FzeW5jIGZ1bmN0aW9uIEtCKGUsdCxpLG4scixvKXt0cnl7aWYoIVhBKFwiRU5BQkxFX1BSRUxPQURcIikpcmV0dXJuO2lmKCFaUCgpLnN1cHBvcnRXZWJDcnlwdG8pcmV0dXJuIHZvaWQgZEEoKCgpPT57ZmIud2FybihcIllvdXIgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHByZWxvYWRpbmcsIHRoaXMgZmVhdHVyZSAgYmUgcnVuIGluIGEgc2VjdXJlIGVudmlyb25tZW50XCIpfSksXCJwcmVsb2FkX3dlYmNyeXB0b19ub3Rfc3VwcG9ydGVkXCIpO2lmKCFpJiZudWxsIT09aSl0aHJvdyBuZXcgQ3koUnkuSU5WQUxJRF9QQVJBTVMsXCJJbnZhbGlkIHRva2VuOiBcIi5jb25jYXQoaSxcIi4gSWYgeW91IGRvbiBub3QgdXNlIHRva2VuLCBzZXQgaXQgdG8gbnVsbFwiKSk7aSYmYnkoaSxcInRva2VuXCIsMSwyMDQ3KSxieShlLFwiYXBwaWRcIiwxLDIwNDcpLHh3KHQpLG4mJlZ3KG4pO2NvbnN0IHM9U0EoKTtmYi5kZWJ1ZyhcInByZWxvYWQgY2hhbm5lbCBcIi5jb25jYXQodCxcIiwgdWlkIGlzIFwiKS5jb25jYXQobikpO2NvbnN0IGE9e2FwcElkOmUsY25hbWU6dCx0b2tlbjppfHxlLHVpZDpcInN0cmluZ1wiIT10eXBlb2Ygbj9uOm51bGwsc2lkOnMscHJveHlTZXJ2ZXI6cn07bGV0IGMsZDtcInN0cmluZ1wiPT10eXBlb2Ygbj8oYS5zdHJpbmdVaWQ9bixbZCxjXT1hd2FpdCBHaC5hbGwoW3F4KG4se3NpZDpzLGFwcElkOmV9LEhCLnRva2VuKSxKeChMQihMQih7fSxhKSx7fSx7dG9rZW46aXx8ZSx1aWQ6MH0pLEhCLnRva2VuKV0pLGEudWlkPWQudWlkLGMuZ2F0ZXdheUluZm8udWlkPWEudWlkLGMuZ2F0ZXdheUluZm8ucmVzLnVpZD1hLnVpZCk6KG8mJihhLnN0cmluZ1VpZD1vKSxjPWF3YWl0IEp4KGEsSEIudG9rZW4pKTtjb25zdCBsPXtzaWQ6cyxhcHBJZDplLGNuYW1lOnQsdG9rZW46aXx8ZSx1aWQ6YS5zdHJpbmdVaWR8fG4saW50VWlkOmEudWlkfHxjLmdhdGV3YXlJbmZvLnVpZCxzdHJpbmdVaWQ6YS5zdHJpbmdVaWQsdHM6RGF0ZS5ub3coKSxzdWE6ZCxhcDpjfTthd2FpdCBhc3luYyBmdW5jdGlvbihlKXtsZXQgdDt0cnl7ZS51aWQmJnFCKHthcHBJZDplLmFwcElkLGNuYW1lOmUuY25hbWUsdG9rZW46ZS50b2tlbix1aWQ6ZS51aWQsc3RyaW5nVWlkOmUuc3RyaW5nVWlkfSk7Y29uc3QgaT0kQihlKSxuPWF3YWl0IGFzeW5jIGZ1bmN0aW9uKGUsdCl7dHJ5e2NvbnN0IGk9YXdhaXQgd2luZG93LmNyeXB0by5zdWJ0bGUuaW1wb3J0S2V5KFwicmF3XCIsaEEodCksXCJBRVMtR0NNXCIsITEsW1wiZW5jcnlwdFwiXSksbj1hd2FpdCB3aW5kb3cuY3J5cHRvLnN1YnRsZS5lbmNyeXB0KHtuYW1lOlwiQUVTLUdDTVwiLGl2Om5ldyBVaW50OEFycmF5KDEpfSxpLGxBKHdpbmRvdy5idG9hKEpTT04uc3RyaW5naWZ5KGUpKSkpO3JldHVybiB1QShuZXcgVWludDhBcnJheShuKSl9Y2F0Y2goZSl7cmV0dXJufX0oZSxlLnRva2VufHxlLmFwcElkKTtpZighbilyZXR1cm47dD1RQihrQik7Y29uc3Qgcj10P0pTT04ucGFyc2UodCk6W107ci5wdXNoKHtbaV06bn0pLHIubGVuZ3RoPlhBKFwiQVBfQ0FDSEVfTlVNXCIpJiZyLnNoaWZ0KCksWkIoa0IsSlNPTi5zdHJpbmdpZnkocikpfWNhdGNoKGUpe2ZiLndhcm4oXCJFcnJvciBjYWNoaW5nIHNlcnZlciBwYXJhbWV0ZXJzOlwiLGUubWVzc2FnZSksWkIoa0IsXCJcIil9fShsKSxCQisrfWNhdGNoKGUpe3Rocm93IGpCKyssZnVuY3Rpb24oZSl7RkJ8fChGQj13aW5kb3cuc2V0VGltZW91dCgoKCk9PntsZXQgdD1cIlwiO0dCLmZvckVhY2goKChlLGkpPT57dCs9XCJcIi5jb25jYXQoaSxcIjogXCIpLmNvbmNhdChlLFwiIDtcIil9KSksdmIucmVwb3J0QXBpSW52b2tlKG51bGwse25hbWU6QnkuUFJFTE9BRCxvcHRpb25zOntzdWNjZXNzOkJCLGZhaWxlZDpqQixlcnI6dH19KS5vbkVycm9yKGUpLEJCPTAsakI9MCxHQi5jbGVhcigpLEZCPW51bGx9KSxVQikpO2NvbnN0IHQ9R0IuZ2V0KGUuY29kZSl8fDA7R0Iuc2V0KGUuY29kZSx0KzEpfShlKSxlfX1hc3luYyBmdW5jdGlvbiBZQihlKXt0cnl7aWYoWEEoXCJBUF9SRVFVRVNUX0RFVEFJTFwiKSlyZXR1cm47Y29uc3QgdD1xQihlKTtpZighdHx8XCJkaXNhYmxlZFwiIT09ZS5jbG91ZFByb3h5U2VydmVyKXJldHVybjtjb25zdCBpPWF3YWl0IGFzeW5jIGZ1bmN0aW9uKGUsdCl7dHJ5e2NvbnN0IGk9YXdhaXQgd2luZG93LmNyeXB0by5zdWJ0bGUuaW1wb3J0S2V5KFwicmF3XCIsaEEodCksXCJBRVMtR0NNXCIsITEsW1wiZGVjcnlwdFwiXSksbj1hd2FpdCB3aW5kb3cuY3J5cHRvLnN1YnRsZS5kZWNyeXB0KHtuYW1lOlwiQUVTLUdDTVwiLGl2Om5ldyBVaW50OEFycmF5KDEpfSxpLGxBKGUpKTtyZXR1cm4gSlNPTi5wYXJzZSh3aW5kb3cuYXRvYih1QShuZXcgVWludDhBcnJheShuKSkpKX1jYXRjaChlKXtyZXR1cm59fSh0LGUudG9rZW58fGUuYXBwSWQpO2lmKCFpKXJldHVybjtpZighZnVuY3Rpb24oZSx0KXtjb25zdCBpPWUuY25hbWU9PT10LmNuYW1lJiZlLmFwcElkPT09dC5hcHBJZCYmZS50b2tlbj09PXQudG9rZW47aWYoIWkpcmV0dXJuITE7cmV0dXJuIHQuc3RyaW5nVWlkP2Uuc3RyaW5nVWlkPT09dC5zdHJpbmdVaWQ6XCJudW1iZXJcIj09dHlwZW9mIHQudWlkP2UudWlkPT09dC51aWQ6ZS51aWQ9PXQudWlkfShpLGUpKXJldHVybjtpZihpJiZEYXRlLm5vdygpLWkudHM8WEEoXCJBUF9DQUNIRV9MSUZFVElNRVwiKSlyZXR1cm4gaX1jYXRjaChlKXtmYi53YXJuKFwiRXJyb3IgZ2V0IHByZWxvYWRJbmZvXCIsZS5tZXNzYWdlKX19ZnVuY3Rpb24gcUIoZSl7bGV0IHQ7dHJ5e2lmKHQ9UUIoa0IpLCF0KXJldHVybjtjb25zdCBpPUpTT04ucGFyc2UodCksbj0kQihlKSxyPWZ1bmN0aW9uKGUsdCl7Zm9yKGxldCBpPWUubGVuZ3RoLTE7aT49MDtpLS0paWYodChlW2ldKSlyZXR1cm4gaTtyZXR1cm4tMX0oaSwoZT0+biBpbiBlKSk7aWYoLTE9PT1yKXJldHVybjtjb25zdCBvPWkuc3BsaWNlKHIsMSlbMF07cmV0dXJuIFpCKGtCLEpTT04uc3RyaW5naWZ5KGkpKSxvW25dfWNhdGNoKGUpe2ZiLndhcm4oXCJFcnJvciBkZWxldGUgcHJlbG9hZCBpbmZvOiBcIi5jb25jYXQodCksZS5tZXNzYWdlKSxaQihrQixcIlwiKX19ZnVuY3Rpb24gekIoZSl7aWYoZSl7bGV0IHQ9eEIuZ2V0KGUpO3QmJih3aW5kb3cuY2xlYXJUaW1lb3V0KHQpLHQ9bnVsbCx4Qi5kZWxldGUoZSkpLERuKFZCKS5jYWxsKFZCLGUpfHxcImRpc2FibGVkXCIhPT1lLmNsb3VkUHJveHlTZXJ2ZXJ8fFZCLnB1c2goZSl9aWYoeEIuc2l6ZTxYQShcIkFQX0NBQ0hFX05VTVwiKSYmVkIubGVuZ3RoPjApe2NvbnN0IGU9VkIuc2hpZnQoKTt4Qi5zZXQoZSx3aW5kb3cuc2V0VGltZW91dCgoYXN5bmMoKT0+e2NvbnN0e2FwcElkOnQsY25hbWU6aSx0b2tlbjpuLHN0cmluZ1VpZDpyLHVpZDpvLHByb3h5U2VydmVyOnN9PWU7dHJ5e2F3YWl0IFdCKHQsaSxuLG8scyxyKSx4Qi5oYXMoZSkmJnpCKGUpfWNhdGNoKHQpe2ZiLndhcm4oXCJ1cGRhdGUgcHJlbG9hZCBmYWlsZWRcIix0Lm1lc3NhZ2UpLEpCKGUpfX0pLFhBKFwiQVBfVVBEQVRFX0lOVEVSVkFMXCIpKSl9fWZ1bmN0aW9uIEpCKGUpe2NvbnN0IHQ9VkIuaW5kZXhPZihlKTstMSE9PXQmJlZCLnNwbGljZSh0LDEpO2xldCBpPXhCLmdldChlKTtpJiYod2luZG93LmNsZWFyVGltZW91dChpKSxpPW51bGwseEIuZGVsZXRlKGUpLHpCKCkpfWZ1bmN0aW9uIFhCKGUsdCl7Y29uc3QgaT1lLnN1YSxuPWUuYXA7dCYmaSYmdmIucmVxVXNlckFjY291bnQoZS5zaWQse2x0czppLnJlcXVlc3RUaW1lLGVsYXBzZTppLmVsYXBzZSxzdWNjZXNzOiEwLHNlcnZlckFkZHI6aS51cmwsc3RyaW5nVWlkOnQsdWlkOmUuaW50VWlkLGVycm9yQ29kZTpudWxsLGV4dGVuZDppLnJlcX0pLHZiLnJlcG9ydFJlc291cmNlVGltaW5nKGUuYXAudXJsLGUuc2lkKSx2Yi5qb2luV2ViUHJveHlBUChlLnNpZCx7bHRzOm4ucmVxdWVzdFRpbWUsZWxhcHNlOm4uZWxhcHNlLHN1Y2VzczoxLGFwU2VydmVyQWRkcjpuLnVybCx0dXJuU2VydmVyQWRkckxpc3Q6bi5wcm94eUluZm8uYWRkcmVzc2VzLm1hcCgoZT0+ZS5pcCkpLmpvaW4oXCIsXCIpLGV2ZW50VHlwZTpcImRpc2FibGVkXCIsdW5pbGJzU2VydmVySWRzOltZTy5DSE9PU0VfU0VSVkVSLFlPLkNMT1VEX1BST1hZX0ZBTExCQUNLXS50b1N0cmluZygpfSksdmIuam9pbkNob29zZVNlcnZlcihlLnNpZCx7bHRzOm4ucmVxdWVzdFRpbWUsZWxhcHNlOm4uZWxhcHNlLHN1Y2M6ITAsY3NBZGRyOm4udXJsLG9waWQ6bi5vcGlkLHNlcnZlckxpc3Q6bi5nYXRld2F5SW5mby5nYXRld2F5QWRkcnMubWFwKChlPT5lLmFkZHJlc3MpKSxlYzpudWxsLGNpZDpuLmdhdGV3YXlJbmZvLmNpZC50b1N0cmluZygpLHVpZDpuLmdhdGV3YXlJbmZvLnVpZC50b1N0cmluZygpLGNzSXA6bi5nYXRld2F5SW5mby5jc0lwLHVuaWxic1NlcnZlcklkczpbWU8uQ0hPT1NFX1NFUlZFUl0udG9TdHJpbmcoKSxpc0h0dHAzOm4uaXNIdHRwM30pfWZ1bmN0aW9uIFFCKGUpe3JldHVybiB3aW5kb3cuYXRvYih3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oZSl8fFwiXCIpfWZ1bmN0aW9uIFpCKGUsdCl7d2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKGUsd2luZG93LmJ0b2EodCkpfWZ1bmN0aW9uICRCKGUpe2xldCB0PVwiXCIuY29uY2F0KGUuYXBwSWQsXCJfXCIpLmNvbmNhdChlLmNuYW1lKTtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZS51aWQmJih0Kz1cIl9zX1wiLmNvbmNhdChlLnVpZCkpLFwibnVtYmVyXCI9PXR5cGVvZiBlLnVpZCYmKHQrPVwiX1wiLmNvbmNhdChlLnVpZCkpLGUudG9rZW4mJih0Kz1cIl9cIi5jb25jYXQoZS50b2tlbikpLGJBKHQpfWZ1bmN0aW9uIGVqKGUpe2xldCB0PWZ1bmN0aW9uKCl7Y29uc3QgZT1yai5wb3AoKTtyZXR1cm4gZT8oZS5vZmZzZXQ9ZS5saW1pdD0wLGUpOntieXRlczpuZXcgVWludDhBcnJheSg2NCksb2Zmc2V0OjAsbGltaXQ6MH19KCk7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7bGV0IGk9ZS5hcHBJZDt2b2lkIDAhPT1pJiYoRWoodCwxMCksdWoodCxpKSk7bGV0IG49ZS5jaWQ7dm9pZCAwIT09biYmKEVqKHQsMTYpLEVqKHQsbikpO2xldCByPWUuY25hbWU7dm9pZCAwIT09ciYmKEVqKHQsMjYpLHVqKHQscikpO2xldCBvPWUuZGV2aWNlSWQ7dm9pZCAwIT09byYmKEVqKHQsMzQpLHVqKHQsbykpO2xldCBzPWUuZWxhcHNlO3ZvaWQgMCE9PXMmJihFaih0LDQwKSxtaih0LHMpKTtsZXQgYT1lLmZpbGVTaXplO3ZvaWQgMCE9PWEmJihFaih0LDQ4KSxtaih0LG5qKGEpKSk7bGV0IGM9ZS5oZWlnaHQ7dm9pZCAwIT09YyYmKEVqKHQsNTYpLG1qKHQsbmooYykpKTtsZXQgZD1lLmpwZzt2b2lkIDAhPT1kJiYoRWoodCw2NiksRWoodCxkLmxlbmd0aCksZGoodCxkKSk7bGV0IGw9ZS5uZXR3b3JrVHlwZTt2b2lkIDAhPT1sJiYoRWoodCw3MiksbWoodCxuaihsKSkpO2xldCB1PWUub3NUeXBlO3ZvaWQgMCE9PXUmJihFaih0LDgwKSxtaih0LG5qKHUpKSk7bGV0IGg9ZS5yZXF1ZXN0SWQ7dm9pZCAwIT09aCYmKEVqKHQsOTApLHVqKHQsaCkpO2xldCBwPWUuc2RrVmVyc2lvbjt2b2lkIDAhPT1wJiYoRWoodCw5OCksdWoodCxwKSk7bGV0IF89ZS5zZXF1ZW5jZTt2b2lkIDAhPT1fJiYoRWoodCwxMDQpLG1qKHQsbmooXykpKTtsZXQgRT1lLnNpZDt2b2lkIDAhPT1FJiYoRWoodCwxMTQpLHVqKHQsRSkpO2xldCBmPWUudGltZXN0YW1wO3ZvaWQgMCE9PWYmJihFaih0LDEyMCksbWoodCxmKSk7bGV0IG09ZS51aWQ7dm9pZCAwIT09bSYmKEVqKHQsMTI4KSxFaih0LG0pKTtsZXQgVD1lLnZpZDt2b2lkIDAhPT1UJiYoRWoodCwxMzYpLEVqKHQsVCkpO2xldCBTPWUud2lkdGg7dm9pZCAwIT09UyYmKEVqKHQsMTQ0KSxtaih0LG5qKFMpKSk7bGV0IGc9ZS5zZXJ2aWNlO3ZvaWQgMCE9PWcmJihFaih0LDE1MiksRWoodCxnKSk7bGV0IFI9ZS5jYWxsYmFja0RhdGE7dm9pZCAwIT09UiYmKEVqKHQsMTYyKSxFaih0LFIubGVuZ3RoKSxkaih0LFIpKTtsZXQgQz1lLnRpY2tldDt2b2lkIDAhPT1DJiYoRWoodCwxNzApLHVqKHQsQykpO2xldCBJPWUudmVuZG9yQ29uZmlnczt2b2lkIDAhPT1JJiYoRWoodCwxNzgpLHVqKHQsSSkpfShlLHQpLGZ1bmN0aW9uKGUpe2xldCB0PWUuYnl0ZXMsaT1lLmxpbWl0O3JldHVybiB0Lmxlbmd0aD09PWk/dDp0LnN1YmFycmF5KDAsaSl9KHQpfWZ1bmN0aW9uIHRqKGUpe3JldHVybiBmdW5jdGlvbihlKXtsZXQgdD17fTtlOmZvcig7IXNqKGUpOyl7bGV0IGk9X2ooZSk7c3dpdGNoKGk+Pj4zKXtjYXNlIDA6YnJlYWsgZTtjYXNlIDE6dC5jb2RlPV9qKGUpO2JyZWFrO2Nhc2UgMjp0Lm1zZz1saihlLF9qKGUpKTticmVhaztjYXNlIDM6dC5yZXF1ZXN0SWQ9bGooZSxfaihlKSk7YnJlYWs7Y2FzZSA0OnQudGltZXN0YW1wPWZqKGUsITEpO2JyZWFrO2RlZmF1bHQ6aWooZSw3JmkpfX1yZXR1cm4gdH0oe2J5dGVzOnQ9ZSxvZmZzZXQ6MCxsaW1pdDp0Lmxlbmd0aH0pO3ZhciB0fWZ1bmN0aW9uIGlqKGUsdCl7c3dpdGNoKHQpe2Nhc2UgMDpmb3IoOzEyOCZoaihlKTspO2JyZWFrO2Nhc2UgMjpvaihlLF9qKGUpKTticmVhaztjYXNlIDU6b2ooZSw0KTticmVhaztjYXNlIDE6b2ooZSw4KTticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIlVuaW1wbGVtZW50ZWQgdHlwZTogXCIrdCl9fWZ1bmN0aW9uIG5qKGUpe3JldHVybntsb3c6ZXw9MCxoaWdoOmU+PjMxLHVuc2lnbmVkOmU+PTB9fWxldCByaj1bXTtmdW5jdGlvbiBvaihlLHQpe2lmKGUub2Zmc2V0K3Q+ZS5saW1pdCl0aHJvdyBuZXcgRXJyb3IoXCJTa2lwIHBhc3QgbGltaXRcIik7ZS5vZmZzZXQrPXR9ZnVuY3Rpb24gc2ooZSl7cmV0dXJuIGUub2Zmc2V0Pj1lLmxpbWl0fWZ1bmN0aW9uIGFqKGUsdCl7bGV0IGk9ZS5ieXRlcyxuPWUub2Zmc2V0LHI9ZS5saW1pdCxvPW4rdDtpZihvPmkubGVuZ3RoKXtsZXQgdD1uZXcgVWludDhBcnJheSgyKm8pO3Quc2V0KGkpLGUuYnl0ZXM9dH1yZXR1cm4gZS5vZmZzZXQ9byxvPnImJihlLmxpbWl0PW8pLG59ZnVuY3Rpb24gY2ooZSx0KXtsZXQgaT1lLm9mZnNldDtpZihpK3Q+ZS5saW1pdCl0aHJvdyBuZXcgRXJyb3IoXCJSZWFkIHBhc3QgbGltaXRcIik7cmV0dXJuIGUub2Zmc2V0Kz10LGl9ZnVuY3Rpb24gZGooZSx0KXtsZXQgaT1haihlLHQubGVuZ3RoKTtlLmJ5dGVzLnNldCh0LGkpfWZ1bmN0aW9uIGxqKGUsdCl7bGV0IGk9Y2ooZSx0KSxuPVN0cmluZy5mcm9tQ2hhckNvZGUscj1lLmJ5dGVzLG89XCLvv71cIixzPVwiXCI7Zm9yKGxldCBlPTA7ZTx0O2UrKyl7bGV0IGEsYyxkLGwsdT1yW2UraV07MD09KDEyOCZ1KT9zKz1uKHUpOjE5Mj09KDIyNCZ1KT9lKzE+PXQ/cys9bzooYT1yW2UraSsxXSwxMjghPSgxOTImYSk/cys9bzoobD0oMzEmdSk8PDZ8NjMmYSxsPDEyOD9zKz1vOihzKz1uKGwpLGUrKykpKToyMjQ9PSgyNDAmdSk/ZSsyPj10P3MrPW86KGE9cltlK2krMV0sYz1yW2UraSsyXSwzMjg5NiE9KDQ5MzQ0JihhfGM8PDgpKT9zKz1vOihsPSgxNSZ1KTw8MTJ8KDYzJmEpPDw2fDYzJmMsbDwyMDQ4fHxsPj01NTI5NiYmbDw9NTczNDM/cys9bzoocys9bihsKSxlKz0yKSkpOjI0MD09KDI0OCZ1KT9lKzM+PXQ/cys9bzooYT1yW2UraSsxXSxjPXJbZStpKzJdLGQ9cltlK2krM10sODQyMTUwNCE9KDEyNjMyMjU2JihhfGM8PDh8ZDw8MTYpKT9zKz1vOihsPSg3JnUpPDwxOHwoNjMmYSk8PDEyfCg2MyZjKTw8Nnw2MyZkLGw8NjU1MzZ8fGw+MTExNDExMT9zKz1vOihsLT02NTUzNixzKz1uKDU1Mjk2KyhsPj4xMCksNTYzMjArKDEwMjMmbCkpLGUrPTMpKSk6cys9b31yZXR1cm4gc31mdW5jdGlvbiB1aihlLHQpe2xldCBpPXQubGVuZ3RoLG49MDtmb3IobGV0IGU9MDtlPGk7ZSsrKXtsZXQgcj10LmNoYXJDb2RlQXQoZSk7cj49NTUyOTYmJnI8PTU2MzE5JiZlKzE8aSYmKHI9KHI8PDEwKSt0LmNoYXJDb2RlQXQoKytlKS01NjYxMzg4OCksbis9cjwxMjg/MTpyPDIwNDg/MjpyPDY1NTM2PzM6NH1FaihlLG4pO2xldCByPWFqKGUsbiksbz1lLmJ5dGVzO2ZvcihsZXQgZT0wO2U8aTtlKyspe2xldCBuPXQuY2hhckNvZGVBdChlKTtuPj01NTI5NiYmbjw9NTYzMTkmJmUrMTxpJiYobj0objw8MTApK3QuY2hhckNvZGVBdCgrK2UpLTU2NjEzODg4KSxuPDEyOD9vW3IrK109bjoobjwyMDQ4P29bcisrXT1uPj42JjMxfDE5Mjoobjw2NTUzNj9vW3IrK109bj4+MTImMTV8MjI0OihvW3IrK109bj4+MTgmN3wyNDAsb1tyKytdPW4+PjEyJjYzfDEyOCksb1tyKytdPW4+PjYmNjN8MTI4KSxvW3IrK109NjMmbnwxMjgpfX1mdW5jdGlvbiBoaihlKXtyZXR1cm4gZS5ieXRlc1tjaihlLDEpXX1mdW5jdGlvbiBwaihlLHQpe2xldCBpPWFqKGUsMSk7ZS5ieXRlc1tpXT10fWZ1bmN0aW9uIF9qKGUpe2xldCB0LGk9MCxuPTA7ZG97dD1oaihlKSxpPDMyJiYobnw9KDEyNyZ0KTw8aSksaSs9N313aGlsZSgxMjgmdCk7cmV0dXJuIG59ZnVuY3Rpb24gRWooZSx0KXtmb3IodD4+Pj0wO3Q+PTEyODspcGooZSwxMjcmdHwxMjgpLHQ+Pj49NztwaihlLHQpfWZ1bmN0aW9uIGZqKGUsdCl7bGV0IGksbj0wLHI9MCxvPTA7cmV0dXJuIGk9aGooZSksbj0xMjcmaSwxMjgmaSYmKGk9aGooZSksbnw9KDEyNyZpKTw8NywxMjgmaSYmKGk9aGooZSksbnw9KDEyNyZpKTw8MTQsMTI4JmkmJihpPWhqKGUpLG58PSgxMjcmaSk8PDIxLDEyOCZpJiYoaT1oaihlKSxyPTEyNyZpLDEyOCZpJiYoaT1oaihlKSxyfD0oMTI3JmkpPDw3LDEyOCZpJiYoaT1oaihlKSxyfD0oMTI3JmkpPDwxNCwxMjgmaSYmKGk9aGooZSkscnw9KDEyNyZpKTw8MjEsMTI4JmkmJihpPWhqKGUpLG89MTI3JmksMTI4JmkmJihpPWhqKGUpLG98PSgxMjcmaSk8PDcpKSkpKSkpKSkse2xvdzpufHI8PDI4LGhpZ2g6cj4+PjR8bzw8MjQsdW5zaWduZWQ6dH19ZnVuY3Rpb24gbWooZSx0KXtsZXQgaT10Lmxvdz4+PjAsbj0odC5sb3c+Pj4yOHx0LmhpZ2g8PDQpPj4+MCxyPXQuaGlnaD4+PjI0LG89MD09PXI/MD09PW4/aTwxNjM4ND9pPDEyOD8xOjI6aTwxPDwyMT8zOjQ6bjwxNjM4ND9uPDEyOD81OjY6bjwxPDwyMT83Ojg6cjwxMjg/OToxMCxzPWFqKGUsbyksYT1lLmJ5dGVzO3N3aXRjaChvKXtjYXNlIDEwOmFbcys5XT1yPj4+NyYxO2Nhc2UgOTphW3MrOF09OSE9PW8/MTI4fHI6MTI3JnI7Y2FzZSA4OmFbcys3XT04IT09bz9uPj4+MjF8MTI4Om4+Pj4yMSYxMjc7Y2FzZSA3OmFbcys2XT03IT09bz9uPj4+MTR8MTI4Om4+Pj4xNCYxMjc7Y2FzZSA2OmFbcys1XT02IT09bz9uPj4+N3wxMjg6bj4+PjcmMTI3O2Nhc2UgNTphW3MrNF09NSE9PW8/MTI4fG46MTI3Jm47Y2FzZSA0OmFbcyszXT00IT09bz9pPj4+MjF8MTI4Omk+Pj4yMSYxMjc7Y2FzZSAzOmFbcysyXT0zIT09bz9pPj4+MTR8MTI4Omk+Pj4xNCYxMjc7Y2FzZSAyOmFbcysxXT0yIT09bz9pPj4+N3wxMjg6aT4+PjcmMTI3O2Nhc2UgMTphW3NdPTEhPT1vPzEyOHxpOjEyNyZpfX1jb25zdCBUaj17fSxTaj17fSxnaj00Mjk0OTY3Mjk2LFJqPWdqKmdqLENqPVJqLzIsSWo9d2ooMCwhMCksdmo9d2ooMCkseWo9T2ooMCwtMjE0NzQ4MzY0OCwhMSksQWo9T2ooLTEsMjE0NzQ4MzY0NywhMSksYmo9T2ooLTEsLTEsITApO2Z1bmN0aW9uIHdqKGUsdCl7bGV0IGksbixyO3JldHVybiB0PyhyPTA8PShlPj4+PTApJiZlPDI1NikmJihuPVNqW2VdLG4pP246KGk9T2ooZSwwLCEwKSxyJiYoU2pbZV09aSksaSk6KHI9LTEyODw9KGV8PTApJiZlPDEyOCkmJihuPVRqW2VdLG4pP246KGk9T2ooZSxlPDA/LTE6MCwhMSksciYmKFRqW2VdPWkpLGkpfWZ1bmN0aW9uIE9qKGUsdCxpKXtyZXR1cm57bG93OjB8ZSxoaWdoOjB8dCx1bnNpZ25lZDohIWl9fWZ1bmN0aW9uIE5qKGUsdCl7aWYoaXNOYU4oZSkpcmV0dXJuIHQ/SWo6dmo7aWYodCl7aWYoZTwwKXJldHVybiBJajtpZihlPj1SailyZXR1cm4gYmp9ZWxzZXtpZihlPD0tQ2opcmV0dXJuIHlqO2lmKGUrMT49Q2opcmV0dXJuIEFqfXJldHVybiBlPDA/dD9Jajp2ajpPaihlJWdqfDAsZS9nanwwLHQpfWZ1bmN0aW9uIERqKGUsdCl7dmFyIGk9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYobj1uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxpLnB1c2guYXBwbHkoaSxuKX1yZXR1cm4gaX1jbGFzcyBQaiBleHRlbmRzIHh5e2dldCBjb25uZWN0aW9uU3RhdGUoKXtyZXR1cm4gdGhpcy5fY29ubmVjdGlvblN0YXRlfXNldCBjb25uZWN0aW9uU3RhdGUoZSl7aWYodGhpcy5fY29ubmVjdGlvblN0YXRlPT09ZSlyZXR1cm47Y29uc3QgdD10aGlzLl9jb25uZWN0aW9uU3RhdGU7dGhpcy5fY29ubmVjdGlvblN0YXRlPWUsdGhpcy5lbWl0KFJPLkNPTk5FQ1RJT05fU1RBVEVfQ0hBTkdFLGUsdCl9Z2V0IHF1YWxpdHkoKXtyZXR1cm4gdGhpcy5fcXVhbGl0eX1zZXQgcXVhbGl0eShlKXt0aGlzLl9xdWFsaXR5PWU+MT8xOmU8LjE/LjE6ZSx0aGlzLl9xdWFsaXR5VGltZXImJih3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMuX3F1YWxpdHlUaW1lciksdGhpcy5fcXVhbGl0eVRpbWVyPW51bGwpLHRoaXMuX3F1YWxpdHk+PTF8fCh0aGlzLl9xdWFsaXR5VGltZXI9d2luZG93LnNldFRpbWVvdXQoKCgpPT57dGhpcy5xdWFsaXR5PXRoaXMuX3F1YWxpdHkvdGhpcy5fcXVhbGl0eVJhdGlvfSksNmU0KSl9Y29uc3RydWN0b3IoZSl7dmFyIHQ7c3VwZXIoKSxGZyh0aGlzLFwibmFtZVwiLFwiQWdvcmFSVENJbWFnZU1vZGVyYXRpb25cIiksRmcodGhpcyxcIl9jb25uZWN0aW9uU3RhdGVcIixnTy5DT05ORUNUSU5HKSxGZyh0aGlzLFwiX3NlcXVlbmNlXCIsMCksRmcodGhpcyxcIl9tb2RlcmF0aW9uU3RhcnRUaW1lXCIsdm9pZCAwKSxGZyh0aGlzLFwiX3dvcmtlckNvbm5lY3Rpb25cIix2b2lkIDApLEZnKHRoaXMsXCJfd29ya2VyTWVzc2FnZUxlbmd0aExpbWl0XCIsdm9pZCAwKSxGZyh0aGlzLFwiX3F1YWxpdHlSYXRpb1wiLHZvaWQgMCksRmcodGhpcyxcIl9jb25uZWN0SW5mb1wiLHZvaWQgMCksRmcodGhpcyxcIl9jYW5jZWxUb2tlblNvdXJjZVwiLEx2LkNhbmNlbFRva2VuLnNvdXJjZSgpKSxGZyh0aGlzLFwiX3JldHJ5Q29uZmlnXCIsdm9pZCAwKSxGZyh0aGlzLFwiX21vZGVyYXRpb25JbnRlcnZhbFwiLHZvaWQgMCksRmcodGhpcyxcIl9tb2RlcmF0aW9uVGltZXJcIixudWxsKSxGZyh0aGlzLFwiX21vZGVyYXRpb25Nb2RlXCIsMSksRmcodGhpcyxcIl9xdWFsaXR5XCIsMSksRmcodGhpcyxcIl9xdWFsaXR5VGltZXJcIixudWxsKSxGZyh0aGlzLFwiX3RpY2tldFwiLHZvaWQgMCksRmcodGhpcyxcIl9tb2RlcmF0aW9uSW50ZXJ2YWxNaW5pbXVtXCIsdm9pZCAwKSxGZyh0aGlzLFwiX3VwbG9hZEZhaWxlZE51bVwiLDApLEZnKHRoaXMsXCJfdXBsb2FkTnVtXCIsMCksRmcodGhpcyxcIl91cGxvYWRUaW1lclwiLG51bGwpLEZnKHRoaXMsXCJfZXh0cmFJbmZvXCIsdm9pZCAwKSxGZyh0aGlzLFwiX3ZlbmRvclwiLFwiXCIpLEZnKHRoaXMsXCJfZW5jb2RlclwiLG5ldyBUZXh0RW5jb2RlciksRmcodGhpcyxcIl9tb2RlcmF0aW9uSWRcIix2b2lkIDApLEZnKHRoaXMsXCJpbnNwZWN0SW1hZ2VcIiwoKCk9PntpZih0aGlzLmNvbm5lY3Rpb25TdGF0ZSE9PWdPLkNPTk5FQ1RFRCl0aHJvdyBuZXcgeWIoUnkuT1BFUkFUSU9OX0FCT1JURUQsXCJpbWFnZSBtb2RlcmF0aW9uIHNlcnZpY2UgY29ubmVjdGlvbiBzdGF0dXMgaXMgXCIuY29uY2F0KHRoaXMuY29ubmVjdGlvblN0YXRlKSk7dGhpcy5fbW9kZXJhdGlvblRpbWVyJiYod2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy5fbW9kZXJhdGlvblRpbWVyKSx0aGlzLl9tb2RlcmF0aW9uVGltZXI9bnVsbCksdGhpcy5fbW9kZXJhdGlvblRpbWVyPXdpbmRvdy5zZXRJbnRlcnZhbCgoKCk9Pnt0aGlzLmNvbm5lY3Rpb25TdGF0ZT09PWdPLkNPTk5FQ1RFRD90aGlzLnJlcXVlc3RUb0luc3BlY3RJbWFnZSgpOmZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9tb2RlcmF0aW9uSWQsXCJdIE1vZGVyYXRpb24gU3RhdGUgaXMgbm90IGNvbm5lY3RlZCAsIFwiKSx0aGlzLmNvbm5lY3Rpb25TdGF0ZSl9KSx0aGlzLl9tb2RlcmF0aW9uSW50ZXJ2YWw8dGhpcy5fbW9kZXJhdGlvbkludGVydmFsTWluaW11bT90aGlzLl9tb2RlcmF0aW9uSW50ZXJ2YWxNaW5pbXVtOnRoaXMuX21vZGVyYXRpb25JbnRlcnZhbCksdGhpcy5yZXF1ZXN0VG9JbnNwZWN0SW1hZ2UoKX0pKSx0aGlzLl9tb2RlcmF0aW9uSWQ9VEEoNSxcImltYWdlLW1vZGVyYXRpb24tXCIpLHRoaXMuX3dvcmtlck1lc3NhZ2VMZW5ndGhMaW1pdD1YQShcIklNQUdFX01PREVSQVRJT05fV09SS0VSX01FU1NBR0VfTEVOR1RIX0xJTUlUXCIpLHRoaXMuX21vZGVyYXRpb25JbnRlcnZhbE1pbmltdW09WEEoXCJJTUFHRV9NT0RFUkFUSU9OX0lOVEVSVkFMX01JTklNVU1cIiksdGhpcy5fbW9kZXJhdGlvbkludGVydmFsPW51bGwhPT0odD1lLmludGVydmFsKSYmdm9pZCAwIT09dD90OjFlMyxlLmV4dHJhSW5mbyYmKHRoaXMuX2V4dHJhSW5mbz10aGlzLl9lbmNvZGVyLmVuY29kZShlLmV4dHJhSW5mbykpLGUudmVuZG9yJiYodGhpcy5fdmVuZG9yPWUudmVuZG9yKSx0aGlzLl9xdWFsaXR5UmF0aW89WEEoXCJJTUFHRV9NT0RFUkFUSU9OX1FVQUxJVFlfUkFUSU9cIiksdGhpcy5fbW9kZXJhdGlvblN0YXJ0VGltZT1OdW1iZXIoRGF0ZS5ub3coKSksdGhpcy5fd29ya2VyQ29ubmVjdGlvbj1uZXcgSE8oXCJ3b3JrZXItXCIrdGhpcy5fbW9kZXJhdGlvbklkLFBBKSx0aGlzLm9uKFJPLlNUQVRFX0NIQU5HRSwoKGUsdCk9PntmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fbW9kZXJhdGlvbklkLFwiXSBNb2RlcmF0aW9uIG9wZXJhdGlvbiA6XCIpLmNvbmNhdChDT1tlXSxcIiBcIikuY29uY2F0KHR8fFwiXCIpKX0pKSx0aGlzLmhhbmRsZVdvcmtlckV2ZW50cygpfWFzeW5jIGluaXQoZSx0KXt0aGlzLmVtaXQoUk8uU1RBVEVfQ0hBTkdFLENPLkNPTk5FQ1RfQVApLHRoaXMuX2Nvbm5lY3RJbmZvPWU7Y29uc3QgaT10aGlzLl9jYW5jZWxUb2tlblNvdXJjZS50b2tlbjtyZXR1cm4gdGhpcy5fcmV0cnlDb25maWc9dCxuZXcgR2goKChuLHIpPT57dGhpcy5vbihSTy5DT05ORUNUSU9OX1NUQVRFX0NIQU5HRSwoKGUsdCk9PntlPT09Z08uQ09OTkVDVEVEJiZuKCl9KSksdGhpcy5yZXF1ZXN0QVAoZSxpLHQpLnRoZW4oKGU9Pnt0aGlzLmNvbm5lY3RXb3JrZXIoZSl9KSkuY2F0Y2goKGU9PntyKGUpfSkpfSkpfXVwZGF0ZUNvbmZpZyhlKXt2YXIgdDt0aGlzLl9tb2RlcmF0aW9uSW50ZXJ2YWw9bnVsbCE9PSh0PWUuaW50ZXJ2YWwpJiZ2b2lkIDAhPT10P3Q6MWUzLGUuZXh0cmFJbmZvJiYodGhpcy5fZXh0cmFJbmZvPXRoaXMuX2VuY29kZXIuZW5jb2RlKGUuZXh0cmFJbmZvKSksZS52ZW5kb3ImJih0aGlzLl92ZW5kb3I9ZS52ZW5kb3IpLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9tb2RlcmF0aW9uSWQsXCJdIHVwZGF0ZUNvbmZpZzogXCIpLmNvbmNhdChKU09OLnN0cmluZ2lmeShlKSkpLHRoaXMuY29ubmVjdGlvblN0YXRlPT09Z08uQ09OTkVDVEVEJiZ0aGlzLmluc3BlY3RJbWFnZSgpfWFzeW5jIHJlcXVlc3RBUChlLHQsaSl7Y29uc3Qgbj1YQShcIldFQkNTX0RPTUFJTlwiKS5tYXAoKGU9PlwiaHR0cHM6Ly9cIi5jb25jYXQoZSxcIi9hcGkvdjFcIikpKSxyPWF3YWl0IGZ1bmN0aW9uKGUsdCxpLG4pe2xldHthcHBJZDpyLGFyZWFDb2RlOm8sY25hbWU6cyxzaWQ6YSx0b2tlbjpjLHVpZDpkfT10O0J4Kys7Y29uc3QgbD1cIm1vZGVyYXRpb25fcGx1Z2luXCIsdT17c2VydmljZV9uYW1lOmwsanNvbl9ib2R5OkpTT04uc3RyaW5naWZ5KHthcHBJZDpyLGFyZWFDb2RlOm8sY25hbWU6cyxjb21tYW5kOlwiYWxsb2NhdGVFZGdlXCIscmVxdWVzdElkOkJ4LHNlcTpCeCxzaWQ6YSxhcHBUb2tlbjpjLHRzOkRhdGUubm93KCksdWlkOmQrXCJcIn0pfTtsZXQgaCxwLF89ZVswXTtyZXR1cm4ga0EoKGFzeW5jKCk9PntoPURhdGUubm93KCk7Y29uc3QgZT1hd2FpdCBUeChfLHtkYXRhOnUsY2FuY2VsVG9rZW46aSxoZWFkZXJzOntcIlgtUGFja2V0LVNlcnZpY2UtVHlwZVwiOlwiMFwiLFwiWC1QYWNrZXQtVVJJXCI6XCI2MVwifSxwYXJhbXM6e2FjdGlvbjpcIndydGNfZ2F0ZXdheVwifX0pO2lmKHA9RGF0ZS5ub3coKS1oLDAhPT1lLmNvZGUpe2NvbnN0IHQ9bmV3IHliKFJ5LlVORVhQRUNURURfUkVTUE9OU0UsXCJtb2RlcmF0aW9uIHBsdWdpbiBhcCBlcnJvciwgY29kZVwiK2UuY29kZSx7cmV0cnk6ITAscmVzcG9uc2VUaW1lOnB9KTt0aHJvdyBmYi5lcnJvcih0LnRvU3RyaW5nKCkpLHR9Y29uc3QgdD1KU09OLnBhcnNlKGUuanNvbl9ib2R5KTtpZigyMDAhPT10LmNvZGUpe2NvbnN0IGU9bmV3IHliKFJ5LlVORVhQRUNURURfUkVTUE9OU0UsXCJtb2RlcmF0aW9uIHBsdWdpbiBhcCBlcnJvciwgY29kZTogXCIuY29uY2F0KHQuY29kZSxcIiwgcmVhc29uOiBcIikuY29uY2F0KHQucmVhc29uKSx7Y29kZTp0LmNvZGUscmVzcG9uc2VUaW1lOnB9KTt0aHJvdyBmYi5lcnJvcihlLnRvU3RyaW5nKCkpLGV9aWYoIXQuc2VydmVyc3x8IUFycmF5LmlzQXJyYXkodC5zZXJ2ZXJzKXx8MD09PXQuc2VydmVycy5sZW5ndGgpe2NvbnN0IGU9bmV3IHliKFJ5LlVORVhQRUNURURfUkVTUE9OU0UsXCJtb2RlcmF0aW9uIHBsdWdpbiBhcCBlbXB0eSBzZXJ2ZXJcIix7Y29kZTp0LmNvZGUscmVzcG9uc2VUaW1lOnB9KTt0aHJvdyBmYi5lcnJvcihlLnRvU3RyaW5nKCkpLGV9aWYoIXQuc2VydmVycy5zb21lKChlPT4hIWUud3NzKSkpe2NvbnN0IGU9bmV3IHliKFJ5LlVORVhQRUNURURfUkVTUE9OU0UsXCJtb2RlcmF0aW9uIHBsdWdpbiBhcCBlbXB0eSBwb3J0XCIse2NvZGU6dC5jb2RlLHJlc3BvbnNlVGltZTpwfSk7dGhyb3cgZmIuZXJyb3IoZS50b1N0cmluZygpKSxlfWNvbnN0IG49WEEoXCJJTUFHRV9NT0RFUkFUSU9OX1dPUktFUl9IT1NUXCIpO3JldHVybnthZGRyZXNzTGlzdDp0LnNlcnZlcnMubWFwKChlPT57bGV0e2FkZHJlc3M6dCx3c3M6aX09ZTtpZih0JiZpKXJldHVyblwid3NzOi8vXCIuY29uY2F0KHQucmVwbGFjZSgvXFwuL2csXCItXCIpLFwiLlwiKS5jb25jYXQobixcIjpcIikuY29uY2F0KGksXCIvbW9kZXJhdGlvblwiKX0pKS5maWx0ZXIoKGU9PiEhZSkpLHdvcmtlclRva2VuOnQud29ya2VyVG9rZW4sdmlkOnQudmlkLHRpY2tldDp0LmFwcFRpY2tldCxyZXNwb25zZVRpbWU6cH19KSwoKHQsaSk9Pih2Yi5hcHdvcmtlckV2ZW50KGEse3N1Y2Nlc3M6ITAsc2M6MjAwLHNlcnZpY2VOYW1lOmwscmVzcG9uc2VEZXRhaWw6SlNPTi5zdHJpbmdpZnkodC5hZGRyZXNzTGlzdCksZmlyc3RTdWNjZXNzOjA9PT1pLHJlc3BvbnNlVGltZTpwLHNlcnZlcklwOmVbaSVlLmxlbmd0aF19KSwhMSkpLCgodCxpKT0+KHZiLmFwd29ya2VyRXZlbnQoYSx7c3VjY2VzczohMSxzYzp0LmRhdGEmJnQuZGF0YS5jb2RlfHwyMDAsc2VydmljZU5hbWU6bCxyZXNwb25zZVRpbWU6cCxzZXJ2ZXJJcDplW2klZS5sZW5ndGhdfSksISEodC5jb2RlIT09UnkuT1BFUkFUSU9OX0FCT1JURUQmJnQuY29kZSE9PVJ5LlVORVhQRUNURURfUkVTUE9OU0V8fHQuZGF0YSYmdC5kYXRhLnJldHJ5KSYmKF89ZVsoaSsxKSVlLmxlbmd0aF0sITApKSksbil9KG4sZSx0LGkpO3RoaXMuZW1pdChSTy5TVEFURV9DSEFOR0UsQ08uQVBfQ09OTkVDVEVEKTtjb25zdHthZGRyZXNzTGlzdDpvLHRpY2tldDpzfT1yO3JldHVybiB0aGlzLl90aWNrZXQ9cyxvfWFzeW5jIGNvbm5lY3RXb3JrZXIoZSl7dGhpcy5lbWl0KFJPLlNUQVRFX0NIQU5HRSxDTy5DT05ORUNUX1dPUktFUiksYXdhaXQgdGhpcy5fd29ya2VyQ29ubmVjdGlvbi5pbml0KGUsMWU0KX1oYW5kbGVXb3JrZXJFdmVudHMoKXt0aGlzLl93b3JrZXJDb25uZWN0aW9uLm9uKFV3LkNPTk5FQ1RFRCwoYXN5bmMoKT0+e3RoaXMuZW1pdChSTy5TVEFURV9DSEFOR0UsQ08uV09SS0VSX0NPTk5FQ1RFRCx0aGlzLl93b3JrZXJDb25uZWN0aW9uLnVybCksdGhpcy5jb25uZWN0aW9uU3RhdGU9Z08uQ09OTkVDVEVEfSkpLHRoaXMuX3dvcmtlckNvbm5lY3Rpb24ub24oVXcuQ0xPU0VELCgoKT0+e3RoaXMuY29ubmVjdGlvblN0YXRlPWdPLkNMT1NFRH0pKSx0aGlzLl93b3JrZXJDb25uZWN0aW9uLm9uKFV3LkZBSUxFRCwoKCk9Pnt0aGlzLmNvbm5lY3Rpb25TdGF0ZT1nTy5DTE9TRUR9KSksdGhpcy5fd29ya2VyQ29ubmVjdGlvbi5vbihVdy5SRUNPTk5FQ1RJTkcsKCgpPT57dGhpcy5jb25uZWN0aW9uU3RhdGU9dGhpcy5jb25uZWN0aW9uU3RhdGU9PT1nTy5DT05ORUNURUQ/Z08uUkVDT05ORUNUSU5HOmdPLkNPTk5FQ1RJTkd9KSksdGhpcy5fd29ya2VyQ29ubmVjdGlvbi5vbihVdy5PTl9NRVNTQUdFLChhc3luYyBlPT57aWYoZS5kYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpe2NvbnN0IHQ9dGoobmV3IFVpbnQ4QXJyYXkoZS5kYXRhKSk7WEEoXCJTSE9XX0lNQUdFX01PREVSQVRJT05fV09SS0VSX01FU1NBR0VcIikmJmZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9tb2RlcmF0aW9uSWQsXCJdIFJlc3BvbnNlIG1lc3NhZ2UgZm9yIHdvcmtlciBvZiBpbWFnZSBtb2RlcmF0aW9uIFwiKSxKU09OLnN0cmluZ2lmeSh0KSksdGhpcy5fdXBsb2FkTnVtKyssdm9pZCAwPT09dC5jb2RlfHwwPT09dC5jb2RlfHwodGhpcy5fdXBsb2FkRmFpbGVkTnVtKyssZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX21vZGVyYXRpb25JZCxcIl0gRXJyb3IgcmVzcG9uc2UgZnJvbSB3b3JrZSwgY29kZSBpcyBcIikuY29uY2F0KHQuY29kZSxcIiwgbXNnIGlzIFwiKS5jb25jYXQodC5tc2cpKSx0aGlzLl91cGxvYWRUaW1lcnx8KHRoaXMuX3VwbG9hZFRpbWVyPXdpbmRvdy5zZXRUaW1lb3V0KCgoKT0+e3ZiLnJlcG9ydEFwaUludm9rZSh0aGlzLl9jb25uZWN0SW5mby5zaWR8fG51bGwse25hbWU6QnkuSU1BR0VfTU9ERVJBVElPTl9VUExPQUQsb3B0aW9uczpbdGhpcy5fdXBsb2FkRmFpbGVkTnVtLHRoaXMuX3VwbG9hZE51bSx0LmNvZGVdLHRhZzpqeS5UUkFDRVJ9KS5vbkVycm9yKG5ldyB5YihSeS5JTUFHRV9NT0RFUkFUSU9OX1VQTE9BRF9GQUlMRUQsdC5tc2cpKSx0aGlzLl91cGxvYWRUaW1lcj1udWxsfSksWEEoXCJJTUFHRV9NT0RFUkFUSU9OX1VQTE9BRF9SRVBPUlRfSU5URVJWQUxcIikpKSl9ZWxzZSBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fbW9kZXJhdGlvbklkLFwiXSBVbmV4cGVjdGVkIG1lc3NhZ2UgdHlwZSBmcm9tIHdvcmtlclwiKSl9KSksdGhpcy5fd29ya2VyQ29ubmVjdGlvbi5vbihVdy5XSUxMX1JFQ09OTkVDVCwoKGUsdCxpKT0+e1wicmVjb3ZlclwiPT09ZSYmaShlKSxpKFwidHJ5TmV4dFwiKX0pKSx0aGlzLl93b3JrZXJDb25uZWN0aW9uLm9uKFV3LlJFUVVFU1RfTkVXX1VSTFMsKChlLHQpPT57dGhpcy5yZXF1ZXN0QVAodGhpcy5fY29ubmVjdEluZm8sdGhpcy5fY2FuY2VsVG9rZW5Tb3VyY2UudG9rZW4sdGhpcy5fcmV0cnlDb25maWcpLnRoZW4oZSkuY2F0Y2godCl9KSl9c3RhdGljIGludFRvTG9uZyhlKXtyZXR1cm57bG93OmV8PTAsaGlnaDplPj4zMSx1bnNpZ25lZDplPj0wfX1hc3luYyByZXF1ZXN0VG9JbnNwZWN0SW1hZ2UoKXtjb25zdCBlPWVBKHRoaXMsUk8uQ0xJRU5UX0xPQ0FMX1ZJREVPX1RSQUNLKSx0PXthcHBJZDp0aGlzLl9jb25uZWN0SW5mby5hcHBJZCxjbmFtZTp0aGlzLl9jb25uZWN0SW5mby5jbmFtZSxjaWQ6dGhpcy5fY29ubmVjdEluZm8uY2lkLHNpZDp0aGlzLl9jb25uZWN0SW5mby5zaWQsdWlkOnRoaXMuX2Nvbm5lY3RJbmZvLnVpZCx2aWQ6dGhpcy5fY29ubmVjdEluZm8udmlkfTtpZihlKXtpZighZS5pc1BsYXlpbmcpcmV0dXJuIHZvaWQoWEEoXCJTSE9XX0lNQUdFX01PREVSQVRJT05fV09SS0VSX01FU1NBR0VcIikmJmZiLmRlYnVnKFwiT25seSB0aGUgdHJhY2sgYmVpbmcgcGxheWVkIGNhbiBiZSBpbnNwZWN0ZWRcIikpO3RoaXMuX3NlcXVlbmNlKys7Y29uc3QgaT1hd2FpdCB0aGlzLmdlbmVyYXRlUmVxdWVzdERhdGEoZSx0KTt0aGlzLl93b3JrZXJDb25uZWN0aW9uLnNlbmRNZXNzYWdlKGksITAsITApfWVsc2UgWEEoXCJTSE9XX0lNQUdFX01PREVSQVRJT05fV09SS0VSX01FU1NBR0VcIikmJmZiLmRlYnVnKFwiT25seSB0aGUgdHJhY2sgYmVpbmcgcHVibGlzaGVkIGNhbiBiZSBpbnNwZWN0ZWRcIil9YXN5bmMgZ2VuZXJhdGVSZXF1ZXN0RGF0YShlLHQpe2xldHthcHBJZDppLGNuYW1lOm4sY2lkOnIsdmlkOm8sc2lkOnMsdWlkOmF9PXQ7Y29uc3QgYz1EYXRlLm5vdygpLGQ9YXdhaXQgZS5nZXRDdXJyZW50RnJhbWVJbWFnZShcImltYWdlL2pwZWdcIix0aGlzLnF1YWxpdHkpLGw9YXdhaXQgT2soZCxpLG4pLHU9dGhpcy5fc2VxdWVuY2UrXCItXCIrcitcIi1cIithK1wiLVwiK2MrXCItXCIrVEEoMTIsXCJcIiksaD17YXBwSWQ6aSxjaWQ6cixjbmFtZTpuLGRldmljZUlkOlwiXCIsZWxhcHNlOlBqLmludFRvTG9uZyhOdW1iZXIoYy10aGlzLl9tb2RlcmF0aW9uU3RhcnRUaW1lKSksZmlsZVNpemU6ZC5idWZmZXIuYnl0ZUxlbmd0aCxoZWlnaHQ6ZC5oZWlnaHQsd2lkdGg6ZC53aWR0aCxqcGc6bCxuZXR3b3JrVHlwZTo2LG9zVHlwZTo3LHJlcXVlc3RJZDp1LHNka1ZlcnNpb246XCI0LjIyLjFcIixzZXF1ZW5jZTp0aGlzLl9zZXF1ZW5jZSxzaWQ6cyx0aW1lc3RhbXA6TmooYyksdWlkOmEsdmlkOm8sc2VydmljZTp0aGlzLl9tb2RlcmF0aW9uTW9kZSx0aWNrZXQ6dGhpcy5fdGlja2V0LGNhbGxiYWNrRGF0YTp0aGlzLl9leHRyYUluZm8sdmVuZG9yQ29uZmlnczp0aGlzLl92ZW5kb3J9O3ZvaWQgMD09PXRoaXMuX2V4dHJhSW5mbyYmZGVsZXRlIGguY2FsbGJhY2tEYXRhO2NvbnN0IHA9ZWooaCk7aWYocC5ieXRlTGVuZ3RoPHRoaXMuX3dvcmtlck1lc3NhZ2VMZW5ndGhMaW1pdCl7aWYoWEEoXCJTSE9XX0lNQUdFX01PREVSQVRJT05fV09SS0VSX01FU1NBR0VcIikpe2NvbnN0IGU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/RGooT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6RGooT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9KHt9LGgpO2RlbGV0ZSBlLmpwZyxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fbW9kZXJhdGlvbklkLFwiXSBSZXF1ZXN0IG1lc3NhZ2UgZm9yIHdvcmtlciBvZiBpbWFnZSBtb2RlcmF0aW9uIHNlcnZpY2U6IFwiKSxKU09OLnN0cmluZ2lmeShlKSl9cmV0dXJuIHB9e2NvbnN0IHQ9dGhpcy5xdWFsaXR5KnRoaXMuX3F1YWxpdHlSYXRpbztyZXR1cm4gdGhpcy5xdWFsaXR5PXQsYXdhaXQgdGhpcy5nZW5lcmF0ZVJlcXVlc3REYXRhKGUse2FwcElkOmksY25hbWU6bixjaWQ6cix2aWQ6byxzaWQ6cyx1aWQ6YX0pfX1jbG9zZSgpe3RoaXMuX2NhbmNlbFRva2VuU291cmNlLmNhbmNlbCgpLHRoaXMuX2NhbmNlbFRva2VuU291cmNlPUx2LkNhbmNlbFRva2VuLnNvdXJjZSgpLHRoaXMuX3dvcmtlckNvbm5lY3Rpb24mJnRoaXMuX3dvcmtlckNvbm5lY3Rpb24uY2xvc2UoKSx0aGlzLl9tb2RlcmF0aW9uVGltZXImJndpbmRvdy5jbGVhckludGVydmFsKHRoaXMuX21vZGVyYXRpb25UaW1lciksdGhpcy5fbW9kZXJhdGlvblRpbWVyPW51bGwsdGhpcy5fdXBsb2FkVGltZXImJndpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5fdXBsb2FkVGltZXIpLHRoaXMuX3VwbG9hZFRpbWVyPW51bGwsdGhpcy5jb25uZWN0aW9uU3RhdGU9Z08uQ0xPU0VELHRoaXMuZW1pdChSTy5TVEFURV9DSEFOR0UsQ08uQ0xPU0VEKX19ZnVuY3Rpb24gTGooZSl7aWYoeXkoZS5pbnRlcnZhbCxcImludGVydmFsXCIsMWUzLDEvMCksZSYmZS5leHRyYUluZm8mJmUuZXh0cmFJbmZvLmxlbmd0aD4xMDI0KXRocm93IG5ldyB5YihSeS5JTlZBTElEX1BBUkFNUyxcImNvbmZpZy5leHRyYUluZm8gbGVuZ3RoIGNhbm5vdCBleGNlZWQgMTAyNCBieXRlc1wiKTtpZihlJiZlLnZlbmRvciYmZS52ZW5kb3IubGVuZ3RoPjEwMjQpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfUEFSQU1TLFwiY29uZmlnLnZlbmRvciBsZW5ndGggY2Fubm90IGV4Y2VlZCAxMDI0IGJ5dGVzXCIpfWNvbnN0IGtqPXtuYW1lOlwiSW1hZ2VNb2RlcmF0aW9uXCIsY3JlYXRlOmZ1bmN0aW9uKGUpe2xldHtjb25maWc6dH09ZTtyZXR1cm4gTGoodCksbmV3IFBqKHQpfX07dmFyIE1qLFVqLHhqLFZqLEZqLEJqLGpqLEdqLFdqLEhqLEtqLFlqLHFqLHpqLEpqLFhqLFFqLFpqLCRqLGVHLHRHLGlHLG5HLHJHLG9HLHNHLGFHLGNHLGRHLGxHLHVHLGhHLHBHLF9HLEVHLGZHLG1HLFRHLFNHLGdHLFJHO2Z1bmN0aW9uIENHKGUsdCl7dmFyIGk9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYobj1uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxpLnB1c2guYXBwbHkoaSxuKX1yZXR1cm4gaX1mdW5jdGlvbiBJRyhlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgaT1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj9DRyhPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0ZnKGUsdCxpW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGkpKTpDRyhPYmplY3QoaSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLHQpKX0pKX1yZXR1cm4gZX1OQS5zZXRMb2dnZXIoZmIpO2xldCB2Rz0oTWo9SWIoKSxVaj1JYih7YXJnc01hcDooZSx0KT0+e2lmKCFBcnJheS5pc0FycmF5KHQpKXtpZighKHQgaW5zdGFuY2VvZiBITCkpcmV0dXJuW3RdO3Q9W3RdfXJldHVybiB0Lm1hcCgoZT0+ZT9PYmplY3QoZSkudG9TdHJpbmcoKTpcIm51bGxcIikpfX0pLHhqPUliKHthcmdzTWFwOihlLHQpPT4odHx8KHQ9W10pLEFycmF5LmlzQXJyYXkodCl8fHQudHJhY2tNZWRpYVR5cGUhPT12TC5EQVRBPyhBcnJheS5pc0FycmF5KHQpfHwodD1bdF0pLHQubWFwKChlPT5lLmdldFRyYWNrSWQoKSkpKTpbdC5nZXRDaGFubmVsSWQoKV0pfSksVmo9SWIoe2FyZ3NNYXA6KGUsdCxpLG4pPT5bXCJvYmplY3RcIj09dHlwZW9mIHQ/dC51aWQ6dCxpLG5dfSksRmo9SWIoe2FyZ3NNYXA6KGUsdCxpKT0+W3QsaV19KSxCaj1JYih7YXJnc01hcDooZSx0KT0+dC5tYXAoKGU9PntsZXR7dXNlcjp0LG1lZGlhVHlwZTppfT1lO3JldHVybltudWxsPT10P3ZvaWQgMDp0LnVpZCxpXX0pKX0pLGpqPUliKHthcmdzTWFwOihlLHQsaSxuKT0+W1wib2JqZWN0XCI9PXR5cGVvZiB0P3QudWlkOnQsaSxuXX0pLEdqPUliKHthcmdzTWFwOihlLHQpPT50Lm1hcCgoZT0+e2xldHt1c2VyOnQsbWVkaWFUeXBlOml9PWU7cmV0dXJue3VpZDpudWxsPT10P3ZvaWQgMDp0LnVpZCxtZWRpYVR5cGU6aX19KSl9KSxXaj1JYigpLEhqPUliKCksS2o9SWIoKSxZaj1JYigpLHFqPUliKCksemo9SWIoKSxKaj1JYigpLFhqPUliKCksUWo9SWIoKSxaaj1JYigpLCRqPUliKCksZUc9SWIoKSx0Rz1JYigpLGlHPUliKCksbkc9SWIoe2FyZ3NNYXA6KGUsdCk9Plt0XX0pLHJHPUliKCksb0c9SWIoKSxzRz1JYigpLGFHPUliKCksY0c9SWIoKSxkRz1JYigpLGxHPUliKCksdUc9SWIoKSxoRz1JYih7YXJnc01hcDooZSx0KT0+KEFycmF5LmlzQXJyYXkodCl8fCh0PVt0XSksW0pTT04uc3RyaW5naWZ5KHQpXSl9KSxwRz1JYigpLF9HPUliKCksRUc9SWIoKSxmRz1JYigpLG1HPUliKCksVEc9SWIoKSxTRz1JYih7cmVwb3J0UmVzdWx0OiEwfSksZ0c9SWIoKSxSRz1jbGFzcyBleHRlbmRzIHh5e2dldCBjb25uZWN0aW9uU3RhdGUoKXtyZXR1cm4gdGhpcy5fZ2F0ZXdheS5zdGF0ZX1nZXQgcmVtb3RlVXNlcnMoKXtyZXR1cm4gdGhpcy5fdXNlcnN9Z2V0IGxvY2FsVHJhY2tzKCl7cmV0dXJuIHRoaXMuX3AycENoYW5uZWwuZ2V0QWxsVHJhY2tzKCEwKX1nZXQgdWlkKCl7cmV0dXJuIHRoaXMuX3VpZH1nZXQgY2hhbm5lbE5hbWUoKXtyZXR1cm4gdGhpcy5fY2hhbm5lbE5hbWV9Z2V0IGxvY2FsRGF0YUNoYW5uZWxzKCl7cmV0dXJuIHRoaXMuX3AycENoYW5uZWwuZ2V0QWxsRGF0YUNoYW5uZWxzKCl9Z2V0IG1vZGUoKXtyZXR1cm4gdGhpcy5fY29uZmlnLm1vZGV9Z2V0IHJvbGUoKXt2YXIgZTtyZXR1cm4obnVsbD09PShlPXRoaXMuX2NvbmZpZyl8fHZvaWQgMD09PWU/dm9pZCAwOmUucm9sZSl8fFwiYXVkaWVuY2VcIn1nZXQgY29kZWMoKXtyZXR1cm4gdGhpcy5fY29uZmlnLmNvZGVjfWdldCBhdWRpb0NvZGVjKCl7cmV0dXJuIHRoaXMuX2NvbmZpZy5hdWRpb0NvZGVjfHxcIm9wdXNcIn1nZXQgaXNTdHJpbmdVSUQoKXtyZXR1cm4hIXRoaXMuX2pvaW5JbmZvJiYhIXRoaXMuX2pvaW5JbmZvLnN0cmluZ1VpZH1nZXQgX19jbGFzc05hbWVfXygpe3JldHVyblwiQ2xpZW50XCJ9Y29uc3RydWN0b3IoZSl7bGV0IHQ7aWYoc3VwZXIoKSxGZyh0aGlzLFwic3RvcmVcIix2b2lkIDApLEZnKHRoaXMsXCJfdWlkXCIsdm9pZCAwKSxGZyh0aGlzLFwiX2NoYW5uZWxOYW1lXCIsdm9pZCAwKSxGZyh0aGlzLFwiX3VpbnRVaWRcIix2b2lkIDApLEZnKHRoaXMsXCJfdXNlcnNcIixbXSksRmcodGhpcyxcIl9jb25maWdcIix2b2lkIDApLEZnKHRoaXMsXCJfY2xpZW50SWRcIix2b2lkIDApLEZnKHRoaXMsXCJfYXBwSWRcIix2b2lkIDApLEZnKHRoaXMsXCJfc2Vzc2lvbklkXCIsbnVsbCksRmcodGhpcyxcIl9rZXlcIix2b2lkIDApLEZnKHRoaXMsXCJfcnRtQ29uZmlnXCIse30pLEZnKHRoaXMsXCJfam9pbkluZm9cIix2b2lkIDApLEZnKHRoaXMsXCJfZ2F0ZXdheVwiLHZvaWQgMCksRmcodGhpcyxcIl9zdGF0c0NvbGxlY3RvclwiLHZvaWQgMCksRmcodGhpcyxcIl9jb25maWdEaXN0cmlidXRlXCIsdm9pZCAwKSxGZyh0aGlzLFwiX2xlYXZlTXV0ZXhcIixuZXcgTkEoXCJjbGllbnQtbGVhdmVcIikpLEZnKHRoaXMsXCJfcHVibGlzaE11dGV4XCIsbmV3IE5BKFwiY2xpZW50LXB1Ymxpc2hcIikpLEZnKHRoaXMsXCJfcmVuZXdUb2tlbk11dGV4XCIsbmV3IE5BKFwiY2xpZW50LXJlbmV3dG9rZW5cIikpLEZnKHRoaXMsXCJfc3Vic2NyaWJlTXV0ZXhcIixuZXcgTkEoXCJjbGllbnQtc3Vic2NyaWJlXCIpKSxGZyh0aGlzLFwiX2VuY3J5cHRpb25Nb2RlXCIsXCJub25lXCIpLEZnKHRoaXMsXCJfZW5jcnlwdGlvblNlY3JldFwiLG51bGwpLEZnKHRoaXMsXCJfZW5jcnlwdGlvblNhbHRcIixudWxsKSxGZyh0aGlzLFwiX2VuY3J5cHREYXRhU3RyZWFtXCIsITEpLEZnKHRoaXMsXCJfZW5jcnlwdERhdGFTdHJlYW1LZXlcIixudWxsKSxGZyh0aGlzLFwiX2VuY3J5cHREYXRhU3RyZWFtSXZcIixudWxsKSxGZyh0aGlzLFwiX3Byb3h5U2VydmVyXCIsdm9pZCAwKSxGZyh0aGlzLFwiX3R1cm5TZXJ2ZXJcIix7c2VydmVyczpbXSxtb2RlOlwiYXV0b1wifSksRmcodGhpcyxcIl9jbG91ZFByb3h5U2VydmVyTW9kZVwiLFwiZGlzYWJsZWRcIiksRmcodGhpcyxcIl9pc0R1YWxTdHJlYW1FbmFibGVkXCIsITEpLEZnKHRoaXMsXCJfZGVmYXVsdFN0cmVhbUZhbGxiYWNrVHlwZVwiLHZvaWQgMCksRmcodGhpcyxcIl9sb3dTdHJlYW1QYXJhbWV0ZXJcIix2b2lkIDApLEZnKHRoaXMsXCJfc3RyZWFtRmFsbGJhY2tUeXBlQ2FjaGVNYXBcIixuZXcgTWFwKSxGZyh0aGlzLFwiX3JlbW90ZVN0cmVhbVR5cGVDYWNoZU1hcFwiLG5ldyBNYXApLEZnKHRoaXMsXCJfYXhpb3NDYW5jZWxTb3VyY2VcIixMdi5DYW5jZWxUb2tlbi5zb3VyY2UoKSksRmcodGhpcyxcIl9hdWRpb1ZvbHVtZUluZGljYXRpb25JbnRlcnZhbFwiLHZvaWQgMCksRmcodGhpcyxcIl9uZXR3b3JrUXVhbGl0eUludGVydmFsXCIsdm9pZCAwKSxGZyh0aGlzLFwiX3VzZXJPZmZsaW5lVGltZW91dFwiLHZvaWQgMCksRmcodGhpcyxcIl9zdHJlYW1SZW1vdmVkVGltZW91dFwiLHZvaWQgMCksRmcodGhpcyxcIl9saXZlVHJhbnNjb2RlU3RyZWFtaW5nQ2xpZW50XCIsdm9pZCAwKSxGZyh0aGlzLFwiX2xpdmVSYXdTdHJlYW1pbmdDbGllbnRcIix2b2lkIDApLEZnKHRoaXMsXCJfY2hhbm5lbE1lZGlhUmVsYXlDbGllbnRcIix2b2lkIDApLEZnKHRoaXMsXCJfbmV0d29ya1F1YWxpdHlTZW5zaXRpdml0eVwiLFwibm9ybWFsXCIpLEZnKHRoaXMsXCJfcDJwQ2hhbm5lbFwiLHZvaWQgMCksRmcodGhpcyxcIl91c2VMb2NhbEFjY2Vzc1BvaW50XCIsITEpLEZnKHRoaXMsXCJfc2V0TG9jYWxBUFZlcnNpb25cIix2b2lkIDApLEZnKHRoaXMsXCJfam9pbkFuZE5vdExlYXZlWWV0XCIsITEpLEZnKHRoaXMsXCJfbnVtYmVyT2ZKb2luQ291bnRcIiwwKSxGZyh0aGlzLFwiX3JlbW90ZURlZmF1bHRWaWRlb1N0cmVhbVR5cGVcIix2b2lkIDApLEZnKHRoaXMsXCJfaW5zcGVjdFwiLHZvaWQgMCksRmcodGhpcyxcIl9tb2RlcmF0aW9uXCIsdm9pZCAwKSxGZyh0aGlzLFwiX2xpY2Vuc2VcIix2b2lkIDApLEZnKHRoaXMsXCJfcGVuZGluZ1B1Ymxpc2hlZFVzZXJzXCIsW10pLEZnKHRoaXMsXCJudHBBbGlnbkVycm9yQ291bnRcIiwwKSxGZyh0aGlzLFwicmVtb3RlSW5ib3VuZE9mZnNldFwiLDApLEZnKHRoaXMsXCJfaGFuZGxlTG9jYWxUcmFja0VuYWJsZVwiLCgoZSx0LGkpPT57dGhpcy5wdWJsaXNoKGUsITEpLnRoZW4odCkuY2F0Y2goaSl9KSksRmcodGhpcyxcIl9oYW5kbGVMb2NhbFRyYWNrRGlzYWJsZVwiLCgoZSx0LGkpPT57dGhpcy51bnB1Ymxpc2goZSkudGhlbih0KS5jYXRjaChpKX0pKSxGZyh0aGlzLFwiX2hhbmRsZVVzZXJPbmxpbmVcIiwoZT0+e2lmKFhBKFwiQkxPQ0tfTE9DQUxfQ0xJRU5UXCIpJiZPYihlLnVpZCx0aGlzLmNoYW5uZWxOYW1lKSlyZXR1cm4gdm9pZCBmYi5kZWJ1ZyhcIltcIi5jb25jYXQoZS51aWQsXCJdIHdpbGwgYmUgaWdub3JlZCBpbiBsb2NhbFwiKSk7dGhpcy5pc1N0cmluZ1VJRCYmXCJzdHJpbmdcIiE9dHlwZW9mIGUudWlkJiZmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIFN0cmluZ1VJRCBpcyBNaXhlZCB3aXRoIFVpbnRVSURcIikpO2NvbnN0IHQ9dGhpcy5fdXNlcnMuZmluZCgodD0+dC51aWQ9PT1lLnVpZCkpO2lmKHQpdC5fdHJ1c3RfaW5fcm9vbV89ITAsdC5faXNfcHJlX2NyZWF0ZWQmJih0Ll9pc19wcmVfY3JlYXRlZD0hMSx0aGlzLnNhZmVFbWl0KHp5LlVTRVJfSk9JTkVELHQpKTtlbHNle2NvbnN0IHQ9bmV3IGNGKGUudWlkLGUudWludF9pZHx8ZS51aWQpO3RoaXMuX3VzZXJzLnB1c2godCksZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSB1c2VyIG9ubGluZVwiKSxlLnVpZCksdGhpcy5zYWZlRW1pdCh6eS5VU0VSX0pPSU5FRCx0KX19KSksRmcodGhpcyxcIl9oYW5kbGVVc2VyT2ZmbGluZVwiLChlPT57aWYoWEEoXCJCTE9DS19MT0NBTF9DTElFTlRcIikmJk9iKGUudWlkLHRoaXMuY2hhbm5lbE5hbWUpKXJldHVybjtjb25zdCB0PXRoaXMuX3VzZXJzLmZpbmQoKHQ9PnQudWlkPT09ZS51aWQpKTt0JiYodGhpcy5faGFuZGxlUmVtb3ZlU3RyZWFtKGUpLHRoaXMuX2hhbmRsZVJlbW92ZURhdGFDaGFubmVscyhlKSx0Ll9hdWRpb19wcmVfc3Vic2NyaWJlZHx8dC5fdmlkZW9fcHJlX3N1YnNjcmliZWQ/dC5faXNfcHJlX2NyZWF0ZWQ9ITA6bkEodGhpcy5fdXNlcnMsdCksdGhpcy5fcmVtb3RlU3RyZWFtVHlwZUNhY2hlTWFwLmRlbGV0ZSh0LnVpZCksdGhpcy5fc3RyZWFtRmFsbGJhY2tUeXBlQ2FjaGVNYXAuZGVsZXRlKHQudWlkKSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHVzZXIgb2ZmbGluZVwiKSxlLnVpZCxcInJlYXNvbjpcIixlLnJlYXNvbiksdGhpcy5zYWZlRW1pdCh6eS5VU0VSX0xFQVZFRCx0LGUucmVhc29uKSl9KSksRmcodGhpcyxcIl9oYW5kbGVBZGRBdWRpb09yVmlkZW9TdHJlYW1cIiwoKGUsdCxpLG4scixvLHMpPT57aWYoWEEoXCJCTE9DS19MT0NBTF9DTElFTlRcIikmJk9iKHQsdGhpcy5jaGFubmVsTmFtZSkpcmV0dXJuO2NvbnN0IGE9dGhpcy5fdXNlcnMuZmluZCgoZT0+ZS51aWQ9PT10KSk7aWYoIWEpcmV0dXJuIHZvaWQgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBjYW4gbm90IGZpbmQgdGFyZ2V0IHVzZXIhKG9uX2FkZF9zdHJlYW0pXCIpKTtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHN0cmVhbSBhZGRlZCB3aXRoIHVpZCBcIikuY29uY2F0KHQsXCIsIHR5cGUgXCIpLmNvbmNhdChlKSksdGhpcy5zdG9yZS5zdWJzY3JpYmUoYS51aWQsZSx2b2lkIDAsdm9pZCAwLHZvaWQgMCxEYXRlLm5vdygpKTtjb25zdCBjPVwiYXVkaW9cIj09PWU/YS5oYXNBdWRpbzphLmhhc1ZpZGVvO2EuX3VpbnRpZHx8KGEuX3VpbnRpZD1yfHx0KSxcImF1ZGlvXCI9PT1lP2EuX3RydXN0X2F1ZGlvX3N0cmVhbV9hZGRlZF9zdGF0ZV89ITA6YS5fdHJ1c3RfdmlkZW9fc3RyZWFtX2FkZGVkX3N0YXRlXz0hMCxcImF1ZGlvXCI9PT1lPyhhLl9hdWRpb19hZGRlZF89ITAsdm9pZCAwIT09aSYmKGEuX2F1ZGlvU1NSQz1pKSx2b2lkIDAhPT1uJiYoYS5fY25hbWU9biksbyYmKGEuX2F1ZGlvT3J0Yz1vKSk6KGEuX3ZpZGVvX2FkZGVkXz0hMCx2b2lkIDAhPT1pJiYoYS5fdmlkZW9TU1JDPWkpLHZvaWQgMCE9PW4mJihhLl9jbmFtZT1uKSx2b2lkIDAhPT1zJiYoYS5fcnR4U3NyY0lkPXMpLG8mJihhLl92aWRlb09ydGM9bykpLChcImF1ZGlvXCI9PT1lP2EuaGFzQXVkaW86YS5oYXNWaWRlbykmJiFjJiYoZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlbW90ZSB1c2VyIFwiKS5jb25jYXQoYS51aWQsXCIgcHVibGlzaGVkIFwiKS5jb25jYXQoZSkpLHRoaXMuc2FmZUVtaXQoenkuVVNFUl9QVUJMSVNIRUQsYSxlKSksXCJ2aWRlb1wiPT09ZT92Yi5vbkdhdGV3YXlTdHJlYW0odGhpcy5fc2Vzc2lvbklkLGdiLk9OX0FERF9WSURFT19TVFJFQU0sUmIuT05fQUREX1ZJREVPX1NUUkVBTSx7cGVlcjpyfHx0LHNzcmM6YS5fdmlkZW9TU1JDfSk6dmIub25HYXRld2F5U3RyZWFtKHRoaXMuX3Nlc3Npb25JZCxnYi5PTl9BRERfQVVESU9fU1RSRUFNLFJiLk9OX0FERF9BVURJT19TVFJFQU0se3BlZXI6cnx8dCxzc3JjOmEuX2F1ZGlvU1NSQ30pLHRoaXMuX3AycENoYW5uZWwucmVtb3RlTWVkaWFTc3JjQ2hhbmdlZChhLGUsaSkudGhlbigodD0+e2lmKHQmJihmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlc3Vic2NyaWJlIFwiKS5jb25jYXQoZSxcIiBmb3IgdXNlciBcIikuY29uY2F0KGEudWlkLFwiIGFmdGVyIHJlam9pbiBiZWNhdXNlIFNTUkMgaWQgY2hhbmdlZC5cIikpLHRoaXMuX3AycENoYW5uZWwgaW5zdGFuY2VvZiBmQikpcmV0dXJuIHRoaXMuX3AycENoYW5uZWwudW5zdWJzY3JpYmUoYSxlLCEwKS50aGVuKCgoKT0+dGhpcy5fc3Vic2NyaWJlKGEsZSwhMCkuY2F0Y2goKGU9PntmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlc3Vic2NyaWJlIGVycm9yXCIpLGUudG9TdHJpbmcoKSl9KSkpKX0pKSx0aGlzLl9wMnBDaGFubmVsLmhhc1BlbmRpbmdSZW1vdGVNZWRpYShhLGUpJiYoZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSByZXN1YnNjcmliZSBcIikuY29uY2F0KGUsXCIgZm9yIHVzZXIgXCIpLmNvbmNhdChhLnVpZCxcIiBhZnRlciByZWNvbm5lY3QuXCIpKSx0aGlzLl9zdWJzY3JpYmUoYSxlLCEwKS5jYXRjaCgoZT0+e2ZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcmVzdWJzY3JpYmUgZXJyb3JcIiksZS50b1N0cmluZygpKX0pKSl9KSksRmcodGhpcyxcIl9oYW5kbGVSZW1vdmVTdHJlYW1cIiwoZT0+e2lmKFhBKFwiQkxPQ0tfTE9DQUxfQ0xJRU5UXCIpJiZPYihlLnVpZCx0aGlzLmNoYW5uZWxOYW1lKSlyZXR1cm47Y29uc3QgdD10aGlzLl91c2Vycy5maW5kKCh0PT50LnVpZD09PWUudWlkKSk7aWYoIXQpcmV0dXJuIHZvaWQgZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGNhbiBub3QgZmluZCB0YXJnZXQgdXNlciEob25fcmVtb3ZlX3N0cmVhbSlcIikpO2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gc3RyZWFtIHJlbW92ZWQgd2l0aCB1aWQgXCIpLmNvbmNhdChlLnVpZCkpO2xldCBpPSgpPT57fTt0Lmhhc0F1ZGlvJiZ0Lmhhc1ZpZGVvP2k9KCk9PntmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcmVtb3RlIHVzZXIgXCIpLmNvbmNhdCh0LnVpZCxcIiB1bnB1Ymxpc2hlZCBhdWRpbyB0cmFja1wiKSksdGhpcy5zYWZlRW1pdCh6eS5VU0VSX1VOUFVCTElTSEVELHQsXCJhdWRpb1wiKSxmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcmVtb3RlIHVzZXIgXCIpLmNvbmNhdCh0LnVpZCxcIiB1bnB1Ymxpc2hlZCB2aWRlbyB0cmFja1wiKSksdGhpcy5zYWZlRW1pdCh6eS5VU0VSX1VOUFVCTElTSEVELHQsXCJ2aWRlb1wiKX06dC5oYXNWaWRlbz9pPSgpPT57ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlbW90ZSB1c2VyIFwiKS5jb25jYXQodC51aWQsXCIgdW5wdWJsaXNoZWQgdmlkZW8gdHJhY2tcIikpLHRoaXMuc2FmZUVtaXQoenkuVVNFUl9VTlBVQkxJU0hFRCx0LFwidmlkZW9cIil9OnQuaGFzQXVkaW8mJihpPSgpPT57ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlbW90ZSB1c2VyIFwiKS5jb25jYXQodC51aWQsXCIgdW5wdWJsaXNoZWQgYXVkaW8gdHJhY2tcIikpLHRoaXMuc2FmZUVtaXQoenkuVVNFUl9VTlBVQkxJU0hFRCx0LFwiYXVkaW9cIil9KSx0Ll92aWRlb19wcmVfc3Vic2NyaWJlZHx8dC5fYXVkaW9fcHJlX3N1YnNjcmliZWR8fCh0Ll90cnVzdF9hdWRpb19zdHJlYW1fYWRkZWRfc3RhdGVfPSEwLHQuX3RydXN0X3ZpZGVvX3N0cmVhbV9hZGRlZF9zdGF0ZV89ITAsdC5fYXVkaW9fYWRkZWRfPSExLHQuX3ZpZGVvX2FkZGVkXz0hMSx0aGlzLl9wMnBDaGFubmVsIGluc3RhbmNlb2YgZkImJnRoaXMuX3AycENoYW5uZWwudW5zdWJzY3JpYmUodCkudGhlbigoZT0+e2lmKGUpcmV0dXJuIHRoaXMuX2dhdGV3YXkudW5zdWJzY3JpYmUoZSx0LnVpZCl9KSksdC5fYXVkaW9TU1JDPXZvaWQgMCx0Ll92aWRlb1NTUkM9dm9pZCAwLHQuX2F1ZGlvT3J0Yz12b2lkIDAsdC5fdmlkZW9PcnRjPXZvaWQgMCx0Ll9ydHhTc3JjSWQ9dm9pZCAwKSx2Yi5vbkdhdGV3YXlTdHJlYW0odGhpcy5fc2Vzc2lvbklkLGdiLk9OX1JFTU9WRV9TVFJFQU0sUmIuT05fUkVNT1ZFX1NUUkVBTSx7cGVlcjplLnVpbnRfaWR8fGUudWlkfSksaSgpfSkpLEZnKHRoaXMsXCJfaGFuZGxlU2V0U3RyZWFtTG9jYWxFbmFibGVcIiwoKGUsdCxpKT0+e2lmKFhBKFwiQkxPQ0tfTE9DQUxfQ0xJRU5UXCIpJiZPYih0LHRoaXMuY2hhbm5lbE5hbWUpKXJldHVybjtjb25zdCBuPXRoaXMuX3VzZXJzLmZpbmQoKGU9PmUudWlkPT09dCkpO2lmKCFuKXJldHVybiB2b2lkIGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gY2FuIG5vdCBmaW5kIHRhcmdldCB1c2VyIShkaXNhYmxlX2xvY2FsKVwiKSk7ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBsb2NhbCBcIikuY29uY2F0KGUsXCIgXCIpLmNvbmNhdChpP1wiZW5hYmxlZFwiOlwiZGlzYWJsZWRcIixcIiB3aXRoIHVpZCBcIikuY29uY2F0KHQpKTtjb25zdCByPVwiYXVkaW9cIj09PWU/bi5oYXNBdWRpbzpuLmhhc1ZpZGVvO2lmKFwiYXVkaW9cIj09PWUpe24uX3RydXN0X2F1ZGlvX2VuYWJsZWRfc3RhdGVfPSEwO2NvbnN0IGU9bi5fYXVkaW9fZW5hYmxlZF87aWYobi5fYXVkaW9fZW5hYmxlZF89aSxuLl9hdWRpb19lbmFibGVkXz09PWUpcmV0dXJuO3tjb25zdCBlPW4uX2F1ZGlvX2VuYWJsZWRfP1wiZW5hYmxlLWxvY2FsLWF1ZGlvXCI6XCJkaXNhYmxlLWxvY2FsLWF1ZGlvXCI7ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSB1c2VyLWluZm8tdXBkYXRlZCwgdWlkOiBcIikuY29uY2F0KHQsXCIsIG1zZzogXCIpLmNvbmNhdChlKSksdGhpcy5zYWZlRW1pdCh6eS5VU0VSX0lORk9fVVBEQVRFRCx0LGUpfX1lbHNle24uX3RydXN0X3ZpZGVvX2VuYWJsZWRfc3RhdGVfPSEwO2NvbnN0IGU9bi5fdmlkZW9fZW5hYmxlZF87aWYobi5fdmlkZW9fZW5hYmxlZF89aSxuLl92aWRlb19lbmFibGVkXz09PWUpcmV0dXJuO3tjb25zdCBlPW4uX3ZpZGVvX2VuYWJsZWRfP1wiZW5hYmxlLWxvY2FsLXZpZGVvXCI6XCJkaXNhYmxlLWxvY2FsLXZpZGVvXCI7ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSB1c2VyLWluZm8tdXBkYXRlLCB1aWQ6IFwiKS5jb25jYXQodCxcIiwgbXNnOiBcIikuY29uY2F0KGUpKSx0aGlzLnNhZmVFbWl0KHp5LlVTRVJfSU5GT19VUERBVEVELHQsZSl9fWNvbnN0IG89XCJhdWRpb1wiPT09ZT9uLmhhc0F1ZGlvOm4uaGFzVmlkZW87cmV0dXJuIHIhPT1vPyFyJiZvPyhmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcmVtb3RlIHVzZXIgXCIpLmNvbmNhdCh0LFwiIHB1Ymxpc2hlZCBcIikuY29uY2F0KGUpKSx2b2lkIHRoaXMuc2FmZUVtaXQoenkuVVNFUl9QVUJMSVNIRUQsbixlKSk6KFwidmlkZW9cIj09PWUmJm4uX3ZpZGVvVHJhY2smJm4uX3ZpZGVvVHJhY2suX2Rlc3Ryb3koKSxcImF1ZGlvXCI9PT1lJiZuLl9hdWRpb1RyYWNrLHRoaXMuX3AycENoYW5uZWwubXV0ZVJlbW90ZShuLGUpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSByZW1vdGUgdXNlciBcIikuY29uY2F0KHQsXCIgdW5wdWJsaXNoZWQgXCIpLmNvbmNhdChlKSksdm9pZCB0aGlzLnNhZmVFbWl0KHp5LlVTRVJfVU5QVUJMSVNIRUQsbixlKSk6dm9pZCAwfSkpLEZnKHRoaXMsXCJfaGFuZGxlTXV0ZVN0cmVhbVwiLCgoZSx0LGkpPT57aWYoWEEoXCJCTE9DS19MT0NBTF9DTElFTlRcIikmJk9iKGUsdGhpcy5jaGFubmVsTmFtZSkpcmV0dXJuO2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcmVjZWl2ZSBtdXRlIG1lc3NhZ2VcIiksZSx0LGkpO2NvbnN0IG49dGhpcy5fdXNlcnMuZmluZCgodD0+dC51aWQ9PT1lKSk7aWYoIW4pcmV0dXJuIHZvaWQgZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGNhbiBub3QgZmluZCByZW1vdGUgdXNlciwgaWdub3JlIG11dGUgZXZlbnQsIHVpZDogXCIpLmNvbmNhdChlKSk7Y29uc3Qgcj1cImF1ZGlvXCI9PT10P24uaGFzQXVkaW86bi5oYXNWaWRlbztpZihcImF1ZGlvXCI9PT10KXtuLl90cnVzdF9hdWRpb19tdXRlX3N0YXRlXz0hMDtjb25zdCB0PW4uX2F1ZGlvX211dGVkXztpZihuLl9hdWRpb19tdXRlZF89aSxuLl9hdWRpb19tdXRlZF89PT10KXJldHVybjt7Y29uc3QgdD1uLl9hdWRpb19tdXRlZF8/XCJtdXRlLWF1ZGlvXCI6XCJ1bm11dGUtYXVkaW9cIjtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHVzZXItaW5mby11cGRhdGUsIHVpZDogXCIpLmNvbmNhdChlLFwiLCBtc2c6IFwiKS5jb25jYXQodCkpLHRoaXMuc2FmZUVtaXQoenkuVVNFUl9JTkZPX1VQREFURUQsZSx0KX19ZWxzZXtuLl90cnVzdF92aWRlb19tdXRlX3N0YXRlXz0hMDtjb25zdCB0PW4uX3ZpZGVvX211dGVkXztpZihuLl92aWRlb19tdXRlZF89aSxuLl92aWRlb19tdXRlZF89PT10KXJldHVybjt7Y29uc3QgdD1uLl92aWRlb19tdXRlZF8/XCJtdXRlLXZpZGVvXCI6XCJ1bm11dGUtdmlkZW9cIjtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHVzZXItaW5mby11cGRhdGUsIHVpZDogXCIpLmNvbmNhdChlLFwiLCBtc2c6IFwiKS5jb25jYXQodCkpLHRoaXMuc2FmZUVtaXQoenkuVVNFUl9JTkZPX1VQREFURUQsZSx0KX19Y29uc3Qgbz1cImF1ZGlvXCI9PT10P24uaGFzQXVkaW86bi5oYXNWaWRlbztpZihyIT09byl7aWYoIXImJm8pe3JldHVybihcImF1ZGlvXCI9PT10P24uX2F1ZGlvU1NSQzpuLl92aWRlb1NTUkMpPyhmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcmVtb3RlIHVzZXIgXCIpLmNvbmNhdChlLFwiIHB1Ymxpc2hlZCBcIikuY29uY2F0KHQpKSx2b2lkIHRoaXMuc2FmZUVtaXQoenkuVVNFUl9QVUJMSVNIRUQsbix0KSk6dm9pZCBmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcmVtb3RlIHVzZXIgXCIpLmNvbmNhdChlLFwiIHJlY2VpdmUgXCIpLmNvbmNhdCh0LFwiIHVubXV0ZSBtZXNzYWdlICBiZWZvcmUgYWRkIHN0cmVhbSBtZXNzYWdlLCBcIikuY29uY2F0KHQsXCIgU1NSQyBkb2Vzbid0IGV4aXN0IHlldC5cIikpfVwidmlkZW9cIj09PXQmJm4uX3ZpZGVvVHJhY2smJiFuLl92aWRlb19wcmVfc3Vic2NyaWJlZCYmbi5fdmlkZW9UcmFjay5fZGVzdHJveSgpLFwiYXVkaW9cIj09PXQmJm4uX2F1ZGlvVHJhY2ssdGhpcy5fcDJwQ2hhbm5lbC5tdXRlUmVtb3RlKG4sdCksZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlbW90ZSB1c2VyIFwiKS5jb25jYXQoZSxcIiB1bnB1Ymxpc2hlZCBcIikuY29uY2F0KHQpKSx0aGlzLnNhZmVFbWl0KHp5LlVTRVJfVU5QVUJMSVNIRUQsbix0KX19KSksRmcodGhpcyxcIl9oYW5kbGVQMlBMb3N0XCIsKGFzeW5jIGU9PntmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlY2VpdmUgcDJwIGxvc3RcIiksZSkscGFyc2VJbnQoZS5wMnBpZCwxMCk9PT10aGlzLnN0b3JlLnAycElkP2F3YWl0IHRoaXMuX3AycENoYW5uZWwucmVxdWVzdFJlY29ubmVjdCgpOmZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBQMlBMb3N0IHN0cmVhbSBub3QgZm91bmRcIiksZSl9KSksRmcodGhpcyxcIl9oYW5kbGVUb2tlbldpbGxFeHBpcmVcIiwoKCk9PntmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlY2VpdmVkIG1lc3NhZ2Ugb25Ub2tlblByaXZpbGVnZVdpbGxFeHBpcmVcIikpLHRoaXMuc2FmZUVtaXQoenkuT05fVE9LRU5fUFJJVklMRUdFX1dJTExfRVhQSVJFKX0pKSxGZyh0aGlzLFwiX2hhbmRsZUJlZm9yZVVubG9hZFwiLChlPT57XCJiZWZvcmV1bmxvYWRcIj09PWUudHlwZSYmdm9pZCAwIT09ZS5yZXR1cm5WYWx1ZSYmXCJcIiE9PWUucmV0dXJuVmFsdWV8fCh0aGlzLmxlYXZlKCksZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGF1dG8gbGVhdmUgb25iZWZvcmV1bmxvYWQgb3IgcGFnZWhpZGVcIikpKX0pKSxGZyh0aGlzLFwiX2hhbmRsZVVwZGF0ZU5ldHdvcmtRdWFsaXR5XCIsKCgpPT57aWYoXCJub3JtYWxcIj09PXRoaXMuX25ldHdvcmtRdWFsaXR5U2Vuc2l0aXZpdHkpcmV0dXJuO2lmKG5hdmlnYXRvciYmdm9pZCAwIT09bmF2aWdhdG9yLm9uTGluZSYmIW5hdmlnYXRvci5vbkxpbmUpcmV0dXJuIHZvaWQgdGhpcy5zYWZlRW1pdCh6eS5ORVRXT1JLX1FVQUxJVFkse2Rvd25saW5rTmV0d29ya1F1YWxpdHk6Nix1cGxpbmtOZXR3b3JrUXVhbGl0eTo2fSk7Y29uc3QgZT17ZG93bmxpbmtOZXR3b3JrUXVhbGl0eTowLHVwbGlua05ldHdvcmtRdWFsaXR5OjB9O2UudXBsaW5rTmV0d29ya1F1YWxpdHk9dGhpcy5fcDJwQ2hhbm5lbC5nZXRVcGxpbmtOZXR3b3JrUXVhbGl0eSgpLGUuZG93bmxpbmtOZXR3b3JrUXVhbGl0eT10aGlzLl9wMnBDaGFubmVsLmdldERvd25saW5rTmV0d29ya1F1YWxpdHkoKSx0aGlzLnNhZmVFbWl0KHp5Lk5FVFdPUktfUVVBTElUWSxlKX0pKSxGZyh0aGlzLFwiX2hhbmRsZVAyUEFkZEF1ZGlvT3JWaWRlb1N0cmVhbVwiLCgoZSx0LGksbik9Pntjb25zdCByPXRoaXMuX3VzZXJzLmZpbmQoKGU9PmUudWlkPT09dCkpO2lmKCFyKXJldHVybiB2b2lkIGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gY2FuIG5vdCBmaW5kIHRhcmdldCB1c2VyIShvbl9hZGRfc3RyZWFtKVwiKSk7ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBzdHJlYW0gYWRkZWQgd2l0aCB1aWQgXCIpLmNvbmNhdCh0LFwiLCB0eXBlIFwiKS5jb25jYXQoZSkpLHRoaXMuc3RvcmUuc3Vic2NyaWJlKHIudWlkLGUsdm9pZCAwLHZvaWQgMCx2b2lkIDAsRGF0ZS5ub3coKSk7Y29uc3Qgbz1cImF1ZGlvXCI9PT1lP3IuaGFzQXVkaW86ci5oYXNWaWRlbztcImF1ZGlvXCI9PT1lP3IuX3RydXN0X2F1ZGlvX3N0cmVhbV9hZGRlZF9zdGF0ZV89ITA6ci5fdHJ1c3RfdmlkZW9fc3RyZWFtX2FkZGVkX3N0YXRlXz0hMCxcImF1ZGlvXCI9PT1lPyhyLl9hdWRpb19hZGRlZF89ITAsdm9pZCAwIT09aSYmKHIuX2F1ZGlvU1NSQz1pKSx2b2lkIDAhPT1uJiYoci5fYXVkaW9NaWQ9bikpOihyLl92aWRlb19hZGRlZF89ITAsdm9pZCAwIT09aSYmKHIuX3ZpZGVvU1NSQz1pKSx2b2lkIDAhPT1uJiYoci5fdmlkZW9NaWQ9bikpLChcImF1ZGlvXCI9PT1lP3IuaGFzQXVkaW86ci5oYXNWaWRlbykmJiFvJiYoZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlbW90ZSB1c2VyIFwiKS5jb25jYXQoci51aWQsXCIgcHVibGlzaGVkIFwiKS5jb25jYXQoZSkpLHRoaXMuc2FmZUVtaXQoenkuVVNFUl9QVUJMSVNIRUQscixlKSksdGhpcy5fcDJwQ2hhbm5lbC5oYXNQZW5kaW5nUmVtb3RlTWVkaWEocixlKSYmKGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcmVzdWJzY3JpYmUgXCIpLmNvbmNhdChlLFwiIGZvciB1c2VyIFwiKS5jb25jYXQoci51aWQsXCIgYWZ0ZXIgcmVjb25uZWN0LlwiKSksdGhpcy5fc3Vic2NyaWJlKHIsZSwhMCkuY2F0Y2goKGU9PntmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlc3Vic2NyaWJlIGVycm9yXCIpLGUudG9TdHJpbmcoKSl9KSkpfSkpLHRoaXMuX2NvbmZpZz1lLHRoaXMuX2NsaWVudElkPVRBKDUsXCJjbGllbnQtXCIpLHRoaXMuc3RvcmU9bmV3ICRBKGUuY29kZWMsZS5hdWRpb0NvZGVjLGUubW9kZSx0aGlzLl9jbGllbnRJZCksdGhpcy5zdG9yZS5jbGllbnRDcmVhdGVkKCksZS5wcm94eVNlcnZlciYmdGhpcy5zZXRQcm94eVNlcnZlcihlLnByb3h5U2VydmVyLCEwKSxlLnR1cm5TZXJ2ZXImJnRoaXMuc2V0VHVyblNlcnZlcihlLnR1cm5TZXJ2ZXIsITApLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBJbml0aWFsaXppbmcgQWdvcmFSVEMgY2xpZW50IHZcIikuY29uY2F0KEdBLFwiIGJ1aWxkOiBcIikuY29uY2F0KHFBLFwiLCBtb2RlOiBcIikuY29uY2F0KHRoaXMubW9kZSxcIiwgY29kZWM6IFwiKS5jb25jYXQodGhpcy5jb2RlYykpLGUuY2xpZW50Um9sZU9wdGlvbnMpdHJ5e3F5KGUuY2xpZW50Um9sZU9wdGlvbnMpLHQ9T2JqZWN0LmFzc2lnbih7fSxlLmNsaWVudFJvbGVPcHRpb25zKX1jYXRjaChlKXtmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gXCIpLmNvbmNhdChlLnRvU3RyaW5nKCkpKX10aGlzLl9zdGF0c0NvbGxlY3Rvcj1uZXcgREYodGhpcy5zdG9yZSksdGhpcy5fc3RhdHNDb2xsZWN0b3Iub25TdGF0c0V4Y2VwdGlvbj0oZSx0LGkpPT57ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSByZWNlaXZlIGV4Y2VwdGlvbiBtc2csIGNvZGU6IFwiKS5jb25jYXQoZSxcIiwgbXNnOiBcIikuY29uY2F0KHQsXCIsIHVpZDogXCIpLmNvbmNhdChpKSksdGhpcy5zYWZlRW1pdCh6eS5FWENFUFRJT04se2NvZGU6ZSxtc2c6dCx1aWQ6aX0pfSx0aGlzLl9zdGF0c0NvbGxlY3Rvci5vblVwbG9hZFB1Ymxpc2hEdXJhdGlvbj0oZSx0LGksbik9Pntjb25zdCByPXRoaXMuX3VzZXJzLmZpbmQoKHQ9PnQudWlkPT09ZSkpO3ImJnZiLnBlZXJQdWJsaXNoU3RhdHVzKHRoaXMuX3Nlc3Npb25JZCx7c3Vic2NyaWJlRWxhcHNlOm4sYXVkaW9QdWJsaXNoRHVyYXRpb246dCx2aWRlb1B1Ymxpc2hEdXJhdGlvbjppLHBlZXI6ci5fdWludGlkfSl9LHRoaXMuc3RvcmUudXNlUDJQPVwicDJwXCI9PT1lLm1vZGUsdGhpcy5fZ2F0ZXdheT1uZXcgRXgodGhpcy5zdG9yZSx7Y2xpZW50SWQ6dGhpcy5fY2xpZW50SWQsbW9kZTp0aGlzLm1vZGUsY29kZWM6dGhpcy5jb2RlYyx3ZWJzb2NrZXRSZXRyeUNvbmZpZzplLndlYnNvY2tldFJldHJ5Q29uZmlnfHxQQSxodHRwUmV0cnlDb25maWc6ZS5odHRwUmV0cnlDb25maWd8fFBBLGZvcmNlV2FpdEdhdGV3YXlSZXNwb25zZTp2b2lkIDA9PT1lLmZvcmNlV2FpdEdhdGV3YXlSZXNwb25zZXx8ZS5mb3JjZVdhaXRHYXRld2F5UmVzcG9uc2Usc3RhdHNDb2xsZWN0b3I6dGhpcy5fc3RhdHNDb2xsZWN0b3Iscm9sZTplLnJvbGUsY2xpZW50Um9sZU9wdGlvbnM6dH0pLHRoaXMuX2NvbmZpZ0Rpc3RyaWJ1dGU9bmV3IHRWLHRoaXMuc3RvcmUudXNlUDJQPyh0aGlzLl9wMnBDaGFubmVsPW5ldyBiRih0aGlzLnN0b3JlLHRoaXMuX3N0YXRzQ29sbGVjdG9yKSx0aGlzLl9oYW5kbGVQMlBFdmVudHMoKSk6dGhpcy5fcDJwQ2hhbm5lbD1uZXcgZkIodGhpcy5zdG9yZSx0aGlzLl9zdGF0c0NvbGxlY3RvciksdGhpcy5faGFuZGxlUDJQQ2hhbm5lbEV2ZW50cygpLHRoaXMuX2hhbmRsZUdhdGV3YXlFdmVudHMoKSx0aGlzLl9oYW5kbGVHYXRld2F5U2lnbmFsRXZlbnRzKCl9YXN5bmMgam9pbk1ldGEoZSx0LGksbixyKXtsZXQgbz0hKGFyZ3VtZW50cy5sZW5ndGg+NSYmdm9pZCAwIT09YXJndW1lbnRzWzVdKXx8YXJndW1lbnRzWzVdLHM9YXJndW1lbnRzLmxlbmd0aD42JiZ2b2lkIDAhPT1hcmd1bWVudHNbNl0mJmFyZ3VtZW50c1s2XTtKQShcIkpPSU5fR0FURVdBWV9VU0VfNDQzUE9SVF9PTkxZXCIsbyksSkEoXCJKT0lOX0dBVEVXQVlfVVNFX0RVQUxfRE9NQUlOXCIscyk7Y29uc3QgYT10aGlzLl9nYXRld2F5LnNpZ25hbC53ZWJzb2NrZXQ7cmV0dXJuIGEgaW5zdGFuY2VvZiBXTyYmKGEudXNlNDQzUG9ydE9ubHk9byxhLnRyeURvdWJsZURvbWFpbj1zKSxhc3luYyBmdW5jdGlvbihlLHQsaSl7VXYuZ2V0KGUpfHxVdi5zZXQoZSxbXSkseHYuZ2V0KGUpfHx4di5zZXQoZSx0KSxWdi5nZXQoZSl8fFZ2LnNldChlLDApO2NvbnN0IG49VXYuZ2V0KGUpLHI9eHYuZ2V0KGUpO2lmKCFufHwhcil0aHJvdyBuZXcgRXJyb3IoXCJjb25jdXJyZW50OiBkZWZlclF1ZXVlIG9yIG1heENvbmN1cnJlbmN5IGlzIG51bGxcIik7aWYoVnYuZ2V0KGUpPT09cil7Y29uc3QgZT1NdigpO24ucHVzaChlKSxhd2FpdCBlLnByb21pc2V9VnYuc2V0KGUsVnYuZ2V0KGUpKzEpO2Zvcih2YXIgbz1hcmd1bWVudHMubGVuZ3RoLHM9bmV3IEFycmF5KG8+Mz9vLTM6MCksYT0zO2E8bzthKyspc1thLTNdPWFyZ3VtZW50c1thXTtjb25zdCBjPWF3YWl0IGkoLi4ucyk7cmV0dXJuIFZ2LnNldChlLFZ2LmdldChlKS0xKSxWdi5nZXQoZSk9PT1yLTEmJm4ubGVuZ3RoPjAmJihuWzBdLnJlc29sdmUoKSxuLnNoaWZ0KCkpLDA9PT1Wdi5nZXQoZSkmJihVdi5zZXQoZSxbXSkseHYuc2V0KGUsMCksVnYuc2V0KGUsMCkpLGN9KFwiY2xpZW50LmpvaW5cIixYQShcIkpPSU5fTUFYX0NPTkNVUlJFTkNZXCIpLHRoaXMuam9pbi5iaW5kKHRoaXMpLGUsdCxpLG4scil9YXN5bmMgam9pbihlLHQsaSxuLHIpe2NvbnN0IG89Kyt0aGlzLl9udW1iZXJPZkpvaW5Db3VudDt0aGlzLnN0b3JlLmpvaW5TdGFydCgpLG4mJih0aGlzLnN0b3JlLnVpZD1uKTtjb25zdCBzPVwiSFRUUFNcIj09PShVQXx8VUF8fChVQT0od2luZG93LmxvY2F0aW9uLnByb3RvY29sLnNwbGl0KFwiOlwiKVswXXx8XCJcIikudG9VcHBlckNhc2UoKSxVQSkpLGE9akEoKT93aW5kb3cuaXNTZWN1cmVDb250ZXh0OlwiQnJvd3NlciBOb3QgU3VwcG9ydFwiO2lmKCFqQSgpJiYhc3x8IXdpbmRvdy5pc1NlY3VyZUNvbnRleHQpe2NvbnN0IGU9XCJUaGUgd2Vic2l0ZSBtdXN0IGJlIHJ1bm5pbmcgaW4gYSBzZWN1cmUgY29udGV4dCAoQWJvdXQgc2VjdXJlIGNvbnRleHQ6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL1NlY3VyaXR5L1NlY3VyZV9Db250ZXh0cyApLCBvdGhlcndpc2UgdGhlIG1lZGlhIGNvbGxlY3Rpb24gd2lsbCBiZSByZXN0cmljdGVkIGJ5IHRoZSBicm93c2VyXCI7ZmIud2FybmluZyhlKX1cIkRJU0NPTk5FQ1RFRFwiPT09dGhpcy5jb25uZWN0aW9uU3RhdGUmJih0aGlzLnN0b3JlLmF2b2lkSm9pblN0YXJ0PU1hdGgucm91bmQoRGF0ZS5ub3coKSksZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBzZXQgYXZvaWRKb2luU3RhcnQgdG8gXCIpLmNvbmNhdCh0aGlzLnN0b3JlLmF2b2lkSm9pblN0YXJ0KSkpLHZiLnNldEFwcElkKGUpO3RyeXtpZighaSYmbnVsbCE9PWkpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfUEFSQU1TLFwiSW52YWxpZCB0b2tlbjogXCIuY29uY2F0KGksXCIuIElmIHlvdSBkb24gbm90IHVzZSB0b2tlbiwgc2V0IGl0IHRvIG51bGxcIikpO2kmJmJ5KGksXCJ0b2tlblwiLDEsMjA0NyksYnkoZSxcImFwcGlkXCIsMSwyMDQ3KSx4dyh0KSxuJiZWdyhuKSxyJiZieShyLFwib3B0aW9uYWxJbmZvXCIsMSwyMDQ3KX1jYXRjaChyKXt0aHJvdyB2Yi5yZXBvcnRBcGlJbnZva2UoU0EoKSx7bmFtZTpCeS5KT0lOLG9wdGlvbnM6W2UsdCxpLG5dLHN0YXRlczp7aXNIdHRwczpzLGlzU2VjdXJlQ29udGV4dDphfSx0YWc6ankuVFJBQ0VSfSkub25FcnJvcihyKSxyfWlmKHRoaXMuX2xlYXZlTXV0ZXguaXNMb2NrZWQpe2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gam9pbjogd2FpdGluZyBsZWF2ZSBvcGVyYXRpb25cIikpOyhhd2FpdCB0aGlzLl9sZWF2ZU11dGV4LmxvY2soKSkoKSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGpvaW46IGNvbnRpbnVlXCIpKX1pZih0aGlzLl9qb2luQW5kTm90TGVhdmVZZXQ9ITAsXCJESVNDT05ORUNURURcIiE9PXRoaXMuY29ubmVjdGlvblN0YXRlKXtjb25zdCByPW5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIENsaWVudCBhbHJlYWR5IGluIGNvbm5lY3RpbmcvY29ubmVjdGVkIHN0YXRlXCIpKTt0aHJvdyB2Yi5yZXBvcnRBcGlJbnZva2UoU0EoKSx7bmFtZTpCeS5KT0lOLG9wdGlvbnM6W2UsdCxpLG5dLHN0YXRlczp7aXNIdHRwczpzLGlzU2VjdXJlQ29udGV4dDphfSx0YWc6ankuVFJBQ0VSfSkub25FcnJvcihyKSxyfXRoaXMuX2dhdGV3YXkuc3RhdGU9XCJDT05ORUNUSU5HXCI7Y29uc3QgYz1hd2FpdCBZQih7YXBwSWQ6ZSxjbmFtZTp0LHVpZDpuLHN0cmluZ1VpZDpcInN0cmluZ1wiPT10eXBlb2Ygbj9uOnZvaWQgMCx0b2tlbjppfHxlLGNsb3VkUHJveHlTZXJ2ZXI6dGhpcy5fY2xvdWRQcm94eVNlcnZlck1vZGV9KTtpZighdGhpcy5fam9pbkFuZE5vdExlYXZlWWV0KXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIENsaWVudCBhbHJlYWR5IGxlZnRcIikpO2NvbnN0IGQ9KG51bGw9PWM/dm9pZCAwOmMuc2lkKXx8U0EoKTtmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gc3RhcnQgam9pbiBjaGFubmVsIFwiKS5jb25jYXQodCxcIiwgam9pbiBudW1iZXI6IFwiKS5jb25jYXQobykpLHRoaXMuX3Nlc3Npb25JZHx8KHRoaXMuX3Nlc3Npb25JZD1kLHRoaXMuc3RvcmUuc2Vzc2lvbklkPXRoaXMuX3Nlc3Npb25JZCk7Y29uc3QgbD12Yi5yZXBvcnRBcGlJbnZva2UoZCx7bmFtZTpCeS5KT0lOLG9wdGlvbnM6W2UsdCxpLG5dLHN0YXRlczp7aXNIdHRwczpzLGlzU2VjdXJlQ29udGV4dDphfSx0YWc6ankuVFJBQ0VSfSksdT1JRyhJRyhJRyh7fSx0aGlzLl9ydG1Db25maWcpLHt9LHtjbGllbnRJZDp0aGlzLl9jbGllbnRJZCxhcHBJZDplLHNpZDp0aGlzLl9zZXNzaW9uSWQsY25hbWU6dCx1aWQ6XCJzdHJpbmdcIiE9dHlwZW9mIG4/bjpudWxsLHR1cm5TZXJ2ZXI6dGhpcy5fdHVyblNlcnZlcixwcm94eVNlcnZlcjp0aGlzLl9wcm94eVNlcnZlcix0b2tlbjppfHxlLGNsb3VkUHJveHlTZXJ2ZXI6dGhpcy5fY2xvdWRQcm94eVNlcnZlck1vZGUsb3B0aW9uYWxJbmZvOnIsbGljZW5zZTp0aGlzLl9saWNlbnNlLHVzZUxvY2FsQWNjZXNzUG9pbnQ6dGhpcy5fdXNlTG9jYWxBY2Nlc3NQb2ludCxwcmVsb2FkOiEhY30sdm9pZCAwIT09dGhpcy5fcmVtb3RlRGVmYXVsdFZpZGVvU3RyZWFtVHlwZSYme2RlZmF1bHRWaWRlb1N0cmVhbTp0aGlzLl9yZW1vdGVEZWZhdWx0VmlkZW9TdHJlYW1UeXBlfSkse30se2FwUmVxdWVzdERldGFpbDpYQShcIkFQX1JFUVVFU1RfREVUQUlMXCIpfHx2b2lkIDB9KTtpZih0aGlzLl91c2VMb2NhbEFjY2Vzc1BvaW50JiYodS5zZXRMb2NhbEFQVmVyc2lvbj10aGlzLl9zZXRMb2NhbEFQVmVyc2lvbiksXCJzdHJpbmdcIj09dHlwZW9mIG4mJih1LnN0cmluZ1VpZD1uLHRoaXMuX3VpbnRVaWQ/KHUudWlkPXRoaXMuX3VpbnRVaWQsdGhpcy5fdWludFVpZD12b2lkIDApOnUudWlkPTApLFwibm9uZVwiIT09dGhpcy5fZW5jcnlwdGlvbk1vZGUmJnRoaXMuX2VuY3J5cHRpb25TZWNyZXQpe2lmKHUuYWVzbW9kZT10aGlzLl9lbmNyeXB0aW9uTW9kZSx1LmFlc3Bhc3N3b3JkPWF3YWl0KGFzeW5jIGU9Pntjb25zdCB0PWZ1bmN0aW9uKGUpe2NvbnN0IHQ9d2luZG93LmF0b2IoXCJNSUdmTUEwR0NTcUdTSWIzRFFFQkFRVUFBNEdOQURDQmlRS0JnUURDTW5YQUhrS0lHQU0reDROMjJnQ0krV3l1XFxuU1RNOXp0a1QzdVlzbFRUMlB1S21aZlB6aEg2a1ZkTzdQVGpHQ09abkFzeWIzb1R0V2F0MEtjeFE0anh2cVFWK1xcbkh2WWwzaUkxWWQ0dmwyYzNxUk1KUEx0UkRmTnhhMk1jeGdxN2U5YUVVaWJ6ZGQwc3QrT0pBeTN0T2ovWTBhVnlcXG54UWlZRHozdnFhNmJQMjlhZHdJREFRQUJcIiksaT1uZXcgVWludDhBcnJheShuZXcgQXJyYXlCdWZmZXIodC5sZW5ndGgpKTtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrPTEpaVtlXT10LmNoYXJDb2RlQXQoZSk7cmV0dXJuIGl9KCksaT1hd2FpdCB3aW5kb3cuY3J5cHRvLnN1YnRsZS5pbXBvcnRLZXkoXCJzcGtpXCIsdCx7bmFtZTpcIlJTQS1PQUVQXCIsaGFzaDpcIlNIQS0yNTZcIn0sITAsW1wiZW5jcnlwdFwiXSksbj1reShlKSxyPWF3YWl0IHdpbmRvdy5jcnlwdG8uc3VidGxlLmVuY3J5cHQoe25hbWU6XCJSU0EtT0FFUFwifSxpLG4pO3JldHVybiBmdW5jdGlvbihlKXtsZXQgdD1cIlwiO2ZvcihsZXQgaT0wO2k8ZS5sZW5ndGg7aSs9MSl0Kz1TdHJpbmcuZnJvbUNoYXJDb2RlKGVbaV0pO3JldHVybiB3aW5kb3cuYnRvYSh0KX0obmV3IFVpbnQ4QXJyYXkocikpfSkodGhpcy5fZW5jcnlwdGlvblNlY3JldCksIXRoaXMuX2pvaW5BbmROb3RMZWF2ZVlldCl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBDbGllbnQgYWxyZWFkeSBsZWZ0XCIpKTt0aGlzLl9lbmNyeXB0aW9uU2FsdCYmKHUuYWVzc2FsdD10aGlzLl9lbmNyeXB0aW9uU2FsdCl9aWYodGhpcy5fZW5jcnlwdERhdGFTdHJlYW0mJihcImFlcy0xMjgtZ2NtMlwiPT09dGhpcy5fZW5jcnlwdGlvbk1vZGV8fFwiYWVzLTI1Ni1nY20yXCI9PT10aGlzLl9lbmNyeXB0aW9uTW9kZSkpaWYodGhpcy5fZW5jcnlwdGlvblNhbHQmJnRoaXMuX2VuY3J5cHRpb25TZWNyZXQpaWYod2luZG93LmNyeXB0by5zdWJ0bGUpe2NvbnN0IGU9bmV3IFRleHRFbmNvZGVyLHQ9WEEoXCJVU0VfUFVSRV9FTkNSWVBUSU9OX01BU1RFUl9LRVlcIik/ZS5lbmNvZGUodS5hcHBJZCt0aGlzLl9lbmNyeXB0aW9uU2VjcmV0K3RoaXMuX2VuY3J5cHRpb25TZWNyZXQpOmUuZW5jb2RlKHUuYXBwSWQrdS5jbmFtZSt0aGlzLl9lbmNyeXB0aW9uU2VjcmV0KTt0aGlzLl9lbmNyeXB0RGF0YVN0cmVhbUl2PWF3YWl0IGFzeW5jIGZ1bmN0aW9uKGUsdCxpKXtjb25zdCBuPWF3YWl0IHdpbmRvdy5jcnlwdG8uc3VidGxlLmltcG9ydEtleShcInJhd1wiLHQsXCJQQktERjJcIiwhMSxbXCJkZXJpdmVCaXRzXCIsXCJkZXJpdmVLZXlcIl0pLHI9XCJhZXMtMTI4LWdjbTJcIj09PWU/MTI4OjI1NixvPWF3YWl0IHdpbmRvdy5jcnlwdG8uc3VidGxlLmRlcml2ZUJpdHMoe25hbWU6XCJQQktERjJcIixpdGVyYXRpb25zOm5iLGhhc2g6XCJTSEEtMjU2XCIsc2FsdDppfSxuLHIraWIpO3JldHVybiBuZXcgVWludDhBcnJheShvKS5zdWJhcnJheShyLzgpfSh0aGlzLl9lbmNyeXB0aW9uTW9kZSx0LGxBKHRoaXMuX2VuY3J5cHRpb25TYWx0KSksdGhpcy5fZW5jcnlwdERhdGFTdHJlYW1LZXk9YXdhaXQgYXN5bmMgZnVuY3Rpb24oZSx0LGkpe2NvbnN0IG49YXdhaXQgd2luZG93LmNyeXB0by5zdWJ0bGUuaW1wb3J0S2V5KFwicmF3XCIsdCxcIlBCS0RGMlwiLCExLFtcImRlcml2ZUJpdHNcIixcImRlcml2ZUtleVwiXSkscj1cImFlcy0xMjgtZ2NtMlwiPT09ZT8xMjg6MjU2O3JldHVybiBhd2FpdCB3aW5kb3cuY3J5cHRvLnN1YnRsZS5kZXJpdmVLZXkoe25hbWU6XCJQQktERjJcIixpdGVyYXRpb25zOm5iLGhhc2g6XCJTSEEtMjU2XCIsc2FsdDppfSxuLHtuYW1lOlwiQUVTLUdDTVwiLGxlbmd0aDpyfSwhMCxbXCJlbmNyeXB0XCIsXCJkZWNyeXB0XCJdKX0odGhpcy5fZW5jcnlwdGlvbk1vZGUsdCxsQSh0aGlzLl9lbmNyeXB0aW9uU2FsdCkpfWVsc2UgYT9mYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gZW5jcnlwdCBkYXRhc3RyZWFtIG11c3QgYmUgcnVubmluZyBpbiBhIHNlY3VyZSBjb250ZXh0LCBmYWxsYmFjayB0byBwbGFpbiBkYXRhIHN0cmVhbVwiKSk6ZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGN1cnJlbnQgYnJvd3NlciBkbyBub3Qgc3VwcG9ydCBXZWJDcnlwdG8gLGZhbGxiYWNrIHRvIHBsYWluIGRhdGEgc3RyZWFtXCIpKSx0aGlzLl9lbmNyeXB0RGF0YVN0cmVhbT0hMTtlbHNlIHRoaXMuX2VuY3J5cHREYXRhU3RyZWFtPSExLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gbm8gc2FsdCAvIHNlY3JldCwgY2Fubm90IHN1cHBvcnQgZW5jcnlwdCBkYXRhIHN0cmVhbSwgZmFsbGJhY2sgdG8gcGxhaW4gZGF0YSBzdHJlYW1cIikpO3RoaXMuX3N0YXJ0U2Vzc2lvbih0aGlzLl9zZXNzaW9uSWQse2NoYW5uZWw6dCxhcHBJZDplLHN0cmluZ1VpZDp1LnN0cmluZ1VpZH0pO2NvbnN0IGg9dGhpcy5fc2Vzc2lvbklkO3NldFRpbWVvdXQoKCgpPT57XCJDT05ORUNUSU5HXCI9PT10aGlzLmNvbm5lY3Rpb25TdGF0ZSYmaD09PXRoaXMuX3Nlc3Npb25JZCYmdmIuam9pbkNoYW5uZWxUaW1lb3V0KHRoaXMuX3Nlc3Npb25JZCw1KX0pLDVlMyk7dHJ5e3ZhciBwO2xldCBuO2NvbnN0IHI9dS5jbG91ZFByb3h5U2VydmVyO2lmKERuKHA9W1wicHJveHkzXCIsXCJwcm94eTRcIixcInByb3h5NVwiXSkuY2FsbChwLHIpKXtjb25zdCBlPVhBKFwiUFJPWFlfU0VSVkVSX1RZUEUzXCIpO0FycmF5LmlzQXJyYXkoZSk/dS5wcm94eVNlcnZlcj1lWzBdOnUucHJveHlTZXJ2ZXI9ZX1pZih2Yi5zZXRQcm94eVNlcnZlcih1LnByb3h5U2VydmVyKSxmYi5zZXRQcm94eVNlcnZlcih1LnByb3h5U2VydmVyKSx0aGlzLnN0b3JlLnJlcXVlc3RBUFN0YXJ0KCksYyl7aWYoZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBnZXQgc2VydmVySW5mbyBTdWNjZXNzIGZyb20gUHJlbG9hZCBDYWNoZSBcIikuY29uY2F0KHUuc3RyaW5nVWlkP1wiLCBcIi5jb25jYXQodS5zdHJpbmdVaWQsXCIgPT4gXCIpLmNvbmNhdChjLmludFVpZCk6XCJcIixcIiBcIikpLHUuc3RyaW5nVWlkJiYhdS51aWQmJih1LnVpZD1jLmludFVpZCksbj17Z2F0ZXdheUluZm86Yy5hcC5nYXRld2F5SW5mb30sWEEoXCJKT0lOX1dJVEhfRkFMTEJBQ0tfTUVESUFfUFJPWFlcIikmJlwiYXV0b1wiPT09dS50dXJuU2VydmVyLm1vZGUpaWYoMD09PWMuYXAucHJveHlJbmZvLmFkZHJlc3Nlcy5sZW5ndGgpZmIud2FybmluZyhcIm5vIGVkZ2Ugc2VydmljZXMgaW4gYXAgcmVzcG9uc2Ugb2YgcHJveHkgZmFsbGJhY2ssIHdpbGwgbm90IHNldCBwcm94eSBpbiBpY2VTZXJ2ZXJzXCIpO2Vsc2V7Y29uc3QgZT0oYXdhaXQgdE4oYy5hcC5wcm94eUluZm8sYy5hcC5nYXRld2F5SW5mby51aWQpKS5tYXAoKGU9Pih7dHVyblNlcnZlclVSTDplLmFkZHJlc3MsdGNwcG9ydDplLnRjcHBvcnR8fEtBLnRjcHBvcnQsdWRwcG9ydDplLnVkcHBvcnR8fEtBLnVkcHBvcnQsdXNlcm5hbWU6ZS51c2VybmFtZXx8S0EudXNlcm5hbWUscGFzc3dvcmQ6ZS5wYXNzd29yZHx8S0EucGFzc3dvcmQsZm9yY2V0dXJuOiExLHNlY3VyaXR5OiEwfSkpKTt1LnR1cm5TZXJ2ZXI9e21vZGU6XCJtYW51YWxcIixzZXJ2ZXJzOmV9fVhCKGMsdS5zdHJpbmdVaWQpfWVsc2V7aWYodS5zdHJpbmdVaWQmJiF1LnVpZCl7bGV0IGU7W2Usbl09YXdhaXQgR2guYWxsKFtZeCh1LnN0cmluZ1VpZCx1LHRoaXMuX2F4aW9zQ2FuY2VsU291cmNlLnRva2VuLHRoaXMuX2NvbmZpZy5odHRwUmV0cnlDb25maWd8fFBBLHRoaXMuc3RvcmUpLEt4KHUsdGhpcy5fYXhpb3NDYW5jZWxTb3VyY2UudG9rZW4sdGhpcy5fY29uZmlnLmh0dHBSZXRyeUNvbmZpZ3x8UEEsITAsdGhpcy5zdG9yZSldKSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGdldFVzZXJBY2NvdW50IFN1Y2Nlc3MgXCIpLmNvbmNhdCh1LnN0cmluZ1VpZCxcIiA9PiBcIikuY29uY2F0KGUpKSx1LnVpZD1lLG4uZ2F0ZXdheUluZm8udWlkPWUsbi5nYXRld2F5SW5mby5yZXMudWlkPWV9ZWxzZSBuPWF3YWl0IEt4KHUsdGhpcy5fYXhpb3NDYW5jZWxTb3VyY2UudG9rZW4sdGhpcy5fY29uZmlnLmh0dHBSZXRyeUNvbmZpZ3x8UEEsITAsdGhpcy5zdG9yZSk7aWYoIXRoaXMuX2pvaW5BbmROb3RMZWF2ZVlldCl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBDbGllbnQgYWxyZWFkeSBsZWZ0XCIpKX10aGlzLnN0b3JlLnJlcXVlc3RBUEVuZCgpLHNldFRpbWVvdXQoKCgpPT57dGhpcy5fY29uZmlnRGlzdHJpYnV0ZS5zdGFydEdldENvbmZpZ0Rpc3RyaWJ1dGUodSx0aGlzLl9heGlvc0NhbmNlbFNvdXJjZS50b2tlbiksdGhpcy5fY29uZmlnRGlzdHJpYnV0ZS5vbihzTy5VUERBVEVfQklUUkFURV9MSU1JVCwoZT0+e3RoaXMuX3AycENoYW5uZWwudXBkYXRlQml0cmF0ZUxpbWl0KGUpfSkpfSksMCksdGhpcy5fa2V5PWl8fGU7Y29uc3Qgbz1uLmdhdGV3YXlJbmZvLHM9dS51aWQ/dS51aWQ6by51aWQ7dGhpcy5fam9pbkluZm89SUcoSUcoe30sdSkse30se2NpZDpvLmNpZCx1aWQ6cyx2aWQ6by52aWQsYXBSZXNwb25zZTpvLnJlcyxhcEdhdGV3YXlBZGRyZXNzOm8uYXBHYXRld2F5QWRkcmVzcyx1bmlfbGJzX2lwOm8udW5pX2xic19pcCxnYXRld2F5QWRkcnM6by5nYXRld2F5QWRkcnN9KSx0aGlzLnN0b3JlLmludFVpZD1zO2NvbnN0IGE9YXdhaXQgdGhpcy5fam9pbkdhdGV3YXkoKTtpZighdGhpcy5fam9pbkFuZE5vdExlYXZlWWV0KXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIENsaWVudCBhbHJlYWR5IGxlZnRcIikpO2wub25TdWNjZXNzKGEpLHRoaXMuX2FwcElkPWUsdGhpcy5fY2hhbm5lbE5hbWU9dS5jbmFtZSx0aGlzLl91aWQ9YSx0aGlzLnN0b3JlLnVpZD1hLHNldFRpbWVvdXQoKCgpPT57dGhpcy5fbmV0d29ya1F1YWxpdHlJbnRlcnZhbCYmd2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy5fbmV0d29ya1F1YWxpdHlJbnRlcnZhbCksdGhpcy5fbmV0d29ya1F1YWxpdHlJbnRlcnZhbD13aW5kb3cuc2V0SW50ZXJ2YWwodGhpcy5faGFuZGxlVXBkYXRlTmV0d29ya1F1YWxpdHksMmUzKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihYdigpP1wiYmVmb3JldW5sb2FkXCI6XCJwYWdlaGlkZVwiLHRoaXMuX2hhbmRsZUJlZm9yZVVubG9hZCksdGhpcy5fc3RhdHNDb2xsZWN0b3Iuc3RhcnRVcGRhdGVTdGF0cygpfSksMCk7Y29uc3QgZD11LnN0cmluZ1VpZD9cInN0cmluZyB1aWQ6IFwiLmNvbmNhdCh1LnN0cmluZ1VpZCxcIix1aWQ6IFwiKS5jb25jYXQodS51aWQpOlwidWlkOiBcIi5jb25jYXQodGhpcy5fdWlkKTtyZXR1cm4gZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIEpvaW5pbmcgY2hhbm5lbCBzdWNjZXNzOiBjaGFubmVsOiBcIikuY29uY2F0KHQsXCIsXCIpLmNvbmNhdChkKSksc2V0VGltZW91dCgoKCk9PntmYi5zdGFydFVwbG9hZCgpfSksNWUzKSx0aGlzLnN0b3JlLmpvaW5FbmQoKSxfPXRoaXMsRG4od2IpLmNhbGwod2IsXyl8fHdiLnB1c2goXyksXCJkaXNhYmxlZFwiPT09dGhpcy5fY2xvdWRQcm94eVNlcnZlck1vZGUmJlpQKCkuc3VwcG9ydFdlYkNyeXB0byYmWEEoXCJFTkFCTEVfUFJFTE9BRFwiKSYmekIodGhpcy5fam9pbkluZm8pLGF9Y2F0Y2goZSl7Y29uc3QgdD1BcnJheS5pc0FycmF5KGUpP2VbMF06ZTt0aHJvdyB0JiZ0LmNvZGU9PT1SeS5PUEVSQVRJT05fQUJPUlRFRD9mYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gam9pbiBudW1iZXI6IFwiKS5jb25jYXQobyxcIiwgSm9pbmluZyBjaGFubmVsIGZhaWxlZCwgcm9sbGJhY2tcIiksdCk6ZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBqb2luIG51bWJlcjogXCIpLmNvbmNhdChvLFwiLCBKb2luaW5nIGNoYW5uZWwgZmFpbGVkLCByb2xsYmFja1wiKSx0KSx0LmNvZGUhPT1SeS5PUEVSQVRJT05fQUJPUlRFRCYmdGhpcy5fbnVtYmVyT2ZKb2luQ291bnQ9PT1vJiYodGhpcy5fZ2F0ZXdheS5zdGF0ZT1cIkRJU0NPTk5FQ1RFRFwiLHRoaXMuX3Jlc2V0KCkpLGwub25FcnJvcih0KSx0fXZhciBffV9qb2luR2F0ZXdheSgpe2lmKCF0aGlzLl9qb2luSW5mb3x8IXRoaXMuX2tleSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04pO3JldHVybiB0aGlzLl9nYXRld2F5LmpvaW4odGhpcy5fam9pbkluZm8sdGhpcy5fa2V5LCEoXCJkaXNhYmxlZFwiIT09dGhpcy5fam9pbkluZm8uY2xvdWRQcm94eVNlcnZlcnx8dGhpcy5fam9pbkluZm8ucHJveHlTZXJ2ZXJ8fCFYQShcIkpPSU5fV0lUSF9GQUxMQkFDS19TSUdOQUxfUFJPWFlcIikpKX1hc3luYyBsZWF2ZSgpe2ZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBMZWF2aW5nIGNoYW5uZWxcIikpLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFh2KCk/XCJiZWZvcmV1bmxvYWRcIjpcInBhZ2VoaWRlXCIsdGhpcy5faGFuZGxlQmVmb3JlVW5sb2FkKSx0aGlzLl9yZXNldCgpLGZ1bmN0aW9uKGUpe2NvbnN0IHQ9d2IuaW5kZXhPZihlKTstMSE9PXQmJndiLnNwbGljZSh0LDEpfSh0aGlzKSx0aGlzLl9zdGF0c0NvbGxlY3Rvci5zdG9wVXBkYXRlU3RhdHMoKTtjb25zdCBlPWF3YWl0IHRoaXMuX2xlYXZlTXV0ZXgubG9jaygpO2lmKFwiRElTQ09OTkVDVEVEXCI9PT10aGlzLmNvbm5lY3Rpb25TdGF0ZSlyZXR1cm4gZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIExlYXZpbmcgY2hhbm5lbCByZXBlYXRlZCwgc3VjY2Vzc1wiKSksdm9pZCBlKCk7YXdhaXQgdGhpcy5fZ2F0ZXdheS5sZWF2ZShcIkNPTk5FQ1RFRFwiIT09dGhpcy5jb25uZWN0aW9uU3RhdGUpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBMZWF2aW5nIGNoYW5uZWwgc3VjY2Vzc1wiKSksdGhpcy5fam9pbkFuZE5vdExlYXZlWWV0PSExLHRoaXMuc3RvcmUucmVzZXRKb2luQ2hhbm5lbFNlcnZpY2VSZWNvcmRzKCksZSgpfWFzeW5jIHB1Ymxpc2goZSl7bGV0IHQ9IShhcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXSl8fGFyZ3VtZW50c1sxXTtpZighQXJyYXkuaXNBcnJheShlKSl7aWYoIShlIGluc3RhbmNlb2YgSEwpKXJldHVybiB0aGlzLl9wdWJsaXNoRGF0YUNoYW5uZWwoZSk7ZT1bZV19aWYoMD09PWUubGVuZ3RoKXRocm93IG5ldyB5YihSeS5JTlZBTElEX1BBUkFNUyxcInBhcmFtIGxpc3QgaXMgZW1wdHlcIik7Y29uc3QgaT1lO2lmKFwiYXVkaWVuY2VcIj09PXRoaXMuX2dhdGV3YXkucm9sZSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJhdWRpZW5jZSBjYW4gbm90IHB1Ymxpc2ggc3RyZWFtXCIpO2Zvcihjb25zdCBlIG9mIGkpe2lmKCEoZSBpbnN0YW5jZW9mIEhMKSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9QQVJBTVMsXCJwYXJhbWV0ZXIgaXMgbm90IGxvY2FsIHRyYWNrXCIpO2lmKCFlLl9lbmFibGVkJiZ0KXRocm93IG5ldyB5YihSeS5UUkFDS19JU19ESVNBQkxFRCxcImNhbiBub3QgcHVibGlzaCBhIGRpc2FibGVkIHRyYWNrOiBcIi5jb25jYXQoZS5nZXRUcmFja0lkKCkpKX1mYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gUHVibGlzaGluZyB0cmFja3MsIGlkIFwiKS5jb25jYXQoaS5tYXAoKGU9PlwiXCIuY29uY2F0KGUuZ2V0VHJhY2tJZCgpLFwiIFwiKSkpKSk7Y29uc3Qgbj1hd2FpdCB0aGlzLl9wdWJsaXNoTXV0ZXgubG9jaygpO2F3YWl0IHRoaXMuX2NvbmZpZ0Rpc3RyaWJ1dGUuYXdhaXRDb25maWdEaXN0cmlidXRlQ29tcGxldGUoKSx0JiZpLmZvckVhY2goKGU9Pntjb25zdCB0PXRoaXMuX2NvbmZpZ0Rpc3RyaWJ1dGUuZ2V0Qml0cmF0ZUxpbWl0KCk7ZSBpbnN0YW5jZW9mIGFVJiZ0JiZlLnNldEJpdHJhdGVMaW1pdCh0LnVwbGluayl9KSk7dHJ5e2F3YWl0IHRoaXMuX3B1Ymxpc2hIaWdoU3RyZWFtKGkpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBQdWJsaXNoIHN1Y2Nlc3MsIGlkIFwiKS5jb25jYXQoaS5tYXAoKGU9PlwiXCIuY29uY2F0KGUuZ2V0VHJhY2tJZCgpLFwiIFwiKSkpKSl9Y2F0Y2goZSl7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBwdWJsaXNoIGVycm9yXCIpLGUudG9TdHJpbmcoKSksZX1maW5hbGx5e24oKX19YXN5bmMgX3B1Ymxpc2hEYXRhQ2hhbm5lbChlKXt5eShlLmlkLFwiaWRcIiwwLDY1NTM1LCEwKSxJeShlLm9yZGVyZWQsXCJvcmRlcmVkXCIpLGJ5KGUubWV0YWRhdGEsXCJtZXRhZGF0YVwiLDAsNTEyKSxmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gUHVibGlzaGluZyBkYXRhY2hhbm5lbHMsIGlkIFwiKS5jb25jYXQoZS5pZCkpO2NvbnN0IHQ9YXdhaXQgdGhpcy5fcHVibGlzaE11dGV4LmxvY2soKTt0cnl7aWYoLTEhPT10aGlzLl9wMnBDaGFubmVsLmdldEFsbERhdGFDaGFubmVscygpLmZpbmRJbmRleCgodD0+dC5pZD09PWUuaWQpKSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9QQVJBTVMsXCJJbnZhbGlkIGlkOiBcIi5jb25jYXQoZS5pZCxcIi4gSWYgeW91IHdhbnQgdG8gcmVwdWJsaXNoIHRoZSBkYXRhY2hhbm5lbCwgdW5wdWJsaXNoIGZpcnN0XCIpKTtpZighdGhpcy5fam9pbkluZm98fHZvaWQgMD09PXRoaXMuX3VpZCl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJDYW4ndCBwdWJsaXNoIGRhdGFjaGFubmVsLCBoYXZlbid0IGpvaW5lZCB5ZXQhXCIpO2lmKFwiQ09OTkVDVEVEXCIhPT10aGlzLmNvbm5lY3Rpb25TdGF0ZSYmXCJSRUNPTk5FQ1RJTkdcIiE9PXRoaXMuY29ubmVjdGlvblN0YXRlKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcImNhbiBub3QgcHVibGlzaCBkYXRhY2hhbm5lbCBpbiBcIi5jb25jYXQodGhpcy5jb25uZWN0aW9uU3RhdGUsXCIgc3RhdGVcIikpO2lmKFwiYXV0b1wiPT09dGhpcy5fdHVyblNlcnZlci5tb2RlJiZYQShcIkZPUkNFX1RVUk5cIikmJiFYQShcIlRVUk5fRU5BQkxFX1RDUFwiKSYmIVhBKFwiVFVSTl9FTkFCTEVfVURQXCIpKXRocm93IG5ldyB5YihSeS5VTkVYUEVDVEVEX0VSUk9SLFwiZm9yY2UgVFVSTiBXaXRoIE5vIFRVUk4gQ29uZmlndXJhdGlvblwiKTtjb25zdCBpPWZ1bmN0aW9uKGUpe3JldHVybiBSQihlLCExKX0oZSksbj1hd2FpdCB0aGlzLl9wMnBDaGFubmVsLnB1Ymxpc2hEYXRhQ2hhbm5lbChbaV0pO2lmKG4ubGVuZ3RoPjApe2lmKFwibnVtYmVyXCIhPXR5cGVvZiBpLl9vcmlnaW5EYXRhQ2hhbm5lbElkKXRocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gY2FuIG5vdCBwdWJsaXNoIHdpdGggbWVkaWFUeXBlIGRhdGFjaGFubmVsLCBjYW5ub3QgZ2V0IFJUQ0RhdGFjaGFubmVsIGlkXCIpKSxuZXcgeWIoUnkuQ1JFQVRFX0RBVEFDSEFOTkVMX0VSUk9SKTt0cnl7YXdhaXQgR2guYWxsKG4ubWFwKChlPT50aGlzLl91aWQmJnRoaXMuX2dhdGV3YXkucHVibGlzaERhdGFDaGFubmVsKHRoaXMuX3VpZCxlLCEwKSkpKSxhd2FpdCBpLl93YWl0VGlsbE9wZW4oKX1jYXRjaChlKXtpZihlLmNvZGUhPT1SeS5ESVNDT05ORUNUX1AyUCl0aHJvdyBlfX1yZXR1cm4gZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIFB1Ymxpc2ggZGF0YUNoYW5uZWxzIHN1Y2Nlc3MsIGlkIFwiKS5jb25jYXQoaS5pZCkpLGl9Y2F0Y2goZSl7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBwdWJsaXNoIGRhdGFjaGFubmVscyBlcnJvclwiKSxlLnRvU3RyaW5nKCkpLGV9ZmluYWxseXt0KCl9fWFzeW5jIHVucHVibGlzaChlKXtpZighdGhpcy5fam9pbkluZm98fHZvaWQgMD09PXRoaXMuX3VpZCl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJDYW4ndCB1bnB1Ymxpc2ggc3RyZWFtLCBoYXZlbid0IGpvaW5lZCB5ZXQhXCIpO2xldCB0PVtdO2lmKGUpaWYoQXJyYXkuaXNBcnJheShlKSl0PWU7ZWxzZXtpZighKGUgaW5zdGFuY2VvZiBITCkpcmV0dXJuIHRoaXMuX3VucHVibGlzaERhdGFDaGFubmVsKFtlXSk7dD1bZV19ZWxzZSB0aGlzLnN0b3JlLnVzZVAyUHx8YXdhaXQgdGhpcy5fdW5wdWJsaXNoRGF0YUNoYW5uZWwoKSx0PXRoaXMuX3AycENoYW5uZWwuZ2V0QWxsVHJhY2tzKCEwKTtmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gVW5wdWJsaXNoIHRyYWNrcywgdHJhY2tzIFwiKS5jb25jYXQodC5tYXAoKGU9PlwiXCIuY29uY2F0KGUuZ2V0VHJhY2tJZCgpLFwiIFwiKSkpLFwiIFwiKSk7Y29uc3QgaT1hd2FpdCB0aGlzLl9wdWJsaXNoTXV0ZXgubG9jaygpO3RyeXtpZih0aGlzLl9wMnBDaGFubmVsIGluc3RhbmNlb2YgYkYpe2NvbnN0IGU9YXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC51bnB1Ymxpc2godCk7ZSYmYXdhaXQgdGhpcy5fZ2F0ZXdheS5zZW5kRXh0ZW5zaW9uTWVzc2FnZShJTy5VTlBVQkxJU0gse3VucHViTXNnOmV9LCEwKX1lbHNle2NvbnN0IGU9YXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC51bnB1Ymxpc2godCk7ZSYmYXdhaXQgdGhpcy5fZ2F0ZXdheS51bnB1Ymxpc2goZSx0aGlzLl91aWQpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBVbnB1Ymxpc2ggc3VjY2Vzcyx0cmFja3MgXCIpLmNvbmNhdCh0Lm1hcCgoZT0+XCJcIi5jb25jYXQoZS5nZXRUcmFja0lkKCkpKSkpKX19Y2F0Y2goZSl7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSB1bnB1Ymxpc2ggZXJyb3JcIiksZS50b1N0cmluZygpKSxlfWZpbmFsbHl7aSYmaSgpfX1hc3luYyBfdW5wdWJsaXNoRGF0YUNoYW5uZWwoZSl7dm9pZCAwIT09ZSYmMCE9PWUubGVuZ3RofHwoZT10aGlzLl9wMnBDaGFubmVsLmdldEFsbERhdGFDaGFubmVscygpKSxmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gVW5wdWJsaXNoIGRhdGFjaGFubmVscywgZGF0YWNoYW5uZWxzIFwiKS5jb25jYXQoZS5tYXAoKGU9PlwiXCIuY29uY2F0KGUuaWQsXCIgXCIpKSksXCIgXCIpKTtjb25zdCB0PWF3YWl0IHRoaXMuX3B1Ymxpc2hNdXRleC5sb2NrKCk7dHJ5e2NvbnN0IGk9YXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC51bnB1Ymxpc2hEYXRhQ2hhbm5lbChlKTtpJiZhd2FpdCB0aGlzLl9nYXRld2F5LnVucHVibGlzaERhdGFDaGFubmVsKGkpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBVbnB1Ymxpc2ggZGF0YUNoYW5uZWwgc3VjY2VzcyxkYXRhQ2hhbm5lbCBcIikuY29uY2F0KGUubWFwKChlPT5cIlwiLmNvbmNhdChlLmlkKSkpKSl9Y2F0Y2goZSl7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSB1bnB1Ymxpc2ggZGF0YUNoYW5uZWwgZXJyb3JcIiksZS50b1N0cmluZygpKSxlfWZpbmFsbHl7dCYmdCgpfX1hc3luYyBzdWJzY3JpYmUoZSx0LGkpe2lmKCEoZSBpbnN0YW5jZW9mIGNGKSl7Y29uc3QgdD10aGlzLnJlbW90ZVVzZXJzLmZpbmQoKHQ9PnQudWlkPT09ZSkpO2lmKCF0KXRocm93IG5ldyB5YihSeS5JTlZBTElEX1JFTU9URV9VU0VSLFwidXNlciBpcyBub3QgaW4gdGhlIGNoYW5uZWxcIik7ZT10fXJldHVyblwiZGF0YWNoYW5uZWxcIj09PXQ/dGhpcy5fc3Vic2NyaWJlRGF0YUNoYW5uZWwoZSxpKTp0aGlzLl9zdWJzY3JpYmUoZSx0KX1hc3luYyBwcmVzdWJzY3JpYmUoZSx0KXtpZih2eSh0LFwibWVkaWFUeXBlXCIsW1wiYXVkaW9cIixcInZpZGVvXCJdKSx0aGlzLl9wMnBDaGFubmVsIGluc3RhbmNlb2YgYkYpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiY2FuJ3QgcHJlc3ViIGF0IHAycCBtb2RlXCIpO2lmKCF0aGlzLl9qb2luSW5mbyl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJjYW4ndCBwcmVzdWIgd2hlbiBub3Qgam9pblwiKTtpZihcIkNPTk5FQ1RFRFwiIT09dGhpcy5jb25uZWN0aW9uU3RhdGUmJlwiUkVDT05ORUNUSU5HXCIhPT10aGlzLmNvbm5lY3Rpb25TdGF0ZSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJjYW4ndCBwcmVzdWIgaW4gXCIuY29uY2F0KHRoaXMuY29ubmVjdGlvblN0YXRlLFwiIHN0YXRlXCIpKTtjb25zdCBpPXQ9PT1kTy5BVURJTyxuPXQ9PT1kTy5WSURFTyxyPWF3YWl0IHRoaXMuX3N1YnNjcmliZU11dGV4LmxvY2soKTt0cnl7Y29uc3R7c3NyY0lkOm8sb3J0YzpzLHJ0eFNzcmNJZDphLGNuYW1lOmMsdWludF9pZDpkfT1hd2FpdCB0aGlzLl9nYXRld2F5LnByZXN1YnNjcmliZShlLHQsITApO2lmKG51bGw9PW8pdGhyb3cgbmV3IHliKFJ5LlVORVhQRUNURURfUkVTUE9OU0UsXCJubyBzc3JjIGlkXCIpO2xldCBsPXRoaXMuX3VzZXJzLmZpbmQoKHQ9PnQudWlkPT09ZSkpO2x8fChsPW5ldyBjRihlLGR8fGUpLGwuX2lzX3ByZV9jcmVhdGVkPSEwLHRoaXMuX3VzZXJzLnB1c2gobCkpLGMmJihsLl9jbmFtZT1jKSxsLl91aW50aWR8fChsLl91aW50aWQ9ZHx8ZSksaSYmKGwuX2F1ZGlvU1NSQz1vLGwuX2F1ZGlvX3ByZV9zdWJzY3JpYmVkPSEwLHMmJihsLl9hdWRpb09ydGM9cykpLG4mJihsLl92aWRlb1NTUkM9byxsLl92aWRlb19wcmVfc3Vic2NyaWJlZD0hMCxzJiYobC5fdmlkZW9PcnRjPXMpLG51bGwhPWEmJihsLl9ydHhTc3JjSWQ9YSkpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBwcmVzdWIgc3VjY2VlZCBzc3JjOiBcIikuY29uY2F0KG8pKSxhd2FpdCB0aGlzLl9wMnBDaGFubmVsLnN1YnNjcmliZShsLHQsbyxhLHMpO2NvbnN0IHU9aT9sLl9hdWRpb1RyYWNrOmwuX3ZpZGVvVHJhY2s7aWYoIXUpdGhyb3cgbmV3IHliKFJ5LlVORVhQRUNURURfRVJST1IsXCJjYW4gbm90IGZpbmQgcmVtb3RlIHRyYWNrIGluIHVzZXJcIik7cmV0dXJuIGkmJihsLl90cnVzdF9hdWRpb19zdHJlYW1fYWRkZWRfc3RhdGVfPSEwLGwuX2F1ZGlvX2FkZGVkXz0hMCksbiYmKGwuX3RydXN0X3ZpZGVvX3N0cmVhbV9hZGRlZF9zdGF0ZV89ITAsbC5fdmlkZW9fYWRkZWRfPSEwKSx1fWNhdGNoKHQpe3Rocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcHJlc3ViIHVzZXIgXCIpLmNvbmNhdChlLFwiIGVycm9yXCIpLHQpLHR9ZmluYWxseXtyKCl9fWFzeW5jIF9zdWJzY3JpYmVEYXRhQ2hhbm5lbChlLHQpe3ZhciBpO2lmKHl5KHQsXCJjaGFubmVsSWRcIiwwLDY1NTM1LCEwKSwhdGhpcy5fam9pbkluZm8pdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiQ2FuJ3Qgc3Vic2NyaWJlIGRhdGFjaGFubmVsLCBub3Qgam9pbmVkXCIpO2lmKFwiQ09OTkVDVEVEXCIhPT10aGlzLmNvbm5lY3Rpb25TdGF0ZSYmXCJSRUNPTk5FQ1RJTkdcIiE9PXRoaXMuY29ubmVjdGlvblN0YXRlKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcIkNhbid0IHN1YnNjcmliZSBkYXRhY2hhbm5lbCBpbiBcIi5jb25jYXQodGhpcy5jb25uZWN0aW9uU3RhdGUsXCIgc3RhdGVcIikpO2NvbnN0IG49dGhpcy5fdXNlcnMuZmluZCgodD0+dD09PWUpKTtpZighbil0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGNhbiBub3Qgc3Vic2NyaWJlIFwiKS5jb25jYXQoZS51aWQsXCIsIHRoaXMgdXNlciBpcyBub3QgaW4gdGhlIGNoYW5uZWxcIikpLG5ldyB5YihSeS5JTlZBTElEX1JFTU9URV9VU0VSLFwidXNlciBpcyBub3QgaW4gdGhlIGNoYW5uZWxcIik7aWYoIWUuaGFzQXVkaW8mJiFlLmhhc1ZpZGVvJiYwPT09ZS5fZGF0YUNoYW5uZWxzLmxlbmd0aCl0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGNhbiBub3Qgc3Vic2NyaWJlIFwiKS5jb25jYXQoZS51aWQsXCIsIHVzZXIgaXMgbm90IHB1Ymxpc2hlZFwiKSksbmV3IHliKFJ5LklOVkFMSURfUkVNT1RFX1VTRVIsXCJ1c2VyIGlzIG5vdCBwdWJsaXNoZWRcIik7Y29uc3Qgcj1udWxsPT09KGk9ZS5fZGF0YUNoYW5uZWxzKXx8dm9pZCAwPT09aT92b2lkIDA6aS5maW5kKChlPT5lLmlkPT09dCkpO2lmKCFyKXRocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gY2FuIG5vdCBzdWJzY3JpYmUgXCIpLmNvbmNhdChlLnVpZCxcIiB3aXRoIG1lZGlhVHlwZSBkYXRhY2hhbm5lbCwgcmVtb3RlIGRhdGFjaGFubmVsIGlzIG5vdCBwdWJsaXNoZWRcIikpLG5ldyB5YihSeS5SRU1PVEVfVVNFUl9JU19OT1RfUFVCTElTSEVEKTtjb25zdCBvPWF3YWl0IHRoaXMuX3N1YnNjcmliZU11dGV4LmxvY2soKTtmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gc3Vic2NyaWJlIHVzZXIgXCIpLmNvbmNhdChlLnVpZCxcIiwgbWVkaWFUeXBlOiBkYXRhY2hhbm5lbFwiKSk7dHJ5e2NvbnN0IHQ9YXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC5zdWJzY3JpYmVEYXRhQ2hhbm5lbChlLFtyXSk7aWYodCYmRG4odCkuY2FsbCh0LHIuaWQpKXRyeXt2YXIgcztpZihcIm51bWJlclwiIT10eXBlb2Ygci5fb3JpZ2luRGF0YUNoYW5uZWxJZCl0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGNhbiBub3Qgc3Vic2NyaWJlIFwiKS5jb25jYXQoZS51aWQsXCIgd2l0aCBtZWRpYVR5cGUgZGF0YWNoYW5uZWwsIGNhbm5vdCBnZXQgUlRDRGF0YWNoYW5uZWxcIikpLG5ldyB5YihSeS5DUkVBVEVfREFUQUNIQU5ORUxfRVJST1IpO2NvbnN0IHQ9e2lkOnIuaWQsZGF0YWNoYW5uZWxJZDpyLl9vcmlnaW5EYXRhQ2hhbm5lbElkLG9yZGVyZWQ6ci5vcmRlcmVkLG1heFJldHJhbnNtaXRzOnIubWF4UmV0cmFuc21pdHMsbWV0YWRhdGE6bnVsbCE9PShzPXIubWV0YWRhdGEpJiZ2b2lkIDAhPT1zP3M6XCJcIn07YXdhaXQgdGhpcy5fZ2F0ZXdheS5zdWJzY3JpYmVEYXRhQ2hhbm5lbChlLnVpZCx0LCEwKSxhd2FpdCByLl93YWl0VGlsbE9wZW4oKX1jYXRjaCh0KXtpZigobnVsbD09dD92b2lkIDA6dC5jb2RlKSE9PVJ5LldTX0FCT1JUKXRocm93IGF3YWl0IHRoaXMuX3AycENoYW5uZWwudW5zdWJzY3JpYmVEYXRhQ2hhbm5lbChlLFtyXSksdDthd2FpdCB0aGlzLl9wMnBDaGFubmVsLnVuc3Vic2NyaWJlRGF0YUNoYW5uZWwoZSxbcl0pLHRoaXMuX3AycENoYW5uZWwuc2V0UGVuZGluZ1JlbW90ZURhdGFDaGFubmVsKGUsci5pZCl9cmV0dXJuIGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBzdWJzY3JpYmUgc3VjY2VzcyB1c2VyIFwiKS5jb25jYXQoZS51aWQsXCIsIG1lZGlhVHlwZTogZGF0YWNoYW5uZWxcIikpLHJ9ZmluYWxseXtvKCl9fWFzeW5jIF9wMnBTdWJzY3JpYmUoZSx0LGkpe2lmKHZ5KHQsXCJtZWRpYVR5cGVcIixbXCJhdWRpb1wiLFwidmlkZW9cIl0pLCF0aGlzLl9qb2luSW5mbyl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJDYW4ndCBzdWJzY3JpYmUgc3RyZWFtLCBub3Qgam9pbmVkXCIpO2lmKFwiQ09OTkVDVEVEXCIhPT10aGlzLmNvbm5lY3Rpb25TdGF0ZSYmXCJSRUNPTk5FQ1RJTkdcIiE9PXRoaXMuY29ubmVjdGlvblN0YXRlKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcIkNhbid0IHN1YnNjcmliZSBzdHJlYW0gaW4gXCIuY29uY2F0KHRoaXMuY29ubmVjdGlvblN0YXRlLFwiIHN0YXRlXCIpKTtjb25zdCBuPXRoaXMuX3VzZXJzLmZpbmQoKHQ9PnQ9PT1lKSk7aWYoIW4pe2NvbnN0IHQ9bmV3IHliKFJ5LklOVkFMSURfUkVNT1RFX1VTRVIsXCJ1c2VyIGlzIG5vdCBpbiB0aGUgY2hhbm5lbFwiKTt0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGNhbiBub3Qgc3Vic2NyaWJlIFwiKS5jb25jYXQoZS51aWQsXCIsIHRoaXMgdXNlciBpcyBub3QgaW4gdGhlIGNoYW5uZWxcIikpLHR9aWYoIWUuaGFzQXVkaW8mJiFlLmhhc1ZpZGVvKXtjb25zdCB0PW5ldyB5YihSeS5JTlZBTElEX1JFTU9URV9VU0VSLFwidXNlciBpcyBub3QgcHVibGlzaGVkXCIpO3Rocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gY2FuIG5vdCBzdWJzY3JpYmUgXCIpLmNvbmNhdChlLnVpZCxcIiwgdXNlciBpcyBub3QgcHVibGlzaGVkXCIpKSx0fWlmKCFpJiYoXCJhdWRpb1wiPT09dCYmIWUuaGFzQXVkaW98fFwidmlkZW9cIj09PXQmJiFlLmhhc1ZpZGVvKSl7Y29uc3QgaT1uZXcgeWIoUnkuUkVNT1RFX1VTRVJfSVNfTk9UX1BVQkxJU0hFRCk7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBjYW4gbm90IHN1YnNjcmliZSBcIikuY29uY2F0KGUudWlkLFwiIHdpdGggbWVkaWFUeXBlIFwiKS5jb25jYXQodCxcIiwgcmVtb3RlIHRyYWNrIGlzIG5vdCBwdWJsaXNoZWRcIikpLGl9Y29uc3Qgcj1hd2FpdCB0aGlzLl9zdWJzY3JpYmVNdXRleC5sb2NrKCk7ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHN1YnNjcmliZSB1c2VyIFwiKS5jb25jYXQoZS51aWQsXCIsIG1lZGlhVHlwZTogXCIpLmNvbmNhdCh0KSk7dHJ5e2lmKGF3YWl0IHRoaXMuX3AycENoYW5uZWwuaGFzUmVtb3RlTWVkaWFXaXRoTG9jayhlLHQpKWF3YWl0IHRoaXMuX3AycENoYW5uZWwudW5tdXRlUmVtb3RlKGUsdCk7ZWxzZSB0cnl7Y29uc3QgaT1cImF1ZGlvXCI9PT10P2UuX2F1ZGlvU1NSQzplLl92aWRlb1NTUkMsbj1cImF1ZGlvXCI9PT10P2UuX2F1ZGlvTWlkOmUuX3ZpZGVvTWlkO3RoaXMuc3RvcmUuc3Vic2NyaWJlKGUudWlkLHQsRGF0ZS5ub3coKSksdGhpcy5fcDJwQ2hhbm5lbCBpbnN0YW5jZW9mIGJGJiZhd2FpdCB0aGlzLl9wMnBDaGFubmVsLnN1YnNjcmliZShlLHQsaSxuKX1jYXRjaChlKXt0aHJvdyBlfWZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBzdWJzY3JpYmUgc3VjY2VzcyB1c2VyIFwiKS5jb25jYXQoZS51aWQsXCIsIG1lZGlhVHlwZTogXCIpLmNvbmNhdCh0KSksdGhpcy5fZGVmYXVsdFN0cmVhbUZhbGxiYWNrVHlwZSYmdGhpcy5zZXRTdHJlYW1GYWxsYmFja09wdGlvbihlLnVpZCx0aGlzLl9kZWZhdWx0U3RyZWFtRmFsbGJhY2tUeXBlKS5jYXRjaCgoZT0+e2ZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBhdXRvIHNldCBmYWxsYmFjayBmYWlsZWRcIiksZSl9KSk7Y29uc3QgaT1cImF1ZGlvXCI9PT10P2UuX2F1ZGlvVHJhY2s6ZS5fdmlkZW9UcmFjaztpZighaSl0aHJvdyBuZXcgeWIoUnkuVU5FWFBFQ1RFRF9FUlJPUixcImNhbiBub3QgZmluZCByZW1vdGUgdHJhY2sgaW4gdXNlciBvYmplY3RcIik7cmV0dXJuIGl9Y2F0Y2godCl7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBzdWJzY3JpYmUgdXNlciBcIikuY29uY2F0KGUudWlkLFwiIGVycm9yXCIpLHQpLHR9ZmluYWxseXtyKCl9fWFzeW5jIF9zdWJzY3JpYmUoZSx0LGkpe2lmKHRoaXMuX3AycENoYW5uZWwgaW5zdGFuY2VvZiBiRilyZXR1cm4gdGhpcy5fcDJwU3Vic2NyaWJlKGUsdCk7aWYodnkodCxcIm1lZGlhVHlwZVwiLFtcImF1ZGlvXCIsXCJ2aWRlb1wiXSksIXRoaXMuX2pvaW5JbmZvKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcIkNhbid0IHN1YnNjcmliZSBzdHJlYW0sIG5vdCBqb2luZWRcIik7aWYoXCJDT05ORUNURURcIiE9PXRoaXMuY29ubmVjdGlvblN0YXRlJiZcIlJFQ09OTkVDVElOR1wiIT09dGhpcy5jb25uZWN0aW9uU3RhdGUpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiQ2FuJ3Qgc3Vic2NyaWJlIHN0cmVhbSBpbiBcIi5jb25jYXQodGhpcy5jb25uZWN0aW9uU3RhdGUsXCIgc3RhdGVcIikpO2NvbnN0IG49dGhpcy5fdXNlcnMuZmluZCgodD0+dD09PWUpKTtpZighbil7Y29uc3QgdD1uZXcgeWIoUnkuSU5WQUxJRF9SRU1PVEVfVVNFUixcInVzZXIgaXMgbm90IGluIHRoZSBjaGFubmVsXCIpO3Rocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gY2FuIG5vdCBzdWJzY3JpYmUgXCIpLmNvbmNhdChlLnVpZCxcIiwgdGhpcyB1c2VyIGlzIG5vdCBpbiB0aGUgY2hhbm5lbFwiKSksdH1pZighZS5oYXNBdWRpbyYmIWUuaGFzVmlkZW8pe2NvbnN0IHQ9bmV3IHliKFJ5LklOVkFMSURfUkVNT1RFX1VTRVIsXCJ1c2VyIGlzIG5vdCBwdWJsaXNoZWRcIik7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBjYW4gbm90IHN1YnNjcmliZSBcIikuY29uY2F0KGUudWlkLFwiLCB1c2VyIGlzIG5vdCBwdWJsaXNoZWRcIikpLHR9aWYoIShpfHwoXCJhdWRpb1wiIT09dHx8ZS5oYXNBdWRpbyYmdm9pZCAwIT09ZS5fYXVkaW9TU1JDKSYmKFwidmlkZW9cIiE9PXR8fGUuaGFzVmlkZW8mJnZvaWQgMCE9PWUuX3ZpZGVvU1NSQykpKXtjb25zdCBpPW5ldyB5YihSeS5SRU1PVEVfVVNFUl9JU19OT1RfUFVCTElTSEVEKTt0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGNhbiBub3Qgc3Vic2NyaWJlIFwiKS5jb25jYXQoZS51aWQsXCIgd2l0aCBtZWRpYVR5cGUgXCIpLmNvbmNhdCh0LFwiLCByZW1vdGUgdHJhY2sgaXMgbm90IHB1Ymxpc2hlZFwiKSksaX1sZXQgcj1cImF1ZGlvXCI9PT10P2UuX2F1ZGlvU1NSQzplLl92aWRlb1NTUkMsbz1cImF1ZGlvXCI9PT10P2UuX2F1ZGlvT3J0YzplLl92aWRlb09ydGMscz1cInZpZGVvXCI9PT10P2UuX3J0eFNzcmNJZDp2b2lkIDAsYT17c3RyZWFtX3R5cGU6XCJhdWRpb1wiPT09dD9kTy5BVURJTzpkTy5WSURFTyxzc3JjSWQ6cn07Y29uc3QgYz1hd2FpdCB0aGlzLl9zdWJzY3JpYmVNdXRleC5sb2NrKCk7ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHN1YnNjcmliZSB1c2VyIFwiKS5jb25jYXQoZS51aWQsXCIsIG1lZGlhVHlwZTogXCIpLmNvbmNhdCh0KSk7dHJ5e2lmKGF3YWl0IHRoaXMuX3AycENoYW5uZWwuaGFzUmVtb3RlTWVkaWFXaXRoTG9jayhlLHQpKWF3YWl0IHRoaXMuX3AycENoYW5uZWwudW5tdXRlUmVtb3RlKGUsdCk7ZWxzZSB0cnl7Y29uc3QgaT1cImF1ZGlvXCI9PT10P2UuX2F1ZGlvU1NSQzplLl92aWRlb1NTUkM7dm9pZCAwIT09aSYmaSE9PXImJihyPWksbz1cImF1ZGlvXCI9PT10P2UuX2F1ZGlvT3J0YzplLl92aWRlb09ydGMscz1cInZpZGVvXCI9PT10P2UuX3J0eFNzcmNJZDp2b2lkIDAsYT17c3RyZWFtX3R5cGU6XCJhdWRpb1wiPT09dD9kTy5BVURJTzpkTy5WSURFTyxzc3JjSWQ6cn0pLHJWLm1hcmtTdWJzY3JpYmVTdGFydCh0aGlzLnN0b3JlLmNsaWVudElkLHIpLHRoaXMuc3RvcmUuc3Vic2NyaWJlKGUudWlkLHQsRGF0ZS5ub3coKSksYXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC5zdWJzY3JpYmUoZSx0LHIscyxvKTt0cnl7dGhpcy5fcDJwQ2hhbm5lbC5pc1ByZVN1YlNjcmliZShyKXx8YXdhaXQgdGhpcy5fZ2F0ZXdheS5zdWJzY3JpYmUoZS51aWQsYSwhMCl9Y2F0Y2goaSl7aWYoKG51bGw9PWk/dm9pZCAwOmkuY29kZSkhPT1SeS5XU19BQk9SVCl0aHJvdyBhd2FpdCB0aGlzLl9wMnBDaGFubmVsLnVuc3Vic2NyaWJlKGUsdCksaTthd2FpdCB0aGlzLl9wMnBDaGFubmVsLnVuc3Vic2NyaWJlKGUsdCwhMCksdGhpcy5fcDJwQ2hhbm5lbC5zZXRQZW5kaW5nUmVtb3RlTWVkaWEoZSx0KX10aGlzLnN0b3JlLnN1YnNjcmliZShlLnVpZCx0LHZvaWQgMCxEYXRlLm5vdygpKSx0aGlzLl9wMnBDaGFubmVsLnJlcG9ydFN1YnNjcmliZUV2ZW50KCEwLG51bGwsZSx0KX1jYXRjaChpKXt0aHJvdyB0aGlzLl9wMnBDaGFubmVsLnJlcG9ydFN1YnNjcmliZUV2ZW50KCExLG51bGw9PWk/dm9pZCAwOmkuY29kZSxlLHQpLGl9ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHN1YnNjcmliZSBzdWNjZXNzIHVzZXIgXCIpLmNvbmNhdChlLnVpZCxcIiwgbWVkaWFUeXBlOiBcIikuY29uY2F0KHQpKSx0aGlzLl9kZWZhdWx0U3RyZWFtRmFsbGJhY2tUeXBlJiZ0aGlzLnNldFN0cmVhbUZhbGxiYWNrT3B0aW9uKGUudWlkLHRoaXMuX2RlZmF1bHRTdHJlYW1GYWxsYmFja1R5cGUpLmNhdGNoKChlPT57ZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGF1dG8gc2V0IGZhbGxiYWNrIGZhaWxlZFwiKSxlKX0pKTtjb25zdCBpPVwiYXVkaW9cIj09PXQ/ZS5fYXVkaW9UcmFjazplLl92aWRlb1RyYWNrO2lmKCFpKXRocm93IG5ldyB5YihSeS5VTkVYUEVDVEVEX0VSUk9SLFwiY2FuIG5vdCBmaW5kIHJlbW90ZSB0cmFjayBpbiB1c2VyIG9iamVjdFwiKTtyZXR1cm4gaX1jYXRjaCh0KXt0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHN1YnNjcmliZSB1c2VyIFwiKS5jb25jYXQoZS51aWQsXCIgZXJyb3JcIiksdCksdH1maW5hbGx5e2MoKX19YXN5bmMgbWFzc1N1YnNjcmliZShlKXtpZih3eShlLFwic3Vic2NyaWJlTGlzdFwiKSwhdGhpcy5fam9pbkluZm8pdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiQ2FuJ3Qgc3Vic2NyaWJlIHN0cmVhbSwgbm90IGpvaW5lZFwiKTtpZihcIkNPTk5FQ1RFRFwiIT09dGhpcy5jb25uZWN0aW9uU3RhdGUmJlwiUkVDT05ORUNUSU5HXCIhPT10aGlzLmNvbm5lY3Rpb25TdGF0ZSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJDYW4ndCBzdWJzY3JpYmUgc3RyZWFtIGluIFwiLmNvbmNhdCh0aGlzLmNvbm5lY3Rpb25TdGF0ZSxcIiBzdGF0ZVwiKSk7Y29uc3QgdD1EYXRlLm5vdygpLGk9bmV3IE1hcCxuPWF3YWl0IHRoaXMuX3N1YnNjcmliZU11dGV4LmxvY2soKTtmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl1zdGFydCBtYXNzU3Vic2NyaWJlIHVzZXIgXCIpLmNvbmNhdChlLm1hcCgoZT0+e2xldHt1c2VyOnQsbWVkaWFUeXBlOml9PWU7cmV0dXJuXCJ1c2VyOiBcIi5jb25jYXQobnVsbD09dD92b2lkIDA6dC51aWQsXCIsIG1lZGlhVHlwZTogXCIpLmNvbmNhdChpKX0pKS5qb2luKFwiOyBcIikpKTtjb25zdCByPShlPVsuLi5lXSkubWFwKChlPT57bGV0e3VzZXI6dCxtZWRpYVR5cGU6aX09ZTtyZXR1cm57dXNlcjp0LG1lZGlhVHlwZTppfX0pKSxvPWF3YWl0IHRoaXMuX3AycENoYW5uZWwuZ2xvYmFsTG9jaygpO3RyeXt2YXIgcztmb3IobGV0IHQ9ZS5sZW5ndGgtMTt0Pj0wO3QtLSl7Y29uc3Qgbj1lW3RdLHt1c2VyOm8sbWVkaWFUeXBlOnN9PW47aWYodnkocyxcIm1lZGlhVHlwZVwiLFtcImF1ZGlvXCIsXCJ2aWRlb1wiXSksIW8pe2NvbnN0IGU9bmV3IHliKFJ5LklOVkFMSURfUEFSQU1TLFwidXNlciBwcm9wZXJ0eSBkb2VzIG5vdCBleGlzdCBpbiBzdWJzY3JpYmVMaXN0IGl0ZW1cIik7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSB1c2VyIHByb3BlcnR5IGRvZXMgbm90IGV4aXN0IGluIHN1YnNjcmliZUxpc3QgaXRlbVwiKSksZX1jb25zdCBhPXRoaXMuX3VzZXJzLmZpbmQoKGU9PmU9PT1vKSk7aWYoIWEpe2NvbnN0IGk9bmV3IHliKFJ5LklOVkFMSURfUkVNT1RFX1VTRVIsXCJ1c2VyIGlzIG5vdCBpbiB0aGUgY2hhbm5lbFwiKTtmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGNhbiBub3QgbWFzc1N1YnNjcmliZSBcIikuY29uY2F0KG8udWlkLFwiLCB0aGlzIHVzZXIgaXMgbm90IGluIHRoZSBjaGFubmVsXCIpKSxyW3RdLmVycm9yPWksZS5zcGxpY2UodCwxKTtjb250aW51ZX1pZihcImF1ZGlvXCI9PT1zJiYoIW8uaGFzQXVkaW98fHZvaWQgMD09PW8uX2F1ZGlvU1NSQyl8fFwidmlkZW9cIj09PXMmJighby5oYXNWaWRlb3x8dm9pZCAwPT09by5fdmlkZW9TU1JDKSl7Y29uc3QgaT1uZXcgeWIoUnkuUkVNT1RFX1VTRVJfSVNfTk9UX1BVQkxJU0hFRCk7ZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBjYW4gbm90IHN1YnNjcmliZSBcIikuY29uY2F0KG8udWlkLFwiIHdpdGggbWVkaWFUeXBlIFwiKS5jb25jYXQocyxcIiwgcmVtb3RlIHVzZXIgaXMgbm90IHB1Ymxpc2hlZFwiKSksclt0XS5lcnJvcj1pLGUuc3BsaWNlKHQsMSk7Y29udGludWV9Y29uc3QgYz10Ty5WaWRlb3x0Ty5Md29WaWRlbyxkPWkuZ2V0KG8pO2lmKGQpe2lmKFwidmlkZW9cIj09PXM/ZCZjOmQmdE8uQXVkaW8pe2Uuc3BsaWNlKHQsMSksZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlcGVhdCBtYXNzU3Vic2NyaWJlIHVzZXI6XCIpLmNvbmNhdChvLnVpZCxcIiwgbWVkaWFUeXBlOlwiKS5jb25jYXQocyxcIiB0d2ljZVwiKSk7Y29udGludWV9aS5zZXQobyxkfChcInZpZGVvXCI9PT1zP2M6dE8uQXVkaW8pKX1lbHNlIGkuc2V0KG8sXCJ2aWRlb1wiPT09cz9jOnRPLkF1ZGlvKX1mb3IobGV0IHQ9ZS5sZW5ndGgtMTt0Pj0wO3QtLSl7Y29uc3Qgbj1lW3RdLHt1c2VyOnIsbWVkaWFUeXBlOm99PW4scz10Ty5WaWRlb3x0Ty5Md29WaWRlbztpZih0aGlzLl9wMnBDaGFubmVsLmhhc1JlbW90ZU1lZGlhKHIsbykpe2F3YWl0IHRoaXMuX3AycENoYW5uZWwudW5tdXRlUmVtb3RlTm9Mb2NrKHIsbyk7Y29uc3Qgbj1pLmdldChyKTtpLnNldChyLFwidmlkZW9cIj09PW8/bl5zOm5edE8uQXVkaW8pLGUuc3BsaWNlKHQsMSl9fXRoaXMuc3RvcmUubWFzc1N1YnNjcmliZShlLm1hcCgoZT0+KHt1c2VySWQ6ZS51c2VyLnVpZCx0eXBlOmUubWVkaWFUeXBlfSkpKSx0KTtsZXQgYT1KbihzPUFycmF5LmZyb20oaS5lbnRyaWVzKCkpKS5jYWxsKHMsKChlLHQpPT57bGV0W2ksbl09dDtpZigwPT09bilyZXR1cm4gZTtjb25zdCByPXtzdHJlYW1faWQ6aS51aWQsc3RyZWFtX3R5cGU6bn07cmV0dXJuIG4mdE8uQXVkaW8mJihyLmF1ZGlvX3NzcmM9aS5fYXVkaW9TU1JDKSxuJnRPLlZpZGVvJiYoci52aWRlb19zc3JjPWkuX3ZpZGVvU1NSQyksZS5wdXNoKHIpLGV9KSxbXSk7dHJ5e2UubGVuZ3RoPjAmJmF3YWl0IHRoaXMuX3AycENoYW5uZWwubWFzc1N1YnNjcmliZU5vTG9jayhlLm1hcCgoZT0+e2xldHt1c2VyOnQsbWVkaWFUeXBlOml9PWU7cmV0dXJue3VzZXI6dCxtZWRpYVR5cGU6aSxzc3JjSWQ6aT09PWRPLlZJREVPP3QuX3ZpZGVvU1NSQzp0Ll9hdWRpb1NTUkMscnR4U3NyY0lkOmk9PT1kTy5WSURFTz90Ll9ydHhTc3JjSWQ6dm9pZCAwfX0pKSk7Y29uc3QgaT1uZXcgTWFwO2lmKGE9YS5maWx0ZXIoKGU9PmUudmlkZW9fc3NyYyYmIXRoaXMuX3AycENoYW5uZWwuaXNQcmVTdWJTY3JpYmUoZS52aWRlb19zc3JjKXx8ZS5hdWRpb19zc3JjJiYhdGhpcy5fcDJwQ2hhbm5lbC5pc1ByZVN1YlNjcmliZShlLmF1ZGlvX3NzcmMpfHwhZS52aWRlb19zc3JjJiYhZS5hdWRpb19zc3JjKSksYS5sZW5ndGg+MCl7Y29uc3QgZT1hd2FpdCB0aGlzLl9nYXRld2F5LnN1YnNjcmliZUFsbChhLCEwKTsoKG51bGw9PWU/dm9pZCAwOmUudXNlcnMpfHxbXSkuZm9yRWFjaCgoZT0+e2xldHtzdHJlYW1faWQ6dCx2aWRlb19lcnJvcl9jb2RlOm4sYXVkaW9fZXJyb3JfY29kZTpyLGVycm9yX2NvZGU6b309ZTsobnx8cnx8bykmJmkuc2V0KHQse3ZpZGVvX2Vycm9yX2NvZGU6bixhdWRpb19lcnJvcl9jb2RlOnIsZXJyb3JfY29kZTpvfSl9KSl9aWYoQXJyYXkuZnJvbShpLmVudHJpZXMoKSkubGVuZ3RoPjApe2NvbnN0IGU9W107QXJyYXkuZnJvbShpLmVudHJpZXMoKSkuZm9yRWFjaCgodD0+e2xldFtpLG5dPXQ7Y29uc3Qgcj10aGlzLnJlbW90ZVVzZXJzLmZpbmQoKGU9PmUudWlkPT09aSkpO2lmKHIpe2xldCB0O24uZXJyb3JfY29kZXx8bi52aWRlb19lcnJvcl9jb2RlJiZuLmF1ZGlvX2Vycm9yX2NvZGU/dD12b2lkIDA6bi52aWRlb19lcnJvcl9jb2RlP3Q9ZE8uVklERU86bi5hdWRpb19lcnJvcl9jb2RlJiYodD1kTy5BVURJTyksZS5wdXNoKHt1c2VyOnIsbWVkaWFUeXBlOnR9KX19KSksZS5sZW5ndGg+MCYmYXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC5tYXNzVW5zdWJzY3JpYmVOb0xvY2soZSl9Zm9yKGNvbnN0IGUgb2Ygcil7Y29uc3QgdD1pLmdldChlLnVzZXIudWlkKTtpZih0KXtjb25zdCBpPXQuZXJyb3JfY29kZXx8XCJhdWRpb1wiPT09ZS5tZWRpYVR5cGUmJnQuYXVkaW9fZXJyb3JfY29kZXx8XCJ2aWRlb1wiPT09ZS5tZWRpYVR5cGUmJnQudmlkZW9fZXJyb3JfY29kZTtpZihpKXtjb25zdCB0PU5PKGkpO2ZiLmVycm9yKFwidXNlcjpcIi5jb25jYXQoZS51c2VyLnVpZCxcIiBtZWRpYVR5cGU6XCIpLmNvbmNhdChlLm1lZGlhVHlwZSxcIiBoYXMgbWFzc1N1YnNjcmliZSBlcnJvciBcIikuY29uY2F0KHQuZGVzYykpLGUuZXJyb3I9bmV3IHliKFJ5LlNVQlNDUklCRV9GQUlMRUQsXCJjb2RlIFwiLmNvbmNhdChpLFwiOiBcIikuY29uY2F0KHQuZGVzYykpfX1lLmVycm9yfHwoXCJ2aWRlb1wiPT09ZS5tZWRpYVR5cGU/ZS50cmFjaz1lLnVzZXIudmlkZW9UcmFjazplLnRyYWNrPWUudXNlci5hdWRpb1RyYWNrKX1yZXR1cm4gdGhpcy5zdG9yZS5tYXNzU3Vic2NyaWJlKHIuZmlsdGVyKChlPT4hZS5lcnJvcikpLm1hcCgoZT0+KHt1c2VySWQ6ZS51c2VyLnVpZCx0eXBlOmUubWVkaWFUeXBlfSkpKSx2b2lkIDAsRGF0ZS5ub3coKSksci5mb3JFYWNoKChlPT57dmFyIGk7dmIuc3Vic2NyaWJlKHRoaXMuc3RvcmUuc2Vzc2lvbklkLHtzdWNjOiEhZS5lcnJvcixlYzoobnVsbD09PShpPWUuZXJyb3IpfHx2b2lkIDA9PT1pP3ZvaWQgMDppLmNvZGUpfHxudWxsLHZpZGVvOmUubWVkaWFUeXBlPT09ZE8uVklERU8sYXVkaW86ZS5tZWRpYVR5cGU9PT1kTy5BVURJTyxwZWVyaWQ6ZS51c2VyLnVpZCxzdWJzY3JpYmVSZXF1ZXN0aWQ6ZS5tZWRpYVR5cGU9PT1kTy5WSURFTz9lLnVzZXIuX3ZpZGVvU1NSQzplLnVzZXIuX2F1ZGlvU1NSQyxwMnBpZDp0aGlzLnN0b3JlLnAycElkLGV2ZW50RWxhcHNlOk1hdGguZmxvb3IocGVyZm9ybWFuY2Uubm93KCktdCkscHJlU3NyYzp0aGlzLl9wMnBDaGFubmVsLmlzUHJlU3ViU2NyaWJlKGUudXNlci5fdmlkZW9TU1JDKX0sITApfSkpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBtYXNzU3Vic2NyaWJlIHN1Y2Nlc3MgXCIpLmNvbmNhdChlLm1hcCgoZT0+e2xldHt1c2VyOnQsbWVkaWFUeXBlOml9PWU7cmV0dXJuXCJ1c2VyOiBcIi5jb25jYXQobnVsbD09dD92b2lkIDA6dC51aWQsXCIsIG1lZGlhVHlwZTogXCIpLmNvbmNhdChpKX0pKS5qb2luKFwiOyBcIikpKSxyfWNhdGNoKHQpe3Rocm93IGF3YWl0IHRoaXMuX3AycENoYW5uZWwubWFzc1Vuc3Vic2NyaWJlTm9Mb2NrKGUpLHR9fWZpbmFsbHl7bygpLG4oKX19YXN5bmMgdW5zdWJzY3JpYmUoZSx0LGkpe2lmKCEoZSBpbnN0YW5jZW9mIGNGKSl7Y29uc3QgdD10aGlzLnJlbW90ZVVzZXJzLmZpbmQoKHQ9PnQudWlkPT09ZSkpO2lmKCF0KXRocm93IG5ldyB5YihSeS5JTlZBTElEX1JFTU9URV9VU0VSLFwidXNlciBpcyBub3QgaW4gdGhlIGNoYW5uZWxcIik7ZT10fWlmKHR8fHRoaXMuc3RvcmUudXNlUDJQKXtpZihcImRhdGFjaGFubmVsXCI9PT10KXJldHVybiB0aGlzLl91bnN1YnNjcmliZURhdGFDaGFubmVsKGUsaSl9ZWxzZSBhd2FpdCB0aGlzLl91bnN1YnNjcmliZURhdGFDaGFubmVsKGUsaSk7aWYodCYmdnkodCxcIm1lZGlhVHlwZVwiLFtcImF1ZGlvXCIsXCJ2aWRlb1wiXSksIXRoaXMuX2pvaW5JbmZvKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcIkNhbid0IHVuc3Vic2NyaWJlIHN0cmVhbSwgaGF2ZW4ndCBqb2luZWQgeWV0IVwiKTtjb25zdCBuPXRoaXMuX3VzZXJzLmZpbmQoKHQ9PnQ9PT1lKSk7aWYoIW4pe2NvbnN0IHQ9bmV3IHliKFJ5LklOVkFMSURfUkVNT1RFX1VTRVIsXCJ1c2VyIGlzIG5vdCBpbiB0aGUgY2hhbm5lbFwiKTt0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGNhbiBub3QgdW5zdWJzY3JpYmUgXCIpLmNvbmNhdChlLnVpZCxcIiwgdXNlciBpcyBub3QgaW4gdGhlIGNoYW5uZWxcIikpLHR9ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHVuc3Vic2NyaWJlIHVpZDogXCIpLmNvbmNhdChlLnVpZCxcIiwgbWVkaWFUeXBlOiBcIikuY29uY2F0KHQpKTtjb25zdCByPWF3YWl0IHRoaXMuX3N1YnNjcmliZU11dGV4LmxvY2soKTt0cnl7aWYodGhpcy5fcDJwQ2hhbm5lbCBpbnN0YW5jZW9mIGJGKWF3YWl0IHRoaXMuX3AycENoYW5uZWwudW5zdWJzY3JpYmUoZSx0KTtlbHNle2NvbnN0IGk9YXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC51bnN1YnNjcmliZShlLHQpO2kmJmF3YWl0IHRoaXMuX2dhdGV3YXkudW5zdWJzY3JpYmUoaSxlLnVpZCksdCYmXCJhdWRpb1wiIT09dHx8KGUuX2F1ZGlvX3ByZV9zdWJzY3JpYmVkPSExKSx0JiZcInZpZGVvXCIhPT10fHwoZS5fdmlkZW9fcHJlX3N1YnNjcmliZWQ9ITEpLGUuX2lzX3ByZV9jcmVhdGVkJiZuQSh0aGlzLl91c2VycyxlKSxmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gdW5zdWJzY3JpYmUgc3VjY2VzcyB1aWQ6IFwiKS5jb25jYXQoZS51aWQsXCIsIG1lZGlhVHlwZTogXCIpLmNvbmNhdCh0KSl9fWNhdGNoKHQpe2lmKHQuY29kZT09PVJ5LkRJU0NPTk5FQ1RfUDJQKXJldHVybiB2b2lkIGZiLndhcm5pbmcoXCJkaXNjb25uZWN0aW5nIHAycCwgYWJvcnQgdW5zdWJzY3JpYmUgcmVxdWVzdC5cIik7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSB1bnN1YnNjcmliZSB1c2VyIFwiKS5jb25jYXQoZS51aWQsXCIgZXJyb3JcIiksdC50b1N0cmluZygpKSx0fWZpbmFsbHl7cigpfX1hc3luYyBfdW5zdWJzY3JpYmVEYXRhQ2hhbm5lbChlLHQpe2lmKHQmJnl5KHQsXCJpZFwiLDAsNjU1MzUsITApLCF0aGlzLl9qb2luSW5mbyl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJDYW4ndCB1bnN1YnNjcmliZSBkYXRhY2hhbm5lbCwgaGF2ZW4ndCBqb2luZWQgeWV0IVwiKTtjb25zdCBpPXRoaXMuX3VzZXJzLmZpbmQoKHQ9PnQ9PT1lKSk7aWYoIWkpe2NvbnN0IHQ9bmV3IHliKFJ5LklOVkFMSURfUkVNT1RFX1VTRVIsXCJ1c2VyIGlzIG5vdCBpbiB0aGUgY2hhbm5lbFwiKTt0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGNhbiBub3QgdW5zdWJzY3JpYmUgXCIpLmNvbmNhdChlLnVpZCxcIiwgdXNlciBpcyBub3QgaW4gdGhlIGNoYW5uZWxcIikpLHR9bGV0IG47aWYoXCJudW1iZXJcIj09dHlwZW9mIHQpe2NvbnN0IGk9ZS5fZGF0YUNoYW5uZWxzLmZpbmQoKGU9PmUuaWQ9PT10KSk7aSYmKG49W2ldKX1lbHNlIG49ZS5fZGF0YUNoYW5uZWxzO2lmKHZvaWQgMD09PW4pe2NvbnN0IGk9bmV3IHliKFJ5LlJFTU9URV9VU0VSX0lTX05PVF9QVUJMSVNIRUQpO3Rocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gY2FuIG5vdCB1bnN1YnNjcmliZSBcIikuY29uY2F0KGUudWlkLFwiIHdpdGggY2hhbm5lbElkIFwiKS5jb25jYXQodCxcIiwgcmVtb3RlIGRhdGFjaGFubmVsIGlzIG5vdCBwdWJsaXNoZWRcIikpLGl9ZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHVuc3Vic2NyaWJlIHVpZDogXCIpLmNvbmNhdChlLnVpZCxcIiwgbWVkaWFUeXBlOiBkYXRhY2hhbm5lbCwgaWRzOiBcIikuY29uY2F0KG4ubWFwKChlPT5lLmlkKSkpKTt0cnl7Y29uc3QgdD1hd2FpdCB0aGlzLl9wMnBDaGFubmVsLnVuc3Vic2NyaWJlRGF0YUNoYW5uZWwoZSxuKTt0JiZhd2FpdCB0aGlzLl9nYXRld2F5LnVuc3Vic2NyaWJlRGF0YUNoYW5uZWwodCxlLnVpZCksZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHVuc3Vic2NyaWJlIGRhdGFjaGFubmVsIHN1Y2Nlc3MgdWlkOiBcIikuY29uY2F0KGUudWlkLFwiLCBtZWRpYVR5cGU6IGRhdGFjaGFubmVsLCBpZHM6IFwiKS5jb25jYXQodCkpfWNhdGNoKHQpe2lmKHQuY29kZT09PVJ5LkRJU0NPTk5FQ1RfUDJQKXJldHVybiB2b2lkIGZiLndhcm5pbmcoXCJkaXNjb25uZWN0aW5nIHAycCwgYWJvcnQgdW5zdWJzY3JpYmUgcmVxdWVzdC5cIik7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSB1bnN1YnNjcmliZSB1c2VyIFwiKS5jb25jYXQoZS51aWQsXCIgZXJyb3JcIiksdC50b1N0cmluZygpKSx0fX1hc3luYyBtYXNzVW5zdWJzY3JpYmUoZSl7aWYod3koZSxcInVuc3Vic2NyaWJlTGlzdFwiKSwhdGhpcy5fam9pbkluZm8pdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiQ2FuJ3QgdW5zdWJzY3JpYmVBbGwgc3RyZWFtLCBoYXZlbid0IGpvaW5lZCB5ZXQhXCIpO2ZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBzdGFydCBtYXNzVW5zdWJzY3JpYmUgXCIpLmNvbmNhdChlLm1hcCgoZT0+e2xldHt1c2VyOnQsbWVkaWFUeXBlOml9PWU7cmV0dXJuXCJ1c2VyOiBcIi5jb25jYXQobnVsbD09dD92b2lkIDA6dC51aWQsXCIsIG1lZGlhVHlwZTogXCIpLmNvbmNhdChpLFwiO1wiKX0pKS5qb2luKCkpKSxlPVsuLi5lXTtjb25zdCB0PW5ldyBNYXA7Zm9yKGxldCBpPWUubGVuZ3RoLTE7aT49MDtpLS0pe2NvbnN0e3VzZXI6bixtZWRpYVR5cGU6cn09ZVtpXTtpZighbil7Y29uc3QgZT1uZXcgeWIoUnkuSU5WQUxJRF9QQVJBTVMsXCJ1c2VyIHByb3BlcnR5IGRvZXMgbm90IGV4aXN0IGluIHVuc3Vic2NyaWJlTGlzdCBpdGVtXCIpO3Rocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gdXNlciBwcm9wZXJ0eSBkb2VzIG5vdCBleGlzdCBpbiB1bnN1YnNjcmliZUxpc3QgaXRlbVwiKSksZX12eShyLFwibWVkaWFUeXBlXCIsW1widmlkZW9cIixcImF1ZGlvXCIsdm9pZCAwXSk7Y29uc3Qgbz10aGlzLl91c2Vycy5maW5kKChlPT5lPT09bikpO2lmKCFvKXtmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gY2FuIG5vdCB1bnN1YnNjcmliZSBcIikuY29uY2F0KG4udWlkLFwiLCB1c2VyIGlzIG5vdCBpbiB0aGUgY2hhbm5lbFwiKSksZS5zcGxpY2UoaSwxKTtjb250aW51ZX1jb25zdCBzPXRPLlZpZGVvfHRPLkx3b1ZpZGVvO2lmKHQuaGFzKG4pKXtjb25zdCBvPXQuZ2V0KG4pO2xldCBhO3N3aXRjaChyKXtjYXNlXCJ2aWRlb1wiOmE9byZzO2JyZWFrO2Nhc2VcImF1ZGlvXCI6YT1vJnRPLkF1ZGlvO2JyZWFrO2RlZmF1bHQ6YT1vJih0Ty5BdWRpb3xzKX1pZihhKXtmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcmVwZWF0IG1hc3NVbnN1YnNjcmliZSB1c2VyOlwiKS5jb25jYXQobi51aWQsXCIsbWVkaWFUeXBlOlwiKS5jb25jYXQocixcIiB0d2ljZS5cIikpLGUuc3BsaWNlKGksMSk7Y29udGludWV9cj9cImF1ZGlvXCI9PT1yP3Quc2V0KG4sb3x0Ty5BdWRpbyk6XCJ2aWRlb1wiPT09ciYmdC5zZXQobixvfHMpOnQuc2V0KG4sb3x0Ty5BdWRpb3xzKX1lbHNlIHI/XCJhdWRpb1wiPT09cj90LnNldChuLHRPLkF1ZGlvKTpcInZpZGVvXCI9PT1yJiZ0LnNldChuLHMpOnQuc2V0KG4sdE8uQXVkaW98cyl9dHJ5e2NvbnN0IHQ9YXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC5tYXNzVW5zdWJzY3JpYmUoZSk7dCYmYXdhaXQgdGhpcy5fZ2F0ZXdheS5tYXNzVW5zdWJzY3JpYmUodCksZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIG1hc3NVbnN1YnNjcmliZSBzdWNjZXNzIFwiKS5jb25jYXQoZS5tYXAoKGU9PntsZXR7dXNlcjp0LG1lZGlhVHlwZTppfT1lO3JldHVyblwidXNlcjogXCIuY29uY2F0KG51bGw9PXQ/dm9pZCAwOnQudWlkLFwiLCBtZWRpYVR5cGU6IFwiKS5jb25jYXQoaSxcIjtcIil9KSkuam9pbigpKSl9Y2F0Y2goZSl7aWYoZS5jb2RlPT09UnkuRElTQ09OTkVDVF9QMlApcmV0dXJuIHZvaWQgZmIud2FybmluZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGRpc2Nvbm5lY3RpbmcgcDJwLCBhYm9ydCB1bnN1YnNjcmliZSByZXF1ZXN0LlwiKSk7dGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBtYXNzVW5zdWJzY3JpYmUgZXJyb3JcIiksZS50b1N0cmluZygpKSxlfX1hc3luYyBzZXRMb3dTdHJlYW1QYXJhbWV0ZXIoZSl7IWZ1bmN0aW9uKGUpe2lmKCFlKXRocm93IG5ldyBDeShSeS5JTlZBTElEX1BBUkFNUyk7T3koZS53aWR0aCl8fEF5KGUud2lkdGgsXCJzdHJlYW1QYXJhbWV0ZXIud2lkdGhcIiksT3koZS5oZWlnaHQpfHxBeShlLmhlaWdodCxcInN0cmVhbVBhcmFtZXRlci5oZWlnaHRcIiksT3koZS5mcmFtZXJhdGUpfHxBeShlLmZyYW1lcmF0ZSxcInN0cmVhbVBhcmFtZXRlci5mcmFtZXJhdGVcIiksT3koZS5iaXRyYXRlKXx8eXkoZS5iaXRyYXRlLFwic3RyZWFtUGFyYW1ldGVyLmJpdHJhdGVcIil9KGUpLCghZS53aWR0aCYmZS5oZWlnaHR8fGUud2lkdGgmJiFlLmhlaWdodCkmJmZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBUaGUgd2lkdGggYW5kIGhlaWdodCBwYXJhbWV0ZXJzIHRha2UgZWZmZWN0IG9ubHkgd2hlbiBib3RoIGFyZSBzZXRcIikpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBzZXQgbG93IHN0cmVhbSBwYXJhbWV0ZXIgdG9cIiksSlNPTi5zdHJpbmdpZnkoZSkpO2NvbnN0IHQ9dGhpcy5fY29uZmlnRGlzdHJpYnV0ZS5nZXRMb3dTdHJlYW1Db25maWdEaXN0cmlidXRlKCk7aWYodCYmdC5iaXRyYXRlJiZlLmJpdHJhdGUmJnQuYml0cmF0ZTxlLmJpdHJhdGUmJihlLmJpdHJhdGU9dC5iaXRyYXRlKSx0aGlzLl9sb3dTdHJlYW1QYXJhbWV0ZXI9ZSx0aGlzLl9pc0R1YWxTdHJlYW1FbmFibGVkKXJldHVybiB0aGlzLl9wMnBDaGFubmVsLnVwZGF0ZVZpZGVvU3RyZWFtUGFyYW1ldGVyKGUsaE8uTG9jYWxWaWRlb0xvd1RyYWNrKX1hc3luYyBlbmFibGVEdWFsU3RyZWFtKCl7aWYoIVpQKCkuc3VwcG9ydER1YWxTdHJlYW0pdGhyb3cgdmIuc3RyZWFtU3dpdGNoKHRoaXMuX3Nlc3Npb25JZCx7bHRzOkRhdGUubm93KCksaXNkdWFsOiEwLHN1Y2M6ITF9KSxuZXcgeWIoUnkuTk9UX1NVUFBPUlRFRCxcIllvdXIgYnJvd3NlciBpcyBub3Qgc3VwcG9ydCBkdWFsIHN0cmVhbVwiKTtpZih0aGlzLl9pc0R1YWxTdHJlYW1FbmFibGVkKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcIkR1YWwgc3RyZWFtIGlzIGFscmVhZHkgZW5hYmxlZFwiKTtpZih0aGlzLl9wMnBDaGFubmVsLmNhblB1Ymxpc2hMb3dTdHJlYW0oKSl0cnl7YXdhaXQgdGhpcy5fcHVibGlzaExvd1N0cmVhbSgpfWNhdGNoKGUpe3Rocm93IHZiLnN0cmVhbVN3aXRjaCh0aGlzLl9zZXNzaW9uSWQse2x0czpEYXRlLm5vdygpLGlzZHVhbDohMCxzdWNjOiExfSksZX10aGlzLl9pc0R1YWxTdHJlYW1FbmFibGVkPSEwLHZiLnN0cmVhbVN3aXRjaCh0aGlzLl9zZXNzaW9uSWQse2x0czpEYXRlLm5vdygpLGlzZHVhbDohMCxzdWNjOiEwfSksZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGVuYWJsZSBkdWFsIHN0cmVhbVwiKSl9YXN5bmMgZGlzYWJsZUR1YWxTdHJlYW0oKXtpZih0aGlzLl9pc0R1YWxTdHJlYW1FbmFibGVkKXtpZighdGhpcy5fam9pbkluZm8pdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiQ2FuJ3QgcHVibGlzaCBzdHJlYW0sIGhhdmVuJ3Qgam9pbmVkIHlldCFcIik7aWYodGhpcy5fcDJwQ2hhbm5lbC5nZXRMb2NhbE1lZGlhKGhPLkxvY2FsVmlkZW9Mb3dUcmFjaykpdHJ5e2NvbnN0IGU9YXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC51bnB1Ymxpc2hMb3dTdHJlYW0oKTtlJiZhd2FpdCB0aGlzLl9nYXRld2F5LnVucHVibGlzaChlLHRoaXMuX2pvaW5JbmZvLnN0cmluZ1VpZHx8dGhpcy5fam9pbkluZm8udWlkKX1jYXRjaChlKXt0aHJvdyB2Yi5zdHJlYW1Td2l0Y2godGhpcy5fc2Vzc2lvbklkLHtsdHM6RGF0ZS5ub3coKSxpc2R1YWw6ITEsc3VjYzohMX0pLGV9dGhpcy5faXNEdWFsU3RyZWFtRW5hYmxlZD0hMSx2Yi5zdHJlYW1Td2l0Y2godGhpcy5fc2Vzc2lvbklkLHtsdHM6RGF0ZS5ub3coKSxpc2R1YWw6ITEsc3VjYzohMH0pLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBkaXNhYmxlIGR1YWwgc3RyZWFtXCIpKX19YXN5bmMgc2V0Q2xpZW50Um9sZShlLHQpe2lmKGZ1bmN0aW9uKGUpe3Z5KGUsXCJyb2xlXCIsW1wiYXVkaWVuY2VcIixcImhvc3RcIl0pfShlKSx0JiZxeSh0KSxcInJ0Y1wiPT09dGhpcy5tb2RlfHxcInAycFwiPT09dGhpcy5tb2RlKXRocm93IGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXVwiKS5jb25jYXQodGhpcy5tb2RlLFwiIG1vZGUgY2FuIG5vdCB1c2Ugc2V0Q2xpZW50Um9sZVwiKSksbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiXCIuY29uY2F0KHRoaXMubW9kZSxcIiBtb2RlIGNhbiBub3QgdXNlIHNldENsaWVudFJvbGVcIikpO2lmKHQmJnQubGV2ZWwmJlwiaG9zdFwiPT09ZSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJob3N0IG1vZGUgY2FuIG5vdCBzZXQgYXVkaWVuY2UgbGF0ZW5jeSBsZXZlbFwiKTtpZihcImF1ZGllbmNlXCI9PT1lJiZ0aGlzLl9wMnBDaGFubmVsLmhhc0xvY2FsTWVkaWEoKSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJjYW4gbm90IHNldCBjbGllbnQgcm9sZSB0byBhdWRpZW5jZSB3aGVuIHB1Ymxpc2hpbmcgc3RyZWFtXCIpO2F3YWl0IHRoaXMuX2dhdGV3YXkuc2V0Q2xpZW50Um9sZShlLHQpLHRoaXMuX2NvbmZpZy5yb2xlPWUsZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHNldCBjbGllbnQgcm9sZSB0byBcIikuY29uY2F0KGUsXCIsIGxldmVsOiBcIikuY29uY2F0KHQmJnQubGV2ZWwpKX1nZXRSZW1vdGVJbmJvdW5kT2Zmc2V0KCl7dmFyIGU7Y29uc3QgdD1udWxsPT09KGU9dGhpcy5fcDJwQ2hhbm5lbC5nZXRTdGF0cygpKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5hdWRpb1NlbmRbMF07aWYoIXR8fCF0LnRpbWVzdGFtcClyZXR1cm4gMDtjb25zdCBpPXQudGltZXN0YW1wLURhdGUubm93KCk7cmV0dXJuIE1hdGguYWJzKGkpPjFlMyt0LnJ0dE1zKzEwMD90aGlzLm50cEFsaWduRXJyb3JDb3VudCs9MTp0aGlzLm50cEFsaWduRXJyb3JDb3VudD0wLHRoaXMubnRwQWxpZ25FcnJvckNvdW50Pj0zP2k6MH1nZXROdHBXYWxsVGltZUluTXMoKXtyZXR1cm5cInZpc2libGVcIj09PWRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSYmKHRoaXMucmVtb3RlSW5ib3VuZE9mZnNldD10aGlzLmdldFJlbW90ZUluYm91bmRPZmZzZXQoKSksdGhpcy5yZW1vdGVJbmJvdW5kT2Zmc2V0K0RhdGUubm93KCkrdGhpcy5fZ2F0ZXdheS5udHBPZmZzZXR9c2V0UHJveHlTZXJ2ZXIoZSx0KXtpZihieShlLFwicHJveHlTZXJ2ZXJcIiksIXQpe2lmKFwiRElTQ09OTkVDVEVEXCIhPT10aGlzLmNvbm5lY3Rpb25TdGF0ZSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJTZXQgcHJveHkgc2VydmVyIGJlZm9yZSBqb2luIGNoYW5uZWxcIik7aWYoXCJkaXNhYmxlZFwiIT09dGhpcy5fY2xvdWRQcm94eVNlcnZlck1vZGV8fHRoaXMuX3VzZUxvY2FsQWNjZXNzUG9pbnQpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiWW91IGhhdmUgYWxyZWFkeSBzZXQgdGhlIHByb3h5XCIpfXRoaXMuX3Byb3h5U2VydmVyPWUsdmIuc2V0UHJveHlTZXJ2ZXIodGhpcy5fcHJveHlTZXJ2ZXIpLGZiLnNldFByb3h5U2VydmVyKHRoaXMuX3Byb3h5U2VydmVyKSxmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gU2V0IHByb3h5IHNlcnZlciBcIikuY29uY2F0KHQ/XCJieSBpbml0aWFsaXplIGNhbGxcIjpcIlwiLFwiIHN1Y2Nlc3MuXCIpKX1zZXRUdXJuU2VydmVyKGUsdCl7aWYoQXJyYXkuaXNBcnJheShlKXx8KGU9W2VdKSwhdCl7aWYoXCJESVNDT05ORUNURURcIiE9PXRoaXMuY29ubmVjdGlvblN0YXRlKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcIlNldCB0dXJuIHNlcnZlciBiZWZvcmUgam9pbiBjaGFubmVsXCIpO2lmKFwiZGlzYWJsZWRcIiE9PXRoaXMuX2Nsb3VkUHJveHlTZXJ2ZXJNb2RlfHx0aGlzLl91c2VMb2NhbEFjY2Vzc1BvaW50KXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcIllvdSBoYXZlIGFscmVhZHkgc2V0IHRoZSBwcm94eVwiKX1pZihLeShlKSlyZXR1cm4gdGhpcy5fdHVyblNlcnZlcj17c2VydmVyczplLG1vZGU6XCJvcmlnaW5hbC1tYW51YWxcIn0sdm9pZCBmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gU2V0IG9yaWdpbmFsIHR1cm5zZXJ2ZXIgXCIpLmNvbmNhdCh0P1wiYnkgaW5pdGlhbGl6ZSBjYWxsXCI6XCJcIixcIiBzdWNjZXNzOiBcIikuY29uY2F0KGUubWFwKChlPT5lLnVybHMpKS5qb2luKFwiLFwiKSxcIi5cIikpO2UuZm9yRWFjaCgoZT0+WXkoZSkpKSx0aGlzLl90dXJuU2VydmVyPXtzZXJ2ZXJzOmUsbW9kZTpcIm1hbnVhbFwifSxmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gU2V0IHR1cm5zZXJ2ZXIgXCIpLmNvbmNhdCh0P1wiYnkgaW5pdGlhbGl6ZSBjYWxsXCI6XCJcIixcIiBzdWNjZXNzLlwiKSl9c2V0TGljZW5zZShlKXtpZihcIkRJU0NPTk5FQ1RFRFwiIT09dGhpcy5jb25uZWN0aW9uU3RhdGUpe3Rocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcInlvdSBzaG91bGQgc2V0IGxpY2Vuc2UgYmVmb3JlIGpvaW4gY2hhbm5lbFwiKX1pZihieShlLFwibGljZW5zZVwiLDMyLDMyKSwhL15bQS1aYS16XFxkXSskLy50ZXN0KGUpKXRocm93IG5ldyB5YihSeS5JTlZBTElEX1BBUkFNUyxcImxpY2Vuc2Ugc2hvdWxkIG9ubHkgY29udGFpbnMgY2hhcmFjdGVycyBmcm9tIEEtWiBhLXogMC05XCIpO3RoaXMuX2xpY2Vuc2U9ZSxmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gc2V0IGxpY2Vuc2Ugc3VjY2Vzc1wiKSxlKX1zdGFydFByb3h5U2VydmVyKGUpe2lmKFwiRElTQ09OTkVDVEVEXCIhPT10aGlzLmNvbm5lY3Rpb25TdGF0ZSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJTdGFydCBwcm94eSBzZXJ2ZXIgYmVmb3JlIGpvaW4gY2hhbm5lbFwiKTtpZih0aGlzLl9wcm94eVNlcnZlcnx8XCJtYW51YWxcIj09PXRoaXMuX3R1cm5TZXJ2ZXIubW9kZXx8dGhpcy5fdXNlTG9jYWxBY2Nlc3NQb2ludCl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJZb3UgaGF2ZSBhbHJlYWR5IHNldCB0aGUgcHJveHlcIik7Y29uc3QgdD1bMyw0LDVdO2xldCBpO3N3aXRjaCh2b2lkIDA9PT1lJiYoZT0zKSxlKXtjYXNlIDE6Y2FzZSAyOnRocm93IG5ldyB5YihSeS5OT1RfU1VQUE9SVEVELFwicHJveHkgbW9kZSAxLzIgaGFzIGJlZW4gZGVwcmVjYXRlZCBhbmQgbm90IHN1cHBvcnRlZC5cIik7Y2FzZSAzOmk9XCJwcm94eTNcIjticmVhaztjYXNlIDQ6aT1cInByb3h5NFwiO2JyZWFrO2Nhc2UgNTppPVwicHJveHk1XCI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9QQVJBTVMsXCJwcm94eSBzZXJ2ZXIgbW9kZSBtdXN0IGJlIFwiLmNvbmNhdCh0LmpvaW4oXCJ8XCIpKSl9dGhpcy5fY2xvdWRQcm94eVNlcnZlck1vZGU9aSx0aGlzLnN0b3JlLmNsb3VkUHJveHlTZXJ2ZXJNb2RlPWksZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHNldCBjbG91ZCBwcm94eSBzZXJ2ZXIgbW9kZSB0b1wiKSx0aGlzLl9jbG91ZFByb3h5U2VydmVyTW9kZSl9c3RvcFByb3h5U2VydmVyKCl7aWYoXCJESVNDT05ORUNURURcIiE9PXRoaXMuY29ubmVjdGlvblN0YXRlKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcIlN0b3AgcHJveHkgc2VydmVyIGFmdGVyIGxlYXZlIGNoYW5uZWxcIik7dmIuc2V0UHJveHlTZXJ2ZXIoKSxmYi5zZXRQcm94eVNlcnZlcigpLHRoaXMuX2Nsb3VkUHJveHlTZXJ2ZXJNb2RlPVwiZGlzYWJsZWRcIix0aGlzLnN0b3JlLmNsb3VkUHJveHlTZXJ2ZXJNb2RlPVwiZGlzYWJsZWRcIixmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gc2V0IGNsb3VkIHByb3h5IHNlcnZlciBtb2RlIHRvXCIpLHRoaXMuX2Nsb3VkUHJveHlTZXJ2ZXJNb2RlKSx0aGlzLl9wcm94eVNlcnZlcj12b2lkIDAsdGhpcy5fdHVyblNlcnZlcj17bW9kZTpcImF1dG9cIixzZXJ2ZXJzOltdfX1zZXRMb2NhbEFjY2Vzc1BvaW50c1YyKGUpe2lmKCFlLmFjY2Vzc1BvaW50cyl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9QQVJBTVMsXCJhY2Nlc3NQb2ludHMgaXMgcmVxdWlyZWQuXCIpO3d5KGUuYWNjZXNzUG9pbnRzLnNlcnZlckxpc3QsXCJhY2Nlc3NQb2ludHMuc2VydmVyTGlzdFwiKSxieShlLmFjY2Vzc1BvaW50cy5kb21haW4sXCJhY2Nlc3NQb2ludHMuZG9tYWluXCIpO2NvbnN0IHQ9KGUsdCk9Pnt5eShlLHQsMCw2NTUzNSwhMCl9O2xldCBpPTQ0MztpZihlLmFjY2Vzc1BvaW50cy5wb3J0JiYodChlLmFjY2Vzc1BvaW50cy5wb3J0LFwiYWNjZXNzUG9pbnRzLnBvcnRcIiksaT1lLmFjY2Vzc1BvaW50cy5wb3J0KSx0aGlzLl9wcm94eVNlcnZlcnx8XCJkaXNhYmxlZFwiIT09dGhpcy5fY2xvdWRQcm94eVNlcnZlck1vZGUpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwic2V0IGxvY2FsIGFjY2VzcyBwb2ludCBmYWlsZWQsIFlvdSBoYXZlIGFscmVhZHkgc2V0IHRoZSBjbG91ZCBwcm94eVwiKTtYQShcIkNMT1NFX0FGQl9GT1JfTE9DQUxfQVBcIikmJihKQShcIkpPSU5fV0lUSF9GQUxMQkFDS19TSUdOQUxfUFJPWFlcIiwhMSksSkEoXCJKT0lOX1dJVEhfRkFMTEJBQ0tfTUVESUFfUFJPWFlcIiwhMSkpO2NvbnN0IG49L14oKFxcZHsxLDJ9fDFcXGRcXGR8MlswLTRdXFxkfDI1WzAtNV0pXFwuKXszfShcXGR7MSwyfXwxXFxkXFxkfDJbMC00XVxcZHwyNVswLTVdKSQvLHI9ZS5hY2Nlc3NQb2ludHMuZG9tYWluLG89ZS5hY2Nlc3NQb2ludHMuc2VydmVyTGlzdC5tYXAoKGU9Pm4udGVzdChlKT9cIlwiLmNvbmNhdChlLnJlcGxhY2UoL1xcLi9nLFwiLVwiKSxcIi5cIikuY29uY2F0KHIpOmUpKSxzPW8ubWFwKChlPT5cIlwiLmNvbmNhdChlLFwiOlwiKS5jb25jYXQoaSkpKTt0aGlzLl91c2VMb2NhbEFjY2Vzc1BvaW50PSEwLHRoaXMuX3NldExvY2FsQVBWZXJzaW9uPTIsSkEoXCJXRUJDU19ET01BSU5cIixzKSxKQShcIldFQkNTX0RPTUFJTl9CQUNLVVBfTElTVFwiLHMpLEpBKFwiR0FURVdBWV9ET01BSU5TXCIsW3JdKSxlLnJlcG9ydCYmZS5yZXBvcnQuaG9zdG5hbWUmJkFycmF5LmlzQXJyYXkoZS5yZXBvcnQuaG9zdG5hbWUpJiZlLnJlcG9ydC5ob3N0bmFtZS5sZW5ndGg/KHd5KGUucmVwb3J0Lmhvc3RuYW1lLFwicmVwb3J0Lmhvc3RuYW1lXCIpLEpBKFwiRVZFTlRfUkVQT1JUX0RPTUFJTlwiLGUucmVwb3J0Lmhvc3RuYW1lWzBdKSxKQShcIkVWRU5UX1JFUE9SVF9CQUNLVVBfRE9NQUlOXCIsZS5yZXBvcnQuaG9zdG5hbWVbMV18fGUucmVwb3J0Lmhvc3RuYW1lWzBdKSk6KEpBKFwiRVZFTlRfUkVQT1JUX0RPTUFJTlwiLG9bMF0pLEpBKFwiRVZFTlRfUkVQT1JUX0JBQ0tVUF9ET01BSU5cIixvWzFdfHxvWzBdKSk7bGV0IGE9NjQ0MztlLnJlcG9ydCYmZS5yZXBvcnQucG9ydCYmKHQoZS5yZXBvcnQucG9ydCxcInJlcG9ydC5wb3J0XCIpLGE9ZS5yZXBvcnQucG9ydCksSkEoXCJTVEFUU19DT0xMRUNUT1JfUE9SVFwiLGEpLGUucmVwb3J0P0pBKFwiRU5BQkxFX0VWRU5UX1JFUE9SVFwiLCEwKTpKQShcIkVOQUJMRV9FVkVOVF9SRVBPUlRcIiwhMSk7bGV0IGM9XCJcIjtlLmxvZyYmZS5sb2cuaG9zdG5hbWUmJkFycmF5LmlzQXJyYXkoZS5sb2cuaG9zdG5hbWUpJiZlLmxvZy5ob3N0bmFtZS5sZW5ndGg/KHd5KGUubG9nLmhvc3RuYW1lLFwibG9nLmhvc3RuYW1lXCIpLGM9ZS5sb2cuaG9zdG5hbWVbMF0pOmM9b1swXTtsZXQgZD02NDQ0O2UubG9nJiZlLmxvZy5wb3J0JiYodChlLmxvZy5wb3J0LFwibG9nLnBvcnRcIiksZD1lLmxvZy5wb3J0KSxKQShcIkxPR19VUExPQURfU0VSVkVSXCIsXCJcIi5jb25jYXQoYyxcIjpcIikuY29uY2F0KGQpKTtsZXQgbD1bXTtlLmNkcyYmZS5jZHMuaG9zdG5hbWUmJkFycmF5LmlzQXJyYXkoZS5jZHMuaG9zdG5hbWUpJiZlLmNkcy5ob3N0bmFtZS5sZW5ndGg/KHd5KGUuY2RzLmhvc3RuYW1lLFwiY2RzLmhvc3RuYW1lXCIpLGw9ZS5jZHMuaG9zdG5hbWUpOmw9bztsZXQgdT00NDM7ZS5jZHMmJmUuY2RzLnBvcnQmJih0KGUuY2RzLnBvcnQsXCJjZHMucG9ydFwiKSx1PWUuY2RzLnBvcnQpLEpBKFwiQ0RTX0FQXCIsbC5tYXAoKGU9PlwiXCIuY29uY2F0KGUsXCI6XCIpLmNvbmNhdCh1KSkpKSxlLmNkcz9KQShcIkVOQUJMRV9DT05GSUdfRElTVFJJQlVURVwiLCEwKTpKQShcIkVOQUJMRV9DT05GSUdfRElTVFJJQlVURVwiLCExKSxmYi5pbmZvKFwic2V0IGxvY2FsIGFjY2VzcyBwb2ludCB2MiBzdWNjZXNzXCIpfXNldExvY2FsQWNjZXNzUG9pbnRzKGUsdCl7aWYod3koZSxcInNlcnZlckxpc3RcIiksYnkodCxcImRvbWFpblwiKSx0aGlzLl9wcm94eVNlcnZlcnx8XCJkaXNhYmxlZFwiIT09dGhpcy5fY2xvdWRQcm94eVNlcnZlck1vZGUpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwic2V0IGxvY2FsIGFjY2VzcyBwb2ludCBmYWlsZWQsIFlvdSBoYXZlIGFscmVhZHkgc2V0IHRoZSBjbG91ZCBwcm94eVwiKTtjb25zdCBpPS9eKFxcZHsxLDJ9fDFcXGRcXGR8MlswLTRdXFxkfDI1WzAtNV0pXFwuKFxcZHsxLDJ9fDFcXGRcXGR8MlswLTRdXFxkfDI1WzAtNV0pXFwuKFxcZHsxLDJ9fDFcXGRcXGR8MlswLTRdXFxkfDI1WzAtNV0pXFwuKFxcZHsxLDJ9fDFcXGRcXGR8MlswLTRdXFxkfDI1WzAtNV0pJC87ZT1lLm1hcCgoZT0+aS50ZXN0KGUpP1wiXCIuY29uY2F0KGUucmVwbGFjZSgvXFwuL2csXCItXCIpLFwiLlwiKS5jb25jYXQodCk6ZSkpLHRoaXMuX3VzZUxvY2FsQWNjZXNzUG9pbnQ9ITAsdGhpcy5fc2V0TG9jYWxBUFZlcnNpb249MSxKQShcIldFQkNTX0RPTUFJTlwiLGUpLEpBKFwiV0VCQ1NfRE9NQUlOX0JBQ0tVUF9MSVNUXCIsZSksSkEoXCJHQVRFV0FZX0RPTUFJTlNcIixbdF0pLEpBKFwiRVZFTlRfUkVQT1JUX0RPTUFJTlwiLGVbMF0pLEpBKFwiRVZFTlRfUkVQT1JUX0JBQ0tVUF9ET01BSU5cIixlWzFdfHxlWzBdKSxKQShcIkxPR19VUExPQURfU0VSVkVSXCIsXCJcIi5jb25jYXQoZVswXSxcIjo2NDQ0XCIpKSxmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gc2V0IGxvY2FsIGFjY2VzcyBwb2ludCBzdWNjZXNzXCIpKX1hc3luYyBzZXRSZW1vdGVEZWZhdWx0VmlkZW9TdHJlYW1UeXBlKGUpe2lmKHZ5KGUsXCJzdHJlYW1UeXBlXCIsWzAsMSw0LDUsNiw3LDgsOV0pLHRoaXMuX3JlbW90ZURlZmF1bHRWaWRlb1N0cmVhbVR5cGU9ZSx0aGlzLl9qb2luSW5mbyl0cnl7YXdhaXQgdGhpcy5fZ2F0ZXdheS5zZXREZWZhdWx0UmVtb3RlVmlkZW9TdHJlYW1UeXBlKGUpLHRoaXMuX2pvaW5JbmZvLmRlZmF1bHRWaWRlb1N0cmVhbT10aGlzLl9yZW1vdGVEZWZhdWx0VmlkZW9TdHJlYW1UeXBlfWNhdGNoKGUpe3Rocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gc2V0IGRlZmF1bHQgcmVtb3RlIHZpZGVvIHN0cmVhbSB0eXBlIGVycm9yXCIpLGUudG9TdHJpbmcoKSksZX1lbHNlIGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gaGF2ZW4ndCBqb2luZWQgeWV0LCBjYWNoZSByZW1vdGVEZWZhdWx0VmlkZW9TdHJlYW1UeXBlIFwiKS5jb25jYXQoZSkpfWFzeW5jIHNldFJlbW90ZVZpZGVvU3RyZWFtVHlwZShlLHQpe3Z5KHQsXCJzdHJlYW1UeXBlXCIsWzAsMSw0LDUsNiw3LDgsOV0pO3RyeXthd2FpdCB0aGlzLl9nYXRld2F5LnNldFJlbW90ZVZpZGVvU3RyZWFtVHlwZShlLHQpLHNldFRpbWVvdXQoKCgpPT57Y29uc3QgdD10aGlzLl91c2Vycy5maW5kKCh0PT50LnVpZD09PWUpKTt0JiZ0LnZpZGVvVHJhY2smJnQudmlkZW9UcmFjay51cGRhdGVNZWRpYVN0cmVhbVRyYWNrUmVzb2x1dGlvbigpfSksMmUzKX1jYXRjaChlKXt0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHNldCByZW1vdGUgdmlkZW8gc3RyZWFtIHR5cGUgZXJyb3JcIiksZS50b1N0cmluZygpKSxlfWZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBzZXQgcmVtb3RlIFwiKS5jb25jYXQoZSxcIiB2aWRlbyBzdHJlYW0gdHlwZSB0byBcIikuY29uY2F0KHQpKSx0aGlzLl9yZW1vdGVTdHJlYW1UeXBlQ2FjaGVNYXAuc2V0KGUsdCl9YXN5bmMgc2V0U3RyZWFtRmFsbGJhY2tPcHRpb24oZSx0KXt2eSh0LFwiZmFsbGJhY2tUeXBlXCIsWzAsMSwyLDMsNCw1LDYsNyw4XSk7dHJ5e2F3YWl0IHRoaXMuX2dhdGV3YXkuc2V0U3RyZWFtRmFsbGJhY2tPcHRpb24oZSx0KX1jYXRjaChlKXt0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHNldCBzdHJlYW0gZmFsbGJhY2sgb3B0aW9uXCIpLGUudG9TdHJpbmcoKSksZX1mYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gc2V0IHJlbW90ZSBcIikuY29uY2F0KGUsXCIgc3RyZWFtIGZhbGxiYWNrIHR5cGUgdG8gXCIpLmNvbmNhdCh0KSksdGhpcy5fc3RyZWFtRmFsbGJhY2tUeXBlQ2FjaGVNYXAuc2V0KGUsdCl9c2V0RW5jcnlwdGlvbkNvbmZpZyhlLHQsaSxuKXshZnVuY3Rpb24oZSl7dnkoZSxcImVuY3J5cHRpb25Nb2RlXCIsW1wiYWVzLTEyOC14dHNcIixcImFlcy0yNTYteHRzXCIsXCJhZXMtMTI4LWVjYlwiLFwic200LTEyOC1lY2JcIixcImFlcy0xMjgtZ2NtXCIsXCJhZXMtMjU2LWdjbVwiLFwiYWVzLTEyOC1nY20yXCIsXCJhZXMtMjU2LWdjbTJcIixcIm5vbmVcIl0pfShlKSxieSh0LFwic2VjcmV0XCIpO2NvbnN0IHI9W1wiYWVzLTEyOC1nY20yXCIsXCJhZXMtMjU2LWdjbTJcIl07aWYoRG4ocikuY2FsbChyLGUpKXtpZighaXx8IShpIGluc3RhbmNlb2YgVWludDhBcnJheSYmMzI9PT1pLmxlbmd0aCkpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfUEFSQU1TLFwic2FsdCBtdXN0IGJlIGFuIFVpbnQ4QXJyYXkgYW5kIGV4YWN0bHkgZXF1YWwgdG8gMzIgYnl0ZXNcIil9ZWxzZSBpZihpKXRocm93IG5ldyB5YihSeS5JTlZBTElEX1BBUkFNUyxcImN1cnJlbnQgZW5jcnlwdCBtb2RlIGRvZXMgbm90IG5lZWQgc2FsdFwiKTtpZihuKXtpZihJeShuLFwiZW5jcnlwdERhdGFTdHJlYW1cIiksIURuKHIpLmNhbGwocixlKSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9QQVJBTVMsXCJjdXJyZW50IGVuY3J5cHQgbW9kZSBkb2VzIG5vdCBzdXBwb3J0IGRhdGEgc3RyZWFtXCIpO3RoaXMuX2VuY3J5cHREYXRhU3RyZWFtPSEwfW5ldyBSZWdFeHAoXCJeKD89LipbYS16XSkoPz0uKltBLVpdKSg/PS4qWzAtOV0pKD89LipbIUAjJCVeJiosLjw+Py86OydcXFwifHt9XFxcXFtcXFxcXV0pKD89Lns4LH0pXCIpLnRlc3QodCl8fGZiLndhcm5pbmcoXCJUaGUgc2VjcmV0IGlzIG5vdCBzdHJvbmc6XFxuICAgICAgVGhlIHNlY3JldCBtdXN0IGNvbnRhaW4gYXQgbGVhc3QgMSBsb3dlcmNhc2UgYWxwaGFiZXRpY2FsIGNoYXJhY3RlcixcXG4gICAgICBUaGUgc2VjcmV0IG11c3QgY29udGFpbiBhdCBsZWFzdCAxIHVwcGVyY2FzZSBhbHBoYWJldGljYWwgY2hhcmFjdGVyLFxcbiAgICAgIFRoZSBzZWNyZXQgbXVzdCBjb250YWluIGF0IGxlYXN0IDEgbnVtZXJpYyBjaGFyYWN0ZXIsXFxuICAgICAgVGhlIHNlY3JldCBtdXN0IGNvbnRhaW4gYXQgbGVhc3Qgb25lIHNwZWNpYWwgY2hhcmFjdGVyLFxcbiAgICAgIFRoZSBzZWNyZXQgbXVzdCBiZSBlaWdodCBjaGFyYWN0ZXJzIG9yIGxvbmdlci5cXG4gICAgICBcIiksdGhpcy5fZW5jcnlwdGlvbk1vZGU9ZSx0aGlzLl9lbmNyeXB0aW9uU2VjcmV0PXQsaSYmKHRoaXMuX2VuY3J5cHRpb25TYWx0PXVBKGkpKX1hc3luYyByZW5ld1Rva2VuKGUpe2lmKGJ5KGUsXCJ0b2tlblwiLDEsMjA0NyksIXRoaXMuX2tleXx8IXRoaXMuX2pvaW5JbmZvKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcInJlbmV3VG9rZW4gc2hvdWxkIG5vdCBiZSBjYWxsZWQgYmVmb3JlIHVzZXIgam9pblwiKTtjb25zdCB0PXRoaXMuX2tleTt0aGlzLl9rZXk9ZSx0aGlzLl9qb2luSW5mbyYmKHRoaXMuX2pvaW5JbmZvLnRva2VuPWUpO2NvbnN0IGk9YXdhaXQgdGhpcy5fcmVuZXdUb2tlbk11dGV4LmxvY2soKTt0cnl7aWYoWEEoXCJVU0VfTkVXX1RPS0VOXCIpKXtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHN0YXJ0IHJlbmV3IHRva2VuIHdpdGggdGlja2V0IGZyb20gdW5pbGJzXCIpKTtjb25zdCB0PWF3YWl0IFp4KHRoaXMuX2pvaW5JbmZvLHRoaXMuX2F4aW9zQ2FuY2VsU291cmNlLnRva2VuLHRoaXMuX2NvbmZpZy5odHRwUmV0cnlDb25maWd8fFBBKTtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGdldCB0aWNrZXQgZnJvbSB1bmlsYnMgc3VjY2Vzc1wiKSksYXdhaXQgdGhpcy5fZ2F0ZXdheS5yZW5ld1Rva2VuKHt0b2tlbjplLHRpY2tldDp0fSl9ZWxzZSBmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHN0YXJ0IHJlbmV3IHRva2VuIHdpdGhvdXQgdGlja2V0XCIpKSxhd2FpdCB0aGlzLl9nYXRld2F5LnJlbmV3VG9rZW4oe3Rva2VuOmV9KTtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlbmV3VG9rZW4gc3VjY2Vzc1wiKSl9Y2F0Y2goZSl7dGhyb3cgdGhpcy5fa2V5PXQsdGhpcy5fam9pbkluZm8udG9rZW49dCxmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlbmV3VG9rZW4gZmFpbGVkXCIpLGUudG9TdHJpbmcoKSksZX1maW5hbGx5e2koKX19ZW5hYmxlQXVkaW9Wb2x1bWVJbmRpY2F0b3IoKXt0aGlzLl9hdWRpb1ZvbHVtZUluZGljYXRpb25JbnRlcnZhbD9mYi53YXJuaW5nKFwieW91IGhhdmUgYWxyZWFkeSBlbmFibGVkIGF1ZGlvIHZvbHVtZSBpbmRpY2F0b3IhXCIpOnRoaXMuX2F1ZGlvVm9sdW1lSW5kaWNhdGlvbkludGVydmFsPXdpbmRvdy5zZXRJbnRlcnZhbCgoKCk9Pntjb25zdCBlPXRoaXMuX3AycENoYW5uZWwuZ2V0QXVkaW9MZXZlbHMoKTt0aGlzLnNhZmVFbWl0KHp5LlZPTFVNRV9JTkRJQ0FUT1IsZSl9KSxYQShcIkFVRElPX1ZPTFVNRV9JTkRJQ0FUSU9OX0lOVEVSVkFMXCIpfHwyZTMpfWdldFJUQ1N0YXRzKCl7Y29uc3QgZT10aGlzLl9zdGF0c0NvbGxlY3Rvci5nZXRSVENTdGF0cygpLHQ9dGhpcy5fZ2F0ZXdheS5nZXRJbkNoYW5uZWxJbmZvKCk7cmV0dXJuIGUuRHVyYXRpb249TWF0aC5yb3VuZCh0LmR1cmF0aW9uLzFlMyksZX1hc3luYyBzdGFydExpdmVTdHJlYW1pbmcoZSx0KXtpZighdCl7aWYoXCJoMjY0XCIhPT10aGlzLmNvZGVjKXRocm93IG5ldyB5YihSeS5MSVZFX1NUUkVBTUlOR19JTlZBTElEX1JBV19TVFJFQU0sXCJyYXcgc3RyZWFtaW5nIGlzIG9ubHkgc3VwcG9ydCBoMjY0XCIpO2lmKCF0aGlzLl9wMnBDaGFubmVsLmhhc0xvY2FsTWVkaWEoKSl0aHJvdyBuZXcgeWIoUnkuTElWRV9TVFJFQU1JTkdfSU5WQUxJRF9SQVdfU1RSRUFNLFwiY2FuIG5vdCBmaW5kIHN0cmVhbSB0byByYXcgc3RyZWFtaW5nXCIpfWlmKHRoaXMuX2xpdmVSYXdTdHJlYW1pbmdDbGllbnQmJnRoaXMuX2xpdmVSYXdTdHJlYW1pbmdDbGllbnQuaGFzVXJsKGUpfHx0aGlzLl9saXZlVHJhbnNjb2RlU3RyZWFtaW5nQ2xpZW50JiZ0aGlzLl9saXZlVHJhbnNjb2RlU3RyZWFtaW5nQ2xpZW50Lmhhc1VybChlKSl0aHJvdyBuZXcgeWIoUnkuTElWRV9TVFJFQU1JTkdfVEFTS19DT05GTElDVCk7Y29uc3QgaT10P0Z3LlRSQU5TQ09ERTpGdy5SQVc7cmV0dXJuIHRoaXMuX2NyZWF0ZUxpdmVTdHJlYW1pbmdDbGllbnQoaSkuc3RhcnRMaXZlU3RyZWFtaW5nVGFzayhlLGkpfXNldExpdmVUcmFuc2NvZGluZyhlKXtyZXR1cm4gdGhpcy5fY3JlYXRlTGl2ZVN0cmVhbWluZ0NsaWVudChGdy5UUkFOU0NPREUpLnNldFRyYW5zY29kaW5nQ29uZmlnKGUpfWFzeW5jIHN0b3BMaXZlU3RyZWFtaW5nKGUpe2NvbnN0IHQ9W3RoaXMuX2xpdmVSYXdTdHJlYW1pbmdDbGllbnQsdGhpcy5fbGl2ZVRyYW5zY29kZVN0cmVhbWluZ0NsaWVudF0uZmlsdGVyKCh0PT50JiZ0Lmhhc1VybChlKSkpO2lmKCF0Lmxlbmd0aCl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9QQVJBTVMsXCJjYW4gbm90IGZpbmQgbGl2ZSBzdHJlYW1pbmcgdXJsIHRvIHN0b3BcIik7YXdhaXQgR2guYWxsKHQubWFwKCh0PT50JiZ0LnN0b3BMaXZlU3RyZWFtaW5nVGFzayhlKSkpKX1hc3luYyBzdGFydENoYW5uZWxNZWRpYVJlbGF5KGUpe0xGKGUpO2NvbnN0IHQ9dGhpcy5fY3JlYXRlQ2hhbm5lbE1lZGlhUmVsYXlDbGllbnQoKTthd2FpdCB0LnN0YXJ0Q2hhbm5lbE1lZGlhUmVsYXkoZSl9YXN5bmMgdXBkYXRlQ2hhbm5lbE1lZGlhUmVsYXkoZSl7TEYoZSk7Y29uc3QgdD10aGlzLl9jcmVhdGVDaGFubmVsTWVkaWFSZWxheUNsaWVudCgpO2F3YWl0IHQudXBkYXRlQ2hhbm5lbE1lZGlhUmVsYXkoZSl9YXN5bmMgc3RvcENoYW5uZWxNZWRpYVJlbGF5KCl7Y29uc3QgZT10aGlzLl9jcmVhdGVDaGFubmVsTWVkaWFSZWxheUNsaWVudCgpO2F3YWl0IGUuc3RvcENoYW5uZWxNZWRpYVJlbGF5KCksdGhpcy5fc3RhdHNDb2xsZWN0b3Iub25TdGF0c0NoYW5nZWQmJih0aGlzLl9zdGF0c0NvbGxlY3Rvci5vblN0YXRzQ2hhbmdlZD12b2lkIDApfWFzeW5jIHNlbmRTdHJlYW1NZXNzYWdlKGUpe3ZhciB0O2xldCBpPSEoYXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0pfHxhcmd1bWVudHNbMV07aWYoIXRoaXMuX2pvaW5JbmZvKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcImNhbiBub3Qgc2VuZCBkYXRhIHN0cmVhbSwgbm90IGpvaW5lZFwiKTtpZigoXCJzdHJpbmdcIj09dHlwZW9mIGV8fGUgaW5zdGFuY2VvZiBVaW50OEFycmF5KSYmKGU9e3BheWxvYWQ6ZX0pLFwic3RyaW5nXCI9PXR5cGVvZiBlLnBheWxvYWQpe2NvbnN0IHQ9bmV3IFRleHRFbmNvZGVyO2UucGF5bG9hZD10LmVuY29kZShlLnBheWxvYWQpfWxldCBuPSExO3RoaXMuX2VuY3J5cHREYXRhU3RyZWFtJiZ0aGlzLl9lbmNyeXB0RGF0YVN0cmVhbUl2JiZ0aGlzLl9lbmNyeXB0RGF0YVN0cmVhbUtleSYmd2luZG93LmNyeXB0by5zdWJ0bGUmJkRuKHQ9W1wiYWVzLTEyOC1nY20yXCIsXCJhZXMtMjU2LWdjbTJcIl0pLmNhbGwodCx0aGlzLl9lbmNyeXB0aW9uTW9kZSkmJihuPSEwLGUucGF5bG9hZD1hd2FpdCBhc3luYyBmdW5jdGlvbihlLHQsaSl7dmFyIG47Y29uc3Qgcj1KbihuPUFycmF5LmZyb20oaSkpLmNhbGwobiwoKGUsdCk9PmUrdCksMCksbz17c2VydmVyVHM6MCxzZXE6b2IrKyxsZW5ndGg6aS5sZW5ndGgsY2hlY2tTdW06cn0scz1uZXcgVWludDhBcnJheSh5QShyLDIpKSxhPW5ldyBBcnJheUJ1ZmZlcihyYiksYz1uZXcgRGF0YVZpZXcoYSk7Yy5zZXRVaW50MzIoMCxvLnNlcnZlclRzKSxjLnNldFVpbnQxNig0LG8uc2VxKSxjLnNldFVpbnQxNig2LG8ubGVuZ3RoKSxjLnNldFVpbnQxNig4LG8uY2hlY2tTdW0pO2NvbnN0IGQ9MTYtaS5sZW5ndGglMTY7aT1wQShpLG5ldyBVaW50OEFycmF5KGQpKTtjb25zdCBsPWF3YWl0IHdpbmRvdy5jcnlwdG8uc3VidGxlLmVuY3J5cHQoe25hbWU6XCJBRVMtR0NNXCIsaXY6ZSx0YWdMZW5ndGg6dGIsYWRkaXRpb25hbERhdGE6c30sdCxpKTtyZXR1cm4gcEEobmV3IFVpbnQ4QXJyYXkoYSksbmV3IFVpbnQ4QXJyYXkobCkpfSh0aGlzLl9lbmNyeXB0RGF0YVN0cmVhbUl2LHRoaXMuX2VuY3J5cHREYXRhU3RyZWFtS2V5LGUucGF5bG9hZCkpO2lmKG5ldyBCbG9iKFtlLnBheWxvYWRdKS5zaXplPjEwMjQpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfUEFSQU1TLG4/XCJlbmNyeXB0ZWQgc3RyZWFtIG1lc3NhZ2Ugb3V0IG9mIHJhbmdlLlwiOlwic3RyZWFtIG1lc3NhZ2Ugb3V0IG9mIHJhbmdlLlwiKTtyZXR1cm4gdGhpcy5fZ2F0ZXdheS5zaWduYWwucmVxdWVzdChQdy5EQVRBX1NUUkVBTSx7cGF5bG9hZDp1QShlLnBheWxvYWQpLHN5bmNXaXRoQXVkaW86ZS5zeW5jV2l0aEF1ZGlvLHNlbmRUczpEYXRlLm5vdygpLXZCfSwhaSl9c2VuZE1ldGFkYXRhKGUpe2lmKCF0aGlzLl9qb2luSW5mbyl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJjYW4gbm90IHNlbmQgbWV0YWRhdGEsIG5vdCBqb2luZWRcIik7aWYobmV3IEJsb2IoW2VdKS5zaXplPjEwMjQpdGhyb3cgbmV3IHliKFJ5Lk1FVEFEQVRBX09VVF9PRl9SQU5HRSk7cmV0dXJuIHRoaXMuX2dhdGV3YXkuc2lnbmFsLnJlcXVlc3QoUHcuU0VORF9NRVRBREFUQSx7c2Vzc2lvbl9pZDp0aGlzLl9qb2luSW5mby5zaWQsbWV0YWRhdGE6dUEoZSl9KX1hc3luYyBzZW5kQ3VzdG9tUmVwb3J0TWVzc2FnZShlKXtpZihBcnJheS5pc0FycmF5KGUpfHwoZT1bZV0pLGUuZm9yRWFjaChUYiksIXRoaXMuX2pvaW5JbmZvKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcImNhbiBub3Qgc2VuZCBjdXN0b20gcmVwb3J0LCBub3Qgam9pbmVkXCIpO2F3YWl0IHZiLnNlbmRDdXN0b21SZXBvcnRNZXNzYWdlKHRoaXMuX2pvaW5JbmZvLnNpZCxlKX1nZXRMb2NhbEF1ZGlvU3RhdHMoKXtyZXR1cm4gdGhpcy5fc3RhdHNDb2xsZWN0b3IuZ2V0TG9jYWxBdWRpb1RyYWNrU3RhdHMoKX1nZXRSZW1vdGVBdWRpb1N0YXRzKCl7cmV0dXJuIHRoaXMuX3N0YXRzQ29sbGVjdG9yLmdldFJlbW90ZUF1ZGlvVHJhY2tTdGF0cygpfWdldExvY2FsVmlkZW9TdGF0cygpe3JldHVybiB0aGlzLl9zdGF0c0NvbGxlY3Rvci5nZXRMb2NhbFZpZGVvVHJhY2tTdGF0cygpfWdldFJlbW90ZVZpZGVvU3RhdHMoKXtyZXR1cm4gdGhpcy5fc3RhdHNDb2xsZWN0b3IuZ2V0UmVtb3RlVmlkZW9UcmFja1N0YXRzKCl9Z2V0UmVtb3RlTmV0d29ya1F1YWxpdHkoKXtyZXR1cm4gdGhpcy5fc3RhdHNDb2xsZWN0b3IuZ2V0UmVtb3RlTmV0d29ya1F1YWxpdHlTdGF0cygpfWFzeW5jIHBpY2tTVkNMYXllcihlLHQpe3Z5KHQuc3BhdGlhbExheWVyLFwic3BhdGlhbExheWVyXCIsWzAsMSwyLDNdKSx2eSh0LnRlbXBvcmFsTGF5ZXIsXCJ0ZW1wb3JhbExheWVyXCIsWzAsMSwyLDNdKTt0cnl7YXdhaXQgdGhpcy5fZ2F0ZXdheS5waWNrU1ZDTGF5ZXIoZSx0KX1jYXRjaChlKXt0aHJvdyBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHBpY2sgU1ZDIGxheWVyIGZhaWxlZFwiKSxlLnRvU3RyaW5nKCkpLGV9fWFzeW5jIHNldFJUTUNvbmZpZyhlKXtjb25zdHthcFJUTTp0PSExLHJ0bUZsYWc6aX09ZTtpZihJeSh0LFwiYXBSVE1cIikseXkoaSxcInJ0bUZsYWdcIiwwKSx0aGlzLl9ydG1Db25maWcuYXBSVE09dCx0aGlzLl9ydG1Db25maWcucnRtRmxhZz1pLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gc2V0UlRNY29uZmlnIFwiKS5jb25jYXQoSlNPTi5zdHJpbmdpZnkoZSksXCIgaW4gXCIpLmNvbmNhdCh0aGlzLmNvbm5lY3Rpb25TdGF0ZSxcIiBzdGF0ZVwiKSksKFwiQ09OTkVDVEVEXCI9PT10aGlzLmNvbm5lY3Rpb25TdGF0ZXx8XCJSRUNPTk5FQ1RJTkdcIj09PXRoaXMuY29ubmVjdGlvblN0YXRlKSYmdGhpcy5fam9pbkluZm8pcmV0dXJuIHRoaXMuX2pvaW5JbmZvLmFwUlRNPXQsdGhpcy5fam9pbkluZm8ucnRtRmxhZz1pLHRoaXMuX2dhdGV3YXkuc2V0UlRNMkZsYWcoaSl9X3Jlc2V0KCl7aWYoZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSByZXNldCBjbGllbnRcIikpLHRoaXMuX2F4aW9zQ2FuY2VsU291cmNlLmNhbmNlbCgpLHRoaXMuX2F4aW9zQ2FuY2VsU291cmNlPUx2LkNhbmNlbFRva2VuLnNvdXJjZSgpLHRoaXMuX3N0cmVhbUZhbGxiYWNrVHlwZUNhY2hlTWFwPW5ldyBNYXAsdGhpcy5fcmVtb3RlU3RyZWFtVHlwZUNhY2hlTWFwPW5ldyBNYXAsdGhpcy5fY29uZmlnRGlzdHJpYnV0ZS5zdG9wR2V0Q29uZmlnRGlzdHJpYnV0ZSgpLHRoaXMuX2pvaW5JbmZvJiZKQih0aGlzLl9qb2luSW5mbyksdGhpcy5fam9pbkluZm89dm9pZCAwLHRoaXMuX3Byb3h5U2VydmVyPXZvaWQgMCx0aGlzLl9kZWZhdWx0U3RyZWFtRmFsbGJhY2tUeXBlPXZvaWQgMCx0aGlzLl9zZXNzaW9uSWQmJnZiLnJlbW92ZVNpZCh0aGlzLl9zZXNzaW9uSWQpLHRoaXMuX3Nlc3Npb25JZD1udWxsLHRoaXMuc3RvcmUuc2Vzc2lvbklkPW51bGwsdGhpcy5fc3RhdHNDb2xsZWN0b3IucmVzZXQoKSx0aGlzLl9rZXk9dm9pZCAwLHRoaXMuX2FwcElkPXZvaWQgMCx0aGlzLl91aWQ9dm9pZCAwLHRoaXMuc3RvcmUudWlkPXZvaWQgMCx0aGlzLl9jaGFubmVsTmFtZT12b2lkIDAsdGhpcy5fZW5jcnlwdGlvbk1vZGU9XCJub25lXCIsdGhpcy5fZW5jcnlwdGlvblNlY3JldD1udWxsLHRoaXMuX2VuY3J5cHRpb25TYWx0PW51bGwsdGhpcy5fZW5jcnlwdERhdGFTdHJlYW1LZXk9bnVsbCx0aGlzLl9lbmNyeXB0RGF0YVN0cmVhbUl2PW51bGwsdGhpcy5fcGVuZGluZ1B1Ymxpc2hlZFVzZXJzPVtdLHRoaXMuX3VzZXJzLmZvckVhY2goKGU9PntlLl9hdWRpb1RyYWNrJiZlLl9hdWRpb1RyYWNrLl9kZXN0cm95KCksZS5fdmlkZW9UcmFjayYmZS5fdmlkZW9UcmFjay5fZGVzdHJveSgpLGUuX2RhdGFDaGFubmVscyYmKGUuX2RhdGFDaGFubmVscy5mb3JFYWNoKChlPT5lLl9jbG9zZSgpKSksZS5fZGF0YUNoYW5uZWxzLmxlbmd0aD0wKX0pKSx0aGlzLl91c2Vycz1bXSx0aGlzLl9hdWRpb1ZvbHVtZUluZGljYXRpb25JbnRlcnZhbCYmKHdpbmRvdy5jbGVhckludGVydmFsKHRoaXMuX2F1ZGlvVm9sdW1lSW5kaWNhdGlvbkludGVydmFsKSx0aGlzLl9hdWRpb1ZvbHVtZUluZGljYXRpb25JbnRlcnZhbD12b2lkIDApLFwiZmFsbGJhY2tcIj09PXRoaXMuX2Nsb3VkUHJveHlTZXJ2ZXJNb2RlJiYodGhpcy5fY2xvdWRQcm94eVNlcnZlck1vZGU9XCJkaXNhYmxlZFwiLHRoaXMuc3RvcmUuY2xvdWRQcm94eVNlcnZlck1vZGU9XCJkaXNhYmxlZFwiKSx0aGlzLl9wMnBDaGFubmVsLnJlc2V0KCksdGhpcy5fcHVibGlzaE11dGV4PW5ldyBOQShcImNsaWVudC1wdWJsaXNoXCIpLHRoaXMuX3N1YnNjcmliZU11dGV4PW5ldyBOQShcImNsaWVudC1zdWJzY3JpYmVcIiksdGhpcy5fbmV0d29ya1F1YWxpdHlJbnRlcnZhbCYmKHdpbmRvdy5jbGVhckludGVydmFsKHRoaXMuX25ldHdvcmtRdWFsaXR5SW50ZXJ2YWwpLHRoaXMuX25ldHdvcmtRdWFsaXR5SW50ZXJ2YWw9dm9pZCAwKSx0aGlzLl9saXZlUmF3U3RyZWFtaW5nQ2xpZW50JiYodGhpcy5fbGl2ZVJhd1N0cmVhbWluZ0NsaWVudC50ZXJtaW5hdGUoKSx0aGlzLl9saXZlUmF3U3RyZWFtaW5nQ2xpZW50LnJlbW92ZUFsbExpc3RlbmVycygpLHRoaXMuX2xpdmVSYXdTdHJlYW1pbmdDbGllbnQ9dm9pZCAwKSx0aGlzLl9saXZlVHJhbnNjb2RlU3RyZWFtaW5nQ2xpZW50JiYodGhpcy5fbGl2ZVRyYW5zY29kZVN0cmVhbWluZ0NsaWVudC50ZXJtaW5hdGUoKSx0aGlzLl9saXZlVHJhbnNjb2RlU3RyZWFtaW5nQ2xpZW50LnJlbW92ZUFsbExpc3RlbmVycygpLHRoaXMuX2xpdmVUcmFuc2NvZGVTdHJlYW1pbmdDbGllbnQ9dm9pZCAwKSx0aGlzLl9jaGFubmVsTWVkaWFSZWxheUNsaWVudCYmKHRoaXMuX2NoYW5uZWxNZWRpYVJlbGF5Q2xpZW50LmRpc3Bvc2UoKSx0aGlzLl9jaGFubmVsTWVkaWFSZWxheUNsaWVudD12b2lkIDApLHRoaXMuX2luc3BlY3QpdHJ5e3RoaXMuX2luc3BlY3QuY2xvc2UoKSx0aGlzLl9pbnNwZWN0PXZvaWQgMH1jYXRjaChlKXt9aWYodGhpcy5fbW9kZXJhdGlvbil0cnl7dGhpcy5zZXRJbWFnZU1vZGVyYXRpb24oITEpfWNhdGNoKGUpe319X3N0YXJ0U2Vzc2lvbihlLHQpe3ZhciBpO2NvbnN0IG49ZXx8U0EoKTtlP2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gbmV3IFNlc3Npb24gXCIpLmNvbmNhdChuKSk6ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSByZW5ld1Nlc3Npb24gXCIpLmNvbmNhdCh0aGlzLl9zZXNzaW9uSWQsXCIgPT4gXCIpLmNvbmNhdChuKSk7Y29uc3Qgcj1lP1wiXCI6dGhpcy5fc2Vzc2lvbklkfHxcIlwiO3RoaXMuX3Nlc3Npb25JZD1uLHRoaXMuc3RvcmUuc2Vzc2lvbklkPW4sdmIuYWRkU2lkKG4pO2NvbnN0IG89e2x0czoobmV3IERhdGUpLmdldFRpbWUoKSxtb2RlOnRoaXMubW9kZSxidWlsZEZvcm1hdDoyLHN0cmluZ1VpZDoobnVsbD09dD92b2lkIDA6dC5zdHJpbmdVaWQpfHwobnVsbD09PShpPXRoaXMuX2pvaW5JbmZvKXx8dm9pZCAwPT09aT92b2lkIDA6aS5zdHJpbmdVaWQpLGNoYW5uZWxQcm9maWxlOlwibGl2ZVwiPT09dGhpcy5tb2RlPzE6MCxjaGFubmVsTW9kZTowLGlzQUJUZXN0U3VjY2VzczpOdW1iZXIodGhpcy5fY29uZmlnRGlzdHJpYnV0ZS5pc1N1Y2Nlc3MpLGxzaWQ6cixjbGllbnRSb2xlOlwiYXVkaWVuY2VcIj09PXRoaXMucm9sZT8yOjF9O3ZiLnNlc3Npb25Jbml0KHRoaXMuX3Nlc3Npb25JZCxJRyh7Y25hbWU6dC5jaGFubmVsLGFwcGlkOnQuYXBwSWR9LG8pKSx0aGlzLl9qb2luSW5mbyYmKHRoaXMuX2pvaW5JbmZvLnNpZD1uKSx0aGlzLl9nYXRld2F5LmpvaW5JbmZvJiYodGhpcy5fZ2F0ZXdheS5qb2luSW5mby5zaWQ9bil9YXN5bmMgX3B1Ymxpc2hIaWdoU3RyZWFtKGUpe2lmKCF0aGlzLl9qb2luSW5mb3x8dm9pZCAwPT09dGhpcy5fdWlkKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcIkNhbid0IHB1Ymxpc2ggc3RyZWFtLCBoYXZlbid0IGpvaW5lZCB5ZXQhXCIpO2lmKFwiQ09OTkVDVEVEXCIhPT10aGlzLmNvbm5lY3Rpb25TdGF0ZSYmXCJSRUNPTk5FQ1RJTkdcIiE9PXRoaXMuY29ubmVjdGlvblN0YXRlKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcImNhbiBub3QgcHVibGlzaCBzdHJlYW0gaW4gXCIuY29uY2F0KHRoaXMuY29ubmVjdGlvblN0YXRlLFwiIHN0YXRlXCIpKTtpZihcImF1dG9cIj09PXRoaXMuX3R1cm5TZXJ2ZXIubW9kZSYmWEEoXCJGT1JDRV9UVVJOXCIpJiYhWEEoXCJUVVJOX0VOQUJMRV9UQ1BcIikmJiFYQShcIlRVUk5fRU5BQkxFX1VEUFwiKSl0aHJvdyBuZXcgeWIoUnkuVU5FWFBFQ1RFRF9FUlJPUixcImZvcmNlIFRVUk4gV2l0aCBObyBUVVJOIENvbmZpZ3VyYXRpb25cIik7ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBwdWJsaXNoIGhpZ2ggc3RyZWFtXCIpKTt0cnl7Y29uc3QgaT1hd2FpdCB0aGlzLl9wMnBDaGFubmVsLnB1Ymxpc2goZSx0aGlzLl9pc0R1YWxTdHJlYW1FbmFibGVkLHRoaXMuX2xvd1N0cmVhbVBhcmFtZXRlcik7aWYodGhpcy5fcDJwQ2hhbm5lbCBpbnN0YW5jZW9mIGJGKXtjb25zdCBlPShhd2FpdCBpLm5leHQoKSkudmFsdWU7aWYoZSl7dHJ5e2F3YWl0IHRoaXMuX2dhdGV3YXkuc2VuZEV4dGVuc2lvbk1lc3NhZ2UoSU8uUFVCTElTSCxlLCEwKX1jYXRjaChlKXt0aHJvdyBpLnRocm93KGUpLGV9YXdhaXQgaS5uZXh0KCl9dGhpcy5fcDJwQ2hhbm5lbC5yZXBvcnRQdWJsaXNoRXZlbnQoITAsbnVsbCl9ZWxzZXtjb25zdCBuPShhd2FpdCBpLm5leHQoKSkudmFsdWU7aWYobil7dmFyIHQ7bGV0IGU7dHJ5e2U9YXdhaXQgdGhpcy5fZ2F0ZXdheS5wdWJsaXNoKHRoaXMuX3VpZCxuLCEwKX1jYXRjaChlKXtpZihlLmNvZGUhPT1SeS5ESVNDT05ORUNUX1AyUCl0aHJvdyBpLnRocm93KGUpLGV9YXdhaXQgaS5uZXh0KChudWxsPT09KHQ9ZSl8fHZvaWQgMD09PXQ/dm9pZCAwOnQub3J0Yyl8fFtdKX10aGlzLl9wMnBDaGFubmVsLnJlcG9ydFB1Ymxpc2hFdmVudCghMCxudWxsKTtmb3IoY29uc3QgdCBvZiBlKXQgaW5zdGFuY2VvZiBhVSYmdC5fZW5jb2RlckNvbmZpZyYmdGhpcy5fZ2F0ZXdheS5zZXRWaWRlb1Byb2ZpbGUodC5fZW5jb2RlckNvbmZpZyksIXQubXV0ZWQmJnQuZW5hYmxlZHx8YXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC5tdXRlTG9jYWxUcmFjayh0KX19Y2F0Y2godCl7aWYodGhpcy5fcDJwQ2hhbm5lbC5yZXBvcnRQdWJsaXNoRXZlbnQoITEsbnVsbD09dD92b2lkIDA6dC5jb2RlLGUpLChudWxsPT10P3ZvaWQgMDp0LmNvZGUpPT09UnkuV1NfQUJPUlQpcmV0dXJuO3Rocm93IHR9fWFzeW5jIF9wdWJsaXNoTG93U3RyZWFtKCl7aWYoIXRoaXMuX2pvaW5JbmZvfHx2b2lkIDA9PT10aGlzLl91aWQpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiQ2FuJ3QgcHVibGlzaCBzdHJlYW0sIGhhdmVuJ3Qgam9pbmVkIHlldCFcIik7aWYoXCJDT05ORUNURURcIiE9PXRoaXMuY29ubmVjdGlvblN0YXRlJiZcIlJFQ09OTkVDVElOR1wiIT09dGhpcy5jb25uZWN0aW9uU3RhdGUpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiY2FuIG5vdCBwdWJsaXNoIHN0cmVhbSBpbiBcIi5jb25jYXQodGhpcy5jb25uZWN0aW9uU3RhdGUsXCIgc3RhdGVcIikpO2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcHVibGlzaCBsb3cgc3RyZWFtXCIpKTtjb25zdCBlPXRoaXMuX2NvbmZpZ0Rpc3RyaWJ1dGUuZ2V0TG93U3RyZWFtQ29uZmlnRGlzdHJpYnV0ZSgpO2UmJmUuYml0cmF0ZSYmKHRoaXMuX2xvd1N0cmVhbVBhcmFtZXRlcnx8KHRoaXMuX2xvd1N0cmVhbVBhcmFtZXRlcj17d2lkdGg6MTYwLGhlaWdodDoxMjAsZnJhbWVyYXRlOjE1LGJpdHJhdGU6NTB9KSx0aGlzLl9sb3dTdHJlYW1QYXJhbWV0ZXImJnRoaXMuX2xvd1N0cmVhbVBhcmFtZXRlci5iaXRyYXRlJiZlLmJpdHJhdGU8dGhpcy5fbG93U3RyZWFtUGFyYW1ldGVyLmJpdHJhdGUmJih0aGlzLl9sb3dTdHJlYW1QYXJhbWV0ZXIuYml0cmF0ZT1lLmJpdHJhdGUpKTt0cnl7Y29uc3QgZT1hd2FpdCB0aGlzLl9wMnBDaGFubmVsLnB1Ymxpc2hMb3dTdHJlYW0odGhpcy5fbG93U3RyZWFtUGFyYW1ldGVyKSxpPShhd2FpdCBlLm5leHQoKSkudmFsdWU7aWYoaSl7dmFyIHQ7bGV0IG47dHJ5e249YXdhaXQgdGhpcy5fZ2F0ZXdheS5wdWJsaXNoKHRoaXMuX3VpZCxpLCEwKX1jYXRjaCh0KXtpZih0LmNvZGUhPT1SeS5ESVNDT05ORUNUX1AyUCl0aHJvdyBlLnRocm93KHQpLHR9ZS5uZXh0KChudWxsPT09KHQ9bil8fHZvaWQgMD09PXQ/dm9pZCAwOnQub3J0Yyl8fFtdKSx0aGlzLl9wMnBDaGFubmVsLnJlcG9ydFB1Ymxpc2hFdmVudCghMCxudWxsLHZvaWQgMCwhMCl9fWNhdGNoKGUpe2lmKHRoaXMuX3AycENoYW5uZWwucmVwb3J0UHVibGlzaEV2ZW50KCExLG51bGw9PWU/dm9pZCAwOmUuY29kZSx2b2lkIDAsITApLChudWxsPT1lP3ZvaWQgMDplLmNvZGUpPT09UnkuV1NfQUJPUlQpcmV0dXJuO3Rocm93IGV9fV9jcmVhdGVMaXZlU3RyZWFtaW5nQ2xpZW50KGUpe2NvbnN0IHQ9KCk9PntpZighdGhpcy5fam9pbkluZm98fCF0aGlzLl9hcHBJZCl7cmV0dXJuIG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcImNhbiBub3QgY3JlYXRlIGxpdmUgc3RyZWFtaW5nIGNsaWVudCwgcGxlYXNlIGpvaW4gY2hhbm5lbCBmaXJzdFwiKS50aHJvdygpfWNvbnN0IGU9KHQ9e2pvaW5JbmZvOnRoaXMuX2pvaW5JbmZvLGFwcElkOnRoaXMuX2FwcElkLHdlYnNvY2tldFJldHJ5Q29uZmlnOnRoaXMuX2NvbmZpZy53ZWJzb2NrZXRSZXRyeUNvbmZpZyxodHRwUmV0cnlDb25maWc6dGhpcy5fY29uZmlnLmh0dHBSZXRyeUNvbmZpZ30sZ0IoXCJMaXZlU3RyZWFtaW5nXCIpLmNyZWF0ZSh0KSk7dmFyIHQ7cmV0dXJuIGUub25MaXZlU3RyZWFtRXJyb3I9KGUsdCk9Pnt2Yi5yZXBvcnRBcGlJbnZva2UodGhpcy5fc2Vzc2lvbklkLHtuYW1lOkJ5Lk9OX0xJVkVfU1RSRUFNX0VSUk9SLG9wdGlvbnM6W2UsdF0sdGFnOmp5LlRSQUNFUn0pLm9uU3VjY2VzcygpLHRoaXMuc2FmZUVtaXQoenkuTElWRV9TVFJFQU1JTkdfRVJST1IsZSx0KX0sZS5vbkxpdmVTdHJlYW1XYXJuaW5nPShlLHQpPT57dmIucmVwb3J0QXBpSW52b2tlKHRoaXMuX3Nlc3Npb25JZCx7bmFtZTpCeS5PTl9MSVZFX1NUUkVBTV9XQVJOSU5HLG9wdGlvbnM6W2UsdF0sdGFnOmp5LlRSQUNFUn0pLm9uU3VjY2VzcygpLHRoaXMuc2FmZUVtaXQoenkuTElWRV9TVFJFQU1JTkdfV0FSTklORyxlLHQpfSxlLm9uKEt3LlJFUVVFU1RfV09SS0VSX01BTkFHRVJfTElTVCwoKGUsdCxpKT0+e2lmKCF0aGlzLl9qb2luSW5mbylyZXR1cm4gaShuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJjYW4gbm90IGZpbmQgam9pbiBpbmZvIHRvIGdldCB3b3JrZXIgbWFuYWdlclwiKSk7KGFzeW5jIGZ1bmN0aW9uKGUsdCxpLG4pe2NvbnN0IHI9WEEoXCJVQVBfQVBcIikuc2xpY2UoMCxYQShcIkFKQVhfUkVRVUVTVF9DT05DVVJSRU5UXCIpKS5tYXAoKGU9PnQucHJveHlTZXJ2ZXI/XCJodHRwczovL1wiLmNvbmNhdCh0LnByb3h5U2VydmVyLFwiL2FwLz91cmw9XCIpLmNvbmNhdChlK1wiL2FwaS92MT9hY3Rpb249dWFwXCIpOlwiaHR0cHM6Ly9cIi5jb25jYXQoZSxcIi9hcGkvdjE/YWN0aW9uPXVhcFwiKSkpO3JldHVybiBhd2FpdCBEeChyLGUsdCxpLG4pfSkoZSx0aGlzLl9qb2luSW5mbyx0aGlzLl9heGlvc0NhbmNlbFNvdXJjZS50b2tlbixQQSkudGhlbih0KS5jYXRjaChpKX0pKSxlfTtyZXR1cm4gZT09PUZ3LlJBVz8odGhpcy5fbGl2ZVJhd1N0cmVhbWluZ0NsaWVudD10aGlzLl9saXZlUmF3U3RyZWFtaW5nQ2xpZW50fHx0KCksdGhpcy5fbGl2ZVJhd1N0cmVhbWluZ0NsaWVudCk6KHRoaXMuX2xpdmVUcmFuc2NvZGVTdHJlYW1pbmdDbGllbnQ9dGhpcy5fbGl2ZVRyYW5zY29kZVN0cmVhbWluZ0NsaWVudHx8dCgpLHRoaXMuX2xpdmVUcmFuc2NvZGVTdHJlYW1pbmdDbGllbnQpfV9jcmVhdGVDaGFubmVsTWVkaWFSZWxheUNsaWVudCgpe2lmKCF0aGlzLl9qb2luSW5mbyl7cmV0dXJuIG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcImNhbiBub3QgY3JlYXRlIGNoYW5uZWwgbWVkaWEgcmVsYXkgY2xpZW50LCBwbGVhc2Ugam9pbiBjaGFubmVsIGZpcnN0XCIpLnRocm93KCl9aWYoIXRoaXMuX2NoYW5uZWxNZWRpYVJlbGF5Q2xpZW50KXtjb25zdHtzZW5kUmVzb2x1dGlvbldpZHRoOnQsc2VuZFJlc29sdXRpb25IZWlnaHQ6aX09dGhpcy5nZXRMb2NhbFZpZGVvU3RhdHMoKSxuPShlPXtqb2luSW5mbzp0aGlzLl9qb2luSW5mbyxjbGllbnRJZDp0aGlzLl9jbGllbnRJZCx3ZWJzb2NrZXRSZXRyeUNvbmZpZzp0aGlzLl9jb25maWcud2Vic29ja2V0UmV0cnlDb25maWcsaHR0cFJldHJ5Q29uZmlnOnRoaXMuX2NvbmZpZy5odHRwUmV0cnlDb25maWcscmVzb2x1dGlvbjp7d2lkdGg6dCxoZWlnaHQ6aX19LGdCKFwiQ2hhbm5lbE1lZGlhUmVsYXlcIikuY3JlYXRlKGUpKTtuLm9uKFwic3RhdGVcIiwoZT0+e2U9PT1Ydy5SRUxBWV9TVEFURV9GQUlMVVJFJiZuJiZuLmRpc3Bvc2UoKSx0aGlzLnNhZmVFbWl0KHp5LkNIQU5ORUxfTUVESUFfUkVMQVlfU1RBVEUsZSl9KSksbi5vbihcImV2ZW50XCIsKGU9Pnt0aGlzLnNhZmVFbWl0KHp5LkNIQU5ORUxfTUVESUFfUkVMQVlfRVZFTlQsZSl9KSksdGhpcy5fY2hhbm5lbE1lZGlhUmVsYXlDbGllbnQ9bix0aGlzLl9zdGF0c0NvbGxlY3Rvci5vblN0YXRzQ2hhbmdlZD0oZSx0KT0+e3ZhciBpO1wicmVzb2x1dGlvblwiPT09ZSYmKG51bGw9PT0oaT10aGlzLl9jaGFubmVsTWVkaWFSZWxheUNsaWVudCl8fHZvaWQgMD09PWl8fGkuc2V0VmlkZW9Qcm9maWxlKHQpKX19dmFyIGU7cmV0dXJuIHRoaXMuX2NoYW5uZWxNZWRpYVJlbGF5Q2xpZW50fV9oYW5kbGVVcGRhdGVEYXRhQ2hhbm5lbChlLHQpe2NvbnN0e2FkZGVkOmksZGVsZXRlZDpufT1lLHI9W107aWYodCl7Y29uc3QgZT1bXTt0aGlzLl91c2Vycy5mb3JFYWNoKCh0PT57dC5fZGF0YUNoYW5uZWxzLmZvckVhY2goKG49PntpLmV2ZXJ5KChlPT5lLnVpZCE9PXQuX3VpbnRpZHx8ZS5zdHJlYW1faWQhPT1uLmlkKSkmJmUucHVzaCh7dWlkOnQuX3VpbnRpZCxzdHJlYW1faWQ6bi5pZCxvcmRlcmVkOm4ub3JkZXJlZCxtYXhfcmV0cmFuc190aW1lczpuLm1heFJldHJhbnNtaXRzLG1ldGFkYXRhOm4ubWV0YWRhdGF9KX0pKX0pKSxlLmxlbmd0aD4wJiZ0aGlzLl9oYW5kbGVVcGRhdGVEYXRhQ2hhbm5lbCh7YWRkZWQ6W10sZGVsZXRlZDplfSl9QXJyYXkuaXNBcnJheShpKSYmaS5sZW5ndGg+MCYmaS5mb3JFYWNoKChlPT57Y29uc3R7dWlkOmksc3RyZWFtX2lkOm4sb3JkZXJlZDpvLG1heF9yZXRyYW5zX3RpbWVzOnMsbWV0YWRhdGE6YX09ZSxjPXRoaXMuX3VzZXJzLmZpbmQoKGU9PmUuX3VpbnRpZD09PWkpKTtpZighYylyZXR1cm4gdm9pZCBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGNhbiBub3QgZmluZCB0YXJnZXQgdXNlciEob25fYWRkX2RhdGFfY2hhbm5lbClcIikpO2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gZGF0YV9jaGFubmVsIGFkZGVkIHdpdGggdWlkIFwiKS5jb25jYXQoaSkpLERuKHIpLmNhbGwocixjKXx8ci5wdXNoKGMpLGMuX3VpbnRpZHx8KGMuX3VpbnRpZD1pKTtpZighKC0xIT09Yy5fZGF0YUNoYW5uZWxzLmZpbmRJbmRleCgodD0+dC5pZD09PWUuc3RyZWFtX2lkKSkpKXtjb25zdCBlPXtpZDpuLG9yZGVyZWQ6ISFvLG1heFJldHJhbnNtaXRzOnMsbWV0YWRhdGE6YX0saT1mdW5jdGlvbihlKXtyZXR1cm4gUkIoZSwhMCl9KGUpO2MuX2RhdGFDaGFubmVscy5wdXNoKGkpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSByZW1vdGUgdXNlciBcIikuY29uY2F0KGMudWlkLFwiIHB1Ymxpc2hlZCBkYXRhY2hhbm5lbFwiKSksdHx8dGhpcy5zYWZlRW1pdCh6eS5VU0VSX1BVQkxJU0hFRCxjLFwiZGF0YWNoYW5uZWxcIixlKX10aGlzLl9wMnBDaGFubmVsLmhhc1BlbmRpbmdSZW1vdGVEYXRhQ2hhbm5lbChjLGUuc3RyZWFtX2lkKSYmKGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcmVzdWJzY3JpYmUgZGF0YWNoYW5uZWwgZm9yIHVzZXIgXCIpLmNvbmNhdChjLnVpZCxcIiBhZnRlciByZWNvbm5lY3QuXCIpKSx0aGlzLl9zdWJzY3JpYmVEYXRhQ2hhbm5lbChjLGUuc3RyZWFtX2lkKS5jYXRjaCgoZT0+e2ZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcmVzdWJzY3JpYmUgZGF0YWNoYW5uZWwgZXJyb3JcIiksZS50b1N0cmluZygpKX0pKSl9KSksdCYmKHRoaXMuc2FmZUVtaXQoenkuUFVCTElTSEVEX1VTRVJfTElTVCx0aGlzLl9wZW5kaW5nUHVibGlzaGVkVXNlcnMpLHRoaXMuX3BlbmRpbmdQdWJsaXNoZWRVc2Vycz1bXSksQXJyYXkuaXNBcnJheShuKSYmbi5sZW5ndGg+MCYmbi5mb3JFYWNoKChlPT57Y29uc3R7dWlkOnQsc3RyZWFtX2lkOml9PWUsbj10aGlzLl91c2Vycy5maW5kKChlPT5lLl91aW50aWQ9PT10KSk7aWYoIW4pcmV0dXJuIHZvaWQgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBjYW4gbm90IGZpbmQgdGFyZ2V0IHVzZXIhKG9uX2RlbGV0ZV9kYXRhX2NoYW5uZWwpXCIpKTtjb25zdCByPW4uX2RhdGFDaGFubmVscy5maW5kKCh0PT50LmlkPT09ZS5zdHJlYW1faWQpKTtyJiYoZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBkYXRhX3N0cmVhbSBkZWxldGUgd2l0aCB1aWQgXCIpLmNvbmNhdCh0KSksdGhpcy5fcDJwQ2hhbm5lbC51bnN1YnNjcmliZURhdGFDaGFubmVsKG4sW3JdKS50aGVuKChlPT57aWYobi5fZGF0YUNoYW5uZWxzPW4uX2RhdGFDaGFubmVscy5maWx0ZXIoKGU9PmUhPT1yKSksZSlyZXR1cm4gdGhpcy5fZ2F0ZXdheS51bnN1YnNjcmliZURhdGFDaGFubmVsKGUsbi51aWQpfSkpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSByZW1vdGUgdXNlciBcIikuY29uY2F0KHQsXCIgdW5wdWJsaXNoZWQgZGF0YWNoYW5uZWwgLGlkOlwiKS5jb25jYXQoci5pZCkpLHRoaXMuc2FmZUVtaXQoenkuVVNFUl9VTlBVQkxJU0hFRCxuLFwiZGF0YWNoYW5uZWxcIixyLl9jb25maWcpKX0pKX1faGFuZGxlUmVtb3ZlRGF0YUNoYW5uZWxzKGUpe2NvbnN0IHQ9dGhpcy5fdXNlcnMuZmluZCgodD0+dC51aWQ9PT1lLnVpZCkpO2lmKHQpe2lmKHZvaWQgMCE9PXQuX2RhdGFDaGFubmVscyYmdC5fZGF0YUNoYW5uZWxzLmxlbmd0aD4wKXtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGRhdGFjaGFubmVsIHJlbW92ZWQgd2l0aCB1aWQgXCIpLmNvbmNhdChlLnVpZCkpO2NvbnN0IGk9KCk9PntmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcmVtb3RlIHVzZXIgXCIpLmNvbmNhdCh0LnVpZCxcIiB1bnB1Ymxpc2hlZCBkYXRhY2hhbm5lbFwiKSksdC5fZGF0YUNoYW5uZWxzLmZvckVhY2goKGU9Pnt0aGlzLnNhZmVFbWl0KHp5LlVTRVJfVU5QVUJMSVNIRUQsdCxcImRhdGFjaGFubmVsXCIsZS5fY29uZmlnKX0pKX07dGhpcy5fcDJwQ2hhbm5lbC51bnN1YnNjcmliZURhdGFDaGFubmVsKHQsdC5fZGF0YUNoYW5uZWxzKS50aGVuKChlPT57aWYoZSlyZXR1cm4gdGhpcy5fZ2F0ZXdheS51bnN1YnNjcmliZURhdGFDaGFubmVsKGUsdC51aWQpfSkpLGkoKX19ZWxzZSBmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gY2FuIG5vdCBmaW5kIHRhcmdldCB1c2VyIShvbl9yZW1vdmVfZGF0YWNoYW5uZWwpXCIpKX1faGFuZGxlR2F0ZXdheUV2ZW50cygpe3RoaXMuX2dhdGV3YXkub24oJHcuRElTQ09OTkVDVF9QMlAsKGFzeW5jKCk9Pnthd2FpdCB0aGlzLl9wMnBDaGFubmVsLmRpc2Nvbm5lY3RGb3JSZWNvbm5lY3QoKX0pKSx0aGlzLl9nYXRld2F5Lm9uKCR3LkNPTk5FQ1RJT05fU1RBVEVfQ0hBTkdFLCgoZSx0LGkpPT57dmFyIG47aWYoaT09PUh5LkZBTExCQUNLKXJldHVybjtjb25zdCByPSgpPT57dGhpcy5zYWZlRW1pdCh6eS5DT05ORUNUSU9OX1NUQVRFX0NIQU5HRSxlLHQsaSl9O2lmKHZiLnJlcG9ydEFwaUludm9rZSh0aGlzLl9zZXNzaW9uSWR8fChudWxsPT09KG49dGhpcy5fZ2F0ZXdheS5qb2luSW5mbyl8fHZvaWQgMD09PW4/dm9pZCAwOm4uc2lkKXx8bnVsbCx7bmFtZTpCeS5DT05ORUNUSU9OX1NUQVRFX0NIQU5HRSxvcHRpb25zOltlLHQsaV0sdGFnOmp5LlRSQUNFUn0pLm9uU3VjY2VzcyhKU09OLnN0cmluZ2lmeSh7Y3VyOmUscHJldjp0LHJlYXNvbjppfSkpLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBjb25uZWN0aW9uIHN0YXRlIGNoYW5nZTogXCIpLmNvbmNhdCh0LFwiIC0+IFwiKS5jb25jYXQoZSkpLFwiRElTQ09OTkVDVEVEXCI9PT1lKXJldHVybiB0aGlzLl9yZXNldCgpLHZvaWQgcigpO2lmKFwiUkVDT05ORUNUSU5HXCI9PT1lKXRoaXMuX3VzZXJzLmZvckVhY2goKGU9PntlLl90cnVzdF9pbl9yb29tXz0hMSxlLl90cnVzdF9hdWRpb19lbmFibGVkX3N0YXRlXz0hMSxlLl90cnVzdF92aWRlb19lbmFibGVkX3N0YXRlXz0hMSxlLl90cnVzdF9hdWRpb19tdXRlX3N0YXRlXz0hMSxlLl90cnVzdF92aWRlb19tdXRlX3N0YXRlXz0hMSxlLl90cnVzdF9hdWRpb19zdHJlYW1fYWRkZWRfc3RhdGVfPSExLGUuX3RydXN0X3ZpZGVvX3N0cmVhbV9hZGRlZF9zdGF0ZV89ITEsZS5faXNfcHJlX2NyZWF0ZWR8fChlLl9hdWRpb19wcmVfc3Vic2NyaWJlZHx8KGUuX2F1ZGlvU1NSQz12b2lkIDAsZS5fYXVkaW9PcnRjPXZvaWQgMCksZS5fdmlkZW9fcHJlX3N1YnNjcmliZWR8fChlLl92aWRlb1NTUkM9dm9pZCAwLGUuX3ZpZGVvT3J0Yz12b2lkIDAsZS5fcnR4U3NyY0lkPXZvaWQgMCksZS5fY25hbWU9dm9pZCAwKX0pKSx0aGlzLl91c2VyT2ZmbGluZVRpbWVvdXQmJndpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5fdXNlck9mZmxpbmVUaW1lb3V0KSx0aGlzLl9zdHJlYW1SZW1vdmVkVGltZW91dCYmd2luZG93LmNsZWFyVGltZW91dCh0aGlzLl9zdHJlYW1SZW1vdmVkVGltZW91dCksdGhpcy5fdXNlck9mZmxpbmVUaW1lb3V0PXZvaWQgMCx0aGlzLl9zdHJlYW1SZW1vdmVkVGltZW91dD12b2lkIDA7ZWxzZSBpZihcIkNPTk5FQ1RFRFwiPT09ZSl7dmFyIG87dGhpcy5fc3RyZWFtRmFsbGJhY2tUeXBlQ2FjaGVNYXAuZm9yRWFjaCgoKGUsdCk9Pnt0aGlzLl9nYXRld2F5LnNldFN0cmVhbUZhbGxiYWNrT3B0aW9uKHQsZSkuY2F0Y2goKGU9PntmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gYXV0byBzZXQgc3RyZWFtIGZhbGxiYWNrIG9wdGlvbiBmYWlsZWRcIiksZSl9KSl9KSksdGhpcy5fcmVtb3RlU3RyZWFtVHlwZUNhY2hlTWFwLmZvckVhY2goKChlLHQpPT57dGhpcy5fZ2F0ZXdheS5zZXRSZW1vdGVWaWRlb1N0cmVhbVR5cGUodCxlKS5jYXRjaCgoZT0+e2ZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBhdXRvIHNldCByZW1vdGUgc3RyZWFtIHR5cGUgZmFpbGVkXCIpLGUpfSkpfSkpLHZvaWQgMCE9PXRoaXMuX3JlbW90ZURlZmF1bHRWaWRlb1N0cmVhbVR5cGUmJnZvaWQgMD09PShudWxsPT09KG89dGhpcy5fam9pbkluZm8pfHx2b2lkIDA9PT1vP3ZvaWQgMDpvLmRlZmF1bHRWaWRlb1N0cmVhbSkmJnRoaXMuc2V0UmVtb3RlRGVmYXVsdFZpZGVvU3RyZWFtVHlwZSh0aGlzLl9yZW1vdGVEZWZhdWx0VmlkZW9TdHJlYW1UeXBlKS50aGVuKCgoKT0+e2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gc2V0UmVtb3RlRGVmYXVsdFZpZGVvU3RyZWFtVHlwZSBhZnRlciBnYXRld2F5IGNvbm5lY3RlZFwiKSl9KSkuY2F0Y2goKGU9PntmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHNldFJlbW90ZURlZmF1bHRWaWRlb1N0cmVhbVR5cGUgYWZ0ZXIgZ2F0ZXdheSBmYWlsZWQsIFwiKS5jb25jYXQoZSkpfSkpLHRoaXMuc3RvcmUudXNlUDJQfHwodGhpcy5fcDJwQ2hhbm5lbC5yZXB1Ymxpc2goKSx0aGlzLl91c2VyT2ZmbGluZVRpbWVvdXQ9d2luZG93LnNldFRpbWVvdXQoKCgpPT57aWYoXCJDT05ORUNURURcIiE9PXRoaXMuY29ubmVjdGlvblN0YXRlKXJldHVybjt0aGlzLl91c2VyT2ZmbGluZVRpbWVvdXQ9dm9pZCAwO3RoaXMuX3VzZXJzLmZpbHRlcigoZT0+IWUuX3RydXN0X2luX3Jvb21fKSkuZm9yRWFjaCgoZT0+e2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gdXNlciBvZmZsaW5lIHRpbWVvdXQsIGVtaXQgdXNlciBvZmZsaW5lIFwiKS5jb25jYXQoZS51aWQpKSx0aGlzLl9oYW5kbGVVc2VyT2ZmbGluZSh7dWlkOmUudWlkfSl9KSl9KSwzZTMpLHRoaXMuX3N0cmVhbVJlbW92ZWRUaW1lb3V0PXdpbmRvdy5zZXRUaW1lb3V0KCgoKT0+e1wiQ09OTkVDVEVEXCI9PT10aGlzLmNvbm5lY3Rpb25TdGF0ZSYmKHRoaXMuX3N0cmVhbVJlbW92ZWRUaW1lb3V0PXZvaWQgMCx0aGlzLl91c2Vycy5mb3JFYWNoKChlPT57ZS5fdHJ1c3RfYXVkaW9fbXV0ZV9zdGF0ZV98fChmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGF1dG8gZGlzcGF0Y2ggYXVkaW8gdW5tdXRlIGV2ZW50IFwiKS5jb25jYXQoZS51aWQpKSx0aGlzLl9oYW5kbGVNdXRlU3RyZWFtKGUudWlkLGRPLkFVRElPLCExKSksZS5fdHJ1c3RfdmlkZW9fbXV0ZV9zdGF0ZV98fChmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGF1dG8gZGlzcGF0Y2ggdmlkZW8gdW5tdXRlIGV2ZW50IFwiKS5jb25jYXQoZS51aWQpKSx0aGlzLl9oYW5kbGVNdXRlU3RyZWFtKGUudWlkLGRPLlZJREVPLCExKSksZS5fdHJ1c3RfYXVkaW9fZW5hYmxlZF9zdGF0ZV98fChmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGF1dG8gZGlzcGF0Y2ggZW5hYmxlIGxvY2FsIGF1ZGlvIFwiKS5jb25jYXQoZS51aWQpKSx0aGlzLl9oYW5kbGVTZXRTdHJlYW1Mb2NhbEVuYWJsZShcImF1ZGlvXCIsZS51aWQsITApKSxlLl90cnVzdF92aWRlb19lbmFibGVkX3N0YXRlX3x8KGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gYXV0byBkaXNwYXRjaCBlbmFibGUgbG9jYWwgdmlkZW8gXCIpLmNvbmNhdChlLnVpZCkpLHRoaXMuX2hhbmRsZVNldFN0cmVhbUxvY2FsRW5hYmxlKFwidmlkZW9cIixlLnVpZCwhMCkpLGUuX3RydXN0X3ZpZGVvX3N0cmVhbV9hZGRlZF9zdGF0ZV98fChmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGF1dG8gZGlzcGF0Y2ggcmVzZXQgdmlkZW8gc3RyZWFtIGFkZGVkIFwiKS5jb25jYXQoZS51aWQpKSx0aGlzLl9oYW5kbGVSZXNldEFkZFN0cmVhbShlLFwidmlkZW9cIikpLGUuX3RydXN0X2F1ZGlvX3N0cmVhbV9hZGRlZF9zdGF0ZV98fChmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIGF1dG8gZGlzcGF0Y2ggcmVzZXQgYXVkaW8gc3RyZWFtIGFkZGVkIFwiKS5jb25jYXQoZS51aWQpKSx0aGlzLl9oYW5kbGVSZXNldEFkZFN0cmVhbShlLFwiYXVkaW9cIikpLGUuX3ZpZGVvX2FkZGVkX3x8ZS5fYXVkaW9fYWRkZWRffHwoZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBhdXRvIGRpc3BhdGNoIHN0cmVhbSByZW1vdmUgXCIpLmNvbmNhdChlLnVpZCkpLHRoaXMuX2hhbmRsZVJlbW92ZVN0cmVhbSh7dWlkOmUudWlkLHVpbnRfaWQ6ZS5fdWludGlkfSkpfSkpKX0pLDFlMykpfXIoKX0pKSx0aGlzLl9nYXRld2F5Lm9uKCR3LlJFUVVFU1RfTkVXX0dBVEVXQVlfTElTVCwoYXN5bmMoZSx0KT0+e2lmKCF0aGlzLl9qb2luSW5mbylyZXR1cm4gdChuZXcgeWIoUnkuVU5FWFBFQ1RFRF9FUlJPUixcImNhbiBub3QgcmVjb3Zlciwgbm8gam9pbiBpbmZvXCIpKTt0cnl7bGV0IHQ7Y29uc3QgaT1hd2FpdCBZQihJRyhJRyh7fSx0aGlzLl9qb2luSW5mbykse30se3VpZDp0aGlzLl9qb2luSW5mby51aWQsc3RyaW5nVWlkOnZvaWQgMH0pKTtpPyh0PWkuYXAsWEIoaSksdGhpcy5fam9pbkluZm8ucHJlbG9hZD0hMCk6KHQ9YXdhaXQgSHgodGhpcy5fam9pbkluZm8sdGhpcy5fYXhpb3NDYW5jZWxTb3VyY2UudG9rZW4sdGhpcy5fY29uZmlnLmh0dHBSZXRyeUNvbmZpZ3x8UEEsdGhpcy5zdG9yZSksdGhpcy5fam9pbkluZm8ucHJlbG9hZD0hMSksdGhpcy5fam9pbkluZm8mJih0aGlzLl9qb2luSW5mby5hcFJlc3BvbnNlPXQuZ2F0ZXdheUluZm8ucmVzLHRoaXMuX2pvaW5JbmZvLmdhdGV3YXlBZGRycz10LmdhdGV3YXlJbmZvLmdhdGV3YXlBZGRycyx0aGlzLl9qb2luSW5mby51bmlfbGJzX2lwPXQuZ2F0ZXdheUluZm8udW5pX2xic19pcCk7Y29uc3Qgbj1bXTt0LmdhdGV3YXlJbmZvLmdhdGV3YXlBZGRycy5mb3JFYWNoKChlPT57bGV0e2FkZHJlc3M6dH09ZTtjb25zdFtpLHJdPXQuc3BsaXQoXCI6XCIpO3RoaXMuX2pvaW5JbmZvJiZ0aGlzLl9qb2luSW5mby5wcm94eVNlcnZlcj9uLnB1c2goe3Byb3h5OnRoaXMuX2pvaW5JbmZvLnByb3h5U2VydmVyLGhvc3Q6aSxwb3J0OnJ9KTpuLnB1c2goe2hvc3Q6aSxwb3J0OnJ9KX0pKSxlKG4pfWNhdGNoKGUpe3QoZSl9fSkpLHRoaXMuX2dhdGV3YXkub24oJHcuTkVUV09SS19RVUFMSVRZLChlPT57XCJub3JtYWxcIj09PXRoaXMuX25ldHdvcmtRdWFsaXR5U2Vuc2l0aXZpdHkmJnRoaXMuc2FmZUVtaXQoenkuTkVUV09SS19RVUFMSVRZLGUpfSkpLHRoaXMuX2dhdGV3YXkub24oJHcuU1RSRUFNX1RZUEVfQ0hBTkdFLCgoZSx0KT0+e3RoaXMuc2FmZUVtaXQoenkuU1RSRUFNX1RZUEVfQ0hBTkdFRCxlLHQpO3ZiLnJlcG9ydEFwaUludm9rZSh0aGlzLl9zZXNzaW9uSWQse25hbWU6QnkuU1RSRUFNX1RZUEVfQ0hBTkdFLG9wdGlvbnM6W2UsdF0sdGFnOmp5LlRSQUNFUn0pLm9uU3VjY2VzcyhKU09OLnN0cmluZ2lmeSh7dWlkOmUsc3RyZWFtVHlwZTp0fSkpfSkpLHRoaXMuX2dhdGV3YXkub24oJHcuSVNfUDJQX0RJU0NPTk5FQ1RFRCwoZT0+e3RoaXMuX3AycENoYW5uZWwuaXNQMlBEaXNjb25uZWN0ZWQoKT9lKCEwKTp0aGlzLl9wMnBDaGFubmVsLmhhc0xvY2FsTWVkaWEoKXx8dGhpcy5fcDJwQ2hhbm5lbC5oYXNSZW1vdGVNZWRpYSgpP2UoITEpOmUoITApfSkpLHRoaXMuX2dhdGV3YXkub24oJHcuUkVRVUVTVF9QMlBfQ09OTkVDVElPTl9QQVJBTVMsKGFzeW5jKGUsdCxpKT0+e3RyeXtsZXQgaT1hd2FpdCB0aGlzLl9wMnBDaGFubmVsLmdldEVzdGFibGlzaFBhcmFtcygpO1hBKFwiRU5BQkxFX1BSRUFMTE9DX1BDXCIpJiZpfHwoaT1hd2FpdCB0aGlzLl9wMnBDaGFubmVsLnN0YXJ0UDJQQ29ubmVjdGlvbihlKSksdChpKX1jYXRjaChlKXtpKGUpfX0pKSx0aGlzLl9nYXRld2F5Lm9uKCR3LkpPSU5fUkVTUE9OU0UsKChlLHQpPT57aWYodGhpcy5zdG9yZS51c2VQMlApcmV0dXJuO2NvbnN0IGk9WVUoZS5vcnRjLHQsZS5hdHRyaWJ1dGVzLnVzZXJBdHRyaWJ1dGVzLnByZVN1YlNzcmNzKTt0aGlzLl9wMnBDaGFubmVsLmNvbm5lY3QoaSl9KSksdGhpcy5fZ2F0ZXdheS5vbigkdy5QUkVfQ09OTkVDVF9QQywoYXN5bmMgZT0+e2NvbnN0e2NhbmRpZGF0ZXM6dCxmaW5nZXJwcmludDppfT1lO2lmKHRoaXMuX2pvaW5JbmZvJiZ0Lmxlbmd0aD4wJiYhdGhpcy5fcDJwQ2hhbm5lbC5pc1BsYW5CKXt2YXIgbjthd2FpdCB0aGlzLl9wMnBDaGFubmVsLnN0YXJ0UDJQQ29ubmVjdGlvbih7dHVyblNlcnZlcjp0aGlzLl9qb2luSW5mby50dXJuU2VydmVyfSk7Y29uc3R7Y2VydDplLGNpZDpyfT10aGlzLl9qb2luSW5mby5hcFJlc3BvbnNlO2F3YWl0IHRoaXMuX3AycENoYW5uZWwuY29ubmVjdCh7aWNlUGFyYW1ldGVyczp7aWNlVWZyYWc6XCJcIi5jb25jYXQocixcIl9cIikuY29uY2F0KGUpLGljZVB3ZDpcIlwiLmNvbmNhdChyLFwiX1wiKS5jb25jYXQoZSl9LGR0bHNQYXJhbWV0ZXJzOntmaW5nZXJwcmludHM6W3toYXNoRnVuY3Rpb246XCJzaGEtMjU2XCIsZmluZ2VycHJpbnQ6bnVsbCE9PShuPVhBKFwiRklOR0VSUFJJTlRcIikpJiZ2b2lkIDAhPT1uP246aX1dfSxjYW5kaWRhdGVzOnQscnRwQ2FwYWJpbGl0aWVzOntzZW5kOnthdWRpb0NvZGVjczpbXSx2aWRlb0NvZGVjczpbXSxhdWRpb0V4dGVuc2lvbnM6W10sdmlkZW9FeHRlbnNpb25zOltdfSxyZWN2OnthdWRpb0NvZGVjczpbXSx2aWRlb0NvZGVjczpbXSxhdWRpb0V4dGVuc2lvbnM6W10sdmlkZW9FeHRlbnNpb25zOltdfX0sc2V0dXA6XCJhY3RpdmVcIixjbmFtZTpcIm8vaTE0dTlwSnJ4UktBc3VcIixwcmVhbGxvY2F0aW9uOiEwfSl9fSkpfV9oYW5kbGVHYXRld2F5U2lnbmFsRXZlbnRzKCl7dGhpcy5fZ2F0ZXdheS5zaWduYWwub24oa3cuT05fVVNFUl9PTkxJTkUsdGhpcy5faGFuZGxlVXNlck9ubGluZSksdGhpcy5fZ2F0ZXdheS5zaWduYWwub24oa3cuT05fVVNFUl9PRkZMSU5FLHRoaXMuX2hhbmRsZVVzZXJPZmZsaW5lKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihrdy5PTl9BRERfQVVESU9fU1RSRUFNLChlPT50aGlzLl9oYW5kbGVBZGRBdWRpb09yVmlkZW9TdHJlYW0oXCJhdWRpb1wiLGUudWlkLGUuc3NyY0lkLGUuY25hbWUsZS51aW50X2lkLGUub3J0YykpKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihrdy5PTl9BRERfVklERU9fU1RSRUFNLChlPT50aGlzLl9oYW5kbGVBZGRBdWRpb09yVmlkZW9TdHJlYW0oXCJ2aWRlb1wiLGUudWlkLGUuc3NyY0lkLGUuY25hbWUsZS51aW50X2lkLGUub3J0YyxlLnJ0eFNzcmNJZCkpKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihrdy5PTl9SRU1PVEVfREFUQVNUUkVBTV9VUERBVEUsKGU9Pnt0aGlzLl9oYW5kbGVVcGRhdGVEYXRhQ2hhbm5lbChlKX0pKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihrdy5PTl9SRU1PVEVfRlVMTF9EQVRBU1RSRUFNX0lORk8sKGU9Pnt0aGlzLl9oYW5kbGVVcGRhdGVEYXRhQ2hhbm5lbCh7YWRkZWQ6ZS5kYXRhc3RyZWFtc3x8W10sZGVsZXRlZDpbXX0sITApfSkpLHRoaXMuX2dhdGV3YXkuc2lnbmFsLm9uKGt3Lk9OX1JFTU9WRV9TVFJFQU0sdGhpcy5faGFuZGxlUmVtb3ZlU3RyZWFtKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihrdy5PTl9QMlBfTE9TVCx0aGlzLl9oYW5kbGVQMlBMb3N0KSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihrdy5NVVRFX0FVRElPLChlPT50aGlzLl9oYW5kbGVNdXRlU3RyZWFtKGUudWlkLGRPLkFVRElPLCEwKSkpLHRoaXMuX2dhdGV3YXkuc2lnbmFsLm9uKGt3LlVOTVVURV9BVURJTywoZT0+dGhpcy5faGFuZGxlTXV0ZVN0cmVhbShlLnVpZCxkTy5BVURJTywhMSkpKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihrdy5NVVRFX1ZJREVPLChlPT50aGlzLl9oYW5kbGVNdXRlU3RyZWFtKGUudWlkLGRPLlZJREVPLCEwKSkpLHRoaXMuX2dhdGV3YXkuc2lnbmFsLm9uKGt3LlVOTVVURV9WSURFTywoZT0+dGhpcy5faGFuZGxlTXV0ZVN0cmVhbShlLnVpZCxkTy5WSURFTywhMSkpKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihrdy5SRUNFSVZFX01FVEFEQVRBLChlPT57Y29uc3QgdD1sQShlLm1ldGFkYXRhKTt0aGlzLnNhZmVFbWl0KHp5LlJFQ0VJVkVfTUVUQURBVEEsZS51aWQsdCl9KSksdGhpcy5fZ2F0ZXdheS5zaWduYWwub24oa3cuT05fREFUQV9TVFJFQU0sKGFzeW5jIGU9Pnt2YXIgdDtpZighZSlyZXR1cm47bGV0IGk9bEEoZS5wYXlsb2FkKTtpZih0aGlzLl9lbmNyeXB0RGF0YVN0cmVhbSYmdGhpcy5fZW5jcnlwdERhdGFTdHJlYW1JdiYmdGhpcy5fZW5jcnlwdERhdGFTdHJlYW1LZXkmJndpbmRvdy5jcnlwdG8uc3VidGxlJiZEbih0PVtcImFlcy0xMjgtZ2NtMlwiLFwiYWVzLTI1Ni1nY20yXCJdKS5jYWxsKHQsdGhpcy5fZW5jcnlwdGlvbk1vZGUpKXtpZihlLnBheWxvYWQubGVuZ3RoPHJiKXRocm93IG5ldyB5YihSeS5VTkVYUEVDVEVEX1JFU1BPTlNFLFwicGF5bG9hZCBsZW5ndGggXCIuY29uY2F0KGUucGF5bG9hZC5sZW5ndGgsXCIgaXMgbGVzcyB0aGFuIGhlYWRlciBsZW5ndGggXCIpLmNvbmNhdChyYikpO2NvbnN0IHQ9YXdhaXQgYXN5bmMgZnVuY3Rpb24oZSx0LGkpe2NvbnN0IG49aS5zdWJhcnJheSgwLHJiKSxyPW4uc2xpY2UoOCxyYiksbz0oclswXTw8OCkrclsxXSxzPShuWzZdPDw4KStuWzddLGE9YXdhaXQgd2luZG93LmNyeXB0by5zdWJ0bGUuZGVjcnlwdCh7bmFtZTpcIkFFUy1HQ01cIixpdjplLHRhZ0xlbmd0aDp0YixhZGRpdGlvbmFsRGF0YTpuZXcgVWludDhBcnJheSh5QShvLDIpKX0sdCxpLnN1YmFycmF5KHJiKSk7cmV0dXJuIG5ldyBVaW50OEFycmF5KGEpLnN1YmFycmF5KDAscyl9KHRoaXMuX2VuY3J5cHREYXRhU3RyZWFtSXYsdGhpcy5fZW5jcnlwdERhdGFTdHJlYW1LZXksaSk7aT10fWxldCBuPTA7aWYoZS5vcmRlcmVkfHxlLnN5bmNXaXRoQXVkaW8pe2NvbnN0IHQ9dGhpcy5fcDJwQ2hhbm5lbC5nZXRTdGF0cygpLGk9dGhpcy5yZW1vdGVVc2Vycy5maW5kKCh0PT50LnVpZD09PWUudWlkKSkscj1udWxsPT10P3ZvaWQgMDp0LmF1ZGlvUmVjdi5maW5kKChlPT5lLnNzcmM9PT0obnVsbD09aT92b2lkIDA6aS5fYXVkaW9TU1JDKSkpO249bnVsbD09cj92b2lkIDA6ci5qaXR0ZXJCdWZmZXJNc31udWxsPT1uJiYobj0wKSxOQihJRyhJRyh7fSxlKSx7fSx7cGF5bG9hZDppfSksbix7aWQ6dGhpcy5fY2xpZW50SWQsb25TdHJlYW1NZXNzYWdlOlwiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMub25TdHJlYW1NZXNzYWdlP3RoaXMub25TdHJlYW1NZXNzYWdlLmJpbmQodGhpcyk6dm9pZCAwLHNhZmVFbWl0OnRoaXMuc2FmZUVtaXQuYmluZCh0aGlzKX0pfSkpLHRoaXMuX2dhdGV3YXkuc2lnbmFsLm9uKGt3Lk9OX0NSWVBUX0VSUk9SLCgoKT0+e2RBKCgoKT0+e2ZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBvbiBjcnlwdCBlcnJvclwiKSksdGhpcy5zYWZlRW1pdCh6eS5DUllQVF9FUlJPUil9KSx0aGlzLl9zZXNzaW9uSWQpfSkpLHRoaXMuX2dhdGV3YXkuc2lnbmFsLm9uKGt3Lk9OX1RPS0VOX1BSSVZJTEVHRV9XSUxMX0VYUElSRSx0aGlzLl9oYW5kbGVUb2tlbldpbGxFeHBpcmUpLHRoaXMuX2dhdGV3YXkuc2lnbmFsLm9uKGt3Lk9OX1RPS0VOX1BSSVZJTEVHRV9ESURfRVhQSVJFLCgoKT0+e2ZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSByZWNlaXZlZCBtZXNzYWdlIG9uVG9rZW5Qcml2aWxlZ2VEaWRFeHBpcmUsIHBsZWFzZSBnZXQgbmV3IHRva2VuIGFuZCBqb2luIGFnYWluXCIpKSx0aGlzLl9nYXRld2F5LmxlYXZlKCEwLEh5LlRPS0VOX0VYUElSRSksdGhpcy5zYWZlRW1pdCh6eS5PTl9UT0tFTl9QUklWSUxFR0VfRElEX0VYUElSRSksdGhpcy5fcmVzZXQoKX0pKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihrdy5PTl9TVFJFQU1fRkFMTEJBQ0tfVVBEQVRFLChlPT57ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBzdHJlYW0gZmFsbGJhY2sgcGVlcklkOiBcIikuY29uY2F0KGUuc3RyZWFtX2lkLFwiLCBhdHRyOiBcIikuY29uY2F0KGUuc3RyZWFtX3R5cGUpKSx0aGlzLnNhZmVFbWl0KHp5LlNUUkVBTV9GQUxMQkFDSyxlLnN0cmVhbV9pZCwxPT09ZS5zdHJlYW1fdHlwZT9cImZhbGxiYWNrXCI6XCJyZWNvdmVyXCIpfSkpLHRoaXMuX2dhdGV3YXkuc2lnbmFsLm9uKGt3Lk9OX1BVQkxJU0hfU1RSRUFNLChlPT57dGhpcy51aWQ9PT10aGlzLl91aWQmJih0aGlzLl9wMnBDaGFubmVsLnJlcG9ydFB1Ymxpc2hFdmVudCghMCxudWxsLHZvaWQgMCwhMSxKU09OLnN0cmluZ2lmeSh7cHJveHk6ZS5wcm94eX0pKSxmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gb24gcHVibGlzaCBzdHJlYW0sIFwiKS5jb25jYXQoSlNPTi5zdHJpbmdpZnkoZSkpKSl9KSksdGhpcy5fZ2F0ZXdheS5zaWduYWwub24oa3cuRU5BQkxFX0xPQ0FMX1ZJREVPLChlPT57dGhpcy5faGFuZGxlU2V0U3RyZWFtTG9jYWxFbmFibGUoXCJ2aWRlb1wiLGUudWlkLCEwKX0pKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihrdy5ESVNBQkxFX0xPQ0FMX1ZJREVPLChlPT57dGhpcy5faGFuZGxlU2V0U3RyZWFtTG9jYWxFbmFibGUoXCJ2aWRlb1wiLGUudWlkLCExKX0pKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihEdy5SRVFVRVNUX1RJTUVPVVQsKChlLHQpPT57aWYodGhpcy5fam9pbkluZm8pc3dpdGNoKGUpe2Nhc2UgUHcuUFVCTElTSDp7aWYoIXQpcmV0dXJuO2NvbnN0IGU9dC5vcnRjO2lmKGUpe3ZhciBpLG47Y29uc3Qgcj1lLnNvbWUoKGU9PntsZXR7c3RyZWFtX3R5cGU6dH09ZTtyZXR1cm4gdD09PVp3LkF1ZGlvfSkpLG89ZS5zb21lKChlPT57bGV0e3N0cmVhbV90eXBlOnR9PWU7cmV0dXJuIHQhPT1ady5BdWRpb30pKSxzPWUuc29tZSgoZT0+e2xldHtzdHJlYW1fdHlwZTp0fT1lO3JldHVybiB0PT09WncuU2NyZWVufHx0PT09WncuU2NyZWVuTG93fSkpO1wib2ZmZXJcIj09PXQuc3RhdGUmJnZiLnB1Ymxpc2godGhpcy5fam9pbkluZm8uc2lkLHtldmVudEVsYXBzZTpyVi5tZWFzdXJlRnJvbVB1Ymxpc2hTdGFydCh0aGlzLnN0b3JlLmNsaWVudElkLHRoaXMuc3RvcmUucHViSWQpLHN1Y2M6ITEsZWM6UnkuVElNRU9VVCxhdWRpbzpyLHZpZGVvOm8scDJwaWQ6dC5wMnBfaWQscHVibGlzaFJlcXVlc3RpZDp0aGlzLnN0b3JlLnB1YklkLHNjcmVlbnNoYXJlOnMsYXVkaW9OYW1lOnI/bnVsbD09PShpPWUuZmluZCgoZT0+e2xldHtzdHJlYW1fdHlwZTp0fT1lO3JldHVybiB0PT09WncuQXVkaW99KSkpfHx2b2lkIDA9PT1pfHxudWxsPT09KGk9aS5zc3Jjc1swXSl8fHZvaWQgMD09PWk/dm9pZCAwOmkuc3NyY0lkLnRvU3RyaW5nKCk6dm9pZCAwLHZpZGVvTmFtZTpvP251bGw9PT0obj1lLmZpbmQoKGU9PntsZXR7c3RyZWFtX3R5cGU6dH09ZTtyZXR1cm4gdCE9PVp3LkF1ZGlvfSkpKXx8dm9pZCAwPT09bnx8bnVsbD09PShuPW4uc3NyY3NbMF0pfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLnNzcmNJZC50b1N0cmluZygpOnZvaWQgMH0pfWJyZWFrfWNhc2UgUHcuU1VCU0NSSUJFOnQmJnZiLnN1YnNjcmliZSh0aGlzLl9qb2luSW5mby5zaWQse3N1Y2M6ITEsZWM6UnkuVElNRU9VVCxhdWRpbzp0LnN0cmVhbV90eXBlPT09ZE8uQVVESU8sdmlkZW86dC5zdHJlYW1fdHlwZT09PWRPLlZJREVPLHBlZXJpZDp0LnN0cmVhbV9pZCxzdWJzY3JpYmVSZXF1ZXN0aWQ6dC5zc3JjSWQscDJwaWQ6dGhpcy5zdG9yZS5wMnBJZCxldmVudEVsYXBzZTpyVi5tZWFzdXJlRnJvbVN1YnNjcmliZVN0YXJ0KHRoaXMuc3RvcmUuY2xpZW50SWQsdC5zc3JjSWQpLHByZVNzcmM6dGhpcy5fcDJwQ2hhbm5lbC5pc1ByZVN1YlNjcmliZSh0LnNzcmNJZCl9KX19KSksdGhpcy5fZ2F0ZXdheS5zaWduYWwub24oa3cuT05fUDJQX09LLChlPT57dGhpcy51aWQsdGhpcy5fdWlkfSkpLHRoaXMuX2dhdGV3YXkuc2lnbmFsLm9uKGt3Lk9OX1BVQkxJU0hFRF9VU0VSX0xJU1QsKGU9PntpZihudWxsPT1lfHwhZS51c2VycylyZXR1cm47WEEoXCJCTE9DS19MT0NBTF9DTElFTlRcIikmJihlLnVzZXJzPWUudXNlcnMuZmlsdGVyKChlPT4hT2IoZS5zdHJpbmdfaWR8fGUuc3RyZWFtX2lkLHRoaXMuY2hhbm5lbE5hbWUpKSkpO2NvbnN0IHQ9W10saT1bXTtmb3IoY29uc3QgbiBvZiBlLnVzZXJzKXtsZXQgZT10aGlzLl91c2Vycy5maW5kKChlPT5lLl91aW50aWQ9PT1uLnN0cmVhbV9pZCkpO2U/ZS5fdHJ1c3RfaW5fcm9vbV89ITA6KGU9bmV3IGNGKG4uc3RyaW5nX2lkfHxuLnN0cmVhbV9pZCxuLnN0cmVhbV9pZCksdGhpcy5fdXNlcnMucHVzaChlKSwwPT09dGhpcy5nZXRMaXN0ZW5lcnMoenkuUFVCTElTSEVEX1VTRVJfTElTVCkubGVuZ3RoJiYoZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSB1c2VyIG9ubGluZVwiKSxuLnN0cmVhbV9pZCksdGhpcy5zYWZlRW1pdCh6eS5VU0VSX0pPSU5FRCxlKSkpO2NvbnN0IHI9dE8uQXVkaW8mbi5zdHJlYW1fdHlwZSxvPSh0Ty5WaWRlb3x0Ty5Md29WaWRlbykmbi5zdHJlYW1fdHlwZSxzPTAhPSg2NTI4MCZuLnN0cmVhbV90eXBlKSxhPXImJmUuaGFzQXVkaW8sYz1vJiZlLmhhc1ZpZGVvO28mJihlLl90cnVzdF92aWRlb19zdHJlYW1fYWRkZWRfc3RhdGVfPSEwLGUuX3ZpZGVvX2FkZGVkXz0hMCxlLl92aWRlb1NTUkM9bi52aWRlb19zc3JjLGUuX3J0eFNzcmNJZD1uLnZpZGVvX3J0eCksciYmKGUuX3RydXN0X2F1ZGlvX3N0cmVhbV9hZGRlZF9zdGF0ZV89ITAsZS5fYXVkaW9fYWRkZWRfPSEwLGUuX2F1ZGlvU1NSQz1uLmF1ZGlvX3NzcmMpLHImJiFhJiYwPT09dGhpcy5nZXRMaXN0ZW5lcnMoenkuUFVCTElTSEVEX1VTRVJfTElTVCkubGVuZ3RoJiYoZmIuaW5mbyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIHJlbW90ZSB1c2VyIFwiKS5jb25jYXQoZS51aWQsXCIgcHVibGlzaGVkIGF1ZGlvXCIpKSx0aGlzLnNhZmVFbWl0KHp5LlVTRVJfUFVCTElTSEVELGUsXCJhdWRpb1wiKSksbyYmIWMmJjA9PT10aGlzLmdldExpc3RlbmVycyh6eS5QVUJMSVNIRURfVVNFUl9MSVNUKS5sZW5ndGgmJihmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gcmVtb3RlIHVzZXIgXCIpLmNvbmNhdChlLnVpZCxcIiBwdWJsaXNoZWQgdmlkZW9cIikpLHRoaXMuc2FmZUVtaXQoenkuVVNFUl9QVUJMSVNIRUQsZSxcInZpZGVvXCIpKSwociYmIWF8fG8mJiFjfHxzKSYmdC5wdXNoKGUpLG8mJnRoaXMuX3AycENoYW5uZWwuaGFzUGVuZGluZ1JlbW90ZU1lZGlhKGUsXCJ2aWRlb1wiKSYmaS5wdXNoKHt1c2VyOmUsbWVkaWFUeXBlOlwidmlkZW9cIn0pLHImJnRoaXMuX3AycENoYW5uZWwuaGFzUGVuZGluZ1JlbW90ZU1lZGlhKGUsXCJhdWRpb1wiKSYmaS5wdXNoKHt1c2VyOmUsbWVkaWFUeXBlOlwiYXVkaW9cIn0pfWkubGVuZ3RoPjAmJihmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIFJFIG1hc3NTdWJzY3JpYmUgYWZ0ZXIgcmVjb25uZWN0IFwiKS5jb25jYXQoaS5tYXAoKGU9PlwidXNlcjogXCIuY29uY2F0KGUudXNlci51aWQsXCIsIG1lZGlhVHlwZTogXCIpLmNvbmNhdChlLm1lZGlhVHlwZSkpKS5qb2luKFwiOyBcIiksXCIgXCIpKSx0aGlzLm1hc3NTdWJzY3JpYmUoaSkuY2F0Y2goKGU9PntmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5fY2xpZW50SWQsXCJdIG1hc3MgcmVzdWJzY3JpYmUgZXJyb3JcIiksZS50b1N0cmluZygpKX0pKSksdGhpcy5nZXRMaXN0ZW5lcnMoenkuUFVCTElTSEVEX1VTRVJfTElTVCkubGVuZ3RoPjA/WEEoXCJFTkFCTEVfREFUQVNUUkVBTV8yXCIpP3RoaXMuX3BlbmRpbmdQdWJsaXNoZWRVc2Vycz10OihmYi5pbmZvKFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gY2xpZW50IGVtaXQgdXNlci1saXN0IGV2ZW50LCB1c2VyczogXCIpLmNvbmNhdCh0Lm1hcCgoZT0+ZS51aWQpKS5qb2luKFwiLCBcIikpKSx0aGlzLnNhZmVFbWl0KHp5LlBVQkxJU0hFRF9VU0VSX0xJU1QsdCkpOmZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBjbGllbnQgbm90IGVtaXQgdXNlci1saXN0IGV2ZW50IGNhc2UgdGhlcmUgaXMgbm8gdXNlci1saXN0IGxpc3RlbmVyLCB1c2VyczogXCIpLmNvbmNhdCh0Lm1hcCgoZT0+ZS51aWQpKS5qb2luKFwiLCBcIikpKX0pKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihrdy5PTl9SVFBfQ0FQQUJJTElUWV9DSEFOR0UsKGU9Pntjb25zdHt2aWRlb19jb2RlYzp0fT1lO3RoaXMuX3AycENoYW5uZWwgaW5zdGFuY2VvZiBmQiYmdGhpcy5fcDJwQ2hhbm5lbC51cGRhdGVSZW1vdGVSVFBDYXBhYmlsaXRpZXModC5tYXAoKGU9PmUudG9Mb3dlckNhc2UoKSkpLmZpbHRlcigoZT0+e3ZhciB0O3JldHVybiBEbih0PU9iamVjdC5rZXlzKGViKSkuY2FsbCh0LGUpfSkpKX0pKX1faGFuZGxlUDJQRXZlbnRzKCl7dGhpcy5fZ2F0ZXdheS5zaWduYWwub24oa3cuT05fVVNFUl9PRkZMSU5FLCgoKT0+e3RoaXMuX3AycENoYW5uZWwuZGlzY29ubmVjdEZvclJlY29ubmVjdCgpfSkpLHRoaXMuX2dhdGV3YXkuc2lnbmFsLm9uKElPLlBVQkxJU0gsKChlLHQsaSk9Pntjb25zdHt1aWQ6bn09ZTtlLmZvckVhY2goKGU9Pntjb25zdHtraW5kOnIsc3NyY3M6byxtaWQ6cyxpc011dGVkOmF9PWU7dGhpcy5faGFuZGxlUDJQQWRkQXVkaW9PclZpZGVvU3RyZWFtKHIsbixvWzBdLnNzcmNJZCxzKTtjb25zdCBjPXRoaXMuX3VzZXJzLmZpbmQoKGU9PmUudWlkPT09bikpO3JldHVybiBjJiZ0aGlzLl9wMnBDaGFubmVsIGluc3RhbmNlb2YgYkY/dGhpcy5fcDJwQ2hhbm5lbC5tb2NrU3Vic2NyaWJlKGMscixvWzBdLnNzcmNJZCxzKS50aGVuKCgoKT0+e3QoKX0pKS5jYXRjaChpKTp0KCksdGhpcy5faGFuZGxlTXV0ZVN0cmVhbShuLHIsISFhKX0pKX0pKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihJTy5DQUxMLChhc3luYyhlLHQsaSk9PntpZih0aGlzLl9wMnBDaGFubmVsIGluc3RhbmNlb2YgYkYpdHJ5e3ZhciBuO3QoYXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC5zdGFydFAyUCh7dHVyblNlcnZlcjpudWxsPT09KG49dGhpcy5fam9pbkluZm8pfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLnR1cm5TZXJ2ZXJ9LGUpKX1jYXRjaChlKXtpKGUpfX0pKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihEdy5QMlBfQ09OTkVDVElPTiwoYXN5bmMgZT0+e3RoaXMuX3AycENoYW5uZWwgaW5zdGFuY2VvZiBiRiYmYXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC5wMnBDb25uZWN0KGUpfSkpLHRoaXMuX2dhdGV3YXkuc2lnbmFsLm9uKElPLlVOUFVCTElTSCwoYXN5bmMoZSx0LGkpPT57aWYodGhpcy5fcDJwQ2hhbm5lbCBpbnN0YW5jZW9mIGJGKXtjb25zdHt1bnB1Yk1zZzpuLHVpZDpyfT1lLG89dGhpcy5fdXNlcnMuZmluZCgoZT0+ZS51aWQ9PT1yKSk7aWYoIW8pcmV0dXJuIGZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBjYW4gbm90IGZpbmQgcmVtb3RlIHVzZXIsIGlnbm9yZSBtdXRlIGV2ZW50LCB1aWQ6IFwiKS5jb25jYXQocikpLHZvaWQgdCgpO3RyeXtuLmZvckVhY2goKGFzeW5jIGU9PntsZXR7c3RyZWFtX3R5cGU6dH09ZTtjb25zdCBpPXQ9PT1ady5BdWRpbz9kTy5BVURJTzpkTy5WSURFTzthd2FpdCB0aGlzLl9wMnBDaGFubmVsLnVuc3Vic2NyaWJlKG8saSksdGhpcy5faGFuZGxlTXV0ZVN0cmVhbShyLGksITApfSkpLHQoKX1jYXRjaChlKXtpKGUpfX19KSksdGhpcy5fZ2F0ZXdheS5zaWduYWwub24oSU8uQ09OVFJPTCwoYXN5bmMoZSx0KT0+e2NvbnN0e2FjdGlvbjppfT1lO3N3aXRjaChpKXtjYXNlIHlPLk1VVEVfTE9DQUxfVklERU86dGhpcy5faGFuZGxlTXV0ZVN0cmVhbSh0LGRPLlZJREVPLCEwKTticmVhaztjYXNlIHlPLk1VVEVfTE9DQUxfQVVESU86dGhpcy5faGFuZGxlTXV0ZVN0cmVhbSh0LGRPLkFVRElPLCEwKTticmVhaztjYXNlIHlPLlVOTVVURV9MT0NBTF9WSURFTzp0aGlzLl9oYW5kbGVQMlBBZGRBdWRpb09yVmlkZW9TdHJlYW0oXCJ2aWRlb1wiLHQpLHRoaXMuX2hhbmRsZU11dGVTdHJlYW0odCxkTy5WSURFTywhMSk7YnJlYWs7Y2FzZSB5Ty5VTk1VVEVfTE9DQUxfQVVESU86dGhpcy5faGFuZGxlUDJQQWRkQXVkaW9PclZpZGVvU3RyZWFtKFwiYXVkaW9cIix0KSx0aGlzLl9oYW5kbGVNdXRlU3RyZWFtKHQsZE8uQVVESU8sITEpfX0pKSx0aGlzLl9nYXRld2F5LnNpZ25hbC5vbihJTy5SRVNUQVJUX0lDRSwoYXN5bmMoZSx0LGkpPT57aWYodGhpcy5fcDJwQ2hhbm5lbCBpbnN0YW5jZW9mIGJGKXRyeXtjb25zdHtkaXJlY3Rpb246aSxpY2VQYXJhbWV0ZXI6bn09ZTtpZihpIT09TXcuU0VORF9PTkxZfHxuKXt0KGF3YWl0IHRoaXMuX3AycENoYW5uZWwucmVzdGFydElDRShpLG4pKX1lbHNlIHRoaXMuX3AycENoYW5uZWwuaGFuZGxlRGlzY29ubmVjdChpKSx0KCl9Y2F0Y2goZSl7aShlKX19KSksdGhpcy5fZ2F0ZXdheS5zaWduYWwub24oSU8uQ0FORElEQVRFLChlPT57aWYodGhpcy5fcDJwQ2hhbm5lbCBpbnN0YW5jZW9mIGJGKXtjb25zdHtjYW5kaWRhdGU6dCxkaXJlY3Rpb246aX09ZTt0aGlzLl9wMnBDaGFubmVsLmFkZFJlbW90ZUNhbmRpZGF0ZSh0LGkpfX0pKSx0aGlzLl9wMnBDaGFubmVsLm9uKF9PLlJlcXVlc3RQMlBSZXN0YXJ0SUNFLChhc3luYyhlLHQsaSk9Pnt0cnl7Y29uc3R7ZGlyZWN0aW9uOml9PWU7dChhd2FpdCB0aGlzLl9nYXRld2F5LnNlbmRFeHRlbnNpb25NZXNzYWdlKElPLlJFU1RBUlRfSUNFLGUsaT09PU13LlNFTkRfT05MWSkpfWNhdGNoKGUpe2koZSl9fSkpLHRoaXMuX3AycENoYW5uZWwub24oX08uTG9jYWxDYW5kaWRhdGUsKGU9Pnt0aGlzLl9nYXRld2F5LnNlbmRFeHRlbnNpb25NZXNzYWdlKElPLkNBTkRJREFURSxKU09OLnN0cmluZ2lmeShlKSwhMCl9KSksdGhpcy5fcDJwQ2hhbm5lbC5vbihfTy5SZXF1ZXN0UDJQTXV0ZUxvY2FsLChhc3luYyhlLHQsaSk9Pnt0cnl7YXdhaXQgdGhpcy5fZ2F0ZXdheS5zZW5kRXh0ZW5zaW9uTWVzc2FnZShJTy5DT05UUk9MLGUsITApLHQoKX1jYXRjaChlKXtpKGUpfX0pKSx0aGlzLl9wMnBDaGFubmVsLm9uKF9PLlJlcXVlc3RQMlBVbm11dGVSZW1vdGUsKGFzeW5jKGUsdCxpKT0+e2lmKHRoaXMuX2pvaW5JbmZvKXRyeXthd2FpdCB0aGlzLl9nYXRld2F5LnVubXV0ZVJlbW90ZShlLHRoaXMuX2pvaW5JbmZvLnN0cmluZ1VpZHx8dGhpcy5fam9pbkluZm8udWlkKSx0KCl9Y2F0Y2goZSl7ZS5jb2RlPT09UnkuRElTQ09OTkVDVF9QMlA/dCgpOmkoZSl9ZWxzZSB0KCl9KSksdGhpcy5fcDJwQ2hhbm5lbC5vbihfTy5SZXF1ZXN0UDJQTXV0ZVJlbW90ZSwoYXN5bmMoZSx0LGkpPT57aWYodGhpcy5fam9pbkluZm8pdHJ5e2F3YWl0IHRoaXMuX2dhdGV3YXkubXV0ZVJlbW90ZShlLHRoaXMuX2pvaW5JbmZvLnN0cmluZ1VpZHx8dGhpcy5fam9pbkluZm8udWlkKSx0KCl9Y2F0Y2goZSl7ZS5jb2RlPT09UnkuRElTQ09OTkVDVF9QMlA/dCgpOmkoZSl9ZWxzZSB0KCl9KSksdGhpcy5fcDJwQ2hhbm5lbC5vbihfTy5TdGF0ZUNoYW5nZSwoKGUsdCk9Pnt0PT09cE8uQ29ubmVjdGVkJiZ0aGlzLl9wMnBDaGFubmVsLnJlcHVibGlzaCgpfSkpfV9oYW5kbGVQMlBDaGFubmVsRXZlbnRzKCl7dGhpcy5fcDJwQ2hhbm5lbC5vbihfTy5SZXF1ZXN0TXV0ZUxvY2FsLChhc3luYyhlLHQsaSk9PntpZih0aGlzLl9qb2luSW5mbyl0cnl7YXdhaXQgdGhpcy5fZ2F0ZXdheS5tdXRlTG9jYWwoZSx0aGlzLl9qb2luSW5mby5zdHJpbmdVaWR8fHRoaXMuX2pvaW5JbmZvLnVpZCksdCgpfWNhdGNoKGUpe2UuY29kZT09PVJ5LkRJU0NPTk5FQ1RfUDJQP3QoKTppKGUpfWVsc2UgdCgpfSkpLHRoaXMuX3AycENoYW5uZWwub24oX08uUmVxdWVzdFVubXV0ZUxvY2FsLChhc3luYyhlLHQsaSk9PntpZih0aGlzLl9qb2luSW5mbyl0cnl7YXdhaXQgdGhpcy5fZ2F0ZXdheS51bm11dGVMb2NhbChlLHRoaXMuX2pvaW5JbmZvLnN0cmluZ1VpZHx8dGhpcy5fam9pbkluZm8udWlkKSx0KCl9Y2F0Y2goZSl7ZS5jb2RlPT09UnkuRElTQ09OTkVDVF9QMlA/dCgpOmkoZSl9ZWxzZSB0KCl9KSksdGhpcy5fcDJwQ2hhbm5lbC5vbihfTy5SZXF1ZXN0UmVQdWJsaXNoLCgoZSx0LGkpPT57dGhpcy5wdWJsaXNoKGUsITEpLnRoZW4odCkuY2F0Y2goaSl9KSksdGhpcy5fcDJwQ2hhbm5lbC5vbihfTy5SZXF1ZXN0UmVQdWJsaXNoRGF0YUNoYW5uZWwsKChlLHQsaSk9PntHaC5hbGwoZS5tYXAoKGFzeW5jIGU9Pntjb25zdCB0PWF3YWl0IHRoaXMuX3AycENoYW5uZWwucHVibGlzaERhdGFDaGFubmVsKFtlXSk7dHJ5e3QuZm9yRWFjaCgoZT0+e3RoaXMuX3VpZCYmdGhpcy5fZ2F0ZXdheS5wdWJsaXNoRGF0YUNoYW5uZWwodGhpcy5fdWlkLGUsITApfSkpfWNhdGNoKGUpe2lmKGUuY29kZSE9PVJ5LkRJU0NPTk5FQ1RfUDJQKXRocm93IGV9fSkpKS50aGVuKHQpLmNhdGNoKGkpfSkpLHRoaXMuX3AycENoYW5uZWwub24oX08uUmVxdWVzdFJlU3Vic2NyaWJlLChhc3luYyhlLHQsaSk9Pnt0cnl7Zm9yKGNvbnN0e3VzZXI6dCxraW5kOml9b2YgZSlpPT09ZE8uVklERU8/YXdhaXQgdGhpcy5zdWJzY3JpYmUodCxcInZpZGVvXCIpOmF3YWl0IHRoaXMuc3Vic2NyaWJlKHQsXCJhdWRpb1wiKTt0KCl9Y2F0Y2goZSl7aShlKX19KSksdGhpcy5fcDJwQ2hhbm5lbC5vbihfTy5SZXF1ZXN0VXBsb2FkLCgoZSx0KT0+e3RoaXMuX2dhdGV3YXkudXBsb2FkKGUsdCl9KSksdGhpcy5fcDJwQ2hhbm5lbC5vbihfTy5SZXF1ZXN0VXBsb2FkU3RhdHMsKGU9Pnt0aGlzLl9nYXRld2F5LnVwbG9hZFdSVENTdGF0cyhlKX0pKSx0aGlzLl9wMnBDaGFubmVsLm9uKF9PLk1lZGlhUmVjb25uZWN0U3RhcnQsKGU9Pnt0aGlzLnNhZmVFbWl0KHp5Lk1FRElBX1JFQ09OTkVDVF9TVEFSVCxlKX0pKSx0aGlzLl9wMnBDaGFubmVsLm9uKF9PLk1lZGlhUmVjb25uZWN0RW5kLChlPT57dGhpcy5zYWZlRW1pdCh6eS5NRURJQV9SRUNPTk5FQ1RfRU5ELGUpfSkpLHRoaXMuX3AycENoYW5uZWwub24oX08uTmVlZFNpZ25hbFJUVCwoZT0+e2UodGhpcy5fZ2F0ZXdheS5nZXRTaWduYWxSVFQoKSl9KSksdGhpcy5fcDJwQ2hhbm5lbC5vbihfTy5SZXF1ZXN0UmVzdGFydElDRSwoYXN5bmMgZT0+e2lmKHRoaXMuX3AycENoYW5uZWwgaW5zdGFuY2VvZiBiRilyZXR1cm47Y29uc3QgdD1hd2FpdCB0aGlzLl9wMnBDaGFubmVsLnJlc3RhcnRJQ0UoZSksaT1hd2FpdCB0Lm5leHQoKTtpZihpLmRvbmUpcmV0dXJuO2NvbnN0IG49aS52YWx1ZTtsZXQgcjt0cnl7cj1hd2FpdCB0aGlzLl9nYXRld2F5LnJlc3RhcnRJQ0Uoe2ljZVBhcmFtZXRlcnM6bn0pfWNhdGNoKGUpe3JldHVybiB2b2lkIHQudGhyb3coZSl9Y29uc3R7aWNlUGFyYW1ldGVyczpvfT1mdW5jdGlvbihlKXtjb25zdCB0PWUuaWNlUGFyYW1ldGVycztyZXR1cm57aWNlUGFyYW1ldGVyczp7aWNlVWZyYWc6dC5pY2VVZnJhZyxpY2VQd2Q6dC5pY2VQd2R9fX0ocik7YXdhaXQgdC5uZXh0KHtyZW1vdGVJY2VQYXJhbWV0ZXJzOm99KX0pKSx0aGlzLl9wMnBDaGFubmVsLm9uKF9PLlJlcXVlc3RSZWNvbm5lY3QsKGFzeW5jKCk9Pnt0aGlzLl9nYXRld2F5LnJlY29ubmVjdCgpfSkpLHRoaXMuX3AycENoYW5uZWwub24oX08uUmVxdWVzdFJlY29ubmVjdFBDLChhc3luYygpPT57dmFyIGU7Y29uc3R7aWNlUGFyYW1ldGVyczp0LGR0bHNQYXJhbWV0ZXJzOmkscnRwQ2FwYWJpbGl0aWVzOm59PWF3YWl0IHRoaXMuX3AycENoYW5uZWwuc3RhcnRQMlBDb25uZWN0aW9uKHt0dXJuU2VydmVyOm51bGw9PT0oZT10aGlzLl9qb2luSW5mbyl8fHZvaWQgMD09PWU/dm9pZCAwOmUudHVyblNlcnZlcn0pLHtnYXRld2F5RXN0YWJsaXNoUGFyYW1zOnIsZ2F0ZXdheUFkZHJlc3M6b309YXdhaXQgdGhpcy5fZ2F0ZXdheS5yZWNvbm5lY3RQQyh7aWNlUGFyYW1ldGVyczp0LGR0bHNQYXJhbWV0ZXJzOmkscnRwQ2FwYWJpbGl0aWVzOm59KSxzPVlVKHIsbyk7YXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC5jb25uZWN0KHMpLGF3YWl0IHRoaXMuX3AycENoYW5uZWwucmVwdWJsaXNoKCksYXdhaXQgdGhpcy5fcDJwQ2hhbm5lbC5yZVN1YnNjcmliZSgpfSkpLHRoaXMuX3AycENoYW5uZWwub24oX08uUmVxdWVzdFVucHVibGlzaEZvclJlY29ubmVjdFBDLChhc3luYyhlLHQsaSk9Pnt0aGlzLl9qb2luSW5mbyYmdm9pZCAwIT09dGhpcy5fdWlkPyhhd2FpdCB0aGlzLl9nYXRld2F5LnVucHVibGlzaChlLHRoaXMuX3VpZCksdCgpKTppKCl9KSksdGhpcy5fcDJwQ2hhbm5lbC5vbihfTy5QMlBMb3N0LCgoKT0+e3RoaXMuc2FmZUVtaXQoenkuUDJQX0xPU1QsdGhpcy5zdG9yZS51aWQpfSkpLHRoaXMuX3AycENoYW5uZWwub24oX08uVXBkYXRlVmlkZW9FbmNvZGVyLChlPT57ZS5fZW5jb2RlckNvbmZpZyYmdGhpcy5fZ2F0ZXdheS5zZXRWaWRlb1Byb2ZpbGUoZS5fZW5jb2RlckNvbmZpZyl9KSksdGhpcy5fcDJwQ2hhbm5lbC5vbihfTy5Db25uZWN0aW9uVHlwZUNoYW5nZSwoZT0+e3RoaXMuc2FmZUVtaXQoenkuSVNfVVNJTkdfQ0xPVURfUFJPWFksZSl9KSksdGhpcy5fcDJwQ2hhbm5lbC5vbihfTy5SZXF1ZXN0TG93U3RyZWFtUGFyYW1ldGVyLChlPT57ZSh0aGlzLl9sb3dTdHJlYW1QYXJhbWV0ZXJ8fHt3aWR0aDoxNjAsaGVpZ2h0OjEyMCxmcmFtZXJhdGU6MTUsYml0cmF0ZTo1MH0pfSkpLHRoaXMuX3AycENoYW5uZWwub24oX08uUXVlcnlDbGllbnRDb25uZWN0aW9uU3RhdGUsKGU9PntlKHRoaXMuY29ubmVjdGlvblN0YXRlKX0pKX1nZXRLZXlNZXRyaWNzKCl7cmV0dXJuIHRoaXMuc3RvcmUua2V5TWV0cmljc31hc3luYyBlbmFibGVDb250ZW50SW5zcGVjdChlKXtpZighdGhpcy5fam9pbkluZm98fFwiQ09OTkVDVEVEXCIhPT10aGlzLmNvbm5lY3Rpb25TdGF0ZSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBjYW4gbm90IGNyZWF0ZSBjb250ZW50IGluc3BlY3QsIHBsZWFzZSBqb2luIGNoYW5uZWwgZmlyc3RcIikpO2lmKHRoaXMuX2luc3BlY3QpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiW1wiLmNvbmNhdCh0aGlzLl9jbGllbnRJZCxcIl0gSW5zcGVjdCBjb250ZW50IHNlcnZpY2UgYWxyZWFkeSBpbiBjb25uZWN0aW5nL2Nvbm5lY3RlZCBzdGF0ZVwiKSk7dHJ5e2NvbnN0IGk9KHQ9e2NvbmZpZzplfSxnQihcIkNvbnRlbnRJbnNwZWN0XCIpLmNyZWF0ZSh0KSk7dGhpcy5faW5zcGVjdD1pLHRoaXMuaGFuZGxlVmlkZW9JbnNwZWN0RXZlbnRzKGkpO2NvbnN0e2FwcElkOm4sY25hbWU6cixzaWQ6byx0b2tlbjpzLHVpZDphLGNpZDpjLHZpZDpkfT10aGlzLl9qb2luSW5mbzthd2FpdCBpLmluaXQoe2FwcElkOm4sYXJlYUNvZGU6XCJcIixjbmFtZTpyLHNpZDpvLHRva2VuOnMsdWlkOmEsY2lkOmMsdmlkOmQ/TnVtYmVyKGQpOjB9LFBBKX1jYXRjaChlKXt0aHJvdyBBcnJheS5pc0FycmF5KGUpP2VbMF06ZX12YXIgdH1oYW5kbGVWaWRlb0luc3BlY3RFdmVudHMoZSl7ZS5vbihtTy5DT05ORUNUSU9OX1NUQVRFX0NIQU5HRSwoKHQsaSk9PntpZih0aGlzLnNhZmVFbWl0KHp5LkNPTlRFTlRfSU5TUEVDVF9DT05ORUNUSU9OX1NUQVRFX0NIQU5HRSx0LGkpLGk9PT1FTy5DT05ORUNURUQpe2lmKFwiQ09OTkVDVEVEXCIhPT10aGlzLmNvbm5lY3Rpb25TdGF0ZSlyZXR1cm4gdm9pZCB0aGlzLnNhZmVFbWl0KHp5LkNPTlRFTlRfSU5TUEVDVF9FUlJPUixuZXcgeWIoUnkuT1BFUkFUSU9OX0FCT1JURUQsXCJDb250ZW50IGluc3BlY3Qgd2FzIGNhbmNlbGxlZCBiZWNhdXNlIGl0IGxlZnQgdGhlIGNoYW5uZWxcIikpO2UuaW5zcGVjdEltYWdlKCl9fSkpLGUub24obU8uSU5TUEVDVF9SRVNVTFQsKChlLHQpPT57dmFyIGk7aWYoKG51bGw9PXQ/dm9pZCAwOnQuY29kZSk9PT1SeS5JTlZBTElEX09QRVJBVElPTiYmXCJESVNDT05ORUNURURcIj09PXRoaXMuY29ubmVjdGlvblN0YXRlKXJldHVybiBmYi5kZWJ1ZyhcIlN0b3AgaW5zcGVjdCBjb250ZW50IGJlY2F1c2UgdGhhdCBoYXMgbGVmdCBjaGFubmVsXCIpLG51bGw9PXRoaXN8fG51bGw9PT0oaT10aGlzLl9pbnNwZWN0KXx8dm9pZCAwPT09aXx8aS5jbG9zZSgpLHZvaWQodGhpcy5faW5zcGVjdD12b2lkIDApO3RoaXMuc2FmZUVtaXQoenkuQ09OVEVOVF9JTlNQRUNUX1JFU1VMVCxlLHQpfSkpLGUub24obU8uQ0xJRU5UX0xPQ0FMX1ZJREVPX1RSQUNLLChlPT57ZSh0aGlzLmxvY2FsVHJhY2tzLmZpbHRlcigoZT0+XCJ2aWRlb1wiPT09ZS50cmFja01lZGlhVHlwZSkpWzBdKX0pKX1hc3luYyBkaXNhYmxlQ29udGVudEluc3BlY3QoKXtpZighdGhpcy5faW5zcGVjdCl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBpbnNwZWN0VmlkZW9Db250ZW50IG5vdCBzdGFydGVkXCIpKTt0cnl7dGhpcy5faW5zcGVjdC5jbG9zZSgpLHRoaXMuX2luc3BlY3Q9dm9pZCAwfWNhdGNoKGUpe3Rocm93IEFycmF5LmlzQXJyYXkoZSk/ZVswXTplfX1hc3luYyBzZXRJbWFnZU1vZGVyYXRpb24oZSx0KXtpZihJeShlLFwiZW5hYmxlZFwiKSxlKXtpZighdCl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9QQVJBTVMsXCJjb25maWcgaXMgcmVxdWlyZWRcIik7aWYoTGoodCksIXRoaXMuX2pvaW5JbmZvKXRocm93IG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcImNhbiBub3QgY3JlYXRlIGltYWdlIG1vZGVyYXRpb24sIHBsZWFzZSBqb2luIGNoYW5uZWwgZmlyc3RcIik7dHJ5e2lmKHRoaXMuX21vZGVyYXRpb24pdGhpcy5fbW9kZXJhdGlvbi51cGRhdGVDb25maWcodCk7ZWxzZXtjb25zdCBlPShpPXtjb25maWc6dH0sZ0IoXCJJbWFnZU1vZGVyYXRpb25cIikuY3JlYXRlKGkpKTt0aGlzLl9tb2RlcmF0aW9uPWUsdGhpcy5oYW5kbGVJbWFnZU1vZGVyYXRpb25FdmVudHMoZSk7Y29uc3R7YXBwSWQ6bixjbmFtZTpyLHNpZDpvLHRva2VuOnMsdWlkOmEsY2lkOmMsdmlkOmR9PXRoaXMuX2pvaW5JbmZvO2F3YWl0IGUuaW5pdCh7YXBwSWQ6bixhcmVhQ29kZTpcIlwiLGNuYW1lOnIsc2lkOm8sdG9rZW46cyx1aWQ6YSxjaWQ6Yyx2aWQ6ZD9OdW1iZXIoZCk6MH0sUEEpfX1jYXRjaChlKXt0aHJvdyBBcnJheS5pc0FycmF5KGUpP2VbMF06ZX19ZWxzZXt2YXIgaTtpZighdGhpcy5fbW9kZXJhdGlvbil0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBpbWFnZSBtb2RlcmF0aW9uIG5vdCBzdGFydGVkXCIpKTt0cnl7dGhpcy5fbW9kZXJhdGlvbi5jbG9zZSgpLHRoaXMuX21vZGVyYXRpb24ucmVtb3ZlQWxsTGlzdGVuZXJzKCksdGhpcy5fbW9kZXJhdGlvbj12b2lkIDB9Y2F0Y2goZSl7dGhyb3cgQXJyYXkuaXNBcnJheShlKT9lWzBdOmV9fX1oYW5kbGVJbWFnZU1vZGVyYXRpb25FdmVudHMoZSl7ZS5vbihSTy5DT05ORUNUSU9OX1NUQVRFX0NIQU5HRSwoKHQsaSk9PntpZih0aGlzLnNhZmVFbWl0KHp5LklNQUdFX01PREVSQVRJT05fQ09OTkVDVElPTl9TVEFURV9DSEFOR0UsdCxpKSx0PT09Z08uQ09OTkVDVEVEKXtpZihcIkNPTk5FQ1RFRFwiIT09dGhpcy5jb25uZWN0aW9uU3RhdGUpdGhyb3cgdGhpcy5zZXRJbWFnZU1vZGVyYXRpb24oITEpLG5ldyB5YihSeS5PUEVSQVRJT05fQUJPUlRFRCxcIkltYWdlIG1vZGVyYXRpb24gd2FzIGNhbmNlbGxlZCBiZWNhdXNlIGl0IGxlZnQgdGhlIGNoYW5uZWxcIik7ZS5pbnNwZWN0SW1hZ2UoKX19KSksZS5vbihSTy5DTElFTlRfTE9DQUxfVklERU9fVFJBQ0ssKGU9PntlKHRoaXMubG9jYWxUcmFja3MuZmlsdGVyKChlPT5cInZpZGVvXCI9PT1lLnRyYWNrTWVkaWFUeXBlKSlbMF0pfSkpfXNldFAyUFRyYW5zcG9ydChlKXtpZihmdW5jdGlvbihlKXt2eShlLFwidHJhbnNwb3J0XCIsW1wiZGVmYXVsdFwiLFwiYXV0b1wiLFwicmVsYXlcIixcInNkLXJ0blwiXSl9KGUpLFwicDJwXCIhPT10aGlzLm1vZGUpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwib25seSBwMnAgbW9kZSBjYW4gc2V0IHAycFRyYW5zcG9ydFwiKTt0aGlzLnN0b3JlLnAycFRyYW5zcG9ydD1lLGZiLmluZm8oXCJbXCIuY29uY2F0KHRoaXMuX2NsaWVudElkLFwiXSBzZXQgY2xpZW50IHAycFRyYW5zcG9ydCB0byBcIikuY29uY2F0KGUpKX1nZXRKb2luQ2hhbm5lbFNlcnZpY2VSZWNvcmRzKCl7cmV0dXJuIGZiLmRlYnVnKFwiZ2V0Sm9pbkNoYW5uZWxTZXJ2aWNlUmVjb3Jkc1wiKSx0aGlzLnN0b3JlLmpvaW5DaGFubmVsU2VydmljZVJlY29yZHN9YXN5bmMgc2V0UHVibGlzaEF1ZGlvRmlsdGVyRW5hYmxlZChlKXtJeShlLFwiZW5hYmxlZFwiKSxKQShcIkVOQUJMRV9QVUJMSVNIX0FVRElPX0ZJTFRFUlwiLGUpLHRoaXMuX2pvaW5JbmZvJiZhd2FpdCB0aGlzLl9nYXRld2F5LnNldFB1Ymxpc2hBdWRpb0ZpbHRlckVuYWJsZWQoZSl9X2hhbmRsZVJlc2V0QWRkU3RyZWFtKGUsdCl7c3dpdGNoKHQpe2Nhc2VcImF1ZGlvXCI6ZS5fYXVkaW9fYWRkZWRfPSExLGUuX3RydXN0X2F1ZGlvX3N0cmVhbV9hZGRlZF9zdGF0ZV89ITA7YnJlYWs7Y2FzZVwidmlkZW9cIjplLl92aWRlb19hZGRlZF89ITEsZS5fdHJ1c3RfdmlkZW9fc3RyZWFtX2FkZGVkX3N0YXRlXz0hMH19fSxDdyhSRy5wcm90b3R5cGUsXCJsZWF2ZVwiLFtNal0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJsZWF2ZVwiKSxSRy5wcm90b3R5cGUpLEN3KFJHLnByb3RvdHlwZSxcInB1Ymxpc2hcIixbVWpdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUkcucHJvdG90eXBlLFwicHVibGlzaFwiKSxSRy5wcm90b3R5cGUpLEN3KFJHLnByb3RvdHlwZSxcInVucHVibGlzaFwiLFt4al0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJ1bnB1Ymxpc2hcIiksUkcucHJvdG90eXBlKSxDdyhSRy5wcm90b3R5cGUsXCJzdWJzY3JpYmVcIixbVmpdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUkcucHJvdG90eXBlLFwic3Vic2NyaWJlXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwicHJlc3Vic2NyaWJlXCIsW0ZqXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcInByZXN1YnNjcmliZVwiKSxSRy5wcm90b3R5cGUpLEN3KFJHLnByb3RvdHlwZSxcIm1hc3NTdWJzY3JpYmVcIixbQmpdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUkcucHJvdG90eXBlLFwibWFzc1N1YnNjcmliZVwiKSxSRy5wcm90b3R5cGUpLEN3KFJHLnByb3RvdHlwZSxcInVuc3Vic2NyaWJlXCIsW2pqXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcInVuc3Vic2NyaWJlXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwibWFzc1Vuc3Vic2NyaWJlXCIsW0dqXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcIm1hc3NVbnN1YnNjcmliZVwiKSxSRy5wcm90b3R5cGUpLEN3KFJHLnByb3RvdHlwZSxcInNldExvd1N0cmVhbVBhcmFtZXRlclwiLFtXal0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJzZXRMb3dTdHJlYW1QYXJhbWV0ZXJcIiksUkcucHJvdG90eXBlKSxDdyhSRy5wcm90b3R5cGUsXCJlbmFibGVEdWFsU3RyZWFtXCIsW0hqXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcImVuYWJsZUR1YWxTdHJlYW1cIiksUkcucHJvdG90eXBlKSxDdyhSRy5wcm90b3R5cGUsXCJkaXNhYmxlRHVhbFN0cmVhbVwiLFtLal0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJkaXNhYmxlRHVhbFN0cmVhbVwiKSxSRy5wcm90b3R5cGUpLEN3KFJHLnByb3RvdHlwZSxcInNldENsaWVudFJvbGVcIixbWWpdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUkcucHJvdG90eXBlLFwic2V0Q2xpZW50Um9sZVwiKSxSRy5wcm90b3R5cGUpLEN3KFJHLnByb3RvdHlwZSxcInNldFByb3h5U2VydmVyXCIsW3FqXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcInNldFByb3h5U2VydmVyXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwic2V0VHVyblNlcnZlclwiLFt6al0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJzZXRUdXJuU2VydmVyXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwic2V0TGljZW5zZVwiLFtKal0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJzZXRMaWNlbnNlXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwic3RhcnRQcm94eVNlcnZlclwiLFtYal0sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJzdGFydFByb3h5U2VydmVyXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwic3RvcFByb3h5U2VydmVyXCIsW1FqXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcInN0b3BQcm94eVNlcnZlclwiKSxSRy5wcm90b3R5cGUpLEN3KFJHLnByb3RvdHlwZSxcInNldExvY2FsQWNjZXNzUG9pbnRzVjJcIixbWmpdLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUkcucHJvdG90eXBlLFwic2V0TG9jYWxBY2Nlc3NQb2ludHNWMlwiKSxSRy5wcm90b3R5cGUpLEN3KFJHLnByb3RvdHlwZSxcInNldExvY2FsQWNjZXNzUG9pbnRzXCIsWyRqXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcInNldExvY2FsQWNjZXNzUG9pbnRzXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwic2V0UmVtb3RlRGVmYXVsdFZpZGVvU3RyZWFtVHlwZVwiLFtlR10sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJzZXRSZW1vdGVEZWZhdWx0VmlkZW9TdHJlYW1UeXBlXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwic2V0UmVtb3RlVmlkZW9TdHJlYW1UeXBlXCIsW3RHXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcInNldFJlbW90ZVZpZGVvU3RyZWFtVHlwZVwiKSxSRy5wcm90b3R5cGUpLEN3KFJHLnByb3RvdHlwZSxcInNldFN0cmVhbUZhbGxiYWNrT3B0aW9uXCIsW2lHXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcInNldFN0cmVhbUZhbGxiYWNrT3B0aW9uXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwic2V0RW5jcnlwdGlvbkNvbmZpZ1wiLFtuR10sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJzZXRFbmNyeXB0aW9uQ29uZmlnXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwicmVuZXdUb2tlblwiLFtyR10sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJyZW5ld1Rva2VuXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwiZW5hYmxlQXVkaW9Wb2x1bWVJbmRpY2F0b3JcIixbb0ddLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUkcucHJvdG90eXBlLFwiZW5hYmxlQXVkaW9Wb2x1bWVJbmRpY2F0b3JcIiksUkcucHJvdG90eXBlKSxDdyhSRy5wcm90b3R5cGUsXCJzdGFydExpdmVTdHJlYW1pbmdcIixbc0ddLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUkcucHJvdG90eXBlLFwic3RhcnRMaXZlU3RyZWFtaW5nXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwic2V0TGl2ZVRyYW5zY29kaW5nXCIsW2FHXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcInNldExpdmVUcmFuc2NvZGluZ1wiKSxSRy5wcm90b3R5cGUpLEN3KFJHLnByb3RvdHlwZSxcInN0b3BMaXZlU3RyZWFtaW5nXCIsW2NHXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcInN0b3BMaXZlU3RyZWFtaW5nXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwic3RhcnRDaGFubmVsTWVkaWFSZWxheVwiLFtkR10sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJzdGFydENoYW5uZWxNZWRpYVJlbGF5XCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwidXBkYXRlQ2hhbm5lbE1lZGlhUmVsYXlcIixbbEddLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUkcucHJvdG90eXBlLFwidXBkYXRlQ2hhbm5lbE1lZGlhUmVsYXlcIiksUkcucHJvdG90eXBlKSxDdyhSRy5wcm90b3R5cGUsXCJzdG9wQ2hhbm5lbE1lZGlhUmVsYXlcIixbdUddLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUkcucHJvdG90eXBlLFwic3RvcENoYW5uZWxNZWRpYVJlbGF5XCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwic2VuZEN1c3RvbVJlcG9ydE1lc3NhZ2VcIixbaEddLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUkcucHJvdG90eXBlLFwic2VuZEN1c3RvbVJlcG9ydE1lc3NhZ2VcIiksUkcucHJvdG90eXBlKSxDdyhSRy5wcm90b3R5cGUsXCJwaWNrU1ZDTGF5ZXJcIixbcEddLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUkcucHJvdG90eXBlLFwicGlja1NWQ0xheWVyXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwic2V0UlRNQ29uZmlnXCIsW19HXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcInNldFJUTUNvbmZpZ1wiKSxSRy5wcm90b3R5cGUpLEN3KFJHLnByb3RvdHlwZSxcImVuYWJsZUNvbnRlbnRJbnNwZWN0XCIsW0VHXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcImVuYWJsZUNvbnRlbnRJbnNwZWN0XCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwiZGlzYWJsZUNvbnRlbnRJbnNwZWN0XCIsW2ZHXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKFJHLnByb3RvdHlwZSxcImRpc2FibGVDb250ZW50SW5zcGVjdFwiKSxSRy5wcm90b3R5cGUpLEN3KFJHLnByb3RvdHlwZSxcInNldEltYWdlTW9kZXJhdGlvblwiLFttR10sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJzZXRJbWFnZU1vZGVyYXRpb25cIiksUkcucHJvdG90eXBlKSxDdyhSRy5wcm90b3R5cGUsXCJzZXRQMlBUcmFuc3BvcnRcIixbVEddLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUkcucHJvdG90eXBlLFwic2V0UDJQVHJhbnNwb3J0XCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwiZ2V0Sm9pbkNoYW5uZWxTZXJ2aWNlUmVjb3Jkc1wiLFtTR10sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJnZXRKb2luQ2hhbm5lbFNlcnZpY2VSZWNvcmRzXCIpLFJHLnByb3RvdHlwZSksQ3coUkcucHJvdG90eXBlLFwic2V0UHVibGlzaEF1ZGlvRmlsdGVyRW5hYmxlZFwiLFtnR10sT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihSRy5wcm90b3R5cGUsXCJzZXRQdWJsaXNoQXVkaW9GaWx0ZXJFbmFibGVkXCIpLFJHLnByb3RvdHlwZSksUkcpO2NsYXNzIHlHe2NvbnN0cnVjdG9yKGUsdCl7RmcodGhpcyxcImlkXCIsMCksRmcodGhpcyxcImVsZW1lbnRcIix2b2lkIDApLEZnKHRoaXMsXCJwZWVyUGFpclwiLHZvaWQgMCksRmcodGhpcyxcImNvbnRleHRcIix2b2lkIDApLEZnKHRoaXMsXCJhdWRpb1BsYXllckVsZW1lbnRcIix2b2lkIDApLEZnKHRoaXMsXCJhdWRpb1RyYWNrXCIsdm9pZCAwKSx5Ry5jb3VudCs9MSx0aGlzLmlkPXlHLmNvdW50LHRoaXMuZWxlbWVudD1lLHRoaXMuY29udGV4dD10fWluaXRQZWVycygpe3RoaXMucGVlclBhaXI9W25ldyBSVENQZWVyQ29ubmVjdGlvbixuZXcgUlRDUGVlckNvbm5lY3Rpb25dLHRoaXMucGVlclBhaXJbMV0ub250cmFjaz1lPT57Y29uc3QgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYXVkaW9cIik7dC5zcmNPYmplY3Q9bmV3IE1lZGlhU3RyZWFtKFtlLnRyYWNrXSksdC5wbGF5KCksdGhpcy5hdWRpb1BsYXllckVsZW1lbnQ9dH19YXN5bmMgc3dpdGNoU2RwKCl7aWYoIXRoaXMucGVlclBhaXIpcmV0dXJuO2NvbnN0IGU9YXN5bmMoZSx0KT0+e2NvbnN0IGk9XCJvZmZlclwiPT09dD9hd2FpdCBlLmNyZWF0ZU9mZmVyKCk6YXdhaXQgZS5jcmVhdGVBbnN3ZXIoKTtyZXR1cm4gYXdhaXQgZS5zZXRMb2NhbERlc2NyaXB0aW9uKGkpLFwiY29tcGxldGVcIj09PWUuaWNlR2F0aGVyaW5nU3RhdGU/ZS5sb2NhbERlc2NyaXB0aW9uOm5ldyBHaCgodD0+e2Uub25pY2VnYXRoZXJpbmdzdGF0ZWNoYW5nZT0oKT0+e1wiY29tcGxldGVcIj09PWUuaWNlR2F0aGVyaW5nU3RhdGUmJnQoZS5sb2NhbERlc2NyaXB0aW9uKX19KSl9LHQ9YXN5bmMoZSx0KT0+YXdhaXQgZS5zZXRSZW1vdGVEZXNjcmlwdGlvbih0KTt0cnl7Y29uc3QgaT1hd2FpdCBlKHRoaXMucGVlclBhaXJbMF0sXCJvZmZlclwiKTthd2FpdCB0KHRoaXMucGVlclBhaXJbMV0saSk7Y29uc3Qgbj1hd2FpdCBlKHRoaXMucGVlclBhaXJbMV0sXCJhbnN3ZXJcIik7YXdhaXQgdCh0aGlzLnBlZXJQYWlyWzBdLG4pfWNhdGNoKGUpe3Rocm93IG5ldyB5YihSeS5MT0NBTF9BRUNfRVJST1IsZS50b1N0cmluZygpKS5wcmludCgpfX1hc3luYyBnZXRUcmFja3NGcm9tTWVkaWFFbGVtZW50KGUpe2lmKHRoaXMuYXVkaW9UcmFjaylyZXR1cm4gdGhpcy5hdWRpb1RyYWNrO2xldCB0O3RyeXtlIGluc3RhbmNlb2YgSFRNTFZpZGVvRWxlbWVudCYmKGUuY2FwdHVyZVN0cmVhbT9lLmNhcHR1cmVTdHJlYW0oKTplLm1vekNhcHR1cmVTdHJlYW0oKSksdD10aGlzLmNvbnRleHQuY3JlYXRlTWVkaWFTdHJlYW1EZXN0aW5hdGlvbigpO3RoaXMuY29udGV4dC5jcmVhdGVNZWRpYUVsZW1lbnRTb3VyY2UoZSkuY29ubmVjdCh0KX1jYXRjaChlKXt0aHJvdyBuZXcgeWIoUnkuTE9DQUxfQUVDX0VSUk9SLGUudG9TdHJpbmcoKSkucHJpbnQoKX1pZighdCl7dGhyb3cgbmV3IHliKFJ5LkxPQ0FMX0FFQ19FUlJPUixcIm5vIGRlc3Qgbm9kZSB3aGVuIGxvY2FsIGFlY1wiKS5wcmludCgpfWNvbnN0IGk9dC5zdHJlYW0uZ2V0QXVkaW9UcmFja3MoKVswXTtyZXR1cm4gdGhpcy5hdWRpb1RyYWNrPWksaX1nZXRFbGVtZW50KCl7cmV0dXJuIHRoaXMuZWxlbWVudH1hc3luYyBzdGFydEVjaG9DYW5jZWxsYXRpb24oKXt0aGlzLmNvbnRleHQucmVzdW1lKCksdGhpcy5wZWVyUGFpciYmdGhpcy5jbG9zZSgpLHRoaXMuaW5pdFBlZXJzKCk7Y29uc3QgZT10aGlzLmVsZW1lbnQsdD1hd2FpdCB0aGlzLmdldFRyYWNrc0Zyb21NZWRpYUVsZW1lbnQoZSk7dGhpcy5wZWVyUGFpciYmdGhpcy5wZWVyUGFpclswXS5hZGRUcmFjayh0KSxhd2FpdCB0aGlzLnN3aXRjaFNkcCgpfWNsb3NlKCl7ZmIuZGVidWcoXCJjbG9zZSBlY2hvIGNhbmNlbGxhdGlvbiB1bml0LCBpZCBpc1wiLHRoaXMuaWQpLHRoaXMuYXVkaW9QbGF5ZXJFbGVtZW50JiZ0aGlzLmF1ZGlvUGxheWVyRWxlbWVudC5wYXVzZSgpLHRoaXMucGVlclBhaXImJnRoaXMucGVlclBhaXIuZm9yRWFjaCgoZT0+e2UuY2xvc2UoKX0pKSx0aGlzLnBlZXJQYWlyPXZvaWQgMCx0aGlzLmF1ZGlvUGxheWVyRWxlbWVudD12b2lkIDB9fXZhciBBRyxiRztGZyh5RyxcImNvdW50XCIsMCk7Y29uc3Qgd0c9d2luZG93LkF1ZGlvQ29udGV4dHx8d2luZG93LndlYmtpdEF1ZGlvQ29udGV4dDtjb25zdCBPRz1uZXcoQUc9SWIoe3JlcG9ydDp2Yn0pLEN3KChiRz1jbGFzc3tjb25zdHJ1Y3Rvcigpe0ZnKHRoaXMsXCJ1bml0c1wiLFtdKSxGZyh0aGlzLFwiY29udGV4dFwiLHZvaWQgMCl9cHJvY2Vzc0V4dGVybmFsTWVkaWFBRUMoZSl7aWYoIXRoaXMuX2RvZXNFbnZpcm9ubWVudE5lZWRBRUMoKSlyZXR1cm4gZmIuZGVidWcoXCJ0aGUgc3lzdGVtIGRvZXMgbm90IG5lZWQgdG8gcHJvY2VzcyBsb2NhbCBhZWNcIiksLTE7dGhpcy5jb250ZXh0fHwodGhpcy5jb250ZXh0PW5ldyB3Ryk7bGV0IHQ9dGhpcy51bml0cy5maW5kKCh0PT50JiZ0LmdldEVsZW1lbnQoKT09PWUpKTtyZXR1cm4gdHx8KHQ9bmV3IHlHKGUsdGhpcy5jb250ZXh0KSx0aGlzLnVuaXRzLnB1c2godCkpLHQuc3RhcnRFY2hvQ2FuY2VsbGF0aW9uKCksZmIuZGVidWcoXCJzdGFydCBwcm9jZXNzaW5nIGxvY2FsIGF1ZGlvIGVjaG8gY2FuY2VsbGF0aW9uLCBpZCBpc1wiLHQuaWQpLHQuaWR9X2RvZXNFbnZpcm9ubWVudE5lZWRBRUMoKXtyZXR1cm4gSHYoKS5uYW1lIT09QnYuU0FGQVJJfX0pLnByb3RvdHlwZSxcInByb2Nlc3NFeHRlcm5hbE1lZGlhQUVDXCIsW0FHXSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGJHLnByb3RvdHlwZSxcInByb2Nlc3NFeHRlcm5hbE1lZGlhQUVDXCIpLGJHLnByb3RvdHlwZSksYkcpO2Z1bmN0aW9uIE5HKGUsdCl7dmFyIGk9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYobj1uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxpLnB1c2guYXBwbHkoaSxuKX1yZXR1cm4gaX1mdW5jdGlvbiBERyhlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgaT1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj9ORyhPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0ZnKGUsdCxpW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGkpKTpORyhPYmplY3QoaSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLHQpKX0pKX1yZXR1cm4gZX1jb25zdCBQRz13aW5kb3d8fGRvY3VtZW50O2Z1bmN0aW9uIExHKGUpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdJiZhcmd1bWVudHNbMV07aWYoIVBHKXJldHVybjtjb25zdCBpPW5xLl9jc3BFdmVudEhhbmRsZXJQb2ludGVyO2lmKGkmJnQpcmV0dXJuIHZvaWQgY29uc29sZS5lcnJvcihpLHQpO2NvbnN0IG49ZT0+e2lmKCEoZSYmZS5ibG9ja2VkVVJJJiYobnEub25TZWN1cml0eVBvbGljeVZpb2xhdGlvbnx8bnEuZ2V0TGlzdGVuZXJzKFNPLlNFQ1VSSVRZX1BPTElDWV9WSU9MQVRJT04pLmxlbmd0aD4wKSkpcmV0dXJuO2NvbnN0IHQ9ZS5ibG9ja2VkVVJJO1hBKFwiQ1NQX0RFVEVDVEVEX0hPU1ROQU1FX0xJU1RcIikuc29tZSgoZT0+RG4odCkuY2FsbCh0LGUpKSkmJihucS5vblNlY3VyaXR5UG9saWN5VmlvbGF0aW9uJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBucS5vblNlY3VyaXR5UG9saWN5VmlvbGF0aW9uJiZucS5vblNlY3VyaXR5UG9saWN5VmlvbGF0aW9uKGUpLG5xLmdldExpc3RlbmVycyhTTy5TRUNVUklUWV9QT0xJQ1lfVklPTEFUSU9OKS5sZW5ndGg+MCYmbnEuc2FmZUVtaXQoU08uU0VDVVJJVFlfUE9MSUNZX1ZJT0xBVElPTixlKSl9O2kmJlBHLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzZWN1cml0eXBvbGljeXZpb2xhdGlvblwiLGkpLCh0fHxlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBlfHxucS5nZXRMaXN0ZW5lcnMoU08uU0VDVVJJVFlfUE9MSUNZX1ZJT0xBVElPTikubGVuZ3RoPjApJiZQRy5hZGRFdmVudExpc3RlbmVyKFwic2VjdXJpdHlwb2xpY3l2aW9sYXRpb25cIixuKSxucS5fY3NwRXZlbnRIYW5kbGVyUG9pbnRlcj1ufXZhciBrRz1sLE1HPVJDLFVHPVJlZ0V4cC5wcm90b3R5cGUseEc9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT1VR3x8a0coVUcsZSk/TUcoZSk6ZS5mbGFnc30sVkc9aSh4Ryk7ZnVuY3Rpb24gRkcoZSl7bGV0IHQ9ZS5sZW5ndGg7Zm9yKDstLXQ+PTA7KWVbdF09MH1jb25zdCBCRz0yNTYsakc9Mjg2LEdHPTMwLFdHPTE1LEhHPW5ldyBVaW50OEFycmF5KFswLDAsMCwwLDAsMCwwLDAsMSwxLDEsMSwyLDIsMiwyLDMsMywzLDMsNCw0LDQsNCw1LDUsNSw1LDBdKSxLRz1uZXcgVWludDhBcnJheShbMCwwLDAsMCwxLDEsMiwyLDMsMyw0LDQsNSw1LDYsNiw3LDcsOCw4LDksOSwxMCwxMCwxMSwxMSwxMiwxMiwxMywxM10pLFlHPW5ldyBVaW50OEFycmF5KFswLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDIsMyw3XSkscUc9bmV3IFVpbnQ4QXJyYXkoWzE2LDE3LDE4LDAsOCw3LDksNiwxMCw1LDExLDQsMTIsMywxMywyLDE0LDEsMTVdKSx6Rz1uZXcgQXJyYXkoNTc2KTtGRyh6Ryk7Y29uc3QgSkc9bmV3IEFycmF5KDYwKTtGRyhKRyk7Y29uc3QgWEc9bmV3IEFycmF5KDUxMik7RkcoWEcpO2NvbnN0IFFHPW5ldyBBcnJheSgyNTYpO0ZHKFFHKTtjb25zdCBaRz1uZXcgQXJyYXkoMjkpO0ZHKFpHKTtjb25zdCAkRz1uZXcgQXJyYXkoR0cpO2Z1bmN0aW9uIGVXKGUsdCxpLG4scil7dGhpcy5zdGF0aWNfdHJlZT1lLHRoaXMuZXh0cmFfYml0cz10LHRoaXMuZXh0cmFfYmFzZT1pLHRoaXMuZWxlbXM9bix0aGlzLm1heF9sZW5ndGg9cix0aGlzLmhhc19zdHJlZT1lJiZlLmxlbmd0aH1sZXQgdFcsaVcsblc7ZnVuY3Rpb24gclcoZSx0KXt0aGlzLmR5bl90cmVlPWUsdGhpcy5tYXhfY29kZT0wLHRoaXMuc3RhdF9kZXNjPXR9RkcoJEcpO2NvbnN0IG9XPWU9PmU8MjU2P1hHW2VdOlhHWzI1NisoZT4+PjcpXSxzVz0oZSx0KT0+e2UucGVuZGluZ19idWZbZS5wZW5kaW5nKytdPTI1NSZ0LGUucGVuZGluZ19idWZbZS5wZW5kaW5nKytdPXQ+Pj44JjI1NX0sYVc9KGUsdCxpKT0+e2UuYmlfdmFsaWQ+MTYtaT8oZS5iaV9idWZ8PXQ8PGUuYmlfdmFsaWQmNjU1MzUsc1coZSxlLmJpX2J1ZiksZS5iaV9idWY9dD4+MTYtZS5iaV92YWxpZCxlLmJpX3ZhbGlkKz1pLTE2KTooZS5iaV9idWZ8PXQ8PGUuYmlfdmFsaWQmNjU1MzUsZS5iaV92YWxpZCs9aSl9LGNXPShlLHQsaSk9PnthVyhlLGlbMip0XSxpWzIqdCsxXSl9LGRXPShlLHQpPT57bGV0IGk9MDtkb3tpfD0xJmUsZT4+Pj0xLGk8PD0xfXdoaWxlKC0tdD4wKTtyZXR1cm4gaT4+PjF9LGxXPShlLHQsaSk9Pntjb25zdCBuPW5ldyBBcnJheSgxNik7bGV0IHIsbyxzPTA7Zm9yKHI9MTtyPD1XRztyKyspcz1zK2lbci0xXTw8MSxuW3JdPXM7Zm9yKG89MDtvPD10O28rKyl7bGV0IHQ9ZVsyKm8rMV07MCE9PXQmJihlWzIqb109ZFcoblt0XSsrLHQpKX19LHVXPWU9PntsZXQgdDtmb3IodD0wO3Q8akc7dCsrKWUuZHluX2x0cmVlWzIqdF09MDtmb3IodD0wO3Q8R0c7dCsrKWUuZHluX2R0cmVlWzIqdF09MDtmb3IodD0wO3Q8MTk7dCsrKWUuYmxfdHJlZVsyKnRdPTA7ZS5keW5fbHRyZWVbNTEyXT0xLGUub3B0X2xlbj1lLnN0YXRpY19sZW49MCxlLnN5bV9uZXh0PWUubWF0Y2hlcz0wfSxoVz1lPT57ZS5iaV92YWxpZD44P3NXKGUsZS5iaV9idWYpOmUuYmlfdmFsaWQ+MCYmKGUucGVuZGluZ19idWZbZS5wZW5kaW5nKytdPWUuYmlfYnVmKSxlLmJpX2J1Zj0wLGUuYmlfdmFsaWQ9MH0scFc9KGUsdCxpLG4pPT57Y29uc3Qgcj0yKnQsbz0yKmk7cmV0dXJuIGVbcl08ZVtvXXx8ZVtyXT09PWVbb10mJm5bdF08PW5baV19LF9XPShlLHQsaSk9Pntjb25zdCBuPWUuaGVhcFtpXTtsZXQgcj1pPDwxO2Zvcig7cjw9ZS5oZWFwX2xlbiYmKHI8ZS5oZWFwX2xlbiYmcFcodCxlLmhlYXBbcisxXSxlLmhlYXBbcl0sZS5kZXB0aCkmJnIrKywhcFcodCxuLGUuaGVhcFtyXSxlLmRlcHRoKSk7KWUuaGVhcFtpXT1lLmhlYXBbcl0saT1yLHI8PD0xO2UuaGVhcFtpXT1ufSxFVz0oZSx0LGkpPT57bGV0IG4scixvLHMsYT0wO2lmKDAhPT1lLnN5bV9uZXh0KWRve249MjU1JmUucGVuZGluZ19idWZbZS5zeW1fYnVmK2ErK10sbis9KDI1NSZlLnBlbmRpbmdfYnVmW2Uuc3ltX2J1ZithKytdKTw8OCxyPWUucGVuZGluZ19idWZbZS5zeW1fYnVmK2ErK10sMD09PW4/Y1coZSxyLHQpOihvPVFHW3JdLGNXKGUsbytCRysxLHQpLHM9SEdbb10sMCE9PXMmJihyLT1aR1tvXSxhVyhlLHIscykpLG4tLSxvPW9XKG4pLGNXKGUsbyxpKSxzPUtHW29dLDAhPT1zJiYobi09JEdbb10sYVcoZSxuLHMpKSl9d2hpbGUoYTxlLnN5bV9uZXh0KTtjVyhlLDI1Nix0KX0sZlc9KGUsdCk9Pntjb25zdCBpPXQuZHluX3RyZWUsbj10LnN0YXRfZGVzYy5zdGF0aWNfdHJlZSxyPXQuc3RhdF9kZXNjLmhhc19zdHJlZSxvPXQuc3RhdF9kZXNjLmVsZW1zO2xldCBzLGEsYyxkPS0xO2ZvcihlLmhlYXBfbGVuPTAsZS5oZWFwX21heD01NzMscz0wO3M8bztzKyspMCE9PWlbMipzXT8oZS5oZWFwWysrZS5oZWFwX2xlbl09ZD1zLGUuZGVwdGhbc109MCk6aVsyKnMrMV09MDtmb3IoO2UuaGVhcF9sZW48MjspYz1lLmhlYXBbKytlLmhlYXBfbGVuXT1kPDI/KytkOjAsaVsyKmNdPTEsZS5kZXB0aFtjXT0wLGUub3B0X2xlbi0tLHImJihlLnN0YXRpY19sZW4tPW5bMipjKzFdKTtmb3IodC5tYXhfY29kZT1kLHM9ZS5oZWFwX2xlbj4+MTtzPj0xO3MtLSlfVyhlLGkscyk7Yz1vO2Rve3M9ZS5oZWFwWzFdLGUuaGVhcFsxXT1lLmhlYXBbZS5oZWFwX2xlbi0tXSxfVyhlLGksMSksYT1lLmhlYXBbMV0sZS5oZWFwWy0tZS5oZWFwX21heF09cyxlLmhlYXBbLS1lLmhlYXBfbWF4XT1hLGlbMipjXT1pWzIqc10raVsyKmFdLGUuZGVwdGhbY109KGUuZGVwdGhbc10+PWUuZGVwdGhbYV0/ZS5kZXB0aFtzXTplLmRlcHRoW2FdKSsxLGlbMipzKzFdPWlbMiphKzFdPWMsZS5oZWFwWzFdPWMrKyxfVyhlLGksMSl9d2hpbGUoZS5oZWFwX2xlbj49Mik7ZS5oZWFwWy0tZS5oZWFwX21heF09ZS5oZWFwWzFdLCgoZSx0KT0+e2NvbnN0IGk9dC5keW5fdHJlZSxuPXQubWF4X2NvZGUscj10LnN0YXRfZGVzYy5zdGF0aWNfdHJlZSxvPXQuc3RhdF9kZXNjLmhhc19zdHJlZSxzPXQuc3RhdF9kZXNjLmV4dHJhX2JpdHMsYT10LnN0YXRfZGVzYy5leHRyYV9iYXNlLGM9dC5zdGF0X2Rlc2MubWF4X2xlbmd0aDtsZXQgZCxsLHUsaCxwLF8sRT0wO2ZvcihoPTA7aDw9V0c7aCsrKWUuYmxfY291bnRbaF09MDtmb3IoaVsyKmUuaGVhcFtlLmhlYXBfbWF4XSsxXT0wLGQ9ZS5oZWFwX21heCsxO2Q8NTczO2QrKylsPWUuaGVhcFtkXSxoPWlbMippWzIqbCsxXSsxXSsxLGg+YyYmKGg9YyxFKyspLGlbMipsKzFdPWgsbD5ufHwoZS5ibF9jb3VudFtoXSsrLHA9MCxsPj1hJiYocD1zW2wtYV0pLF89aVsyKmxdLGUub3B0X2xlbis9XyooaCtwKSxvJiYoZS5zdGF0aWNfbGVuKz1fKihyWzIqbCsxXStwKSkpO2lmKDAhPT1FKXtkb3tmb3IoaD1jLTE7MD09PWUuYmxfY291bnRbaF07KWgtLTtlLmJsX2NvdW50W2hdLS0sZS5ibF9jb3VudFtoKzFdKz0yLGUuYmxfY291bnRbY10tLSxFLT0yfXdoaWxlKEU+MCk7Zm9yKGg9YzswIT09aDtoLS0pZm9yKGw9ZS5ibF9jb3VudFtoXTswIT09bDspdT1lLmhlYXBbLS1kXSx1Pm58fChpWzIqdSsxXSE9PWgmJihlLm9wdF9sZW4rPShoLWlbMip1KzFdKSppWzIqdV0saVsyKnUrMV09aCksbC0tKX19KShlLHQpLGxXKGksZCxlLmJsX2NvdW50KX0sbVc9KGUsdCxpKT0+e2xldCBuLHIsbz0tMSxzPXRbMV0sYT0wLGM9NyxkPTQ7Zm9yKDA9PT1zJiYoYz0xMzgsZD0zKSx0WzIqKGkrMSkrMV09NjU1MzUsbj0wO248PWk7bisrKXI9cyxzPXRbMioobisxKSsxXSwrK2E8YyYmcj09PXN8fChhPGQ/ZS5ibF90cmVlWzIqcl0rPWE6MCE9PXI/KHIhPT1vJiZlLmJsX3RyZWVbMipyXSsrLGUuYmxfdHJlZVszMl0rKyk6YTw9MTA/ZS5ibF90cmVlWzM0XSsrOmUuYmxfdHJlZVszNl0rKyxhPTAsbz1yLDA9PT1zPyhjPTEzOCxkPTMpOnI9PT1zPyhjPTYsZD0zKTooYz03LGQ9NCkpfSxUVz0oZSx0LGkpPT57bGV0IG4scixvPS0xLHM9dFsxXSxhPTAsYz03LGQ9NDtmb3IoMD09PXMmJihjPTEzOCxkPTMpLG49MDtuPD1pO24rKylpZihyPXMscz10WzIqKG4rMSkrMV0sISgrK2E8YyYmcj09PXMpKXtpZihhPGQpZG97Y1coZSxyLGUuYmxfdHJlZSl9d2hpbGUoMCE9LS1hKTtlbHNlIDAhPT1yPyhyIT09byYmKGNXKGUscixlLmJsX3RyZWUpLGEtLSksY1coZSwxNixlLmJsX3RyZWUpLGFXKGUsYS0zLDIpKTphPD0xMD8oY1coZSwxNyxlLmJsX3RyZWUpLGFXKGUsYS0zLDMpKTooY1coZSwxOCxlLmJsX3RyZWUpLGFXKGUsYS0xMSw3KSk7YT0wLG89ciwwPT09cz8oYz0xMzgsZD0zKTpyPT09cz8oYz02LGQ9Myk6KGM9NyxkPTQpfX07bGV0IFNXPSExO2NvbnN0IGdXPShlLHQsaSxuKT0+e2FXKGUsMCsobj8xOjApLDMpLGhXKGUpLHNXKGUsaSksc1coZSx+aSksaSYmZS5wZW5kaW5nX2J1Zi5zZXQoZS53aW5kb3cuc3ViYXJyYXkodCx0K2kpLGUucGVuZGluZyksZS5wZW5kaW5nKz1pfTt2YXIgUlc9ZT0+e1NXfHwoKCgpPT57bGV0IGUsdCxpLG4scjtjb25zdCBvPW5ldyBBcnJheSgxNik7Zm9yKGk9MCxuPTA7bjwyODtuKyspZm9yKFpHW25dPWksZT0wO2U8MTw8SEdbbl07ZSsrKVFHW2krK109bjtmb3IoUUdbaS0xXT1uLHI9MCxuPTA7bjwxNjtuKyspZm9yKCRHW25dPXIsZT0wO2U8MTw8S0dbbl07ZSsrKVhHW3IrK109bjtmb3Iocj4+PTc7bjxHRztuKyspZm9yKCRHW25dPXI8PDcsZT0wO2U8MTw8S0dbbl0tNztlKyspWEdbMjU2K3IrK109bjtmb3IodD0wO3Q8PVdHO3QrKylvW3RdPTA7Zm9yKGU9MDtlPD0xNDM7KXpHWzIqZSsxXT04LGUrKyxvWzhdKys7Zm9yKDtlPD0yNTU7KXpHWzIqZSsxXT05LGUrKyxvWzldKys7Zm9yKDtlPD0yNzk7KXpHWzIqZSsxXT03LGUrKyxvWzddKys7Zm9yKDtlPD0yODc7KXpHWzIqZSsxXT04LGUrKyxvWzhdKys7Zm9yKGxXKHpHLDI4NyxvKSxlPTA7ZTxHRztlKyspSkdbMiplKzFdPTUsSkdbMiplXT1kVyhlLDUpO3RXPW5ldyBlVyh6RyxIRywyNTcsakcsV0cpLGlXPW5ldyBlVyhKRyxLRywwLEdHLFdHKSxuVz1uZXcgZVcobmV3IEFycmF5KDApLFlHLDAsMTksNyl9KSgpLFNXPSEwKSxlLmxfZGVzYz1uZXcgclcoZS5keW5fbHRyZWUsdFcpLGUuZF9kZXNjPW5ldyByVyhlLmR5bl9kdHJlZSxpVyksZS5ibF9kZXNjPW5ldyByVyhlLmJsX3RyZWUsblcpLGUuYmlfYnVmPTAsZS5iaV92YWxpZD0wLHVXKGUpfSxDVz0oZSx0LGksbik9PntsZXQgcixvLHM9MDtlLmxldmVsPjA/KDI9PT1lLnN0cm0uZGF0YV90eXBlJiYoZS5zdHJtLmRhdGFfdHlwZT0oZT0+e2xldCB0LGk9NDA5MzYyNDQ0Nztmb3IodD0wO3Q8PTMxO3QrKyxpPj4+PTEpaWYoMSZpJiYwIT09ZS5keW5fbHRyZWVbMip0XSlyZXR1cm4gMDtpZigwIT09ZS5keW5fbHRyZWVbMThdfHwwIT09ZS5keW5fbHRyZWVbMjBdfHwwIT09ZS5keW5fbHRyZWVbMjZdKXJldHVybiAxO2Zvcih0PTMyO3Q8Qkc7dCsrKWlmKDAhPT1lLmR5bl9sdHJlZVsyKnRdKXJldHVybiAxO3JldHVybiAwfSkoZSkpLGZXKGUsZS5sX2Rlc2MpLGZXKGUsZS5kX2Rlc2MpLHM9KGU9PntsZXQgdDtmb3IobVcoZSxlLmR5bl9sdHJlZSxlLmxfZGVzYy5tYXhfY29kZSksbVcoZSxlLmR5bl9kdHJlZSxlLmRfZGVzYy5tYXhfY29kZSksZlcoZSxlLmJsX2Rlc2MpLHQ9MTg7dD49MyYmMD09PWUuYmxfdHJlZVsyKnFHW3RdKzFdO3QtLSk7cmV0dXJuIGUub3B0X2xlbis9MyoodCsxKSs1KzUrNCx0fSkoZSkscj1lLm9wdF9sZW4rMys3Pj4+MyxvPWUuc3RhdGljX2xlbiszKzc+Pj4zLG88PXImJihyPW8pKTpyPW89aSs1LGkrNDw9ciYmLTEhPT10P2dXKGUsdCxpLG4pOjQ9PT1lLnN0cmF0ZWd5fHxvPT09cj8oYVcoZSwyKyhuPzE6MCksMyksRVcoZSx6RyxKRykpOihhVyhlLDQrKG4/MTowKSwzKSwoKGUsdCxpLG4pPT57bGV0IHI7Zm9yKGFXKGUsdC0yNTcsNSksYVcoZSxpLTEsNSksYVcoZSxuLTQsNCkscj0wO3I8bjtyKyspYVcoZSxlLmJsX3RyZWVbMipxR1tyXSsxXSwzKTtUVyhlLGUuZHluX2x0cmVlLHQtMSksVFcoZSxlLmR5bl9kdHJlZSxpLTEpfSkoZSxlLmxfZGVzYy5tYXhfY29kZSsxLGUuZF9kZXNjLm1heF9jb2RlKzEscysxKSxFVyhlLGUuZHluX2x0cmVlLGUuZHluX2R0cmVlKSksdVcoZSksbiYmaFcoZSl9LElXPShlLHQsaSk9PihlLnBlbmRpbmdfYnVmW2Uuc3ltX2J1ZitlLnN5bV9uZXh0KytdPXQsZS5wZW5kaW5nX2J1ZltlLnN5bV9idWYrZS5zeW1fbmV4dCsrXT10Pj44LGUucGVuZGluZ19idWZbZS5zeW1fYnVmK2Uuc3ltX25leHQrK109aSwwPT09dD9lLmR5bl9sdHJlZVsyKmldKys6KGUubWF0Y2hlcysrLHQtLSxlLmR5bl9sdHJlZVsyKihRR1tpXStCRysxKV0rKyxlLmR5bl9kdHJlZVsyKm9XKHQpXSsrKSxlLnN5bV9uZXh0PT09ZS5zeW1fZW5kKSx2Vz1lPT57YVcoZSwyLDMpLGNXKGUsMjU2LHpHKSwoZT0+ezE2PT09ZS5iaV92YWxpZD8oc1coZSxlLmJpX2J1ZiksZS5iaV9idWY9MCxlLmJpX3ZhbGlkPTApOmUuYmlfdmFsaWQ+PTgmJihlLnBlbmRpbmdfYnVmW2UucGVuZGluZysrXT0yNTUmZS5iaV9idWYsZS5iaV9idWY+Pj04LGUuYmlfdmFsaWQtPTgpfSkoZSl9LHlXPXtfdHJfaW5pdDpSVyxfdHJfc3RvcmVkX2Jsb2NrOmdXLF90cl9mbHVzaF9ibG9jazpDVyxfdHJfdGFsbHk6SVcsX3RyX2FsaWduOnZXfTt2YXIgQVc9KGUsdCxpLG4pPT57bGV0IHI9NjU1MzUmZXwwLG89ZT4+PjE2JjY1NTM1fDAscz0wO2Zvcig7MCE9PWk7KXtzPWk+MmUzPzJlMzppLGktPXM7ZG97cj1yK3RbbisrXXwwLG89bytyfDB9d2hpbGUoLS1zKTtyJT02NTUyMSxvJT02NTUyMX1yZXR1cm4gcnxvPDwxNnwwfTtjb25zdCBiVz1uZXcgVWludDMyQXJyYXkoKCgpPT57bGV0IGUsdD1bXTtmb3IodmFyIGk9MDtpPDI1NjtpKyspe2U9aTtmb3IodmFyIG49MDtuPDg7bisrKWU9MSZlPzM5ODgyOTIzODReZT4+PjE6ZT4+PjE7dFtpXT1lfXJldHVybiB0fSkoKSk7dmFyIHdXPShlLHQsaSxuKT0+e2NvbnN0IHI9Ylcsbz1uK2k7ZV49LTE7Zm9yKGxldCBpPW47aTxvO2krKyllPWU+Pj44XnJbMjU1JihlXnRbaV0pXTtyZXR1cm4tMV5lfSxPVz17MjpcIm5lZWQgZGljdGlvbmFyeVwiLDE6XCJzdHJlYW0gZW5kXCIsMDpcIlwiLFwiLTFcIjpcImZpbGUgZXJyb3JcIixcIi0yXCI6XCJzdHJlYW0gZXJyb3JcIixcIi0zXCI6XCJkYXRhIGVycm9yXCIsXCItNFwiOlwiaW5zdWZmaWNpZW50IG1lbW9yeVwiLFwiLTVcIjpcImJ1ZmZlciBlcnJvclwiLFwiLTZcIjpcImluY29tcGF0aWJsZSB2ZXJzaW9uXCJ9LE5XPXtaX05PX0ZMVVNIOjAsWl9QQVJUSUFMX0ZMVVNIOjEsWl9TWU5DX0ZMVVNIOjIsWl9GVUxMX0ZMVVNIOjMsWl9GSU5JU0g6NCxaX0JMT0NLOjUsWl9UUkVFUzo2LFpfT0s6MCxaX1NUUkVBTV9FTkQ6MSxaX05FRURfRElDVDoyLFpfRVJSTk86LTEsWl9TVFJFQU1fRVJST1I6LTIsWl9EQVRBX0VSUk9SOi0zLFpfTUVNX0VSUk9SOi00LFpfQlVGX0VSUk9SOi01LFpfTk9fQ09NUFJFU1NJT046MCxaX0JFU1RfU1BFRUQ6MSxaX0JFU1RfQ09NUFJFU1NJT046OSxaX0RFRkFVTFRfQ09NUFJFU1NJT046LTEsWl9GSUxURVJFRDoxLFpfSFVGRk1BTl9PTkxZOjIsWl9STEU6MyxaX0ZJWEVEOjQsWl9ERUZBVUxUX1NUUkFURUdZOjAsWl9CSU5BUlk6MCxaX1RFWFQ6MSxaX1VOS05PV046MixaX0RFRkxBVEVEOjh9O2NvbnN0e190cl9pbml0OkRXLF90cl9zdG9yZWRfYmxvY2s6UFcsX3RyX2ZsdXNoX2Jsb2NrOkxXLF90cl90YWxseTprVyxfdHJfYWxpZ246TVd9PXlXLHtaX05PX0ZMVVNIOlVXLFpfUEFSVElBTF9GTFVTSDp4VyxaX0ZVTExfRkxVU0g6VlcsWl9GSU5JU0g6RlcsWl9CTE9DSzpCVyxaX09LOmpXLFpfU1RSRUFNX0VORDpHVyxaX1NUUkVBTV9FUlJPUjpXVyxaX0RBVEFfRVJST1I6SFcsWl9CVUZfRVJST1I6S1csWl9ERUZBVUxUX0NPTVBSRVNTSU9OOllXLFpfRklMVEVSRUQ6cVcsWl9IVUZGTUFOX09OTFk6elcsWl9STEU6SlcsWl9GSVhFRDpYVyxaX0RFRkFVTFRfU1RSQVRFR1k6UVcsWl9VTktOT1dOOlpXLFpfREVGTEFURUQ6JFd9PU5XLGVIPTI4Nix0SD0zMCxpSD0xOSxuSD0yKmVIKzEsckg9MTUsb0g9MjU4LHNIPTI2MixhSD00MixjSD0xMTMsZEg9NjY2LGxIPShlLHQpPT4oZS5tc2c9T1dbdF0sdCksdUg9ZT0+MiplLShlPjQ/OTowKSxoSD1lPT57bGV0IHQ9ZS5sZW5ndGg7Zm9yKDstLXQ+PTA7KWVbdF09MH0scEg9ZT0+e2xldCB0LGksbixyPWUud19zaXplO3Q9ZS5oYXNoX3NpemUsbj10O2Rve2k9ZS5oZWFkWy0tbl0sZS5oZWFkW25dPWk+PXI/aS1yOjB9d2hpbGUoLS10KTt0PXIsbj10O2Rve2k9ZS5wcmV2Wy0tbl0sZS5wcmV2W25dPWk+PXI/aS1yOjB9d2hpbGUoLS10KX07bGV0IF9IPShlLHQsaSk9Pih0PDxlLmhhc2hfc2hpZnReaSkmZS5oYXNoX21hc2s7Y29uc3QgRUg9ZT0+e2NvbnN0IHQ9ZS5zdGF0ZTtsZXQgaT10LnBlbmRpbmc7aT5lLmF2YWlsX291dCYmKGk9ZS5hdmFpbF9vdXQpLDAhPT1pJiYoZS5vdXRwdXQuc2V0KHQucGVuZGluZ19idWYuc3ViYXJyYXkodC5wZW5kaW5nX291dCx0LnBlbmRpbmdfb3V0K2kpLGUubmV4dF9vdXQpLGUubmV4dF9vdXQrPWksdC5wZW5kaW5nX291dCs9aSxlLnRvdGFsX291dCs9aSxlLmF2YWlsX291dC09aSx0LnBlbmRpbmctPWksMD09PXQucGVuZGluZyYmKHQucGVuZGluZ19vdXQ9MCkpfSxmSD0oZSx0KT0+e0xXKGUsZS5ibG9ja19zdGFydD49MD9lLmJsb2NrX3N0YXJ0Oi0xLGUuc3Ryc3RhcnQtZS5ibG9ja19zdGFydCx0KSxlLmJsb2NrX3N0YXJ0PWUuc3Ryc3RhcnQsRUgoZS5zdHJtKX0sbUg9KGUsdCk9PntlLnBlbmRpbmdfYnVmW2UucGVuZGluZysrXT10fSxUSD0oZSx0KT0+e2UucGVuZGluZ19idWZbZS5wZW5kaW5nKytdPXQ+Pj44JjI1NSxlLnBlbmRpbmdfYnVmW2UucGVuZGluZysrXT0yNTUmdH0sU0g9KGUsdCxpLG4pPT57bGV0IHI9ZS5hdmFpbF9pbjtyZXR1cm4gcj5uJiYocj1uKSwwPT09cj8wOihlLmF2YWlsX2luLT1yLHQuc2V0KGUuaW5wdXQuc3ViYXJyYXkoZS5uZXh0X2luLGUubmV4dF9pbityKSxpKSwxPT09ZS5zdGF0ZS53cmFwP2UuYWRsZXI9QVcoZS5hZGxlcix0LHIsaSk6Mj09PWUuc3RhdGUud3JhcCYmKGUuYWRsZXI9d1coZS5hZGxlcix0LHIsaSkpLGUubmV4dF9pbis9cixlLnRvdGFsX2luKz1yLHIpfSxnSD0oZSx0KT0+e2xldCBpLG4scj1lLm1heF9jaGFpbl9sZW5ndGgsbz1lLnN0cnN0YXJ0LHM9ZS5wcmV2X2xlbmd0aCxhPWUubmljZV9tYXRjaDtjb25zdCBjPWUuc3Ryc3RhcnQ+ZS53X3NpemUtc0g/ZS5zdHJzdGFydC0oZS53X3NpemUtc0gpOjAsZD1lLndpbmRvdyxsPWUud19tYXNrLHU9ZS5wcmV2LGg9ZS5zdHJzdGFydCtvSDtsZXQgcD1kW28rcy0xXSxfPWRbbytzXTtlLnByZXZfbGVuZ3RoPj1lLmdvb2RfbWF0Y2gmJihyPj49MiksYT5lLmxvb2thaGVhZCYmKGE9ZS5sb29rYWhlYWQpO2Rve2lmKGk9dCxkW2krc109PT1fJiZkW2krcy0xXT09PXAmJmRbaV09PT1kW29dJiZkWysraV09PT1kW28rMV0pe28rPTIsaSsrO2Rve313aGlsZShkWysrb109PT1kWysraV0mJmRbKytvXT09PWRbKytpXSYmZFsrK29dPT09ZFsrK2ldJiZkWysrb109PT1kWysraV0mJmRbKytvXT09PWRbKytpXSYmZFsrK29dPT09ZFsrK2ldJiZkWysrb109PT1kWysraV0mJmRbKytvXT09PWRbKytpXSYmbzxoKTtpZihuPW9ILShoLW8pLG89aC1vSCxuPnMpe2lmKGUubWF0Y2hfc3RhcnQ9dCxzPW4sbj49YSlicmVhaztwPWRbbytzLTFdLF89ZFtvK3NdfX19d2hpbGUoKHQ9dVt0JmxdKT5jJiYwIT0tLXIpO3JldHVybiBzPD1lLmxvb2thaGVhZD9zOmUubG9va2FoZWFkfSxSSD1lPT57Y29uc3QgdD1lLndfc2l6ZTtsZXQgaSxuLHI7ZG97aWYobj1lLndpbmRvd19zaXplLWUubG9va2FoZWFkLWUuc3Ryc3RhcnQsZS5zdHJzdGFydD49dCsodC1zSCkmJihlLndpbmRvdy5zZXQoZS53aW5kb3cuc3ViYXJyYXkodCx0K3QtbiksMCksZS5tYXRjaF9zdGFydC09dCxlLnN0cnN0YXJ0LT10LGUuYmxvY2tfc3RhcnQtPXQsZS5pbnNlcnQ+ZS5zdHJzdGFydCYmKGUuaW5zZXJ0PWUuc3Ryc3RhcnQpLHBIKGUpLG4rPXQpLDA9PT1lLnN0cm0uYXZhaWxfaW4pYnJlYWs7aWYoaT1TSChlLnN0cm0sZS53aW5kb3csZS5zdHJzdGFydCtlLmxvb2thaGVhZCxuKSxlLmxvb2thaGVhZCs9aSxlLmxvb2thaGVhZCtlLmluc2VydD49Mylmb3Iocj1lLnN0cnN0YXJ0LWUuaW5zZXJ0LGUuaW5zX2g9ZS53aW5kb3dbcl0sZS5pbnNfaD1fSChlLGUuaW5zX2gsZS53aW5kb3dbcisxXSk7ZS5pbnNlcnQmJihlLmluc19oPV9IKGUsZS5pbnNfaCxlLndpbmRvd1tyKzMtMV0pLGUucHJldltyJmUud19tYXNrXT1lLmhlYWRbZS5pbnNfaF0sZS5oZWFkW2UuaW5zX2hdPXIscisrLGUuaW5zZXJ0LS0sIShlLmxvb2thaGVhZCtlLmluc2VydDwzKSk7KTt9d2hpbGUoZS5sb29rYWhlYWQ8c0gmJjAhPT1lLnN0cm0uYXZhaWxfaW4pfSxDSD0oZSx0KT0+e2xldCBpLG4scixvPWUucGVuZGluZ19idWZfc2l6ZS01PmUud19zaXplP2Uud19zaXplOmUucGVuZGluZ19idWZfc2l6ZS01LHM9MCxhPWUuc3RybS5hdmFpbF9pbjtkb3tpZihpPTY1NTM1LHI9ZS5iaV92YWxpZCs0Mj4+MyxlLnN0cm0uYXZhaWxfb3V0PHIpYnJlYWs7aWYocj1lLnN0cm0uYXZhaWxfb3V0LXIsbj1lLnN0cnN0YXJ0LWUuYmxvY2tfc3RhcnQsaT5uK2Uuc3RybS5hdmFpbF9pbiYmKGk9bitlLnN0cm0uYXZhaWxfaW4pLGk+ciYmKGk9ciksaTxvJiYoMD09PWkmJnQhPT1GV3x8dD09PVVXfHxpIT09bitlLnN0cm0uYXZhaWxfaW4pKWJyZWFrO3M9dD09PUZXJiZpPT09bitlLnN0cm0uYXZhaWxfaW4/MTowLFBXKGUsMCwwLHMpLGUucGVuZGluZ19idWZbZS5wZW5kaW5nLTRdPWksZS5wZW5kaW5nX2J1ZltlLnBlbmRpbmctM109aT4+OCxlLnBlbmRpbmdfYnVmW2UucGVuZGluZy0yXT1+aSxlLnBlbmRpbmdfYnVmW2UucGVuZGluZy0xXT1+aT4+OCxFSChlLnN0cm0pLG4mJihuPmkmJihuPWkpLGUuc3RybS5vdXRwdXQuc2V0KGUud2luZG93LnN1YmFycmF5KGUuYmxvY2tfc3RhcnQsZS5ibG9ja19zdGFydCtuKSxlLnN0cm0ubmV4dF9vdXQpLGUuc3RybS5uZXh0X291dCs9bixlLnN0cm0uYXZhaWxfb3V0LT1uLGUuc3RybS50b3RhbF9vdXQrPW4sZS5ibG9ja19zdGFydCs9bixpLT1uKSxpJiYoU0goZS5zdHJtLGUuc3RybS5vdXRwdXQsZS5zdHJtLm5leHRfb3V0LGkpLGUuc3RybS5uZXh0X291dCs9aSxlLnN0cm0uYXZhaWxfb3V0LT1pLGUuc3RybS50b3RhbF9vdXQrPWkpfXdoaWxlKDA9PT1zKTtyZXR1cm4gYS09ZS5zdHJtLmF2YWlsX2luLGEmJihhPj1lLndfc2l6ZT8oZS5tYXRjaGVzPTIsZS53aW5kb3cuc2V0KGUuc3RybS5pbnB1dC5zdWJhcnJheShlLnN0cm0ubmV4dF9pbi1lLndfc2l6ZSxlLnN0cm0ubmV4dF9pbiksMCksZS5zdHJzdGFydD1lLndfc2l6ZSxlLmluc2VydD1lLnN0cnN0YXJ0KTooZS53aW5kb3dfc2l6ZS1lLnN0cnN0YXJ0PD1hJiYoZS5zdHJzdGFydC09ZS53X3NpemUsZS53aW5kb3cuc2V0KGUud2luZG93LnN1YmFycmF5KGUud19zaXplLGUud19zaXplK2Uuc3Ryc3RhcnQpLDApLGUubWF0Y2hlczwyJiZlLm1hdGNoZXMrKyxlLmluc2VydD5lLnN0cnN0YXJ0JiYoZS5pbnNlcnQ9ZS5zdHJzdGFydCkpLGUud2luZG93LnNldChlLnN0cm0uaW5wdXQuc3ViYXJyYXkoZS5zdHJtLm5leHRfaW4tYSxlLnN0cm0ubmV4dF9pbiksZS5zdHJzdGFydCksZS5zdHJzdGFydCs9YSxlLmluc2VydCs9YT5lLndfc2l6ZS1lLmluc2VydD9lLndfc2l6ZS1lLmluc2VydDphKSxlLmJsb2NrX3N0YXJ0PWUuc3Ryc3RhcnQpLGUuaGlnaF93YXRlcjxlLnN0cnN0YXJ0JiYoZS5oaWdoX3dhdGVyPWUuc3Ryc3RhcnQpLHM/NDp0IT09VVcmJnQhPT1GVyYmMD09PWUuc3RybS5hdmFpbF9pbiYmZS5zdHJzdGFydD09PWUuYmxvY2tfc3RhcnQ/Mjoocj1lLndpbmRvd19zaXplLWUuc3Ryc3RhcnQsZS5zdHJtLmF2YWlsX2luPnImJmUuYmxvY2tfc3RhcnQ+PWUud19zaXplJiYoZS5ibG9ja19zdGFydC09ZS53X3NpemUsZS5zdHJzdGFydC09ZS53X3NpemUsZS53aW5kb3cuc2V0KGUud2luZG93LnN1YmFycmF5KGUud19zaXplLGUud19zaXplK2Uuc3Ryc3RhcnQpLDApLGUubWF0Y2hlczwyJiZlLm1hdGNoZXMrKyxyKz1lLndfc2l6ZSxlLmluc2VydD5lLnN0cnN0YXJ0JiYoZS5pbnNlcnQ9ZS5zdHJzdGFydCkpLHI+ZS5zdHJtLmF2YWlsX2luJiYocj1lLnN0cm0uYXZhaWxfaW4pLHImJihTSChlLnN0cm0sZS53aW5kb3csZS5zdHJzdGFydCxyKSxlLnN0cnN0YXJ0Kz1yLGUuaW5zZXJ0Kz1yPmUud19zaXplLWUuaW5zZXJ0P2Uud19zaXplLWUuaW5zZXJ0OnIpLGUuaGlnaF93YXRlcjxlLnN0cnN0YXJ0JiYoZS5oaWdoX3dhdGVyPWUuc3Ryc3RhcnQpLHI9ZS5iaV92YWxpZCs0Mj4+MyxyPWUucGVuZGluZ19idWZfc2l6ZS1yPjY1NTM1PzY1NTM1OmUucGVuZGluZ19idWZfc2l6ZS1yLG89cj5lLndfc2l6ZT9lLndfc2l6ZTpyLG49ZS5zdHJzdGFydC1lLmJsb2NrX3N0YXJ0LChuPj1vfHwobnx8dD09PUZXKSYmdCE9PVVXJiYwPT09ZS5zdHJtLmF2YWlsX2luJiZuPD1yKSYmKGk9bj5yP3I6bixzPXQ9PT1GVyYmMD09PWUuc3RybS5hdmFpbF9pbiYmaT09PW4/MTowLFBXKGUsZS5ibG9ja19zdGFydCxpLHMpLGUuYmxvY2tfc3RhcnQrPWksRUgoZS5zdHJtKSkscz8zOjEpfSxJSD0oZSx0KT0+e2xldCBpLG47Zm9yKDs7KXtpZihlLmxvb2thaGVhZDxzSCl7aWYoUkgoZSksZS5sb29rYWhlYWQ8c0gmJnQ9PT1VVylyZXR1cm4gMTtpZigwPT09ZS5sb29rYWhlYWQpYnJlYWt9aWYoaT0wLGUubG9va2FoZWFkPj0zJiYoZS5pbnNfaD1fSChlLGUuaW5zX2gsZS53aW5kb3dbZS5zdHJzdGFydCszLTFdKSxpPWUucHJldltlLnN0cnN0YXJ0JmUud19tYXNrXT1lLmhlYWRbZS5pbnNfaF0sZS5oZWFkW2UuaW5zX2hdPWUuc3Ryc3RhcnQpLDAhPT1pJiZlLnN0cnN0YXJ0LWk8PWUud19zaXplLXNIJiYoZS5tYXRjaF9sZW5ndGg9Z0goZSxpKSksZS5tYXRjaF9sZW5ndGg+PTMpaWYobj1rVyhlLGUuc3Ryc3RhcnQtZS5tYXRjaF9zdGFydCxlLm1hdGNoX2xlbmd0aC0zKSxlLmxvb2thaGVhZC09ZS5tYXRjaF9sZW5ndGgsZS5tYXRjaF9sZW5ndGg8PWUubWF4X2xhenlfbWF0Y2gmJmUubG9va2FoZWFkPj0zKXtlLm1hdGNoX2xlbmd0aC0tO2Rve2Uuc3Ryc3RhcnQrKyxlLmluc19oPV9IKGUsZS5pbnNfaCxlLndpbmRvd1tlLnN0cnN0YXJ0KzMtMV0pLGk9ZS5wcmV2W2Uuc3Ryc3RhcnQmZS53X21hc2tdPWUuaGVhZFtlLmluc19oXSxlLmhlYWRbZS5pbnNfaF09ZS5zdHJzdGFydH13aGlsZSgwIT0tLWUubWF0Y2hfbGVuZ3RoKTtlLnN0cnN0YXJ0Kyt9ZWxzZSBlLnN0cnN0YXJ0Kz1lLm1hdGNoX2xlbmd0aCxlLm1hdGNoX2xlbmd0aD0wLGUuaW5zX2g9ZS53aW5kb3dbZS5zdHJzdGFydF0sZS5pbnNfaD1fSChlLGUuaW5zX2gsZS53aW5kb3dbZS5zdHJzdGFydCsxXSk7ZWxzZSBuPWtXKGUsMCxlLndpbmRvd1tlLnN0cnN0YXJ0XSksZS5sb29rYWhlYWQtLSxlLnN0cnN0YXJ0Kys7aWYobiYmKGZIKGUsITEpLDA9PT1lLnN0cm0uYXZhaWxfb3V0KSlyZXR1cm4gMX1yZXR1cm4gZS5pbnNlcnQ9ZS5zdHJzdGFydDwyP2Uuc3Ryc3RhcnQ6Mix0PT09Rlc/KGZIKGUsITApLDA9PT1lLnN0cm0uYXZhaWxfb3V0PzM6NCk6ZS5zeW1fbmV4dCYmKGZIKGUsITEpLDA9PT1lLnN0cm0uYXZhaWxfb3V0KT8xOjJ9LHZIPShlLHQpPT57bGV0IGksbixyO2Zvcig7Oyl7aWYoZS5sb29rYWhlYWQ8c0gpe2lmKFJIKGUpLGUubG9va2FoZWFkPHNIJiZ0PT09VVcpcmV0dXJuIDE7aWYoMD09PWUubG9va2FoZWFkKWJyZWFrfWlmKGk9MCxlLmxvb2thaGVhZD49MyYmKGUuaW5zX2g9X0goZSxlLmluc19oLGUud2luZG93W2Uuc3Ryc3RhcnQrMy0xXSksaT1lLnByZXZbZS5zdHJzdGFydCZlLndfbWFza109ZS5oZWFkW2UuaW5zX2hdLGUuaGVhZFtlLmluc19oXT1lLnN0cnN0YXJ0KSxlLnByZXZfbGVuZ3RoPWUubWF0Y2hfbGVuZ3RoLGUucHJldl9tYXRjaD1lLm1hdGNoX3N0YXJ0LGUubWF0Y2hfbGVuZ3RoPTIsMCE9PWkmJmUucHJldl9sZW5ndGg8ZS5tYXhfbGF6eV9tYXRjaCYmZS5zdHJzdGFydC1pPD1lLndfc2l6ZS1zSCYmKGUubWF0Y2hfbGVuZ3RoPWdIKGUsaSksZS5tYXRjaF9sZW5ndGg8PTUmJihlLnN0cmF0ZWd5PT09cVd8fDM9PT1lLm1hdGNoX2xlbmd0aCYmZS5zdHJzdGFydC1lLm1hdGNoX3N0YXJ0PjQwOTYpJiYoZS5tYXRjaF9sZW5ndGg9MikpLGUucHJldl9sZW5ndGg+PTMmJmUubWF0Y2hfbGVuZ3RoPD1lLnByZXZfbGVuZ3RoKXtyPWUuc3Ryc3RhcnQrZS5sb29rYWhlYWQtMyxuPWtXKGUsZS5zdHJzdGFydC0xLWUucHJldl9tYXRjaCxlLnByZXZfbGVuZ3RoLTMpLGUubG9va2FoZWFkLT1lLnByZXZfbGVuZ3RoLTEsZS5wcmV2X2xlbmd0aC09Mjtkb3srK2Uuc3Ryc3RhcnQ8PXImJihlLmluc19oPV9IKGUsZS5pbnNfaCxlLndpbmRvd1tlLnN0cnN0YXJ0KzMtMV0pLGk9ZS5wcmV2W2Uuc3Ryc3RhcnQmZS53X21hc2tdPWUuaGVhZFtlLmluc19oXSxlLmhlYWRbZS5pbnNfaF09ZS5zdHJzdGFydCl9d2hpbGUoMCE9LS1lLnByZXZfbGVuZ3RoKTtpZihlLm1hdGNoX2F2YWlsYWJsZT0wLGUubWF0Y2hfbGVuZ3RoPTIsZS5zdHJzdGFydCsrLG4mJihmSChlLCExKSwwPT09ZS5zdHJtLmF2YWlsX291dCkpcmV0dXJuIDF9ZWxzZSBpZihlLm1hdGNoX2F2YWlsYWJsZSl7aWYobj1rVyhlLDAsZS53aW5kb3dbZS5zdHJzdGFydC0xXSksbiYmZkgoZSwhMSksZS5zdHJzdGFydCsrLGUubG9va2FoZWFkLS0sMD09PWUuc3RybS5hdmFpbF9vdXQpcmV0dXJuIDF9ZWxzZSBlLm1hdGNoX2F2YWlsYWJsZT0xLGUuc3Ryc3RhcnQrKyxlLmxvb2thaGVhZC0tfXJldHVybiBlLm1hdGNoX2F2YWlsYWJsZSYmKG49a1coZSwwLGUud2luZG93W2Uuc3Ryc3RhcnQtMV0pLGUubWF0Y2hfYXZhaWxhYmxlPTApLGUuaW5zZXJ0PWUuc3Ryc3RhcnQ8Mj9lLnN0cnN0YXJ0OjIsdD09PUZXPyhmSChlLCEwKSwwPT09ZS5zdHJtLmF2YWlsX291dD8zOjQpOmUuc3ltX25leHQmJihmSChlLCExKSwwPT09ZS5zdHJtLmF2YWlsX291dCk/MToyfTtmdW5jdGlvbiB5SChlLHQsaSxuLHIpe3RoaXMuZ29vZF9sZW5ndGg9ZSx0aGlzLm1heF9sYXp5PXQsdGhpcy5uaWNlX2xlbmd0aD1pLHRoaXMubWF4X2NoYWluPW4sdGhpcy5mdW5jPXJ9Y29uc3QgQUg9W25ldyB5SCgwLDAsMCwwLENIKSxuZXcgeUgoNCw0LDgsNCxJSCksbmV3IHlIKDQsNSwxNiw4LElIKSxuZXcgeUgoNCw2LDMyLDMyLElIKSxuZXcgeUgoNCw0LDE2LDE2LHZIKSxuZXcgeUgoOCwxNiwzMiwzMix2SCksbmV3IHlIKDgsMTYsMTI4LDEyOCx2SCksbmV3IHlIKDgsMzIsMTI4LDI1Nix2SCksbmV3IHlIKDMyLDEyOCwyNTgsMTAyNCx2SCksbmV3IHlIKDMyLDI1OCwyNTgsNDA5Nix2SCldO2Z1bmN0aW9uIGJIKCl7dGhpcy5zdHJtPW51bGwsdGhpcy5zdGF0dXM9MCx0aGlzLnBlbmRpbmdfYnVmPW51bGwsdGhpcy5wZW5kaW5nX2J1Zl9zaXplPTAsdGhpcy5wZW5kaW5nX291dD0wLHRoaXMucGVuZGluZz0wLHRoaXMud3JhcD0wLHRoaXMuZ3poZWFkPW51bGwsdGhpcy5nemluZGV4PTAsdGhpcy5tZXRob2Q9JFcsdGhpcy5sYXN0X2ZsdXNoPS0xLHRoaXMud19zaXplPTAsdGhpcy53X2JpdHM9MCx0aGlzLndfbWFzaz0wLHRoaXMud2luZG93PW51bGwsdGhpcy53aW5kb3dfc2l6ZT0wLHRoaXMucHJldj1udWxsLHRoaXMuaGVhZD1udWxsLHRoaXMuaW5zX2g9MCx0aGlzLmhhc2hfc2l6ZT0wLHRoaXMuaGFzaF9iaXRzPTAsdGhpcy5oYXNoX21hc2s9MCx0aGlzLmhhc2hfc2hpZnQ9MCx0aGlzLmJsb2NrX3N0YXJ0PTAsdGhpcy5tYXRjaF9sZW5ndGg9MCx0aGlzLnByZXZfbWF0Y2g9MCx0aGlzLm1hdGNoX2F2YWlsYWJsZT0wLHRoaXMuc3Ryc3RhcnQ9MCx0aGlzLm1hdGNoX3N0YXJ0PTAsdGhpcy5sb29rYWhlYWQ9MCx0aGlzLnByZXZfbGVuZ3RoPTAsdGhpcy5tYXhfY2hhaW5fbGVuZ3RoPTAsdGhpcy5tYXhfbGF6eV9tYXRjaD0wLHRoaXMubGV2ZWw9MCx0aGlzLnN0cmF0ZWd5PTAsdGhpcy5nb29kX21hdGNoPTAsdGhpcy5uaWNlX21hdGNoPTAsdGhpcy5keW5fbHRyZWU9bmV3IFVpbnQxNkFycmF5KDIqbkgpLHRoaXMuZHluX2R0cmVlPW5ldyBVaW50MTZBcnJheSgyKigyKnRIKzEpKSx0aGlzLmJsX3RyZWU9bmV3IFVpbnQxNkFycmF5KDIqKDIqaUgrMSkpLGhIKHRoaXMuZHluX2x0cmVlKSxoSCh0aGlzLmR5bl9kdHJlZSksaEgodGhpcy5ibF90cmVlKSx0aGlzLmxfZGVzYz1udWxsLHRoaXMuZF9kZXNjPW51bGwsdGhpcy5ibF9kZXNjPW51bGwsdGhpcy5ibF9jb3VudD1uZXcgVWludDE2QXJyYXkockgrMSksdGhpcy5oZWFwPW5ldyBVaW50MTZBcnJheSgyKmVIKzEpLGhIKHRoaXMuaGVhcCksdGhpcy5oZWFwX2xlbj0wLHRoaXMuaGVhcF9tYXg9MCx0aGlzLmRlcHRoPW5ldyBVaW50MTZBcnJheSgyKmVIKzEpLGhIKHRoaXMuZGVwdGgpLHRoaXMuc3ltX2J1Zj0wLHRoaXMubGl0X2J1ZnNpemU9MCx0aGlzLnN5bV9uZXh0PTAsdGhpcy5zeW1fZW5kPTAsdGhpcy5vcHRfbGVuPTAsdGhpcy5zdGF0aWNfbGVuPTAsdGhpcy5tYXRjaGVzPTAsdGhpcy5pbnNlcnQ9MCx0aGlzLmJpX2J1Zj0wLHRoaXMuYmlfdmFsaWQ9MH1jb25zdCB3SD1lPT57aWYoIWUpcmV0dXJuIDE7Y29uc3QgdD1lLnN0YXRlO3JldHVybiF0fHx0LnN0cm0hPT1lfHx0LnN0YXR1cyE9PWFIJiY1NyE9PXQuc3RhdHVzJiY2OSE9PXQuc3RhdHVzJiY3MyE9PXQuc3RhdHVzJiY5MSE9PXQuc3RhdHVzJiYxMDMhPT10LnN0YXR1cyYmdC5zdGF0dXMhPT1jSCYmdC5zdGF0dXMhPT1kSD8xOjB9LE9IPWU9PntpZih3SChlKSlyZXR1cm4gbEgoZSxXVyk7ZS50b3RhbF9pbj1lLnRvdGFsX291dD0wLGUuZGF0YV90eXBlPVpXO2NvbnN0IHQ9ZS5zdGF0ZTtyZXR1cm4gdC5wZW5kaW5nPTAsdC5wZW5kaW5nX291dD0wLHQud3JhcDwwJiYodC53cmFwPS10LndyYXApLHQuc3RhdHVzPTI9PT10LndyYXA/NTc6dC53cmFwP2FIOmNILGUuYWRsZXI9Mj09PXQud3JhcD8wOjEsdC5sYXN0X2ZsdXNoPS0yLERXKHQpLGpXfSxOSD1lPT57Y29uc3QgdD1PSChlKTtyZXR1cm4gdD09PWpXJiYoZT0+e2Uud2luZG93X3NpemU9MiplLndfc2l6ZSxoSChlLmhlYWQpLGUubWF4X2xhenlfbWF0Y2g9QUhbZS5sZXZlbF0ubWF4X2xhenksZS5nb29kX21hdGNoPUFIW2UubGV2ZWxdLmdvb2RfbGVuZ3RoLGUubmljZV9tYXRjaD1BSFtlLmxldmVsXS5uaWNlX2xlbmd0aCxlLm1heF9jaGFpbl9sZW5ndGg9QUhbZS5sZXZlbF0ubWF4X2NoYWluLGUuc3Ryc3RhcnQ9MCxlLmJsb2NrX3N0YXJ0PTAsZS5sb29rYWhlYWQ9MCxlLmluc2VydD0wLGUubWF0Y2hfbGVuZ3RoPWUucHJldl9sZW5ndGg9MixlLm1hdGNoX2F2YWlsYWJsZT0wLGUuaW5zX2g9MH0pKGUuc3RhdGUpLHR9LERIPShlLHQsaSxuLHIsbyk9PntpZighZSlyZXR1cm4gV1c7bGV0IHM9MTtpZih0PT09WVcmJih0PTYpLG48MD8ocz0wLG49LW4pOm4+MTUmJihzPTIsbi09MTYpLHI8MXx8cj45fHxpIT09JFd8fG48OHx8bj4xNXx8dDwwfHx0Pjl8fG88MHx8bz5YV3x8OD09PW4mJjEhPT1zKXJldHVybiBsSChlLFdXKTs4PT09biYmKG49OSk7Y29uc3QgYT1uZXcgYkg7cmV0dXJuIGUuc3RhdGU9YSxhLnN0cm09ZSxhLnN0YXR1cz1hSCxhLndyYXA9cyxhLmd6aGVhZD1udWxsLGEud19iaXRzPW4sYS53X3NpemU9MTw8YS53X2JpdHMsYS53X21hc2s9YS53X3NpemUtMSxhLmhhc2hfYml0cz1yKzcsYS5oYXNoX3NpemU9MTw8YS5oYXNoX2JpdHMsYS5oYXNoX21hc2s9YS5oYXNoX3NpemUtMSxhLmhhc2hfc2hpZnQ9fn4oKGEuaGFzaF9iaXRzKzMtMSkvMyksYS53aW5kb3c9bmV3IFVpbnQ4QXJyYXkoMiphLndfc2l6ZSksYS5oZWFkPW5ldyBVaW50MTZBcnJheShhLmhhc2hfc2l6ZSksYS5wcmV2PW5ldyBVaW50MTZBcnJheShhLndfc2l6ZSksYS5saXRfYnVmc2l6ZT0xPDxyKzYsYS5wZW5kaW5nX2J1Zl9zaXplPTQqYS5saXRfYnVmc2l6ZSxhLnBlbmRpbmdfYnVmPW5ldyBVaW50OEFycmF5KGEucGVuZGluZ19idWZfc2l6ZSksYS5zeW1fYnVmPWEubGl0X2J1ZnNpemUsYS5zeW1fZW5kPTMqKGEubGl0X2J1ZnNpemUtMSksYS5sZXZlbD10LGEuc3RyYXRlZ3k9byxhLm1ldGhvZD1pLE5IKGUpfTt2YXIgUEg9KGUsdCk9PntpZih3SChlKXx8dD5CV3x8dDwwKXJldHVybiBlP2xIKGUsV1cpOldXO2NvbnN0IGk9ZS5zdGF0ZTtpZighZS5vdXRwdXR8fDAhPT1lLmF2YWlsX2luJiYhZS5pbnB1dHx8aS5zdGF0dXM9PT1kSCYmdCE9PUZXKXJldHVybiBsSChlLDA9PT1lLmF2YWlsX291dD9LVzpXVyk7Y29uc3Qgbj1pLmxhc3RfZmx1c2g7aWYoaS5sYXN0X2ZsdXNoPXQsMCE9PWkucGVuZGluZyl7aWYoRUgoZSksMD09PWUuYXZhaWxfb3V0KXJldHVybiBpLmxhc3RfZmx1c2g9LTEsald9ZWxzZSBpZigwPT09ZS5hdmFpbF9pbiYmdUgodCk8PXVIKG4pJiZ0IT09RlcpcmV0dXJuIGxIKGUsS1cpO2lmKGkuc3RhdHVzPT09ZEgmJjAhPT1lLmF2YWlsX2luKXJldHVybiBsSChlLEtXKTtpZihpLnN0YXR1cz09PWFIJiYwPT09aS53cmFwJiYoaS5zdGF0dXM9Y0gpLGkuc3RhdHVzPT09YUgpe2xldCB0PSRXKyhpLndfYml0cy04PDw0KTw8OCxuPS0xO2lmKG49aS5zdHJhdGVneT49eld8fGkubGV2ZWw8Mj8wOmkubGV2ZWw8Nj8xOjY9PT1pLmxldmVsPzI6Myx0fD1uPDw2LDAhPT1pLnN0cnN0YXJ0JiYodHw9MzIpLHQrPTMxLXQlMzEsVEgoaSx0KSwwIT09aS5zdHJzdGFydCYmKFRIKGksZS5hZGxlcj4+PjE2KSxUSChpLDY1NTM1JmUuYWRsZXIpKSxlLmFkbGVyPTEsaS5zdGF0dXM9Y0gsRUgoZSksMCE9PWkucGVuZGluZylyZXR1cm4gaS5sYXN0X2ZsdXNoPS0xLGpXfWlmKDU3PT09aS5zdGF0dXMpaWYoZS5hZGxlcj0wLG1IKGksMzEpLG1IKGksMTM5KSxtSChpLDgpLGkuZ3poZWFkKW1IKGksKGkuZ3poZWFkLnRleHQ/MTowKSsoaS5nemhlYWQuaGNyYz8yOjApKyhpLmd6aGVhZC5leHRyYT80OjApKyhpLmd6aGVhZC5uYW1lPzg6MCkrKGkuZ3poZWFkLmNvbW1lbnQ/MTY6MCkpLG1IKGksMjU1JmkuZ3poZWFkLnRpbWUpLG1IKGksaS5nemhlYWQudGltZT4+OCYyNTUpLG1IKGksaS5nemhlYWQudGltZT4+MTYmMjU1KSxtSChpLGkuZ3poZWFkLnRpbWU+PjI0JjI1NSksbUgoaSw5PT09aS5sZXZlbD8yOmkuc3RyYXRlZ3k+PXpXfHxpLmxldmVsPDI/NDowKSxtSChpLDI1NSZpLmd6aGVhZC5vcyksaS5nemhlYWQuZXh0cmEmJmkuZ3poZWFkLmV4dHJhLmxlbmd0aCYmKG1IKGksMjU1JmkuZ3poZWFkLmV4dHJhLmxlbmd0aCksbUgoaSxpLmd6aGVhZC5leHRyYS5sZW5ndGg+PjgmMjU1KSksaS5nemhlYWQuaGNyYyYmKGUuYWRsZXI9d1coZS5hZGxlcixpLnBlbmRpbmdfYnVmLGkucGVuZGluZywwKSksaS5nemluZGV4PTAsaS5zdGF0dXM9Njk7ZWxzZSBpZihtSChpLDApLG1IKGksMCksbUgoaSwwKSxtSChpLDApLG1IKGksMCksbUgoaSw5PT09aS5sZXZlbD8yOmkuc3RyYXRlZ3k+PXpXfHxpLmxldmVsPDI/NDowKSxtSChpLDMpLGkuc3RhdHVzPWNILEVIKGUpLDAhPT1pLnBlbmRpbmcpcmV0dXJuIGkubGFzdF9mbHVzaD0tMSxqVztpZig2OT09PWkuc3RhdHVzKXtpZihpLmd6aGVhZC5leHRyYSl7bGV0IHQ9aS5wZW5kaW5nLG49KDY1NTM1JmkuZ3poZWFkLmV4dHJhLmxlbmd0aCktaS5nemluZGV4O2Zvcig7aS5wZW5kaW5nK24+aS5wZW5kaW5nX2J1Zl9zaXplOyl7bGV0IHI9aS5wZW5kaW5nX2J1Zl9zaXplLWkucGVuZGluZztpZihpLnBlbmRpbmdfYnVmLnNldChpLmd6aGVhZC5leHRyYS5zdWJhcnJheShpLmd6aW5kZXgsaS5nemluZGV4K3IpLGkucGVuZGluZyksaS5wZW5kaW5nPWkucGVuZGluZ19idWZfc2l6ZSxpLmd6aGVhZC5oY3JjJiZpLnBlbmRpbmc+dCYmKGUuYWRsZXI9d1coZS5hZGxlcixpLnBlbmRpbmdfYnVmLGkucGVuZGluZy10LHQpKSxpLmd6aW5kZXgrPXIsRUgoZSksMCE9PWkucGVuZGluZylyZXR1cm4gaS5sYXN0X2ZsdXNoPS0xLGpXO3Q9MCxuLT1yfWxldCByPW5ldyBVaW50OEFycmF5KGkuZ3poZWFkLmV4dHJhKTtpLnBlbmRpbmdfYnVmLnNldChyLnN1YmFycmF5KGkuZ3ppbmRleCxpLmd6aW5kZXgrbiksaS5wZW5kaW5nKSxpLnBlbmRpbmcrPW4saS5nemhlYWQuaGNyYyYmaS5wZW5kaW5nPnQmJihlLmFkbGVyPXdXKGUuYWRsZXIsaS5wZW5kaW5nX2J1ZixpLnBlbmRpbmctdCx0KSksaS5nemluZGV4PTB9aS5zdGF0dXM9NzN9aWYoNzM9PT1pLnN0YXR1cyl7aWYoaS5nemhlYWQubmFtZSl7bGV0IHQsbj1pLnBlbmRpbmc7ZG97aWYoaS5wZW5kaW5nPT09aS5wZW5kaW5nX2J1Zl9zaXplKXtpZihpLmd6aGVhZC5oY3JjJiZpLnBlbmRpbmc+biYmKGUuYWRsZXI9d1coZS5hZGxlcixpLnBlbmRpbmdfYnVmLGkucGVuZGluZy1uLG4pKSxFSChlKSwwIT09aS5wZW5kaW5nKXJldHVybiBpLmxhc3RfZmx1c2g9LTEsalc7bj0wfXQ9aS5nemluZGV4PGkuZ3poZWFkLm5hbWUubGVuZ3RoPzI1NSZpLmd6aGVhZC5uYW1lLmNoYXJDb2RlQXQoaS5nemluZGV4KyspOjAsbUgoaSx0KX13aGlsZSgwIT09dCk7aS5nemhlYWQuaGNyYyYmaS5wZW5kaW5nPm4mJihlLmFkbGVyPXdXKGUuYWRsZXIsaS5wZW5kaW5nX2J1ZixpLnBlbmRpbmctbixuKSksaS5nemluZGV4PTB9aS5zdGF0dXM9OTF9aWYoOTE9PT1pLnN0YXR1cyl7aWYoaS5nemhlYWQuY29tbWVudCl7bGV0IHQsbj1pLnBlbmRpbmc7ZG97aWYoaS5wZW5kaW5nPT09aS5wZW5kaW5nX2J1Zl9zaXplKXtpZihpLmd6aGVhZC5oY3JjJiZpLnBlbmRpbmc+biYmKGUuYWRsZXI9d1coZS5hZGxlcixpLnBlbmRpbmdfYnVmLGkucGVuZGluZy1uLG4pKSxFSChlKSwwIT09aS5wZW5kaW5nKXJldHVybiBpLmxhc3RfZmx1c2g9LTEsalc7bj0wfXQ9aS5nemluZGV4PGkuZ3poZWFkLmNvbW1lbnQubGVuZ3RoPzI1NSZpLmd6aGVhZC5jb21tZW50LmNoYXJDb2RlQXQoaS5nemluZGV4KyspOjAsbUgoaSx0KX13aGlsZSgwIT09dCk7aS5nemhlYWQuaGNyYyYmaS5wZW5kaW5nPm4mJihlLmFkbGVyPXdXKGUuYWRsZXIsaS5wZW5kaW5nX2J1ZixpLnBlbmRpbmctbixuKSl9aS5zdGF0dXM9MTAzfWlmKDEwMz09PWkuc3RhdHVzKXtpZihpLmd6aGVhZC5oY3JjKXtpZihpLnBlbmRpbmcrMj5pLnBlbmRpbmdfYnVmX3NpemUmJihFSChlKSwwIT09aS5wZW5kaW5nKSlyZXR1cm4gaS5sYXN0X2ZsdXNoPS0xLGpXO21IKGksMjU1JmUuYWRsZXIpLG1IKGksZS5hZGxlcj4+OCYyNTUpLGUuYWRsZXI9MH1pZihpLnN0YXR1cz1jSCxFSChlKSwwIT09aS5wZW5kaW5nKXJldHVybiBpLmxhc3RfZmx1c2g9LTEsald9aWYoMCE9PWUuYXZhaWxfaW58fDAhPT1pLmxvb2thaGVhZHx8dCE9PVVXJiZpLnN0YXR1cyE9PWRIKXtsZXQgbj0wPT09aS5sZXZlbD9DSChpLHQpOmkuc3RyYXRlZ3k9PT16Vz8oKGUsdCk9PntsZXQgaTtmb3IoOzspe2lmKDA9PT1lLmxvb2thaGVhZCYmKFJIKGUpLDA9PT1lLmxvb2thaGVhZCkpe2lmKHQ9PT1VVylyZXR1cm4gMTticmVha31pZihlLm1hdGNoX2xlbmd0aD0wLGk9a1coZSwwLGUud2luZG93W2Uuc3Ryc3RhcnRdKSxlLmxvb2thaGVhZC0tLGUuc3Ryc3RhcnQrKyxpJiYoZkgoZSwhMSksMD09PWUuc3RybS5hdmFpbF9vdXQpKXJldHVybiAxfXJldHVybiBlLmluc2VydD0wLHQ9PT1GVz8oZkgoZSwhMCksMD09PWUuc3RybS5hdmFpbF9vdXQ/Mzo0KTplLnN5bV9uZXh0JiYoZkgoZSwhMSksMD09PWUuc3RybS5hdmFpbF9vdXQpPzE6Mn0pKGksdCk6aS5zdHJhdGVneT09PUpXPygoZSx0KT0+e2xldCBpLG4scixvO2NvbnN0IHM9ZS53aW5kb3c7Zm9yKDs7KXtpZihlLmxvb2thaGVhZDw9b0gpe2lmKFJIKGUpLGUubG9va2FoZWFkPD1vSCYmdD09PVVXKXJldHVybiAxO2lmKDA9PT1lLmxvb2thaGVhZClicmVha31pZihlLm1hdGNoX2xlbmd0aD0wLGUubG9va2FoZWFkPj0zJiZlLnN0cnN0YXJ0PjAmJihyPWUuc3Ryc3RhcnQtMSxuPXNbcl0sbj09PXNbKytyXSYmbj09PXNbKytyXSYmbj09PXNbKytyXSkpe289ZS5zdHJzdGFydCtvSDtkb3t9d2hpbGUobj09PXNbKytyXSYmbj09PXNbKytyXSYmbj09PXNbKytyXSYmbj09PXNbKytyXSYmbj09PXNbKytyXSYmbj09PXNbKytyXSYmbj09PXNbKytyXSYmbj09PXNbKytyXSYmcjxvKTtlLm1hdGNoX2xlbmd0aD1vSC0oby1yKSxlLm1hdGNoX2xlbmd0aD5lLmxvb2thaGVhZCYmKGUubWF0Y2hfbGVuZ3RoPWUubG9va2FoZWFkKX1pZihlLm1hdGNoX2xlbmd0aD49Mz8oaT1rVyhlLDEsZS5tYXRjaF9sZW5ndGgtMyksZS5sb29rYWhlYWQtPWUubWF0Y2hfbGVuZ3RoLGUuc3Ryc3RhcnQrPWUubWF0Y2hfbGVuZ3RoLGUubWF0Y2hfbGVuZ3RoPTApOihpPWtXKGUsMCxlLndpbmRvd1tlLnN0cnN0YXJ0XSksZS5sb29rYWhlYWQtLSxlLnN0cnN0YXJ0KyspLGkmJihmSChlLCExKSwwPT09ZS5zdHJtLmF2YWlsX291dCkpcmV0dXJuIDF9cmV0dXJuIGUuaW5zZXJ0PTAsdD09PUZXPyhmSChlLCEwKSwwPT09ZS5zdHJtLmF2YWlsX291dD8zOjQpOmUuc3ltX25leHQmJihmSChlLCExKSwwPT09ZS5zdHJtLmF2YWlsX291dCk/MToyfSkoaSx0KTpBSFtpLmxldmVsXS5mdW5jKGksdCk7aWYoMyE9PW4mJjQhPT1ufHwoaS5zdGF0dXM9ZEgpLDE9PT1ufHwzPT09bilyZXR1cm4gMD09PWUuYXZhaWxfb3V0JiYoaS5sYXN0X2ZsdXNoPS0xKSxqVztpZigyPT09biYmKHQ9PT14Vz9NVyhpKTp0IT09QlcmJihQVyhpLDAsMCwhMSksdD09PVZXJiYoaEgoaS5oZWFkKSwwPT09aS5sb29rYWhlYWQmJihpLnN0cnN0YXJ0PTAsaS5ibG9ja19zdGFydD0wLGkuaW5zZXJ0PTApKSksRUgoZSksMD09PWUuYXZhaWxfb3V0KSlyZXR1cm4gaS5sYXN0X2ZsdXNoPS0xLGpXfXJldHVybiB0IT09Rlc/alc6aS53cmFwPD0wP0dXOigyPT09aS53cmFwPyhtSChpLDI1NSZlLmFkbGVyKSxtSChpLGUuYWRsZXI+PjgmMjU1KSxtSChpLGUuYWRsZXI+PjE2JjI1NSksbUgoaSxlLmFkbGVyPj4yNCYyNTUpLG1IKGksMjU1JmUudG90YWxfaW4pLG1IKGksZS50b3RhbF9pbj4+OCYyNTUpLG1IKGksZS50b3RhbF9pbj4+MTYmMjU1KSxtSChpLGUudG90YWxfaW4+PjI0JjI1NSkpOihUSChpLGUuYWRsZXI+Pj4xNiksVEgoaSw2NTUzNSZlLmFkbGVyKSksRUgoZSksaS53cmFwPjAmJihpLndyYXA9LWkud3JhcCksMCE9PWkucGVuZGluZz9qVzpHVyl9LExIPShlLHQpPT57bGV0IGk9dC5sZW5ndGg7aWYod0goZSkpcmV0dXJuIFdXO2NvbnN0IG49ZS5zdGF0ZSxyPW4ud3JhcDtpZigyPT09cnx8MT09PXImJm4uc3RhdHVzIT09YUh8fG4ubG9va2FoZWFkKXJldHVybiBXVztpZigxPT09ciYmKGUuYWRsZXI9QVcoZS5hZGxlcix0LGksMCkpLG4ud3JhcD0wLGk+PW4ud19zaXplKXswPT09ciYmKGhIKG4uaGVhZCksbi5zdHJzdGFydD0wLG4uYmxvY2tfc3RhcnQ9MCxuLmluc2VydD0wKTtsZXQgZT1uZXcgVWludDhBcnJheShuLndfc2l6ZSk7ZS5zZXQodC5zdWJhcnJheShpLW4ud19zaXplLGkpLDApLHQ9ZSxpPW4ud19zaXplfWNvbnN0IG89ZS5hdmFpbF9pbixzPWUubmV4dF9pbixhPWUuaW5wdXQ7Zm9yKGUuYXZhaWxfaW49aSxlLm5leHRfaW49MCxlLmlucHV0PXQsUkgobik7bi5sb29rYWhlYWQ+PTM7KXtsZXQgZT1uLnN0cnN0YXJ0LHQ9bi5sb29rYWhlYWQtMjtkb3tuLmluc19oPV9IKG4sbi5pbnNfaCxuLndpbmRvd1tlKzMtMV0pLG4ucHJldltlJm4ud19tYXNrXT1uLmhlYWRbbi5pbnNfaF0sbi5oZWFkW24uaW5zX2hdPWUsZSsrfXdoaWxlKC0tdCk7bi5zdHJzdGFydD1lLG4ubG9va2FoZWFkPTIsUkgobil9cmV0dXJuIG4uc3Ryc3RhcnQrPW4ubG9va2FoZWFkLG4uYmxvY2tfc3RhcnQ9bi5zdHJzdGFydCxuLmluc2VydD1uLmxvb2thaGVhZCxuLmxvb2thaGVhZD0wLG4ubWF0Y2hfbGVuZ3RoPW4ucHJldl9sZW5ndGg9MixuLm1hdGNoX2F2YWlsYWJsZT0wLGUubmV4dF9pbj1zLGUuaW5wdXQ9YSxlLmF2YWlsX2luPW8sbi53cmFwPXIsald9LGtIPXtkZWZsYXRlSW5pdDooZSx0KT0+REgoZSx0LCRXLDE1LDgsUVcpLGRlZmxhdGVJbml0MjpESCxkZWZsYXRlUmVzZXQ6TkgsZGVmbGF0ZVJlc2V0S2VlcDpPSCxkZWZsYXRlU2V0SGVhZGVyOihlLHQpPT53SChlKXx8MiE9PWUuc3RhdGUud3JhcD9XVzooZS5zdGF0ZS5nemhlYWQ9dCxqVyksZGVmbGF0ZTpQSCxkZWZsYXRlRW5kOmU9PntpZih3SChlKSlyZXR1cm4gV1c7Y29uc3QgdD1lLnN0YXRlLnN0YXR1cztyZXR1cm4gZS5zdGF0ZT1udWxsLHQ9PT1jSD9sSChlLEhXKTpqV30sZGVmbGF0ZVNldERpY3Rpb25hcnk6TEgsZGVmbGF0ZUluZm86XCJwYWtvIGRlZmxhdGUgKGZyb20gTm9kZWNhIHByb2plY3QpXCJ9O2NvbnN0IE1IPShlLHQpPT5PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KTt2YXIgVUg9e2Fzc2lnbjpmdW5jdGlvbihlKXtjb25zdCB0PUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtmb3IoO3QubGVuZ3RoOyl7Y29uc3QgaT10LnNoaWZ0KCk7aWYoaSl7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGkpdGhyb3cgbmV3IFR5cGVFcnJvcihpK1wibXVzdCBiZSBub24tb2JqZWN0XCIpO2Zvcihjb25zdCB0IGluIGkpTUgoaSx0KSYmKGVbdF09aVt0XSl9fXJldHVybiBlfSxmbGF0dGVuQ2h1bmtzOmU9PntsZXQgdD0wO2ZvcihsZXQgaT0wLG49ZS5sZW5ndGg7aTxuO2krKyl0Kz1lW2ldLmxlbmd0aDtjb25zdCBpPW5ldyBVaW50OEFycmF5KHQpO2ZvcihsZXQgdD0wLG49MCxyPWUubGVuZ3RoO3Q8cjt0Kyspe2xldCByPWVbdF07aS5zZXQocixuKSxuKz1yLmxlbmd0aH1yZXR1cm4gaX19O2xldCB4SD0hMDt0cnl7U3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLG5ldyBVaW50OEFycmF5KDEpKX1jYXRjaChlKXt4SD0hMX1jb25zdCBWSD1uZXcgVWludDhBcnJheSgyNTYpO2ZvcihsZXQgZT0wO2U8MjU2O2UrKylWSFtlXT1lPj0yNTI/NjplPj0yNDg/NTplPj0yNDA/NDplPj0yMjQ/MzplPj0xOTI/MjoxO1ZIWzI1NF09VkhbMjU0XT0xO3ZhciBGSD17c3RyaW5nMmJ1ZjplPT57aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgVGV4dEVuY29kZXImJlRleHRFbmNvZGVyLnByb3RvdHlwZS5lbmNvZGUpcmV0dXJuKG5ldyBUZXh0RW5jb2RlcikuZW5jb2RlKGUpO2xldCB0LGksbixyLG8scz1lLmxlbmd0aCxhPTA7Zm9yKHI9MDtyPHM7cisrKWk9ZS5jaGFyQ29kZUF0KHIpLDU1Mjk2PT0oNjQ1MTImaSkmJnIrMTxzJiYobj1lLmNoYXJDb2RlQXQocisxKSw1NjMyMD09KDY0NTEyJm4pJiYoaT02NTUzNisoaS01NTI5Njw8MTApKyhuLTU2MzIwKSxyKyspKSxhKz1pPDEyOD8xOmk8MjA0OD8yOmk8NjU1MzY/Mzo0O2Zvcih0PW5ldyBVaW50OEFycmF5KGEpLG89MCxyPTA7bzxhO3IrKylpPWUuY2hhckNvZGVBdChyKSw1NTI5Nj09KDY0NTEyJmkpJiZyKzE8cyYmKG49ZS5jaGFyQ29kZUF0KHIrMSksNTYzMjA9PSg2NDUxMiZuKSYmKGk9NjU1MzYrKGktNTUyOTY8PDEwKSsobi01NjMyMCkscisrKSksaTwxMjg/dFtvKytdPWk6aTwyMDQ4Pyh0W28rK109MTkyfGk+Pj42LHRbbysrXT0xMjh8NjMmaSk6aTw2NTUzNj8odFtvKytdPTIyNHxpPj4+MTIsdFtvKytdPTEyOHxpPj4+NiY2Myx0W28rK109MTI4fDYzJmkpOih0W28rK109MjQwfGk+Pj4xOCx0W28rK109MTI4fGk+Pj4xMiY2Myx0W28rK109MTI4fGk+Pj42JjYzLHRbbysrXT0xMjh8NjMmaSk7cmV0dXJuIHR9LGJ1ZjJzdHJpbmc6KGUsdCk9Pntjb25zdCBpPXR8fGUubGVuZ3RoO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIFRleHREZWNvZGVyJiZUZXh0RGVjb2Rlci5wcm90b3R5cGUuZGVjb2RlKXJldHVybihuZXcgVGV4dERlY29kZXIpLmRlY29kZShlLnN1YmFycmF5KDAsdCkpO2xldCBuLHI7Y29uc3Qgbz1uZXcgQXJyYXkoMippKTtmb3Iocj0wLG49MDtuPGk7KXtsZXQgdD1lW24rK107aWYodDwxMjgpe29bcisrXT10O2NvbnRpbnVlfWxldCBzPVZIW3RdO2lmKHM+NClvW3IrK109NjU1MzMsbis9cy0xO2Vsc2V7Zm9yKHQmPTI9PT1zPzMxOjM9PT1zPzE1Ojc7cz4xJiZuPGk7KXQ9dDw8Nnw2MyZlW24rK10scy0tO3M+MT9vW3IrK109NjU1MzM6dDw2NTUzNj9vW3IrK109dDoodC09NjU1MzYsb1tyKytdPTU1Mjk2fHQ+PjEwJjEwMjMsb1tyKytdPTU2MzIwfDEwMjMmdCl9fXJldHVybigoZSx0KT0+e2lmKHQ8NjU1MzQmJmUuc3ViYXJyYXkmJnhIKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsZS5sZW5ndGg9PT10P2U6ZS5zdWJhcnJheSgwLHQpKTtsZXQgaT1cIlwiO2ZvcihsZXQgbj0wO248dDtuKyspaSs9U3RyaW5nLmZyb21DaGFyQ29kZShlW25dKTtyZXR1cm4gaX0pKG8scil9LHV0Zjhib3JkZXI6KGUsdCk9PnsodD10fHxlLmxlbmd0aCk+ZS5sZW5ndGgmJih0PWUubGVuZ3RoKTtsZXQgaT10LTE7Zm9yKDtpPj0wJiYxMjg9PSgxOTImZVtpXSk7KWktLTtyZXR1cm4gaTwwfHwwPT09aT90OmkrVkhbZVtpXV0+dD9pOnR9fTt2YXIgQkg9ZnVuY3Rpb24oKXt0aGlzLmlucHV0PW51bGwsdGhpcy5uZXh0X2luPTAsdGhpcy5hdmFpbF9pbj0wLHRoaXMudG90YWxfaW49MCx0aGlzLm91dHB1dD1udWxsLHRoaXMubmV4dF9vdXQ9MCx0aGlzLmF2YWlsX291dD0wLHRoaXMudG90YWxfb3V0PTAsdGhpcy5tc2c9XCJcIix0aGlzLnN0YXRlPW51bGwsdGhpcy5kYXRhX3R5cGU9Mix0aGlzLmFkbGVyPTB9O2NvbnN0IGpIPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcse1pfTk9fRkxVU0g6R0gsWl9TWU5DX0ZMVVNIOldILFpfRlVMTF9GTFVTSDpISCxaX0ZJTklTSDpLSCxaX09LOllILFpfU1RSRUFNX0VORDpxSCxaX0RFRkFVTFRfQ09NUFJFU1NJT046ekgsWl9ERUZBVUxUX1NUUkFURUdZOkpILFpfREVGTEFURUQ6WEh9PU5XO2Z1bmN0aW9uIFFIKGUpe3RoaXMub3B0aW9ucz1VSC5hc3NpZ24oe2xldmVsOnpILG1ldGhvZDpYSCxjaHVua1NpemU6MTYzODQsd2luZG93Qml0czoxNSxtZW1MZXZlbDo4LHN0cmF0ZWd5OkpIfSxlfHx7fSk7bGV0IHQ9dGhpcy5vcHRpb25zO3QucmF3JiZ0LndpbmRvd0JpdHM+MD90LndpbmRvd0JpdHM9LXQud2luZG93Qml0czp0Lmd6aXAmJnQud2luZG93Qml0cz4wJiZ0LndpbmRvd0JpdHM8MTYmJih0LndpbmRvd0JpdHMrPTE2KSx0aGlzLmVycj0wLHRoaXMubXNnPVwiXCIsdGhpcy5lbmRlZD0hMSx0aGlzLmNodW5rcz1bXSx0aGlzLnN0cm09bmV3IEJILHRoaXMuc3RybS5hdmFpbF9vdXQ9MDtsZXQgaT1rSC5kZWZsYXRlSW5pdDIodGhpcy5zdHJtLHQubGV2ZWwsdC5tZXRob2QsdC53aW5kb3dCaXRzLHQubWVtTGV2ZWwsdC5zdHJhdGVneSk7aWYoaSE9PVlIKXRocm93IG5ldyBFcnJvcihPV1tpXSk7aWYodC5oZWFkZXImJmtILmRlZmxhdGVTZXRIZWFkZXIodGhpcy5zdHJtLHQuaGVhZGVyKSx0LmRpY3Rpb25hcnkpe2xldCBlO2lmKGU9XCJzdHJpbmdcIj09dHlwZW9mIHQuZGljdGlvbmFyeT9GSC5zdHJpbmcyYnVmKHQuZGljdGlvbmFyeSk6XCJbb2JqZWN0IEFycmF5QnVmZmVyXVwiPT09akguY2FsbCh0LmRpY3Rpb25hcnkpP25ldyBVaW50OEFycmF5KHQuZGljdGlvbmFyeSk6dC5kaWN0aW9uYXJ5LGk9a0guZGVmbGF0ZVNldERpY3Rpb25hcnkodGhpcy5zdHJtLGUpLGkhPT1ZSCl0aHJvdyBuZXcgRXJyb3IoT1dbaV0pO3RoaXMuX2RpY3Rfc2V0PSEwfX1mdW5jdGlvbiBaSChlLHQpe2NvbnN0IGk9bmV3IFFIKHQpO2lmKGkucHVzaChlLCEwKSxpLmVycil0aHJvdyBpLm1zZ3x8T1dbaS5lcnJdO3JldHVybiBpLnJlc3VsdH1RSC5wcm90b3R5cGUucHVzaD1mdW5jdGlvbihlLHQpe2NvbnN0IGk9dGhpcy5zdHJtLG49dGhpcy5vcHRpb25zLmNodW5rU2l6ZTtsZXQgcixvO2lmKHRoaXMuZW5kZWQpcmV0dXJuITE7Zm9yKG89dD09PX5+dD90OiEwPT09dD9LSDpHSCxcInN0cmluZ1wiPT10eXBlb2YgZT9pLmlucHV0PUZILnN0cmluZzJidWYoZSk6XCJbb2JqZWN0IEFycmF5QnVmZmVyXVwiPT09akguY2FsbChlKT9pLmlucHV0PW5ldyBVaW50OEFycmF5KGUpOmkuaW5wdXQ9ZSxpLm5leHRfaW49MCxpLmF2YWlsX2luPWkuaW5wdXQubGVuZ3RoOzspaWYoMD09PWkuYXZhaWxfb3V0JiYoaS5vdXRwdXQ9bmV3IFVpbnQ4QXJyYXkobiksaS5uZXh0X291dD0wLGkuYXZhaWxfb3V0PW4pLChvPT09V0h8fG89PT1ISCkmJmkuYXZhaWxfb3V0PD02KXRoaXMub25EYXRhKGkub3V0cHV0LnN1YmFycmF5KDAsaS5uZXh0X291dCkpLGkuYXZhaWxfb3V0PTA7ZWxzZXtpZihyPWtILmRlZmxhdGUoaSxvKSxyPT09cUgpcmV0dXJuIGkubmV4dF9vdXQ+MCYmdGhpcy5vbkRhdGEoaS5vdXRwdXQuc3ViYXJyYXkoMCxpLm5leHRfb3V0KSkscj1rSC5kZWZsYXRlRW5kKHRoaXMuc3RybSksdGhpcy5vbkVuZChyKSx0aGlzLmVuZGVkPSEwLHI9PT1ZSDtpZigwIT09aS5hdmFpbF9vdXQpe2lmKG8+MCYmaS5uZXh0X291dD4wKXRoaXMub25EYXRhKGkub3V0cHV0LnN1YmFycmF5KDAsaS5uZXh0X291dCkpLGkuYXZhaWxfb3V0PTA7ZWxzZSBpZigwPT09aS5hdmFpbF9pbilicmVha31lbHNlIHRoaXMub25EYXRhKGkub3V0cHV0KX1yZXR1cm4hMH0sUUgucHJvdG90eXBlLm9uRGF0YT1mdW5jdGlvbihlKXt0aGlzLmNodW5rcy5wdXNoKGUpfSxRSC5wcm90b3R5cGUub25FbmQ9ZnVuY3Rpb24oZSl7ZT09PVlIJiYodGhpcy5yZXN1bHQ9VUguZmxhdHRlbkNodW5rcyh0aGlzLmNodW5rcykpLHRoaXMuY2h1bmtzPVtdLHRoaXMuZXJyPWUsdGhpcy5tc2c9dGhpcy5zdHJtLm1zZ307dmFyICRIPXtEZWZsYXRlOlFILGRlZmxhdGU6WkgsZGVmbGF0ZVJhdzpmdW5jdGlvbihlLHQpe3JldHVybih0PXR8fHt9KS5yYXc9ITAsWkgoZSx0KX0sZ3ppcDpmdW5jdGlvbihlLHQpe3JldHVybih0PXR8fHt9KS5nemlwPSEwLFpIKGUsdCl9LGNvbnN0YW50czpOV307Y29uc3QgZUs9MTYyMDk7dmFyIHRLPWZ1bmN0aW9uKGUsdCl7bGV0IGksbixyLG8scyxhLGMsZCxsLHUsaCxwLF8sRSxmLG0sVCxTLGcsUixDLEksdix5O2NvbnN0IEE9ZS5zdGF0ZTtpPWUubmV4dF9pbix2PWUuaW5wdXQsbj1pKyhlLmF2YWlsX2luLTUpLHI9ZS5uZXh0X291dCx5PWUub3V0cHV0LG89ci0odC1lLmF2YWlsX291dCkscz1yKyhlLmF2YWlsX291dC0yNTcpLGE9QS5kbWF4LGM9QS53c2l6ZSxkPUEud2hhdmUsbD1BLnduZXh0LHU9QS53aW5kb3csaD1BLmhvbGQscD1BLmJpdHMsXz1BLmxlbmNvZGUsRT1BLmRpc3Rjb2RlLGY9KDE8PEEubGVuYml0cyktMSxtPSgxPDxBLmRpc3RiaXRzKS0xO2U6ZG97cDwxNSYmKGgrPXZbaSsrXTw8cCxwKz04LGgrPXZbaSsrXTw8cCxwKz04KSxUPV9baCZmXTt0OmZvcig7Oyl7aWYoUz1UPj4+MjQsaD4+Pj1TLHAtPVMsUz1UPj4+MTYmMjU1LDA9PT1TKXlbcisrXT02NTUzNSZUO2Vsc2V7aWYoISgxNiZTKSl7aWYoMD09KDY0JlMpKXtUPV9bKDY1NTM1JlQpKyhoJigxPDxTKS0xKV07Y29udGludWUgdH1pZigzMiZTKXtBLm1vZGU9MTYxOTE7YnJlYWsgZX1lLm1zZz1cImludmFsaWQgbGl0ZXJhbC9sZW5ndGggY29kZVwiLEEubW9kZT1lSzticmVhayBlfWc9NjU1MzUmVCxTJj0xNSxTJiYocDxTJiYoaCs9dltpKytdPDxwLHArPTgpLGcrPWgmKDE8PFMpLTEsaD4+Pj1TLHAtPVMpLHA8MTUmJihoKz12W2krK108PHAscCs9OCxoKz12W2krK108PHAscCs9OCksVD1FW2gmbV07aTpmb3IoOzspe2lmKFM9VD4+PjI0LGg+Pj49UyxwLT1TLFM9VD4+PjE2JjI1NSwhKDE2JlMpKXtpZigwPT0oNjQmUykpe1Q9RVsoNjU1MzUmVCkrKGgmKDE8PFMpLTEpXTtjb250aW51ZSBpfWUubXNnPVwiaW52YWxpZCBkaXN0YW5jZSBjb2RlXCIsQS5tb2RlPWVLO2JyZWFrIGV9aWYoUj02NTUzNSZULFMmPTE1LHA8UyYmKGgrPXZbaSsrXTw8cCxwKz04LHA8UyYmKGgrPXZbaSsrXTw8cCxwKz04KSksUis9aCYoMTw8UyktMSxSPmEpe2UubXNnPVwiaW52YWxpZCBkaXN0YW5jZSB0b28gZmFyIGJhY2tcIixBLm1vZGU9ZUs7YnJlYWsgZX1pZihoPj4+PVMscC09UyxTPXItbyxSPlMpe2lmKFM9Ui1TLFM+ZCYmQS5zYW5lKXtlLm1zZz1cImludmFsaWQgZGlzdGFuY2UgdG9vIGZhciBiYWNrXCIsQS5tb2RlPWVLO2JyZWFrIGV9aWYoQz0wLEk9dSwwPT09bCl7aWYoQys9Yy1TLFM8Zyl7Zy09Uztkb3t5W3IrK109dVtDKytdfXdoaWxlKC0tUyk7Qz1yLVIsST15fX1lbHNlIGlmKGw8Uyl7aWYoQys9YytsLVMsUy09bCxTPGcpe2ctPVM7ZG97eVtyKytdPXVbQysrXX13aGlsZSgtLVMpO2lmKEM9MCxsPGcpe1M9bCxnLT1TO2Rve3lbcisrXT11W0MrK119d2hpbGUoLS1TKTtDPXItUixJPXl9fX1lbHNlIGlmKEMrPWwtUyxTPGcpe2ctPVM7ZG97eVtyKytdPXVbQysrXX13aGlsZSgtLVMpO0M9ci1SLEk9eX1mb3IoO2c+MjspeVtyKytdPUlbQysrXSx5W3IrK109SVtDKytdLHlbcisrXT1JW0MrK10sZy09MztnJiYoeVtyKytdPUlbQysrXSxnPjEmJih5W3IrK109SVtDKytdKSl9ZWxzZXtDPXItUjtkb3t5W3IrK109eVtDKytdLHlbcisrXT15W0MrK10seVtyKytdPXlbQysrXSxnLT0zfXdoaWxlKGc+Mik7ZyYmKHlbcisrXT15W0MrK10sZz4xJiYoeVtyKytdPXlbQysrXSkpfWJyZWFrfX1icmVha319d2hpbGUoaTxuJiZyPHMpO2c9cD4+MyxpLT1nLHAtPWc8PDMsaCY9KDE8PHApLTEsZS5uZXh0X2luPWksZS5uZXh0X291dD1yLGUuYXZhaWxfaW49aTxuP24taSs1OjUtKGktbiksZS5hdmFpbF9vdXQ9cjxzP3MtcisyNTc6MjU3LShyLXMpLEEuaG9sZD1oLEEuYml0cz1wfTtjb25zdCBpSz0xNSxuSz1uZXcgVWludDE2QXJyYXkoWzMsNCw1LDYsNyw4LDksMTAsMTEsMTMsMTUsMTcsMTksMjMsMjcsMzEsMzUsNDMsNTEsNTksNjcsODMsOTksMTE1LDEzMSwxNjMsMTk1LDIyNywyNTgsMCwwXSkscks9bmV3IFVpbnQ4QXJyYXkoWzE2LDE2LDE2LDE2LDE2LDE2LDE2LDE2LDE3LDE3LDE3LDE3LDE4LDE4LDE4LDE4LDE5LDE5LDE5LDE5LDIwLDIwLDIwLDIwLDIxLDIxLDIxLDIxLDE2LDcyLDc4XSksb0s9bmV3IFVpbnQxNkFycmF5KFsxLDIsMyw0LDUsNyw5LDEzLDE3LDI1LDMzLDQ5LDY1LDk3LDEyOSwxOTMsMjU3LDM4NSw1MTMsNzY5LDEwMjUsMTUzNywyMDQ5LDMwNzMsNDA5Nyw2MTQ1LDgxOTMsMTIyODksMTYzODUsMjQ1NzcsMCwwXSksc0s9bmV3IFVpbnQ4QXJyYXkoWzE2LDE2LDE2LDE2LDE3LDE3LDE4LDE4LDE5LDE5LDIwLDIwLDIxLDIxLDIyLDIyLDIzLDIzLDI0LDI0LDI1LDI1LDI2LDI2LDI3LDI3LDI4LDI4LDI5LDI5LDY0LDY0XSk7dmFyIGFLPShlLHQsaSxuLHIsbyxzLGEpPT57Y29uc3QgYz1hLmJpdHM7bGV0IGQsbCx1LGgscCxfLEU9MCxmPTAsbT0wLFQ9MCxTPTAsZz0wLFI9MCxDPTAsST0wLHY9MCx5PW51bGw7Y29uc3QgQT1uZXcgVWludDE2QXJyYXkoMTYpLGI9bmV3IFVpbnQxNkFycmF5KDE2KTtsZXQgdyxPLE4sRD1udWxsO2ZvcihFPTA7RTw9aUs7RSsrKUFbRV09MDtmb3IoZj0wO2Y8bjtmKyspQVt0W2krZl1dKys7Zm9yKFM9YyxUPWlLO1Q+PTEmJjA9PT1BW1RdO1QtLSk7aWYoUz5UJiYoUz1UKSwwPT09VClyZXR1cm4gcltvKytdPTIwOTcxNTIwLHJbbysrXT0yMDk3MTUyMCxhLmJpdHM9MSwwO2ZvcihtPTE7bTxUJiYwPT09QVttXTttKyspO2ZvcihTPG0mJihTPW0pLEM9MSxFPTE7RTw9aUs7RSsrKWlmKEM8PD0xLEMtPUFbRV0sQzwwKXJldHVybi0xO2lmKEM+MCYmKDA9PT1lfHwxIT09VCkpcmV0dXJuLTE7Zm9yKGJbMV09MCxFPTE7RTxpSztFKyspYltFKzFdPWJbRV0rQVtFXTtmb3IoZj0wO2Y8bjtmKyspMCE9PXRbaStmXSYmKHNbYlt0W2krZl1dKytdPWYpO2lmKDA9PT1lPyh5PUQ9cyxfPTIwKToxPT09ZT8oeT1uSyxEPXJLLF89MjU3KTooeT1vSyxEPXNLLF89MCksdj0wLGY9MCxFPW0scD1vLGc9UyxSPTAsdT0tMSxJPTE8PFMsaD1JLTEsMT09PWUmJkk+ODUyfHwyPT09ZSYmST41OTIpcmV0dXJuIDE7Zm9yKDs7KXt3PUUtUixzW2ZdKzE8Xz8oTz0wLE49c1tmXSk6c1tmXT49Xz8oTz1EW3NbZl0tX10sTj15W3NbZl0tX10pOihPPTk2LE49MCksZD0xPDxFLVIsbD0xPDxnLG09bDtkb3tsLT1kLHJbcCsodj4+UikrbF09dzw8MjR8Tzw8MTZ8TnwwfXdoaWxlKDAhPT1sKTtmb3IoZD0xPDxFLTE7diZkOylkPj49MTtpZigwIT09ZD8odiY9ZC0xLHYrPWQpOnY9MCxmKyssMD09LS1BW0VdKXtpZihFPT09VClicmVhaztFPXRbaStzW2ZdXX1pZihFPlMmJih2JmgpIT09dSl7Zm9yKDA9PT1SJiYoUj1TKSxwKz1tLGc9RS1SLEM9MTw8ZztnK1I8VCYmKEMtPUFbZytSXSwhKEM8PTApKTspZysrLEM8PD0xO2lmKEkrPTE8PGcsMT09PWUmJkk+ODUyfHwyPT09ZSYmST41OTIpcmV0dXJuIDE7dT12Jmgsclt1XT1TPDwyNHxnPDwxNnxwLW98MH19cmV0dXJuIDAhPT12JiYocltwK3ZdPUUtUjw8MjR8NjQ8PDE2fDApLGEuYml0cz1TLDB9O2NvbnN0e1pfRklOSVNIOmNLLFpfQkxPQ0s6ZEssWl9UUkVFUzpsSyxaX09LOnVLLFpfU1RSRUFNX0VORDpoSyxaX05FRURfRElDVDpwSyxaX1NUUkVBTV9FUlJPUjpfSyxaX0RBVEFfRVJST1I6RUssWl9NRU1fRVJST1I6ZkssWl9CVUZfRVJST1I6bUssWl9ERUZMQVRFRDpUS309TlcsU0s9MTYxODAsZ0s9MTYxOTAsUks9MTYxOTEsQ0s9MTYxOTIsSUs9MTYxOTQsdks9MTYxOTkseUs9MTYyMDAsQUs9MTYyMDYsYks9MTYyMDksd0s9ZT0+KGU+Pj4yNCYyNTUpKyhlPj4+OCY2NTI4MCkrKCg2NTI4MCZlKTw8OCkrKCgyNTUmZSk8PDI0KTtmdW5jdGlvbiBPSygpe3RoaXMuc3RybT1udWxsLHRoaXMubW9kZT0wLHRoaXMubGFzdD0hMSx0aGlzLndyYXA9MCx0aGlzLmhhdmVkaWN0PSExLHRoaXMuZmxhZ3M9MCx0aGlzLmRtYXg9MCx0aGlzLmNoZWNrPTAsdGhpcy50b3RhbD0wLHRoaXMuaGVhZD1udWxsLHRoaXMud2JpdHM9MCx0aGlzLndzaXplPTAsdGhpcy53aGF2ZT0wLHRoaXMud25leHQ9MCx0aGlzLndpbmRvdz1udWxsLHRoaXMuaG9sZD0wLHRoaXMuYml0cz0wLHRoaXMubGVuZ3RoPTAsdGhpcy5vZmZzZXQ9MCx0aGlzLmV4dHJhPTAsdGhpcy5sZW5jb2RlPW51bGwsdGhpcy5kaXN0Y29kZT1udWxsLHRoaXMubGVuYml0cz0wLHRoaXMuZGlzdGJpdHM9MCx0aGlzLm5jb2RlPTAsdGhpcy5ubGVuPTAsdGhpcy5uZGlzdD0wLHRoaXMuaGF2ZT0wLHRoaXMubmV4dD1udWxsLHRoaXMubGVucz1uZXcgVWludDE2QXJyYXkoMzIwKSx0aGlzLndvcms9bmV3IFVpbnQxNkFycmF5KDI4OCksdGhpcy5sZW5keW49bnVsbCx0aGlzLmRpc3RkeW49bnVsbCx0aGlzLnNhbmU9MCx0aGlzLmJhY2s9MCx0aGlzLndhcz0wfWNvbnN0IE5LPWU9PntpZighZSlyZXR1cm4gMTtjb25zdCB0PWUuc3RhdGU7cmV0dXJuIXR8fHQuc3RybSE9PWV8fHQubW9kZTxTS3x8dC5tb2RlPjE2MjExPzE6MH0sREs9ZT0+e2lmKE5LKGUpKXJldHVybiBfSztjb25zdCB0PWUuc3RhdGU7cmV0dXJuIGUudG90YWxfaW49ZS50b3RhbF9vdXQ9dC50b3RhbD0wLGUubXNnPVwiXCIsdC53cmFwJiYoZS5hZGxlcj0xJnQud3JhcCksdC5tb2RlPVNLLHQubGFzdD0wLHQuaGF2ZWRpY3Q9MCx0LmZsYWdzPS0xLHQuZG1heD0zMjc2OCx0LmhlYWQ9bnVsbCx0LmhvbGQ9MCx0LmJpdHM9MCx0LmxlbmNvZGU9dC5sZW5keW49bmV3IEludDMyQXJyYXkoODUyKSx0LmRpc3Rjb2RlPXQuZGlzdGR5bj1uZXcgSW50MzJBcnJheSg1OTIpLHQuc2FuZT0xLHQuYmFjaz0tMSx1S30sUEs9ZT0+e2lmKE5LKGUpKXJldHVybiBfSztjb25zdCB0PWUuc3RhdGU7cmV0dXJuIHQud3NpemU9MCx0LndoYXZlPTAsdC53bmV4dD0wLERLKGUpfSxMSz0oZSx0KT0+e2xldCBpO2lmKE5LKGUpKXJldHVybiBfSztjb25zdCBuPWUuc3RhdGU7cmV0dXJuIHQ8MD8oaT0wLHQ9LXQpOihpPTUrKHQ+PjQpLHQ8NDgmJih0Jj0xNSkpLHQmJih0PDh8fHQ+MTUpP19LOihudWxsIT09bi53aW5kb3cmJm4ud2JpdHMhPT10JiYobi53aW5kb3c9bnVsbCksbi53cmFwPWksbi53Yml0cz10LFBLKGUpKX0sa0s9KGUsdCk9PntpZighZSlyZXR1cm4gX0s7Y29uc3QgaT1uZXcgT0s7ZS5zdGF0ZT1pLGkuc3RybT1lLGkud2luZG93PW51bGwsaS5tb2RlPVNLO2NvbnN0IG49TEsoZSx0KTtyZXR1cm4gbiE9PXVLJiYoZS5zdGF0ZT1udWxsKSxufTtsZXQgTUssVUsseEs9ITA7Y29uc3QgVks9ZT0+e2lmKHhLKXtNSz1uZXcgSW50MzJBcnJheSg1MTIpLFVLPW5ldyBJbnQzMkFycmF5KDMyKTtsZXQgdD0wO2Zvcig7dDwxNDQ7KWUubGVuc1t0KytdPTg7Zm9yKDt0PDI1NjspZS5sZW5zW3QrK109OTtmb3IoO3Q8MjgwOyllLmxlbnNbdCsrXT03O2Zvcig7dDwyODg7KWUubGVuc1t0KytdPTg7Zm9yKGFLKDEsZS5sZW5zLDAsMjg4LE1LLDAsZS53b3JrLHtiaXRzOjl9KSx0PTA7dDwzMjspZS5sZW5zW3QrK109NTthSygyLGUubGVucywwLDMyLFVLLDAsZS53b3JrLHtiaXRzOjV9KSx4Sz0hMX1lLmxlbmNvZGU9TUssZS5sZW5iaXRzPTksZS5kaXN0Y29kZT1VSyxlLmRpc3RiaXRzPTV9LEZLPShlLHQsaSxuKT0+e2xldCByO2NvbnN0IG89ZS5zdGF0ZTtyZXR1cm4gbnVsbD09PW8ud2luZG93JiYoby53c2l6ZT0xPDxvLndiaXRzLG8ud25leHQ9MCxvLndoYXZlPTAsby53aW5kb3c9bmV3IFVpbnQ4QXJyYXkoby53c2l6ZSkpLG4+PW8ud3NpemU/KG8ud2luZG93LnNldCh0LnN1YmFycmF5KGktby53c2l6ZSxpKSwwKSxvLnduZXh0PTAsby53aGF2ZT1vLndzaXplKToocj1vLndzaXplLW8ud25leHQscj5uJiYocj1uKSxvLndpbmRvdy5zZXQodC5zdWJhcnJheShpLW4saS1uK3IpLG8ud25leHQpLChuLT1yKT8oby53aW5kb3cuc2V0KHQuc3ViYXJyYXkoaS1uLGkpLDApLG8ud25leHQ9bixvLndoYXZlPW8ud3NpemUpOihvLnduZXh0Kz1yLG8ud25leHQ9PT1vLndzaXplJiYoby53bmV4dD0wKSxvLndoYXZlPG8ud3NpemUmJihvLndoYXZlKz1yKSkpLDB9O3ZhciBCSz0oZSx0KT0+e2xldCBpLG4scixvLHMsYSxjLGQsbCx1LGgscCxfLEUsZixtLFQsUyxnLFIsQyxJLHY9MDtjb25zdCB5PW5ldyBVaW50OEFycmF5KDQpO2xldCBBLGI7Y29uc3Qgdz1uZXcgVWludDhBcnJheShbMTYsMTcsMTgsMCw4LDcsOSw2LDEwLDUsMTEsNCwxMiwzLDEzLDIsMTQsMSwxNV0pO2lmKE5LKGUpfHwhZS5vdXRwdXR8fCFlLmlucHV0JiYwIT09ZS5hdmFpbF9pbilyZXR1cm4gX0s7aT1lLnN0YXRlLGkubW9kZT09PVJLJiYoaS5tb2RlPUNLKSxzPWUubmV4dF9vdXQscj1lLm91dHB1dCxjPWUuYXZhaWxfb3V0LG89ZS5uZXh0X2luLG49ZS5pbnB1dCxhPWUuYXZhaWxfaW4sZD1pLmhvbGQsbD1pLmJpdHMsdT1hLGg9YyxJPXVLO2U6Zm9yKDs7KXN3aXRjaChpLm1vZGUpe2Nhc2UgU0s6aWYoMD09PWkud3JhcCl7aS5tb2RlPUNLO2JyZWFrfWZvcig7bDwxNjspe2lmKDA9PT1hKWJyZWFrIGU7YS0tLGQrPW5bbysrXTw8bCxsKz04fWlmKDImaS53cmFwJiYzNTYxNT09PWQpezA9PT1pLndiaXRzJiYoaS53Yml0cz0xNSksaS5jaGVjaz0wLHlbMF09MjU1JmQseVsxXT1kPj4+OCYyNTUsaS5jaGVjaz13VyhpLmNoZWNrLHksMiwwKSxkPTAsbD0wLGkubW9kZT0xNjE4MTticmVha31pZihpLmhlYWQmJihpLmhlYWQuZG9uZT0hMSksISgxJmkud3JhcCl8fCgoKDI1NSZkKTw8OCkrKGQ+PjgpKSUzMSl7ZS5tc2c9XCJpbmNvcnJlY3QgaGVhZGVyIGNoZWNrXCIsaS5tb2RlPWJLO2JyZWFrfWlmKCgxNSZkKSE9PVRLKXtlLm1zZz1cInVua25vd24gY29tcHJlc3Npb24gbWV0aG9kXCIsaS5tb2RlPWJLO2JyZWFrfWlmKGQ+Pj49NCxsLT00LEM9OCsoMTUmZCksMD09PWkud2JpdHMmJihpLndiaXRzPUMpLEM+MTV8fEM+aS53Yml0cyl7ZS5tc2c9XCJpbnZhbGlkIHdpbmRvdyBzaXplXCIsaS5tb2RlPWJLO2JyZWFrfWkuZG1heD0xPDxpLndiaXRzLGkuZmxhZ3M9MCxlLmFkbGVyPWkuY2hlY2s9MSxpLm1vZGU9NTEyJmQ/MTYxODk6UkssZD0wLGw9MDticmVhaztjYXNlIDE2MTgxOmZvcig7bDwxNjspe2lmKDA9PT1hKWJyZWFrIGU7YS0tLGQrPW5bbysrXTw8bCxsKz04fWlmKGkuZmxhZ3M9ZCwoMjU1JlZHKGkpKSE9PVRLKXtlLm1zZz1cInVua25vd24gY29tcHJlc3Npb24gbWV0aG9kXCIsaS5tb2RlPWJLO2JyZWFrfWlmKDU3MzQ0JlZHKGkpKXtlLm1zZz1cInVua25vd24gaGVhZGVyIGZsYWdzIHNldFwiLGkubW9kZT1iSzticmVha31pLmhlYWQmJihpLmhlYWQudGV4dD1kPj44JjEpLDUxMiZWRyhpKSYmNCZpLndyYXAmJih5WzBdPTI1NSZkLHlbMV09ZD4+PjgmMjU1LGkuY2hlY2s9d1coaS5jaGVjayx5LDIsMCkpLGQ9MCxsPTAsaS5tb2RlPTE2MTgyO2Nhc2UgMTYxODI6Zm9yKDtsPDMyOyl7aWYoMD09PWEpYnJlYWsgZTthLS0sZCs9bltvKytdPDxsLGwrPTh9aS5oZWFkJiYoaS5oZWFkLnRpbWU9ZCksNTEyJlZHKGkpJiY0Jmkud3JhcCYmKHlbMF09MjU1JmQseVsxXT1kPj4+OCYyNTUseVsyXT1kPj4+MTYmMjU1LHlbM109ZD4+PjI0JjI1NSxpLmNoZWNrPXdXKGkuY2hlY2sseSw0LDApKSxkPTAsbD0wLGkubW9kZT0xNjE4MztjYXNlIDE2MTgzOmZvcig7bDwxNjspe2lmKDA9PT1hKWJyZWFrIGU7YS0tLGQrPW5bbysrXTw8bCxsKz04fWkuaGVhZCYmKGkuaGVhZC54ZmxhZ3M9MjU1JmQsaS5oZWFkLm9zPWQ+PjgpLDUxMiZWRyhpKSYmNCZpLndyYXAmJih5WzBdPTI1NSZkLHlbMV09ZD4+PjgmMjU1LGkuY2hlY2s9d1coaS5jaGVjayx5LDIsMCkpLGQ9MCxsPTAsaS5tb2RlPTE2MTg0O2Nhc2UgMTYxODQ6aWYoMTAyNCZWRyhpKSl7Zm9yKDtsPDE2Oyl7aWYoMD09PWEpYnJlYWsgZTthLS0sZCs9bltvKytdPDxsLGwrPTh9aS5sZW5ndGg9ZCxpLmhlYWQmJihpLmhlYWQuZXh0cmFfbGVuPWQpLDUxMiZWRyhpKSYmNCZpLndyYXAmJih5WzBdPTI1NSZkLHlbMV09ZD4+PjgmMjU1LGkuY2hlY2s9d1coaS5jaGVjayx5LDIsMCkpLGQ9MCxsPTB9ZWxzZSBpLmhlYWQmJihpLmhlYWQuZXh0cmE9bnVsbCk7aS5tb2RlPTE2MTg1O2Nhc2UgMTYxODU6aWYoMTAyNCZWRyhpKSYmKHA9aS5sZW5ndGgscD5hJiYocD1hKSxwJiYoaS5oZWFkJiYoQz1pLmhlYWQuZXh0cmFfbGVuLWkubGVuZ3RoLGkuaGVhZC5leHRyYXx8KGkuaGVhZC5leHRyYT1uZXcgVWludDhBcnJheShpLmhlYWQuZXh0cmFfbGVuKSksaS5oZWFkLmV4dHJhLnNldChuLnN1YmFycmF5KG8sbytwKSxDKSksNTEyJlZHKGkpJiY0Jmkud3JhcCYmKGkuY2hlY2s9d1coaS5jaGVjayxuLHAsbykpLGEtPXAsbys9cCxpLmxlbmd0aC09cCksaS5sZW5ndGgpKWJyZWFrIGU7aS5sZW5ndGg9MCxpLm1vZGU9MTYxODY7Y2FzZSAxNjE4NjppZigyMDQ4JlZHKGkpKXtpZigwPT09YSlicmVhayBlO3A9MDtkb3tDPW5bbytwKytdLGkuaGVhZCYmQyYmaS5sZW5ndGg8NjU1MzYmJihpLmhlYWQubmFtZSs9U3RyaW5nLmZyb21DaGFyQ29kZShDKSl9d2hpbGUoQyYmcDxhKTtpZig1MTImVkcoaSkmJjQmaS53cmFwJiYoaS5jaGVjaz13VyhpLmNoZWNrLG4scCxvKSksYS09cCxvKz1wLEMpYnJlYWsgZX1lbHNlIGkuaGVhZCYmKGkuaGVhZC5uYW1lPW51bGwpO2kubGVuZ3RoPTAsaS5tb2RlPTE2MTg3O2Nhc2UgMTYxODc6aWYoNDA5NiZWRyhpKSl7aWYoMD09PWEpYnJlYWsgZTtwPTA7ZG97Qz1uW28rcCsrXSxpLmhlYWQmJkMmJmkubGVuZ3RoPDY1NTM2JiYoaS5oZWFkLmNvbW1lbnQrPVN0cmluZy5mcm9tQ2hhckNvZGUoQykpfXdoaWxlKEMmJnA8YSk7aWYoNTEyJlZHKGkpJiY0Jmkud3JhcCYmKGkuY2hlY2s9d1coaS5jaGVjayxuLHAsbykpLGEtPXAsbys9cCxDKWJyZWFrIGV9ZWxzZSBpLmhlYWQmJihpLmhlYWQuY29tbWVudD1udWxsKTtpLm1vZGU9MTYxODg7Y2FzZSAxNjE4ODppZig1MTImVkcoaSkpe2Zvcig7bDwxNjspe2lmKDA9PT1hKWJyZWFrIGU7YS0tLGQrPW5bbysrXTw8bCxsKz04fWlmKDQmaS53cmFwJiZkIT09KDY1NTM1JmkuY2hlY2spKXtlLm1zZz1cImhlYWRlciBjcmMgbWlzbWF0Y2hcIixpLm1vZGU9Yks7YnJlYWt9ZD0wLGw9MH1pLmhlYWQmJihpLmhlYWQuaGNyYz1WRyhpKT4+OSYxLGkuaGVhZC5kb25lPSEwKSxlLmFkbGVyPWkuY2hlY2s9MCxpLm1vZGU9Uks7YnJlYWs7Y2FzZSAxNjE4OTpmb3IoO2w8MzI7KXtpZigwPT09YSlicmVhayBlO2EtLSxkKz1uW28rK108PGwsbCs9OH1lLmFkbGVyPWkuY2hlY2s9d0soZCksZD0wLGw9MCxpLm1vZGU9Z0s7Y2FzZSBnSzppZigwPT09aS5oYXZlZGljdClyZXR1cm4gZS5uZXh0X291dD1zLGUuYXZhaWxfb3V0PWMsZS5uZXh0X2luPW8sZS5hdmFpbF9pbj1hLGkuaG9sZD1kLGkuYml0cz1sLHBLO2UuYWRsZXI9aS5jaGVjaz0xLGkubW9kZT1SSztjYXNlIFJLOmlmKHQ9PT1kS3x8dD09PWxLKWJyZWFrIGU7Y2FzZSBDSzppZihpLmxhc3Qpe2Q+Pj49NyZsLGwtPTcmbCxpLm1vZGU9QUs7YnJlYWt9Zm9yKDtsPDM7KXtpZigwPT09YSlicmVhayBlO2EtLSxkKz1uW28rK108PGwsbCs9OH1zd2l0Y2goaS5sYXN0PTEmZCxkPj4+PTEsbC09MSwzJmQpe2Nhc2UgMDppLm1vZGU9MTYxOTM7YnJlYWs7Y2FzZSAxOmlmKFZLKGkpLGkubW9kZT12Syx0PT09bEspe2Q+Pj49MixsLT0yO2JyZWFrIGV9YnJlYWs7Y2FzZSAyOmkubW9kZT0xNjE5NjticmVhaztjYXNlIDM6ZS5tc2c9XCJpbnZhbGlkIGJsb2NrIHR5cGVcIixpLm1vZGU9Ykt9ZD4+Pj0yLGwtPTI7YnJlYWs7Y2FzZSAxNjE5Mzpmb3IoZD4+Pj03JmwsbC09NyZsO2w8MzI7KXtpZigwPT09YSlicmVhayBlO2EtLSxkKz1uW28rK108PGwsbCs9OH1pZigoNjU1MzUmZCkhPShkPj4+MTZeNjU1MzUpKXtlLm1zZz1cImludmFsaWQgc3RvcmVkIGJsb2NrIGxlbmd0aHNcIixpLm1vZGU9Yks7YnJlYWt9aWYoaS5sZW5ndGg9NjU1MzUmZCxkPTAsbD0wLGkubW9kZT1JSyx0PT09bEspYnJlYWsgZTtjYXNlIElLOmkubW9kZT0xNjE5NTtjYXNlIDE2MTk1OmlmKHA9aS5sZW5ndGgscCl7aWYocD5hJiYocD1hKSxwPmMmJihwPWMpLDA9PT1wKWJyZWFrIGU7ci5zZXQobi5zdWJhcnJheShvLG8rcCkscyksYS09cCxvKz1wLGMtPXAscys9cCxpLmxlbmd0aC09cDticmVha31pLm1vZGU9Uks7YnJlYWs7Y2FzZSAxNjE5Njpmb3IoO2w8MTQ7KXtpZigwPT09YSlicmVhayBlO2EtLSxkKz1uW28rK108PGwsbCs9OH1pZihpLm5sZW49MjU3KygzMSZkKSxkPj4+PTUsbC09NSxpLm5kaXN0PTErKDMxJmQpLGQ+Pj49NSxsLT01LGkubmNvZGU9NCsoMTUmZCksZD4+Pj00LGwtPTQsaS5ubGVuPjI4Nnx8aS5uZGlzdD4zMCl7ZS5tc2c9XCJ0b28gbWFueSBsZW5ndGggb3IgZGlzdGFuY2Ugc3ltYm9sc1wiLGkubW9kZT1iSzticmVha31pLmhhdmU9MCxpLm1vZGU9MTYxOTc7Y2FzZSAxNjE5Nzpmb3IoO2kuaGF2ZTxpLm5jb2RlOyl7Zm9yKDtsPDM7KXtpZigwPT09YSlicmVhayBlO2EtLSxkKz1uW28rK108PGwsbCs9OH1pLmxlbnNbd1tpLmhhdmUrK11dPTcmZCxkPj4+PTMsbC09M31mb3IoO2kuaGF2ZTwxOTspaS5sZW5zW3dbaS5oYXZlKytdXT0wO2lmKGkubGVuY29kZT1pLmxlbmR5bixpLmxlbmJpdHM9NyxBPXtiaXRzOmkubGVuYml0c30sST1hSygwLGkubGVucywwLDE5LGkubGVuY29kZSwwLGkud29yayxBKSxpLmxlbmJpdHM9QS5iaXRzLEkpe2UubXNnPVwiaW52YWxpZCBjb2RlIGxlbmd0aHMgc2V0XCIsaS5tb2RlPWJLO2JyZWFrfWkuaGF2ZT0wLGkubW9kZT0xNjE5ODtjYXNlIDE2MTk4OmZvcig7aS5oYXZlPGkubmxlbitpLm5kaXN0Oyl7Zm9yKDt2PWkubGVuY29kZVtkJigxPDxpLmxlbmJpdHMpLTFdLGY9dj4+PjI0LG09dj4+PjE2JjI1NSxUPTY1NTM1JnYsIShmPD1sKTspe2lmKDA9PT1hKWJyZWFrIGU7YS0tLGQrPW5bbysrXTw8bCxsKz04fWlmKFQ8MTYpZD4+Pj1mLGwtPWYsaS5sZW5zW2kuaGF2ZSsrXT1UO2Vsc2V7aWYoMTY9PT1UKXtmb3IoYj1mKzI7bDxiOyl7aWYoMD09PWEpYnJlYWsgZTthLS0sZCs9bltvKytdPDxsLGwrPTh9aWYoZD4+Pj1mLGwtPWYsMD09PWkuaGF2ZSl7ZS5tc2c9XCJpbnZhbGlkIGJpdCBsZW5ndGggcmVwZWF0XCIsaS5tb2RlPWJLO2JyZWFrfUM9aS5sZW5zW2kuaGF2ZS0xXSxwPTMrKDMmZCksZD4+Pj0yLGwtPTJ9ZWxzZSBpZigxNz09PVQpe2ZvcihiPWYrMztsPGI7KXtpZigwPT09YSlicmVhayBlO2EtLSxkKz1uW28rK108PGwsbCs9OH1kPj4+PWYsbC09ZixDPTAscD0zKyg3JmQpLGQ+Pj49MyxsLT0zfWVsc2V7Zm9yKGI9Zis3O2w8Yjspe2lmKDA9PT1hKWJyZWFrIGU7YS0tLGQrPW5bbysrXTw8bCxsKz04fWQ+Pj49ZixsLT1mLEM9MCxwPTExKygxMjcmZCksZD4+Pj03LGwtPTd9aWYoaS5oYXZlK3A+aS5ubGVuK2kubmRpc3Qpe2UubXNnPVwiaW52YWxpZCBiaXQgbGVuZ3RoIHJlcGVhdFwiLGkubW9kZT1iSzticmVha31mb3IoO3AtLTspaS5sZW5zW2kuaGF2ZSsrXT1DfX1pZihpLm1vZGU9PT1iSylicmVhaztpZigwPT09aS5sZW5zWzI1Nl0pe2UubXNnPVwiaW52YWxpZCBjb2RlIC0tIG1pc3NpbmcgZW5kLW9mLWJsb2NrXCIsaS5tb2RlPWJLO2JyZWFrfWlmKGkubGVuYml0cz05LEE9e2JpdHM6aS5sZW5iaXRzfSxJPWFLKDEsaS5sZW5zLDAsaS5ubGVuLGkubGVuY29kZSwwLGkud29yayxBKSxpLmxlbmJpdHM9QS5iaXRzLEkpe2UubXNnPVwiaW52YWxpZCBsaXRlcmFsL2xlbmd0aHMgc2V0XCIsaS5tb2RlPWJLO2JyZWFrfWlmKGkuZGlzdGJpdHM9NixpLmRpc3Rjb2RlPWkuZGlzdGR5bixBPXtiaXRzOmkuZGlzdGJpdHN9LEk9YUsoMixpLmxlbnMsaS5ubGVuLGkubmRpc3QsaS5kaXN0Y29kZSwwLGkud29yayxBKSxpLmRpc3RiaXRzPUEuYml0cyxJKXtlLm1zZz1cImludmFsaWQgZGlzdGFuY2VzIHNldFwiLGkubW9kZT1iSzticmVha31pZihpLm1vZGU9dkssdD09PWxLKWJyZWFrIGU7Y2FzZSB2SzppLm1vZGU9eUs7Y2FzZSB5SzppZihhPj02JiZjPj0yNTgpe2UubmV4dF9vdXQ9cyxlLmF2YWlsX291dD1jLGUubmV4dF9pbj1vLGUuYXZhaWxfaW49YSxpLmhvbGQ9ZCxpLmJpdHM9bCx0SyhlLGgpLHM9ZS5uZXh0X291dCxyPWUub3V0cHV0LGM9ZS5hdmFpbF9vdXQsbz1lLm5leHRfaW4sbj1lLmlucHV0LGE9ZS5hdmFpbF9pbixkPWkuaG9sZCxsPWkuYml0cyxpLm1vZGU9PT1SSyYmKGkuYmFjaz0tMSk7YnJlYWt9Zm9yKGkuYmFjaz0wO3Y9aS5sZW5jb2RlW2QmKDE8PGkubGVuYml0cyktMV0sZj12Pj4+MjQsbT12Pj4+MTYmMjU1LFQ9NjU1MzUmdiwhKGY8PWwpOyl7aWYoMD09PWEpYnJlYWsgZTthLS0sZCs9bltvKytdPDxsLGwrPTh9aWYobSYmMD09KDI0MCZtKSl7Zm9yKFM9ZixnPW0sUj1UO3Y9aS5sZW5jb2RlW1IrKChkJigxPDxTK2cpLTEpPj5TKV0sZj12Pj4+MjQsbT12Pj4+MTYmMjU1LFQ9NjU1MzUmdiwhKFMrZjw9bCk7KXtpZigwPT09YSlicmVhayBlO2EtLSxkKz1uW28rK108PGwsbCs9OH1kPj4+PVMsbC09UyxpLmJhY2srPVN9aWYoZD4+Pj1mLGwtPWYsaS5iYWNrKz1mLGkubGVuZ3RoPVQsMD09PW0pe2kubW9kZT0xNjIwNTticmVha31pZigzMiZtKXtpLmJhY2s9LTEsaS5tb2RlPVJLO2JyZWFrfWlmKDY0Jm0pe2UubXNnPVwiaW52YWxpZCBsaXRlcmFsL2xlbmd0aCBjb2RlXCIsaS5tb2RlPWJLO2JyZWFrfWkuZXh0cmE9MTUmbSxpLm1vZGU9MTYyMDE7Y2FzZSAxNjIwMTppZihpLmV4dHJhKXtmb3IoYj1pLmV4dHJhO2w8Yjspe2lmKDA9PT1hKWJyZWFrIGU7YS0tLGQrPW5bbysrXTw8bCxsKz04fWkubGVuZ3RoKz1kJigxPDxpLmV4dHJhKS0xLGQ+Pj49aS5leHRyYSxsLT1pLmV4dHJhLGkuYmFjays9aS5leHRyYX1pLndhcz1pLmxlbmd0aCxpLm1vZGU9MTYyMDI7Y2FzZSAxNjIwMjpmb3IoO3Y9aS5kaXN0Y29kZVtkJigxPDxpLmRpc3RiaXRzKS0xXSxmPXY+Pj4yNCxtPXY+Pj4xNiYyNTUsVD02NTUzNSZ2LCEoZjw9bCk7KXtpZigwPT09YSlicmVhayBlO2EtLSxkKz1uW28rK108PGwsbCs9OH1pZigwPT0oMjQwJm0pKXtmb3IoUz1mLGc9bSxSPVQ7dj1pLmRpc3Rjb2RlW1IrKChkJigxPDxTK2cpLTEpPj5TKV0sZj12Pj4+MjQsbT12Pj4+MTYmMjU1LFQ9NjU1MzUmdiwhKFMrZjw9bCk7KXtpZigwPT09YSlicmVhayBlO2EtLSxkKz1uW28rK108PGwsbCs9OH1kPj4+PVMsbC09UyxpLmJhY2srPVN9aWYoZD4+Pj1mLGwtPWYsaS5iYWNrKz1mLDY0Jm0pe2UubXNnPVwiaW52YWxpZCBkaXN0YW5jZSBjb2RlXCIsaS5tb2RlPWJLO2JyZWFrfWkub2Zmc2V0PVQsaS5leHRyYT0xNSZtLGkubW9kZT0xNjIwMztjYXNlIDE2MjAzOmlmKGkuZXh0cmEpe2ZvcihiPWkuZXh0cmE7bDxiOyl7aWYoMD09PWEpYnJlYWsgZTthLS0sZCs9bltvKytdPDxsLGwrPTh9aS5vZmZzZXQrPWQmKDE8PGkuZXh0cmEpLTEsZD4+Pj1pLmV4dHJhLGwtPWkuZXh0cmEsaS5iYWNrKz1pLmV4dHJhfWlmKGkub2Zmc2V0PmkuZG1heCl7ZS5tc2c9XCJpbnZhbGlkIGRpc3RhbmNlIHRvbyBmYXIgYmFja1wiLGkubW9kZT1iSzticmVha31pLm1vZGU9MTYyMDQ7Y2FzZSAxNjIwNDppZigwPT09YylicmVhayBlO2lmKHA9aC1jLGkub2Zmc2V0PnApe2lmKHA9aS5vZmZzZXQtcCxwPmkud2hhdmUmJmkuc2FuZSl7ZS5tc2c9XCJpbnZhbGlkIGRpc3RhbmNlIHRvbyBmYXIgYmFja1wiLGkubW9kZT1iSzticmVha31wPmkud25leHQ/KHAtPWkud25leHQsXz1pLndzaXplLXApOl89aS53bmV4dC1wLHA+aS5sZW5ndGgmJihwPWkubGVuZ3RoKSxFPWkud2luZG93fWVsc2UgRT1yLF89cy1pLm9mZnNldCxwPWkubGVuZ3RoO3A+YyYmKHA9YyksYy09cCxpLmxlbmd0aC09cDtkb3tyW3MrK109RVtfKytdfXdoaWxlKC0tcCk7MD09PWkubGVuZ3RoJiYoaS5tb2RlPXlLKTticmVhaztjYXNlIDE2MjA1OmlmKDA9PT1jKWJyZWFrIGU7cltzKytdPWkubGVuZ3RoLGMtLSxpLm1vZGU9eUs7YnJlYWs7Y2FzZSBBSzppZihpLndyYXApe2Zvcig7bDwzMjspe2lmKDA9PT1hKWJyZWFrIGU7YS0tLGR8PW5bbysrXTw8bCxsKz04fWlmKGgtPWMsZS50b3RhbF9vdXQrPWgsaS50b3RhbCs9aCw0Jmkud3JhcCYmaCYmKGUuYWRsZXI9aS5jaGVjaz1WRyhpKT93VyhpLmNoZWNrLHIsaCxzLWgpOkFXKGkuY2hlY2sscixoLHMtaCkpLGg9Yyw0Jmkud3JhcCYmKFZHKGkpP2Q6d0soZCkpIT09aS5jaGVjayl7ZS5tc2c9XCJpbmNvcnJlY3QgZGF0YSBjaGVja1wiLGkubW9kZT1iSzticmVha31kPTAsbD0wfWkubW9kZT0xNjIwNztjYXNlIDE2MjA3OmlmKGkud3JhcCYmVkcoaSkpe2Zvcig7bDwzMjspe2lmKDA9PT1hKWJyZWFrIGU7YS0tLGQrPW5bbysrXTw8bCxsKz04fWlmKDQmaS53cmFwJiZkIT09KDQyOTQ5NjcyOTUmaS50b3RhbCkpe2UubXNnPVwiaW5jb3JyZWN0IGxlbmd0aCBjaGVja1wiLGkubW9kZT1iSzticmVha31kPTAsbD0wfWkubW9kZT0xNjIwODtjYXNlIDE2MjA4Okk9aEs7YnJlYWsgZTtjYXNlIGJLOkk9RUs7YnJlYWsgZTtjYXNlIDE2MjEwOnJldHVybiBmSztkZWZhdWx0OnJldHVybiBfS31yZXR1cm4gZS5uZXh0X291dD1zLGUuYXZhaWxfb3V0PWMsZS5uZXh0X2luPW8sZS5hdmFpbF9pbj1hLGkuaG9sZD1kLGkuYml0cz1sLChpLndzaXplfHxoIT09ZS5hdmFpbF9vdXQmJmkubW9kZTxiSyYmKGkubW9kZTxBS3x8dCE9PWNLKSkmJkZLKGUsZS5vdXRwdXQsZS5uZXh0X291dCxoLWUuYXZhaWxfb3V0KSx1LT1lLmF2YWlsX2luLGgtPWUuYXZhaWxfb3V0LGUudG90YWxfaW4rPXUsZS50b3RhbF9vdXQrPWgsaS50b3RhbCs9aCw0Jmkud3JhcCYmaCYmKGUuYWRsZXI9aS5jaGVjaz1WRyhpKT93VyhpLmNoZWNrLHIsaCxlLm5leHRfb3V0LWgpOkFXKGkuY2hlY2sscixoLGUubmV4dF9vdXQtaCkpLGUuZGF0YV90eXBlPWkuYml0cysoaS5sYXN0PzY0OjApKyhpLm1vZGU9PT1SSz8xMjg6MCkrKGkubW9kZT09PXZLfHxpLm1vZGU9PT1JSz8yNTY6MCksKDA9PT11JiYwPT09aHx8dD09PWNLKSYmST09PXVLJiYoST1tSyksSX0saks9e2luZmxhdGVSZXNldDpQSyxpbmZsYXRlUmVzZXQyOkxLLGluZmxhdGVSZXNldEtlZXA6REssaW5mbGF0ZUluaXQ6ZT0+a0soZSwxNSksaW5mbGF0ZUluaXQyOmtLLGluZmxhdGU6QkssaW5mbGF0ZUVuZDplPT57aWYoTksoZSkpcmV0dXJuIF9LO2xldCB0PWUuc3RhdGU7cmV0dXJuIHQud2luZG93JiYodC53aW5kb3c9bnVsbCksZS5zdGF0ZT1udWxsLHVLfSxpbmZsYXRlR2V0SGVhZGVyOihlLHQpPT57aWYoTksoZSkpcmV0dXJuIF9LO2NvbnN0IGk9ZS5zdGF0ZTtyZXR1cm4gMD09KDImaS53cmFwKT9fSzooaS5oZWFkPXQsdC5kb25lPSExLHVLKX0saW5mbGF0ZVNldERpY3Rpb25hcnk6KGUsdCk9Pntjb25zdCBpPXQubGVuZ3RoO2xldCBuLHIsbztyZXR1cm4gTksoZSk/X0s6KG49ZS5zdGF0ZSwwIT09bi53cmFwJiZuLm1vZGUhPT1nSz9fSzpuLm1vZGU9PT1nSyYmKHI9MSxyPUFXKHIsdCxpLDApLHIhPT1uLmNoZWNrKT9FSzoobz1GSyhlLHQsaSxpKSxvPyhuLm1vZGU9MTYyMTAsZkspOihuLmhhdmVkaWN0PTEsdUspKSl9LGluZmxhdGVJbmZvOlwicGFrbyBpbmZsYXRlIChmcm9tIE5vZGVjYSBwcm9qZWN0KVwifTt2YXIgR0s9ZnVuY3Rpb24oKXt0aGlzLnRleHQ9MCx0aGlzLnRpbWU9MCx0aGlzLnhmbGFncz0wLHRoaXMub3M9MCx0aGlzLmV4dHJhPW51bGwsdGhpcy5leHRyYV9sZW49MCx0aGlzLm5hbWU9XCJcIix0aGlzLmNvbW1lbnQ9XCJcIix0aGlzLmhjcmM9MCx0aGlzLmRvbmU9ITF9O2NvbnN0IFdLPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcse1pfTk9fRkxVU0g6SEssWl9GSU5JU0g6S0ssWl9PSzpZSyxaX1NUUkVBTV9FTkQ6cUssWl9ORUVEX0RJQ1Q6ekssWl9TVFJFQU1fRVJST1I6SkssWl9EQVRBX0VSUk9SOlhLLFpfTUVNX0VSUk9SOlFLfT1OVztmdW5jdGlvbiBaSyhlKXt0aGlzLm9wdGlvbnM9VUguYXNzaWduKHtjaHVua1NpemU6NjU1MzYsd2luZG93Qml0czoxNSx0bzpcIlwifSxlfHx7fSk7Y29uc3QgdD10aGlzLm9wdGlvbnM7dC5yYXcmJnQud2luZG93Qml0cz49MCYmdC53aW5kb3dCaXRzPDE2JiYodC53aW5kb3dCaXRzPS10LndpbmRvd0JpdHMsMD09PXQud2luZG93Qml0cyYmKHQud2luZG93Qml0cz0tMTUpKSwhKHQud2luZG93Qml0cz49MCYmdC53aW5kb3dCaXRzPDE2KXx8ZSYmZS53aW5kb3dCaXRzfHwodC53aW5kb3dCaXRzKz0zMiksdC53aW5kb3dCaXRzPjE1JiZ0LndpbmRvd0JpdHM8NDgmJjA9PSgxNSZ0LndpbmRvd0JpdHMpJiYodC53aW5kb3dCaXRzfD0xNSksdGhpcy5lcnI9MCx0aGlzLm1zZz1cIlwiLHRoaXMuZW5kZWQ9ITEsdGhpcy5jaHVua3M9W10sdGhpcy5zdHJtPW5ldyBCSCx0aGlzLnN0cm0uYXZhaWxfb3V0PTA7bGV0IGk9aksuaW5mbGF0ZUluaXQyKHRoaXMuc3RybSx0LndpbmRvd0JpdHMpO2lmKGkhPT1ZSyl0aHJvdyBuZXcgRXJyb3IoT1dbaV0pO2lmKHRoaXMuaGVhZGVyPW5ldyBHSyxqSy5pbmZsYXRlR2V0SGVhZGVyKHRoaXMuc3RybSx0aGlzLmhlYWRlciksdC5kaWN0aW9uYXJ5JiYoXCJzdHJpbmdcIj09dHlwZW9mIHQuZGljdGlvbmFyeT90LmRpY3Rpb25hcnk9Rkguc3RyaW5nMmJ1Zih0LmRpY3Rpb25hcnkpOlwiW29iamVjdCBBcnJheUJ1ZmZlcl1cIj09PVdLLmNhbGwodC5kaWN0aW9uYXJ5KSYmKHQuZGljdGlvbmFyeT1uZXcgVWludDhBcnJheSh0LmRpY3Rpb25hcnkpKSx0LnJhdyYmKGk9aksuaW5mbGF0ZVNldERpY3Rpb25hcnkodGhpcy5zdHJtLHQuZGljdGlvbmFyeSksaSE9PVlLKSkpdGhyb3cgbmV3IEVycm9yKE9XW2ldKX1mdW5jdGlvbiAkSyhlLHQpe2NvbnN0IGk9bmV3IFpLKHQpO2lmKGkucHVzaChlKSxpLmVycil0aHJvdyBpLm1zZ3x8T1dbaS5lcnJdO3JldHVybiBpLnJlc3VsdH1aSy5wcm90b3R5cGUucHVzaD1mdW5jdGlvbihlLHQpe2NvbnN0IGk9dGhpcy5zdHJtLG49dGhpcy5vcHRpb25zLmNodW5rU2l6ZSxyPXRoaXMub3B0aW9ucy5kaWN0aW9uYXJ5O2xldCBvLHMsYTtpZih0aGlzLmVuZGVkKXJldHVybiExO2ZvcihzPXQ9PT1+fnQ/dDohMD09PXQ/S0s6SEssXCJbb2JqZWN0IEFycmF5QnVmZmVyXVwiPT09V0suY2FsbChlKT9pLmlucHV0PW5ldyBVaW50OEFycmF5KGUpOmkuaW5wdXQ9ZSxpLm5leHRfaW49MCxpLmF2YWlsX2luPWkuaW5wdXQubGVuZ3RoOzspe2ZvcigwPT09aS5hdmFpbF9vdXQmJihpLm91dHB1dD1uZXcgVWludDhBcnJheShuKSxpLm5leHRfb3V0PTAsaS5hdmFpbF9vdXQ9biksbz1qSy5pbmZsYXRlKGkscyksbz09PXpLJiZyJiYobz1qSy5pbmZsYXRlU2V0RGljdGlvbmFyeShpLHIpLG89PT1ZSz9vPWpLLmluZmxhdGUoaSxzKTpvPT09WEsmJihvPXpLKSk7aS5hdmFpbF9pbj4wJiZvPT09cUsmJmkuc3RhdGUud3JhcD4wJiYwIT09ZVtpLm5leHRfaW5dOylqSy5pbmZsYXRlUmVzZXQoaSksbz1qSy5pbmZsYXRlKGkscyk7c3dpdGNoKG8pe2Nhc2UgSks6Y2FzZSBYSzpjYXNlIHpLOmNhc2UgUUs6cmV0dXJuIHRoaXMub25FbmQobyksdGhpcy5lbmRlZD0hMCwhMX1pZihhPWkuYXZhaWxfb3V0LGkubmV4dF9vdXQmJigwPT09aS5hdmFpbF9vdXR8fG89PT1xSykpaWYoXCJzdHJpbmdcIj09PXRoaXMub3B0aW9ucy50byl7bGV0IGU9RkgudXRmOGJvcmRlcihpLm91dHB1dCxpLm5leHRfb3V0KSx0PWkubmV4dF9vdXQtZSxyPUZILmJ1ZjJzdHJpbmcoaS5vdXRwdXQsZSk7aS5uZXh0X291dD10LGkuYXZhaWxfb3V0PW4tdCx0JiZpLm91dHB1dC5zZXQoaS5vdXRwdXQuc3ViYXJyYXkoZSxlK3QpLDApLHRoaXMub25EYXRhKHIpfWVsc2UgdGhpcy5vbkRhdGEoaS5vdXRwdXQubGVuZ3RoPT09aS5uZXh0X291dD9pLm91dHB1dDppLm91dHB1dC5zdWJhcnJheSgwLGkubmV4dF9vdXQpKTtpZihvIT09WUt8fDAhPT1hKXtpZihvPT09cUspcmV0dXJuIG89aksuaW5mbGF0ZUVuZCh0aGlzLnN0cm0pLHRoaXMub25FbmQobyksdGhpcy5lbmRlZD0hMCwhMDtpZigwPT09aS5hdmFpbF9pbilicmVha319cmV0dXJuITB9LFpLLnByb3RvdHlwZS5vbkRhdGE9ZnVuY3Rpb24oZSl7dGhpcy5jaHVua3MucHVzaChlKX0sWksucHJvdG90eXBlLm9uRW5kPWZ1bmN0aW9uKGUpe2U9PT1ZSyYmKFwic3RyaW5nXCI9PT10aGlzLm9wdGlvbnMudG8/dGhpcy5yZXN1bHQ9dGhpcy5jaHVua3Muam9pbihcIlwiKTp0aGlzLnJlc3VsdD1VSC5mbGF0dGVuQ2h1bmtzKHRoaXMuY2h1bmtzKSksdGhpcy5jaHVua3M9W10sdGhpcy5lcnI9ZSx0aGlzLm1zZz10aGlzLnN0cm0ubXNnfTt2YXIgZVk9e0luZmxhdGU6WkssaW5mbGF0ZTokSyxpbmZsYXRlUmF3OmZ1bmN0aW9uKGUsdCl7cmV0dXJuKHQ9dHx8e30pLnJhdz0hMCwkSyhlLHQpfSx1bmd6aXA6JEssY29uc3RhbnRzOk5XfTtjb25zdHtEZWZsYXRlOnRZLGRlZmxhdGU6aVksZGVmbGF0ZVJhdzpuWSxnemlwOnJZfT0kSCx7SW5mbGF0ZTpvWSxpbmZsYXRlOnNZLGluZmxhdGVSYXc6YVksdW5nemlwOmNZfT1lWTt2YXIgZFk9aVksbFk9c1ksdVk9ZnVuY3Rpb24oZSl7cmV0dXJuIGVbZS5PTkVfQllURT0wXT1cIk9ORV9CWVRFXCIsZVtlLlRXT19CWVRFPTFdPVwiVFdPX0JZVEVcIixlfSh1WXx8e30pO2NsYXNzIGhZe2NvbnN0cnVjdG9yKCl7RmcodGhpcyxcIl9zZXF1ZW5jZVwiLDApLEZnKHRoaXMsXCJfc3RhcnRUaW1lXCIsRGF0ZS5ub3coKSksRmcodGhpcyxcImlzVXNlT25lQnl0ZVwiLCEwKX1nZXQgc3RhcnRUaW1lKCl7Y29uc3QgZT1EYXRlLm5vdygpLXRoaXMuX3N0YXJ0VGltZTtyZXR1cm4gZTxNYXRoLnBvdygyLDE2KT9lOih0aGlzLl9zdGFydFRpbWUrPU1hdGgucG93KDIsMTYpLHRoaXMuc3RhcnRUaW1lKX1nZXQgc2VxdWVuY2UoKXtyZXR1cm4gdGhpcy5fc2VxdWVuY2U8TWF0aC5wb3coMiwzMik/dGhpcy5fc2VxdWVuY2UrKzoodGhpcy5fc2VxdWVuY2UtPU1hdGgucG93KDIsMzIpLHRoaXMuc2VxdWVuY2UpfXNlcmlhbGl6ZShlKXtjb25zdCB0PXtjb21tb25QYWNrZXRIZWFkZXI6e2xlbmd0aDowLHJlc2VydmVkOjAsZXh0ZW5zaW9uOjAsc2VxdWVuY2U6dGhpcy5zZXF1ZW5jZX0sY29tbW9uU3RyZWFtSGVhZGVyOnRoaXMuc3RhcnRUaW1lLGV4dGVuc2lvbjp2b2lkIDAscGF5bG9hZDplfTtpZihlLmJ5dGVMZW5ndGg+MTI4KXtjb25zdCBpPW5ldyBVaW50OEFycmF5KDQpO2kuc2V0KFsxLDAsMCwwXSk7Y29uc3Qgbj17aWQ6MCxsZW5ndGg6NCxkYXRhOmkuYnVmZmVyfSxyPXtwcm9maWxlOnRoaXMuaXNVc2VPbmVCeXRlPzA6MSxsZW5ndGg6dGhpcy5pc1VzZU9uZUJ5dGU/NTo2LGRhdGFzOltuXX07dC5jb21tb25QYWNrZXRIZWFkZXIuZXh0ZW5zaW9uPTEsdC5leHRlbnNpb249cix0LnBheWxvYWQ9dGhpcy5jb21wcmVzcyhlKSx0LmNvbW1vblBhY2tldEhlYWRlci5sZW5ndGg9OCsodC5leHRlbnNpb24ubGVuZ3RoKzIpK3QucGF5bG9hZC5ieXRlTGVuZ3RofWVsc2UgdC5jb21tb25QYWNrZXRIZWFkZXIubGVuZ3RoPTgrdC5wYXlsb2FkLmJ5dGVMZW5ndGg7WEEoXCJTSE9XX0RBVEFTVFJFQU0yX0xPR1wiKSYmZmIuZGVidWcoXCJzZW5kIGRhdGEgaGVhZGVyOiBcIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkodC5jb21tb25QYWNrZXRIZWFkZXIpKSk7Y29uc3QgaT1uZXcgQXJyYXlCdWZmZXIodC5jb21tb25QYWNrZXRIZWFkZXIubGVuZ3RoKSxuPW5ldyBVaW50OEFycmF5KGkpLHI9bmV3IERhdGFWaWV3KGkpO2xldCBvPTA7aWYoci5zZXRVaW50MTYobyx0LmNvbW1vblBhY2tldEhlYWRlci5leHRlbnNpb248PDE1fHQuY29tbW9uUGFja2V0SGVhZGVyLnJlc2VydmVkPDwxNHx0LmNvbW1vblBhY2tldEhlYWRlci5sZW5ndGgsITApLG8rPTIsci5zZXRVaW50MzIobyx0LmNvbW1vblBhY2tldEhlYWRlci5zZXF1ZW5jZSwhMCksbys9NCxyLnNldFVpbnQxNihvLHQuY29tbW9uU3RyZWFtSGVhZGVyLCEwKSxvKz0yLHQuZXh0ZW5zaW9uKXtjb25zdCBlPXRoaXMuc2VyaWFsaXplRXh0ZW5zaW9uKHQuZXh0ZW5zaW9uKTtuLnNldChuZXcgVWludDhBcnJheShlKSxvKSxvKz1lLmJ5dGVMZW5ndGh9aWYobi5zZXQobmV3IFVpbnQ4QXJyYXkodC5wYXlsb2FkKSxvKSxvKz10LnBheWxvYWQuYnl0ZUxlbmd0aCxvIT09dC5jb21tb25QYWNrZXRIZWFkZXIubGVuZ3RoKXRocm93IEVycm9yKFwic2VyaWFsaXplIGVycm9yIVwiKTtyZXR1cm4gaX1kZXNlcmlhbGl6ZShlKXtpZihlLmJ5dGVMZW5ndGg8NClyZXR1cm4gbmV3IEFycmF5QnVmZmVyKDApO2NvbnN0IHQ9bmV3IERhdGFWaWV3KGUpO2xldCBpPTA7Y29uc3Qgbj10LmdldFVpbnQxNihpLCEwKTtpKz0yO2NvbnN0IHI9e2xlbmd0aDoxNjM4MyZuLHJlc2VydmVkOigxNjM4NCZuKT4+MTQsZXh0ZW5zaW9uOigzMjc2OCZuKT4+MTUsc2VxdWVuY2U6dC5nZXRVaW50MTYoaSsyLCEwKTw8MTZ8dC5nZXRVaW50MTYoaSwhMCl9O2xldCBvLHM7aWYoaSs9NCxYQShcIlNIT1dfREFUQVNUUkVBTTJfTE9HXCIpJiZmYi5kZWJ1ZyhcInJlY2VpdmUgZGF0YSBoZWFkZXI6IFwiLmNvbmNhdChKU09OLnN0cmluZ2lmeShyKSkpLHQuZ2V0VWludDE2KGksITApLGkrPTIsci5leHRlbnNpb24pe3M9dGhpcy5kZXNlcmlhbGl6ZUV4dGVuc2lvbihlLnNsaWNlKGkpKSxpKz0yK3MubGVuZ3RoLG89ZS5zbGljZShpKTtsZXQgdD0hMTtpZihzLmRhdGFzLmxlbmd0aD4wKXtjb25zdCBlPXMuZGF0YXMuZmluZCgoZT0+MD09PWUuaWQpKTtpZihlKXt0PTE9PSgxJm5ldyBEYXRhVmlldyhlLmRhdGEpLmdldFVpbnQzMigwLCEwKSl9fW89dD90aGlzLmRlY29tcHJlc3Mobyk6b31lbHNlIG89ZS5zbGljZSg4KTtyZXR1cm4gb31zZXJpYWxpemVFeHRlbnNpb24oZSl7Y29uc3R7cHJvZmlsZTp0LGxlbmd0aDppLGRhdGFzOm59PWUscj1uZXcgQXJyYXlCdWZmZXIoaSsyKSxvPW5ldyBVaW50OEFycmF5KHIpLHM9bmV3IERhdGFWaWV3KHIpO2xldCBhPTA7aWYocy5zZXRVaW50OChhKyssdCkscy5zZXRVaW50OChhKyssaSksbi5mb3JFYWNoKChlPT57dD8ocy5zZXRVaW50OChhKyssZS5pZCkscy5zZXRVaW50OChhKyssZS5sZW5ndGgpLG8uc2V0KG5ldyBVaW50OEFycmF5KGUuZGF0YSksYSksYSs9ZS5kYXRhLmJ5dGVMZW5ndGgpOihzLnNldFVpbnQ4KGErKyxlLmlkfGUubGVuZ3RoPDw0KSxvLnNldChuZXcgVWludDhBcnJheShlLmRhdGEpLGEpLGErPWUuZGF0YS5ieXRlTGVuZ3RoKX0pKSxhIT09aSsyKXRocm93IEVycm9yKFwic2VyaWFsaXplIGV4dGVuc2lvbiBlcnJvciwgaXMgXCIuY29uY2F0KGEsXCIhPT1cIikuY29uY2F0KGkrMikpO3JldHVybiByfWRlc2VyaWFsaXplRXh0ZW5zaW9uKGUpe2NvbnN0IHQ9bmV3IERhdGFWaWV3KGUpO2xldCBpPTA7Y29uc3Qgbj10LmdldFVpbnQ4KGkpO2krKztjb25zdCByPXQuZ2V0VWludDgoaSk7aSsrO2NvbnN0IG89bj09PXVZLlRXT19CWVRFLHM9W10sYT1uZXcgRGF0YVZpZXcoZSwyKTtsZXQgYz0wO2Zvcig7YzxyOyl7bGV0IGU9MCx0PTAsaT1uZXcgQXJyYXlCdWZmZXIoMCk7bz8oZT1hLmdldFVpbnQ4KGMpLGMrKyx0PWEuZ2V0VWludDgoYyksYysrKTooZT0xNSZhLmdldFVpbnQ4KGMpLHQ9YS5nZXRVaW50OChjKT4+NCxjKyspLHQ+MCYmKGk9YS5idWZmZXIuc2xpY2UoYysyLGMrMit0KSxjKz1pLmJ5dGVMZW5ndGgpLHMucHVzaCh7aWQ6ZSxsZW5ndGg6dCxkYXRhOml9KX1pZihjIT09cil0aHJvdyBFcnJvcihcInBhcnNlIGVycm9yXCIpO3JldHVybntwcm9maWxlOm4sbGVuZ3RoOnIsZGF0YXM6c319ZGVjb21wcmVzcyhlKXtyZXR1cm4gbFkobmV3IFVpbnQ4QXJyYXkoZSkpfWNvbXByZXNzKGUpe3JldHVybiBkWShuZXcgVWludDhBcnJheShlKSl9fWNvbnN0IHBZPXtuYW1lOlwiRGF0YVN0cmVhbVwiLGNyZWF0ZTooZSx0KT0+e2NvbnN0IGk9dD9uZXcgYlUoZSk6bmV3IHdVKGUpO3JldHVybiBpLnVzZURhdGFTdHJlYW0obmV3IGhZKSxpfX07Y2xhc3MgX1kgZXh0ZW5kcyB4eXtjb25zdHJ1Y3RvcihlLHQsaSl7c3VwZXIoKSxGZyh0aGlzLFwid3NcIix2b2lkIDApLEZnKHRoaXMsXCJyZXF1ZXN0SWRcIiwxKSxGZyh0aGlzLFwiaGVhcnRCZWF0VGltZXJcIix2b2lkIDApLEZnKHRoaXMsXCJqb2luSW5mb1wiLHZvaWQgMCksRmcodGhpcyxcImNsaWVudElkXCIsdm9pZCAwKSxGZyh0aGlzLFwib25PcGVuXCIsKCgpPT57dGhpcy5lbWl0KFwib3BlblwiKSx0aGlzLnN0YXJ0SGVhcnRCZWF0Q2hlY2soKX0pKSxGZyh0aGlzLFwib25DbG9zZVwiLChlPT57dGhpcy5lbWl0KFwiY2xvc2VcIiksdGhpcy5kaXNwb3NlKCl9KSksRmcodGhpcyxcIm9uTWVzc2FnZVwiLChlPT57Y29uc3QgdD1KU09OLnBhcnNlKGUuZGF0YSk7aWYoIXR8fFwic2VydmVyUmVzcG9uc2VcIiE9PXQuY29tbWFuZHx8IXQucmVxdWVzdElkKXJldHVybiB0JiZcInNlcnZlclN0YXR1c1wiPT09dC5jb21tYW5kJiZ0LnNlcnZlclN0YXR1cyYmdC5zZXJ2ZXJTdGF0dXMuY29tbWFuZD8odGhpcy5lbWl0KFwic3RhdHVzXCIsdC5zZXJ2ZXJTdGF0dXMpLHZvaWQgdGhpcy5lbWl0KHQuc2VydmVyU3RhdHVzLmNvbW1hbmQsdC5zZXJ2ZXJTdGF0dXMpKTp2b2lkIDA7dGhpcy5lbWl0KFwicmVxX1wiLmNvbmNhdCh0LnJlcXVlc3RJZCksdCl9KSksdGhpcy5qb2luSW5mbz1lLHRoaXMuY2xpZW50SWQ9dCx0aGlzLndzPW5ldyBITyhcImNyb3NzLWNoYW5uZWwtXCIuY29uY2F0KHRoaXMuY2xpZW50SWQpLGkpLHRoaXMud3Mub24oVXcuUkVDT05ORUNUSU5HLCgoKT0+e3RoaXMud3MucmVjb25uZWN0TW9kZT1cInJldHJ5XCIsdGhpcy5lbWl0KFwicmVjb25uZWN0aW5nXCIpfSkpLHRoaXMud3Mub24oVXcuQ09OTkVDVEVELHRoaXMub25PcGVuKSx0aGlzLndzLm9uKFV3Lk9OX01FU1NBR0UsdGhpcy5vbk1lc3NhZ2UpLHRoaXMud3Mub24oVXcuQ0xPU0VELHRoaXMub25DbG9zZSl9aXNDb25uZWN0KCl7cmV0dXJuXCJjb25uZWN0ZWRcIj09PXRoaXMud3Muc3RhdGV9c2VuZE1lc3NhZ2UoZSl7Y29uc3QgdD10aGlzLnJlcXVlc3RJZCsrO3JldHVybiBlLnJlcXVlc3RJZD10LGUuc2VxPXQsdGhpcy53cy5zZW5kTWVzc2FnZShlKSx0fXdhaXRTdGF0dXMoZSl7cmV0dXJuIG5ldyBHaCgoKHQsaSk9Pntjb25zdCBuPXdpbmRvdy5zZXRUaW1lb3V0KCgoKT0+e2kobmV3IHliKFJ5LlRJTUVPVVQsXCJ3YWl0IHN0YXR1cyB0aW1lb3V0LCBzdGF0dXM6IFwiLmNvbmNhdChlKSkpfSksNWUzKTt0aGlzLm9uY2UoZSwocj0+e3dpbmRvdy5jbGVhclRpbWVvdXQobiksci5zdGF0ZSYmMCE9PXIuc3RhdGU/aShuZXcgeWIoUnkuQ1JPU1NfQ0hBTk5FTF9XQUlUX1NUQVRVU19FUlJPUixcIndhaXQgc3RhdHVzIGVycm9yLCBzdGF0dXM6IFwiLmNvbmNhdChlKSkpOnQodm9pZCAwKX0pKSx0aGlzLm9uY2UoXCJkaXNwb3NlXCIsKCgpPT57d2luZG93LmNsZWFyVGltZW91dChuKSxpKG5ldyB5YihSeS5XU19BQk9SVCkpfSkpfSkpfWFzeW5jIHJlcXVlc3QoZSl7aWYoXCJjbG9zZWRcIj09PXRoaXMud3Muc3RhdGUpdGhyb3cgbmV3IHliKFJ5LldTX0RJU0NPTk5FQ1QpO2NvbnN0IHQ9KCk9Pm5ldyBHaCgoKGUsdCk9Pnt0aGlzLndzLm9uY2UoVXcuQ0xPU0VELCgoKT0+dChuZXcgeWIoUnkuV1NfQUJPUlQpKSkpLHRoaXMud3Mub25jZShVdy5DT05ORUNURUQsZSl9KSk7XCJjb25uZWN0ZWRcIiE9PXRoaXMud3Muc3RhdGUmJmF3YWl0IHQoKTtjb25zdCBpPXRoaXMuc2VuZE1lc3NhZ2UoZSksbj1uZXcgR2goKChlLHQpPT57Y29uc3Qgbj0oKT0+e3QobmV3IHliKFJ5LldTX0FCT1JUKSl9O3RoaXMud3Mub25jZShVdy5SRUNPTk5FQ1RJTkcsbiksdGhpcy53cy5vbmNlKFV3LkNMT1NFRCxuKSx0aGlzLm9uY2UoXCJyZXFfXCIuY29uY2F0KGkpLGUpLG1BKDNlMykudGhlbigoKCk9Pnt0aGlzLnJlbW92ZUFsbExpc3RlbmVycyhcInJlcV9cIi5jb25jYXQoaSkpLHRoaXMud3Mub2ZmKFV3LlJFQ09OTkVDVElORyxuKSx0aGlzLndzLm9mZihVdy5DTE9TRUQsbiksdChuZXcgeWIoUnkuVElNRU9VVCxcImNyb3NzIGNoYW5uZWwgd3MgcmVxdWVzdCB0aW1lb3V0XCIpKX0pKX0pKSxyPWF3YWl0IG47aWYoIXJ8fDIwMCE9PXIuY29kZSl0aHJvdyBuZXcgeWIoUnkuQ1JPU1NfQ0hBTk5FTF9TRVJWRVJfRVJST1JfUkVTUE9OU0UsXCJyZXNwb25zZTogXCIuY29uY2F0KEpTT04uc3RyaW5naWZ5KHIpKSk7cmV0dXJuIHJ9YXN5bmMgY29ubmVjdChlKXt0aGlzLndzLnJlbW92ZUFsbExpc3RlbmVycyhVdy5SRVFVRVNUX05FV19VUkxTKSx0aGlzLndzLm9uKFV3LlJFUVVFU1RfTkVXX1VSTFMsKHQ9Pnt0KGUpfSkpLGF3YWl0IHRoaXMud3MuaW5pdChlKX1kaXNwb3NlKCl7dGhpcy5jbGVhckhlYXJ0QmVhdENoZWNrKCksdGhpcy5lbWl0KFwiZGlzcG9zZVwiKSx0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpLHRoaXMud3MuY2xvc2UoKX1zZW5kUGluZyhlKXtjb25zdCB0PXRoaXMucmVxdWVzdElkKys7cmV0dXJuIGUucmVxdWVzdElkPXQsdGhpcy53cy5zZW5kTWVzc2FnZShlKSx0fXN0YXJ0SGVhcnRCZWF0Q2hlY2soKXt0aGlzLmhlYXJ0QmVhdFRpbWVyJiZ3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLmhlYXJ0QmVhdFRpbWVyKSx0aGlzLmhlYXJ0QmVhdFRpbWVyPXdpbmRvdy5zZXRJbnRlcnZhbCgoKCk9Pnt0aGlzLnNlbmRQaW5nKHtjb21tYW5kOlwicGluZ1wiLGFwcElkOnRoaXMuam9pbkluZm8uYXBwSWQsY25hbWU6dGhpcy5qb2luSW5mby5jbmFtZSx1aWQ6dGhpcy5qb2luSW5mby51aWQudG9TdHJpbmcoKSxzaWQ6dGhpcy5qb2luSW5mby5zaWQsdHM6K25ldyBEYXRlLHJlcXVlc3RJZDowfSl9KSwzZTMpfWNsZWFySGVhcnRCZWF0Q2hlY2soKXt3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLmhlYXJ0QmVhdFRpbWVyKSx0aGlzLmhlYXJ0QmVhdFRpbWVyPXZvaWQgMH19Y2xhc3MgRVkgZXh0ZW5kcyB4eXtzZXQgc3RhdGUoZSl7ZSE9PXRoaXMuX3N0YXRlJiYoZSE9PVh3LlJFTEFZX1NUQVRFX0ZBSUxVUkUmJih0aGlzLmVycm9yQ29kZT1Rdy5SRUxBWV9PSyksdGhpcy5lbWl0KFwic3RhdGVcIixlLHRoaXMuZXJyb3JDb2RlKSx0aGlzLl9zdGF0ZT1lKX1nZXQgc3RhdGUoKXtyZXR1cm4gdGhpcy5fc3RhdGV9Y29uc3RydWN0b3IoZSx0LGksbixyKXtzdXBlcigpLEZnKHRoaXMsXCJqb2luSW5mb1wiLHZvaWQgMCksRmcodGhpcyxcInNpZFwiLHZvaWQgMCksRmcodGhpcyxcImNsaWVudElkXCIsdm9pZCAwKSxGZyh0aGlzLFwiY2FuY2VsVG9rZW5cIixMdi5DYW5jZWxUb2tlbi5zb3VyY2UoKSksRmcodGhpcyxcIndvcmtlclRva2VuXCIsdm9pZCAwKSxGZyh0aGlzLFwicmVxdWVzdElkXCIsMCksRmcodGhpcyxcInNpZ25hbFwiLHZvaWQgMCksRmcodGhpcyxcInByZXZDaGFubmVsTWVkaWFDb25maWdcIix2b2lkIDApLEZnKHRoaXMsXCJodHRwUmV0cnlDb25maWdcIix2b2lkIDApLEZnKHRoaXMsXCJfcmVzb2x1dGlvblwiLHZvaWQgMCksRmcodGhpcyxcIl9zdGF0ZVwiLFh3LlJFTEFZX1NUQVRFX0lETEUpLEZnKHRoaXMsXCJlcnJvckNvZGVcIixRdy5SRUxBWV9PSyksRmcodGhpcyxcIm9uU3RhdHVzXCIsKGU9PntmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gQ2hhbm5lbE1lZGlhU3RhdHVzOiBcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KGUpKSksZSYmZS5jb21tYW5kJiYoXCJvbkF1ZGlvUGFja2V0UmVjZWl2ZWRcIj09PWUuY29tbWFuZCYmdGhpcy5lbWl0KFwiZXZlbnRcIixKdy5QQUNLRVRfUkVDRUlWRURfQVVESU9fRlJPTV9TUkMpLFwib25WaWRlb1BhY2tldFJlY2VpdmVkXCI9PT1lLmNvbW1hbmQmJnRoaXMuZW1pdChcImV2ZW50XCIsSncuUEFDS0VUX1JFQ0VJVkVEX1ZJREVPX0ZST01fU1JDKSxcIm9uU3JjVG9rZW5Qcml2aWxlZ2VEaWRFeHBpcmVcIj09PWUuY29tbWFuZCYmKHRoaXMuZXJyb3JDb2RlPVF3LlNSQ19UT0tFTl9FWFBJUkVELHRoaXMuc3RhdGU9WHcuUkVMQVlfU1RBVEVfRkFJTFVSRSksXCJvbkRlc3RUb2tlblByaXZpbGVnZURpZEV4cGlyZVwiPT09ZS5jb21tYW5kJiYodGhpcy5lcnJvckNvZGU9UXcuREVTVF9UT0tFTl9FWFBJUkVELHRoaXMuc3RhdGU9WHcuUkVMQVlfU1RBVEVfRkFJTFVSRSkpfSkpLEZnKHRoaXMsXCJvblJlY29ubmVjdFwiLChhc3luYygpPT57ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuY2xpZW50SWQsXCJdIENoYW5uZWxNZWRpYVNvY2tldCBkaXNjb25uZWN0LCByZWNvbm5lY3RpbmdcIikpLHRoaXMuZW1pdChcImV2ZW50XCIsSncuTkVUV09SS19ESVNDT05ORUNURUQpLHRoaXMuc3RhdGU9WHcuUkVMQVlfU1RBVEVfSURMRSx0aGlzLnByZXZDaGFubmVsTWVkaWFDb25maWcmJnRoaXMuc2VuZFN0YXJ0UmVsYXlNZXNzYWdlKHRoaXMucHJldkNoYW5uZWxNZWRpYUNvbmZpZykuY2F0Y2goKGU9Pnt0aGlzLnN0YXRlIT09WHcuUkVMQVlfU1RBVEVfSURMRSYmKGZiLmVycm9yKFwiYXV0byByZXN0YXJ0IGNoYW5uZWwgbWVkaWEgcmVsYXkgZmFpbGVkXCIsZS50b1N0cmluZygpKSx0aGlzLmVycm9yQ29kZT1Rdy5TRVJWRVJfQ09OTkVDVElPTl9MT1NULHRoaXMuc3RhdGU9WHcuUkVMQVlfU1RBVEVfRkFJTFVSRSl9KSl9KSksdGhpcy5qb2luSW5mbz1lLHRoaXMuY2xpZW50SWQ9dCx0aGlzLnNpZD1TQSgpLHRoaXMuc2lnbmFsPW5ldyBfWSh0aGlzLmpvaW5JbmZvLHRoaXMuY2xpZW50SWQsaSksdGhpcy5odHRwUmV0cnlDb25maWc9bix0aGlzLl9yZXNvbHV0aW9uPXJ9YXN5bmMgc3RhcnRDaGFubmVsTWVkaWFSZWxheShlKXtpZih0aGlzLnN0YXRlIT09WHcuUkVMQVlfU1RBVEVfSURMRSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04pO3RoaXMuc3RhdGU9WHcuUkVMQVlfU1RBVEVfQ09OTkVDVElORyxhd2FpdCB0aGlzLmNvbm5lY3QoKSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gc3RhcnRDaGFubmVsTWVkaWFSZWxheTogY29ubmVjdCBzdWNjZXNzXCIpKTt0cnl7YXdhaXQgdGhpcy5zZW5kU3RhcnRSZWxheU1lc3NhZ2UoZSl9Y2F0Y2goZSl7aWYoZS5kYXRhJiZlLmRhdGEuc2VydmVyUmVzcG9uc2UmJlwiU2V0U291cmNlQ2hhbm5lbFwiPT09ZS5kYXRhLnNlcnZlclJlc3BvbnNlLmNvbW1hbmQpdGhyb3cgbmV3IHliKFJ5LkNST1NTX0NIQU5ORUxfRkFJTEVEX0pPSU5fU1JDKTtpZihlLmRhdGEmJmUuZGF0YS5zZXJ2ZXJSZXNwb25zZSYmXCJTZXREZXN0Q2hhbm5lbFN0YXR1c1wiPT09ZS5zZXJ2ZXJSZXNwb25zZS5jb21tYW5kKXRocm93IG5ldyB5YihSeS5DUk9TU19DSEFOTkVMX0ZBSUxFRF9KT0lOX0RFU1QpO2lmKGUuZGF0YSYmZS5kYXRhLnNlcnZlclJlc3BvbnNlJiZcIlN0YXJ0UGFja2V0VHJhbnNmZXJcIj09PWUuc2VydmVyUmVzcG9uc2UuY29tbWFuZCl0aHJvdyBuZXcgeWIoUnkuQ1JPU1NfQ0hBTk5FTF9GQUlMRURfUEFDS0VUX1NFTlRfVE9fREVTVCk7dGhyb3cgZX10aGlzLnByZXZDaGFubmVsTWVkaWFDb25maWc9ZX1hc3luYyB1cGRhdGVDaGFubmVsTWVkaWFSZWxheShlKXtpZih0aGlzLnN0YXRlIT09WHcuUkVMQVlfU1RBVEVfUlVOTklORyl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04pO2F3YWl0IHRoaXMuc2VuZFVwZGF0ZU1lc3NhZ2UoZSksdGhpcy5wcmV2Q2hhbm5lbE1lZGlhQ29uZmlnPWV9YXN5bmMgc2V0VmlkZW9Qcm9maWxlKGUpe2lmKHRoaXMuX3Jlc29sdXRpb249ZSx0aGlzLnN0YXRlIT09WHcuUkVMQVlfU1RBVEVfUlVOTklORyl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04pO2NvbnN0IHQ9dGhpcy5nZW5NZXNzYWdlKHp3LlNldFZpZGVvUHJvZmlsZSk7YXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdCh0KSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gc3RhcnRDaGFubmVsTWVkaWFSZWxheTogc2V0VmlkZW9Qcm9maWxlIHN1Y2Nlc3NcIikpfWFzeW5jIHN0b3BDaGFubmVsTWVkaWFSZWxheSgpe2F3YWl0IHRoaXMuc2VuZFN0b3BSZWxheU1lc3NhZ2UoKSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gc3RvcENoYW5uZWxNZWRpYVJlbGF5OiBzZW5kIHN0b3AgbWVzc2FnZSBzdWNjZXNzXCIpKSx0aGlzLnN0YXRlPVh3LlJFTEFZX1NUQVRFX0lETEUsdGhpcy5kaXNwb3NlKCl9ZGlzcG9zZSgpe2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmNsaWVudElkLFwiXSBkaXNwb3NlQ2hhbm5lbE1lZGlhUmVsYXlcIikpLHRoaXMuY2FuY2VsVG9rZW4uY2FuY2VsKCksdGhpcy5jYW5jZWxUb2tlbj1Mdi5DYW5jZWxUb2tlbi5zb3VyY2UoKSx0aGlzLnN0YXRlPVh3LlJFTEFZX1NUQVRFX0lETEUsdGhpcy5lbWl0KFwiZGlzcG9zZVwiKSx0aGlzLnNpZ25hbC5kaXNwb3NlKCksdGhpcy5wcmV2Q2hhbm5lbE1lZGlhQ29uZmlnPXZvaWQgMH1hc3luYyBjb25uZWN0KCl7Y29uc3QgZT1hd2FpdCBReCh0aGlzLmpvaW5JbmZvLHRoaXMuY2FuY2VsVG9rZW4udG9rZW4sdGhpcy5odHRwUmV0cnlDb25maWcpO3RoaXMud29ya2VyVG9rZW49ZS53b3JrZXJUb2tlbixhd2FpdCB0aGlzLnNpZ25hbC5jb25uZWN0KGUuYWRkcmVzc0xpc3QpLHRoaXMuZW1pdChcImV2ZW50XCIsSncuTkVUV09SS19DT05ORUNURUQpLHRoaXMuc2lnbmFsLm9uKFwic3RhdHVzXCIsdGhpcy5vblN0YXR1cyksdGhpcy5zaWduYWwub24oXCJyZWNvbm5lY3RpbmdcIix0aGlzLm9uUmVjb25uZWN0KX1hc3luYyBzZW5kU3RhcnRSZWxheU1lc3NhZ2UoZSl7Y29uc3QgdD10aGlzLmdlbk1lc3NhZ2UoencuU3RvcFBhY2tldFRyYW5zZmVyKTthd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KHQpLGF3YWl0IHRoaXMuc2lnbmFsLndhaXRTdGF0dXMoXCJOb3JtYWwgUXVpdFwiKSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gc3RhcnRDaGFubmVsTWVkaWFSZWxheTogU3RvcFBhY2tldFRyYW5zZmVyIHN1Y2Nlc3NcIikpO2NvbnN0IGk9dGhpcy5nZW5NZXNzYWdlKHp3LlNldFNka1Byb2ZpbGUsZSk7YXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChpKSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gc3RhcnRDaGFubmVsTWVkaWFSZWxheTogU2V0U2RrUHJvZmlsZSBzdWNjZXNzXCIpKTtjb25zdCBuPXRoaXMuZ2VuTWVzc2FnZSh6dy5TZXRTb3VyY2VDaGFubmVsLGUpO2F3YWl0IHRoaXMuc2lnbmFsLnJlcXVlc3QobiksYXdhaXQgdGhpcy5zaWduYWwud2FpdFN0YXR1cyhcIlNldFNvdXJjZUNoYW5uZWxTdGF0dXNcIiksdGhpcy5lbWl0KFwiZXZlbnRcIixKdy5QQUNLRVRfSk9JTkVEX1NSQ19DSEFOTkVMKSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gc3RhcnRDaGFubmVsTWVkaWFSZWxheTogU2V0U291cmNlQ2hhbm5lbCBzdWNjZXNzXCIpKTtjb25zdCByPXRoaXMuZ2VuTWVzc2FnZSh6dy5TZXRTb3VyY2VVc2VySWQsZSk7YXdhaXQgdGhpcy5zaWduYWwucmVxdWVzdChyKSxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gc3RhcnRDaGFubmVsTWVkaWFSZWxheTogU2V0U291cmNlVXNlcklkIHN1Y2Nlc3NcIikpO2NvbnN0IG89dGhpcy5nZW5NZXNzYWdlKHp3LlNldERlc3RDaGFubmVsLGUpO2F3YWl0IHRoaXMuc2lnbmFsLnJlcXVlc3QobyksYXdhaXQgdGhpcy5zaWduYWwud2FpdFN0YXR1cyhcIlNldERlc3RDaGFubmVsU3RhdHVzXCIpLHRoaXMuZW1pdChcImV2ZW50XCIsSncuUEFDS0VUX0pPSU5FRF9ERVNUX0NIQU5ORUwpLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmNsaWVudElkLFwiXSBzdGFydENoYW5uZWxNZWRpYVJlbGF5OiBTZXREZXN0Q2hhbm5lbCBzdWNjZXNzXCIpKTtjb25zdCBzPXRoaXMuZ2VuTWVzc2FnZSh6dy5TdGFydFBhY2tldFRyYW5zZmVyLGUpO2F3YWl0IHRoaXMuc2lnbmFsLnJlcXVlc3QocyksdGhpcy5lbWl0KFwiZXZlbnRcIixKdy5QQUNLRVRfU0VOVF9UT19ERVNUX0NIQU5ORUwpLHRoaXMuc3RhdGU9WHcuUkVMQVlfU1RBVEVfUlVOTklORyxmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5jbGllbnRJZCxcIl0gc3RhcnRDaGFubmVsTWVkaWFSZWxheTogU3RhcnRQYWNrZXRUcmFuc2ZlciBzdWNjZXNzXCIpKSx0aGlzLnNldFZpZGVvUHJvZmlsZSh0aGlzLl9yZXNvbHV0aW9uKX1hc3luYyBzZW5kVXBkYXRlTWVzc2FnZShlKXtjb25zdCB0PXRoaXMuZ2VuTWVzc2FnZSh6dy5VcGRhdGVEZXN0Q2hhbm5lbCxlKTthd2FpdCB0aGlzLnNpZ25hbC5yZXF1ZXN0KHQpLHRoaXMuZW1pdChcImV2ZW50XCIsSncuUEFDS0VUX1VQREFURV9ERVNUX0NIQU5ORUwpLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLmNsaWVudElkLFwiXSBzZW5kVXBkYXRlTWVzc2FnZTogVXBkYXRlRGVzdENoYW5uZWwgc3VjY2Vzc1wiKSl9YXN5bmMgc2VuZFN0b3BSZWxheU1lc3NhZ2UoKXtjb25zdCBlPXRoaXMuZ2VuTWVzc2FnZSh6dy5TdG9wUGFja2V0VHJhbnNmZXIpO2F3YWl0IHRoaXMuc2lnbmFsLnJlcXVlc3QoZSksZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuY2xpZW50SWQsXCJdIHNlbmRTdG9wUmVsYXlNZXNzYWdlOiBTdG9wUGFja2V0VHJhbnNmZXIgc3VjY2Vzc1wiKSl9Z2VuTWVzc2FnZShlLHQpe2NvbnN0IGk9W10sbj1bXSxyPVtdO3RoaXMucmVxdWVzdElkKz0xO2NvbnN0IG89e2FwcElkOnRoaXMuam9pbkluZm8uYXBwSWQsY25hbWU6dGhpcy5qb2luSW5mby5jbmFtZSx1aWQ6dGhpcy5qb2luSW5mby51aWQudG9TdHJpbmcoKSxzZGtWZXJzaW9uOkdBLHNpZDp0aGlzLnNpZCx0czpEYXRlLm5vdygpLHJlcXVlc3RJZDp0aGlzLnJlcXVlc3RJZCxzZXE6dGhpcy5yZXF1ZXN0SWQsYWxsb2NhdGU6ITAsY2xpZW50UmVxdWVzdDp7fX07XCI0LjIyLjFcIj09PW8uc2RrVmVyc2lvbiYmKG8uc2RrVmVyc2lvbj1cIjAuMC4xXCIpO2xldCBzPW51bGwsYT1udWxsO3N3aXRjaChlKXtjYXNlIHp3LlNldFNka1Byb2ZpbGU6cmV0dXJuIG8uY2xpZW50UmVxdWVzdD17Y29tbWFuZDpcIlNldFNka1Byb2ZpbGVcIix0eXBlOlwibXVsdGlfY2hhbm5lbFwifSxvO2Nhc2UgencuU2V0U291cmNlQ2hhbm5lbDppZihhPXQmJnQuZ2V0U3JjQ2hhbm5lbE1lZGlhSW5mbygpLCFhKXRocm93IG5ldyB5YihSeS5VTkVYUEVDVEVEX0VSUk9SLFwiY2FuIG5vdCBmaW5kIHNvdXJjZSBjb25maWdcIik7cmV0dXJuIG8uY2xpZW50UmVxdWVzdD17Y29tbWFuZDpcIlNldFNvdXJjZUNoYW5uZWxcIix1aWQ6XCIwXCIsY2hhbm5lbE5hbWU6YS5jaGFubmVsTmFtZSx0b2tlbjphLnRva2VufHx0aGlzLmpvaW5JbmZvLmFwcElkfSxvO2Nhc2UgencuU2V0U291cmNlVXNlcklkOmlmKGE9dCYmdC5nZXRTcmNDaGFubmVsTWVkaWFJbmZvKCksIWEpdGhyb3cgbmV3IHliKFJ5LlVORVhQRUNURURfRVJST1IsXCJjYW4gbm90IGZpbmQgc291cmNlIGNvbmZpZ1wiKTtyZXR1cm4gby5jbGllbnRSZXF1ZXN0PXtjb21tYW5kOlwiU2V0U291cmNlVXNlcklkXCIsdWlkOmEudWlkK1wiXCJ9LG87Y2FzZSB6dy5TZXREZXN0Q2hhbm5lbDppZihzPXQmJnQuZ2V0RGVzdENoYW5uZWxNZWRpYUluZm8oKSwhcyl0aHJvdyBuZXcgeWIoUnkuVU5FWFBFQ1RFRF9FUlJPUixcImNhbiBub3QgZmluZCBkZXN0IGNvbmZpZ1wiKTtyZXR1cm4gcy5mb3JFYWNoKChlPT57aS5wdXNoKGUuY2hhbm5lbE5hbWUpLG4ucHVzaChlLnVpZCtcIlwiKSxyLnB1c2goZS50b2tlbnx8dGhpcy5qb2luSW5mby5hcHBJZCl9KSksby5jbGllbnRSZXF1ZXN0PXtjb21tYW5kOlwiU2V0RGVzdENoYW5uZWxcIixjaGFubmVsTmFtZTppLHVpZDpuLHRva2VuOnJ9LG87Y2FzZSB6dy5TdGFydFBhY2tldFRyYW5zZmVyOnJldHVybiBvLmNsaWVudFJlcXVlc3Q9e2NvbW1hbmQ6XCJTdGFydFBhY2tldFRyYW5zZmVyXCJ9LG87Y2FzZSB6dy5SZWNvbm5lY3Q6cmV0dXJuIG8uY2xpZW50UmVxdWVzdD17Y29tbWFuZDpcIlJlY29ubmVjdFwifSxvO2Nhc2UgencuU3RvcFBhY2tldFRyYW5zZmVyOnJldHVybiBvLmNsaWVudFJlcXVlc3Q9e2NvbW1hbmQ6XCJTdG9wUGFja2V0VHJhbnNmZXJcIn0sbztjYXNlIHp3LlVwZGF0ZURlc3RDaGFubmVsOmlmKHM9dCYmdC5nZXREZXN0Q2hhbm5lbE1lZGlhSW5mbygpLCFzKXRocm93IG5ldyB5YihSeS5VTkVYUEVDVEVEX0VSUk9SLFwiY2FuIG5vdCBmaW5kIGRlc3QgY29uZmlnXCIpO3JldHVybiBzLmZvckVhY2goKGU9PntpLnB1c2goZS5jaGFubmVsTmFtZSksbi5wdXNoKGUudWlkK1wiXCIpLHIucHVzaChlLnRva2VufHx0aGlzLmpvaW5JbmZvLmFwcElkKX0pKSxvLmNsaWVudFJlcXVlc3Q9e2NvbW1hbmQ6XCJVcGRhdGVEZXN0Q2hhbm5lbFwiLGNoYW5uZWxOYW1lOmksdWlkOm4sdG9rZW46cn0sbztjYXNlIHp3LlNldFZpZGVvUHJvZmlsZTpvLmNsaWVudFJlcXVlc3Q9e2NvbW1hbmQ6XCJTZXRWaWRlb1Byb2ZpbGVcIix3aWR0aDp0aGlzLl9yZXNvbHV0aW9uLndpZHRoLGhlaWdodDp0aGlzLl9yZXNvbHV0aW9uLmhlaWdodH19cmV0dXJuIG99fWNvbnN0IGZZPXtuYW1lOlwiQ2hhbm5lbE1lZGlhUmVsYXlcIixjcmVhdGU6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBFWShlLmpvaW5JbmZvLGUuY2xpZW50SWQsZS53ZWJzb2NrZXRSZXRyeUNvbmZpZ3x8UEEsZS5odHRwUmV0cnlDb25maWd8fFBBLGUucmVzb2x1dGlvbil9fTtmdW5jdGlvbiBtWShlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9ZnVuY3Rpb24gVFkoZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIGk9bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/bVkoT2JqZWN0KGkpLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtGZyhlLHQsaVt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpKSk6bVkoT2JqZWN0KGkpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KSl9KSl9cmV0dXJuIGV9Y2xhc3MgU1kgZXh0ZW5kcyB4eXtjb25zdHJ1Y3RvcihlLHQsaSxuKXtzdXBlcigpLEZnKHRoaXMsXCJzcGVjXCIsdm9pZCAwKSxGZyh0aGlzLFwidG9rZW5cIix2b2lkIDApLEZnKHRoaXMsXCJ3ZWJzb2NrZXRcIix2b2lkIDApLEZnKHRoaXMsXCJwaW5ncG9uZ1RpbWVyXCIsdm9pZCAwKSxGZyh0aGlzLFwicmVjb25uZWN0TW9kZVwiLFwicmV0cnlcIiksRmcodGhpcyxcInNlcnZpY2VNb2RlXCIsdm9pZCAwKSxGZyh0aGlzLFwicmVxSWRcIiwwKSxGZyh0aGlzLFwiY29tbWFuZFJlcUlkXCIsMCksRmcodGhpcyxcImhhbmRsZVdlYlNvY2tldE9wZW5cIiwoKCk9Pnt0aGlzLnJlY29ubmVjdE1vZGU9XCJyZXRyeVwiLHRoaXMuc3RhcnRQaW5nUG9uZygpfSkpLEZnKHRoaXMsXCJoYW5kbGVXZWJTb2NrZXRNZXNzYWdlXCIsKGU9PntpZighZS5kYXRhKXJldHVybjtjb25zdCB0PUpTT04ucGFyc2UoZS5kYXRhKTt0LnJlcXVlc3RJZD90aGlzLmVtaXQoXCJAXCIuY29uY2F0KHQucmVxdWVzdElkLFwiLVwiKS5jb25jYXQodC5zaWQpLHQpOih2Yi53b3JrZXJFdmVudCh0aGlzLnNwZWMuc2lkLHthY3Rpb25UeXBlOlwic3RhdHVzXCIsc2VydmVyQ29kZTp0LmNvZGUsd29ya2VyVHlwZTp0aGlzLnNlcnZpY2VNb2RlPT09RncuVFJBTlNDT0RFPzE6Mn0pLHRoaXMuZW1pdChIdy5QVUJMSVNIX1NUUkVBTV9TVEFUVVMsdCkpfSkpLHRoaXMuc3BlYz10LHRoaXMudG9rZW49ZSx0aGlzLnNlcnZpY2VNb2RlPW4sdGhpcy53ZWJzb2NrZXQ9bmV3IEhPKFwibGl2ZS1zdHJlYW1pbmdcIixpKSx0aGlzLndlYnNvY2tldC5vbihVdy5DT05ORUNURUQsdGhpcy5oYW5kbGVXZWJTb2NrZXRPcGVuKSx0aGlzLndlYnNvY2tldC5vbihVdy5PTl9NRVNTQUdFLHRoaXMuaGFuZGxlV2ViU29ja2V0TWVzc2FnZSksdGhpcy53ZWJzb2NrZXQub24oVXcuUkVRVUVTVF9ORVdfVVJMUywoKGUsdCk9PntaeSh0aGlzLEh3LlJFUVVFU1RfTkVXX0FERFJFU1MpLnRoZW4oZSkuY2F0Y2godCl9KSksdGhpcy53ZWJzb2NrZXQub24oVXcuUkVDT05ORUNUSU5HLCgoKT0+e3RoaXMud2Vic29ja2V0LnJlY29ubmVjdE1vZGU9dGhpcy5yZWNvbm5lY3RNb2RlfSkpfWluaXQoZSl7cmV0dXJuIHRoaXMud2Vic29ja2V0LmluaXQoZSl9YXN5bmMgcmVxdWVzdChlLHQsaSxuKXt0aGlzLnJlcUlkKz0xLFwicmVxdWVzdFwiPT09ZSYmKHRoaXMuY29tbWFuZFJlcUlkKz0xKTtjb25zdCByPXRoaXMuY29tbWFuZFJlcUlkLG89dGhpcy5yZXFJZDtpZighb3x8IXRoaXMud2Vic29ja2V0KXRocm93IG5ldyB5YihSeS5VTkVYUEVDVEVEX0VSUk9SKTtjb25zdCBzPVRZKHtjb21tYW5kOmUsc2RrVmVyc2lvbjpcIjQuMjIuMVwiPT09R0E/XCIwLjAuMVwiOkdBLHNlcTpvLHJlcXVlc3RJZDpvLGFsbG9jYXRlOmksY25hbWU6dGhpcy5zcGVjLmNuYW1lLGFwcElkOnRoaXMuc3BlYy5hcHBJZCxzaWQ6dGhpcy5zcGVjLnNpZCx1aWQ6dGhpcy5zcGVjLnVpZC50b1N0cmluZygpLHRzOk1hdGguZmxvb3IoRGF0ZS5ub3coKS8xZTMpfSx0KTtpZihcImNsb3NlZFwiPT09dGhpcy53ZWJzb2NrZXQuc3RhdGUpdGhyb3cgbmV3IHliKFJ5LldTX0RJU0NPTk5FQ1QpO2NvbnN0IGE9KCk9Pm5ldyBHaCgoKGUsdCk9Pnt0aGlzLndlYnNvY2tldC5vbmNlKFV3LkNMT1NFRCwoKCk9PnQobmV3IHliKFJ5LldTX0FCT1JUKSkpKSx0aGlzLndlYnNvY2tldC5vbmNlKFV3LkNPTk5FQ1RFRCxlKX0pKTtcImNvbm5lY3RlZFwiIT09dGhpcy53ZWJzb2NrZXQuc3RhdGUmJmF3YWl0IGEoKSxzLmNsaWVudFJlcXVlc3QmJihzLmNsaWVudFJlcXVlc3Qud29ya2VyVG9rZW49dGhpcy50b2tlbik7Y29uc3QgYz1uZXcgR2goKChlLHQpPT57Y29uc3QgaT0oKT0+e3QobmV3IHliKFJ5LldTX0FCT1JUKSl9O3RoaXMud2Vic29ja2V0Lm9uY2UoVXcuUkVDT05ORUNUSU5HLGkpLHRoaXMud2Vic29ja2V0Lm9uY2UoVXcuQ0xPU0VELGkpLHRoaXMub25jZShcIkBcIi5jb25jYXQobyxcIi1cIikuY29uY2F0KHRoaXMuc3BlYy5zaWQpLCh0PT57ZSh0KX0pKX0pKTtuJiZ2Yi53b3JrZXJFdmVudCh0aGlzLnNwZWMuc2lkLFRZKFRZKHt9LG4pLHt9LHtyZXF1ZXN0SWQ6cixhY3Rpb25UeXBlOlwicmVxdWVzdFwiLHBheWxvYWQ6SlNPTi5zdHJpbmdpZnkodC5jbGllbnRSZXF1ZXN0KSxzZXJ2ZXJDb2RlOjAsY29kZTowfSkpO2NvbnN0IGQ9RGF0ZS5ub3coKTt0aGlzLndlYnNvY2tldC5zZW5kTWVzc2FnZShzKTtsZXQgbD1udWxsO3RyeXtsPWF3YWl0IGN9Y2F0Y2gobil7aWYoXCJjbG9zZWRcIj09PXRoaXMud2Vic29ja2V0LnN0YXRlKXRocm93IG47cmV0dXJuIGF3YWl0IGEoKSxhd2FpdCB0aGlzLnJlcXVlc3QoZSx0LGkpfXJldHVybiBuJiZ2Yi53b3JrZXJFdmVudCh0aGlzLnNwZWMuc2lkLFRZKFRZKHt9LG4pLHt9LHtyZXF1ZXN0SWQ6cixhY3Rpb25UeXBlOlwicmVzcG9uc2VcIixwYXlsb2FkOkpTT04uc3RyaW5naWZ5KGwuc2VydmVyUmVzcG9uc2UpLHNlcnZlckNvZGU6bC5jb2RlLHN1Y2Nlc3M6MjAwPT09bC5jb2RlLHJlc3BvbnNlVGltZTpEYXRlLm5vdygpLWR9KSksMjAwIT09bC5jb2RlJiZ0aGlzLmhhbmRsZVJlc3BvbnNlRXJyb3IobCksbH10cnlOZXh0QWRkcmVzcygpe3RoaXMucmVjb25uZWN0TW9kZT1cInRyeU5leHRcIix0aGlzLndlYnNvY2tldC5yZWNvbm5lY3QoXCJ0cnlOZXh0XCIpfWNsb3NlKCl7Y29uc3QgZT1cIjQuMjIuMVwiPT09R0E/XCIwLjAuMVwiOkdBO3RoaXMucmVxSWQrPTEsXCJjb25uZWN0ZWRcIj09PXRoaXMud2Vic29ja2V0LnN0YXRlPyh0aGlzLndlYnNvY2tldC5zZW5kTWVzc2FnZSh7Y29tbWFuZDpcInJlcXVlc3RcIixhcHBJZDp0aGlzLnNwZWMuYXBwSWQsY25hbWU6dGhpcy5zcGVjLmNuYW1lLHVpZDp0aGlzLnNwZWMudWlkLnRvU3RyaW5nKCksc2RrVmVyc2lvbjplLHNpZDp0aGlzLnNwZWMuc2lkLHNlcTp0aGlzLnJlcUlkLHRzOk1hdGguZmxvb3IoRGF0ZS5ub3coKS8xZTMpLHJlcXVlc3RJZDp0aGlzLnJlcUlkLGNsaWVudFJlcXVlc3Q6e2NvbW1hbmQ6XCJEZXN0cm95V29ya2VyXCJ9fSksdGhpcy53ZWJzb2NrZXQuY2xvc2UoITEsITApKTp0aGlzLndlYnNvY2tldC5jbG9zZSghMSksdGhpcy5waW5ncG9uZ1RpbWVyJiYod2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy5waW5ncG9uZ1RpbWVyKSx0aGlzLnBpbmdwb25nVGltZXI9dm9pZCAwKX1oYW5kbGVSZXNwb25zZUVycm9yKGUpe3N3aXRjaChlLmNvZGUpe2Nhc2UgWXcuTElWRV9TVFJFQU1fUkVTUE9OU0VfQUxSRUFEWV9FWElTVFNfU1RSRUFNOnJldHVybiB2b2lkIGZiLndhcm5pbmcoXCJsaXZlIHN0cmVhbSByZXNwb25zZSBhbHJlYWR5IGV4aXN0cyBzdHJlYW1cIik7Y2FzZSBZdy5MSVZFX1NUUkVBTV9SRVNQT05TRV9UUkFOU0NPRElOR19QQVJBTUVURVJfRVJST1I6Y2FzZSBZdy5MSVZFX1NUUkVBTV9SRVNQT05TRV9CQURfU1RSRUFNOmNhc2UgWXcuTElWRV9TVFJFQU1fUkVTUE9OU0VfV01fUEFSQU1FVEVSX0VSUk9SOnJldHVybiBuZXcgeWIoUnkuTElWRV9TVFJFQU1JTkdfSU5WQUxJRF9BUkdVTUVOVCxcIlwiLHtjb2RlOmUuY29kZX0pLnRocm93KCk7Y2FzZSBZdy5MSVZFX1NUUkVBTV9SRVNQT05TRV9XTV9XT1JLRVJfTk9UX0VYSVNUOmlmKFwiVW5wdWJsaXNoU3RyZWFtXCI9PT1lLnNlcnZlclJlc3BvbnNlLmNvbW1hbmQpcmV0dXJuO3Rocm93IG5ldyB5YihSeS5MSVZFX1NUUkVBTUlOR19JTlRFUk5BTF9TRVJWRVJfRVJST1IsXCJsaXZlIHN0cmVhbSByZXNwb25zZSB3bSB3b3JrZXIgbm90IGV4aXN0XCIse3JldHJ5OiEwfSk7Y2FzZSBZdy5MSVZFX1NUUkVBTV9SRVNQT05TRV9OT1RfQVVUSE9SSVpFRDpyZXR1cm4gbmV3IHliKFJ5LkxJVkVfU1RSRUFNSU5HX1BVQkxJU0hfU1RSRUFNX05PVF9BVVRIT1JJWkVELFwiXCIse2NvZGU6ZS5jb2RlfSkudGhyb3coKTtjYXNlIFl3LkxJVkVfU1RSRUFNX1JFU1BPTlNFX0ZBSUxFRF9MT0FEX0lNQUdFOntjb25zdCB0PW5ldyB5YihSeS5MSVZFX1NUUkVBTUlOR19XQVJOX0ZBSUxFRF9MT0FEX0lNQUdFKTtyZXR1cm4gdGhpcy5lbWl0KEh3LldBUk5JTkcsdCxlLnNlcnZlclJlc3BvbnNlLnVybCl9Y2FzZSBZdy5MSVZFX1NUUkVBTV9SRVNQT05TRV9SRVFVRVNUX1RPT19PRlRFTjp7Y29uc3QgdD1uZXcgeWIoUnkuTElWRV9TVFJFQU1JTkdfV0FSTl9GUkVRVUVOVF9SRVFVRVNUKTtyZXR1cm4gdGhpcy5lbWl0KEh3LldBUk5JTkcsdCxlLnNlcnZlclJlc3BvbnNlLnVybCl9Y2FzZSBZdy5MSVZFX1NUUkVBTV9SRVNQT05TRV9OT1RfRk9VTkRfUFVCTElTSDp0aHJvdyBuZXcgeWIoUnkuTElWRV9TVFJFQU1JTkdfSU5URVJOQUxfU0VSVkVSX0VSUk9SLFwibGl2ZSBzdHJlYW0gcmVzcG9uc2Ugd20gd29ya2VyIG5vdCBleGlzdFwiLHtyZXRyeTohMH0pO2Nhc2UgWXcuTElWRV9TVFJFQU1fUkVTUE9OU0VfTk9UX1NVUFBPUlRFRDpyZXR1cm4gbmV3IHliKFJ5LkxJVkVfU1RSRUFNSU5HX1RSQU5TQ09ESU5HX05PVF9TVVBQT1JURUQsXCJcIix7Y29kZTplLmNvZGV9KS50aHJvdygpO2Nhc2UgWXcuTElWRV9TVFJFQU1fUkVTUE9OU0VfTUFYX1NUUkVBTV9OVU06e2NvbnN0IHQ9bmV3IHliKFJ5LkxJVkVfU1RSRUFNSU5HX1dBUk5fU1RSRUFNX05VTV9SRUFDSF9MSU1JVCk7cmV0dXJuIHRoaXMuZW1pdChIdy5XQVJOSU5HLHQsZS5zZXJ2ZXJSZXNwb25zZS51cmwpfWNhc2UgWXcuTElWRV9TVFJFQU1fUkVTUE9OU0VfSU5URVJOQUxfU0VSVkVSX0VSUk9SOnJldHVybiBuZXcgeWIoUnkuTElWRV9TVFJFQU1JTkdfSU5URVJOQUxfU0VSVkVSX0VSUk9SLFwiXCIse2NvZGU6ZS5jb2RlfSkudGhyb3coKTtjYXNlIFl3LkxJVkVfU1RSRUFNX1JFU1BPTlNFX1JFU09VUkNFX0xJTUlUOnRocm93IG5ldyB5YihSeS5MSVZFX1NUUkVBTUlOR19JTlRFUk5BTF9TRVJWRVJfRVJST1IsXCJsaXZlIHN0cmVhbSByZXNvdXJjZSBsaW1pdFwiLHtyZXRyeTohMCxjaGFuZ2VBZGRyZXNzOiEwfSk7Y2FzZSBZdy5MSVZFX1NUUkVBTV9SRVNQT05TRV9XT1JLRVJfTE9TVDpjYXNlIFl3LkxJVkVfU1RSRUFNX1JFU1BPTlNFX1dPUktFUl9RVUlUOmlmKFwiVW5wdWJsaXNoU3RyZWFtXCI9PT1lLnNlcnZlclJlc3BvbnNlLmNvbW1hbmQpcmV0dXJuO3Rocm93IG5ldyB5YihSeS5MSVZFX1NUUkVBTUlOR19JTlRFUk5BTF9TRVJWRVJfRVJST1IsXCJlcnJvciBmYWlsIHNlbmQgbWVzc2FnZVwiLHtyZXRyeTohMCxjaGFuZ2VBZGRyZXNzOiEwfSk7Y2FzZSBZdy5FUlJPUl9GQUlMX1NFTkRfTUVTU0FHRTppZihcIlVucHVibGlzaFN0cmVhbVwiPT09ZS5zZXJ2ZXJSZXNwb25zZS5jb21tYW5kKXJldHVybjtpZihcIlVwZGF0ZVRyYW5zY29kaW5nXCI9PT1lLnNlcnZlclJlc3BvbnNlLmNvbW1hbmR8fFwiQ29udHJvbFN0cmVhbVwiPT09ZS5zZXJ2ZXJSZXNwb25zZS5jb21tYW5kKXJldHVybiBuZXcgeWIoUnkuTElWRV9TVFJFQU1JTkdfSU5URVJOQUxfU0VSVkVSX0VSUk9SLFwiZXJyb3IgZmFpbCBzZW5kIG1lc3NhZ2VcIix7Y29kZTplLmNvZGV9KS50aHJvdygpO3Rocm93IG5ldyB5YihSeS5MSVZFX1NUUkVBTUlOR19JTlRFUk5BTF9TRVJWRVJfRVJST1IsXCJlcnJvciBmYWlsIHNlbmQgbWVzc2FnZVwiLHtyZXRyeTohMCxjaGFuZ2VBZGRyZXNzOiEwfSk7Y2FzZSBZdy5QVUJMSVNIX1NUUkVBTV9TVEFUVVNfRVJST1JfUFVCTElTSF9CUk9LRU46Y2FzZSBZdy5QVUJMSVNIX1NUUkVBTV9TVEFUVVNfRVJST1JfUlRNUF9DT05ORUNUOmNhc2UgWXcuUFVCTElTSF9TVFJFQU1fU1RBVFVTX0VSUk9SX1JUTVBfSEFORFNIQUtFOmNhc2UgWXcuUFVCTElTSF9TVFJFQU1fU1RBVFVTX0VSUk9SX1JUTVBfUFVCTElTSDpyZXR1cm4gbmV3IHliKFJ5LkxJVkVfU1RSRUFNSU5HX0NETl9FUlJPUixcIlwiLHtjb2RlOmUuY29kZX0pLnRocm93KCl9fXN0YXJ0UGluZ1BvbmcoKXt0aGlzLnBpbmdwb25nVGltZXImJndpbmRvdy5jbGVhckludGVydmFsKHRoaXMucGluZ3BvbmdUaW1lciksdGhpcy5waW5ncG9uZ1RpbWVyPXdpbmRvdy5zZXRJbnRlcnZhbCgoKCk9PntcImNvbm5lY3RlZFwiPT09dGhpcy53ZWJzb2NrZXQuc3RhdGUmJnRoaXMucmVxdWVzdChcInBpbmdcIix7fSkuY2F0Y2goZ0EpfSksNmUzKX19ZnVuY3Rpb24gZ1koZSx0KXt2YXIgaT1PYmplY3Qua2V5cyhlKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgbj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO3QmJihuPW4uZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHQpLmVudW1lcmFibGV9KSkpLGkucHVzaC5hcHBseShpLG4pfXJldHVybiBpfWZ1bmN0aW9uIFJZKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBpPW51bGwhPWFyZ3VtZW50c1t0XT9hcmd1bWVudHNbdF06e307dCUyP2dZKE9iamVjdChpKSwhMCkuZm9yRWFjaCgoZnVuY3Rpb24odCl7RmcoZSx0LGlbdF0pfSkpOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoaSkpOmdZKE9iamVjdChpKSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGksdCkpfSkpfXJldHVybiBlfWNsYXNzIENZIGV4dGVuZHMgeHl7Y29uc3RydWN0b3IoZSl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOlBBLGk9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOlBBO3N1cGVyKCksRmcodGhpcyxcIm9uTGl2ZVN0cmVhbVdhcm5pbmdcIix2b2lkIDApLEZnKHRoaXMsXCJvbkxpdmVTdHJlYW1FcnJvclwiLHZvaWQgMCksRmcodGhpcyxcInNwZWNcIix2b2lkIDApLEZnKHRoaXMsXCJyZXRyeVRpbWVvdXRcIiwxZTQpLEZnKHRoaXMsXCJjb25uZWN0aW9uXCIsdm9pZCAwKSxGZyh0aGlzLFwiaHR0cFJldHJ5Q29uZmlnXCIsdm9pZCAwKSxGZyh0aGlzLFwid3NSZXRyeUNvbmZpZ1wiLHZvaWQgMCksRmcodGhpcyxcInN0cmVhbWluZ1Rhc2tzXCIsbmV3IE1hcCksRmcodGhpcyxcImlzU3RhcnRpbmdTdHJlYW1pbmdUYXNrXCIsITEpLEZnKHRoaXMsXCJ0YXNrTXV0ZXhcIixuZXcgTkEoXCJsaXZlLXN0cmVhbWluZ1wiKSksRmcodGhpcyxcImNhbmNlbFRva2VuXCIsTHYuQ2FuY2VsVG9rZW4uc291cmNlKCkpLEZnKHRoaXMsXCJ0cmFuc2NvZGluZ0NvbmZpZ1wiLHZvaWQgMCksRmcodGhpcyxcInVhcFJlc3BvbnNlXCIsdm9pZCAwKSxGZyh0aGlzLFwibGFzdFRhc2tJZFwiLDEpLEZnKHRoaXMsXCJzdGF0dXNFcnJvclwiLG5ldyBNYXApLHRoaXMuc3BlYz1lLHRoaXMuaHR0cFJldHJ5Q29uZmlnPWksdGhpcy53c1JldHJ5Q29uZmlnPXR9YXN5bmMgc2V0VHJhbnNjb2RpbmdDb25maWcoZSl7Y29uc3QgdD1SWShSWSh7fSxXdyksZSk7NjYhPT10LnZpZGVvQ29kZWNQcm9maWxlJiY3NyE9PXQudmlkZW9Db2RlY1Byb2ZpbGUmJjEwMCE9PXQudmlkZW9Db2RlY1Byb2ZpbGUmJihmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zcGVjLmNsaWVudElkLFwiXSBzZXQgdHJhbnNjb2RpbmcgY29uZmlnLCBmaXggdmlkZW8gY29kZWMgcHJvZmlsZTogXCIpLmNvbmNhdCh0LnZpZGVvQ29kZWNQcm9maWxlLFwiIC0+IDEwMFwiKSksdC52aWRlb0NvZGVjUHJvZmlsZT0xMDApLHQudHJhbnNjb2RpbmdVc2Vyc3x8KHQudHJhbnNjb2RpbmdVc2Vycz10LnVzZXJDb25maWdzKSx0LnRyYW5zY29kaW5nVXNlcnMmJih0LnRyYW5zY29kaW5nVXNlcnM9dC50cmFuc2NvZGluZ1VzZXJzLm1hcCgoZT0+UlkoUlkoUlkoe30sQncpLGUpLHt9LHt6T3JkZXI6ZS56T3JkZXI/ZS56T3JkZXIrMToxfSkpKSksZnVuY3Rpb24oZSl7T3koZS53aWR0aCl8fHl5KGUud2lkdGgsXCJjb25maWcud2lkdGhcIiwwLDFlNCksT3koZS5oZWlnaHQpfHx5eShlLmhlaWdodCxcImNvbmZpZy5oZWlnaHRcIiwwLDFlNCksT3koZS52aWRlb0JpdHJhdGUpfHx5eShlLnZpZGVvQml0cmF0ZSxcImNvbmZpZy52aWRlb0JpdHJhdGVcIiwxLDFlNiksT3koZS52aWRlb0ZyYW1lUmF0ZSl8fHl5KGUudmlkZW9GcmFtZVJhdGUsXCJjb25maWcudmlkZW9GcmFtZVJhdGVcIiksT3koZS5sb3dMYXRlbmN5KXx8SXkoZS5sb3dMYXRlbmN5LFwiY29uZmlnLmxvd0xhdGVuY3lcIiksT3koZS5hdWRpb1NhbXBsZVJhdGUpfHx2eShlLmF1ZGlvU2FtcGxlUmF0ZSxcImNvbmZpZy5hdWRpb1NhbXBsZVJhdGVcIixbMzJlMyw0NDEwMCw0OGUzXSksT3koZS5hdWRpb0JpdHJhdGUpfHx5eShlLmF1ZGlvQml0cmF0ZSxcImNvbmZpZy5hdWRpb0JpdHJhdGVcIiwxLDEyOCksT3koZS5hdWRpb0NoYW5uZWxzKXx8dnkoZS5hdWRpb0NoYW5uZWxzLFwiY29uZmlnLmF1ZGlvQ2hhbm5lbHNcIixbMSwyLDMsNCw1XSksT3koZS52aWRlb0dvcCl8fHl5KGUudmlkZW9Hb3AsXCJjb25maWcudmlkZW9Hb3BcIiksT3koZS52aWRlb0NvZGVjUHJvZmlsZSl8fHZ5KGUudmlkZW9Db2RlY1Byb2ZpbGUsXCJjb25maWcudmlkZW9Db2RlY1Byb2ZpbGVcIixbNjYsNzcsMTAwXSksT3koZS51c2VyQ291bnQpfHx5eShlLnVzZXJDb3VudCxcImNvbmZpZy51c2VyQ291bnRcIiwwLDE3KSxPeShlLmJhY2tncm91bmRDb2xvcil8fHl5KGUuYmFja2dyb3VuZENvbG9yLFwiY29uZmlnLmJhY2tncm91bmRDb2xvclwiLDAsMTY3NzcyMTUpLE95KGUudXNlckNvbmZpZ0V4dHJhSW5mbyl8fGJ5KGUudXNlckNvbmZpZ0V4dHJhSW5mbyxcImNvbmZpZy51c2VyQ29uZmlnRXh0cmFJbmZvXCIsMCw0MDk2LCExKSxlLnRyYW5zY29kaW5nVXNlcnMmJiFPeShlLnRyYW5zY29kaW5nVXNlcnMpJiYod3koZS50cmFuc2NvZGluZ1VzZXJzLFwiY29uZmlnLnRyYW5zY29kaW5nVXNlcnNcIiksZS50cmFuc2NvZGluZ1VzZXJzLmZvckVhY2goKChlLHQpPT57VncoZS51aWQpLE95KGUueCl8fHl5KGUueCxcInRyYW5zY29kaW5nVXNlcltcIi5jb25jYXQodCxcIl0ueFwiKSwwLDFlNCksT3koZS55KXx8eXkoZS55LFwidHJhbnNjb2RpbmdVc2VyW1wiLmNvbmNhdCh0LFwiXS55XCIpLDAsMWU0KSxPeShlLndpZHRoKXx8eXkoZS53aWR0aCxcInRyYW5zY29kaW5nVXNlcltcIi5jb25jYXQodCxcIl0ud2lkdGhcIiksMCwxZTQpLE95KGUuaGVpZ2h0KXx8eXkoZS5oZWlnaHQsXCJ0cmFuc2NvZGluZ1VzZXJbXCIuY29uY2F0KHQsXCJdLmhlaWdodFwiKSwwLDFlNCksT3koZS56T3JkZXIpfHx5eShlLnpPcmRlci0xLFwidHJhbnNjb2RpbmdVc2VyW1wiLmNvbmNhdCh0LFwiXS56T3JkZXJcIiksMCwxMDApLE95KGUuYWxwaGEpfHx5eShlLmFscGhhLFwidHJhbnNjb2RpbmdVc2VyW1wiLmNvbmNhdCh0LFwiXS5hbHBoYVwiKSwwLDEsITEpfSkpKSxPeShlLndhdGVybWFyayl8fEd3KGUud2F0ZXJtYXJrLFwid2F0ZXJtYXJrXCIpLE95KGUuYmFja2dyb3VuZEltYWdlKXx8R3coZS5iYWNrZ3JvdW5kSW1hZ2UsXCJiYWNrZ3JvdW5kSW1hZ2VcIiksZS5pbWFnZXMmJiFPeShlLmltYWdlcykmJih3eShlLmltYWdlcyxcImNvbmZpZy5pbWFnZXNcIiksZS5pbWFnZXMuZm9yRWFjaCgoKGUsdCk9PntHdyhlLFwiaW1hZ2VzW1wiLmNvbmNhdCh0LFwiXVwiKSl9KSkpfSh0KTtjb25zdCBpPVtdO3QuaW1hZ2VzJiZpLnB1c2goLi4udC5pbWFnZXMubWFwKChlPT5SWShSWShSWSh7fSxqdyksZSkse30se3pPcmRlcjoyNTV9KSkpKSx0LmJhY2tncm91bmRJbWFnZSYmKGkucHVzaChSWShSWShSWSh7fSxqdyksdC5iYWNrZ3JvdW5kSW1hZ2UpLHt9LHt6T3JkZXI6MH0pKSxkZWxldGUgdC5iYWNrZ3JvdW5kSW1hZ2UpLHQud2F0ZXJtYXJrJiYoaS5wdXNoKFJZKFJZKFJZKHt9LGp3KSx0LndhdGVybWFyaykse30se3pPcmRlcjoyNTV9KSksZGVsZXRlIHQud2F0ZXJtYXJrKSx0LmltYWdlcz1pLHQudHJhbnNjb2RpbmdVc2VycyYmKHQudXNlckNvbmZpZ3M9dC50cmFuc2NvZGluZ1VzZXJzLm1hcCgoZT0+Ulkoe30sZSkpKSx0LnVzZXJDb3VudD10LnRyYW5zY29kaW5nVXNlcnMubGVuZ3RoLGRlbGV0ZSB0LnRyYW5zY29kaW5nVXNlcnMpO2NvbnN0IG49KHQudXNlckNvbmZpZ3N8fFtdKS5tYXAoKGU9PlwibnVtYmVyXCI9PXR5cGVvZiBlLnVpZD9HaC5yZXNvbHZlKGUudWlkKTpZeChlLnVpZCx0aGlzLnNwZWMsdGhpcy5jYW5jZWxUb2tlbi50b2tlbix0aGlzLmh0dHBSZXRyeUNvbmZpZykpKTtpZigoYXdhaXQgR2guYWxsKG4pKS5mb3JFYWNoKCgoZSxpKT0+e3QudXNlckNvbmZpZ3MmJnQudXNlckNvbmZpZ3NbaV0mJih0LnVzZXJDb25maWdzW2ldLnVpZD1lKX0pKSx0aGlzLnRyYW5zY29kaW5nQ29uZmlnPXQsdGhpcy5jb25uZWN0aW9uKXRyeXt2YXIgcjtjb25zdCBlPWF3YWl0IHRoaXMuY29ubmVjdGlvbi5yZXF1ZXN0KFwicmVxdWVzdFwiLHtjbGllbnRSZXF1ZXN0Ontjb21tYW5kOlwiVXBkYXRlVHJhbnNjb2RpbmdcIix0cmFuc2NvZGluZ0NvbmZpZzp0aGlzLnRyYW5zY29kaW5nQ29uZmlnfX0sITEse2NvbW1hbmQ6XCJVcGRhdGVUcmFuc2NvZGluZ1wiLHdvcmtlclR5cGU6MSxyZXF1ZXN0QnlVc2VyOiEwLHRpZDpBcnJheS5mcm9tKF9OKHI9dGhpcy5zdHJlYW1pbmdUYXNrcykuY2FsbChyKSkubWFwKChlPT5lLnRhc2tJZCkpLmpvaW4oXCIjXCIpfSk7ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3BlYy5jbGllbnRJZCxcIl0gdXBkYXRlIGxpdmUgdHJhbnNjb2RpbmcgY29uZmlnIHN1Y2Nlc3MsIGNvZGU6IFwiKS5jb25jYXQoZS5jb2RlLFwiLCBjb25maWc6XCIpLEpTT04uc3RyaW5naWZ5KHRoaXMudHJhbnNjb2RpbmdDb25maWcpKX1jYXRjaChlKXtpZighZS5kYXRhfHwhZS5kYXRhLnJldHJ5KXRocm93IGU7ZS5kYXRhLmNoYW5nZUFkZHJlc3MmJnRoaXMuY29ubmVjdGlvbi50cnlOZXh0QWRkcmVzcygpLHRoaXMuc3RyZWFtaW5nVGFza3MuZm9yRWFjaCgodD0+e2ZiLndhcm5pbmcoXCJbXCIuY29uY2F0KHRoaXMuc3BlYy5jbGllbnRJZCxcIl0gbGl2ZSBzdHJlYW1pbmcgcmVjZWl2ZSBlcnJvclwiKSxlLnRvU3RyaW5nKCksXCJ0cnkgdG8gcmVwdWJsaXNoXCIsdC51cmwpLHRoaXMuc3RhcnRMaXZlU3RyZWFtaW5nVGFzayh0LnVybCx0Lm1vZGUsZSkudGhlbigoKCk9PntmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zcGVjLmNsaWVudElkLFwiXSBsaXZlIHN0cmVhbWluZyByZXB1Ymxpc2ggXCIpLmNvbmNhdCh0LnVybCxcIiBzdWNjZXNzXCIpKX0pKS5jYXRjaCgoZT0+e2ZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLnNwZWMuY2xpZW50SWQsXCJdIGxpdmUgc3RyZWFtaW5nIHJlcHVibGlzaCBmYWlsZWRcIiksdC51cmwsZS50b1N0cmluZygpKSx0aGlzLm9uTGl2ZVN0cmVhbUVycm9yJiZ0aGlzLm9uTGl2ZVN0cmVhbUVycm9yKHQudXJsLGUpfSkpfSkpfX1hc3luYyBzdGFydExpdmVTdHJlYW1pbmdUYXNrKGUsdCxpKXtpZighdGhpcy50cmFuc2NvZGluZ0NvbmZpZyYmdD09PUZ3LlRSQU5TQ09ERSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9PUEVSQVRJT04sXCJbTGl2ZVN0cmVhbWluZ10gbm8gdHJhbnNjb2RpbmcgY29uZmlnIGZvdW5kLCBjYW4gbm90IHN0YXJ0IHRyYW5zY29kaW5nIHN0cmVhbWluZyB0YXNrXCIpO2NvbnN0IG49e2NvbW1hbmQ6XCJQdWJsaXNoU3RyZWFtXCIsdHM6RGF0ZS5ub3coKSx1cmw6ZSx1aWQ6dGhpcy5zcGVjLnVpZC50b1N0cmluZygpLGF1dG9EZXN0cm95VGltZToxMDAsYWNjZXB0SW1hZ2VUaW1lb3V0OiEwfTtmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5zcGVjLmNsaWVudElkLFwiXSBzdGFydCBsaXZlIHN0cmVhbWluZyBcIikuY29uY2F0KGUsXCIsIG1vZGU6IFwiKS5jb25jYXQodCkpO2NvbnN0IHI9YXdhaXQgdGhpcy50YXNrTXV0ZXgubG9jaygpO2lmKCF0aGlzLmNvbm5lY3Rpb24mJmkpcmV0dXJuIHZvaWQgcigpO2lmKHRoaXMuc3RyZWFtaW5nVGFza3MuZ2V0KGUpJiYhaSlyZXR1cm4gcigpLG5ldyB5YihSeS5MSVZFX1NUUkVBTUlOR19UQVNLX0NPTkZMSUNUKS50aHJvdygpO3RyeXt0aGlzLmNvbm5lY3Rpb258fCh0aGlzLmNvbm5lY3Rpb249YXdhaXQgdGhpcy5jb25uZWN0KHQpKX1jYXRjaChlKXt0aHJvdyByKCksZX1zd2l0Y2godCl7Y2FzZSBGdy5UUkFOU0NPREU6bi50cmFuc2NvZGluZ0NvbmZpZz1SWSh7fSx0aGlzLnRyYW5zY29kaW5nQ29uZmlnKTtjYXNlIEZ3LlJBVzp9dGhpcy51YXBSZXNwb25zZSYmdGhpcy51YXBSZXNwb25zZS52aWQmJihuLnZpZD10aGlzLnVhcFJlc3BvbnNlLnZpZCksdGhpcy5pc1N0YXJ0aW5nU3RyZWFtaW5nVGFzaz0hMDtjb25zdCBvPXRoaXMubGFzdFRhc2tJZCsrO3RyeXtjb25zdCBzPW5ldyBHaCgoKHQsbik9PnttQSh0aGlzLnJldHJ5VGltZW91dCkudGhlbigoKCk9PntpZihpKXJldHVybiBuKGkpO2NvbnN0IHQ9dGhpcy5zdGF0dXNFcnJvci5nZXQoZSk7cmV0dXJuIHQ/KHRoaXMuc3RhdHVzRXJyb3IuZGVsZXRlKGUpLG4odCkpOnZvaWQgMH0pKX0pKSxhPWF3YWl0IEdoLnJhY2UoW3RoaXMuY29ubmVjdGlvbi5yZXF1ZXN0KFwicmVxdWVzdFwiLHtjbGllbnRSZXF1ZXN0Om59LCEwLHt1cmw6ZSxjb21tYW5kOlwiUHVibGlzaFN0cmVhbVwiLHdvcmtlclR5cGU6dD09PUZ3LlRSQU5TQ09ERT8xOjIscmVxdWVzdEJ5VXNlcjohaSx0aWQ6by50b1N0cmluZygpfSksc10pO3RoaXMuaXNTdGFydGluZ1N0cmVhbWluZ1Rhc2s9ITEsZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3BlYy5jbGllbnRJZCxcIl0gbGl2ZSBzdHJlYW1pbmcgc3RhcnRlZCwgY29kZTogXCIpLmNvbmNhdChhLmNvZGUpKSx0aGlzLnN0cmVhbWluZ1Rhc2tzLnNldChlLHtjbGllbnRSZXF1ZXN0Om4sbW9kZTp0LHVybDplLHRhc2tJZDpvfSkscigpfWNhdGNoKG4pe2lmKHIoKSx0aGlzLmlzU3RhcnRpbmdTdHJlYW1pbmdUYXNrPSExLCFuLmRhdGF8fCFuLmRhdGEucmV0cnl8fGkpdGhyb3cgbjtyZXR1cm4gbi5kYXRhLmNoYW5nZUFkZHJlc3M/KHRoaXMuY29ubmVjdGlvbi50cnlOZXh0QWRkcmVzcygpLGF3YWl0IHRoaXMuc3RhcnRMaXZlU3RyZWFtaW5nVGFzayhlLHQsbikpOmF3YWl0IHRoaXMuc3RhcnRMaXZlU3RyZWFtaW5nVGFzayhlLHQsbil9fXN0b3BMaXZlU3RyZWFtaW5nVGFzayhlKXtyZXR1cm4gbmV3IEdoKCgodCxpKT0+e2NvbnN0IG49dGhpcy5zdHJlYW1pbmdUYXNrcy5nZXQoZSk7aWYoIW58fCF0aGlzLmNvbm5lY3Rpb24pcmV0dXJuIG5ldyB5YihSeS5VTkVYUEVDVEVEX0VSUk9SLFwiY2FuIG5vdCBmaW5kIHN0cmVhbWluZyB0YXNrIHRvIHN0b3BcIikudGhyb3coKTtjb25zdCByPW4ubW9kZTtuLmFib3J0VGFzaz0oKT0+e2ZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLnNwZWMuY2xpZW50SWQsXCJdIHN0b3AgbGl2ZSBzdHJlYW1pbmcgc3VjY2Vzcyh3b3JrZXIgZXhjZXB0aW9uKVwiKSksdGhpcy5zdHJlYW1pbmdUYXNrcy5kZWxldGUoZSksdCgpfSx0aGlzLmNvbm5lY3Rpb24ucmVxdWVzdChcInJlcXVlc3RcIix7Y2xpZW50UmVxdWVzdDp7Y29tbWFuZDpcIlVucHVibGlzaFN0cmVhbVwiLHVybDpuLnVybH19LCExLHt1cmw6ZSxjb21tYW5kOlwiVW5QdWJsaXNoU3RyZWFtXCIsd29ya2VyVHlwZTpyPT09RncuVFJBTlNDT0RFPzE6MixyZXF1ZXN0QnlVc2VyOiEwLHRpZDoodGhpcy5sYXN0VGFza0lkKyspLnRvU3RyaW5nKCl9KS50aGVuKChpPT57ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3BlYy5jbGllbnRJZCxcIl0gc3RvcCBsaXZlIHN0cmVhbWluZyBzdWNjZXNzLCBjb2RlOiBcIikuY29uY2F0KGkuY29kZSkpLHRoaXMuc3RyZWFtaW5nVGFza3MuZGVsZXRlKGUpLDA9PT10aGlzLnN0cmVhbWluZ1Rhc2tzLnNpemUmJih0aGlzLmNvbm5lY3Rpb24mJnRoaXMuY29ubmVjdGlvbi5jbG9zZSgpLHRoaXMuY29ubmVjdGlvbj12b2lkIDApLHQoKX0pKS5jYXRjaChpKX0pKX1yZXNldEFsbFRhc2soKXt2YXIgZTtjb25zdCB0PUFycmF5LmZyb20oX04oZT10aGlzLnN0cmVhbWluZ1Rhc2tzKS5jYWxsKGUpKTt0aGlzLnRlcm1pbmF0ZSgpO2Zvcihjb25zdCBlIG9mIHQpdGhpcy5zdGFydExpdmVTdHJlYW1pbmdUYXNrKGUudXJsLGUubW9kZSkuY2F0Y2goKHQ9Pnt0aGlzLm9uTGl2ZVN0cmVhbUVycm9yJiZ0aGlzLm9uTGl2ZVN0cmVhbUVycm9yKGUudXJsLHQpfSkpfXRlcm1pbmF0ZSgpe3RoaXMuY2FuY2VsVG9rZW4mJnRoaXMuY2FuY2VsVG9rZW4uY2FuY2VsKCksdGhpcy5zdHJlYW1pbmdUYXNrcz1uZXcgTWFwLHRoaXMuaXNTdGFydGluZ1N0cmVhbWluZ1Rhc2s9ITEsdGhpcy5zdGF0dXNFcnJvcj1uZXcgTWFwLHRoaXMuY2FuY2VsVG9rZW49THYuQ2FuY2VsVG9rZW4uc291cmNlKCksdGhpcy51YXBSZXNwb25zZT12b2lkIDAsdGhpcy5jb25uZWN0aW9uJiZ0aGlzLmNvbm5lY3Rpb24uY2xvc2UoKSx0aGlzLmNvbm5lY3Rpb249dm9pZCAwfWFzeW5jIGNvbm5lY3QoZSl7aWYodGhpcy5jb25uZWN0aW9uKXRocm93IG5ldyB5YihSeS5VTkVYUEVDVEVEX0VSUk9SLFwibGl2ZSBzdHJlYW1pbmcgY29ubmVjdGlvbiBoYXMgYWxyZWFkeSBjb25uZWN0ZWRcIik7Y29uc3QgdD1hd2FpdCBaeSh0aGlzLEt3LlJFUVVFU1RfV09SS0VSX01BTkFHRVJfTElTVCxlKTtyZXR1cm4gdGhpcy51YXBSZXNwb25zZT10LHRoaXMuY29ubmVjdGlvbj1uZXcgU1kodC53b3JrZXJUb2tlbix0aGlzLnNwZWMsdGhpcy53c1JldHJ5Q29uZmlnLGUpLHRoaXMuY29ubmVjdGlvbi5vbihIdy5XQVJOSU5HLCgoZSx0KT0+dGhpcy5vbkxpdmVTdHJlYW1XYXJuaW5nJiZ0aGlzLm9uTGl2ZVN0cmVhbVdhcm5pbmcodCxlKSkpLHRoaXMuY29ubmVjdGlvbi5vbihIdy5QVUJMSVNIX1NUUkVBTV9TVEFUVVMsKGU9PnRoaXMuaGFuZGxlUHVibGlzaFN0cmVhbVNlcnZlcihlKSkpLHRoaXMuY29ubmVjdGlvbi5vbihIdy5SRVFVRVNUX05FV19BRERSRVNTLCgodCxpKT0+e2lmKCF0aGlzLmNvbm5lY3Rpb24pcmV0dXJuIGkobmV3IHliKFJ5LlVORVhQRUNURURfRVJST1IsXCJjYW4gbm90IGdldCBuZXcgbGl2ZSBzdHJlYW1pbmcgYWRkcmVzcyBsaXN0XCIpKTtaeSh0aGlzLEt3LlJFUVVFU1RfV09SS0VSX01BTkFHRVJfTElTVCxlKS50aGVuKChlPT57dGhpcy51YXBSZXNwb25zZT1lLHQoZS5hZGRyZXNzTGlzdCl9KSkuY2F0Y2goaSl9KSksYXdhaXQgdGhpcy5jb25uZWN0aW9uLmluaXQodC5hZGRyZXNzTGlzdCksdGhpcy5jb25uZWN0aW9ufWhhbmRsZVB1Ymxpc2hTdHJlYW1TZXJ2ZXIoZSl7Y29uc3QgdD1lLnNlcnZlclN0YXR1cyYmZS5zZXJ2ZXJTdGF0dXMudXJsfHxcImVtcHR5X3VybFwiLGk9dGhpcy5zdHJlYW1pbmdUYXNrcy5nZXQodCksbj1lLnJlYXNvbjtzd2l0Y2goZS5jb2RlKXtjYXNlIFl3LlBVQkxJU0hfU1RSRUFNX1NUQVRVU19FUlJPUl9QVUJMSVNIX0JST0tFTjpjYXNlIFl3LlBVQkxJU0hfU1RSRUFNX1NUQVRVU19FUlJPUl9SVE1QX0NPTk5FQ1Q6Y2FzZSBZdy5QVUJMSVNIX1NUUkVBTV9TVEFUVVNfRVJST1JfUlRNUF9IQU5EU0hBS0U6Y2FzZSBZdy5QVUJMSVNIX1NUUkVBTV9TVEFUVVNfRVJST1JfUlRNUF9QVUJMSVNIOntjb25zdCBuPW5ldyB5YihSeS5MSVZFX1NUUkVBTUlOR19DRE5fRVJST1IsXCJcIix7Y29kZTplLmNvZGV9KTtpZihpKXJldHVybiBmYi5lcnJvcihuLnRvU3RyaW5nKCkpLHRoaXMub25MaXZlU3RyZWFtRXJyb3ImJnRoaXMub25MaXZlU3RyZWFtRXJyb3IodCxuKTtpZighdGhpcy5pc1N0YXJ0aW5nU3RyZWFtaW5nVGFzaylyZXR1cm47dGhpcy5zdGF0dXNFcnJvci5zZXQodCxuKX1jYXNlIFl3LkxJVkVfU1RSRUFNX1JFU1BPTlNFX0ZBSUxFRF9MT0FEX0lNQUdFOntjb25zdCBlPW5ldyB5YihSeS5MSVZFX1NUUkVBTUlOR19XQVJOX0ZBSUxFRF9MT0FEX0lNQUdFLG4pO3JldHVybiB0aGlzLm9uTGl2ZVN0cmVhbVdhcm5pbmcmJnRoaXMub25MaXZlU3RyZWFtV2FybmluZyh0LGUpfWNhc2UgWXcuTElWRV9TVFJFQU1fUkVTUE9OU0VfV09SS0VSX0xPU1Q6Y2FzZSBZdy5MSVZFX1NUUkVBTV9SRVNQT05TRV9XT1JLRVJfUVVJVDp7dmFyIHI7aWYoIXRoaXMuY29ubmVjdGlvbilyZXR1cm47dGhpcy5jb25uZWN0aW9uLnRyeU5leHRBZGRyZXNzKCk7Y29uc3QgdD1BcnJheS5mcm9tKF9OKHI9dGhpcy5zdHJlYW1pbmdUYXNrcykuY2FsbChyKSk7Zm9yKGNvbnN0IGkgb2YgdClpLmFib3J0VGFzaz9pLmFib3J0VGFzaygpOihmYi53YXJuaW5nKFwiW1wiLmNvbmNhdCh0aGlzLnNwZWMuY2xpZW50SWQsXCJdIHB1Ymxpc2ggc3RyZWFtIHN0YXR1cyBjb2RlXCIpLGUuY29kZSxcInRyeSB0byByZXB1Ymxpc2hcIixpLnVybCksdGhpcy5zdGFydExpdmVTdHJlYW1pbmdUYXNrKGkudXJsLGkubW9kZSxuZXcgeWIoUnkuTElWRV9TVFJFQU1JTkdfSU5URVJOQUxfU0VSVkVSX0VSUk9SLFwiXCIse2NvZGU6ZS5jb2RlfSkpLnRoZW4oKCgpPT57ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuc3BlYy5jbGllbnRJZCxcIl0gcmVwdWJsaXNoIGxpdmUgc3RyZWFtIHN1Y2Nlc3NcIiksaS51cmwpfSkpLmNhdGNoKChlPT57ZmIuZXJyb3IoZS50b1N0cmluZygpKSx0aGlzLm9uTGl2ZVN0cmVhbUVycm9yJiZ0aGlzLm9uTGl2ZVN0cmVhbUVycm9yKGkudXJsLGUpfSkpKTtyZXR1cm59fX1oYXNVcmwoZSl7cmV0dXJuIHRoaXMuc3RyZWFtaW5nVGFza3MuaGFzKGUpfX1jb25zdCBJWT17bmFtZTpcIkxpdmVTdHJlYW1pbmdcIixjcmVhdGU6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBDWShlLmpvaW5JbmZvLGUud2Vic29ja2V0UmV0cnlDb25maWd8fFBBLGUuaHR0cFJldHJ5Q29uZmlnfHxQQSl9fTtmdW5jdGlvbiB2WShlKXtsZXQgdD1NWSgpO3JldHVybiBmdW5jdGlvbihlLHQpe2xldCBpPWUuYXBwSWQ7dm9pZCAwIT09aSYmKEpZKHQsMTApLEdZKHQsaSkpO2xldCBuPWUuY2lkO3ZvaWQgMCE9PW4mJihKWSh0LDE2KSxKWSh0LG4pKTtsZXQgcj1lLmNuYW1lO3ZvaWQgMCE9PXImJihKWSh0LDI2KSxHWSh0LHIpKTtsZXQgbz1lLmRldmljZUlkO3ZvaWQgMCE9PW8mJihKWSh0LDM0KSxHWSh0LG8pKTtsZXQgcz1lLmVsYXBzZTt2b2lkIDAhPT1zJiYoSlkodCw0MCksWFkodCxzKSk7bGV0IGE9ZS5maWxlU2l6ZTt2b2lkIDAhPT1hJiYoSlkodCw0OCksWFkodCxMWShhKSkpO2xldCBjPWUuaGVpZ2h0O3ZvaWQgMCE9PWMmJihKWSh0LDU2KSxYWSh0LExZKGMpKSk7bGV0IGQ9ZS5qcGc7dm9pZCAwIT09ZCYmKEpZKHQsNjYpLEpZKHQsZC5sZW5ndGgpLGZ1bmN0aW9uKGUsdCl7bGV0IGk9RlkoZSx0Lmxlbmd0aCk7ZS5ieXRlcy5zZXQodCxpKX0odCxkKSk7bGV0IGw9ZS5uZXR3b3JrVHlwZTt2b2lkIDAhPT1sJiYoSlkodCw3MiksWFkodCxMWShsKSkpO2xldCB1PWUub3NUeXBlO3ZvaWQgMCE9PXUmJihKWSh0LDgwKSxYWSh0LExZKHUpKSk7bGV0IGg9ZS5yZXF1ZXN0SWQ7dm9pZCAwIT09aCYmKEpZKHQsOTApLEdZKHQsaCkpO2xldCBwPWUuc2RrVmVyc2lvbjt2b2lkIDAhPT1wJiYoSlkodCw5OCksR1kodCxwKSk7bGV0IF89ZS5zZXF1ZW5jZTt2b2lkIDAhPT1fJiYoSlkodCwxMDQpLFhZKHQsTFkoXykpKTtsZXQgRT1lLnNpZDt2b2lkIDAhPT1FJiYoSlkodCwxMTQpLEdZKHQsRSkpO2xldCBmPWUudGltZXN0YW1wO3ZvaWQgMCE9PWYmJihKWSh0LDEyMCksWFkodCxmKSk7bGV0IG09ZS51aWQ7dm9pZCAwIT09bSYmKEpZKHQsMTI4KSxKWSh0LG0pKTtsZXQgVD1lLnZpZDt2b2lkIDAhPT1UJiYoSlkodCwxMzYpLEpZKHQsVCkpO2xldCBTPWUud2lkdGg7dm9pZCAwIT09UyYmKEpZKHQsMTQ0KSxYWSh0LExZKFMpKSk7bGV0IGc9ZS5zZXJ2aWNlO3ZvaWQgMCE9PWcmJihKWSh0LDE1MiksSlkodCxnKSk7bGV0IFI9ZS5jYWxsYmFja0RhdGE7dm9pZCAwIT09UiYmKEpZKHQsMTYyKSxHWSh0LFIpKTtsZXQgQz1lLmpwZ0VuY3J5cHRpb247dm9pZCAwIT09QyYmKEpZKHQsMTY4KSxKWSh0LEMpKTtsZXQgST1lLnJlcXVlc3RUeXBlO3ZvaWQgMCE9PUkmJihKWSh0LDE3NiksSlkodCxJKSk7bGV0IHY9ZS5zY29yZVBvcm47dm9pZCAwIT09diYmKEpZKHQsMTg1KSxxWSh0LHYpKTtsZXQgeT1lLnNjb3JlU2V4eTt2b2lkIDAhPT15JiYoSlkodCwxOTMpLHFZKHQseSkpO2xldCBBPWUuc2NvcmVOZXV0cmFsO3ZvaWQgMCE9PUEmJihKWSh0LDIwMSkscVkodCxBKSk7bGV0IGI9ZS5zY2VuZTt2b2lkIDAhPT1iJiYoSlkodCwyMDgpLEpZKHQsYikpO2xldCB3PWUub3NzRmlsZVByZWZpeDt2b2lkIDAhPT13JiYoSlkodCwyMTgpLEdZKHQsdykpO2xldCBPPWUuc2VydmljZVZlbmRvcjtpZih2b2lkIDAhPT1PKWZvcihsZXQgZSBvZiBPKXtKWSh0LDIyNik7bGV0IGk9TVkoKTtiWShlLGkpLEpZKHQsaS5saW1pdCksV1kodCxpKSxVWShpKX19KGUsdCksZnVuY3Rpb24oZSl7bGV0IHQ9ZS5ieXRlcyxpPWUubGltaXQ7cmV0dXJuIHQubGVuZ3RoPT09aT90OnQuc3ViYXJyYXkoMCxpKX0odCl9ZnVuY3Rpb24geVkoZSl7cmV0dXJuIGZ1bmN0aW9uKGUpe2xldCB0PXt9O2U6Zm9yKDshVlkoZSk7KXtsZXQgaT16WShlKTtzd2l0Y2goaT4+PjMpe2Nhc2UgMDpicmVhayBlO2Nhc2UgMTp0LmNvZGU9elkoZSk7YnJlYWs7Y2FzZSAyOnQubXNnPWpZKGUselkoZSkpO2JyZWFrO2Nhc2UgMzp7bGV0IGk9d1koZSk7dC5kYXRhPUFZKGUpLGUubGltaXQ9aTticmVha31kZWZhdWx0Ok9ZKGUsNyZpKX19cmV0dXJuIHR9KHtieXRlczp0PWUsb2Zmc2V0OjAsbGltaXQ6dC5sZW5ndGh9KTt2YXIgdH1mdW5jdGlvbiBBWShlKXtsZXQgdD17fTtlOmZvcig7IVZZKGUpOyl7bGV0IGk9elkoZSk7c3dpdGNoKGk+Pj4zKXtjYXNlIDA6YnJlYWsgZTtjYXNlIDE6dC5yZXF1ZXN0SWQ9alkoZSx6WShlKSk7YnJlYWs7Y2FzZSAyOnQucmVxdWVzdFR5cGU9elkoZSk+Pj4wO2JyZWFrO2Nhc2UgMzp0LnNjb3JlUG9ybj1ZWShlKTticmVhaztjYXNlIDQ6dC5zY29yZVNleHk9WVkoZSk7YnJlYWs7Y2FzZSA1OnQuc2NvcmVOZXV0cmFsPVlZKGUpO2JyZWFrO2Nhc2UgNjp0LnJlcXVlc3RTY2VuZT16WShlKT4+PjA7YnJlYWs7Y2FzZSA3OnQuc2NlbmU9elkoZSk+Pj4wO2JyZWFrO2RlZmF1bHQ6T1koZSw3JmkpfX1yZXR1cm4gdH1mdW5jdGlvbiBiWShlLHQpe2xldCBpPWUuc2VydmljZTt2b2lkIDAhPT1pJiYoSlkodCw4KSxKWSh0LGkpKTtsZXQgbj1lLnZlbmRvcjt2b2lkIDAhPT1uJiYoSlkodCwxNiksSlkodCxuKSk7bGV0IHI9ZS50b2tlbjt2b2lkIDAhPT1yJiYoSlkodCwyNiksR1kodCxyKSk7bGV0IG89ZS5jYWxsYmFja1VybDt2b2lkIDAhPT1vJiYoSlkodCwzNCksR1kodCxvKSl9ZnVuY3Rpb24gd1koZSl7bGV0IHQ9elkoZSksaT1lLmxpbWl0O3JldHVybiBlLmxpbWl0PWUub2Zmc2V0K3QsaX1mdW5jdGlvbiBPWShlLHQpe3N3aXRjaCh0KXtjYXNlIDA6Zm9yKDsxMjgmSFkoZSk7KTticmVhaztjYXNlIDI6eFkoZSx6WShlKSk7YnJlYWs7Y2FzZSA1OnhZKGUsNCk7YnJlYWs7Y2FzZSAxOnhZKGUsOCk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJVbmltcGxlbWVudGVkIHR5cGU6IFwiK3QpfX1sZXQgTlk9bmV3IEZsb2F0MzJBcnJheSgxKTtuZXcgVWludDhBcnJheShOWS5idWZmZXIpO2xldCBEWT1uZXcgRmxvYXQ2NEFycmF5KDEpLFBZPW5ldyBVaW50OEFycmF5KERZLmJ1ZmZlcik7ZnVuY3Rpb24gTFkoZSl7cmV0dXJue2xvdzplfD0wLGhpZ2g6ZT4+MzEsdW5zaWduZWQ6ZT49MH19bGV0IGtZPVtdO2Z1bmN0aW9uIE1ZKCl7Y29uc3QgZT1rWS5wb3AoKTtyZXR1cm4gZT8oZS5vZmZzZXQ9ZS5saW1pdD0wLGUpOntieXRlczpuZXcgVWludDhBcnJheSg2NCksb2Zmc2V0OjAsbGltaXQ6MH19ZnVuY3Rpb24gVVkoZSl7a1kucHVzaChlKX1mdW5jdGlvbiB4WShlLHQpe2lmKGUub2Zmc2V0K3Q+ZS5saW1pdCl0aHJvdyBuZXcgRXJyb3IoXCJTa2lwIHBhc3QgbGltaXRcIik7ZS5vZmZzZXQrPXR9ZnVuY3Rpb24gVlkoZSl7cmV0dXJuIGUub2Zmc2V0Pj1lLmxpbWl0fWZ1bmN0aW9uIEZZKGUsdCl7bGV0IGk9ZS5ieXRlcyxuPWUub2Zmc2V0LHI9ZS5saW1pdCxvPW4rdDtpZihvPmkubGVuZ3RoKXtsZXQgdD1uZXcgVWludDhBcnJheSgyKm8pO3Quc2V0KGkpLGUuYnl0ZXM9dH1yZXR1cm4gZS5vZmZzZXQ9byxvPnImJihlLmxpbWl0PW8pLG59ZnVuY3Rpb24gQlkoZSx0KXtsZXQgaT1lLm9mZnNldDtpZihpK3Q+ZS5saW1pdCl0aHJvdyBuZXcgRXJyb3IoXCJSZWFkIHBhc3QgbGltaXRcIik7cmV0dXJuIGUub2Zmc2V0Kz10LGl9ZnVuY3Rpb24galkoZSx0KXtsZXQgaT1CWShlLHQpLG49U3RyaW5nLmZyb21DaGFyQ29kZSxyPWUuYnl0ZXMsbz1cIu+/vVwiLHM9XCJcIjtmb3IobGV0IGU9MDtlPHQ7ZSsrKXtsZXQgYSxjLGQsbCx1PXJbZStpXTswPT0oMTI4JnUpP3MrPW4odSk6MTkyPT0oMjI0JnUpP2UrMT49dD9zKz1vOihhPXJbZStpKzFdLDEyOCE9KDE5MiZhKT9zKz1vOihsPSgzMSZ1KTw8Nnw2MyZhLGw8MTI4P3MrPW86KHMrPW4obCksZSsrKSkpOjIyND09KDI0MCZ1KT9lKzI+PXQ/cys9bzooYT1yW2UraSsxXSxjPXJbZStpKzJdLDMyODk2IT0oNDkzNDQmKGF8Yzw8OCkpP3MrPW86KGw9KDE1JnUpPDwxMnwoNjMmYSk8PDZ8NjMmYyxsPDIwNDh8fGw+PTU1Mjk2JiZsPD01NzM0Mz9zKz1vOihzKz1uKGwpLGUrPTIpKSk6MjQwPT0oMjQ4JnUpP2UrMz49dD9zKz1vOihhPXJbZStpKzFdLGM9cltlK2krMl0sZD1yW2UraSszXSw4NDIxNTA0IT0oMTI2MzIyNTYmKGF8Yzw8OHxkPDwxNikpP3MrPW86KGw9KDcmdSk8PDE4fCg2MyZhKTw8MTJ8KDYzJmMpPDw2fDYzJmQsbDw2NTUzNnx8bD4xMTE0MTExP3MrPW86KGwtPTY1NTM2LHMrPW4oNTUyOTYrKGw+PjEwKSw1NjMyMCsoMTAyMyZsKSksZSs9MykpKTpzKz1vfXJldHVybiBzfWZ1bmN0aW9uIEdZKGUsdCl7bGV0IGk9dC5sZW5ndGgsbj0wO2ZvcihsZXQgZT0wO2U8aTtlKyspe2xldCByPXQuY2hhckNvZGVBdChlKTtyPj01NTI5NiYmcjw9NTYzMTkmJmUrMTxpJiYocj0ocjw8MTApK3QuY2hhckNvZGVBdCgrK2UpLTU2NjEzODg4KSxuKz1yPDEyOD8xOnI8MjA0OD8yOnI8NjU1MzY/Mzo0fUpZKGUsbik7bGV0IHI9RlkoZSxuKSxvPWUuYnl0ZXM7Zm9yKGxldCBlPTA7ZTxpO2UrKyl7bGV0IG49dC5jaGFyQ29kZUF0KGUpO24+PTU1Mjk2JiZuPD01NjMxOSYmZSsxPGkmJihuPShuPDwxMCkrdC5jaGFyQ29kZUF0KCsrZSktNTY2MTM4ODgpLG48MTI4P29bcisrXT1uOihuPDIwNDg/b1tyKytdPW4+PjYmMzF8MTkyOihuPDY1NTM2P29bcisrXT1uPj4xMiYxNXwyMjQ6KG9bcisrXT1uPj4xOCY3fDI0MCxvW3IrK109bj4+MTImNjN8MTI4KSxvW3IrK109bj4+NiY2M3wxMjgpLG9bcisrXT02MyZufDEyOCl9fWZ1bmN0aW9uIFdZKGUsdCl7bGV0IGk9RlkoZSx0LmxpbWl0KSxuPWUuYnl0ZXMscj10LmJ5dGVzO2ZvcihsZXQgZT0wLG89dC5saW1pdDtlPG87ZSsrKW5bZStpXT1yW2VdfWZ1bmN0aW9uIEhZKGUpe3JldHVybiBlLmJ5dGVzW0JZKGUsMSldfWZ1bmN0aW9uIEtZKGUsdCl7bGV0IGk9RlkoZSwxKTtlLmJ5dGVzW2ldPXR9ZnVuY3Rpb24gWVkoZSl7bGV0IHQ9QlkoZSw4KSxpPWUuYnl0ZXM7cmV0dXJuIFBZWzBdPWlbdCsrXSxQWVsxXT1pW3QrK10sUFlbMl09aVt0KytdLFBZWzNdPWlbdCsrXSxQWVs0XT1pW3QrK10sUFlbNV09aVt0KytdLFBZWzZdPWlbdCsrXSxQWVs3XT1pW3QrK10sRFlbMF19ZnVuY3Rpb24gcVkoZSx0KXtsZXQgaT1GWShlLDgpLG49ZS5ieXRlcztEWVswXT10LG5baSsrXT1QWVswXSxuW2krK109UFlbMV0sbltpKytdPVBZWzJdLG5baSsrXT1QWVszXSxuW2krK109UFlbNF0sbltpKytdPVBZWzVdLG5baSsrXT1QWVs2XSxuW2krK109UFlbN119ZnVuY3Rpb24gelkoZSl7bGV0IHQsaT0wLG49MDtkb3t0PUhZKGUpLGk8MzImJihufD0oMTI3JnQpPDxpKSxpKz03fXdoaWxlKDEyOCZ0KTtyZXR1cm4gbn1mdW5jdGlvbiBKWShlLHQpe2Zvcih0Pj4+PTA7dD49MTI4OylLWShlLDEyNyZ0fDEyOCksdD4+Pj03O0tZKGUsdCl9ZnVuY3Rpb24gWFkoZSx0KXtsZXQgaT10Lmxvdz4+PjAsbj0odC5sb3c+Pj4yOHx0LmhpZ2g8PDQpPj4+MCxyPXQuaGlnaD4+PjI0LG89MD09PXI/MD09PW4/aTwxNjM4ND9pPDEyOD8xOjI6aTwxPDwyMT8zOjQ6bjwxNjM4ND9uPDEyOD81OjY6bjwxPDwyMT83Ojg6cjwxMjg/OToxMCxzPUZZKGUsbyksYT1lLmJ5dGVzO3N3aXRjaChvKXtjYXNlIDEwOmFbcys5XT1yPj4+NyYxO2Nhc2UgOTphW3MrOF09OSE9PW8/MTI4fHI6MTI3JnI7Y2FzZSA4OmFbcys3XT04IT09bz9uPj4+MjF8MTI4Om4+Pj4yMSYxMjc7Y2FzZSA3OmFbcys2XT03IT09bz9uPj4+MTR8MTI4Om4+Pj4xNCYxMjc7Y2FzZSA2OmFbcys1XT02IT09bz9uPj4+N3wxMjg6bj4+PjcmMTI3O2Nhc2UgNTphW3MrNF09NSE9PW8/MTI4fG46MTI3Jm47Y2FzZSA0OmFbcyszXT00IT09bz9pPj4+MjF8MTI4Omk+Pj4yMSYxMjc7Y2FzZSAzOmFbcysyXT0zIT09bz9pPj4+MTR8MTI4Omk+Pj4xNCYxMjc7Y2FzZSAyOmFbcysxXT0yIT09bz9pPj4+N3wxMjg6aT4+PjcmMTI3O2Nhc2UgMTphW3NdPTEhPT1vPzEyOHxpOjEyNyZpfX1mdW5jdGlvbiBRWShlLHQpe3ZhciBpPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKG49bi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksaS5wdXNoLmFwcGx5KGksbil9cmV0dXJuIGl9Y29uc3QgWlk9bmV3IE1hcChbW1wibW9kZXJhdGlvblwiLDFdLFtcInN1cGVydmlzZVwiLDJdXSk7ZnVuY3Rpb24gJFkoZSl7cmV0dXJue2xvdzplfD0wLGhpZ2g6ZT4+MzEsdW5zaWduZWQ6ZT49MH19Y2xhc3MgZXEgZXh0ZW5kcyB4eXtnZXQgY29ubmVjdGlvblN0YXRlKCl7cmV0dXJuIHRoaXMuX2Nvbm5lY3Rpb25TdGF0ZX1zZXQgY29ubmVjdGlvblN0YXRlKGUpe2lmKHRoaXMuX2Nvbm5lY3Rpb25TdGF0ZT09PWUpcmV0dXJuO2NvbnN0IHQ9dGhpcy5fY29ubmVjdGlvblN0YXRlO3RoaXMuX2Nvbm5lY3Rpb25TdGF0ZT1lLHRoaXMuZW1pdChtTy5DT05ORUNUSU9OX1NUQVRFX0NIQU5HRSx0LGUpfWdldCBpbnNwZWN0VHlwZSgpe3JldHVybiB0aGlzLl9pbnNwZWN0VHlwZX1zZXQgaW5zcGVjdFR5cGUoZSl7dmFyIHQ7dGhpcy5faW5zcGVjdE1vZGU9Sm4odD1lLm1hcCgoZT0+WlkuZ2V0KGUpfHwwKSkpLmNhbGwodCwoKGUsdCk9PmUrdCkpLHRoaXMuX2luc3BlY3RUeXBlPWV9Z2V0IHF1YWxpdHkoKXtyZXR1cm4gdGhpcy5fcXVhbGl0eX1zZXQgcXVhbGl0eShlKXt0aGlzLl9xdWFsaXR5PWU+MT8xOmU8LjE/LjE6ZSx0aGlzLnF1YWxpdHlUaW1lciYmKHdpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5xdWFsaXR5VGltZXIpLHRoaXMucXVhbGl0eVRpbWVyPW51bGwpLHRoaXMuX3F1YWxpdHk+PTF8fCh0aGlzLnF1YWxpdHlUaW1lcj13aW5kb3cuc2V0VGltZW91dCgoKCk9Pnt0aGlzLnF1YWxpdHk9dGhpcy5fcXVhbGl0eS90aGlzLnF1YWxpdHlSYXRpb30pLDZlNCkpfWNvbnN0cnVjdG9yKGUpe3N1cGVyKCksRmcodGhpcyxcIm5hbWVcIixcIkFnb3JhUlRDVmlkZW9Db250ZW50SW5zcGVjdFwiKSxGZyh0aGlzLFwiX2Nvbm5lY3Rpb25TdGF0ZVwiLEVPLkNPTk5FQ1RJTkcpLEZnKHRoaXMsXCJfaW5uZXJDb25uZWN0aW9uU3RhdGVcIix2b2lkIDApLEZnKHRoaXMsXCJzZXF1ZW5jZVwiLDApLEZnKHRoaXMsXCJpbnNwZWN0U3RhcnRUaW1lXCIsdm9pZCAwKSxGZyh0aGlzLFwid29ya2VyTWFuYWdlckNvbm5lY3Rpb25cIix2b2lkIDApLEZnKHRoaXMsXCJ3b3JrZXJDb25uZWN0aW9uXCIsdm9pZCAwKSxGZyh0aGlzLFwid29ya2VyTWVzc2FnZUxlbmd0aExpbWl0XCIsdm9pZCAwKSxGZyh0aGlzLFwiaW5zcGVjdEludGVydmFsTWluaW11bVwiLHZvaWQgMCksRmcodGhpcyxcInF1YWxpdHlSYXRpb1wiLHZvaWQgMCksRmcodGhpcyxcIl9jb25uZWN0SW5mb1wiLHZvaWQgMCksRmcodGhpcyxcIl9jYW5jZWxUb2tlblNvdXJjZVwiLEx2LkNhbmNlbFRva2VuLnNvdXJjZSgpKSxGZyh0aGlzLFwiX3JldHJ5Q29uZmlnXCIsdm9pZCAwKSxGZyh0aGlzLFwid21TZXF1ZW5jZVwiLDApLEZnKHRoaXMsXCJpbnNwZWN0SW50ZXJ2YWxcIix2b2lkIDApLEZnKHRoaXMsXCJpbnNwZWN0VGltZXJcIixudWxsKSxGZyh0aGlzLFwib3NzRmlsZVByZWZpeFwiLHZvaWQgMCksRmcodGhpcyxcImV4dHJhSW5mb1wiLHZvaWQgMCksRmcodGhpcyxcIl9pbnNwZWN0VHlwZVwiLHZvaWQgMCksRmcodGhpcyxcIl9pbnNwZWN0TW9kZVwiLHZvaWQgMCksRmcodGhpcyxcIl9xdWFsaXR5XCIsMSksRmcodGhpcyxcInF1YWxpdHlUaW1lclwiLG51bGwpLEZnKHRoaXMsXCJfaW5zcGVjdElkXCIsdm9pZCAwKSxGZyh0aGlzLFwiX25lZWRXb3JrVXJsT25seVwiLCExKSxGZyh0aGlzLFwiaW5zcGVjdEltYWdlXCIsKCgpPT57aWYodGhpcy5jb25uZWN0aW9uU3RhdGUhPT1FTy5DT05ORUNURUQpdGhyb3cgbmV3IHliKFJ5Lk9QRVJBVElPTl9BQk9SVEVELFwiY29udGVudCBpbnNwZWN0IHNlcnZpY2UgY29ubmVjdGlvbiBzdGF0dXMgaXMgXCIuY29uY2F0KHRoaXMuY29ubmVjdGlvblN0YXRlKSk7dGhpcy5pbnNwZWN0VGltZXImJih3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLmluc3BlY3RUaW1lciksdGhpcy5pbnNwZWN0VGltZXI9bnVsbCksdGhpcy5pbnNwZWN0VGltZXI9d2luZG93LnNldEludGVydmFsKCgoKT0+e3RoaXMuY29ubmVjdGlvblN0YXRlPT09RU8uQ09OTkVDVEVEP3RoaXMucmVxdWVzdFRvSW5zcGVjdEltYWdlKCk6ZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2luc3BlY3RJZCxcIl0gSW5zcGVjdCBTdGF0ZSBpcyBub3QgY29ubmVjdGVkICwgXCIpLHRoaXMuY29ubmVjdGlvblN0YXRlKX0pLHRoaXMuaW5zcGVjdEludGVydmFsPHRoaXMuaW5zcGVjdEludGVydmFsTWluaW11bT90aGlzLmluc3BlY3RJbnRlcnZhbE1pbmltdW06dGhpcy5pbnNwZWN0SW50ZXJ2YWwpLHRoaXMucmVxdWVzdFRvSW5zcGVjdEltYWdlKCl9KSksdGhpcy5faW5zcGVjdElkPVRBKDUsXCJpbnNwZWN0LVwiKSx0aGlzLndvcmtlck1lc3NhZ2VMZW5ndGhMaW1pdD1YQShcIlZJREVPX0lOU1BFQ1RfV09SS0VSX01FU1NBR0VfTEVOR1RIX0xJTUlUXCIpLHRoaXMuaW5zcGVjdEludGVydmFsTWluaW11bT1YQShcIlZJREVPX0lOU1BFQ1RfSU5URVJWQUxfTUlOSU1VTVwiKSx0aGlzLnF1YWxpdHlSYXRpbz1YQShcIlZJREVPX0lOU1BFQ1RfUVVBTElUWV9SQVRJT1wiKSx0aGlzLmluc3BlY3RJbnRlcnZhbD1lLmludGVydmFsLHRoaXMub3NzRmlsZVByZWZpeD1lLm9zc0ZpbGVQcmVmaXgsdGhpcy5leHRyYUluZm89ZS5leHRyYUluZm8sdGhpcy5pbnNwZWN0VHlwZT1lLmluc3BlY3RUeXBlLHRoaXMuaW5zcGVjdFN0YXJ0VGltZT1OdW1iZXIoRGF0ZS5ub3coKSksdGhpcy53b3JrZXJNYW5hZ2VyQ29ubmVjdGlvbj1uZXcgSE8oXCJ3b3JrZXItbWFuYWdlci1cIit0aGlzLl9pbnNwZWN0SWQsUEEpLHRoaXMub24obU8uU1RBVEVfQ0hBTkdFLCgoZSx0KT0+e3RoaXMuX2lubmVyQ29ubmVjdGlvblN0YXRlPWUsZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2luc3BlY3RJZCxcIl0gSW5zcGVjdCBvcGVyYXRpb24gOlwiKS5jb25jYXQoZk9bZV0sXCIgXCIpLmNvbmNhdCh0fHxcIlwiKSl9KSksdGhpcy5oYW5kbGVXb3JrZXJNYW5hZ2VyRXZlbnRzKCksdGhpcy53b3JrZXJDb25uZWN0aW9uPW5ldyBITyhcIndvcmtlci1cIit0aGlzLl9pbnNwZWN0SWQsUEEpLHRoaXMuaGFuZGxlV29ya2VyRXZlbnRzKCl9YXN5bmMgaW5pdChlLHQpe3RoaXMuZW1pdChtTy5TVEFURV9DSEFOR0UsZk8uQ09OTkVDVF9BUCksdGhpcy5fY29ubmVjdEluZm89ZTtjb25zdCBpPXRoaXMuX2NhbmNlbFRva2VuU291cmNlLnRva2VuO3JldHVybiB0aGlzLl9yZXRyeUNvbmZpZz10LG5ldyBHaCgoKG4scik9Pnt0aGlzLm9uKG1PLkNPTk5FQ1RJT05fU1RBVEVfQ0hBTkdFLCgoZSx0KT0+e3Q9PT1FTy5DT05ORUNURUQmJm4oKX0pKSx0aGlzLnJlcXVlc3RBUChlLGksdCkudGhlbigoZT0+e3RoaXMuY29ubmVjdFdvcmtlck1hbmFnZXIoZSl9KSkuY2F0Y2goKGU9PntyKGUpfSkpfSkpfWFzeW5jIHJlcXVlc3RBUChlLHQsaSl7Y29uc3Qgbj1YQShcIldFQkNTX0RPTUFJTlwiKS5tYXAoKGU9PlwiaHR0cHM6Ly9cIi5jb25jYXQoZSxcIi9hcGkvdjFcIikpKSxyPWF3YWl0IGZ1bmN0aW9uKGUsdCxpLG4pe2xldHthcHBJZDpyLGFyZWFDb2RlOm8sY25hbWU6cyxzaWQ6YSx0b2tlbjpjLHVpZDpkfT10O0J4Kys7Y29uc3QgbD1cImltYWdlX21vZGVyYXRpb25fYXBpXCIsdT17c2VydmljZV9uYW1lOmwsanNvbl9ib2R5OkpTT04uc3RyaW5naWZ5KHthcHBJZDpyLGFyZWFDb2RlOm8sY25hbWU6cyxjb21tYW5kOlwiYWxsb2NhdGVFZGdlXCIscmVxdWVzdElkOkJ4LHNlcTpCeCxzaWQ6YSx0b2tlbjpjLHRzOkRhdGUubm93KCksdWlkOmQrXCJcIn0pfTtsZXQgaCxwLF89ZVswXTtyZXR1cm4ga0EoKGFzeW5jKCk9PntoPURhdGUubm93KCk7Y29uc3QgZT1hd2FpdCBUeChfLHtkYXRhOnUsY2FuY2VsVG9rZW46aSxoZWFkZXJzOntcIlgtUGFja2V0LVNlcnZpY2UtVHlwZVwiOlwiMFwiLFwiWC1QYWNrZXQtVVJJXCI6XCI2MVwifSxwYXJhbXM6e2FjdGlvbjpcIndydGNfZ2F0ZXdheVwifX0pO2lmKHA9RGF0ZS5ub3coKS1oLDAhPT1lLmNvZGUpe2NvbnN0IHQ9bmV3IHliKFJ5LlVORVhQRUNURURfUkVTUE9OU0UsXCJpbWFnZSBpbnNwZWN0IGFwIGVycm9yLCBjb2RlXCIrZS5jb2RlLHtyZXRyeTohMCxyZXNwb25zZVRpbWU6cH0pO3Rocm93IGZiLmVycm9yKHQudG9TdHJpbmcoKSksdH1jb25zdCB0PUpTT04ucGFyc2UoZS5qc29uX2JvZHkpO2lmKDIwMCE9PXQuY29kZSl7Y29uc3QgZT1uZXcgeWIoUnkuVU5FWFBFQ1RFRF9SRVNQT05TRSxcImltYWdlIGluc3BlY3QgYXAgZXJyb3IsIGNvZGU6IFwiLmNvbmNhdCh0LmNvZGUsXCIsIHJlYXNvbjogXCIpLmNvbmNhdCh0LnJlYXNvbikse2NvZGU6dC5jb2RlLHJlc3BvbnNlVGltZTpwfSk7dGhyb3cgZmIuZXJyb3IoZS50b1N0cmluZygpKSxlfWlmKCF0LnNlcnZlcnN8fCFBcnJheS5pc0FycmF5KHQuc2VydmVycyl8fDA9PT10LnNlcnZlcnMubGVuZ3RoKXtjb25zdCBlPW5ldyB5YihSeS5VTkVYUEVDVEVEX1JFU1BPTlNFLFwiaW1hZ2UgaW5zcGVjdCBhcCBlbXB0eSBzZXJ2ZXJcIix7Y29kZTp0LmNvZGUscmVzcG9uc2VUaW1lOnB9KTt0aHJvdyBmYi5lcnJvcihlLnRvU3RyaW5nKCkpLGV9Y29uc3Qgbj1YQShcIlZJREVPX0lOU1BFQ1RfV09SS0VSX01BTkFHRVJfSE9TVFwiKSxyPVhBKFwiVklERU9fSU5TUEVDVF9XT1JLRVJfTUFOQUdFUl9QT1JUXCIpO3JldHVybnthZGRyZXNzTGlzdDp0LnNlcnZlcnMubWFwKChlPT57bGV0e2FkZHJlc3M6dCx3c3M6aX09ZTtpZih0JiZpKXJldHVyblwid3NzOi8vXCIuY29uY2F0KHQucmVwbGFjZSgvXFwuL2csXCItXCIpLFwiLlwiKS5jb25jYXQobixcIjpcIikuY29uY2F0KHJ8fGkpfSkpLmZpbHRlcigoZT0+ISFlKSksd29ya2VyVG9rZW46dC53b3JrZXJUb2tlbix2aWQ6dC52aWQscmVzcG9uc2VUaW1lOnB9fSksKCh0LGkpPT4odmIuYXB3b3JrZXJFdmVudChhLHtzdWNjZXNzOiEwLHNjOjIwMCxzZXJ2aWNlTmFtZTpsLHJlc3BvbnNlRGV0YWlsOkpTT04uc3RyaW5naWZ5KHQuYWRkcmVzc0xpc3QpLGZpcnN0U3VjY2VzczowPT09aSxyZXNwb25zZVRpbWU6cCxzZXJ2ZXJJcDplW2klZS5sZW5ndGhdfSksITEpKSwoKHQsaSk9Pih2Yi5hcHdvcmtlckV2ZW50KGEse3N1Y2Nlc3M6ITEsc2M6dC5kYXRhJiZ0LmRhdGEuY29kZXx8MjAwLHNlcnZpY2VOYW1lOmwscmVzcG9uc2VUaW1lOnAsc2VydmVySXA6ZVtpJWUubGVuZ3RoXX0pLCEhKHQuY29kZSE9PVJ5Lk9QRVJBVElPTl9BQk9SVEVEJiZ0LmNvZGUhPT1SeS5VTkVYUEVDVEVEX1JFU1BPTlNFfHx0LmRhdGEmJnQuZGF0YS5yZXRyeSkmJihfPWVbKGkrMSklZS5sZW5ndGhdLCEwKSkpLG4pfShuLGUsdCxpKTt0aGlzLmVtaXQobU8uU1RBVEVfQ0hBTkdFLGZPLkFQX0NPTk5FQ1RFRCk7Y29uc3R7YWRkcmVzc0xpc3Q6b309cjtyZXR1cm4gdGhpcy53bVNlcXVlbmNlKyssb31hc3luYyBjb25uZWN0V29ya2VyTWFuYWdlcihlKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXSYmYXJndW1lbnRzWzFdO3RoaXMuX25lZWRXb3JrVXJsT25seT10LHRoaXMuZW1pdChtTy5TVEFURV9DSEFOR0UsZk8uQ09OTkVDVF9XT1JLRVJfTUFOQUdFUiksYXdhaXQgdGhpcy53b3JrZXJNYW5hZ2VyQ29ubmVjdGlvbi5pbml0KGUsMWU0KX1hc3luYyBjb25uZWN0V29ya2VyKGUpe2F3YWl0IHRoaXMud29ya2VyQ29ubmVjdGlvbi5pbml0KFtlXSl9aGFuZGxlV29ya2VyTWFuYWdlckV2ZW50cygpe3RoaXMud29ya2VyTWFuYWdlckNvbm5lY3Rpb24ub24oVXcuQ09OTkVDVEVELChhc3luYygpPT57dGhpcy5lbWl0KG1PLlNUQVRFX0NIQU5HRSxmTy5XT1JLRVJfTUFOQUdFUl9DT05ORUNURUQsdGhpcy53b3JrZXJNYW5hZ2VyQ29ubmVjdGlvbi51cmwpLHRoaXMud29ya2VyTWFuYWdlckNvbm5lY3Rpb24uc2VuZE1lc3NhZ2Uoe2FwcElkOnRoaXMuX2Nvbm5lY3RJbmZvLmFwcElkLGNuYW1lOnRoaXMuX2Nvbm5lY3RJbmZvLmNuYW1lLHVpZDp0aGlzLl9jb25uZWN0SW5mby51aWQrXCJcIixzZGtWZXJzaW9uOlwiNC4yMi4xXCIsc2lkOnRoaXMuX2Nvbm5lY3RJbmZvLnNpZCxzZXE6dGhpcy53bVNlcXVlbmNlLHRzOk51bWJlcihEYXRlLm5vdygpKSxyZXF1ZXN0SWQ6TWF0aC5mbG9vcigxZTEyKk1hdGgucmFuZG9tKCkpLGFsbG9jYXRlOiEwLGNsaWVudFJlcXVlc3Q6e2NvbW1hbmQ6XCJqb2luXCJ9fSwhMCl9KSksdGhpcy53b3JrZXJNYW5hZ2VyQ29ubmVjdGlvbi5vbihVdy5DTE9TRUQsKCgpPT57dGhpcy5faW5uZXJDb25uZWN0aW9uU3RhdGU8Zk8uR0VUX1dPUktFUl9NQU5BR0VSX1JFU1BPTlNFJiZmYi5kZWJ1ZyhcIltcIi5jb25jYXQodGhpcy5faW5zcGVjdElkLFwiXSBJbnNwZWN0IHdvcmtlciBtYW5hZ2VyIGlzIGNsb3NlZCBiZWZvcmUgY29ubmVjdGluZyB3b3JrZXJcIikpfSkpLHRoaXMud29ya2VyTWFuYWdlckNvbm5lY3Rpb24ub24oVXcuRkFJTEVELCgoKT0+e3RoaXMuX2lubmVyQ29ubmVjdGlvblN0YXRlPGZPLkdFVF9XT1JLRVJfTUFOQUdFUl9SRVNQT05TRSYmZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2luc3BlY3RJZCxcIl0gQ29ubmVjdGluZyBpbnNwZWN0IHdvcmtlciBtYW5hZ2VyIGlzIGZhaWxlZCBiZWZvcmUgY29ubmVjdGluZyB3b3JrZXJcIikpfSkpLHRoaXMud29ya2VyTWFuYWdlckNvbm5lY3Rpb24ub24oVXcuUkVDT05ORUNUSU5HLCgoKT0+e3RoaXMuX2lubmVyQ29ubmVjdGlvblN0YXRlPGZPLkdFVF9XT1JLRVJfTUFOQUdFUl9SRVNQT05TRSYmZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2luc3BlY3RJZCxcIl0gSW5zcGVjdCB3b3JrZXIgbWFuYWdlciBpcyByZWNvbm5lY3RpbmcgYmVmb3JlIGNvbm5lY3Rpbmcgd29ya2VyXCIpKX0pKSx0aGlzLndvcmtlck1hbmFnZXJDb25uZWN0aW9uLm9uKFV3Lk9OX01FU1NBR0UsKGFzeW5jIGU9Pnt0aGlzLmVtaXQobU8uU1RBVEVfQ0hBTkdFLGZPLkdFVF9XT1JLRVJfTUFOQUdFUl9SRVNQT05TRSk7Y29uc3QgdD10aGlzLndvcmtlck1hbmFnZXJDb25uZWN0aW9uLnVybDt0aGlzLndvcmtlck1hbmFnZXJDb25uZWN0aW9uLmNsb3NlKCk7Y29uc3QgaT1KU09OLnBhcnNlKGUuZGF0YSk7aWYoMjAwIT09aS5jb2RlKXRocm93IGZiLmVycm9yKFwiW1wiLmNvbmNhdCh0aGlzLl9pbnNwZWN0SWQsXCJdIFVuZXhwZWN0ZWQgY29kZSBcIikuY29uY2F0KGkuY29kZSxcIiBmcm9tIHdvcmtlciBtYW5hZ2VyXCIpKSxuZXcgeWIoUnkuVU5FWFBFQ1RFRF9SRVNQT05TRSxcInJlc3BvbnNlIGNvZGUgb2Ygd29ya2VyIGlzIHVuZXhwZWN0ZWRcIixpKTtpZighKGkuc2VydmVyUmVzcG9uc2UmJmkuc2VydmVyUmVzcG9uc2UucG9ydFdzcyYmdCkpdGhyb3cgZmIuZXJyb3IoXCJbXCIuY29uY2F0KHRoaXMuX2luc3BlY3RJZCxcIl0gVW5leHBlY3RlZCBjb250ZW50IGZyb20gd29ya2VyIG1hbmFnZXIgOiBcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KGkpKSksbmV3IHliKFJ5LlVORVhQRUNURURfUkVTUE9OU0UsXCJyZXNwb25zZSBjb250ZW50IG9mIHdvcmtlciBpcyB1bmV4cGVjdGVkXCIsaSk7e2NvbnN0IGU9WEEoXCJWSURFT19JTlNQRUNUX1dPUktFUl9QT1JUXCIpfHxpLnNlcnZlclJlc3BvbnNlLnBvcnRXc3Msbj10LnJlcGxhY2UoLzpcXGQrXFwvPyQvLFwiOlwiLmNvbmNhdChlKSk7dGhpcy5lbWl0KG1PLlNUQVRFX0NIQU5HRSxmTy5DT05ORUNUX1dPUktFUixuKSx0aGlzLl9uZWVkV29ya1VybE9ubHk/dGhpcy5lbWl0KG1PLlJFUVVFU1RfTkVXX1dPUktFUl9VUkwsbik6YXdhaXQgdGhpcy5jb25uZWN0V29ya2VyKG4pfX0pKSx0aGlzLndvcmtlck1hbmFnZXJDb25uZWN0aW9uLm9uKFV3LldJTExfUkVDT05ORUNULCgoZSx0LGkpPT57aShlKX0pKSx0aGlzLndvcmtlck1hbmFnZXJDb25uZWN0aW9uLm9uKFV3LlJFUVVFU1RfTkVXX1VSTFMsKChlLHQpPT57dGhpcy5yZXF1ZXN0QVAodGhpcy5fY29ubmVjdEluZm8sdGhpcy5fY2FuY2VsVG9rZW5Tb3VyY2UudG9rZW4sdGhpcy5fcmV0cnlDb25maWcpLnRoZW4oZSkuY2F0Y2godCl9KSl9aGFuZGxlV29ya2VyRXZlbnRzKCl7dGhpcy53b3JrZXJDb25uZWN0aW9uLm9uKFV3LkNPTk5FQ1RFRCwoYXN5bmMoKT0+e3RoaXMuZW1pdChtTy5TVEFURV9DSEFOR0UsZk8uV09SS0VSX0NPTk5FQ1RFRCx0aGlzLndvcmtlckNvbm5lY3Rpb24udXJsKSx0aGlzLmNvbm5lY3Rpb25TdGF0ZT1FTy5DT05ORUNURUR9KSksdGhpcy53b3JrZXJDb25uZWN0aW9uLm9uKFV3Lk9OX01FU1NBR0UsKGFzeW5jIGU9PntpZihlLmRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcil7Y29uc3QgaT15WShuZXcgVWludDhBcnJheShlLmRhdGEpKTtpZihYQShcIlNIT1dfVklERU9fSU5TUEVDVF9XT1JLRVJfTUVTU0FHRVwiKSYmZmIuZGVidWcoXCJbXCIuY29uY2F0KHRoaXMuX2luc3BlY3RJZCxcIl0gUmVzcG9uc2UgbWVzc2FnZSBmb3Igd29ya2VyIG9mIGluc3BlY3QgY29udGVudCBcIiksSlNPTi5zdHJpbmdpZnkoaSkpLDIwMD09PWkuY29kZSl7aWYoQXJyYXkuaXNBcnJheSh0aGlzLmluc3BlY3RUeXBlKSYmMT09PXRoaXMuaW5zcGVjdFR5cGUubGVuZ3RoJiZcInN1cGVydmlzZVwiPT09dGhpcy5pbnNwZWN0VHlwZVswXSlyZXR1cm4gdm9pZCB0aGlzLmVtaXQobU8uSU5TUEVDVF9SRVNVTFQsdm9pZCAwLHZvaWQgMCk7aWYoaS5kYXRhJiZpLmRhdGEuc2NvcmVQb3JuJiZpLmRhdGEuc2NvcmVTZXh5JiZpLmRhdGEuc2NvcmVOZXV0cmFsKXt2YXIgdDtjb25zdCBlPXtwb3JuOmkuZGF0YS5zY29yZVBvcm4sc2V4eTppLmRhdGEuc2NvcmVTZXh5LG5ldXRyYWw6aS5kYXRhLnNjb3JlTmV1dHJhbH0sbj1Kbih0PU9iamVjdC5rZXlzKGUpKS5jYWxsKHQsKCh0LGkpPT5lW3RdPmVbaV0/dDppKSxcInBvcm5cIikscj1PYmplY3Qua2V5cyhlKS5maW5kKChlPT5lPT09bikpO3RoaXMuZW1pdChtTy5JTlNQRUNUX1JFU1VMVCxyKX1lbHNlIHRoaXMuZW1pdChtTy5JTlNQRUNUX1JFU1VMVCx2b2lkIDAsbmV3IHliKFJ5LlVORVhQRUNURURfUkVTUE9OU0UsaS5jb2RlK1wiXCIsXCJUaGVyZSBpcyBhbiB1bmV4cGVjdGVkIGRhdGEgb24gbWVzc2FnZVwiKSl9ZWxzZSB0aGlzLmVtaXQobU8uSU5TUEVDVF9SRVNVTFQsdm9pZCAwLG5ldyB5YihSeS5VTkVYUEVDVEVEX1JFU1BPTlNFLGkuY29kZStcIlwiLGkubXNnKSl9ZWxzZSBmYi5lcnJvcihcIltcIi5jb25jYXQodGhpcy5faW5zcGVjdElkLFwiXSBVbmV4cGVjdGVkIG1lc3NhZ2UgdHlwZSBmcm9tIHdvcmtlclwiKSksdGhpcy5lbWl0KG1PLklOU1BFQ1RfUkVTVUxULHZvaWQgMCxuZXcgeWIoUnkuVU5FWFBFQ1RFRF9SRVNQT05TRSxcImludmFsaWQgd29ya2VyIG1lc3NhZ2UgdHlwZVwiKSl9KSksdGhpcy53b3JrZXJDb25uZWN0aW9uLm9uKFV3LkNMT1NFRCwoKCk9Pnt0aGlzLmNvbm5lY3Rpb25TdGF0ZT1FTy5DTE9TRUR9KSksdGhpcy53b3JrZXJDb25uZWN0aW9uLm9uKFV3LkZBSUxFRCwoKCk9Pnt0aGlzLmNvbm5lY3Rpb25TdGF0ZT1FTy5DTE9TRUR9KSksdGhpcy53b3JrZXJDb25uZWN0aW9uLm9uKFV3LlJFQ09OTkVDVElORywoKCk9Pnt0aGlzLmNvbm5lY3Rpb25TdGF0ZT10aGlzLmNvbm5lY3Rpb25TdGF0ZT09PUVPLkNPTk5FQ1RFRD9FTy5SRUNPTk5FQ1RJTkc6RU8uQ09OTkVDVElOR30pKSx0aGlzLndvcmtlckNvbm5lY3Rpb24ub24oVXcuV0lMTF9SRUNPTk5FQ1QsKChlLHQsaSk9PntcInJlY292ZXJcIj09PWUmJmkoZSksaShcInRyeU5leHRcIil9KSksdGhpcy53b3JrZXJDb25uZWN0aW9uLm9uKFV3LlJFUVVFU1RfTkVXX1VSTFMsKChlLHQpPT57dGhpcy53b3JrZXJNYW5hZ2VyQ29ubmVjdGlvbi5jbG9zZSgpLHRoaXMub25jZShtTy5SRVFVRVNUX05FV19XT1JLRVJfVVJMLCh0PT57ZShbdF0pfSkpLHRoaXMucmVxdWVzdEFQKHRoaXMuX2Nvbm5lY3RJbmZvLHRoaXMuX2NhbmNlbFRva2VuU291cmNlLnRva2VuLHRoaXMuX3JldHJ5Q29uZmlnKS50aGVuKChlPT57dGhpcy5jb25uZWN0V29ya2VyTWFuYWdlcihlLCEwKX0pKS5jYXRjaCgoZT0+e3QoZSl9KSl9KSl9YXN5bmMgcmVxdWVzdFRvSW5zcGVjdEltYWdlKCl7dGhpcy5zZXF1ZW5jZSsrO2NvbnN0IGU9ZUEodGhpcyxtTy5DTElFTlRfTE9DQUxfVklERU9fVFJBQ0spLHQ9e2FwcElkOnRoaXMuX2Nvbm5lY3RJbmZvLmFwcElkLGNuYW1lOnRoaXMuX2Nvbm5lY3RJbmZvLmNuYW1lLGNpZDp0aGlzLl9jb25uZWN0SW5mby5jaWQsc2lkOnRoaXMuX2Nvbm5lY3RJbmZvLnNpZCx1aWQ6dGhpcy5fY29ubmVjdEluZm8udWlkLHZpZDp0aGlzLl9jb25uZWN0SW5mby52aWR9O2lmKGUpe2lmKCFlLmlzUGxheWluZylyZXR1cm4gdm9pZCB0aGlzLmVtaXQobU8uSU5TUEVDVF9SRVNVTFQsdm9pZCAwLG5ldyB5YihSeS5JTlZBTElEX09QRVJBVElPTixcIk9ubHkgdGhlIHRyYWNrIGJlaW5nIHBsYXllZCBjYW4gYmUgaW5zcGVjdGVkXCIpKTtjb25zdCBpPWF3YWl0IHRoaXMuZ2VuZXJhdGVSZXF1ZXN0RGF0YShlLHQpO3RoaXMud29ya2VyQ29ubmVjdGlvbi5zZW5kTWVzc2FnZShpLCEwLCEwKX1lbHNlIHRoaXMuZW1pdChtTy5JTlNQRUNUX1JFU1VMVCx2b2lkIDAsbmV3IHliKFJ5LklOVkFMSURfT1BFUkFUSU9OLFwiT25seSB0aGUgdHJhY2sgYmVpbmcgcHVibGlzaGVkIGNhbiBiZSBpbnNwZWN0ZWRcIikpfWFzeW5jIGdlbmVyYXRlUmVxdWVzdERhdGEoZSx0KXtsZXR7YXBwSWQ6aSxjbmFtZTpuLGNpZDpyLHZpZDpvLHNpZDpzLHVpZDphfT10O2NvbnN0IGM9RGF0ZS5ub3coKSxkPWF3YWl0IGUuZ2V0Q3VycmVudEZyYW1lSW1hZ2UoXCJpbWFnZS9qcGVnXCIsdGhpcy5xdWFsaXR5KSxsPWF3YWl0IE9rKGQsaSxuKSx1PXRoaXMuc2VxdWVuY2UrXCItXCIrcitcIi1cIithK1wiLVwiK2MrXCItXCIrVEEoMTIsXCJcIiksaD17YXBwSWQ6aSxjaWQ6cixjbmFtZTpuLGRldmljZUlkOlwiXCIsZWxhcHNlOiRZKE51bWJlcihjLXRoaXMuaW5zcGVjdFN0YXJ0VGltZSkpLGZpbGVTaXplOmwuYnl0ZUxlbmd0aCxqcGdFbmNyeXB0aW9uOjIsaGVpZ2h0OmQuaGVpZ2h0LHdpZHRoOmQud2lkdGgsanBnOmwsbmV0d29ya1R5cGU6Nixvc1R5cGU6NyxyZXF1ZXN0SWQ6dSxzZGtWZXJzaW9uOlwiNC4yMi4xXCIsc2VxdWVuY2U6dGhpcy5zZXF1ZW5jZSxzaWQ6cyx0aW1lc3RhbXA6JFkoYyksdWlkOmEsdmlkOm8sc2VydmljZTp0aGlzLl9pbnNwZWN0TW9kZSxjYWxsYmFja0RhdGE6dGhpcy5leHRyYUluZm8sb3NzRmlsZVByZWZpeDp0aGlzLm9zc0ZpbGVQcmVmaXh9O3ZvaWQgMD09PXRoaXMuZXh0cmFJbmZvJiZkZWxldGUgaC5jYWxsYmFja0RhdGEsdm9pZCAwPT09dGhpcy5vc3NGaWxlUHJlZml4JiZkZWxldGUgaC5vc3NGaWxlUHJlZml4O2NvbnN0IHA9dlkoaCk7aWYocC5ieXRlTGVuZ3RoPHRoaXMud29ya2VyTWVzc2FnZUxlbmd0aExpbWl0KXtpZihYQShcIlNIT1dfVklERU9fSU5TUEVDVF9XT1JLRVJfTUVTU0FHRVwiKSl7Y29uc3QgZT1mdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgaT1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj9RWShPYmplY3QoaSksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0ZnKGUsdCxpW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGkpKTpRWShPYmplY3QoaSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihpLHQpKX0pKX1yZXR1cm4gZX0oe30saCk7ZGVsZXRlIGUuanBnLGZiLmRlYnVnKFwiW1wiLmNvbmNhdCh0aGlzLl9pbnNwZWN0SWQsXCJdIFJlcXVlc3QgbWVzc2FnZSBmb3Igd29ya2VyIG9mIGluc3BlY3QgY29udGVudCBcIiksSlNPTi5zdHJpbmdpZnkoZSkpfXJldHVybiBwfXtjb25zdCB0PXRoaXMucXVhbGl0eSp0aGlzLnF1YWxpdHlSYXRpbztyZXR1cm4gdGhpcy5xdWFsaXR5PXQsYXdhaXQgdGhpcy5nZW5lcmF0ZVJlcXVlc3REYXRhKGUse2FwcElkOmksY25hbWU6bixjaWQ6cix2aWQ6byxzaWQ6cyx1aWQ6YX0pfX1jbG9zZSgpe3RoaXMuX2NhbmNlbFRva2VuU291cmNlLmNhbmNlbCgpLHRoaXMuX2NhbmNlbFRva2VuU291cmNlPUx2LkNhbmNlbFRva2VuLnNvdXJjZSgpLHRoaXMud29ya2VyTWFuYWdlckNvbm5lY3Rpb24mJnRoaXMud29ya2VyTWFuYWdlckNvbm5lY3Rpb24uY2xvc2UoKSx0aGlzLndvcmtlckNvbm5lY3Rpb24mJnRoaXMud29ya2VyQ29ubmVjdGlvbi5jbG9zZSgpLHRoaXMuaW5zcGVjdFRpbWVyJiZ3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLmluc3BlY3RUaW1lciksdGhpcy5pbnNwZWN0VGltZXI9bnVsbCx0aGlzLmNvbm5lY3Rpb25TdGF0ZT1FTy5DTE9TRUQsdGhpcy5lbWl0KG1PLlNUQVRFX0NIQU5HRSxmTy5DTE9TRUQpfX1jb25zdCB0cT17bmFtZTpcIkNvbnRlbnRJbnNwZWN0XCIsY3JlYXRlOmZ1bmN0aW9uKGUpe2xldHtjb25maWc6dH09ZTtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoIWUpdGhyb3cgbmV3IHliKFJ5LklOVkFMSURfUEFSQU1TLFwiaW5zcGVjdENvbmZpZyBpcyBuZWNlc3NhcnkuXCIpO2lmKCFlLmluc3BlY3RUeXBlfHwhQXJyYXkuaXNBcnJheShlLmluc3BlY3RUeXBlKSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9QQVJBTVMsXCJpbnNwZWN0Q29uZmlnLmluc3BlY3RUeXBlIGlzIG5lY2Vzc2FyeSBhbmQgaXMgYW4gaW5zdGFuY2Ugb2YgQXJyYXkuXCIpO3tjb25zdCB0PVsuLi5uZXcgU2V0KGUuaW5zcGVjdFR5cGUpXTt0LmZvckVhY2goKGU9Pnt2YXIgdDtpZighRG4odD1bXCJzdXBlcnZpc2VcIixcIm1vZGVyYXRpb25cIl0pLmNhbGwodCxlKSl0aHJvdyBuZXcgeWIoUnkuSU5WQUxJRF9QQVJBTVMsXCJcIi5jb25jYXQoZSxcIiBpcyBub3QgYSB2YWxpZCBpbnNwZWN0IHR5cGUuXCIpKX0pKSxlLmluc3BlY3RUeXBlPXR9aWYoZSYmZS5leHRyYUluZm8mJmUuZXh0cmFJbmZvLmxlbmd0aD4xMDI0KXRocm93IG5ldyB5YihSeS5JTlZBTElEX1BBUkFNUyxcImluc3BlY3RDb25maWcuZXh0cmFJbmZvIGxlbmd0aCBjYW5ub3QgZXhjZWVkIDEwMjQgYnl0ZXNcIil9KHQpLG5ldyBlcSh0KX19O0pBKFwiUFJPQ0VTU19JRFwiLFwicHJvY2Vzcy1cIi5jb25jYXQoVEEoOCxcIlwiKSxcIi1cIikuY29uY2F0KFRBKDQsXCJcIiksXCItXCIpLmNvbmNhdChUQSg0LFwiXCIpLFwiLVwiKS5jb25jYXQoVEEoNCxcIlwiKSxcIi1cIikuY29uY2F0KFRBKDEyLFwiXCIpKSksZnVuY3Rpb24oKXtsZXQgZTt0cnl7ZT13aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ3ZWJzZGtfbmdfZ2xvYmFsX3BhcmFtZXRlclwiKX1jYXRjaChlKXtyZXR1cm4gdm9pZCBmYi5lcnJvcihcIkVycm9yIGxvYWRpbmcgc2RrIGNvbmZpZ1wiLGUubWVzc2FnZSl9aWYoZSl0cnl7Y29uc3QgdD1KU09OLnBhcnNlKHdpbmRvdy5hdG9iKGUpKSxpPURhdGUubm93KCk7ZmIuZGVidWcoXCJMb2FkaW5nIGdsb2JhbCBwYXJhbWV0ZXJzIGZyb20gY2FjaGVcIix0KSxPYmplY3Qua2V5cyh0KS5mb3JFYWNoKChlPT57aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHpBLGUpKXtjb25zdHt2YWx1ZTpuLGV4cGlyZXM6cn09dFtlXTtpZihyJiZyPD1pKXJldHVybjtRQVtlXT1uLHpBW2VdPW59fSkpfWNhdGNoKHQpe2ZiLmVycm9yKFwiRXJyb3IgbG9hZGluZyBtdXRhYmxlUGFyYW1zQ2FjaGU6IFwiLmNvbmNhdChlKSx0Lm1lc3NhZ2UpfX0oKSxBcnJheS5pc0FycmF5KFFBLkFSRUFTKSYmUUEuQVJFQVMubGVuZ3RoPjAmJmJ4KFFBLkFSRUFTLCEwKTtjb25zdCBpcT0oZSx0LGkpPT57ZmIuZGVidWcoXCJzZXRQYXJhbWV0ZXIga2V5OlwiLmNvbmNhdChlLFwiLCB2YWx1ZTpcIikuY29uY2F0KEpTT04uc3RyaW5naWZ5KHQpKSksSkEoZSx0LGkpfTtTQihmWSwhMSksU0IoSVksITEpLFNCKGtqLCExKSxTQih0cSwhMSksU0IocFksITEpO2NvbnN0IG5xPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9bmV3IHh5LGk9ZSxuPXtnZXRMaXN0ZW5lcnM6dC5nZXRMaXN0ZW5lcnMuYmluZCh0KSxvbjooZSxpKT0+KGZ1bmN0aW9uKGUsdCl7ZT09PVNPLlNFQ1VSSVRZX1BPTElDWV9WSU9MQVRJT04mJkxHKHQsITApfShlLGkpLHQub24uYmluZCh0KShlLGkpKSxhZGRMaXN0ZW5lcjp0LmFkZExpc3RlbmVyLmJpbmQodCksb25jZTp0Lm9uY2UuYmluZCh0KSxvZmY6dC5vZmYuYmluZCh0KSxyZW1vdmVBbGxMaXN0ZW5lcnM6dC5yZW1vdmVBbGxMaXN0ZW5lcnMuYmluZCh0KSxlbWl0OnQuZW1pdC5iaW5kKHQpLHNhZmVFbWl0OnQuc2FmZUVtaXQuYmluZCh0KX07cmV0dXJuIERHKERHKHt9LGkpLG4pfSh7X19UUkFDS19MSVNUX186X0wsVkVSU0lPTjpHQSxCVUlMRDpxQSxFU01fQlVORExFUjohMSxFU006ITAsVU1EOiExLERFVjohMSxzZXRQYXJhbWV0ZXI6aXEsZ2V0UGFyYW1ldGVyOlhBLGdldFN1cHBvcnRlZENvZGVjOmFzeW5jIGZ1bmN0aW9uKCl7bGV0IGU9e2F1ZGlvOltdLHZpZGVvOltdfTt0cnl7bGV0IHQ9bmV3IFJUQ1BlZXJDb25uZWN0aW9uO2NvbnN0IGk9YXdhaXQgYXN5bmMgZnVuY3Rpb24oZSl7bGV0IHQ7cmV0dXJuIFpQKCkuc3VwcG9ydFVuaWZpZWRQbGFuPyhlLmFkZFRyYW5zY2VpdmVyKFwidmlkZW9cIix7ZGlyZWN0aW9uOlwicmVjdm9ubHlcIn0pLGUuYWRkVHJhbnNjZWl2ZXIoXCJhdWRpb1wiLHtkaXJlY3Rpb246XCJyZWN2b25seVwifSksdD0oYXdhaXQgZS5jcmVhdGVPZmZlcigpKS5zZHApOnQ9KGF3YWl0IGUuY3JlYXRlT2ZmZXIoe29mZmVyVG9SZWNlaXZlQXVkaW86ITAsb2ZmZXJUb1JlY2VpdmVWaWRlbzohMH0pKS5zZHAsdH0odCk7aWYoIWkpcmV0dXJuIGU7dC5jbG9zZSgpLHQ9bnVsbCxlPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9e3ZpZGVvOltdLGF1ZGlvOltdfTtyZXR1cm4gZS5tYXRjaCgvIFZQOC9pKSYmdC52aWRlby5wdXNoKFwiVlA4XCIpLGUubWF0Y2goLyBWUDkvaSkmJnQudmlkZW8ucHVzaChcIlZQOVwiKSxlLm1hdGNoKC8gQVYxL2kpJiZ0LnZpZGVvLnB1c2goXCJBVjFcIiksZS5tYXRjaCgvIEgyNjQvaSkmJnQudmlkZW8ucHVzaChcIkgyNjRcIiksZS5tYXRjaCgvIEgyNjUvaSkmJnQudmlkZW8ucHVzaChcIkgyNjVcIiksZS5tYXRjaCgvIG9wdXMvaSkmJnQuYXVkaW8ucHVzaChcIk9QVVNcIiksZS5tYXRjaCgvIFBDTVUvaSkmJnQuYXVkaW8ucHVzaChcIlBDTVVcIiksZS5tYXRjaCgvIFBDTUEvaSkmJnQuYXVkaW8ucHVzaChcIlBDTUFcIiksZS5tYXRjaCgvIEc3MjIvaSkmJnQuYXVkaW8ucHVzaChcIkc3MjJcIiksdH0oaSl9Y2F0Y2goZSl7dGhyb3cgbmV3IHliKFJ5LkNSRUFURV9PRkZFUl9GQUlMRUQsZS50b1N0cmluZyYmZS50b1N0cmluZygpKS5wcmludCgpfXJldHVybiBlfSxjaGVja1N5c3RlbVJlcXVpcmVtZW50czpmdW5jdGlvbigpe2NvbnN0IGU9dmIucmVwb3J0QXBpSW52b2tlKG51bGwse25hbWU6QnkuQ0hFQ0tfU1lTVEVNX1JFUVVJUkVNRU5UUyxvcHRpb25zOltdLHRhZzpqeS5UUkFDRVJ9KTtsZXQgdD0hMTt0cnl7Y29uc3QgZT13aW5kb3cuUlRDUGVlckNvbm5lY3Rpb24saT1uYXZpZ2F0b3IubWVkaWFEZXZpY2VzJiZuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSxuPXdpbmRvdy5XZWJTb2NrZXQ7dD0hIShlJiZpJiZuKSx0JiZfeSgpJiZ0eSg3NSkmJihuZXcgZSkuY2xvc2UoKX1jYXRjaChlKXtyZXR1cm4gZmIuZXJyb3IoXCJjaGVjayBzeXN0ZW0gcmVxdWlyZW1lbnQgZmFpbGVkOiBcIixlKSwhMX1sZXQgaT0hMTtjb25zdCBuPUh2KCk7bi5uYW1lPT09QnYuQ0hST01FJiZOdW1iZXIobi52ZXJzaW9uKT49NTgmJihcIldlYktpdFwiIT09R3YuZW5naW5lLm5hbWV8fGZ1bmN0aW9uKCl7Y29uc3QgZT1IdigpO2lmKHp2KCkpe2lmKGUub3M9PT1Gdi5NQUNfT1MpcmV0dXJuITA7aWYoZS5vcz09PUZ2LklPUyl7Y29uc3QgZT1Hdi5vcy52ZXJzaW9uJiZHdi5vcy52ZXJzaW9uLnNwbGl0KFwiLlwiKTtpZihlJiYxND09PU51bWJlcihlWzBdKSYmZVsxXSYmTnVtYmVyKGVbMV0pPj0zKXJldHVybiEwO2lmKGUmJk51bWJlcihlWzBdKT4xNClyZXR1cm4hMH19cmV0dXJuITF9KCkpJiYoaT0hMCksKG4ubmFtZT09PUJ2LkZJUkVGT1gmJk51bWJlcihuLnZlcnNpb24pPj01Nnx8bi5uYW1lPT09QnYuT1BFUkEmJk51bWJlcihuLnZlcnNpb24pPj00NXx8bi5uYW1lPT09QnYuU0FGQVJJJiZOdW1iZXIobi52ZXJzaW9uKT49MTF8fFwiV2ViS2l0XCI9PT1uLm5hbWUmJigkdigpfHx1eSgpKSYmbi5vc1ZlcnNpb24mJk51bWJlcihuLm9zVmVyc2lvbi5zcGxpdChcIi5cIilbMF0pPj0xMXx8aHkoKXx8SHYoKS5uYW1lPT09QnYuUVEpJiYoaT0hMCksZmIuZGVidWcoXCJjaGVja1N5c3RlbVJlcXVpcmVtZW50cywgYXBpOlwiLHQsXCJicm93c2VyXCIsaSk7Y29uc3Qgcj10JiZpO3JldHVybiBlLm9uU3VjY2VzcyhyKSxyfSxnZXREZXZpY2VzOmZ1bmN0aW9uKGUpe3JldHVybiB1ay5lbnVtZXJhdGVEZXZpY2VzKCEwLCEwLGUpfSxnZXRNaWNyb3Bob25lczpmdW5jdGlvbihlKXtyZXR1cm4gdWsuZ2V0UmVjb3JkaW5nRGV2aWNlcyhlKX0sZ2V0Q2FtZXJhczpmdW5jdGlvbihlKXtyZXR1cm4gdWsuZ2V0Q2FtZXJhc0RldmljZXMoZSl9LGdldEVsZWN0cm9uU2NyZWVuU291cmNlczpuayxnZXRQbGF5YmFja0RldmljZXM6ZnVuY3Rpb24oZSl7cmV0dXJuIHVrLmdldFNwZWFrZXJzKGUpfSxjcmVhdGVDbGllbnQ6ZnVuY3Rpb24oKXt2YXIgZTtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e2NvZGVjOlwidnA4XCIsYXVkaW9Db2RlYzpcIm9wdXNcIixtb2RlOlwicnRjXCJ9O2NvbnN0IGk9dmIucmVwb3J0QXBpSW52b2tlKG51bGwse25hbWU6QnkuQ1JFQVRFX0NMSUVOVCxvcHRpb25zOlt0XSx0YWc6ankuVFJBQ0VSfSk7dHJ5eyFmdW5jdGlvbihlKXt2eShlLmNvZGVjLFwiY29uZmlnLmNvZGVjXCIsW1widnA4XCIsXCJ2cDlcIixcImF2MVwiLFwiaDI2NFwiLFwiaDI2NVwiXSksdnkoZS5tb2RlLFwiY29uZmlnLm1vZGVcIixbXCJydGNcIixcImxpdmVcIixcInAycFwiXSksdm9pZCAwIT09ZS5hdWRpb0NvZGVjJiZ2eShlLmF1ZGlvQ29kZWMsXCJjb25maWcuYXVkaW9Db2RlY1wiLFtcIm9wdXNcIixcInBjbXVcIixcInBjbWFcIixcImc3MjJcIl0pLHZvaWQgMCE9PWUucHJveHlTZXJ2ZXImJmJ5KGUucHJveHlTZXJ2ZXIsXCJjb25maWcucHJveHlTZXJ2ZXJcIiwxLDFlNCksdm9pZCAwIT09ZS50dXJuU2VydmVyJiZZeShlLnR1cm5TZXJ2ZXIpLHZvaWQgMCE9PWUuaHR0cFJldHJ5Q29uZmlnJiZHeShlLmh0dHBSZXRyeUNvbmZpZyksdm9pZCAwIT09ZS53ZWJzb2NrZXRSZXRyeUNvbmZpZyYmR3koZS53ZWJzb2NrZXRSZXRyeUNvbmZpZyl9KHQpfWNhdGNoKGUpe3Rocm93IGkub25FcnJvcihlKSxlfXJldHVybihyeSgxNiwwLCEwKXx8b3koMTYsMCwhMCkpJiYoXCJ2cDlcIj09PXQuY29kZWMmJih0LmNvZGVjPVwidnA4XCIsZmIuZGVidWcoXCJicm93c2VyIG5vdCBzdXBwb3J0IHZwOSwgZm9yY2UgdXNlIHZwOFwiKSksSkEoXCJVTlNVUFBPUlRFRF9WSURFT19DT0RFQ1wiLFtcInZwOVwiXSkpLHZvaWQgMD09PXQuYXVkaW9Db2RlYyYmKHQuYXVkaW9Db2RlYz1cIm9wdXNcIiksaS5vblN1Y2Nlc3MoKSxuZXcgdkcoSUcoSUcoe2ZvcmNlV2FpdEdhdGV3YXlSZXNwb25zZTohMH0sdCkse30se3JvbGU6RG4oZT1bXCJydGNcIixcInAycFwiXSkuY2FsbChlLHQubW9kZSk/XCJob3N0XCI6dC5yb2xlfHxcImF1ZGllbmNlXCJ9KSl9LGNyZWF0ZUNhbWVyYVZpZGVvVHJhY2s6YXN5bmMgZnVuY3Rpb24oKXtsZXQgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e307Y29uc3QgdD1YQShcIkNBTUVSQV9DQVBUVVJFX0NPTkZJR1wiKSxpPXZiLnJlcG9ydEFwaUludm9rZShudWxsLHt0YWc6ankuVFJBQ0VSLG5hbWU6QnkuQ1JFQVRFX0NBTV9WSURFT19UUkFDSyxvcHRpb25zOltHTCh7fSxlKSx0XX0pO3QmJihlLmVuY29kZXJDb25maWc9dCk7Y29uc3Qgbj1BayhlKSxyPVRBKDgsXCJ0cmFjay1jYW0tXCIpO2xldCBvPW51bGw7ZmIuaW5mbyhcInN0YXJ0IGNyZWF0ZSBjYW1lcmEgdmlkZW8gdHJhY2sgd2l0aCBjb25maWdcIixKU09OLnN0cmluZ2lmeShlKSxcInRyYWNrSWRcIixyKTt0cnl7bz0oYXdhaXQgYWsoe3ZpZGVvOm59LHIpKS5nZXRWaWRlb1RyYWNrcygpWzBdfHxudWxsfWNhdGNoKGUpe3Rocm93IGkub25FcnJvcihlKSxlfWlmKCFvKXtjb25zdCBlPW5ldyBDeShSeS5VTkVYUEVDVEVEX0VSUk9SLFwiY2FuIG5vdCBmaW5kIHRyYWNrIGluIG1lZGlhIHN0cmVhbVwiKTtyZXR1cm4gaS5vbkVycm9yKGUpLGUudGhyb3coZmIpfWUub3B0aW1pemF0aW9uTW9kZSYmZFUocixvLGUsZEwoZS5lbmNvZGVyQ29uZmlnKSk7Y29uc3Qgcz1uZXcgY1UobyxlLG4sZS5zY2FsYWJpbHR5TW9kZT91TChlLnNjYWxhYmlsdHlNb2RlKTp7bnVtU3BhdGlhbExheWVyczoxLG51bVRlbXBvcmFsTGF5ZXJzOjF9LGUub3B0aW1pemF0aW9uTW9kZSxyKTtyZXR1cm4gaS5vblN1Y2Nlc3Mocy5nZXRUcmFja0lkKCkpLGZiLmluZm8oXCJjcmVhdGUgY2FtZXJhIHZpZGVvIHN1Y2Nlc3MsIHRyYWNrSWQ6XCIsciksc30sY3JlYXRlQ3VzdG9tVmlkZW9UcmFjazpmdW5jdGlvbihlKXtjb25zdCB0PXZiLnJlcG9ydEFwaUludm9rZShudWxsLHt0YWc6ankuVFJBQ0VSLG5hbWU6QnkuQ1JFQVRFX0NVU1RPTV9WSURFT19UUkFDSyxvcHRpb25zOltlXX0pLGk9bmV3IGFVKGUubWVkaWFTdHJlYW1UcmFjayx7d2lkdGg6ZS53aWR0aCxoZWlnaHQ6ZS5oZWlnaHQsZnJhbWVSYXRlOmUuZnJhbWVSYXRlLGJpdHJhdGVNYXg6ZS5iaXRyYXRlTWF4LGJpdHJhdGVNaW46ZS5iaXRyYXRlTWlufSxlLnNjYWxhYmlsdHlNb2RlP3VMKGUuc2NhbGFiaWx0eU1vZGUpOntudW1TcGF0aWFsTGF5ZXJzOjEsbnVtVGVtcG9yYWxMYXllcnM6MX0sZS5vcHRpbWl6YXRpb25Nb2RlLFRBKDgsXCJ0cmFjay1jdXMtXCIpLFttTC5DVVNUT01fVFJBQ0tdKTtyZXR1cm4gdC5vblN1Y2Nlc3MoaS5nZXRUcmFja0lkKCkpLGZiLmluZm8oXCJjcmVhdGUgY3VzdG9tIHZpZGVvIHRyYWNrIHN1Y2Nlc3Mgd2l0aCBjb25maWdcIixlLFwidHJhY2tJZFwiLGkuZ2V0VHJhY2tJZCgpKSxpfSxjcmVhdGVTY3JlZW5WaWRlb1RyYWNrOmFzeW5jIGZ1bmN0aW9uKCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOlwiZGlzYWJsZVwiO2NvbnN0IGk9dmIucmVwb3J0QXBpSW52b2tlKG51bGwse3RhZzpqeS5UUkFDRVIsbmFtZTpCeS5DUkVBVEVfU0NSRUVOX1ZJREVPX1RSQUNLLG9wdGlvbnM6W0dMKHt9LGUpLHRdfSk7ZS5lbmNvZGVyQ29uZmlnP1wic3RyaW5nXCI9PXR5cGVvZiBlLmVuY29kZXJDb25maWd8fGUuZW5jb2RlckNvbmZpZy53aWR0aCYmZS5lbmNvZGVyQ29uZmlnLmhlaWdodHx8KGUuZW5jb2RlckNvbmZpZy53aWR0aD17bWF4OjE5MjB9LGUuZW5jb2RlckNvbmZpZy5oZWlnaHQ9e21heDoxMDgwfSk6ZS5lbmNvZGVyQ29uZmlnPVwiMTA4MHBfMlwiO2NvbnN0IG49ZnVuY3Rpb24oZSl7Y29uc3QgdD17fTtlLnNjcmVlblNvdXJjZVR5cGUmJih0Lm1lZGlhU291cmNlPWUuc2NyZWVuU291cmNlVHlwZSksZS5leHRlbnNpb25JZCYmSnYoKSYmKHQuZXh0ZW5zaW9uSWQ9ZS5leHRlbnNpb25JZCk7Y29uc3R7ZGlzcGxheVN1cmZhY2U6aSxzZWxmQnJvd3NlclN1cmZhY2U6bixzdXJmYWNlU3dpdGNoaW5nOnIsc3lzdGVtQXVkaW86b309ZTsoZXkoMTA3KXx8aXkoMTA3KXx8c3koOTMpKSYmKGkmJih2eShpLFwiZGlzcGxheVN1cmZhY2VcIixbXCJicm93c2VyXCIsXCJ3aW5kb3dcIixcIm1vbml0b3JcIl0pLHQuZGlzcGxheVN1cmZhY2U9aSksbj8odnkobixcInNlbGZCcm93c2VyU3VyZmFjZVwiLFtcImV4Y2x1ZGVcIixcImluY2x1ZGVcIl0pLHQuc2VsZkJyb3dzZXJTdXJmYWNlPW4pOnQuc2VsZkJyb3dzZXJTdXJmYWNlPVwiaW5jbHVkZVwiLHImJih2eShyLFwic3VyZmFjZVN3aXRjaGluZ1wiLFtcImV4Y2x1ZGVcIixcImluY2x1ZGVcIl0pLHQuc3VyZmFjZVN3aXRjaGluZz1yKSksKGV5KDEwNSl8fGl5KDEwNSl8fHN5KDkxKSkmJm8mJih2eShvLFwic3lzdGVtQXVkaW9cIixbXCJleGNsdWRlXCIsXCJpbmNsdWRlXCJdKSx0LnN5c3RlbUF1ZGlvPW8pLGUuZWxlY3Ryb25TY3JlZW5Tb3VyY2VJZCYmKHQuc291cmNlSWQ9ZS5lbGVjdHJvblNjcmVlblNvdXJjZUlkKTtjb25zdCBzPWUuZW5jb2RlckNvbmZpZz9sTChlLmVuY29kZXJDb25maWcpOm51bGw7cmV0dXJuIHQubWFuZGF0b3J5PXtjaHJvbWVNZWRpYVNvdXJjZTpcImRlc2t0b3BcIixtYXhXaWR0aDpzP3Mud2lkdGg6dm9pZCAwLG1heEhlaWdodDpzP3MuaGVpZ2h0OnZvaWQgMH0scyYmKHMuZnJhbWVSYXRlJiYoXCJudW1iZXJcIj09dHlwZW9mIHMuZnJhbWVSYXRlPyh0Lm1hbmRhdG9yeS5tYXhGcmFtZVJhdGU9cy5mcmFtZVJhdGUsdC5tYW5kYXRvcnkubWluRnJhbWVSYXRlPXMuZnJhbWVSYXRlKToodC5tYW5kYXRvcnkubWF4RnJhbWVSYXRlPXMuZnJhbWVSYXRlLm1heHx8cy5mcmFtZVJhdGUuaWRlYWx8fHMuZnJhbWVSYXRlLmV4YWN0fHx2b2lkIDAsdC5tYW5kYXRvcnkubWluRnJhbWVSYXRlPXMuZnJhbWVSYXRlLm1pbnx8cy5mcmFtZVJhdGUuaWRlYWx8fHMuZnJhbWVSYXRlLmV4YWN0fHx2b2lkIDApLHQuZnJhbWVSYXRlPXMuZnJhbWVSYXRlKSxzLndpZHRoJiYodC53aWR0aD1zLndpZHRoKSxzLmhlaWdodCYmKHQuaGVpZ2h0PXMuaGVpZ2h0KSksdH0oZSkscj1UQSg4LFwidHJhY2stc2NyLXYtXCIpO2xldCBvPW51bGwscz1udWxsO2NvbnN0IGE9WlAoKTtpZighYS5zdXBwb3J0U2hhcmVBdWRpbyYmXCJlbmFibGVcIj09PXQpe2NvbnN0IGU9bmV3IEN5KFJ5Lk5PVF9TVVBQT1JURUQsXCJ5b3VyIGJyb3dzZXIgb3IgcGxhdGZvcm0gaXMgbm90IHN1cHBvcnQgc2hhcmUtc2NyZWVuIHdpdGggYXVkaW9cIik7cmV0dXJuIGkub25FcnJvcihlKSxlLnRocm93KGZiKX1mYi5pbmZvKFwic3RhcnQgY3JlYXRlIHNjcmVlbiB2aWRlbyB0cmFjayB3aXRoIGNvbmZpZ1wiLGUsXCJ3aXRoQXVkaW9cIix0LFwidHJhY2tJZFwiLHIpO3RyeXtjb25zdCBlPWF3YWl0IGFrKHtzY3JlZW46bixzY3JlZW5BdWRpbzpcImF1dG9cIj09PXQ/YS5zdXBwb3J0U2hhcmVBdWRpbzpcImVuYWJsZVwiPT09dH0scik7bz1lLmdldFZpZGVvVHJhY2tzKClbMF18fG51bGwscz1lLmdldEF1ZGlvVHJhY2tzKClbMF18fG51bGx9Y2F0Y2goZSl7dGhyb3cgaS5vbkVycm9yKGUpLGV9aWYoIW8pe2NvbnN0IGU9bmV3IEN5KFJ5LlVORVhQRUNURURfRVJST1IsXCJjYW4gbm90IGZpbmQgdHJhY2sgaW4gbWVkaWEgc3RyZWFtXCIpO3JldHVybiBpLm9uRXJyb3IoZSksZS50aHJvdyhmYil9aWYoIXMmJlwiZW5hYmxlXCI9PT10KXtvJiZvLnN0b3AoKTtjb25zdCBlPW5ldyBDeShSeS5TSEFSRV9BVURJT19OT1RfQUxMT1dFRCk7cmV0dXJuIGkub25FcnJvcihlKSxlLnRocm93KGZiKX1lLm9wdGltaXphdGlvbk1vZGV8fChlLm9wdGltaXphdGlvbk1vZGU9XCJkZXRhaWxcIiksZS5vcHRpbWl6YXRpb25Nb2RlJiYoZFUocixvLGUsZS5lbmNvZGVyQ29uZmlnJiZsTChlLmVuY29kZXJDb25maWcpfHx2b2lkIDApLGUuZW5jb2RlckNvbmZpZyYmXCJzdHJpbmdcIiE9dHlwZW9mIGUuZW5jb2RlckNvbmZpZyYmKGUuZW5jb2RlckNvbmZpZy5iaXRyYXRlTWluPWUuZW5jb2RlckNvbmZpZy5iaXRyYXRlTWF4KSk7Y29uc3QgYz1uZXcgYVUobyxlLmVuY29kZXJDb25maWc/bEwoZS5lbmNvZGVyQ29uZmlnKTp7fSxlLnNjYWxhYmlsdHlNb2RlP3VMKGUuc2NhbGFiaWx0eU1vZGUpOntudW1TcGF0aWFsTGF5ZXJzOjEsbnVtVGVtcG9yYWxMYXllcnM6MX0sZS5vcHRpbWl6YXRpb25Nb2RlLHIsW21MLlNDUkVFTl9UUkFDS10pO2lmKCFzKXJldHVybiBpLm9uU3VjY2VzcyhjLmdldFRyYWNrSWQoKSksZmIuaW5mbyhcImNyZWF0ZSBzY3JlZW4gdmlkZW8gdHJhY2sgc3VjY2Vzc1wiLFwidmlkZW86XCIsYy5nZXRUcmFja0lkKCkpLGM7Y29uc3QgZD1uZXcgVE0ocyx2b2lkIDAsVEEoOCxcInRyYWNrLXNjci1hLVwiKSwhMSk7cmV0dXJuIGkub25TdWNjZXNzKFtjLmdldFRyYWNrSWQoKSxkLmdldFRyYWNrSWQoKV0pLGZiLmluZm8oXCJjcmVhdGUgc2NyZWVuIHZpZGVvIHRyYWNrIHN1Y2Nlc3NcIixcInZpZGVvOlwiLGMuZ2V0VHJhY2tJZCgpLFwiYXVkaW86XCIsZC5nZXRUcmFja0lkKCkpLFtjLGRdfSxjcmVhdGVNaWNyb3Bob25lQW5kQ2FtZXJhVHJhY2tzOmFzeW5jIGZ1bmN0aW9uKCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9O2NvbnN0IGk9WEEoXCJDQU1FUkFfQ0FQVFVSRV9DT05GSUdcIiksbj12Yi5yZXBvcnRBcGlJbnZva2UobnVsbCx7dGFnOmp5LlRSQUNFUixuYW1lOkJ5LkNSRUFURV9NSUNfQU5EX0NBTV9UUkFDS1Msb3B0aW9uczpbZSx0LGldfSk7aSYmKHQuZW5jb2RlckNvbmZpZz1pKTtjb25zdCByPUFrKHQpLG89YmsoZSkscz1UQSg4LFwidHJhY2stbWljLVwiKSxhPVRBKDgsXCJ0cmFjay1jYW0tXCIpO2xldCBjPW51bGwsZD1udWxsO2ZiLmluZm8oXCJzdGFydCBjcmVhdGUgY2FtZXJhIHZpZGVvIHRyYWNrKFwiLmNvbmNhdChhLFwiKSBhbmQgbWljcm9waG9uZSBhdWRpbyB0cmFjayhcIikuY29uY2F0KHMsXCIpIHdpdGggY29uZmlnLCBhdWRpbzogXCIpLmNvbmNhdChKU09OLnN0cmluZ2lmeShlKSxcIiwgdmlkZW86IFwiKS5jb25jYXQoSlNPTi5zdHJpbmdpZnkodCkpKTt0cnl7Y29uc3QgZT1hd2FpdCBhayh7YXVkaW86byx2aWRlbzpyfSxcIlwiLmNvbmNhdChzLFwiLVwiKS5jb25jYXQoYSkpO2M9ZS5nZXRBdWRpb1RyYWNrcygpWzBdLGQ9ZS5nZXRWaWRlb1RyYWNrcygpWzBdfWNhdGNoKGUpe3Rocm93IG4ub25FcnJvcihlKSxlfWlmKCFjfHwhZCl7Y29uc3QgZT1uZXcgQ3koUnkuVU5FWFBFQ1RFRF9FUlJPUixcImNhbiBub3QgZmluZCB0cmFja3MgaW4gbWVkaWEgc3RyZWFtXCIpO3JldHVybiBuLm9uRXJyb3IoZSksZS50aHJvdyhmYil9dC5vcHRpbWl6YXRpb25Nb2RlJiZkVShhLGQsdCxkTCh0LmVuY29kZXJDb25maWcpKTtjb25zdCBsPW5ldyBTTShjLGUsbyxzKSx1PW5ldyBjVShkLHQscix0LnNjYWxhYmlsdHlNb2RlP3VMKHQuc2NhbGFiaWx0eU1vZGUpOntudW1TcGF0aWFsTGF5ZXJzOjEsbnVtVGVtcG9yYWxMYXllcnM6MX0sdC5vcHRpbWl6YXRpb25Nb2RlLGEpO3JldHVybiBuLm9uU3VjY2VzcyhbbC5nZXRUcmFja0lkKCksdS5nZXRUcmFja0lkKCldKSxmYi5pbmZvKFwiY3JlYXRlIGNhbWVyYSB2aWRlbyB0cmFjayhcIi5jb25jYXQoYSxcIikgYW5kIG1pY3JvcGhvbmUgYXVkaW8gdHJhY2soXCIpLmNvbmNhdChzLFwiKSBzdWNjZXNzXCIpKSxbbCx1XX0sY3JlYXRlTWljcm9waG9uZUF1ZGlvVHJhY2s6YXN5bmMgZnVuY3Rpb24oKXtsZXQgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e307Y29uc3QgdD12Yi5yZXBvcnRBcGlJbnZva2UobnVsbCx7dGFnOmp5LlRSQUNFUixuYW1lOkJ5LkNSRUFURV9NSUNfQVVESU9fVFJBQ0ssb3B0aW9uczpbZV19KSxpPWJrKGUpLG49VEEoOCxcInRyYWNrLW1pYy1cIik7bGV0IHI9bnVsbDtmYi5pbmZvKFwic3RhcnQgY3JlYXRlIG1pY3JvcGhvbmUgYXVkaW8gdHJhY2sgd2l0aCBjb25maWdcIixKU09OLnN0cmluZ2lmeShlKSxcInRyYWNrSWRcIixuKTt0cnl7cj0oYXdhaXQgYWsoe2F1ZGlvOml9LG4pKS5nZXRBdWRpb1RyYWNrcygpWzBdfHxudWxsfWNhdGNoKGUpe3Rocm93IHQub25FcnJvcihlKSxlfWlmKCFyKXtjb25zdCBlPW5ldyBDeShSeS5VTkVYUEVDVEVEX0VSUk9SLFwiY2FuIG5vdCBmaW5kIHRyYWNrIGluIG1lZGlhIHN0cmVhbVwiKTtyZXR1cm4gdC5vbkVycm9yKGUpLGUudGhyb3coZmIpfWNvbnN0IG89bmV3IFNNKHIsZSxpLG4pO3JldHVybiB0Lm9uU3VjY2VzcyhvLmdldFRyYWNrSWQoKSksZmIuaW5mbyhcImNyZWF0ZSBtaWNyb3Bob25lIGF1ZGlvIHRyYWNrIHN1Y2Nlc3MsIHRyYWNrSWQ6XCIsbiksb30sY3JlYXRlQ3VzdG9tQXVkaW9UcmFjazpmdW5jdGlvbihlKXtjb25zdCB0PXZiLnJlcG9ydEFwaUludm9rZShudWxsLHt0YWc6ankuVFJBQ0VSLG5hbWU6QnkuQ1JFQVRFX0NVU1RPTV9BVURJT19UUkFDSyxvcHRpb25zOltlXX0pLGk9bmV3IFRNKGUubWVkaWFTdHJlYW1UcmFjayxlLmVuY29kZXJDb25maWc/cEwoZS5lbmNvZGVyQ29uZmlnKTp7fSxUQSg4LFwidHJhY2stY3VzLVwiKSwhMSk7cmV0dXJuIGZiLmluZm8oXCJjcmVhdGUgY3VzdG9tIGF1ZGlvIHRyYWNrIHN1Y2Nlc3Mgd2l0aCBjb25maWdcIixlLFwidHJhY2tJZFwiLGkuZ2V0VHJhY2tJZCgpKSx0Lm9uU3VjY2VzcyhpLmdldFRyYWNrSWQoKSksaX0sY3JlYXRlQnVmZmVyU291cmNlQXVkaW9UcmFjazphc3luYyBmdW5jdGlvbihlKXt2YXIgdDtjb25zdHtjYWNoZU9ubGluZUZpbGU6aSxlbmNvZGVyQ29uZmlnOm59PWU7bGV0e3NvdXJjZTpyfT1lO2NvbnN0IG89e3NvdXJjZTpyIGluc3RhbmNlb2YgQXVkaW9CdWZmZXI/XCJBdWRpb0J1ZmZlclwiOnIgaW5zdGFuY2VvZiBGaWxlP251bGwhPT0odD1GaWxlLm5hbWUpJiZ2b2lkIDAhPT10P3Q6XCJGaWxlXCI6cixjYWNoZU9ubGluZUZpbGU6aSxlbmNvZGVyQ29uZmlnOm59LHM9dmIucmVwb3J0QXBpSW52b2tlKG51bGwse3RhZzpqeS5UUkFDRVIsbmFtZTpCeS5DUkVBVEVfQlVGRkVSX0FVRElPX1RSQUNLLG9wdGlvbnM6W29dfSk7aWYoWEEoXCJESVNBQkxFX1dFQkFVRElPXCIpKXRocm93IG5ldyBDeShSeS5OT1RfU1VQUE9SVEVELFwiY2FuIG5vdCBjcmVhdGUgQnVmZmVyU291cmNlQXVkaW9UcmFjayB3aGVuIFdlYkF1ZGlvIGRpc2FibGVkXCIpO2NvbnN0IGE9VEEoOCxcInRyYWNrLWJ1Zi1cIik7ZmIuaW5mbyhcInN0YXJ0IGNyZWF0ZSBidWZmZXIgc291cmNlIGF1ZGlvIHRyYWNrIHdpdGggY29uZmlnXCIsSlNPTi5zdHJpbmdpZnkobyksXCJ0cmFja0lkXCIsYSk7Y29uc3QgYz1yO2lmKCEociBpbnN0YW5jZW9mIEF1ZGlvQnVmZmVyKSl0cnl7cj1hd2FpdCBhc3luYyBmdW5jdGlvbihlLHQpe2xldCBpPW51bGw7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpe2NvbnN0IHQ9SU0uZ2V0KGUpO2lmKHQpcmV0dXJuIGZiLmRlYnVnKFwidXNlIGNhY2hlZCBhdWRpbyByZXNvdXJjZTogXCIsZSksdDt0cnl7aT0oYXdhaXQga0EoKCgpPT5Mdi5nZXQoZSx7cmVzcG9uc2VUeXBlOlwiYXJyYXlidWZmZXJcIn0pKSx2b2lkIDAsdm9pZCAwLHttYXhSZXRyeUNvdW50OjN9KSkuZGF0YX1jYXRjaChlKXt0aHJvdyBuZXcgQ3koUnkuRkVUQ0hfQVVESU9fRklMRV9GQUlMRUQsZS50b1N0cmluZygpKX19ZWxzZXtjb25zdCB0PW5ldyBHaCgoKHQsaSk9Pntjb25zdCBuPW5ldyBGaWxlUmVhZGVyO24ub25sb2FkPWU9PntlLnRhcmdldD90KGUudGFyZ2V0LnJlc3VsdCk6aShuZXcgQ3koUnkuUkVBRF9MT0NBTF9BVURJT19GSUxFX0VSUk9SKSl9LG4ub25lcnJvcj0oKT0+e2kobmV3IEN5KFJ5LlJFQURfTE9DQUxfQVVESU9fRklMRV9FUlJPUikpfSxuLnJlYWRBc0FycmF5QnVmZmVyKGUpfSkpO2k9YXdhaXQgdH1jb25zdCBuPWF3YWl0IGZ1bmN0aW9uKGUpe2NvbnN0IHQ9ekwoKTtyZXR1cm4gbmV3IEdoKCgoaSxuKT0+e3QuZGVjb2RlQXVkaW9EYXRhKGUsKGU9PntpKGUpfSksKGU9PntuKG5ldyBDeShSeS5ERUNPREVfQVVESU9fRklMRV9GQUlMRUQsZS50b1N0cmluZygpKSl9KSl9KSl9KGkpO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlJiZ0JiZJTS5zZXQoZSxuKSxufShyLGkpfWNhdGNoKGUpe3JldHVybiBzLm9uRXJyb3IoZSksZS50aHJvdyhmYil9Y29uc3QgZD1uZXcgQ00ociksbD1uZXcgZ00oYyxkLG4/cEwobik6e30sYSk7cmV0dXJuIGZiLmluZm8oXCJjcmVhdGUgYnVmZmVyIHNvdXJjZSBhdWRpbyB0cmFjayBzdWNjZXNzLCB0cmFja0lkOlwiLGEpLHMub25TdWNjZXNzKGwuZ2V0VHJhY2tJZCgpKSxsfSxzZXRBcHBUeXBlOmZ1bmN0aW9uKGUpe2lmKGZiLmRlYnVnKFwic2V0QXBwVHlwZTogXCIuY29uY2F0KGUpKSwhKE51bWJlci5pc0ludGVnZXIoZSkmJmU+PTApKXRocm93IGZiLmRlYnVnKFwiSW52YWxpZCBhcHBUeXBlXCIpLG5ldyB5YihSeS5JTlZBTElEX1BBUkFNUyxcImludmFsaWQgYXBwIHR5cGVcIixlKTtKQShcIkFQUF9UWVBFXCIsTWF0aC5mbG9vcihlKSl9LHNldExvZ0xldmVsOmZ1bmN0aW9uKGUpe2ZiLnNldExvZ0xldmVsKGUpfSxlbmFibGVMb2dVcGxvYWQ6ZnVuY3Rpb24oKXtYQShcIlVTRV9ORVdfTE9HXCIpP0pBKFwiVVBMT0FEX0xPR1wiLCEwKTpmYi5lbmFibGVMb2dVcGxvYWQoKX0sZGlzYWJsZUxvZ1VwbG9hZDpmdW5jdGlvbigpe1hBKFwiVVNFX05FV19MT0dcIik/SkEoXCJVUExPQURfTE9HXCIsITEpOmZiLmRpc2FibGVMb2dVcGxvYWQoKX0sY3JlYXRlQ2hhbm5lbE1lZGlhUmVsYXlDb25maWd1cmF0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBQRn0sY2hlY2tBdWRpb1RyYWNrSXNBY3RpdmU6YXN5bmMgZnVuY3Rpb24oZSl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOjVlMztjb25zdCBpPXZiLnJlcG9ydEFwaUludm9rZShudWxsLHt0YWc6ankuVFJBQ0VSLG5hbWU6QnkuQ0hFQ0tfQVVESU9fVFJBQ0tfSVNfQUNUSVZFLG9wdGlvbnM6W3RdfSk7aWYoIShlIGluc3RhbmNlb2YgVE18fGUgaW5zdGFuY2VvZiB2VSkpe2NvbnN0IGU9bmV3IHliKFJ5LklOVkFMSURfVFJBQ0ssXCJ0aGUgcGFyYW1ldGVyIGlzIG5vdCBhIGF1ZGlvIHRyYWNrXCIpO3JldHVybiBpLm9uRXJyb3IoZSksZS50aHJvdygpfXQmJnQ8MWUzJiYodD0xZTMpO2NvbnN0IG49ZSBpbnN0YW5jZW9mIFRNP2UuZ2V0VHJhY2tMYWJlbCgpOlwicmVtb3RlX3RyYWNrXCIscj1lLmdldFZvbHVtZUxldmVsKCk7bGV0IG89cixzPXI7Y29uc3QgYT1EYXRlLm5vdygpO3JldHVybiBuZXcgR2goKHI9Pntjb25zdCBjPXNldEludGVydmFsKCgoKT0+e2NvbnN0IGQ9ZS5nZXRWb2x1bWVMZXZlbCgpO289ZD5vP2Q6byxzPWQ8cz9kOnM7Y29uc3QgbD1vLXM+MWUtNCx1PURhdGUubm93KCktYTtpZihsfHx1PnQpe2NsZWFySW50ZXJ2YWwoYyk7Y29uc3QgdD1sLHM9e2R1cmF0aW9uOnUsZGV2aWNlTGFiZWw6bixtYXhWb2x1bWVMZXZlbDpvLHJlc3VsdDp0fTtmYi5pbmZvKFwiW3RyYWNrLVwiLmNvbmNhdChlLmdldFRyYWNrSWQoKSxcIl0gY2hlY2sgYXVkaW8gdHJhY2sgYWN0aXZlIGNvbXBsZXRlZC4gXCIpLmNvbmNhdChKU09OLnN0cmluZ2lmeShzKSkpLGkub25TdWNjZXNzKHMpLHIodCl9fSksMjAwKX0pKX0sY2hlY2tWaWRlb1RyYWNrSXNBY3RpdmU6YXN5bmMgZnVuY3Rpb24oZSl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOjVlMztjb25zdCBpPXZiLnJlcG9ydEFwaUludm9rZShudWxsLHt0YWc6ankuVFJBQ0VSLG5hbWU6QnkuQ0hFQ0tfVklERU9fVFJBQ0tfSVNfQUNUSVZFLG9wdGlvbnM6W3RdfSk7aWYoIShlIGluc3RhbmNlb2YgYVV8fGUgaW5zdGFuY2VvZiBJVSkpe2NvbnN0IGU9bmV3IHliKFJ5LklOVkFMSURfVFJBQ0ssXCJ0aGUgcGFyYW1ldGVyIGlzIG5vdCBhIHZpZGVvIHRyYWNrXCIpO3JldHVybiBpLm9uRXJyb3IoZSksZS50aHJvdygpfXQmJnQ8MWUzJiYodD0xZTMpO2NvbnN0IG49ZSBpbnN0YW5jZW9mIGFVP2UuZ2V0VHJhY2tMYWJlbCgpOlwicmVtb3RlX3RyYWNrXCIscj1lLmdldE1lZGlhU3RyZWFtVHJhY2soITApLG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInZpZGVvXCIpO28uc3R5bGUud2lkdGg9XCIxcHhcIixvLnN0eWxlLmhlaWdodD1cIjFweFwiLG8uc2V0QXR0cmlidXRlKFwibXV0ZWRcIixcIlwiKSxvLm11dGVkPSEwLG8uc2V0QXR0cmlidXRlKFwicGxheXNpbmxpbmVcIixcIlwiKSxvLmNvbnRyb2xzPSExLChYdigpfHx6digpKSYmKG8uc3R5bGUub3BhY2l0eT1cIjAuMDFcIixvLnN0eWxlLnBvc2l0aW9uPVwiZml4ZWRcIixvLnN0eWxlLmxlZnQ9XCIwXCIsby5zdHlsZS50b3A9XCIwXCIsZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChvKSksby5zcmNPYmplY3Q9bmV3IE1lZGlhU3RyZWFtKFtyXSksby5wbGF5KCk7Y29uc3Qgcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO3Mud2lkdGg9MTYwLHMuaGVpZ2h0PTEyMDtsZXQgYT0wLGM9MDt0cnl7Y29uc3QgZT1EYXRlLm5vdygpO2E9YXdhaXQgZnVuY3Rpb24oZSx0LGksbil7bGV0IHIsbz0wLHM9bnVsbDtyZXR1cm4gbmV3IEdoKCgoYSxjKT0+e2Z1bmN0aW9uIGQoKXtvPm4mJnImJihyKCksYShvKSk7Y29uc3QgdD1pLmdldENvbnRleHQoXCIyZFwiKTtpZighdCl7Y29uc3QgZT1uZXcgeWIoUnkuVU5FWFBFQ1RFRF9FUlJPUixcImNhbiBub3QgZ2V0IGNhbnZhcyAyZCBjb250ZXh0LlwiKTtyZXR1cm4gZmIuZXJyb3IoZS50b1N0cmluZygpKSx2b2lkIGMoZSl9dC5kcmF3SW1hZ2UoZSwwLDAsMTYwLDEyMCk7Y29uc3QgZD10LmdldEltYWdlRGF0YSgwLDAsaS53aWR0aCxpLmhlaWdodCksbD1NYXRoLmZsb29yKGQuZGF0YS5sZW5ndGgvMyk7aWYocyl7Zm9yKGxldCBlPTA7ZTxsO2UrPTMpaWYoZC5kYXRhW2VdIT09c1tlXSlyZXR1cm4gbys9MSx2b2lkKHM9ZC5kYXRhKTtzPWQuZGF0YX1lbHNlIHM9ZC5kYXRhfXNldFRpbWVvdXQoKCgpPT57ciYmKHIoKSxhKG8pKX0pLHQpLHI9UUwoKCgpPT57ZCgpfSksMzApfSkpfShvLHQscyw0KSxjPURhdGUubm93KCktZX1jYXRjaChlKXt0aHJvdyBpLm9uRXJyb3IoZSksZX1EQj09PUJ2LlNBRkFSSSYmKG8ucGF1c2UoKSxvLnJlbW92ZSgpKSxvLnNyY09iamVjdD1udWxsO2NvbnN0IGQ9YT40LGw9e2R1cmF0aW9uOmMsY2hhbmdlZFBpY051bTphLGRldmljZUxhYmVsOm4scmVzdWx0OmR9O3JldHVybiBmYi5pbmZvKFwiW3RyYWNrLVwiLmNvbmNhdChlLmdldFRyYWNrSWQoKSxcIl0gY2hlY2sgdmlkZW8gdHJhY2sgYWN0aXZlIGNvbXBsZXRlZC4gXCIpLmNvbmNhdChKU09OLnN0cmluZ2lmeShsKSkpLGkub25TdWNjZXNzKGwpLGR9LHNldEFyZWE6YngsYXVkaW9FbGVtZW50UGxheUNlbnRlcjptayxyZXN1bWVBdWRpb0NvbnRleHQ6ZnVuY3Rpb24oKXttay5hdXRvUmVzdW1lQWZ0ZXJJbnRlcnJ1cHRpb24oITApfSxwcm9jZXNzRXh0ZXJuYWxNZWRpYUFFQzpmdW5jdGlvbihlKXtPRy5wcm9jZXNzRXh0ZXJuYWxNZWRpYUFFQyhlKX0scmVnaXN0ZXJFeHRlbnNpb25zOmZ1bmN0aW9uKGUpe2NvbnN0IHQ9WEEoXCJQTFVHSU5fSU5GT1wiKXx8W107ZS5mb3JFYWNoKChlPT57XCJuYW1lXCJpbiBlJiYhRG4odCkuY2FsbCh0LGUubmFtZSkmJnQucHVzaChlLm5hbWUpO2NvbnN0IGk9ZTtpLl9fcmVnaXN0ZXJlZF9fPSEwLGkubG9nZ2VyLmhvb2tMb2c9ZmIuZXh0TG9nLGkucmVwb3J0ZXIuaG9va0FwaUludm9rZT12Yi5leHRBcGlJbnZva2UsaS5wYXJhbWV0ZXJzJiZPYmplY3Qua2V5cyhpLnBhcmFtZXRlcnMpLmZvckVhY2goKGU9PntpLnBhcmFtZXRlcnNbZV09WEEoZSl9KSl9KSksaXEoXCJQTFVHSU5fSU5GT1wiLHQpfSxDaGFubmVsTWVkaWFSZWxheUVycm9yOlF3LENoYW5uZWxNZWRpYVJlbGF5RXZlbnQ6SncsQ2hhbm5lbE1lZGlhUmVsYXlTdGF0ZTpYdyxSZW1vdGVTdHJlYW1GYWxsYmFja1R5cGU6Z0wsUmVtb3RlU3RyZWFtVHlwZTpTTCxDb25uZWN0aW9uRGlzY29ubmVjdGVkUmVhc29uOkh5LEF1ZGllbmNlTGF0ZW5jeUxldmVsVHlwZTpXeSxBUkVBUzppTyxwcmVsb2FkOmFzeW5jIGZ1bmN0aW9uKGUsdCxpLG4pe3JldHVybiBLQihlLHQsaSxuKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydGllcyhucSx7b25BdWRpb0F1dG9wbGF5RmFpbGVkOntnZXQ6KCk9PnBrLm9uQXVkaW9BdXRvcGxheUZhaWxlZCxzZXQ6ZT0+e3BrLm9uQXVkaW9BdXRvcGxheUZhaWxlZD1lfX0sb25BdXRvcGxheUZhaWxlZDp7Z2V0OigpPT5way5vbkF1dG9wbGF5RmFpbGVkLHNldDplPT57cGsub25BdXRvcGxheUZhaWxlZD1lfX0sX29uU2VjdXJpdHlQb2xpY3lWaW9sYXRpb246e3ZhbHVlOnZvaWQgMCx3cml0YWJsZTohMH0sX2NzcEV2ZW50SGFuZGxlclBvaW50ZXI6e3ZhbHVlOnZvaWQgMCx3cml0YWJsZTohMH0sb25TZWN1cml0eVBvbGljeVZpb2xhdGlvbjp7Z2V0OigpPT5ucS5fb25TZWN1cml0eVBvbGljeVZpb2xhdGlvbixzZXQoZSl7bnEuX29uU2VjdXJpdHlQb2xpY3lWaW9sYXRpb249ZSxMRyhlKX19LF9fQ0xJRU5UX0xJU1RfXzp7Z2V0OigpPT5YQShcIlNIT1dfR0xPQkFMX0NMSUVOVF9MSVNUXCIpP3diOltdfX0pLHVrLm9uKGtMLkNBTUVSQV9ERVZJQ0VfQ0hBTkdFRCwoZT0+e2ZiLmluZm8oXCJjYW1lcmEgZGV2aWNlIGNoYW5nZWRcIixKU09OLnN0cmluZ2lmeShlKSksbnEub25DYW1lcmFDaGFuZ2VkJiZucS5vbkNhbWVyYUNoYW5nZWQoZSksbnEuc2FmZUVtaXQoU08uQ0FNRVJBX0NIQU5HRUQsZSl9KSksdWsub24oa0wuUkVDT1JESU5HX0RFVklDRV9DSEFOR0VELChlPT57ZmIuaW5mbyhcIm1pY3JvcGhvbmUgZGV2aWNlIGNoYW5nZWRcIixKU09OLnN0cmluZ2lmeShlKSksbnEub25NaWNyb3Bob25lQ2hhbmdlZCYmbnEub25NaWNyb3Bob25lQ2hhbmdlZChlKSxucS5zYWZlRW1pdChTTy5NSUNST1BIT05FX0NIQU5HRUQsZSl9KSksdWsub24oa0wuUExBWU9VVF9ERVZJQ0VfQ0hBTkdFRCwoZT0+e2ZiLmRlYnVnKFwicGxheW91dCBkZXZpY2UgY2hhbmdlZFwiLEpTT04uc3RyaW5naWZ5KGUpKSxucS5vblBsYXliYWNrRGV2aWNlQ2hhbmdlZCYmbnEub25QbGF5YmFja0RldmljZUNoYW5nZWQoZSksbnEuc2FmZUVtaXQoU08uUExBWUJBQ0tfREVWSUNFX0NIQU5HRUQsZSl9KSksbWsub25BdXRvcGxheUZhaWxlZD0oKT0+e2ZiLmluZm8oXCJkZXRlY3QgYXVkaW8gZWxlbWVudCBhdXRvcGxheSBmYWlsZWRcIikscGsub25BdWRpb0F1dG9wbGF5RmFpbGVkJiZway5vbkF1ZGlvQXV0b3BsYXlGYWlsZWQoKX0scUwub24oXCJhdXRvcGxheS1mYWlsZWRcIiwoKCk9PntmYi5pbmZvKFwiZGV0ZWN0IHdlYmF1ZGlvIGF1dG9wbGF5IGZhaWxlZFwiKSxway5vbkF1ZGlvQXV0b3BsYXlGYWlsZWQmJnBrLm9uQXVkaW9BdXRvcGxheUZhaWxlZCgpLG5xLnNhZmVFbWl0KFNPLkFVVE9QTEFZX0ZBSUxFRCl9KSkscUwub24odEwuU1RBVEVfQ0hBTkdFLCgoZSx0KT0+e2ZiLmluZm8oXCJhdWRpbyBjb250ZXh0IHN0YXRlIGNoYW5nZWQ6IFwiLmNvbmNhdCh0LFwiID0+IFwiKS5jb25jYXQoZSkpLG5xLm9uQXVkaW9Db250ZXh0U3RhdGVDaGFuZ2VkJiZucS5vbkF1ZGlvQ29udGV4dFN0YXRlQ2hhbmdlZChlLHQpLG5xLnNhZmVFbWl0KFNPLkFVRElPX0NPTlRFWFRfU1RBVEVfQ0hBTkdFRCxlLHQpfSkpLGlBLm9uKFF5Lk5FVFdPUktfU1RBVEVfQ0hBTkdFLCgoZSx0KT0+e2ZiLmluZm8oXCJbbmV0d29yay1pbmRpY2F0b3JdIG5ldHdvcmsgc3RhdGUgY2hhbmdlZCwgXCIuY29uY2F0KHQsXCIgPT4gXCIpLmNvbmNhdChlKSl9KSksd2luZG93JiYod2luZG93Ll9fQVJUQ19fPW5xKTtleHBvcnR7bnEgYXMgZGVmYXVsdH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.esm.mjs\n");

/***/ })

};
;